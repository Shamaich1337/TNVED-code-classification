[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ENC28J60-I/SO production of MICROCHIP TECHNOLOGY from the text:\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 1\nENC28J60\nEthernet Controller Features\n• IEEE 802.3™ Compatible Ethernet Controller\n• Fully Compatible with 10/100/1000Base-T Networks\n• Integrated MAC and 10Base-T PHY• Supports One 10Base-T Port with Automatic \nPolarity Detection and Correction\n• Supports Full and Half-Duplex modes\n• Programmable Automatic Retransmit on Collision\n• Programmable Padding and CRC Generation• Programmable Automatic Rejection of Erroneous \nPackets\n• SPI Interface with Clock Speeds up to 20 MHz\nBuffer \n• 8-Kbyte Transmit/Receive Packet Dual Port SRAM\n• Configurable Transmit/Receive Buffer Size\n• Hardware Managed Circular Receive FIFO• Byte-Wide Random and Sequential Access with \nAuto-Increment\n• Internal DMA for Fast Data Movement\n• Hardware Assisted Checksum Calculation for \nVarious Network Protocols\nMedium Access Controller (MAC) \nFeatures\n• Supports Unicast, Multicast and Broadcast \nPackets\n• Programmable Receive Packet Filtering and Wake-up \nHost on Logical AND or OR of the Following:\n- Unicast destination address\n- Multicast address- Broadcast address\n- Magic Packet™\n- Group destination addresses as defined by \n64-bit Hash Table\n- Programmable Pattern Matching of up to \n64 bytes at user-defined offset\nPhysical Layer (PHY) Features\n• Loopback mode\n• Two Programmable LED Outputs for LINK, TX, \nRX, Collision and Full/Half-Duplex StatusOperational\n• Six Interrupt Sources and One Interrupt Output Pin\n• 25 MHz Clock Input Requirement• Clock Out Pin with Programmable Prescaler• Operating Voltage of 3.1V to 3.6V (3.3V typical)• 5V Tolerant Inputs• Temperature Range: -40°C to +85°C Industrial, \n0°C to +70°C Commercial (SSOP only)\n• 28-Pin SPDIP, SSOP, SOIC, QFN Packages\nPackage TypesENC28J6028-Pin SPDIP, SSOP, SOIC\n1\n2\n34\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14 1516171819202122232425262728\nOSC2\nOSC1LEDA\nLEDBTPIN+TPIN- INT\nNC(1) 1\n2\n3\n4\n5\n6\n7\n89 1 028 27 26 25 24 23 22\n21\n20\n19\nENC28J60\n11 12 13 1418\n1716\n15VDDOSCVDDTX\nTPOUT+TPOUT-28-Pin QFN(2)\nRESETCSSO\nSI\nSCK\nRBIASVSSRX\nCLKOUT\nVCAP\nVDDRXVSSOSC\nVDDPLLVSSPLLVSSTXVDDVSSVCAP\nOSC2\nOSC1\nVDDRX\nVSSTX\nTPOUT+\nTPOUT-LEDA\nLEDB\nVDDOSC\nVSSOSC\nVDDTXVDDPLLVSSPLLCLKOUT\nRESETCSSO\nSI\nTPIN+TPIN-\nRBIASINT\nNC(1)\nSCKVDD\nVSS\nVSSRX\nNote 1: Reserved pin; always leave disconnected.\n2:The back pad on QFN devices should be connected \nto Vss.Stand-Alone Ethernet Controller with SPI Interface\nENC28J60\nDS39662E-page 2 . \uf0e3 2006-2012 Microchip Technology Inc.Table of Contents\n1.0 Overview .................................................................................................................... .................................................................. 3\n2.0 External Connections ........................................................................................................ ........................................................... 5\n3.0 Memory Organization ......................................................................................................... ........................................................ 11\n4.0 Serial Peripheral Interface (SPI)........................................................................................... ...................................................... 25\n5.0 Ethernet Overview........................................................................................................... ........................................................... 31\n6.0 Initialization.............................................................................................................. ................................................................... 33\n7.0 Transmitting and Receiving Packets .......................................................................................... ................................................ 39\n8.0 Receive Filters............................................................................................................. ............................................................... 47\n9.0 Duplex Mode Configuration and Negotiation................................................................................... ........................................... 53\n10.0 Flow Control ............................................................................................................... ................................................................ 55\n11.0 Reset ...................................................................................................................... .................................................................... 59\n12.0 Interrupts ................................................................................................................. ................................................................... 63\n13.0 Direct Memory Access Controller............................................................................................ ................................................... 71\n14.0 Power-Down................................................................................................................. .............................................................. 73\n15.0 Built-in Self-Test Controller .............................................................................................. .......................................................... 75\n16.0 Electrical Characteristics ................................................................................................. ........................................................... 79\n17.0 Packaging Information...................................................................................................... .......................................................... 83\nAppendix A: Revision History................................................................................................... ............................................................ 93\nThe Microchip Web Site......................................................................................................... .............................................................. 95\nCustomer Change Notification Service ........................................................................................... ..................................................... 95\nCustomer Support............................................................................................................... ................................................................. 95\nReader Response ................................................................................................................ ................................................................ 96\nProduct Identification System.................................................................................................. ............................................................. 99\nTO OUR VALUED CUSTOMERS\nIt is our intention to provide our valued customers with the best documentation possible to ensure successful use of your Micro chip\nproducts. To this end, we will continue to improve our publications to better suit  your needs. Our publications will be refined  and\nenhanced as new volumes and updates are introduced. \nIf you have any questions or comments regar ding this publication, please contact the Marketing Communications Department via\nE-mail at docerrors@microchip.com  or fax the Reader Response Form  in the back of this data sheet to (480) 792-4150. We\nwelcome your feedback.\nMost Current Data Sheet\nTo obtain the most up-to-date version of this data s heet, please register at our Worldwide Web site at:\nhttp://www.microchip.com\nYou can determine the version of a data sheet  by examining its literature number found on the bottom outside corner of any page .\nThe last character of the literature number is the vers ion number, (e.g., DS30000A is version A of document DS30000).\nErrata\nAn errata sheet, describing minor operational differences fr om the data sheet and recommended workarounds, may exist for curren t\ndevices. As device/documentation issues become known to us, we will publish an errata sheet. The errata will specify the revisi on\nof silicon and revision of document to which it applies.\nTo determine if an errata sheet exists for a particul ar device, please check with one of the following:\n• Microchip’s Worldwide Web site; http://www.microchip.com\n• Your local Microchip sales office (see last page)\nWhen contacting a sales office, please spec ify which device, revision of silicon and data sheet (include literature number) you  are\nusing.\nCustomer Notification System\nRegister on our web site at www.microchip.com  to receive the most current information on all of our products.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 3ENC28J60\n1.0 OVERVIEW\nThe ENC28J60 is a stand-alone Ethernet controller\nwith an industry standard Serial Peripheral Interface\n(SPI). It is designed to serve as an Ethernet networkinterface for any controller equipped with SPI.\nThe ENC28J60 meets all of the IEEE 802.3 specifica-\ntions. It incorporates a number of packet filtering\nschemes to limit incoming packets. It also provides aninternal DMA module for fast data throughput and hard-\nware assisted checksum calculation, which is used in\nvarious network protocols. Communication with thehost controller is implemented via an interrupt pin and\nthe SPI, with clock rates of up to 20 MHz. Two\ndedicated pins are used for LED link and networkactivity indication.\nA simple block diagram of the ENC28J60 is shown in\nFigure 1-1 . A typical application circuit using the device\nis shown in Figure 1-2 . With the ENC28J60, two pulse\ntransformers and a few passive components are all that\nare required to connect a microcontroller to an Ethernet\nnetwork.The ENC28J60 consists of seven major functional\nblocks:\n1. An SPI interface that serves as a communica-\ntion channel between the host controller and the\nENC28J60.\n2. Control registers which are used to control and\nmonitor the ENC28J60.\n3. A dual port RAM buffer for received and\ntransmitted data packets.\n4. An arbiter to control the access to the RAM buf-\nfer when requests are made from DMA, transmitand receive blocks.\n5. The bus interface that interprets data and\ncommands received via the SPI interface.\n6. The MAC (Medium Access Control) module that\nimplements IEEE 802.3 compliant MAC logic.\n7. The PHY (Physical Layer) module that encodes\nand decodes the analog data that is present on\nthe twisted-pair interface.\nThe device also contains other support blocks, such as\nthe oscillator, on-chip voltage regulator, level translatorsto provide 5V tolerant I/Os and system control logic.\nFIGURE 1-1: ENC 28J60 BLOCK DIAGRAM\nDual Port RAM8 Kbytes\nDMA &\nChecksum\nTXBMRXBM\nArbiter\nFlow Control\nHost InterfaceControl\nRegisters\nPower-onPHY\nBus Interface\nSPIMII\nInterface\nMIIM\nInterfaceTPOUT+\nTPOUT-\nTPIN+\nTPIN-TX\nRX\nRBIAS\nOSC1\nOSC2 VoltageSystem ControlCS(1)\nSI(1)\nSO\nSCK(1)INT\nVCAPCLKOUTLEDA\nLEDB\nRESET(1)RXF (Filter)RX\nTXMAC\nch0\nch1ch0\nch1Buffer\nNote 1: These pins are 5V tolerant.Regulator Reset25 MHz\nOscillator\nENC28J60\nDS39662E-page 4 . \uf0e3 2006-2012 Microchip Technology Inc.FIGURE 1-2: TYPICAL ENC28J60 BASED INTERFACE\nTABLE 1-1: PINOUT I/O DESCRIPTIONS \nPin NamePin Number\nPin\nTypeBuffer\nTypeDescriptionSPDIP, \nSOIC, SSOPQFN\nVCAP 1 25 P — 2.5V output from internal regulator. A low Equivalent Series Resistance (ESR) \ncapacitor, with a typical value of 10 µF and a minimum value of 1 µF to ground, \nmust be placed on this pin.\nVSS 2 26 P — Ground reference.\nCLKOUT 3 27 O — Programmable clock output pin.(1) \nINT 42 8 O — I N T  interrupt output pin.(2) \nNC 5 1 O — Reserved function; always leave unconnected.\nSO 6 2 O — Data out pin for SPI interface.(2) \nSI 7 3 I ST Data in pin for SPI interface.(3) \nSCK 8 4 I ST Clock in pin for SPI interface.(3) \nCS 9 5 I ST Chip select input pin for SPI interface.(3,4) \nRESET 10 6 I ST Active-low device Reset input.(3,4) \nVSSRX 11 7 P — Ground reference for PHY RX.\nTPIN- 12 8 I ANA Differential signal input.TPIN+ 13 9 I ANA Differential signal input.RBIAS 14 10 I ANA Bias current pin for PHY. Must be tied to ground via a resistor (refer to \nSection 2.4 “Magnetics, Termination and Other External Components”  \nfor details).\nV\nDDTX 15 11 P — Positive supply for PHY TX.\nTPOUT- 16 12 O — Differential signal output.TPOUT+ 17 13 O — Differential signal output.V\nSSTX 18 14 P — Ground reference for PHY TX.\nVDDRX 19 15 P — Positive 3.3V supply for PHY RX.\nVDDPLL 20 16 P — Positive 3.3V supply for PHY PLL.\nVSSPLL 21 17 P — Ground reference for PHY PLL.\nVSSOSC 22 18 P — Ground reference for oscillator.\nOSC1 23 19 I ANA Oscillator input.OSC2 24 20 O — Oscillator output.V\nDDOSC 25 21 P — Positive 3.3V supply for oscillator.\nLEDB 26 22 O — LEDB driver pin.(5) \nLEDA 27 23 O — LEDA driver pin.(5) \nVDD 28 24 P — Positive 3.3V supply.\nLegend: I = Input, O = Output, P = Power, ANA = Analog Signal Input, ST = Schmitt Trigger\nNote 1: Pins have a maximum current capacity of 8 mA.\n2: Pins have a maximum current capacity of 4 mA.\n3: Pins are 5V tolerant.\n4: Pins have an internal weak pull-up to V DD.\n5: Pins have a maximum current capacity of 12 mA.TRANSFORMERMCU\nTX/RX\nBufferMAC PHY\nLEDA\nLEDBSI\nSO\nSCK\nINTSDO\nSDI\nSCK\nINTXENC28J60TPIN+/-\nTPOUT+/-\nETHERNETRJ45\nI/OCS\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 5ENC28J60\n2.0 EXTERNAL CONNECTIONS\n2.1 Oscillator\nThe ENC28J60 is designed to operate at 25 MHz with a\ncrystal connected to the OSC1 and OSC2 pins. The\nENC28J60 design requires the use of a parallel reso-\nnance crystal. Use of a series resonance crystal may givea frequency out of the crystal manufacturer specifications.\nA typical oscillator circuit is shown in Figure 2-1 . \nThe ENC28J60 may also be driven by an external clock\nsource connected to the OSC1 pin as shown inFigure 2-2 .\nFIGURE 2-1: CRYSTAL OSCILLATOR \nOPERATION\nFIGURE 2-2: EXTERNAL CLOCK \nSOURCE(1)2.2 Oscillator Start-up Timer\nThe ENC28J60 contains an Oscillator Start-up Timer\n(OST) to ensure that the oscillator and integrated PHYhave stabilized before use. The OST does not expire\nuntil 7500 OSC1 clock cycles (300 \uf06ds) pass after\nPower-on Reset or wake-up from Power-Down modeoccurs. During the delay, all Ethernet registers and buf-\nfer memory may still be read and written to through the\nSPI bus. However, software should not attempt totransmit any packets (set ECON1.TXRTS), enable\nreception of packets (set ECON1.RXEN) or access any\nMAC, MII or PHY registers during this period. \nWhen the OST expires, the CLKRDY bit in the ESTAT\nregister will be set. The application software should poll\nthis bit as necessary to determine when normal device\noperation can begin.\nC1\nC2XTAL\nOSC2RS(1)OSC1\nRF(2) To Internal Logic\nNote 1: A series resistor, R S, may be required for AT\nstrip cut crystals.\n2:The feedback resistor, R F, is typically in the\nrange of 2 to 10 M \uf057.ENC28J60\n3.3V Clock from\nExternal SystemOSC1\nOSC2 Open(2)\nNote 1: Duty cycle restrictions must be observed.\n2:A resistor to ground may be used to reduce\nsystem noise. This may increase systemcurrent.ENC28J60Note: After a Power-on Reset, or the ENC28J60\nis removed from Power-Down mode, the\nCLKRDY bit must be polled beforetransmitting packets, enabling packet\nreception or accessing any MAC, MII or\nPHY registers.\nENC28J60\nDS39662E-page 6 . \uf0e3 2006-2012 Microchip Technology Inc.2.3 CLKOUT Pin\nThe Clock Out (CLKOUT) pin is provided to the system\ndesigner for use as the host controller clock or as aclock source for other devices in the system. The\nCLKOUT has an internal prescaler which can divide the\noutput by 1, 2, 3, 4 or 8. The CLKOUT function isenabled and the prescaler is selected via the ECOCON\nregister ( Register 2-1 ). \nTo create a clean clock signal, the CLKOUT pin is held\nlow for a period when power is first applied. After thePower-on Reset ends, the OST will begin counting.\nWhen the OST expires, the CLKOUT pin will begin out-\nputting its default frequency of 6.25 MHz (main clockdivided by 4). At any future time that the ENC28J60 is\nreset by software or the RESET\n pin, the CLKOUT func-\ntion will not be altered (ECOCON will not changevalue). Additionally, Power-Down mode may be\nentered and the CLKOUT function will continue to\noperate. When Power-Down mode is cancelled, the\nOST will be reset but the CLKOUT function willcontinue. When the CLKOUT function is disabled\n(ECOCON = 0), the CLKOUT pin is driven low. \nThe CLKOUT function is designed to ensure that mini-\nmum timings are preserved when the CLKOUT pinfunction is enabled, disabled or the prescaler value is\nchanged. No high or low pulses will be outputted which\nexceed the frequency specified by the ECOCONconfiguration. However, when switching frequencies, a\ndelay between two and eight OSC1 clock periods will\noccur where no clock pulses will be produced (seeFigure 2-3 ). During this period, CLKOUT will be held\nlow.\nFIGURE 2-3: CLKOUT TRANSITION\n ECOCON\nChanged80 ns to 320 ns Delay\nREGISTER 2-1: ECOCON: CLO CK OUTPUT CONTROL REGISTER\nU-0 U-0 U-0 U-0 U-0 R/W-1 R/W-0 R/W-0\n— — — — — COCON2 COCON1 COCON0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-3 Unimplemented : Read as ‘ 0’\nbit 2-0 COCON<2:0> : Clock Output Configuration bits\n11x = Reserved for factory test, do not use; glitch prevention is not assured\n101 = CLKOUT outputs main clock divided by 8 (3.125 MHz)\n100 = CLKOUT outputs main clock divided by 4 (6.25 MHz)\n011 = CLKOUT outputs main clock divided by 3 (8.333333 MHz)\n010 = CLKOUT outputs main clock divided by 2 (12.5 MHz)\n001 = CLKOUT outputs main clock divided by 1 (25 MHz)\n000 = CLKOUT is disabled, the pin is driven low\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 7ENC28J60\n2.4 Magnetics, Termination and Other \nExternal Components\nTo complete the Ethernet interface, the ENC28J60\nrequires several standard components to be installed\nexternally. These components should be connected asshown in Figure 2-4 .\nThe internal analog circuitry in the PHY module requires\nthat an external 2.32 k \uf057, 1% resistor be attached from\nRBIAS to ground. The resistor influences the TPOUT+/-signal amplitude. The resistor should be placed as close\nas possible to the chip with no immediately adjacent\nsignal traces to prevent noise capacitively coupling intothe pin and affecting the transmit behavior. It is\nrecommended that the resistor be a surface mount type.\nSome of the device’s digital logic operates at a nominal\n2.5V. An on-chip voltage regulator is incorporated togenerate this voltage. The only external component\nrequired is an external filter capacitor, connected from\nV\nCAP to ground. The capacitor must have low equiva-\nlent series resistance (ESR), with a typical value of\n10\uf06dF, and a minimum value of 1 \uf06dF. The internal\nregulator is not designed to drive external loads.\nOn the TPIN+/TPIN- and TPOUT+/TPOUT- pins,\n1:1 center taped pulse transformers, rated for Ethernet\noperations, are required. When the Ethernet module is\nenabled, current is continually sunk through bothTPOUT pins. When the PHY is actively transmitting, a\ndifferential voltage is created on the Ethernet cable by\nvarying the relative current sunk by TPOUT+ comparedto TPOUT-.A common-mode choke on the TPOUT interface, placed\nbetween the TPOUT pins and the Ethernet transformer\n(not shown), is not recommended. If a common-mode\nchoke is used to reduce EMI emissions, it should beplaced between the Ethernet transformer and pins 1 and\n2 of the RJ-45 connector. Many Ethernet transformer\nmodules include common-mode chokes inside the samedevice package. The transformers should have at least\nthe isolation rating specified in Table 16-5  to protect\nagainst static voltages and meet IEEE 802.3 isolationrequirements (see Section 16.0 “Electrical Character-\nistics”  for specific transformer requirements). Both\ntransmit and receive interfaces additionally require tworesistors and a capacitor to properly terminate the\ntransmission line, minimizing signal reflections. \nAll power supply pins must be externally connected to\nthe same power source. Similarly, all ground refer-ences must be externally connected to the same\nground node. Each V\nDD and V SS pin pair should have\na 0.1\uf06dF ceramic bypass capacitor (not shown in the\nschematic) placed as close to the pins as possible.\nSince relatively high currents are necessary to operate\nthe twisted-pair interface, all wires should be kept as\nshort as possible. Reasonable wire widths should beused on power wires to reduce resistive loss. If the\ndifferential data lines cannot be kept short, they should\nbe routed in such a way as to have a 100 \uf057 characteristic\nimpedance.\nFIGURE 2-4: ENC28J60 ETHERNET TE RMINATION AND EXTERNAL CONNECTIONS\nI/O\nSCK\nSDO\nSDI\nINT0MCU\nLevel\nShift\nLogic(2)CS\nSCK\nSI\nSO\nINTENC28J60\nVCAP LEDA LEDBRBIASTPOUT +\nTPOUT -\nTPIN+\nTPIN-\n10\uf06dF\nNote 1: Ferrite Bead should be rated for at least 80 mA.\n2: Required only if the microcontroller is operating at 5V. See Section 2.5 “I/O Levels”  for more information.\n3: These components are installed for EMI reduction purposes.Ferrite\nBead(1,3)3.3V\n2.32 k\uf057, 1%1\n2\n3\n45\n6\n78RJ-45\n1:1 CT\n1:1 CT\n1 nF, 2 kV(3)75\uf057(3)75\uf057(3)75\uf057(3)75\uf057(3)49.9\uf057, 1%\n49.9\uf057, 1%\n49.9\uf057, 1%\n49.9\uf057, 1%0.1 \uf06dF(3)\n0.1 \uf06dF1\nENC28J60\nDS39662E-page 8 . \uf0e3 2006-2012 Microchip Technology Inc.2.5 I/O Levels\nThe ENC28J60 is a 3.3V part; however, it was\ndesigned to be easily integrated into 5V systems. TheSPI CS\n, SCK and SI inputs, as well as the RESET  pin,\nare all 5V tolerant. On the other hand, if the host\ncontroller is operated at 5V, it quite likely will not bewithin specifications when its SPI and interrupt inputs\nare driven by the 3.3V CMOS outputs on the\nENC28J60. A unidirectional level translator would benecessary. \nAn economical 74HCT08 (quad AND gate), 74ACT125\n(quad 3-state buffer) or many other 5V CMOS chips\nwith TTL level input buffers may be used to provide thenecessary level shifting. The use of 3-state buffers\npermits easy integration into systems which share the\nSPI bus with other devices. Figure 2-5  and Figure 2-6\nshow example translation schemes.\nFIGURE 2-5: LEVEL SHIFTING USING \nAND GATES\nFIGURE 2-6: LEVEL SHIFTING USING \n3-STATE BUFFERS2.6 LED Configuration\nThe LEDA and LEDB pins support automatic polarity\ndetection on Reset. The LEDs can be connected suchthat the pin must source current to turn the LED on, or\nalternately connected such that the pin must sink cur-\nrent to turn the LED on. Upon system Reset, theENC28J60 will detect how the LED is connected and\nbegin driving the LED to the default state configured by\nthe PHLCON register. If the LED polarity is changedwhile the ENC28J60 is operating, the new polarity will\nnot be detected until the next system Reset occurs. \nLEDB is unique in that the connection of the LED is\nautomatically read on Reset and determines how toinitialize the PHCON1.PDPXMD bit. If the pin sources\ncurrent to illuminate the LED, the bit is cleared on\nReset and the PHY defaults to half-duplex operation. Ifthe pin sinks current to illuminate the LED, the bit is set\non Reset and the PHY defaults to full-duplex operation.\nFigure 2-7  shows the two available options. If no LED\nis attached to the LEDB pin, the PDPXMD bit will reset\nto an indeterminate value.\nFIGURE 2-7: LEDB POLARITY AND \nRESET CONFIGURATION OPTIONS\nThe LEDs can also be configured separately to control\ntheir operating polarity (on or off when active), blink rateand blink stretch interval. The options are controlled bythe LACFG<3:0> and LBCFG<3:0> bits. Typical values\nfor blink stretch are listed in Table 2-1 .\nTABLE 2-1: LED BLINK STRETCH LENGTH I/O\nSCK\nSO\nSI\nINT0MCU\nCS\nSCK\nSI\nSO\nINTENC28J60\nCLKOUT OSC1\nI/O\nSCK\nSO\nSI\nINT0MCU\nCS\nSCK\nSI\nSO\nINTENC28J60\nCLKOUT OSC1\nStretch Length Typical Stretch (ms) \nTNSTRCH  (normal) 40\nTMSTRCH  (medium) 70\nTLSTRCH  (long) 140LEDB+3.3V Full-Duplex Operation:\nPDPXMD = 1\nLEDBHalf-Duplex Operation:\nPDPXMD = 0\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 9ENC28J60\n  \nREGISTER 2-2: PHLCON: PHY MODULE LED CONTROL REGISTER\nR/W-0 R/W-0 R/W-1 R/W-1 R/W-0 R/W-1 R/W-0 R/W-0\nr r r r LACFG3 LACFG2 LACFG1 LACFG0\nbit 15 bit 8\nR/W-0 R/W-0 R/W-1 R/W-0 R/W-0 R/W-0 R/W-1 R/W-x\nLBCFG3 LBCFG2 LBCFG1 LBCFG0 LFRQ1 LFRQ0 STRCH r\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15-14 Reserved:  Write as ‘0’\nbit 13-12 Reserved:  Write as ‘1’\nbit 11-8 LACFG<3:0>:  LEDA Configuration bits \n1111  = Reserved\n1110  = Display duplex status and collision activity (always stretched)\n1101  = Display link status and transmit/receive activity (always stretched)\n1100  = Display link status and receive activity (always stretched)\n1011  = Blink slow\n1010  = Blink fast\n1001  = Off\n1000  = On\n0111  = Display transmit and receive activity (stretchable)\n0110  = Reserved\n0101  = Display duplex status\n0100  = Display link status\n0011  = Display collision activity (stretchable)\n0010  = Display receive activity (stretchable)\n0001  = Display transmit activity (stretchable)\n0000  = Reserved\nbit 7-4 LBCFG<3:0>:  LEDB Configuration bits \n1110  = Display duplex status and collision activity (always stretched)\n1101  = Display link status and transmit/receive activity (always stretched)\n1100  = Display link status and receive activity (always stretched)\n1011  = Blink slow\n1010  = Blink fast\n1001  = Off\n1000  = On\n0111  = Display transmit and receive activity (stretchable)\n0110  = Reserved\n0101  = Display duplex status\n0100  = Display link status\n0011  = Display collision activity (stretchable)\n0010  = Display receive activity (stretchable)\n0001  = Display transmit activity (stretchable)\n0000  = Reserved\nbit 3-2 LFRQ<1:0>:  LED Pulse Stretch Time Configuration bits (see Table 2-1 )\n11 = Reserved\n10 = Stretch LED events by T LSTRCH\n01 = Stretch LED events by T MSTRCH\n00 = Stretch LED events by T NSTRCH\nbit 1 STRCH:  LED Pulse Stretching Enable bit \n1 = Stretchable LED events will cause lengthened LED pulses based on LFRQ<1:0> configuration\n0 = Stretchable LED events will only be displayed while they are occurring\nbit 0 Reserved:  Write as ‘0’\nENC28J60\nDS39662E-page 10 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 11ENC28J60\n3.0 MEMORY ORGANIZATION\nAll memory in the ENC28J60 is implemented as static\nRAM. There are three types of memory in the\nENC28J60:\n• Control Registers\n• Ethernet Buffer\n• PHY Registers\nThe Control registers’ memory contains the registers\nthat are used for configuration, control and status\nretrieval of the ENC28J60. The Control registers aredirectly read and written to by the SPI interface.The Ethernet buffer contains transmit and receive\nmemory used by the Ethernet controller in a single\nmemory space. The sizes of the memory areas are\nprogrammable by the host controller using the SPIinterface. The Ethernet buffer memory can only be\naccessed via the read buffer memory and write buffer\nmemory SPI commands (see Section 4.2.2 “Read\nBuffer Memory Command”  and Section 4.2.4 “Write\nBuffer Memory Command” ).\nThe PHY registers are used for configuration, control\nand status retrieval of the PHY module. The registersare not directly accessible through the SPI interface;\nthey can only be accessed through Media Independent\nInterface Management (MIIM) implemented in theMAC. \nFigure 3-1  shows the data memory organization for the\nENC28J60. \nFIGURE 3-1: ENC28J60 MEMORY ORGANIZATION\nCommon \nRegisters\nCommon \nRegisters\nCommon \nRegisters\nCommon \nRegisters00h\n19h\n1Ah\n1Fh\n00h\n19h\n1Ah\n1Fh\n00h\n19h\n1Ah\n1Fh\n00h\n19h\n1Ah\n1FhBank 0\nBank 1\nBank 2\nBank 30000h\n1FFFh= 00\n= 01\n= 10\n= 11ECON1<1:0>Control Registers Ethernet Buffer\n00h\n1FhPHY Registers\nNote: Memory areas are not shown to scale. The size of the control memory space has been scaled to show detail.Buffer Pointers in Bank 0\nENC28J60\nDS39662E-page 12 . \uf0e3 2006-2012 Microchip Technology Inc.3.1 Control Registers\nThe Control registers provide the main interface\nbetween the host controller and the on-chip Ethernet\ncontroller logic. Writing to these registers controls the\noperation of the interface, while reading the registersallows the host controller to monitor operations.\nThe Control register memory is partitioned into four\nbanks, selectable by the bank select bits, BSEL<1:0>,\nin the ECON1 register. Each bank is 32 bytes long and\naddressed by a 5-bit address value. \nThe last five locations (1Bh to 1Fh) of all banks point to a\ncommon set of registers: EIE, EIR, ESTAT, ECON2 and\nECON1. These are key registers used in controlling and\nmonitoring the operation of the device. Their commonmapping allows easy access without switching the bank.\nThe ECON1 and ECON2 registers are discussed later in\nthis section.Some of the available addresses are unimplemented.\nAny attempts to write to these locations are ignored\nwhile reads return ‘ 0’s. The register at address 1Ah in\neach bank is reserved; read and write operations\nshould not be performed on this register. All other\nreserved registers may be read, but their contents must\nnot be changed. When reading and writing to registers\nwhich contain reserved bits, any rules stated in theregister definition should be observed.\nControl registers for the ENC28J60 are generically\ngrouped as ETH, MAC and MII registers. Register\nnames starting with “E” belong to the ETH group.\nSimilarly, registers names starting with “MA” belong to\nthe MAC group and registers prefixed with “MI” belong\nto the MII group. \nTABLE 3-1: ENC28J60 CO NTROL REGISTER MAP\nBank 0 Bank 1 Bank 2 Bank 3\nAddress Name Address Name Address Name Address Name\n00h ERDPTL 00h EHT0 00h MACON1 00h MAADR5\n01h ERDPTH 01h EHT1 01h Reserved 01h MAADR602h EWRPTL 02h EHT2 02h MACON3 02h MAADR303h EWRPTH 03h EHT3 03h MACON4 03h MAADR404h ETXSTL 04h EHT4 04h MABBIPG 04h MAADR105h ETXSTH 05h EHT5 05h\n— 05h MAADR2\n06h ETXNDL 06h EHT6 06h MAIPGL 06h EBSTSD07h ETXNDH 07h EHT7 07h MAIPGH 07h EBSTCON08h ERXSTL 08h EPMM0 08h MACLCON1 08h EBSTCSL09h ERXSTH 09h EPMM1 09h MACLCON2 09h EBSTCSH\n0Ah ERXNDL 0Ah EPMM2 0Ah MAMXFLL 0Ah MISTAT0Bh ERXNDH 0Bh EPMM3 0Bh MAMXFLH 0Bh\n—\n0Ch ERXRDPTL 0Ch EPMM4 0Ch Reserved 0Ch —\n0Dh ERXRDPTH 0Dh EPMM5 0Dh Reserved 0Dh —\n0Eh ERXWRPTL 0Eh EPMM6 0Eh Reserved 0Eh —\n0Fh ERXWRPTH 0Fh EPMM7 0Fh —0 F h —\n10h EDMASTL 10h EPMCSL 10h Reserved 10h —\n11h EDMASTH 11h EPMCSH 11h Reserved 11h —\n12h EDMANDL 12h — 12h MICMD 12h EREVID\n13h EDMANDH 13h — 13h — 13h —\n14h EDMADSTL 14h EPMOL 14h MIREGADR 14h —\n15h EDMADSTH 15h EPMOH 15h Reserved 15h ECOCON16h EDMACSL 16h Reserved 16h MIWRL 16h Reserved17h EDMACSH 17h Reserved 17h MIWRH 17h EFLOCON18h\n— 18h ERXFCON 18h MIRDL 18h EPAUSL\n19h — 19h EPKTCNT 19h MIRDH 19h EPAUSH\n1Ah Reserved 1Ah Reserved 1Ah Reserved 1Ah Reserved1Bh EIE 1Bh EIE 1Bh EIE 1Bh EIE\n1Ch EIR 1Ch EIR 1Ch EIR 1Ch EIR1Dh ESTAT 1Dh ESTAT 1Dh ESTAT 1Dh ESTAT\n1Eh ECON2 1Eh ECON2 1Eh ECON2 1Eh ECON2\n1Fh ECON1 1Fh ECON1 1Fh ECON1 1Fh ECON1\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 13ENC28J60\nTABLE 3-2: ENC28J60 CONT ROL REGISTER SUMMARY\nRegister Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Value\non\nResetDetails\non\nPage\nEIE INTIE PKTIE DMAIE LINKIE TXIE r TXERIE RXERIE 0000 0000 65\nEIR — PKTIF DMAIF LINKIF TXIF r TXERIF RXERIF -000 0000 66\nESTAT INT BUFER rL A T E C O L — RXBUSY TXABRT CLKRDY(1)0000 -000 64\nECON2 AUTOINC PKTDEC PWRSV rV R P S — — —1000 0--- 16\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 0000 0000 15\nERDPTL Read Pointer Low Byte ERDPT<7:0>) 1111 1010 17\nERDPTH — — — Read Pointer High Byte (ERDPT<12:8>) ---0 0101 17\nEWRPTL Write Pointer Low Byte (EWRPT<7:0>) 0000 0000 17\nEWRPTH — — — Write Pointer High Byte (EWRPT<12:8>) ---0 0000 17\nETXSTL TX Start Low Byte (ETXST<7:0>) 0000 0000 17\nETXSTH — — — TX Start High Byte (ETXST<12:8>) ---0 0000 17\nETXNDL TX End Low Byte (ETXND<7:0>) 0000 0000 17\nETXNDH — — — TX End High Byte (ETXND<12:8>) ---0 0000 17\nERXSTL RX Start Low Byte (ERXST<7:0>) 1111 1010 17\nERXSTH — — — RX Start High Byte (ERXST<12:8>) ---0 0101 17\nERXNDL RX End Low Byte (ERXND<7:0>) 1111 1111 17\nERXNDH — — — RX End High Byte (ERXND<12:8>) ---1 1111 17\nERXRDPTL RX RD Pointer Low Byte (ERXRDPT<7:0>) 1111 1010 17\nERXRDPTH — — — RX RD Pointer High Byte (ERXRDPT<12:8>) ---0 0101 17\nERXWRPTL RX WR Pointer Low Byte (ERXWRPT<7:0>) 0000 0000 17\nERXWRPTH — — — RX WR Pointer High Byte (ERXWRPT<12:8>) ---0 0000 17\nEDMASTL DMA Start Low Byte (EDMAST<7:0>) 0000 0000 71\nEDMASTH — — — DMA Start High Byte (EDMAST<12:8>) ---0 0000 71\nEDMANDL DMA End Low Byte (EDMAND<7:0>) 0000 0000 71\nEDMANDH — — — DMA End High Byte (EDMAND<12:8>) ---0 0000 71\nEDMADSTL DMA Destination Low Byte (EDMADST<7:0>) 0000 0000 71\nEDMADSTH — — — DMA Destination High Byte (EDMADST<12:8>) ---0 0000 71\nEDMACSL DMA Checksum Low Byte (EDMACS<7:0>) 0000 0000 72\nEDMACSH DMA Checksum High Byte (EDMACS<15:8>) 0000 0000 72\nEHT0 Hash Table Byte 0 (EHT<7:0>) 0000 0000 52\nEHT1 Hash Table Byte 1 (EHT<15:8>) 0000 0000 52\nEHT2 Hash Table Byte 2 (EHT<23:16>) 0000 0000 52\nEHT3 Hash Table Byte 3 (EHT<31:24>) 0000 0000 52\nEHT4 Hash Table Byte 4 (EHT<39:32>) 0000 0000 52\nEHT5 Hash Table Byte 5 (EHT<47:40>) 0000 0000 52\nEHT6 Hash Table Byte 6 (EHT<55:48>) 0000 0000 52\nEHT7 Hash Table Byte 7 (EHT<63:56>) 0000 0000 52\nEPMM0 Pattern Match Mask Byte 0 (EPMM<7:0>) 0000 0000 51\nEPMM1 Pattern Match Mask Byte 1 (EPMM<15:8>) 0000 0000 51\nEPMM2 Pattern Match Mask Byte 2 (EPMM<23:16>) 0000 0000 51\nEPMM3 Pattern Match Mask Byte 3 (EPMM<31:24>) 0000 0000 51\nEPMM4 Pattern Match Mask Byte 4 (EPMM<39:32>) 0000 0000 51\nEPMM5 Pattern Match Mask Byte 5 (EPMM<47:40>) 0000 0000 51\nEPMM6 Pattern Match Mask Byte 6 (EPMM<55:48>) 0000 0000 51\nEPMM7 Pattern Match Mask Byte 7 (EPMM<63:56>) 0000 0000 51\nLegend: x = unknown, u = unchanged, - = unimplemented, q = value depends on condition,  r = reserved, do not modify.\nNote 1: CLKRDY resets to ‘ 0’ on Power-on Reset but is unaffected on all other Resets.\n2: EREVID is a read-only register.\n3: ECOCON resets to ‘ ---- -100 ’ on Power-on Reset and ‘ ---- -uuu ’ on all other Resets.\nENC28J60\nDS39662E-page 14 . \uf0e3 2006-2012 Microchip Technology Inc.EPMCSL Pattern Match Checksum Low Byte (EPMCS<7:0>) 0000 0000 51\nEPMCSH Pattern Match Checksum High Byte (EPMCS<15:0>) 0000 0000 51\nEPMOL Pattern Match Offset Low Byte (EPMO<7:0>) 0000 0000 51\nEPMOH — — — Pattern Match Offset High Byte (EPMO<12:8>) ---0 0000 51\nERXFCON UCEN ANDOR CRCEN PMEN MPEN HTEN MCEN BCEN 1010 0001 48\nEPKTCNT Ethernet Packet Count 0000 0000 43\nMACON1 — — — r TXPAUS RXPAUS PASSALL MARXEN ---0 0000 34\nMACON3 PADCFG2 PADCFG1 PADCFG0 TXCRCEN PHDREN HFRMEN FRMLNEN FULDPX 0000 0000 35\nMACON4 — DEFER BPEN NOBKOFF — — r r-000 --00 36\nMABBIPG — Back-to-Back Inter-Packet Gap (BBIPG<6:0>) -000 0000 36\nMAIPGL — Non-Back-to-Back Inter-Packet Gap Low Byte (MAIPGL<6:0>) -000 0000 34\nMAIPGH — Non-Back-to-Back Inter-Packet Gap High Byte (MAIPGH<6:0>) -000 0000 34\nMACLCON1 — — — — Retransmission Maximum (RETMAX<3:0>) ---- 1111 34\nMACLCON2 — — Collision Window (COLWIN<5:0>) --11 0111 34\nMAMXFLL Maximum Frame Length Low Byte (MAMXFL<7:0>) 0000 0000 34\nMAMXFLH Maximum Frame Length High Byte (MAMXFL<15:8>) 0000 0110 34\nMICMD — — — — — — MIISCAN MIIRD ---- --00 21\nMIREGADR — — — MII Register Address (MIREGADR<4:0>) ---0 0000 19\nMIWRL MII Write Data Low Byte (MIWR<7:0>) 0000 0000 19\nMIWRH MII Write Data High Byte (MIWR<15:8>) 0000 0000 19\nMIRDL MII Read Data Low Byte (MIRD<7:0>) 0000 0000 19\nMIRDH MII Read Data High Byte(MIRD<15:8>) 0000 0000 19\nMAADR5 MAC Address Byte 5 (MAADR<15:8>) 0000 0000 34\nMAADR6 MAC Address Byte 6 (MAADR<7:0>) 0000 0000 34\nMAADR3 MAC Address Byte 3 (MAADR<31:24>), OUI Byte 3 0000 0000 34\nMAADR4 MAC Address Byte 4 (MAADR<23:16>) 0000 0000 34\nMAADR1 MAC Address Byte 1 (MAADR<47:40>), OUI Byte 1 0000 0000 34\nMAADR2 MAC Address Byte 2 (MAADR<39:32>), OUI Byte 2 0000 0000 34\nEBSTSD Built-in Self-Test Fill Seed (EBSTSD<7:0>) 0000 0000 76\nEBSTCON PSV2 PSV1 PSV0 PSEL TMSEL1 TMSEL0 TME BISTST 0000 0000 75\nEBSTCSL Built-in Self-Test Checksum Low Byte (EBSTCS<7:0>) 0000 0000 76\nEBSTCSH Built-in Self-Test Checksum High Byte (EBSTCS<15:8>) 0000 0000 76\nMISTAT — — — — r NVALID SCAN BUSY ---- 0000 21\nEREVID(2)— — — Ethernet Revision ID (EREVID<4:0>) ---q qqqq 22\nECOCON(3)— — — — — COCON2 COCON1 COCON0 ---- -100 6\nEFLOCON — — — — — FULDPXS FCEN1 FCEN0 ---- -000 56\nEPAUSL Pause Timer Value Low Byte (EPAUS<7:0>) 0000 0000 57\nEPAUSH Pause Timer Value High Byte (EPAUS<15:8>) 0001 0000 57TABLE 3-2: ENC28J60 CONTROL RE GISTER SUMMARY (CONTINUED)\nRegister Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Value\non\nResetDetails\non\nPage\nLegend: x = unknown, u = unchanged, - = unimplemented, q = value depends on condition,  r = reserved, do not modify.\nNote 1: CLKRDY resets to ‘ 0’ on Power-on Reset but is unaffected on all other Resets.\n2: EREVID is a read-only register.\n3: ECOCON resets to ‘ ---- -100 ’ on Power-on Reset and ‘ ---- -uuu ’ on all other Resets.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 15ENC28J60\n3.1.1 ECON1 REGISTER\nThe ECON1 register, shown in Register 3-1 , is used to\ncontrol the main functions of the ENC28J60. Receiveenable, transmit request, DMA control and bank select\nbits can all be found in ECON1.\n   \nREGISTER 3-1: ECON1: ETHE RNET CONTROL REGISTER 1\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nTXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 TXRST: Transmit Logic Reset bit\n1 = Transmit logic is held in Reset\n0 = Normal operation\nbit 6 RXRST: Receive Logic Reset bit\n1 = Receive logic is held in Reset\n0 = Normal operations\nbit 5 DMAST: DMA Start and Busy Status bit\n1 = DMA copy or checksum operation is in progress\n0 = DMA hardware is Idle\nbit 4 CSUMEN: DMA Checksum Enable bit\n1 = DMA hardware calculates checksums\n0 = DMA hardware copies buffer memory\nbit 3 TXRTS: Transmit Request to Send bit\n1 = The transmit logic is attempting to transmit a packet\n0 = The transmit logic is Idle\nbit 2 RXEN: Receive Enable bit\n1 = Packets which pass the current filter configuration will be written into the receive buffer\n0 = All packets received will be ignored\nbit 1-0 BSEL<1:0>: Bank Select bits\n11 =  SPI accesses registers in Bank 3\n10 =  SPI accesses registers in Bank 2\n01 =  SPI accesses registers in Bank 1\n00 =  SPI accesses registers in Bank 0\nENC28J60\nDS39662E-page 16 . \uf0e3 2006-2012 Microchip Technology Inc.3.1.2 ECON2 REGISTER\nThe ECON2 register, shown in Register 3-2 , is used to\ncontrol other main functions of the ENC28J60.  \nREGISTER 3-2: ECON2: ETHE RNET CONTROL REGISTER 2\nR/W-1 R/W-0(1)R/W-0 R/W-0 R/W-0 U-0 U-0 U-0\nAUTOINC PKTDEC PWRSV rV R P S — — —\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 AUTOINC: Automatic Buffer Pointer Increment Enable bit\n1 = Automatically increment ERDPT or EWRPT on reading from or writing to EDATA\n0 = Do not automatically change ERDPT and EWRPT after the buffer is accessed\nbit 6 PKTDEC: Packet Decrement bit\n(1)\n1 = Decrement the EPKTCNT register by one\n0 = Leave EPKTCNT unchanged\nbit 5 PWRSV: Power Save Enable bit\n1 = MAC, PHY and control logic are in Low-Power Sleep mode\n0 = Normal operation\nbit 4 Reserved: Maintain as ‘ 0’\nbit 3 VRPS: Voltage Regulator Power Save Enable bit\nWhen PWRSV = 1:\n1 = Internal voltage regulator is in Low-Current mode\n0 = Internal voltage regulator is in Normal Current mode\nWhen PWRSV = 0:\nThe bit is ignored; the regulator always outputs as much current as the device requires.\nbit 2-0 Unimplemented: Read as ‘0’\nNote 1: This bit is automatically cleared once it is set.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 17ENC28J60\n3.2 Ethernet Buffer\nThe Ethernet buffer contains transmit and receive\nmemory used by the Ethernet controller. The entirebuffer is 8 Kbytes, divided into separate receive and\ntransmit buffer spaces. The sizes and locations of\ntransmit and receive memory are fully programmableby the host controller using the SPI interface. \nThe relationship of the buffer spaces is shown in\nFigure 3-2 .\n3.2.1 RECEIVE BUFFER\nThe receive buffer constitutes a circular FIFO buffer\nmanaged by hardware. The register pairs,ERXSTH:ERXSTL and ERXNDH:ERXNDL, serve as\npointers to define the buffer’s size and location within\nthe memory. The byte pointed to by ERXST and thebyte pointed to by ERXND are both included in the\nFIFO buffer. \nAs bytes of data are received from the Ethernet\ninterface, they are written into the receive buffersequentially. However, after the memory pointed to by\nERXND is written to, the hardware will automatically\nwrite the next byte of received data to the memorypointed to by ERXST. As a result, the receive hardware\nwill never write outside the boundaries of the FIFO. \nThe host controller may program the ERXST and\nERXND Pointers when the receive logic is not enabled.The pointers must not be modified while the receive\nlogic is enabled (ECON1.RXEN is set). If desired, the\nPointers may span the 1FFFh to 0000h memoryboundary; the hardware will still operate as a FIFO.\nThe ERXWRPTH:ERXWRPTL registers define a\nlocation within the FIFO where the hardware will write\nbytes that it receives. The pointer is read-only and isautomatically updated by the hardware whenever a\nnew packet is successfully received. The pointer is\nuseful for determining how much free space isavailable within the FIFO.\nThe ERXRDPT registers define a location within the\nFIFO where the receive hardware is forbidden to write\nto. In normal operation, the receive hardware will writedata up to, but not including, the memory pointed to by\nERXRDPT. If the FIFO fills up with data and new data\ncontinues to arrive, the hardware will not overwrite thepreviously received data. Instead, the new data will be\nthrown away and the old data will be preserved. In\norder to continuously receive new data, the host con-troller must periodically advance this pointer whenever\nit finishes processing some, or all, of the old received\ndata.3.2.2 TRANSMIT BUFFER\nAny space within the 8-Kbyte memory, which is notprogrammed as part of the receive FIFO buffer, isconsidered to be the transmit buffer. The responsibility\nof managing where packets are located in the transmit\nbuffer belongs to the host controller. Whenever the hostcontroller decides to transmit a packet, the ETXST and\nETXND Pointers are programmed with addresses\nspecifying where, within the transmit buffer, the partic-ular packet to transmit is located. The hardware does\nnot check that the start and end addresses do not\noverlap with the receive buffer. To prevent buffercorruption, the host controller must make sure to not\ntransmit a packet while the ETXST and ETXND\nPointers are overlapping the receive buffer, or while theETXND Pointer is too close to the receive buffer. See\nSection 7.1 “Transmitting Packets”  for more\ninformation.\n3.2.3 READING AND WRITING TO \nTHE BUFFER\nThe Ethernet buffer contents are accessed from the\nhost controller though separate Read and Write\nPointers (ERDPT and EWRPT) combined with the read\nbuffer memory and write buffer memory SPIcommands. While sequentially reading from the\nreceive buffer, a wrapping condition will occur at the\nend of the receive buffer. While sequentially writing tothe buffer, no wrapping conditions will occur. See\nSection 4.2.2 “Read Buffer Memory Command”  and\nSection 4.2.4 “Write Buffer Memory Command”  for\nmore information.\n3.2.4 DMA ACCESS TO THE BUFFER\nThe integrated DMA controller must read from the buffer\nwhen calculating a checksum and it must read and write\nto the buffer when copying memory. The DMA followsthe same wrapping rules that SPI accesses do. While it\nsequentially reads, it will be subject to a wrapping condi-\ntion at the end of the receive buffer. All writes it does willnot be subject to any wrapping conditions. See\nSection 13.0 “Direct Memory Access Controller”  for\nmore information.\nENC28J60\nDS39662E-page 18 . \uf0e3 2006-2012 Microchip Technology Inc.FIGURE 3-2: ETHERNET BUFFER ORGANIZATION\nTransmit \nBuffer0000h\n1FFFhTransmit Buffer Start\n(ETXSTH:ETXSTL)\nTransmit Buffer End\n(ETXNDH:ETXNDL)\nReceive Buffer Start\n(ERXSTH:ERXSTL)\nReceive Buffer End\n(ERXNDH:ERXNDL)Receive \nBufferBuffer Write Pointer\n(EWRPTH:EWRPTL) AAhTransmit Buffer Data\n(WBM AAh)\nBuffer Read Pointer\n(ERDPTH:ERDPTL)Receive Buffer Data\n(RBM 55h)(Circular FIFO)\n55h\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 19ENC28J60\n3.3 PHY Registers\nThe PHY registers provide configuration and control of\nthe PHY module, as well as status information about itsoperation. All PHY registers are 16 bits in width. There\nare a total of 32 PHY addresses; however, only 9 loca-\ntions are implemented. Writes to unimplementedlocations are ignored and any attempts to read these\nlocations will return ‘ 0’. All reserved locations should be\nwritten as ‘ 0’; their contents should be ignored when\nread. \nUnlike the ETH, MAC and MII control registers, or the\nbuffer memory, the PHY registers are not directly\naccessible through the SPI control interface. Instead,access is accomplished through a special set of MAC\ncontrol registers that implement Media Independent\nInterface Management (MIIM). These control registersare referred to as the MII registers. The registers that\ncontrol access to the PHY registers are shown in\nRegister 3-3  and Register 3-4 .\n3.3.1 READING PHY REGISTERS\nWhen a PHY register is read, the entire 16 bits are\nobtained. \nTo read from a PHY register:1. Write the address of the PHY register to read\nfrom into the MIREGADR register.\n2. Set the MICMD.MIIRD bit. The read operation\nbegins and the MISTAT.BUSY bit is set.\n3. Wait 10.24 \uf06ds. Poll the MISTAT.BUSY bit to be\ncertain that the operation is complete. While\nbusy, the host controller should not start anyMIISCAN operations or write to the MIWRH\nregister. \nWhen the MAC has obtained the registercontents, the BUSY bit will clear itself. \n4. Clear the MICMD.MIIRD bit.5. Read the desired data from the MIRDL and\nMIRDH registers. The order that these bytes areaccessed is unimportant.\n3.3.2 WRITING PHY REGISTERS\nWhen a PHY register is written to, the entire 16 bits is\nwritten at once; selective bit writes are not imple-\nmented. If it is necessary to reprogram only select bitsin the register, the controller must first read the PHY\nregister, modify the resulting data and then write the\ndata back to the PHY register. To write to a PHY register:\n1. Write the address of the PHY register to write to\ninto the MIREGADR register.\n2. Write the lower 8 bits of data to write into the\nMIWRL register.\n3. Write the upper 8 bits of data to write into the\nMIWRH register. Writing to this register auto-\nmatically begins the MIIM transaction, so it must\nbe written to after MIWRL. The MISTAT.BUSYbit becomes set.\nThe PHY register will be written after the MIIM opera-\ntion completes, which takes 10.24 \uf06ds. When the write\noperation has completed, the BUSY bit will clear itself.The host controller should not start any MIISCAN or\nMIIRD operations while busy.\n3.3.3 SCANNING A PHY REGISTER\nThe MAC can be configured to perform automatic\nback-to-back read operations on a PHY register. Thiscan significantly reduce the host controller complexity\nwhen periodic status information updates are desired.\nTo perform the scan operation:\n1. Write the address of the PHY register to read\nfrom into the MIREGADR register.\n2. Set the MICMD.MIISCAN bit. The scan opera-\ntion begins and the MISTAT.BUSY bit is set. The\nfirst read operation will complete after 10.24 \uf06ds.\nSubsequent reads will be done at the sameinterval until the operation is cancelled. The\nMISTAT.NVALID bit may be polled to determine\nwhen the first read operation is complete. \nAfter setting the MIISCAN bit, the MIRDL and MIRDH\nregisters will automatically be updated every 10.24 \uf06ds.\nThere is no status information which can be used to\ndetermine when the MIRD registers are updated. Sincethe host controller can only read one MII register at a\ntime through the SPI, it must not be assumed that the\nvalues of MIRDL and MIRDH were read from the PHYat exactly the same time.\nWhen the MIISCAN operation is in progress, the host\ncontroller must not attempt to write to MIWRH or start\nan MIIRD operation. The MIISCAN operation can becancelled by clearing the MICMD.MIISCAN bit and\nthen polling the MISTAT.BUSY bit. New operations may\nbe started after the BUSY bit is cleared.\nENC28J60\nDS39662E-page 20 . \uf0e3 2006-2012 Microchip Technology Inc.TABLE 3-3: ENC28J60 PHY REGISTER SUMMARY      \nAddr Name Bit 15 Bit 14 Bit 13 Bit 12 Bit 11 Bit 10 Bit 9 Bit 8 Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Reset Values \n00h PHCON1 PRST PLOOPBK — —P P W R S V r —P D P X M D(1)r — — — — — — —00-- 00-q 0--- ----\n01h PHSTAT1 — — — PFDPX PHDPX — — — — — — — — LLSTAT JBSTAT —---1 1--- ---- -00-\n02h PHID1 PHY Identifier (OUI3:OUI18) = 0083h 0000 0000 1000 0011\n03h PHID2 PHY Identifier (OUI19:OUI24) = 000101 PHY P/N (PPN<5:0>) = 00h PHY Revision (PREV<3:0>) = 00h 0001 0100 0000 0000\n10h PHCON2 — FRCLNK TXDIS r r JABBER r HDLDIS r r r r r r r r-000 0000 0000 0000\n11h PHSTAT2 — — TXSTAT RXSTAT COLSTAT LSTAT DPXSTAT(1)— — —P L R I T Y — — — — —--00 00q- --0- ----\n12h PHIE r r r r r r r r r r rP L N K I E r r PGEIE r0000 0000 0000 0000\n13h PHIR r r r r r r r r r r rP L N K I F r PGIF r rxxxx xxxx xx00 00x0\n14h PHLCON r r r r LACFG3 LACFG2 LACFG1 LACFG0 LBCFG3 LBCFG2 LBCFG1 LBCFG0 LFRQ1 LFRQ0 STRCH r0011 0100 0010 001x\nLegend: x = unknown, u = unchanged, — = unimplemented, q = value depends on condition,  r = reserved, do not modify.\nNote 1: Reset values of the Duplex mode/status bits depend on the connection of the LED to the LEDB pin (see Section 2.6 “LED Configuration”  for additional details).\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 21ENC28J60\n   \n REGISTER 3-3: MICMD: MII COMMAND REGISTER\nU-0 U-0 U-0 U-0 U-0 U-0 R/W-0 R/W-0\n— — — — — — MIISCAN MIIRD\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-2 Unimplemented: Read as ‘0’\nbit 1 MIISCAN: MII Scan Enable bit\n1 = PHY register at MIREGADR is continuously read and the data is placed in MIRD\n0 = No MII Management scan operation is in progress\nbit 0 MIIRD: MII Read Enable bit\n1 = PHY register at MIREGADR is read once and the data is placed in MIRD\n0 = No MII Management read operation is in progress\nREGISTER 3-4: MISTAT: MII STATUS REGISTER\nU-0 U-0 U-0 U-0 R-0 R-0 R-0 R-0\n— — — — r NVALID SCAN BUSY\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-4 Unimplemented: Read as ‘0’\nbit 3 Reserved: Maintain as ‘ 0’\nbit 2 NVALID:  MII Management Read Data Not Valid bit\n1 = The contents of MIRD are not valid yet\n0 = The MII Management read cycle has completed and MIRD has been updated\nbit 1 SCAN:  MII Management Scan Operation bit\n1 = MII Management scan operation is in progress\n0 = No MII Management scan operation is in progress\nbit 0 BUSY:  MII Management Busy bit\n1 = A PHY register is currently being read or written to\n0 = The MII Management interface is Idle\nENC28J60\nDS39662E-page 22 . \uf0e3 2006-2012 Microchip Technology Inc.3.3.4 PHSTAT REGISTERS\nThe PHSTAT1 and PHSTAT2 registers contain read-\nonly bits that show the current status of the PHYmodule’s operations, particularly the conditions of the\ncommunications link to the rest of the network.\nThe PHSTAT1 register ( Register 3-5 ) contains the\nLLSTAT bit; it clears and latches low if the physicallayer link has gone down since the last read of the\nregister. Periodic polling by the host controller can be\nused to determine exactly when the link fails. It may beparticularly useful if the link change interrupt is not\nused. \nThe PHSTAT1 register also contains a jabber status bit.\nAn Ethernet controller is said to be “jabbering” if it con-tinuously transmits data without stopping and allowing\nother nodes to share the medium. Generally, the jabber\ncondition indicates that the local controller may begrossly violating the maximum packet size defined by\nthe IEEE specification. This bit latches high to indicate\nthat a jabber condition has occurred since the last readof the register.\nThe PHSTAT2 register ( Register 3-6 ) contains status\nbits which report if the PHY module is linked to the\nnetwork and whether or not it is transmitting orreceiving.3.3.5 PHID1 AND PHID2 REGISTERS\nThe PHID1 and PHID2 registers are read-onlyregisters. They hold constant data that helps identifythe Ethernet controller and may be useful for\ndebugging purposes. This includes:\n• The part number of the PHY module \n(PPN5:PPN0)\n• The revision level of the PHY module \n(PREV3:PREV0); and\n• The PHY identifier, as part of Microchip’s \ncorporate Organizationally Unique Identifier (OUI) (OUI3:OUI24)\nThe PHY part number and revision are part of PHID2.\nThe upper two bytes of the PHY identifier are located in\nPHID1, with the remainder in PHID2. The exactlocations within registers are shown in Table 3-3 . \nThe 22 bits of the OUI contained in the PHY Identifier\n(OUI3:OUI24, corresponding to PHID1<15:0> and\nPHID2<15:10>) are concatenated with ‘ 00’ as the first\ntwo digits (OUI1 and OUI2) to generate the entire OUI.\nFor convenience, this 24-bit string is usually interpreted\nin hexadecimal; the resulting OUI for MicrochipTechnology is 0004A3h.\nRevision information is also stored in EREVID. This is\na read-only control register which contains a 5-bit\nidentifier for the specific silicon revision level of thedevice. Details of this register are shown in Table 3-2 . \n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 23ENC28J60\n  \nREGISTER 3-5: PHSTAT1: PHYSI CAL LAYER STATUS REGISTER 1\nU-0 U-0 U-0 R-1 R-1 U-0 U-0 U-0\n— — — PFDPX PHDPX — — —\nbit 15 bit 8\nU-0 U-0 U-0 U-0 U-0 R/LL-0 R/LH-0 U-0\n— — — — — LLSTAT JBSTAT —\nbit 7 bit 0\nLegend: 1 = Bit is set\nR = Read-only bit 0 = Bit is cleared U = Unimplemented bit, read as ‘0’\n-n = Value at POR R/LH = Read-only latch bit R/LL = Bit latches low LH = Bit latches high\nbit 15-13 Unimplemented:  Read as ‘0’\nbit 12 PFDPX:  PHY Full-Duplex Capable bit \n1 = PHY is capable of operating at 10 Mbps in Full-Duplex mode (this bit is always set)\nbit 11 PHDPX:  PHY Half-Duplex Capable bit\n1 = PHY is capable of operating at 10 Mbps in Half-Duplex mode (this bit is always set)\nbit 10-3 Unimplemented:  Read as ‘0’\nbit 2 LLSTAT:  PHY Latching Link Status bit\n1 = Link is up and has been up continously since PHSTAT1 was last read\n0 = Link is down or was down for a period since PHSTAT1 was last read\nbit 1 JBSTAT:  PHY Latching Jabber Status bit\n1 = PHY has detected a transmission meeting the jabber criteria since PHSTAT1 was last read\n0 = PHY has not detected any jabbering transmissions since PHSTAT1 was last read\nbit 0 Unimplemented:  Read as ‘0’\nENC28J60\nDS39662E-page 24 . \uf0e3 2006-2012 Microchip Technology Inc.  \nREGISTER 3-6: PHSTAT2: PHYSI CAL LAYER STATUS REGISTER 2\nU-0 U-0 R-0 R-0 R-0 R-0 R-x U-0\n— — TXSTAT RXSTAT COLSTAT LSTAT DPXSTAT(1)—\nbit 15 bit 8\nU-0 U-0 R-0 U-0 U-0 U-0 U-0 U-0\n— —P L R I T Y — — — — —\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15-14 Unimplemented:  Read as ‘0’\nbit 13 TXSTAT:  PHY Transmit Status bit\n1 = PHY is transmitting data\n0 = PHY is not transmitting data \nbit 12 RXSTAT:  PHY Receive Status bit\n1 = PHY is receiving data\n0 = PHY is not receiving data \nbit 11 COLSTAT:  PHY Collision Status bit\n1 = A collision is occuring\n0 = A collision is not occuring\nbit 10 LSTAT:  PHY Link Status bit (non-latching)\n1 =L i n k  i s  u p\n0 =L i n k  i s  d o w n\nbit 9 DPXSTAT:  PHY Duplex Status bit(1)\n1 = PHY is configured for full-duplex operation (PHCON1<8> is set)\n0 = PHY is configured for half-duplex operation (PHCON1<8> is clear)\nbit 8-6 Unimplemented:  Read as ‘0’\nbit 5 PLRITY:  Polarity Status bit\n1 = The polarity of the signal on TPIN+/TPIN- is reversed\n0 = The polarity of the signal on TPIN+/TPIN- is correct\nbit 4-0 Unimplemented:  Read as ‘0’\nNote 1: Reset values of the Duplex mode/status bit depends on the connection of the LED to the LEDB pin (see \nSection 2.6 “LED Configuration”  for additional details).\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 25ENC28J60\n4.0 SERIAL PERIPHERAL \nINTERFACE (SPI)\n4.1 Overview\nThe ENC28J60 is designed to interface directly with the\nSerial Peripheral Interface (SPI) port available on many\nmicrocontrollers. The implementation used on thisdevice supports SPI mode 0,0 only. In addition, the SPI\nport requires that SCK be at Idle in a low state;\nselectable clock polarity is not supported.Commands and data are sent to the device via the SI\npin, with data being clocked in on the rising edge of\nSCK. Data is driven out by the ENC28J60 on the SO\nline, on the falling edge of SCK. The CS\n pin must be\nheld low while any operation is performed and returned\nhigh when finished. \nFIGURE 4-1: SPI INPUT TIMING\nFIGURE 4-2: SPI OUTPUT TIMINGCS\nSCK\nSI\nSOLSb In MSb In\nHigh-Impedance State\nCS\nSCK\nSOMSb Out LSb Out\nDon’t CareSI\nENC28J60\nDS39662E-page 26 . \uf0e3 2006-2012 Microchip Technology Inc.4.2 SPI Instruction Set\nThe operation of the ENC28J60 depends entirely on\ncommands given by an external host controller over theSPI interface. These commands take the form of\ninstructions, of one or more bytes, which are used to\naccess the control memory and Ethernet buffer spaces.At the least, instructions consist of a 3-bit opcode,followed by a 5-bit argument that specifies either a\nregister address or a data constant. Write and bit field\ninstructions are also followed by one or more bytes of\ndata.\nA total of seven instructions are implemented on the\nENC28J60. Table 4-1  shows the command codes for\nall operations. \nTABLE 4-1: SPI INSTRUCTION SET FOR THE ENC28J60\nInstruction \nName and MnemonicByte 0 Byte 1 and Following\nOpcode Argument Data\nRead Control Register\n(RCR)000aaaaa N/A\nRead Buffer Memory\n(RBM)00111010 N/A\nWrite Control Register \n(WCR)010aaaaad   d   d   d   d   d   d   d\nWrite Buffer Memory \n(WBM)01111010d   d   d   d   d   d   d   d\nBit Field Set\n(BFS)100aaaaad   d   d   d   d   d   d   d\nBit Field Clear\n(BFC)101aaaaad   d   d   d   d   d   d   d\nSystem Reset Command (Soft Reset) \n(SRC)11111111 N/A\nLegend: a = Control Register Address, d = Data Payload\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 27ENC28J60\n4.2.1 READ CONTROL REGISTER \nCOMMAND\nThe Read Control Register (RCR) command allows the\nhost controller to read any of the ETH, MAC and MIIregisters in any order. The contents of the PHY regis-\nters are read via a special MII register interface (see\nSection 3.3.1 “Reading PHY Registers”  for more\ninformation).\nThe RCR command is started by pulling the CS\n pin low.\nThe RCR opcode is then sent to the ENC28J60,\nfollowed by a 5-bit register address (A4 through A0).The 5-bit address identifies any of the 32 controlregisters in the current bank. If the 5-bit address is an\nETH register, then data in the selected register will\nimmediately start shifting out MSb first on the SO pin.\nFigure 4-3  shows the read sequence for these\nregisters.\nIf the address specifies one of the MAC or MII registers,\na dummy byte will first be shifted out on the SO pin.\nAfter the dummy byte, the data will be shifted out MSbfirst on the SO pin. The RCR operation is terminated by\nraising the CS\n pin. Figure 4-4  shows the read\nsequence for MAC and MII registers.\nFIGURE 4-3: READ CONTRO L REGISTER COMMAND SEQUENCE (ETH REGISTERS)\nFIGURE 4-4: READ CONTROL REGISTER COMMAND SEQUENCE \n(MAC AND MII REGISTERS)SOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1\n76543210Data Out20 3 4000 1Opcode Address\nHigh-Impedance State\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n2034000 1\n76543210Opcode\nDummy Byte\nHigh-Impedance State23\n76543210Data Byte OutAddress\nENC28J60\nDS39662E-page 28 . \uf0e3 2006-2012 Microchip Technology Inc.4.2.2 READ BUFFER MEMORY \nCOMMAND\nThe Read Buffer Memory (RBM) command allows the\nhost controller to read bytes from the integrated 8-Kbytetransmit and receive buffer memory. \nIf the AUTOINC bit in the ECON2 register is set, the\nERDPT Pointer will automatically increment to point to\nthe next address after the last bit of each byte is read.The next address will normally be the current address\nincremented by one. However, if the last byte in the\nreceive buffer is read (ERDPT = ERXND), the ERDPTPointer will change to the beginning of the receive buf-\nfer (ERXST). This allows the host controller to read\npackets from the receive buffer in a continuous streamwithout keeping track of when a wraparound is needed.\nIf AUTOINC is set when address, 1FFFh, is read and\nERXND does not point to this address, the ReadPointer will increment and wrap around to 0000h.\nThe RBM command is started by pulling the CS\n pin low.\nThe RBM opcode is then sent to the ENC28J60,\nfollowed by the 5-bit constant, 1Ah. After the RBM com-mand and constant are sent, the data stored in the\nmemory pointed to by ERDPT will be shifted out MSb\nfirst on the SO pin. If the host controller continues toprovide clocks on the SCK pin, without raising CS\n, the\nbyte pointed to by ERDPT will again be shifted out MSb\nfirst on the SO pin. In this manner, with AUTOINCenabled, it is possible to continuously read sequential\nbytes from the buffer memory without any extra SPI\ncommand overhead. The RBM command is terminatedby raising the CS\n pin. 4.2.3 WRITE CONTROL REGISTER \nCOMMAND\nThe Write Control Register (WCR) command allows\nthe host controller to write to any of the ETH, MAC andMII Control registers in any order. The PHY registers\nare written to via a special MII register interface (see\nSection 3.3.2 “Writing PHY Registers”  for more\ninformation).\nThe WCR command is started by pulling the CS\n pin\nlow. The WCR opcode is then sent to the ENC28J60,\nfollowed by a 5-bit address (A4 through A0). The 5-bitaddress identifies any of the 32 control registers in the\ncurrent bank. After the WCR command and address\nare sent, actual data that is to be written is sent, MSbfirst. The data will be written to the addressed register\non the rising edge of the SCK line. \nThe WCR operation is terminated by raising the CS\n pin.\nIf the CS  line is allowed to go high before eight bits are\nloaded, the write will be aborted for that data byte.\nRefer to the timing diagram in Figure 4-5  for a more\ndetailed illustration of the byte write sequence.\nFIGURE 4-5: WRITE CONTROL REGISTER COMMAND SEQUENCE\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1\nD7 6 5 4 1D 0 32Data Byte\nHigh-Impedance State20 3 A4010 1Opcode Address\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 29ENC28J60\n4.2.4 WRITE BUFFER MEMORY \nCOMMAND\nThe Write Buffer Memory (WBM) command allows the\nhost controller to write bytes to the integrated 8-Kbytetransmit and receive buffer memory. \nIf the AUTOINC bit in the ECON2 register is set, after\nthe last bit of each byte is written, the EWRPT Pointer\nwill automatically be incremented to point to the nextsequential address (Current Address + 1). If address,\n1FFFh, is written with AUTOINC set, the Write Pointer\nwill increment to 0000h.\nThe WBM command is started by lowering the CS\n pin.\nThe WBM opcode should then be sent to the\nENC28J60, followed by the 5-bit constant, 1Ah. After\nthe WBM command and constant are sent, the data tobe stored in the memory pointed to by EWRPT should\nbe shifted out MSb first to the ENC28J60. After 8 data\nbits are received, the Write Pointer will automaticallyincrement if AUTOINC is set. The host controller can\ncontinue to provide clocks on the SCK pin and send\ndata on the SI pin, without raising CS\n, to keep writing to\nthe memory. In this manner, with AUTOINC enabled, it\nis possible to continuously write sequential bytes to the\nbuffer memory without any extra SPI commandoverhead. \nThe WBM command is terminated by bringing up the\nCS\n pin. Refer to Figure 4-6  for a detailed illustration of\nthe write sequence.\n4.2.5 BIT FIELD SET COMMAND\nThe Bit Field Set (BFS) command is used to set up to8 bits in any of the ETH Control registers. Note that this\ncommand cannot be used on the MAC registers, MII\nregisters, PHY registers or buffer memory. The BFS com-\nmand uses the provided data byte to perform a bit-wise\nOR operation on the addressed register contents.The BFS command is started by pulling the CS\n pin low.\nThe BFS opcode is then sent, followed by a 5-bit\naddress (A4 through A0). The 5-bit address identifies\nany of the ETH registers in the current bank. After theBFS command and address are sent, the data byte\ncontaining the bit field set information should be sent,\nMSb first. The supplied data will be logically ORed tothe content of the addressed register on the rising\nedge of the SCK line for the D0 bit. \nIf the CS\n line is brought high before eight bits are\nloaded, the operation will be aborted for that databyte. The BFS operation is terminated by raising the\nCS\n pin. \n4.2.6 BIT FIELD CLEAR COMMAND\nThe Bit Field Clear (BFC) command is used to clear up\nto 8 bits in any of the ETH Control registers. Note thatthis command cannot be used on the MAC registers,\nMII registers, PHY registers or buffer memory. The BFC\ncommand uses the provided data byte to perform a bit-wise NOTAND operation on the addressed register\ncontents. As an example, if a register had the contents\nof F1h and the BFC command was executed with anoperand of 17h, then the register would be changed to\nhave the contents of E0h.\nThe BFC command is started by lowering the CS\n pin.\nThe BFC opcode should then be sent, followed by a5-bit address (A4 through A0). The 5-bit address\nidentifies any of the ETH registers in the current bank.\nAfter the BFC command and address are sent, a databyte containing the bit field clear information should\nbe sent, MSb first. The supplied data will be logically\ninverted and subsequently ANDed to the contents ofthe addressed register on the rising edge of the SCK\nline for the D0 bit.\nThe BFC operation is terminated by bringing the CS\n pin\nhigh. If CS  is brought high before eight bits are loaded,\nthe operation will be aborted for that data byte. \nFIGURE 4-6: WRITE BUFFER MEMORY COMMAND SEQUENCE\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n0011110 7654 1D 0 7654321023\n32 1Data Byte 0 Data Byte 1 Opcode Address\nHigh-Impedance State\nENC28J60\nDS39662E-page 30 . \uf0e3 2006-2012 Microchip Technology Inc.4.2.7 SYSTEM RESET COMMAND\nThe System Reset Command (SRC) allows the host\ncontroller to issue a System Soft Reset command.Unlike other SPI commands, the SRC is only a single\nbyte command and does not operate on any register. The command is started by pulling the CS\n pin low. The\nSRC opcode is the sent, followed by a 5-bit Soft Reset\ncommand constant of 1Fh. The SRC operation is\nterminated by raising the CS  pin. \nFigure 4-7  shows a detailed illustration of the System\nReset Command sequence. For more information on\nSRC’s Soft Reset, refer to Section 11.2 “System\nReset” .\nFIGURE 4-7: SYSTEM RESET COMMAND SEQUENCE\nSOSISCKCS\n0 234567 1\n1111111Opcode\n1\nHigh-Impedance StateData Constant (1Fh)\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 31ENC28J60\n5.0 ETHERNET OVERVIEW\nBefore discussing the use of the ENC28J60 as an\nEthernet interface, it may be helpful to review the\nstructure of a typical data frame. Users requiring moreinformation should refer to the IEEE 802.3 standard\nwhich is the basis for the Ethernet protocol.\n5.1 Packet Format\nNormal IEEE 802.3 compliant Ethernet frames are\nbetween 64 and 1518 bytes long. They are made up offive or six different fields: a destination MAC address, a\nsource MAC address, a type/length field, data payload,\nan optional padding field and a Cyclic RedundancyCheck (CRC). Additionally, when transmitted on the\nEthernet medium, a 7-byte preamble field and Start-of-\nFrame (SOF) delimiter byte are appended to thebeginning of the Ethernet packet. Thus, traffic seen on\nthe twisted-pair cabling will appear as shown in\nFigure 5-1 . \n5.1.1 PREAMBLE/START-OF-FRAME \nDELIMITER\nWhen transmitting and receiving data with the\nENC28J60, the preamble and Start-of-Frame delimiterbytes will automatically be generated or stripped from\nthe packets when they are transmitted or received. The\nhost controller does not need to concern itself withthem. Normally, the host controller will also not need to\nconcern itself with padding and the CRC which the\nENC28J60 will also be able to automatically generatewhen transmitting and verify when receiving. The\npadding and CRC fields will, however, be written into\nthe receive buffer when packets arrive, so they may beevaluated by the host controller if needed.\nFIGURE 5-1: ETHERNET PACKET FORMAT\nSA\nPadding\nFCS(1)Number Field Comments\n6\n46-1500\n4DADestination Address,\nsuch as Multicast, Broadcast or Unicast\nSource Address\nPacket Payload\nFrame Check Sequence – CRCType/Length\nDataof Bytes\n6\n2 Type of Packet or the Length of the Packet\n(with optional padding)7 Preamble Filtered Out by the Module\nSFD 1Start-of-Frame Delimiter\n(filtered out by the module)\nUsed in the\nCalculation\nof the FCS\nNote 1: The FCS is transmitted starting with bit 31 and ending with bit 0.\nENC28J60\nDS39662E-page 32 . \uf0e3 2006-2012 Microchip Technology Inc.5.1.2 DESTINATION ADDRESS\nThe destination address field is a 6-byte field filled with\nthe MAC address of the device that the packet is directedto. If the Least Significant bit in the first byte of the MACaddress is set, the address is a Multicast destination. Forexample, 01-00-00-00-F0-00 and 33-45-67-89-AB-CD\nare Multicast addresses, while 00-00-00-00-F0-00 and\n32-45-67-89-AB-CD are not. \nPackets with Multicast destination addresses are\ndesigned to arrive and be important to a selected groupof Ethernet nodes. If the destination address field is thereserved Multicast address, FF-FF-FF-FF-FF-FF, thepacket is a Broadcast packet and it will be directed toeveryone sharing the network. If the Least Significant\nbit in the first byte of the MAC address is clear, the\naddress is a Unicast address and will be designed forusage by only the addressed node.\nThe ENC28J60 incorporates receive filters which can\nbe used to discard or accept packets with Multicast,Broadcast and/or Unicast destination addresses.When transmitting packets, the host controller isresponsible for writing the desired destination address\ninto the transmit buffer.\n5.1.3 SOURCE ADDRESS\nThe source address field is a 6-byte field filled with theMAC address of the node which created the Ethernet\npacket. Users of the ENC28J60 must generate aunique MAC address for each controller used. \nMAC addresses consist of two portions. The first three\nbytes are known as the Organizationally UniqueIdentifier (OUI). OUIs are distributed by the IEEE. Thelast three bytes are address bytes at the discretion ofthe company that purchased the OUI.\nWhen transmitting packets, the assigned source MAC\naddress must be written into the transmit buffer by thehost controller. The ENC28J60 will not automatically\ntransmit the contents of the MAADR registers which\nare used for the Unicast receive filter.\n5.1.4 TYPE/LENGTH\nThe type/length field is a 2-byte field which defineswhich protocol the following packet data belongs to.Alternately, if the field is filled with the contents of05DCh (1500) or any smaller number, the field isconsidered a length field and it specifies the amount ofnon-padding data which follows in the data field. Users\nimplementing proprietary networks may choose to treat\nthis field as a length field, while applications implement-ing protocols such as the Internet Protocol (IP) orAddress Resolution Protocol (ARP), should programthis field with the appropriate type defined by theprotocol’s specification when transmitting packets.5.1.5 DATA\nThe data field is a variable length field, anywhere from 0to 1500 bytes. Larger data packets will violate Ethernetstandards and will be dropped by most Ethernet nodes.The ENC28J60, however, is capable of transmitting andreceiving larger packets when the Huge Frame Enable\nbit is set (MACON3.HFRMEN = 1). \n5.1.6 PADDING\nThe padding field is a variable length field added to\nmeet IEEE 802.3 specification requirements when\nsmall data payloads are used. The destination, source,type, data and padding of an Ethernet packet must beno smaller than 60 bytes. Adding the required 4-byteCRC field, packets must be no smaller than 64 bytes. Ifthe data field is less than 46 bytes long, a padding field\nis required. \nWhen transmitting packets, the ENC28J60 automatically\ngenerates zero-padding if the MACON3.PADCFG<2:0>\nbits are configured to do so. Otherwise, the host control-ler should manually add padding to the packet beforetransmitting it. The ENC28J60 will not prevent the\ntransmission of undersize packets should the hostcontroller command such an action. \nWhen receiving packets, the ENC28J60 automatically\nrejects packets which are less than 18 bytes; it is\nassumed that a packet this small does not contain even\nthe minimum of source and destination addresses, typeinformation and FCS checksum required for all pack-ets. All packets 18 bytes and larger will be subject tothe standard receive filtering criteria and may beaccepted as normal traffic. To conform with IEEE 802.3requirements, the application itself will need to inspect\nall received packets and reject those smaller than\n64 bytes.\n5.1.7 CRC\nThe CRC field is a 4-byte field which contains an indus-try standard 32-bit CRC calculated with the data fromthe destination, source, type, data and padding fields.\nWhen receiving packets, the ENC28J60 will check the\nCRC of each incoming packet. If ERXFCON.CRCEN isset, packets with invalid CRCs will automatically bediscarded. If CRCEN is clear and the packet meets allother receive filtering criteria, the packet will be written\ninto the receive buffer and the host controller will be\nable to determine if the CRC was valid by reading thereceive status vector (see Section 7.2 “Receiving\nPackets” ). \nWhen transmitting packets, the ENC28J60 will auto-\nmatically generate a valid CRC and transmit it if theMACON3.PADCFG<2:0> bits are configured to causethis. Otherwise, the host controller must generate the\nCRC and place it in the transmit buffer. Given the com-\nplexity of calculating a CRC, it is highly recommendedthat the PADCFG bits be configured such that theENC28J60 will automatically generate the CRC field. \n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 33ENC28J60\n6.0 INITIALIZATION\nBefore the ENC28J60 can be used to transmit and\nreceive packets, certain device settings must be initial-\nized. Depending on the application, some configurationoptions may need to be changed. Normally, these tasks\nmay be accomplished once after Reset and do not\nneed to be changed thereafter.\n6.1 Receive Buffer\nBefore receiving any packets, the receive buffer mustbe initialized by programming the ERXST and ERXND\nPointers. All memory between and including the\nERXST and ERXND addresses will be dedicated to thereceive hardware. It is recommended that the ERXST\nPointer be programmed with an even address.\nApplications expecting large amounts of data and\nfrequent packet delivery may wish to allocate most ofthe memory as the receive buffer. Applications that\nmay need to save older packets or have several\npackets ready for transmission should allocate lessmemory. \nWhen programming the ERXST or ERXND Pointer, the\ninternal hardware copy of the ERXWRPT registers will\nautomatically be updated with the value of ERXST. Thisvalue will be used as the starting location when the\nreceive hardware begins writing received data. The\nERXWRPT registers are updated by the hardware onlywhen a new packet is successfully received. \nFor tracking purposes, the ERXRDPT registers should\nadditionally be programmed with the same value. To\nprogram ERXRDPT, the host controller must write to\nERXRDPTL first, followed by ERXRDPTH. SeeSection 7.2.4 “Freeing Receive Buffer Space”  for\nmore information.6.2 Transmit Buffer\nAll memory which is not used by the receive buffer is\nconsidered the transmission buffer. Data which is to betransmitted should be written into any unused space.\nAfter a packet is transmitted, however, the hardware\nwill write a seven-byte status vector into memory afterthe last byte in the packet. Therefore, the host control-\nler should leave at least seven bytes between each\npacket and the beginning of the receive buffer. Noexplicit action is required to initialize the transmission\nbuffer.\n6.3 Receive Filters\nThe appropriate receive filters should be enabled or\ndisabled by writing to the ERXFCON register. SeeSection 8.0 “Receive Filters”  for information on how\nto configure it.\n6.4 Waiting for OST\nIf the initialization procedure is being executed immedi-\nately following a Power-on Reset, the ESTAT.CLKRDYbit should be polled to make certain that enough time\nhas elapsed before proceeding to modify the MAC and\nPHY registers. For more information on the OST, seeSection 2.2 “Oscillator Start-up Timer” .\nNote: After writing to ERXST or ERXND, the\nERXWRPT registers are not updatedimmediately; only the internal hardware\ncopy of the ERXWRPT registers is\nupdated. Therefore, comparing if(ERXWRPT = = ERXST) is not practical in\na firmware initialization routine.\nENC28J60\nDS39662E-page 34 . \uf0e3 2006-2012 Microchip Technology Inc.6.5 MAC Initialization Settings\nSeveral of the MAC registers require configuration\nduring initialization. This only needs to be done once;the order of programming is unimportant.\n1. Set the MARXEN bit in MACON1 to enable the\nMAC to receive frames. If using full duplex, most\napplications should also set TXPAUS andRXPAUS to allow IEEE defined flow control to\nfunction.\n2. Configure the PADCFG, TXCRCEN and\nFULDPX bits of MACON3. Most applications\nshould enable automatic padding to at least60 bytes and always append a valid CRC. For\nconvenience, many applications may wish to set\nthe FRMLNEN bit as well to enable frame lengthstatus reporting. The FULDPX bit should be set\nif the application will be connected to a\nfull-duplex configured remote node; otherwise, itshould be left clear.\n3. Configure the bits in MACON4. For confor-\nmance to the IEEE 802.3 standard, set the\nDEFER bit.4. Program the MAMXFL registers with the maxi-\nmum frame length to be permitted to be received\nor transmitted. Normal network nodes are\ndesigned to handle packets that are 1518 bytesor less.\n5. Configure the Back-to-Back Inter-Packet Gap\nregister, MABBIPG. Most applications will pro-\ngram this register with 15h when Full-Duplex\nmode is used and 12h when Half-Duplex modeis used.\n6. Configure the Non-Back-to-Back Inter-Packet\nGap register low byte, MAIPGL. Most applications\nwill program this register with 12h.\n7. If half duplex is used, the Non-Back-to-Back\nInter-Packet Gap register high byte, MAIPGH,\nshould be programmed. Most applications willprogram this register to 0Ch.\n8. If Half-Duplex mode is used, program the\nRetransmission and Collision Window registers,\nMACLCON1 and MACLCON2. Most applications\nwill not need to change the default Reset values.If the network is spread over exceptionally long\ncables, the default value of MACLCON2 may\nneed to be increased.\n9. Program the local MAC address into the\nMAADR1:MAADR6 registers. \n \nREGISTER 6-1: MACON1: MAC CONTROL REGISTER 1\nU-0 U-0 U-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\n— — — r TXPAUS RXPAUS PASSALL MARXEN\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 Unimplemented: Read as ‘0’\nbit 4 Reserved: Maintain as ‘ 0’\nbit 3 TXPAUS: Pause Control Frame Transmission Enable bit\n1 = Allow the MAC to transmit pause control frames (needed for flow control in full duplex)\n0 = Disallow pause frame transmissions\nbit 2 RXPAUS: Pause Control Frame Reception Enable bit\n1 = Inhibit transmissions when pause control frames are received (normal operation)\n0 = Ignore pause control frames which are received\nbit 1 PASSALL: Pass All Received Frames Enable bit\n1 = Control frames received by the MAC will be written into the receive buffer if not filtered out\n0 = Control frames will be discarded after being processed by the MAC (normal operation)\nbit 0 MARXEN: MAC Receive Enable bit\n1 = Enable packets to be received by the MAC\n0 = Disable packet reception\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 35ENC28J60\n   \nREGISTER 6-2: MACON3: MAC CONTROL REGISTER 3\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nPADCFG2 PADCFG1 PADCFG0 TXCRCEN PHDREN HFRMEN FRMLNEN FULDPX\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 PADCFG<2:0>: Automatic Pad and CRC Configuration bits\n111 = All short frames will be zero-padded to 64 bytes and a valid CRC will then be appended\n110 = No automatic padding of short frames\n101 = MAC will automatically detect VLAN Protoc ol frames which have a 8100h type field and auto-\nmatically pad to 64 bytes. If the frame is not a VLAN frame, it will be padded to 60 bytes. Afterpadding, a valid CRC will be appended.\n100 = No automatic padding of short frames\n011 = All short frames will be zero-padded to 64 bytes and a valid CRC will then be appended\n010 = No automatic padding of short frames\n001 = All short frames will be zero-padded to 60 bytes and a valid CRC will then be appended\n000 = No automatic padding of short frames\nbit 4 TXCRCEN: Transmit CRC Enable bit\n1 = MAC will append a valid CRC to all frames transmitted regardless of PADCFG bits. TXCRCEN\nmust be set if the PADCFG bits specify that a valid CRC will be appended.\n0 = MAC will not append a CRC. The last 4 bytes will be checked and if it is an invalid CRC, it will be\nreported in the transmit status vector.\nbit 3 PHDREN: Proprietary Header Enable bit\n1 = Frames presented to the MAC contain a 4-byte proprietary header which will not be used when\ncalculating the CRC\n0 = No proprietary header is present. The CRC will cover all data (normal operation).\nbit 2 HFRMEN: Huge Frame Enable bit\n1 = Frames of any size will be allowed to be transmitted and received\n0 = Frames bigger than MAMXFL will be aborted when transmitted or received\nbit 1 FRMLNEN: Frame Length Checking Enable bit\n1 = The type/length field of transmitted and received fram es will be checked. If it represents a length, the\nframe size will be compared and mismatches will be reported in the transmit/receive status vector.\n0 = Frame lengths will not be compared with the type/length field\nbit 0 FULDPX: MAC Full-Duplex Enable bit\n1 = MAC will operate in Full-Duplex mode. PDPXMD bit must also be set.\n0 = MAC will operate in Half-Duplex mode. PDPXMD bit must also be clear.\nENC28J60\nDS39662E-page 36 . \uf0e3 2006-2012 Microchip Technology Inc.   \n   REGISTER 6-3: MACON4: MAC CONTROL REGISTER 4\nU-0 R/W-0 R/W-0 R/W-0 U-0 U-0 R-0 R-0\n— DEFER BPEN NOBKOFF — — r r\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented: Read as ‘0’\nbit 6 DEFER: Defer Transmission Enable bit (applies to half duplex only)\n1 = When the medium is occupied, the MAC will wait indefinitely for it to become free when attempting\nto transmit (use this setting for IEEE 802.3™ compliance)\n0 = When the medium is occupied, the MAC will abort the transmission after the excessive deferral\nlimit is reached\nbit 5 BPEN: No Backoff During Backpressure Enable bit (applies to half duplex only)\n1 = After incidentally causing a collision during backpressure, the MAC will immediately begin\nretransmitting\n0 = After incidentally causing a collision during backpressure, the MAC will delay using the Binary\nExponential Backoff algorithm before attempting to retransmit (normal operation)\nbit 4 NOBKOFF: No Backoff Enable bit (applies to half duplex only)\n1 = After any collision, the MAC will immediately begin retransmitting\n0 = After any collision, the MAC will delay using the Binary Exponential Backoff algorithm before\nattempting to retransmit (normal operation)\nbit 3-2 Unimplemented: Read as ‘0’\nbit 1-0 Reserved: Maintain as ‘ 0’\nREGISTER 6-4: MABBIPG: MAC BACK- TO-BACK INTER-PACKET GAP REGISTER\nU-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\n— BBIPG6 BBIPG5 BBIPG4 BBIPG3 BBIPG2 BBIPG1 BBIPG0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented: Read as ‘0’\nbit 6-0 BBIPG<6:0>: Back-to-Back Inter-Packet Gap Delay Time bits\nWhen FULDPX (MACON3<0>) = 1:\nNibble time offset delay between the end of one transmission and the beginning of the next in a\nback-to-back sequence. The register value should be programmed to the desired period in nibble timesminus 3. The recommended setting is 15h which represents the minimum IEEE specified Inter-Packet\nGap (IPG) of 9.6 \uf06ds.\nWhen FULDPX (MACON3<0>) = \n0:\nNibble time offset delay between the end of one transmission and the beginning of the next in a\nback-to-back sequence. The register value should be programmed to the desired period in nibble timesminus 6. The recommended setting is 12h which represents the minimum IEEE specified Inter-Packet\nGap (IPG) of 9.6 \uf06ds.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 37ENC28J60\n6.6 PHY Initialization Settings\nDepending on the application, bits in three of the PHY\nmodule’s registers may also require configuration.\nThe PHCON1.PDPXMD bit partially controls the\ndevice’s half/full-duplex configuration. Normally, this bit\nis initialized correctly by the external circuitry (see\nSection 2.6 “LED Configuration” ). If the external\ncircuitry is not present or incorrect, however, the host\ncontroller must program the bit properly. Alternatively,\nfor an externally configurable system, the PDPXMD bitmay be read and the FULDPX bit be programmed to\nmatch. \nFor proper duplex operation, the PHCON1.PDPXMD\nbit must also match the value of the MACON3.FULDPXbit. If using half duplex, the host controller may wish to set\nthe PHCON2.HDLDIS bit to prevent automatic\nloopback of the data which is transmitted.\nThe PHY register, PHLCON, controls the outputs of\nLEDA and LEDB. If an application requires a LEDconfiguration other than the default, PHLCON must be\naltered to match the new requirements. The settings for\nLED operation are discussed in Section 2.6 “LED\nConfiguration” . The PHLCON register is shown in\nRegister 2-2  (page 9).\n  \nREGISTER 6-5: PHCON2: PHY CONTROL REGISTER 2\nU-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\n— FRCLNK TXDIS r r JABBER r HDLDIS\nbit 15 bit 8\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nr r r r r r r r\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15 Unimplemented:  Read as ‘0’\nbit 14 FRCLNK:  PHY Force Linkup bit \n1 = Force linkup even when no link partner is detected\n0 = Normal operation\nbit 13 TXDIS:  Twisted-Pair Transmitter Disable bit\n1 = Disable twisted-pair transmitter\n0 = Normal operation\nbit 12-11 Reserved: Write as ‘0’\nbit 10 JABBER:  Jabber Correction Disable bit\n1 = Disable jabber correction\n0 = Normal operation\nbit 9 Reserved: Write as ‘0’\nbit 8 HDLDIS:  PHY Half-Duplex Loopback Disable bit\nWhen PHCON1<8> = 1 or PHCON1<14> = 1:\nThis bit is ignored.When PHCON1<8> = \n0 and PHCON1<14> = 0:\n1 = Transmitted data will only be sent out on the twisted-pair interface\n0 = Transmitted data will be looped back to the MAC and sent out on the twisted-pair interface\nbit 7-0 Reserved: Write as ‘0’\nENC28J60\nDS39662E-page 38 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 39ENC28J60\n7.0 TRANSMITTING AND \nRECEIVING PACKETS\n7.1 Transmitting Packets\nThe MAC inside the ENC28J60 will automatically gener-\nate the preamble and Start-of-Frame delimiter fields\nwhen transmitting. Additionally, the MAC can generateany padding (if needed) and the CRC if configured to do\nso. The host controller must generate and write all other\nframe fields into the buffer memory for transmission.Additionally, the ENC28J60 requires a single per packet\ncontrol byte to precede the packet for transmission. The\nper packet control byte is organized as shown in\nFigure 7-1 . Before transmitting packets, the MAC\nregisters which alter the transmission characteristics\nshould be initialized as documented in Section 6.0\n“Initialization” .\nFor an example of how the entire transmit packet and\nresults will look in memory, see Figure 7-2 .\nFIGURE 7-1: FORMAT FOR PE R PACKET CONTROL BYTES\n      \n— — — — PHUGEEN PPADEN PCRCEN POVERRIDE\nbit 7 bit 0\nbit 7-4 Unused\nbit 3 PHUGEEN: Per Packet Huge Frame Enable bit\nWhen POVERRIDE = 1:\n1 = The packet will be transmitted in whole\n0 = The MAC will transmit up to the number of bytes specified by MAMXFL; if the packet is larger\nthan MAMXFL, it will be aborted after MAMXFL is reached\nWhen POVERRIDE = 0:\nThis bit is ignored.\nbit 2 PPADEN: Per Packet Padding Enable bit\nWhen POVERRIDE = 1:\n1 = The packet will be zero-padded to 60 bytes if it is less than 60 bytes\n0 = The packet will be transmitted without adding any padding bytes\nWhen POVERRIDE = 0:\nThis bit is ignored.\nbit 1 PCRCEN: Per Packet CRC Enable bit\nWhen POVERRIDE = 1:\n1 = A valid CRC will be calculated and attached to the frame\n0 = No CRC will be appended; the last 4 bytes of the frame will be checked for validity as a CRC.\nWhen POVERRIDE = 0:\nThis bit is ignored.\nbit 0 POVERRIDE: Per Packet Override bit\n1 = The values of PCRCEN, PPADEN and PHUGEEN will override the configuration defined by\nMACON3\n0 = The values in MACON3 will be used to determine how the packet will be transmitted\nENC28J60\nDS39662E-page 40 . \uf0e3 2006-2012 Microchip Technology Inc.FIGURE 7-2: SAMPLE TRANSMIT PACKET LAYOUT\nTo achieve the example layout shown in Figure 7-2  and\nto transmit a packet, the host controller should:\n1. Appropriately program the ETXST Pointer to\npoint to an unused location in memory. It will\npoint to the per packet control byte. In the\nexample, it would be programmed to 0120h. It isrecommended that an even address be used for\nETXST.\n2. Use the WBM SPI command to write the per\npacket control byte, the destination address, the\nsource MAC address, the type/length and thedata payload.\n3. Appropriately program the ETXND Pointer. It\nshould point to the last byte in the data payload.\nIn the example, it would be programmed to\n0156h.\n4. Clear EIR.TXIF, set EIE.TXIE and set EIE.INTIE\nto enable an interrupt when done (if desired).\n5. Start the transmission process by setting\nECON1.TXRTS.\nIf a DMA operation was in progress while the TXRTS bit\nwas set, the ENC28J60 will wait until the DMA opera-\ntion is complete before attempting to transmit the\npacket. This possible delay is required because theDMA and transmission engine share the same memory\naccess port. Similarly, if the DMAST bit in ECON1 is setafter TXRTS is already set, the DMA will wait until the\nTXRTS bit becomes clear before doing anything. While\nthe transmission is in progress, none of the unshadedbits (except for the ECON1 register’s bits) in Table 7-2\nshould be changed. Additionally, none of the bytes to be\ntransmitted should be read or written to through the SPI.If the host controller wishes to cancel the transmission,\nit can clear the TXRTS bit.\nWhen the packet is finished transmitting or is aborted\ndue to an error/cancellation, the ECON1.TXRTS bit willbe cleared, a seven-byte transmit status vector will be\nwritten to the location pointed to by ETXND + 1, the\nEIR.TXIF will be set and an interrupt will be generated(if enabled). The ETXST and ETXND Pointers will not\nbe modified. To check if the packet was successfully\ntransmitted, the ESTAT.TXABRT bit should be read. Ifit was set, the host controller may interrogate the\nESTAT.LATECOL bit in addition to the various fields in\nthe transmit status vector to determine the cause. Thetransmit status vector is organized as shown in\nTable 7-1 . Multi-byte fields are written in little-endian\nformat.Control\ntsv[7:0]\ntsv[15:8]Address Memory Description\n0120h\n0121h\n0122h\n015Ah\n015Bh\n015Ch\n015Dh0EhPHUGEEN, PPADN, \nDestination Address, \n015Eh\nStart of the Next Packettsv[23:16]\ntsv[31:24]data[1]\ndata[2]\ntsv[39:32]\ntsv[47:40]tsv[55:48]0159h0157h\n0158h0156h data[m]Data Packet\nStatus VectorStatus Vector ETXST = 0120h\nETXND = 0156hType/Length and DataPCRCEN and POVERRIDE\nWritten by the HardwareSource Address,Buffer Pointers\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 41ENC28J60\nTABLE 7-1: TRANSMIT STATUS VECTORS\nBit Field Description\n55-52 Zero 0\n51 Transmit VLAN Tagged Frame Frame’s length/type field contained 8100h which is the VLAN protocol \nidentifier.\n50 Backpressure Applied Carrier sense method backpressure was previously applied.\n49 Transmit Pause Control Frame The frame transmit ted was a control frame with a valid pause opcode.\n48 Transmit Control Frame The frame transmitted was a control frame.\n47-32 Total Bytes Transmitted on Wire Total bytes transmitted on the wire for the current packet, including all \nbytes from collided attempts.\n31 Transmit Underrun Reserved. This bit will always be ‘ 0’.\n30 Transmit Giant Byte count for frame was greater than MAMXFL.\n29 Transmit Late Collision Collision occurred beyond the collision window (MACLCON2).28 Transmit Excessive Collision Packet was aborted after the number of collisions exceeded the \nretransmission maximum (MACLCON1).\n27 Transmit Excessive Defer Packet was deferred in excess of 24,287 bit times (2.4287 ms).26 Transmit Packet Defer Packet was deferred for at least one attempt but less than an excessive \ndefer.\n25 Transmit Broadcast Packet’s destination address was a Broadcast address.24 Transmit Multicast Packet’s destination address was a Multicast address.\n23 Transmit Done Transmission of the packet was completed.\n22 Transmit Length Out of Range Indicates that frame type/length field was larger than 1500 bytes \n(type field).\n21 Transmit Length Check Error Indicates that frame length field value in the packet does not match the \nactual data byte length and is not a type field. MACON3.FRMLNEN must be set to get this error.\n20 Transmit CRC Error The attached CRC in the packet did not match the internally generated \nCRC.\n19-16 Transmit Collision Count Number of collisions the current packet incurred during transmission \nattempts. It applies to successfully transmitted packets and as such, will \nnot show the possible maximum count of 16 collisions.\n15-0 Transmit Byte Count Total bytes in frame not counting collided bytes.\nENC28J60\nDS39662E-page 42 . \uf0e3 2006-2012 Microchip Technology Inc.TABLE 7-2: SUMMARY OF REGISTERS USED FOR PACKET TRANSMISSION\nRegister \nNameBit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues\non page\nEIE INTIE PKTIE DMAIE LINKIE TXIE rT X E R I E RXERIE 13\nEIR — PKTIF DMAIF LINKIF TXIF r TXERIF RXERIF 13\nESTAT INT BUFER rL A T E C O L — RXBUSY TXABRT CLKRDY(1)13\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nETXSTL TX Start Low Byte (ETXST<7:0>) 13\nETXSTH — — — TX Start High Byte (ETXST<12:8>) 13\nETXNDL TX End Low Byte (ETXND<7:0>) 13\nETXNDH — — — TX End High Byte (ETXND<12:8>) 13\nMACON1 — — — r TXPAUS RXPAUS PASSALL MARXEN 14\nMACON3 PADCFG2 PADCFG1 PADCFG0 TXCRCEN PHDREN HFRMEN FRMLNEN FULDPX 14\nMACON4 — DEFER BPEN NOBKOFF — — r r 14\nMABBIPG — Back-to-Back Inter-Packet Gap (BBIPG<6:0>) 14\nMAIPGL — Non-Back-to-Back Inter-Packet Gap Low Byte (MAIPGL<6:0>) 14\nMAIPGH — Non-Back-to-Back Inter-Packet Gap High Byte (MAIPGH<6:0>) 14\nMACLCON1 — — — — Retransmission Maximum (RETMAX<3:0>) 14\nMACLCON2 — — Collision Window (COLWIN<5:0>) 14\nMAMXFLL Maximum Frame Length Low Byte (MAMXFL<7:0>) 14\nMAMXFLH Maximum Frame Length High Byte (MAMXFL<15:8>) 14\nLegend: — = unimplemented, r = reserved bit. Shaded cells are not used.\nNote 1: CLKRDY resets to ‘ 0’ on a Power-on Reset but is unaffected on all other Resets.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 43ENC28J60\n7.2 Receiving Packets\n7.2.1 ENABLING RECEPTION\nAssuming that the receive buffer has been initialized,\nthe MAC has been properly configured and the receive\nfilters have been configured to receive Ethernetpackets, the host controller should:\n1. If an interrupt is desired whenever a packet is\nreceived, set EIE.PKTIE and EIE.INTIE.\n2. If an interrupt is desired whenever a packet is\ndropped due to insufficient buffer space, clear\nEIR.RXERIF and set both EIE.RXERIE andEIE.INTIE\n3. Enable reception by setting ECON1.RXEN.\nAfter setting RXEN, the Duplex mode and the Receive\nBuffer Start and End Pointers should not be modified.\nAdditionally, to prevent unexpected packets from arriv-\ning, it is recommended that RXEN be cleared beforealtering the receive filter configuration (ERXFCON) and\nMAC address. After reception is enabled, packets which are not\nfiltered out will be written into the circular receive buffer.\nAny packet which does not meet the necessary filter\ncriteria will be discarded and the host controller will nothave any means of identifying that a packet was thrown\naway. When a packet is accepted and completely\nwritten into the buffer, the EPKTCNT register will incre-ment, the EIR.PKTIF bit will be set, an interrupt will be\ngenerated (if enabled) and the Hardware Write Pointer,\nERXWRPT, will automatically advance. \n7.2.2 RECEIVE PACKET LAYOUT\nFigure 7-3  shows the layout of a received packet. The\npackets are preceded by a six-byte header which\ncontains a Next Packet Pointer, in addition to a receive\nstatus vector which contains receive statistics, includ-ing the packet’s size. This receive status vector is\nshown in Table 7-3 . \nIf the last byte in the packet ends on an odd value\naddress, the hardware will automatically add a paddingbyte when advancing the Hardware Write Pointer. As\nsuch, all packets will start on an even boundary.\nFIGURE 7-3: SAMPLE RECEIVE PACKET LAYOUT\nLow Byte\nHigh Byte\nrsv[7:0]\nrsv[15:8]\ndata[m-3]\ndata[m-2]data[m-1]\ndata[m]Address Memory Description\n1020h\n1021h\n1022h\n1023h\n105Ah\n105Bh\n105Ch1059h10h6EhNext Packet Pointer\nPacket Data: Destination Address,Receive Status Vector\ncrc[31:24]\ncrc[23:16]\ncrc[15:8]\ncrc[7:0]\n105Eh\nStart of the Next Packetrsv[23:16]\nrsv[30:24]1024h\n1025h\ndata[1] 1026h\ndata[2] 1027hstatus[7:0]\nstatus[15:8]\nstatus[23:16]\nstatus[31:24]\n105DhByte Skipped to Ensure\nEven Buffer Address101FhEnd of the Previous Packet Packet N – 1\nSource Address, Type/Length, Data,\nPadding, CRCPacket N\nPacket N + 1\nENC28J60\nDS39662E-page 44 . \uf0e3 2006-2012 Microchip Technology Inc.TABLE 7-3: RECEIVE STATUS VECTORS\n7.2.3 READING RECEIVED PACKETS\nTo process the packet, the host controller will normally\nuse the RBM SPI command and start reading from thebeginning of the next Packet Pointer. The host controller\nwill save the next Packet Pointer, any necessary bytes\nfrom the receive status vector and then proceed to read\nthe actual packet contents. If ECON2.AUTOINC is set, it\nwill be able to sequentially read the entire packet without\never modifying the ERDPT registers. The Read Pointer\nwould automatically wrap at the end of the circularreceive buffer to the beginning. In the event that the application needed to do random\naccess to the packet, it would be necessary to manu-\nally calculate the proper ERDPT, taking care to not\nexceed the end of the receive buffer if the packet spans\nthe ERXND-to-ERXST buffer boundary. In other words,\ngiven the packet start address and a desired offset, theapplication should follow the logic shown in\nExample 7-1 .\nEXAMPLE 7-1: RANDOM ACCESS  ADDRESS CALCULATIONBit Field Description\n31 Zero 0\n30 Receive VLAN Type Detected Current frame was recognized as a VLAN tagged frame.29 Receive Unknown Opcode Current frame was recognized as a control frame but it contained an \nunknown opcode.\n28 Receive Pause Control Frame Current frame was recognized as a control frame containing a valid pause \nframe opcode and a valid destination address.\n27 Receive Control Frame Current frame was recognized as a control frame for having a valid \ntype/length designating it as a control frame.\n26 Dribble Nibble Indicates that after the end of this packet, an additional 1 to 7 bits were \nreceived. The extra bits were thrown away.\n25 Receive Broadcast Packet Indicates packet received had a valid Broadcast address.24 Receive Multicast Packet Indicates packet received had a valid Multicast address.\n23 Received Ok Indicates that at the packet had a valid CRC and no symbol errors.\n22 Length Out of Range Indicates that frame type/length field was larger than 1500 bytes (type field).21 Length Check Error Indicates that frame length field value in the packet does not match the \nactual data byte length and specifies a valid length.\n20 CRC Error Indicates that frame CRC field value does not match the CRC calculated \nby the MAC.\n19 Reserved\n18 Carrier Event Previously Seen Indicates that at some time since the last receive, a carrier event was \ndetected. The carrier event is not associated with this packet. A carrier \nevent is activity on the receive channel that does not result in a packet \nreceive attempt being made.\n17 Reserved\n16 Long Event/Drop Event Indicates a packet over 50,000 bit times occurred or that a packet was \ndropped since the last receive.\n15-0 Received Byte Count Indicates length of the received frame. This includes the destination \naddress, source address, type/length, data, padding and CRC fields. This \nfield is stored in little-endian format.\nif Packet Start Address + Offset > ERXND, then\nERDPT = Packet Start Address + Offset – (ERXND – ERXST + 1)\nelse\nERDPT = Packet Start Address + Offset\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 45ENC28J60\n7.2.4 FREEING RECEIVE BUFFER SPACE\nAfter the host controller has processed a packet (or part\nof the packet) and wishes to free the buffer space usedby the processed data, the host controller must advance\nthe Receive Buffer Read Pointer, ERXRDPT. The\nENC28J60 will always write up to, but not including, thememory pointed to by the Receive Buffer Read Pointer.\nIf the ENC28J60 ever attempts to overwrite the Receive\nBuffer Read Pointer location, the packet in progress willbe aborted, the EIR.RXERIF will be set and an interrupt\nwill be generated (if enabled). In this manner, the\nhardware will never overwrite unprocessed packets.\nNormally, the ERXRDPT will be advanced to the value\npointed to by the next Packet Pointer which precedes\nthe receive status vector for the current packet. Follow-ing such a procedure will not require any pointer\ncalculations to account for wrapping at the end of the\ncircular receive buffer.\nThe Receive Buffer Read Pointer Low Byte\n(ERXRDPTL register) is internally buffered to prevent\nthe pointer from moving when only one byte is updated\nthrough the SPI. To move ERXRDPT, the host control-ler must write to ERXRDPTL first. The write will update\nthe internal buffer but will not affect the register. When\nthe host controller writes to ERXRDPTH, the internallybuffered low byte will be loaded into the ERXRDPTL\nregister at the same time. The ERXRDPT bytes can be\nread in any order. When they are read, the actual valueof the registers will be returned. As a result, the\nbuffered low byte is not readable.\nIn addition to advancing the Receive Buffer Read\nPointer, after each packet is fully processed, the hostcontroller must write a ‘ 1’ to the ECON2.PKTDEC bit.\nDoing so will cause the EPKTCNT register to\ndecrement by 1. After decrementing, if EPKTCNT is ‘ 0’,\nthe EIR.PKTIF flag will automatically be cleared.\nOtherwise, it will remain set, indicating that additional\npackets are in the receive buffer and are waiting to beprocessed. Attempts to decrement EPKTCNT below 0\nare ignored. Additionally, if the EPKTCNT register ever\nmaximizes at 255, all new packets which are receivedwill be aborted, even if buffer space is available. To\nindicate the error, the EIR.RXERIF will be set and an\ninterrupt will be generated (if enabled). To prevent thiscondition, the host controller must properly decrement\nthe counter whenever a packet is processed. Because only one pointer is available to control buffer\narea ownership, the host controller must process pack-\nets in the order they are received. If the host controller\nwishes to save a packet to be processed later, it shouldcopy the packet to an unused location in memory. It\nmay accomplish this efficiently using the integrated\nDMA controller (see Section 13.0 “Direct Memory\nAccess Controller” ).\n7.2.5 RECEIVE BUFFER FREE SPACE\nAt any time the host controller wishes to know how\nmuch receive buffer space is remaining, it should read\nthe Hardware Write Pointer (ERXWRPT registers) andcompare it with the ERXRDPT registers. Combined\nwith the known size of the receive buffer, the free space\ncan be derived. \nWhen reading the ERXWRPT register with the receive\nhardware enabled, special care must be taken to\nensure the low and high bytes are read as a matchingset. \nTo be assured that a matching set is obtained:1. Read the EPKTCNT register and save its\ncontents.\n2. Read ERXWRPTL and ERXWRPTH.\n3. Read the EPKTCNT register again. 4. Compare the two packet counts. If they are not\nthe same, go back to Step 2.\nWith the Hardware Write Pointer obtained, the free\nspace can be calculated as shown in Example 7-2 . The\nhardware prohibits moving the Write Pointer to the\nsame value occupied by ERXRDPT (except when theBuffer Pointers are being configured), so at least one\nbyte will always go unused in the buffer. The example\ncalculation reflects the lost byte.\nEXAMPLE 7-2: RECEIVE BUFFER FREE SPACE CALCULATIONNote: The ERXWRPT registers only update\nwhen a packet has been successfully\nreceived. If the host controller reads it justbefore another packet is to be success-\nfully completed, the value returned could\nbe stale and off by the maximum framelength permitted (MAMXFL) plus 7. Fur-\nthermore, as the host controller reads one\nbyte of ERXWRPT, a new packet mayarrive and update the pointer before the\nhost controller has an opportunity to read\nthe other byte of ERXWRPT.\nif ERXWRPT > ERXRDPT, then\nFree Space = (ERXND – ERXST) – (ERXWRPT – ERXRDPT)\nelse if ERXWRPT = ERXRDPT, then\nFree Space = (ERXND – ERXST)\nelse\nFree Space = ERXRDPT – ERXWRPT – 1\nENC28J60\nDS39662E-page 46 . \uf0e3 2006-2012 Microchip Technology Inc.TABLE 7-4: SUMMARY OF REGISTERS USED FOR PACKET RECEPTION\nRegister \nNameBit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues\non page\nEIE INTIE PKTIE DMAIE LINKIE TXIE r TXERIE RXERIE 13\nEIR —P K T I F DMAIF LINKIF TXIF r TXERIF RXERIF 13\nESTAT INT BUFER r LATECOL —R X B U S Y TXABRT CLKRDY(1)13\nECON2 AUTOINC PKTDEC PWRSV r VRPS — — — 13\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nERXSTL RX Start Low Byte (ERXST<7:0>) 13\nERXSTH — — — RX Start High Byte (ERXST<12:8>) 13\nERXNDL RX End Low Byte (ERXND<7:0>) 13\nERXNDH — — — RX End High Byte (ERXND<12:8>) 13\nERXRDPTL RX RD Pointer Low Byte (ERXRDPT<7:0>) 13\nERXRDPTH — — — RX RD Pointer High Byte (ERXRDPT<12:8>) 13\nERXFCON UCEN ANDOR CRCEN PMEN MPEN HTEN MCEN BCEN 14\nEPKTCNT Ethernet Packet Count 14\nMACON1 — — — r TXPAUS RXPAUS PASSALL MARXEN 14\nMACON3 PADCFG2 PADCFG1 PADCFG0 TXCRCEN PHDREN HFRMEN FRMLNEN FULDPX 14\nMAMXFLL Maximum Frame Length Low Byte (MAMXFL<7:0>) 14\nMAMXFLH Maximum Frame Length High Byte (MAMXFL<15:8>) 14\nLegend: — = unimplemented, r = reserved bit. Shaded cells are not used.\nNote 1: CLKRDY resets to ‘ 0’ on a Power-on Reset but is unaffected on all other Resets.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 47ENC28J60\n8.0 RECEIVE FILTERS\nTo minimize the processing requirements of the host\ncontroller, the ENC28J60 incorporates several different\nreceive filters which can automatically reject packetswhich are not needed. Six different types of packet\nfilters are implemented:\n• Unicast\n• Pattern Match\n•M a g i c  P a c k e t ™• Hash Table\n• Multicast\n• BroadcastThe individual filters are all configured by the ERXFCON\nregister ( Register 8-1 ). More than one filter can be active\nat any given time. Additionally, the filters can be config-\nured by the ANDOR bit to either logically AND, or\nlogically OR, the tests of several filters. In other words,\nthe filters may be set so that only packets accepted by\nall active filters are accept ed, or a packet accepted by\nany one filter is accepted. The flowcharts in Figure 8-1\nand Figure 8-2  show the effect that each of the filters will\nhave depending on the setting of ANDOR. \nThe device can enter Promiscuous mode and receive\nall packets by clearing the ERXFCON register. The\nproper setting of the register will depend on the\napplication requirements.\n      \nENC28J60\nDS39662E-page 48 . \uf0e3 2006-2012 Microchip Technology Inc.REGISTER 8-1: ERXFCON: ETHERNET RECEIVE FILTER CONTROL REGISTER\nR/W-1 R/W-0 R/W-1 R/W-0 R/W-0 R/W-0 R/W-0 R/W-1\nUCEN ANDOR CRCEN PMEN MPEN HTEN MCEN BCEN\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 UCEN: Unicast Filter Enable bit\nWhen ANDOR = \n1:\n1 = Packets not having a destination address matching the local MAC address will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Packets with a destination address matching the local MAC address will be accepted\n0 = Filter disabled\nbit 6 ANDOR: AND/OR Filter Select bit\n1 = AND: Packets will be rejected unless all enabled filters accept the packet\n0 = OR: Packets will be accepted unless all enabled filters reject the packet\nbit 5 CRCEN: Post-Filter CRC Check Enable bit\n1 = All packets with an invalid CRC will be discarded\n0 = The CRC validity will be ignored\nbit 4 PMEN: Pattern Match Filter Enable bit\nWhen ANDOR = 1:\n1 = Packets must meet the Pattern Match criteria or they will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Packets which meet the Pattern Match criteria will be accepted\n0 = Filter disabled\nbit 3 MPEN: Magic Packet™ Filter Enable bit\nWhen ANDOR = 1:\n1 = Packets must be Magic Packets for the local MAC address or they will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Magic Packets for the local MAC address will be accepted\n0 = Filter disabled\nbit 2 HTEN: Hash Table Filter Enable bit\nWhen ANDOR = 1:\n1 = Packets must meet the Hash Table criteria or they will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Packets which meet the Hash Table criteria will be accepted\n0 = Filter disabled\nbit 1 MCEN: Multicast Filter Enable bit\nWhen ANDOR = 1:\n1 = Packets must have the Least Significant bit set in the destination address or they will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Packets which have the Least Significant bit set in the destination address will be accepted\n0 = Filter disabled\nbit 0 BCEN: Broadcast Filter Enable bit\nWhen ANDOR = 1:\n1 = Packets must have a destination address of FF-FF-FF-FF-FF-FF or they will be discarded\n0 = Filter disabled\nWhen ANDOR = 0:\n1 = Packets which have a destination address of FF-FF-FF-FF-FF-FF will be accepted\n0 = Filter disabled\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 49ENC28J60\nFIGURE 8-1: RECEIVE FILTERING USING OR LOGIC\nPacket Detected on Wire,\nANDOR = 0 (OR)\nUCEN set?\nPMEN set?\nMPEN set?\nHTEN set?\nMCEN set?\nBCEN set?No\nNo\nNo\nNo\nNoUnicast \nPattern\nMagic Packet™\nHash table\nMulticast\nBroadcast\ndestination?Yes\nYes\nYes\nYes\nYes\nYesNo\nNo\nNo\nNo\nNoYes\nYes\nYes\nYes\nYes\nYespacket?\nmatches?\nfor us?\nbit set?\ndestination?\nNoUCEN, PMEN,\nNoMPEN, HTEN,\nNoYes\nMCEN and BCEN\nall clear?\nCRCEN set?No\nAccept Packet\nReject PacketNoYes\nYesCRCEN valid?\nENC28J60\nDS39662E-page 50 . \uf0e3 2006-2012 Microchip Technology Inc.FIGURE 8-2: RECEIVE FILTERING USING AND LOGIC\nCRCEN set?Packet Detected on Wire\nANDOR = 1 (AND)\nCRC valid?Yes\nYes\nAccept Packet Reject PacketUCEN set?\nPMEN set?\nMPEN set?\nHTEN set?\nMCEN set?\nBCEN set?NoUnicast \nPattern \nMagic Packet™\nHash Table\nMulticast\nBroadcast\ndestination?Yes\nYes\nYes\nYes\nYes\nYesNo\nNo\nNo\nNo\nNo\nNo\nNo Yes\nNo\nNoYes\nNo Yes\nNo Yes\nNo Yes\nNo Yesdestination?bit set?for us?matches?packet?\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 51ENC28J60\n8.1 Unicast Filter\nThe Unicast receive filter checks the destination\naddress of all incoming packets. If the destinationaddress exactly matches the contents of the MAADR\nregisters, the packet will meet the Unicast filter criteria. \n8.2 Pattern Match Filter\nThe Pattern Match filter selects up to 64 bytes from the\nincoming packet and calculates an IP checksum of thebytes. The checksum is then compared to the EPMCS\nregisters. The packet meets the Pattern Match filter\ncriteria if the calculated checksum matches the EPMCS\nregisters. The Pattern Match filter may be useful for\nfiltering packets which have expected data inside them.\nTo use the Pattern Match filter, the host controller must\nprogram the Pattern Match offset (EPMOH:EPMOL),all of the Pattern Match mask bytes (EPMM7:EPMM0)\nand the Pattern Match Checksum register pair\n(EPMCSH:EPMCSL). The Pattern Match offset shouldbe loaded with the offset from the beginning of the des-\ntination address field to the 64-byte window which will\nbe used for the checksum computation. Within the64-byte window, each individual byte can be selectively\nincluded or excluded from the checksum computation\nby setting or clearing the respective bit in the PatternMatch mask. If a packet is received which would cause\nthe 64-byte window to extend past the end of the CRC,the filter criteria will immediately not be met, even if the\ncorresponding mask bits are all ‘ 0’. The Pattern Match\nChecksum registers should be programmed to the\nchecksum which is expected for the selected bytes.The checksum is calculated in the same manner that\nthe DMA module calculates checksums (see\nSection 13.2 “Checksum Calculations” ). Data bytes\nwhich have corresponding mask bits programmed to ‘ 0’\nare completely removed for purposes of calculating the\nchecksum, as opposed to treating the data bytes aszero.\nAs an example, if the application wished to filter all\npackets having a particular source MAC address of\n00-04-A3-FF-FF-FF, it could program the PatternMatch offset to 0000h and then set bits 6 and 7 of\nEPMM0 and bits 0, 1, 2 and 3 of EPMM1 (assuming all\nother mask bits are ‘ 0’). The proper checksum to pro-\ngram into the EPMCS registers would be 0x5BFC. As\nan alternative configuration, it could program the offset\nto 0006h and set bits 0, 1, 2, 3, 4 and 5 of EPMM0. Thechecksum would still be 5BFCh. However, the second\ncase would be less desirable as packets less than\n70 bytes long could never meet the Pattern Matchcriteria, even if they would generate the proper\nchecksum given the mask configuration.\nAnother example of a Pattern Matching filter is\nillustrated in Figure 8-3 .\nFIGURE 8-3: SAMPLE PATTERN MATCH FORMAT\nSAEMPOH:EPMOL = 0006h\nFCS DA Type/Length Data\nBytes Used for\nChecksum Computation EPMM7:EPMM0 = 0000000000001F0Ah\n11 22 33 44 55 66   77 88 99 AA BB CC 00  5A 09  0A  0B  0C 0D . . . 40 . . .  FE 45 23 01Received\nDataField\n0   1   2   3   4   5     6   7   8   9   10  11    12   13        14  15  16  17  18 . . . 70 . . . Byte #\n64-Byte Window Used\nfor Pattern MatchInput Configuration: \nValues Used for Checksum Computation = {88h, AAh, 09h, 0Ah, 0Bh, 0Ch, 0Dh, 00h} EPMCSH:EPMCSL = 563Fh\nNote: Received data is shown in hexadecimal. Byte numbers are shown in decimal format.(00h padding byte added by hardware)\nENC28J60\nDS39662E-page 52 . \uf0e3 2006-2012 Microchip Technology Inc.8.3 Magic Packet™ Filter\nThe Magic Packet filter checks the destination address\nand data fields of all incoming packets. If the destinationaddress matches the MAADR registers and the data\nfield holds a valid Magic Packet pattern someplacewithin it, then the packet will meet the Magic Packet filter\ncriteria. The Magic Packet pattern consists of a sync\npattern of six 0xFF bytes, followed by 16 repeats of the\ndestination address. See Figure 8-4  for a sample Magic\nPacket.\nFIGURE 8-4: SAMPLE MAGIC PACKET™ FORMAT\n8.4 Hash Table Filter\nThe Hash Table receive filter performs a CRC over thesix destination address bytes in the packet. The CRC isthen used as a pointer into the bits of the EHT registers.\nIf the pointer points to a bit which is set, the packet\nmeets the Hash Table filter criteria. For example, if theCRC is calculated to be 0x5, bit 5 in the Hash Table willbe checked. If it is set, the Hash Table filter criteria will\nbe met. If every bit is clear in the Hash Table, the filter\ncriteria will never be met. Similarly, if every bit is set inthe Hash Table, the filter criteria will always be met.8.5 Multicast Filter\nThe Multicast receive filter checks the destinationaddress of all incoming packets. If the Least Significantbit of the first byte of the destination address is set, the\npacket will meet the Multicast filter criteria. \n8.6 Broadcast Filter\nThe Broadcast receive filter checks the destinationaddress of all incoming packets. If the destination\naddress is FF-FF-FF-FF-FF-FF, the packet will meetthe Broadcast filter criteria. SA\nFCSDA\nType/Length11 22 33 44 55 66\n00 FE\n09 0A 0B 0C 0D 0EReceived\nData Field\n77 88 99 AA BB CC\nEF 54 32 10FF FF FF FF FF 00\nFF FF FF FF FF FF\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n11 22 33 44 55 66\n19 1A 1B 1C 1D 1EDataSync Pattern\nSixteen Repeats of\nthe Station AddressComments\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 53ENC28J60\n9.0 DUPLEX MODE \nCONFIGURATION AND \nNEGOTIATION\nThe ENC28J60 does not support automatic duplex\nnegotiation. If it is connected to an automatic duplex\nnegotiation enabled network switch or Ethernet control-\nler, the ENC28J60 will be detected as a half-duplexdevice. To communicate in Full-Duplex mode, the\nENC28J60 and the remote node (switch, router or\nEthernet controller) must be manually configured forfull-duplex operation.\n9.1 Half-Duplex Operation\nThe ENC28J60 operates in Half-Duplex mode when\nMACON3.FULDPX = 0 and PHCON1.PDPXMD = 0. If\nonly one of these two bits is set, the ENC28J60 will bein an indeterminate state and not function correctly.\nSince switching between Full and Half-Duplex modes\nmay result in this indeterminate state, the host control-ler should not transmit any packets (maintain\nECON1.TXRTS clear) and packet reception should be\ndisabled (ECON1.RXEN and ESTAT.RXBUSY shouldbe clear) during this period.\nIn Half-Duplex mode, only one Ethernet controller may\nbe transmitting on the physical medium at any time. If\nthe host controller sets the ECON1.TXRTS bit,requesting that a packet be transmitted while another\nEthernet controller is already transmitting, the\nENC28J60 will delay, waiting for the remote transmitterto stop. After the transmission stops, the ENC28J60\nwill attempt to transmit its packet. If another Ethernet\ncontroller starts transmitting at approximately the sametime that the ENC28J60 starts transmitting, the data on\nthe wire will become corrupt and a collision will occur.\nThe hardware will handle this condition in one of twoways:\n1. If the collision occurs before the number of\nbytes specified by the “Collision Window”\nin MACLCON2 were transmitted, theECON1.TXRTS bit will remain set, a random\nexponential back off delay will elapse as defined\nby the IEEE 802.3 specification and then a newattempt to transmit the packet from the begin-\nning will occur. The host controller will not need\nto intervene. If the number of retransmissionattempts already matches the “Retransmission\nMaximum” (RETMAX) defined in MACLCON1,\nthe packet will be aborted and ECON1.TXRTSwill be cleared. The host controller will then be\nresponsible for taking appropriate action. The\nhost controller will be able to determine that thepacket was aborted instead of being success-\nfully transmitted by reading the ESTAT.TXABRT\nflag. For more information, see Section 7.1\n“Transmitting Packets” . A transmit abort will\ncause the transmit error interrupt.2. If the collision occurs after the number of bytes\nspecified by the “Collision Window” in\nMACLCON2 were transmitted, the packet will be\nimmediately aborted without any retransmissionattempts. Ordinarily, in IEEE 802.3 compliant\nnetworks which are properly configured, this late\ncollision will not occur. User intervention may berequired to correct the issue. This problem may\noccur as a result of a full-duplex node attempting\nto transmit on the half-duplex medium. Alter-nately, the ENC28J60 may be attempting to\noperate in Half-Duplex mode while it may be\nconnected to a full-duplex network. Excessivelylong cabling and network size may also be a\npossible cause of late collisions.\nWhen set in Half-Duplex mode, the Reset default\nconfiguration will loop transmitted packets back toitself. Unless the receive filter configuration filters these\npackets out, they will be written into the circular receive\nbuffer, just as any other network traffic. To stop thisbehavior, the host controller should set the\nPHCON2.HDLDIS bit.\n9.2 Full-Duplex Operation\nThe ENC28J60 operates in Full-Duplex mode when\nMACON3.FULDPX = 1 and PHCON1.PDPXMD = 1. If\nonly one of these two bits is clear, the ENC28J60 will\nbe in an indeterminate state and not function correctly.\nSince switching between Full and Half-Duplex modesmay result in this indeterminate state, the host control-\nler should not transmit any packets (maintain\nECON1.TXRTS clear) and packet reception should bedisabled (ECON1.RXEN and ESTAT.RXBUSY should\nbe clear) during this period.\nIn Full-Duplex mode, packets will be transmitted\nsimultaneously while packets may be received. Giventhis, it is impossible to cause any collisions when trans-\nmitting packets. Several configuration fields, such as\n“Retransmission Maximum” (RETMAX) in MACLCON1and “Collision Window” (COLWIN) in MACLCON2, will\nnot be used.\nWhen set in Full-Duplex mode, the Reset default\nconfiguration will not loop transmitted packets back toitself. If loopback is desired for diagnostic purposes, the\nPHCON1.PLOOPBK bit should be set by the host\ncontroller. Enabling loopback in Full-Duplex mode willdisable the twisted-pair output driver and ignore all\nincoming data, thus dropping any link (if established).\nAll packets received as a result of the loopback config-uration will be subject to all enabled receive filters, just\nas ordinary network traffic would be.\nENC28J60\nDS39662E-page 54 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 55ENC28J60\n10.0 FLOW CONTROL\nThe ENC28J60 implements hardware flow control for\nboth Full and Half-Duplex modes. The operation of this\nfeature differs depending on which mode is being used.\n10.1 Half-Duplex Mode\nIn Half-Duplex mode, setting the EFLOCON.FCEN0 bitcauses flow control to be enabled. When FCEN0 is set,\na continuous preamble pattern of alternating ‘ 1’s and\n‘0’s (55h) will automatically be transmitted on the\nEthernet medium. Any connected nodes will see the\ntransmission and either not transmit anything, waiting\nfor the ENC28J60’s transmission to end, or will attemptto transmit and immediately cause a collision. Because\na collision will always occur, no nodes on the network\nwill be able to communicate with each other and nonew packets will arrive. \nWhen the host controller tells the ENC28J60 to\ntransmit a packet by setting ECON1.TXRTS, the\npreamble pattern will stop being transmitted. An Inter-Packet Gap delay will pass as configured by register\nMABBIPG and then the ENC28J60 will attempt to\ntransmit its packet. During the Inter-Packet Gap delay,other nodes may begin to transmit. Because all traffic\nwas jammed previously, several nodes may begin\ntransmitting and a series of collisions may occur. Whenthe ENC28J60 successfully finishes transmitting its\npacket or aborts it, the transmission of the preamble\npattern will automatically restart. When the hostcontroller wishes to no longer jam the network, it should\nclear the FCEN0 bit. The preamble transmission will\ncease and normal network operation will resume.\nGiven the detrimental network effects that are possible\nand lack of effectiveness, it is not recommended that\nhalf-duplex flow control be used unless the application\nwill be in a closed network environment with propertesting.\n10.2 Full-Duplex Mode\nIn Full-Duplex mode (MACON3.FULDPX = 1), hardware\nflow control is implemented by means of transmitting\npause control frames as defined by the IEEE 802.3specification. Pause control frames are 64-byte frames\nconsisting of the reserved Multicast destination address\nof 01-80-C2-00-00-01, the s ource address of the sender,\na special pause opcode, a 2-byte pause timer value and\npadding/CRC. \nNormally, when a pause control frame is received by a\nMAC, the MAC will finish the packet it is transmittingand then stop transmitting any new frames. The pause\ntimer value will be extracted from the control frame and\nused to initialize an internal timer. The timer will auto-matically decrement every 512 bit times or 51.2 \uf06ds.\nWhile the timer is counting down, reception of packets\nis still enabled. If new pause frames arrive, the timer will\nbe reinitialized with the new pause timer value. Whenthe timer reaches zero or was sent a frame with a zero\npause timer value, the MAC that received the pause\nframe will resume transmitting any pending packets. Toprevent a pause frame from stopping all traffic on the\nentire network, Ethernet switches and routers do not\npropagate pause control frames in Full-Duplex mode.The pause operation only applies to the recipient. \nA sample network is shown in Figure 10-1 . If\nComputer A were to be transmitting too much data to\nthe ENC28J60 in Full-Duplex mode, the ENC28J60could transmit a pause control frame to stop the data\nwhich is being sent to it. The Ethernet switch would\ntake the pause frame and stop sending data to theENC28J60. If Computer A continues to send data, the\nEthernet switch will buffer the data so it can be\ntransmitted later when its pause timer expires. If theEthernet switch begins to run out of buffer space, it will\nlikely transmit a pause control frame of its own to\nComputer A. If, for some reason, the Ethernet switchdoes not generate a pause control frame of its own, or\none of the nodes does not properly handle the pause\nframe it receives, then packets will inevitably bedropped. In any event, any communication between\nComputer A and Computer B will always be completely\nunaffected. \nFIGURE 10-1: SAMPLE FULL-DUPLEX \nNETWORK\nComputer A\nMCP22S80\nComputer B\nEthernet Switch\nENC28J60\nENC28J60\nDS39662E-page 56 . \uf0e3 2006-2012 Microchip Technology Inc.To enable flow control on the ENC28J60 in Full-Duplex\nmode, the host controller must set the TXPAUS and\nRXPAUS bits in the MACON1 register. Then, at any time\nthat the receiver buffer is running out of space, the hostcontroller should turn flow control on by writing the value\n02h to the EFLOCON register. The hardware will period-\nically transmit pause frames loaded with the pause timervalue specified in the EPAUS registers. The host\ncontroller can continue to transmit its own packets\nwithout interfering with the flow control hardware.\nWhen space has been made available for more packets\nin the receive buffer, the host controller should turn flow\ncontrol off by writing the value 03h to the EFLOCON\nregister. The hardware will send one last pause frame\nloaded with a pause timer value of 0000h. When the\npause frame is received by the remote node, it will\nresume normal network operations.When RXPAUS is set in the MACON1 register and a\nvalid pause frame arrives with a non-zero pause timer\nvalue, the ENC28J60 will automatically inhibit\ntransmissions. If the host controller sets theECON1.TXRTS bit to send a packet, the hardware will\nsimply wait until the pause timer expires before\nattempting to send the packet and subsequently clearingthe TXRTS bit. Normally, the host controller will never\nknow that a pause frame has been received. However, if\nit is desirable to the host controller to know when theMAC is paused or not, it should set the PASSALL bit in\nMACON1 and then manually interpret the pause control\nframes which may arrive.\n     \nREGISTER 10-1: EFLOCON: ET HERNET FLOW CONTROL REGISTER\nU-0 U-0 U-0 U-0 U-0 R-0 R/W-0 R/W-0\n— — — — — FULDPXS FCEN1 FCEN0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-3 Unimplemented: Read as ‘0’\nbit 2 FULDPXS: Read-Only MAC Full-Duplex Shadow bit\n1 = MAC is configured for Full-Duplex mode, FULDPX (MACON3<0>) is set\n0 = MAC is configured for Half-Duplex mode, FULDPX (MACON3<0>) is clear\nbit 1-0 FCEN<1:0>: Flow Control Enable bits\nWhen FULDPXS = \n1:\n11 = Send one pause frame with a ‘ 0’ timer value and then turn flow control off\n10 = Send pause frames periodically\n01 = Send one pause frame then turn flow control off\n00 = Flow control off\nWhen FULDPXS = 0:\n11 = Flow control on\n10 = Flow control off\n01 = Flow control on\n00 = Flow control off\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 57ENC28J60\nTABLE 10-1: SUMMARY OF REGISTERS USED WITH FLOW CONTROL\nName Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues \non page\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nMACON1 — — — r TXPAUS RXPAUS PASSALL MARXEN 14\nMABBIPG — Back-to-Back Inter-Packet Gap (BBIPG<6:0>) 14\nEFLOCON — — — — — FULDPXS FCEN1 FCEN0 14\nEPAUSL Pause Timer Value Low Byte (EPAUS<7:0>) 14\nEPAUSH Pause Timer Value High Byte (EPAUS<15:8>) 14\nLegend: r = reserved, — = unimplemented, read as ‘ 0’. Shaded cells are not used.\nENC28J60\nDS39662E-page 58 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 59ENC28J60\n11.0 RESET\nThe ENC28J60 differentiates between various kinds of\nReset:\n• Power-on Reset (POR)\n• System Reset \n• Transmit Only Reset• Receive Only Reset\n• Miscellaneous MAC and PHY Subsystem Resets\nA simplified block diagram of the On-Chip Reset Circuit\nis shown in Figure 11-1 .\nFIGURE 11-1: ON-CHIP RESET CIRCUIT\nPORSoft Reset Command\nSystem Reset\nReset Host Interface\nReset Transmit\nReset ReceiveTransmit Reset\nReceive ResetHardware Reset\nENC28J60\nDS39662E-page 60 . \uf0e3 2006-2012 Microchip Technology Inc.11.1 Power-on Reset (POR)\nA Power-on Reset pulse is generated on-chip\nwhenever V DD rises above a certain threshold. This\nallows the device to start in the initialized state when\nVDD is adequate for operation.\nThe POR circuitry is always enabled. As a result, most\napplications do not need to attach any external circuitryto the RESET\n pin to ensure a proper Reset at power-\nup. The RESET  pin’s internal weak pull-up will maintain\na logical high level on the pin during normal deviceoperation.\nTo ensure proper POR operation, a minimum rise rate\nfor V\nDD is specified (Parameter D003). The application\ncircuit must meet this requirement to allow the OscillatorStart-up Timer and CLKOUT functions to reset properly.\nAfter a Power-on Reset, the contents of the dual port\nbuffer memory will be unknown. However, all registers\nwill be loaded with their specified Reset values. Certainportions of the ENC28J60 must not be accessed\nimmediately after a POR. See Section 2.2 “Oscillator\nStart-up Timer”  for more information.\n11.2 System Reset\nThe System Reset of ENC28J60 can be accomplished\nby either the RESET  pin, or through the SPI interface.\nThe RESET  pin provides an asynchronous method for\ntriggering an external Reset of the device. A Reset is\ngenerated by holding the RESET  pin low. The\nENC28J60 has a noise filter in the RESET  path which\ndetects and ignores small pulses of time, t RSTLOW , or\nless. When the RESET  pin is held high, the ENC28J60\nwill operate normally.\nThe ENC28J60 can also be reset via the SPI using the\nSystem Reset Command. See Section 4.0 “Serial\nPeripheral Interface (SPI)” . \nThe RESET  pin will not be driven low by any internal\nResets, including a System Reset command via the\nSPI interface.After a System Reset, all PHY registers should not be\nread or written to until at least 50 \uf06ds have passed since\nthe Reset has ended. All registers will revert to their\nReset default values. The dual port buffer memory willmaintain state throughout the System Reset.\n11.3 Transmit Only Reset\nThe Transmit Only Reset is performed by writing a ‘ 1’ to\nthe TXRST bit in the ECON1 register using the SPI inter-\nface. If a packet was being transmitted when the TXRSTbit was set, the hardware will automatically clear the\nTXRTS bit and abort the transmission. This action resets\nthe transmit logic only. The System Reset automaticallyperforms the Transmit Only Reset. Other register and\ncontrol blocks, such as buffer management and host\ninterface, are not affected by a Transmit Only Resetevent. When the host controller wishes to return to\nnormal operation, it should clear the TXRST bit.\n11.4 Receive Only Reset\nThe Receive Only Reset is performed by writing a ‘ 1’ to\nthe RXRST bit in the ECON1 register using the SPI inter-face. If packet reception was enabled (the RXEN bit was\nset) when RXRST was set, the hardware will automati-\ncally clear the RXEN bit. If a packet was being received,it would be immediately aborted. This action resets\nreceive logic only. The System Reset automatically\nperforms Receive Only Reset. Other register and control\nblocks, such as the buffer management and host inter-\nface blocks, are not affected by a Receive Only Reset\nevent. When the host controller wishes to return to\nnormal operation, it should clear the RXRST bit.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 61ENC28J60\n11.5 PHY Subsystem Reset\nThe PHY module may be reset by writing a ‘ 1’ to the\nPRST bit in the PHCON1 register ( Register 11-1 ). All\nthe PHY register contents will revert to their Reset\ndefaults. Unlike other Resets, the PHY cannot be removed from\nReset immediately after setting PRST. The PHY\nrequires a delay, after which the hardware automati-\ncally clears the PRST bit.  After a Reset is issued, thehost controller should poll PRST and wait for it to\nbecome clear before using the PHY. \n  \nREGISTER 11-1: PHCON1: PHY CONTROL REGISTER 1 \nR/W-0 R/W-0 U-0 U-0 R/W-0 R/W-0 U-0 R/W-0\nPRST PLOOPBK — — PPWRSV r — PDPXMD(1)\nbit 15 bit 8\nR/W-0 U-0 U-0 U-0 U-0 U-0 U-0 U-0\nr — — — — — — —\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15 PRST: PHY Software Reset bit\n1 = PHY is processing a Software Reset (automatically resets to ‘ 0’ when done)\n0 = Normal operation\nbit 14 PLOOPBK: PHY Loopback bit\n1 = All data transmitted will be returned to the MAC. The twisted-pair interface will be disabled.\n0 = Normal operation\nbit 13-12 Unimplemented:  Read as ‘0’\nbit 11 PPWRSV: PHY Power-Down bit\n1 = PHY is shut down\n0 = Normal operation\nbit 10 Reserved:  Maintain as ‘ 0’\nbit 9 Unimplemented:  Read as ‘0’\nbit 8 PDPXMD: PHY Duplex Mode bit(1)\n1 = PHY operates in Full-Duplex mode\n0 = PHY operates in Half-Duplex mode\nbit 7 Reserved:  Maintain as ‘ 0’\nbit 6-0 Unimplemented:  Read as ‘0’\nNote 1: Reset values of the Duplex mode/status bits depend on the connection of the LED to the LEDB pin (see \nSection 2.6 “LED Configuration”  for additional details).\nENC28J60\nDS39662E-page 62 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 63ENC28J60\n12.0 INTERRUPTS\nThe ENC28J60 has multiple interrupt sources and an\ninterrupt output pin to signal the occurrence of events\nto the host controller. The interrupt pin is designed foruse by a host controller that is capable of detecting\nfalling edges.\nInterrupts are managed with two registers. The EIE\nregister contains the individual interrupt enable bits foreach interrupt source, while the EIR register contains\nthe corresponding interrupt flag bits. When an interrupt\noccurs, the interrupt flag is set. If the interrupt isenabled in the EIE register and the INTIE global inter-\nrupt enable bit is set, the INT\n pin will be driven low (see\nFigure 12-1 ).When an enabled interrupt occurs, the interrupt pin will\nremain low until all flags which are causing the interrupt\nare cleared or masked off (enable bit is cleared) by the\nhost controller. If more than one interrupt source isenabled, the host controller must poll each flag in the\nEIR register to determine the source(s) of the interrupt.\nIt is recommended that the Bit Field Clear (BFC) SPIcommand be used to reset the flag bits in the EIR reg-\nister rather than the normal Write Control Register\n(WCR) command. This is necessary to preventunintentionally altering a flag that changes during the\nwrite command. The BFC and WCR commands are\ndiscussed in detail in Section 4.0 “Serial Peripheral\nInterface (SPI)” .\nAfter an interrupt occurs, the host controller should\nclear the global enable bit for the interrupt pin before\nservicing the interrupt. Clearing the enable bit willcause the interrupt pin to return to the non-asserted\nstate (high). Doing so will prevent the host controller\nfrom missing a falling edge should another interruptoccur while the immediate interrupt is being serviced.\nAfter the interrupt has been serviced, the global enable\nbit may be restored. If an interrupt event occurred whilethe previous interrupt was being processed, the act of\nresetting the global enable bit will cause a new falling\nedge on the interrupt pin to occur.\nFIGURE 12-1: ENC28J60 INTERRUPT LOGICNote: Except for the LINKIF interrupt flag,\ninterrupt flag bits are set when an interrupt\ncondition occurs regardless of the state ofits corresponding enable bit or the associ-\nated global enable bit. User software\nshould ensure the appropriate interrupt flagbits are clear prior to enabling an interrupt.\nThis feature allows for software polling.\nPKTIF\nPKTIE\nDMAIF\nDMAIE\nLINKIE\nTXIF\nTXIEINT\nINTIE\nTXERIF\nTXERIE\nRXERIF\nRXERIELINKIFPGIF\nPGEIEPLNKIF\nPLNKIEINT\nENC28J60\nDS39662E-page 64 . \uf0e3 2006-2012 Microchip Technology Inc.12.1 INT Interrupt Enable (INTIE)\nThe INT Interrupt Enable bit (INTIE) is a global enable\nbit which allows the following interrupts to drive the INT\npin:\n• Receive Error Interrupt (RXERIF)\n• Transmit Error Interrupt (TXERIF)• Transmit Interrupt (TXIF)\n• Link Change Interrupt (LINKIF)\n• DMA Interrupt (DMAIF)• Receive Packet Pending Interrupt (PKTIF)When any of the above interrupts are enabled and\ngenerated, the virtual bit, INT in the ESTAT register\n(Register 12-1 ), will be set to ‘ 1’. If EIE.INTIE is ‘ 1’, the\nINT\n pin will be driven low. \n12.1.1 INT INTERRUPT REGISTERS\nThe registers associated with the INT interrupts are\nshown in Register 12-2 , Register 12-3 , Register 12-4\nand Register 12-5 .\n   \nREGISTER 12-1: ESTAT: ETHERNET STATUS REGISTER\nR-0 R/C-0 R-0 R/C-0 U-0 R-0 R/C-0 R/W-0\nINT BUFER rL A T E C O L — RXBUSY TXABRT CLKRDY(1)\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit C = Clearable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 INT: INT Interrupt Flag bit\n1 = INT interrupt is pending\n0 = No INT interrupt is pending\nbit 6 BUFER: Ethernet Buffer Error Status bit\n1 = An Ethernet read or write has generated a buffer error (overrun or underrun)\n0 = No buffer error has occurred\nbit 5 Reserved: Read as ‘0’\nbit 4 LATECOL: Late Collision Error bit\n1 = A collision occurred after 64 bytes had been transmitted\n0 = No collisions after 64 bytes have occurred\nbit 3 Unimplemented: Read as ‘0’\nbit 2 RXBUSY: Receive Busy bit\n1 = Receive logic is receiving a data packet\n0 = Receive logic is Idle\nbit 1 TXABRT: Transmit Abort Error bit\n1 = The transmit request was aborted\n0 = No transmit abort error\nbit 0 CLKRDY: Clock Ready bit\n(1)\n1 = OST has expired; PHY is ready\n0 = OST is still counting; PHY is not ready\nNote 1: CLKRDY resets to ‘ 0’ on Power-on Reset but is unaffected on all other Resets.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 65ENC28J60\n   \nREGISTER 12-2: EIE: ETHERNET INTERRUPT ENABLE REGISTER\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nINTIE PKTIE DMAIE LINKIE TXIE r TXERIE RXERIE\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 INTIE: Global INT Interrupt Enable bit\n1 = Allow interrupt events to drive the INT  pin\n0 = Disable all INT  pin activity (pin is continuously driven high)\nbit 6 PKTIE: Receive Packet Pending Interrupt Enable bit\n1 = Enable receive packet pending interrupt\n0 = Disable receive packet pending interrupt\nbit 5 DMAIE: DMA Interrupt Enable bit\n1 = Enable DMA interrupt\n0 = Disable DMA interrupt\nbit 4 LINKIE: Link Status Change Interrupt Enable bit\n1 = Enable link change interrupt from the PHY\n0 = Disable link change interrupt\nbit 3 TXIE: Transmit Enable bit\n1 = Enable transmit interrupt\n0 = Disable transmit interrupt\nbit 2 Reserved: Maintain as ‘ 0’\nbit 1 TXERIE: Transmit Error Interrupt Enable bit\n1 = Enable transmit error interrupt\n0 = Disable transmit error interrupt\nbit 0 RXERIE: Receive Error Interrupt Enable bit\n1 = Enable receive error interrupt\n0 = Disable receive error interrupt\nENC28J60\nDS39662E-page 66 . \uf0e3 2006-2012 Microchip Technology Inc.    REGISTER 12-3: EIR: ETHERNET INTERRUPT REQUEST (FLAG) REGISTER\nU-0 R-0 R/C-0 R-0 R/C-0 R-0 R/C-0 R/C-0\n— PKTIF DMAIF LINKIF TXIF r TXERIF RXERIF\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit C = Clearable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented: Read as ‘0’\nbit 6 PKTIF: Receive Packet Pending Interrupt Flag bit\n1 = Receive buffer contains one or more unprocessed packets; cleared when PKTDEC is set\n0 = Receive buffer is empty\nbit 5 DMAIF: DMA Interrupt Flag bit\n1 = DMA copy or checksum calculation has completed\n0 = No DMA interrupt is pending\nbit 4 LINKIF: Link Change Interrupt Flag bit\n1 = PHY reports that the link status has changed; read PHIR register to clear\n0 = Link status has not changed\nbit 3 TXIF: Transmit Interrupt Flag bit\n1 = Transmit request has ended\n0 = No transmit interrupt is pending\nbit 2 Reserved: Maintain as ‘ 0’\nbit 1 TXERIF: Transmit Error Interrupt Flag bit\n1 = A transmit error has occurred\n0 = No transmit error has occurred\nbit 0 RXERIF: Receive Error Interrupt Flag bit\n1 = A packet was aborted because there is insufficient buffer space or the packet count is 255\n0 = No receive error interrupt is pending\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 67ENC28J60\n  REGISTER 12-4: PHIE: PHY INTERRUPT ENABLE REGISTER  \nR-0 R-0 R-0 R-0 R-0 R-0 R-0 R-0\nr r r r r r r r\nbit 15 bit 8\nR-0 R-0 R/W-0 R/W-0 R-0 R-0 R/W-0 R/W-0\nr r rP L N K I E r rP G E I E r\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15-6 Reserved:  Write as ‘0’, ignore on read\nbit 5 Reserved:  Maintain as ‘ 0’\nbit 4 PLNKIE:  PHY Link Change Interrupt Enable bit\n1 = PHY link change interrupt is enabled\n0 = PHY link change interrupt is disabled\nbit 3-2 Reserved:  Write as ‘0’, ignore on read\nbit 1 PGEIE:  PHY Global Interrupt Enable bit\n1 = PHY interrupts are enabled\n0 = PHY interrupts are disabled\nbit 0 Reserved:  Maintain as ‘ 0’\nREGISTER 12-5: PHIR: PHY INTERRUPT REQUEST (FLAG) REGISTER  \nR-x R-x R-x R-x R-x R-x R-x R-x\nr r r r r r r r\nbit 15 bit 8\nR-x R-x R-0 R/SC-0 R-0 R/SC-0 R-x R-0\nr r rP L N K I F rP G I F r r\nbit 7 bit 0\nLegend: r = Reserved bit\nR = Readable bit SC = Self-Clearing bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 15-6 Reserved: Do not modify\nbit 5 Reserved: Read as ‘0’\nbit 4 PLNKIF:  PHY Link Change Interrupt Flag bit\n1 = PHY link status has changed since PHIR was last read; resets to ‘ 0’ when read\n0 = PHY link status has not changed since PHIR was last read\nbit 3 Reserved: Read as ‘0’\nbit 2 PGIF:  PHY Global Interrupt Flag bit\n1 = One or more enabled PHY interrupts have occurred since PHIR was last read; resets to ‘ 0’ when read\n0 = No PHY interrupts have occurred\nbit 1 Reserved: Do not modify\nbit 0 Reserved: Read as ‘0’\nENC28J60\nDS39662E-page 68 . \uf0e3 2006-2012 Microchip Technology Inc.12.1.2 RECEIVE ERROR INTERRUPT \nFLAG (RXERIF)\nThe Receive Error Interrupt Flag (RXERIF) is used to\nindicate a receive buffer overflow condition. Alternately,this interrupt may indicate that too many packets are in\nthe receive buffer and more cannot be stored without\noverflowing the EPKTCNT register. \nWhen a packet is being received and the receive buffer\nruns completely out of space, or EPKTCNT is 255 and\ncannot be incremented, the packet being received will\nbe aborted (permanently lost) and the EIR.RXERIF bitwill be set to ‘ 1’. Once set, RXERIF can only be cleared\nby the host controller or by a Reset condition. If the\nreceive error interrupt and INT interrupt are enabled(EIE.RXERIE = 1 and EIE.INTIE = 1), an interrupt is\ngenerated by driving the INT\n pin low. If the receive error\ninterrupt is not enabled (EIE.RXERIE = 0 or\nEIE.INTIE = 0), the host controller may poll the\nENC28J60 for the RXERIF and take appropriate\naction. \nNormally, upon the receive error condition, the host\ncontroller would process any packets pending from the\nreceive buffer and then make additional room for future\npackets by advancing the ERXRDPT registers (lowbyte first) and decrementing the EPKTCNT register.\nSee Section 7.2.4 “Freeing Receive Buffer Space”\nfor more information on processing packets. Onceprocessed, the host controller should use the BFC\ncommand to clear the EIR.RXERIF bit.\n12.1.3 TRANSMIT ERROR INTERRUPT \nFLAG (TXERIF)\nThe Transmit Error Interrupt Flag (TXERIF) is used to\nindicate that a transmit abort has occurred. An abortcan occur because of any of the following:\n1. Excessive collisions occurred as defined by the\nRetransmission Maximum (RETMAX) bits in the\nMACLCON1 register. \n2. A late collision occurred as defined by the\nCollision Window (COLWIN) bits in theMACLCON2 register.\n3. A collision after transmitting 64 bytes occurred\n(ESTAT.LATECOL set).\n4. The transmission was unable to gain an\nopportunity to transmit the packet because the\nmedium was constantly occupied for too long.\nThe deferral limit (2.4287 ms) was reached andthe MACON4.DEFER bit was clear.\n5. An attempt to transmit a packet larger than the\nmaximum frame length defined by the MAMXFL\nregisters was made without setting the\nMACON3.HFRMEN bit or per packetPOVERRIDE and PHUGEEN bits.Upon any of these conditions, the EIR.TXERIF flag is set\nto ‘1’. Once set, it can only be cleared by the host\ncontroller or by a Reset condition. If the transmit error\ninterrupt is enabled (EIE.TXERIE = 1 and EIE.INTIE = 1),\nan interrupt is generated by driving the INT\n pin low until\nthe interrupt flag or interrupt enable is cleared. If the\ntransmit error interrupt is not enabled (EIE.TXERIE = 0 or\nEIE.INTIE = 0), the host controller may poll the\nENC28J60 for the TXERIF and take appropriate action.\nOnce the interrupt is processed, the host controllershould use the BFC command to clear the EIR.TXERIF\nbit.\nAfter a transmit abort, the TXRTS bit will be cleared, the\nESTAT.TXABRT bit will be set and the transmit statusvector will be written at ETXND + 1. The MAC will not\nautomatically attempt to retransmit the packet. The\nhost controller may wish to read the transmit statusvector and LATECOL bit to determine the cause of the\nabort. After determining the problem and solution, the\nhost controller should clear the LATECOL (if set) andTXABRT bits so that future aborts can be detected\naccurately.\nIn Full-Duplex mode, Condition 5 is the only one that\nshould cause this interrupt. Collisions and other prob-lems related to sharing the network are not possible on\nfull-duplex networks. The conditions which cause the\ntransmit error interrupt meet the requirements of thetransmit interrupt. As a result, when this interrupt\noccurs, TXIF will also be simultaneously set.\n12.1.4 TRANSMIT INTERRUPT \nFLAG (TXIF)\nThe Transmit Interrupt Flag (TXIF) is used to indicate\nthat the requested packet transmission has ended(ECON1.TXRTS has transitioned from ‘ 1’ to ‘0’). Upon\ntransmission completion, abort or transmission cancella-\ntion by the host controller, the EIR.TXIF flag will be set to‘1’. If the host controller did not clear the TXRTS bit and\nthe ESTAT.TXABRT bit is not set, then the packet was\nsuccessfully transmitted. Once TXIF is set, it can only becleared by the host controller or by a Reset condition. If\nthe transmit interrupt is enabled (EIE.TXIE = 1 and\nEIE.INTIE = 1), an interrupt is generated by driving the\nINT\n pin low. If the transmit interrupt is not enabled\n(EIE.TXIE = 0 or EIE.INTIE = 0), the host controller may\npoll the ENC28J60 for the TXIF bit and take appropriateaction. Once processed, the host controller should use\nthe BFC command to clear the EIR.TXIF bit.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 69ENC28J60\n12.1.5 LINK CHANGE INTERRUPT \nFLAG (LINKIF)\nThe LINKIF indicates that the link status has changed.\nThe actual current link status can be obtained from thePHSTAT1.LLSTAT or PHSTAT2.LSTAT (see Register 3-5\nand Register 3-6 ). Unlike other interrupt sources, the link\nstatus change interrupt is created in the integrated PHYmodule; additional steps must be taken to enable it. \nBy Reset default, LINKIF is never set for any reason. To\nreceive it, the host controller must set the\nPHIE.PLNKIE and PGEIE bits. After setting the twoPHY interrupt enable bits, the LINKIF bit will then\nshadow the contents of the PHIR.PGIF bit. The PHY\nonly supports one interrupt, so the PGIF bit will alwaysbe the same as the PHIR.PLNKIF bit (when both PHY\nenable bits are set).\nOnce LINKIF is set, it can only be cleared by the\nhost controller or by a Reset. If the link changeinterrupt is enabled (EIE.LINKIE = 1, EIE.INTIE = 1,\nPHIE.PLNKIE = 1 and PHIE.PGEIE = 1), an interrupt\nwill be generated by driving the INT\n pin low. If the link\nchange interrupt is not enabled (EIE.LINKIE = 0,\nEIE.INTIE = 0, PHIE.PLNKIE = 0 or PHIE.PGEIE = 0),\nthe host controller may poll the ENC28J60 for thePHIR.PLNKIF bit and take appropriate action. \nThe LINKIF bit is read-only. Because reading from PHY\nregisters requires non-negligible time, the host controller\nmay instead set PHIE.PLNKIE and PHIE.PGEIE andthen poll the EIR.LINKIF bit. Performing an MII read on\nthe PHIR register will clear the LINKIF, PGIF and\nPLNKIF bits automatically and allow for future link statuschange interrupts. See Section 3.3 “PHY Registers”\nfor information on accessing the PHY registers.12.1.6 DMA INTERRUPT FLAG (DMAIF)\nThe DMA interrupt indicates that the DMA module has\ncompleted its memory copy or checksum calculation(ECON1.DMAST has transitioned from ‘ 1’ to ‘0’). Addi-\ntionally, this interrupt will be caused if the host controller\ncancels a DMA operation by manually clearing theDMAST bit. Once set, DMAIF can only be cleared by the\nhost controller or by a Reset condition. If the DMA\ninterrupt is enabled (EIE.DMAIE = 1 and EIE.INTIE = 1),\nan interrupt is generated by driving the INT\n pin low. If the\nDMA interrupt is not enabled (EIE.DMAIE = 0 or\nEIE.INTIE = 0), the host controller may poll the\nENC28J60 for the DMAIF and take appropriate action.\nOnce processed, the host controller should use the BFC\ncommand to clear the EIR.DMAIF bit. \n12.1.7 RECEIVE PACKET PENDING \nINTERRUPT FLAG (PKTIF)\nThe Receive Packet Pending Interrupt Flag (PKTIF) is\nused to indicate the presence of one or more data pack-\nets in the receive buffer and to provide a notification\nmeans for the arrival of new packets. When the receivebuffer has at least one packet in it, EIR.PKTIF will be set.\nIn other words, this interrupt flag will be set anytime the\nEthernet Packet Count register (EPKTCNT) is non-zero.If the receive packet pending interrupt is enabled\n(EIE.PKTIE = 1 and EIE.INTIE = 1), an interrupt will be\ngenerated by driving the INT\n pin low whenever a new\npacket is successfully received and written into the\nreceive buffer. If the receive packet pending interrupt is\nnot enabled (EIE.PKTIE = 0 or EIE.INTIE = 0), the host\ncontroller will not be notified when new packets arrive.\nHowever, it may poll the PKTIF bit and take appropriate\naction.\nThe PKTIF bit can only be cleared by the host controller\nor by a Reset condition. In order to clear PKTIF, the\nEPKTCNT register must be decremented to ‘ 0’. See\nSection 7.2 “Receiving Packets”  for more informa-\ntion about clearing the EPKTCNT register. If the last\ndata packet in the receive buffer is processed,\nEPKTCNT will become zero and the PKTIF bit willautomatically be cleared. \n \nENC28J60\nDS39662E-page 70 . \uf0e3 2006-2012 Microchip Technology Inc.12.2 Wake-On-LAN/Remote Wake-up\nWake-On-LAN or Remote Wake-up is useful in conserv-\ning system power. The host controller and other\nsubsystems can be put in Low-Power mode and be\nwoken up by the ENC28J60 when a wake-up packet is\nreceived from a remote station. The ENC28J60 must notbe in Power-Save mode and the transmit and receive\nmodules must be enabled in order to receive a wake-up\npacket. The ENC28J60 wakes up the host controller viathe INT\n signal when the Interrupt Mask registers are\nproperly configured. The receive filter can also be set up\nto only receive a specific wake-up packet (seeRegister 8-1  for available options). Section 12.2.1\n“Setup Steps for Waking Up on a Magic Packet”\nshows the steps necessary in configuring the ENC28J60to send an interrupt signal to the host controller upon the\nreception of a Magic Packet.12.2.1 SETUP STEPS FOR WAKING UP ON \nA MAGIC PACKET\n1. Set ERXFCON.CRCEN and ERXFCON.MPEN.\n2. Service all pending packets.\n3. Set EIE.PKTIE and EIE.INTIE.4. Set up the host controller to wake-up on an\nexternal interrupt INT\n signal.\n5. Put the host controller and other subsystems to\nSleep to save power.\nOnce a Magic Packet is received, the EPKTCNT is\nincremented to ‘ 1’, which causes the EIR.PKTIF bit to\nset. In turn, the ESTAT.INT bit is set and the INT  signal\nis driven low, causing the host to wake-up.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 71ENC28J60\n13.0 DIRECT MEMORY ACCESS \nCONTROLLER\nThe ENC28J60 incorporates a dual purpose DMA\ncontroller which can be used to copy data betweenlocations within the 8-Kbyte memory buffer. It can also\nbe used to calculate a 16-bit checksum which is\ncompatible with various industry standard protocols,including TCP and IP. \nWhen a DMA operation begins, the EDMAST register\npair is copied into an Internal Source Pointer. The DMA\nwill execute on one byte at a time and then incrementthe Internal Source Pointer. However, if a byte is\nprocessed and the Internal Source Pointer is equal to\nthe Receive Buffer End Pointer, ERXND, the SourcePointer will not be incremented. Instead, the Internal\nSource Pointer will be loaded with the Receive Buffer\nStart Pointer, ERXST. In this way, the DMA will followthe circular FIFO structure of the receive buffer and\nreceived packets can be processed using one opera-\ntion. The DMA operation will end when the InternalSource Pointer matches the EDMAND Pointer.\nWhile any DMA operation is in progress, the DMA\nPointers and the ECON1.CSUMEN bit should not be\nmodified. The DMA operation can be canceled at anytime by clearing the ECON1.DMAST bit. No registers\nwill change; however, some memory bytes may already\nhave been copied if a DMA copy was in progress.13.1 Copying Memory\nTo copy memory within the buffer:\n1. Appropriately program the EDMAST, EDMAND\nand EDMADST register pairs. The EDMASTregisters should point to the first byte to copy\nfrom, the EDMAND registers should point to the\nlast byte to copy and the EDMADST registersshould point to the first byte in the destination\nrange. The destination range will always be\nlinear, never wrapping at any values except from8191 to 0 (the 8-Kbyte memory boundary).\nExtreme care should be taken when\nprogramming the Start and End Pointers toprevent a never ending DMA operation which\nwould overwrite the entire 8-Kbyte buffer.\n2. If an interrupt at the end of the copy process is\ndesired, set EIE.DMAIE and EIE.INTIE and\nclear EIR.DMAIF.\n3. Verify that ECON1.CSUMEN is clear.\n4. Start the DMA copy by setting ECON1.DMAST.\nIf a transmit operation is in progress (TXRTS set) while\nthe DMAST bit is set, the ENC28J60 will wait until the\ntransmit operation is complete before attempting to dothe DMA copy. This possible delay is required because\nthe DMA and transmission engine share the same\nmemory access port. \nWhen the copy is complete, the DMA hardware will\nclear the DMAST bit, set the DMAIF bit and generate\nan interrupt (if enabled). The pointers and the\nEDMACS registers will not be modified.\nAfter the DMA module has been initialized and has\nbegun its copy, two main clock cycles will be required\nfor each byte copied. As a result, if a maximum size\n1518-byte packet was copied, the DMA module wouldrequire slightly more than 121.44 \uf06ds to complete. The\ntime required to copy a minimum size packet of\n64 bytes would be dominated by the time required toconfigure the DMA.Note 1: If the EDMAND Pointer cannot be\nreached because of the receive buffer\nwrapping behavior, the DMA operationwill never end.\n2:By design, the DMA module cannot\nbe used to copy only one byte\n(EDMAST = EDMAND). An attempt todo so will overwrite all memory in the\nbuffer and may never end.\nENC28J60\nDS39662E-page 72 . \uf0e3 2006-2012 Microchip Technology Inc.13.2 Checksum Calculations\nThe checksum calculation logic treats the source data as\na series of 16-bit big-endian integers. If the source rangecontains an odd number of bytes, a padding byte of 00h\nis effectively added to the end of the series for purposes\nof calculating the checksum. The calculated checksumis the 16-bit one’s complement of the one’s complement\nsum of all 16-bit integers. For example, if the bytes\nincluded in the checksum were {89h, ABh, CDh}, thechecksum would begin by computing 89ABh + CD00h.\nA carry out of the 16th bit would occur in the example, so\nin 16-bit one’s complement arithmetic, it would be addedback to the first bit. The resulting value of 56ACh would\nfinally be complemented to achieve a checksum of\nA953h.\nTo calculate a checksum:1. Program the EDMAST and EDMAND register\npairs to point to the first and last bytes of buffer\ndata to be included in the checksum. Care should\nbe taken when programming these pointers toprevent a never ending checksum calculation\ndue to receive buffer wrapping.\n2. To generate an optional interrupt when the\nchecksum calculation is done, clear EIR.DMAIF,\nset EIE.DMAIE and set EIE.INTIE.\n3. Start the calculation by setting ECON1.CSUMEN\nand ECON1.DMAST.\nWhen the checksum is finished being calculated, the\nhardware will clear the DMAST bit, set the DMAIF bit\nand an interrupt will be generated if enabled. The DMAPointers will not be modified and no memory will be\nwritten to. The EDMACSH and EDMACSL registers will\ncontain the calculated checksum. The host controller\nmay write this value into a packet, compare this valuewith a received checksum, or use it for other purposes.\nVarious protocols, such as TCP and IP, have a checksum\nfield inside a range of data which the checksum covers.\nIf such a packet is received and the host controller needsto validate the checksum, it can do the following:\n1. Read the checksum from the packet and save it\nto a temporary location\n2. Write zeros to the checksum field.\n3. Calculate a new checksum using the DMA\ncontroller.\n4. Compare the results with the saved checksum\nfrom Step 1. \nWriting to the receive buffer is permitted when the write\naddress is protected by means of the ERXRDPT\nPointers. See Section 7.2 “Receiving Packets”  for\nadditional information.\nThe IP checksum has unique mathematical properties\nwhich may be used in some cases to reduce the\nprocessing requirements further. Writing to the receivebuffer may be unnecessary in some applications.\nWhen operating the DMA in Checksum mode, it will\ntake one main clock cycle for every byte included in the\nchecksum. As a result, if a checksum over 1446 byteswere performed, the DMA module would require\nslightly more than 57.84 \uf06ds to complete the operation.\nTABLE 13-1: SUMMARY OF REGISTERS AS SOCIATED WITH THE DMA CONTROLLER      \nRegister\nNameBit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues \non page\nEIE INTIE PKTIE DMAIE LINKIE TXIE r TXERIE RXERIE 13\nEIR — PKTIF DMAIF LINKIF TXIF r TXERIF RXERIF 13\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nERXNDL RX End Low Byte (ERXND<7:0>) 13\nERXNDH — — — RX End High Byte (ERXND<12:8>) 13\nEDMASTL DMA Start Low Byte (EDMAST<7:0>) 13\nEDMASTH — — — DMA Start High Byte (EDMAST<12:8>) 13\nEDMANDL DMA End Low Byte (EDMAND<7:0>) 13\nEDMANDH — — — DMA End High Byte (EDMAND<12:8>) 13\nEDMADSTL DMA Destination Low Byte (EDMADST<7:0>) 13\nEDMADSTH — — — DMA Destination High Byte (EDMADST<12:8>) 13\nEDMACSL DMA Checksum Low Byte (EDMACS<7:0>) 13\nEDMACSH DMA Checksum High Byte (EDMACS<15:8>) 13\nLegend: r = reserved bit, — = unimplemented, read as ‘ 0’. Shaded cells are not used with the DMA controller.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 73ENC28J60\n14.0 POWER-DOWN\nThe ENC28J60 may be commanded to power-down\nvia the SPI interface. When powered down, it will no\nlonger be able to transmit and receive any packets. \nTo maximize power savings:1. Turn off packet reception by clearing\nECON1.RXEN.\n2. Wait for any in-progress packets to finish being\nreceived by polling ESTAT.RXBUSY. This bit\nshould be clear before proceeding.\n3. Wait for any current transmissions to end by\nconfirming ECON1.TXRTS is clear.\n4. Set ECON2.VRPS (if not already set).\n5. Enter Sleep by setting ECON2.PWRSV. All\nMAC, MII and PHY registers become\ninaccessible as a result. Setting PWRSV also\nclears ESTAT.CLKRDY automatically.\nIn Sleep mode, all registers and buffer memory will\nmaintain their states. The ETH registers and buffer\nmemory will still be accessible by the host controller.\nAdditionally, the clock driver will continue to operate.The CLKOUT function will be unaffected (see\nSection 2.3 “CLKOUT Pin” ).When normal operation is desired, the host controller\nmust perform a slightly modified procedure:\n1. Wake-up by clearing ECON2.PWRSV.\n2. Wait at least 300 \uf06ds for the PHY to stabilize. To\naccomplish the delay, the host controller may\npoll ESTAT.CLKRDY and wait for it to become\nset.\n3. Restore receive capability by setting\nECON1.RXEN.\nAfter leaving Sleep mode, there is a delay of many\nmilliseconds before a new link is established (assuming\nan appropriate link partner is present). The host\ncontroller may wish to wait until the link is establishedbefore attempting to transmit any packets. The link\nstatus can be determined by polling the\nPHSTAT2.LSTAT bit. Alternatively, the link changeinterrupt may be used if it is enabled. See\nSection 12.1.5 “Link Change Interrupt Flag\n(LINKIF)”  for additional details.\nTABLE 14-1: SUMMARY OF REGISTERS USED WITH POWER-DOWN\nName Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues \non page\nESTAT INT BUFER r LATECOL — RXBUSY TXABRT CLKRDY(1)13\nECON2 AUTOINC PKTDEC PWRSV rV R P S — — — 13\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nLegend: — = unimplemented, read as ‘ 0’, r = reserved bit. Shaded cells are not used for \npower-down.\nNote 1: CLKRDY resets to ‘ 0’ on Power-on Reset but is unaffected on all other Resets.\nENC28J60\nDS39662E-page 74 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 75ENC28J60\n15.0 BUILT-IN SELF-TEST \nCONTROLLER\nThe ENC28J60 features a Built-in Self-Test (BIST)\nmodule which is designed to confirm proper operationof each bit in the 8-Kbyte memory buffer. Although it is\nprimarily useful for testing during manufacturing, it\nremains present and available for diagnostic purposesby the user. The controller writes to all locations in the\nbuffer memory and requires several pieces of hardware\nshared by normal Ethernet operations. Thus, the BISTshould only be used on Reset or after necessary\nhardware is freed. When the BIST is used, the ECON1\nregister’s DMAST, RXEN and TXRTS bits should all beclear.The BIST controller is operated through four registers:\n• EBSTCON register (control and status register)\n• EBSTSD register (fill seed/initial shift value)\n• EBSTCSH and EBSTCSL registers (high and low \nbytes of generated checksum)\nThe EBSTCON register ( Register 15-1 ) controls the\nmodule’s overall operation, selecting the Testingmodes and starting the self-test process. The bit pat-\ntern for memory tests is provided by the EBSTSD seed\nregister; its content is either used directly, or as theseed for a pseudo-random number generator,\ndepending on the Test mode.\n    \nREGISTER 15-1: EBSTCON: ETHERNE T SELF-TEST CONTROL REGISTER\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nPSV2 PSV1 PSV0 PSEL TMSEL1 TMSEL0 TME BISTST\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 PSV<2:0>: Pattern Shift Value bits\nWhen TMSEL<1:0> = 10:\nThe bits in EBSTSD will shift left by this amount after writing to each memory location.When TMSEL<1:0> = \n00, 01 or 11:\nThis value is ignored.\nbit 4 PSEL: Port Select bit\n1 = DMA and BIST modules will swap ports when accessing the memory\n0 = Normal configuration\nbit 3-2 TMSEL<1:0>: Test Mode Select bits\n11 = Reserved\n10 = Pattern shift fill\n01 = Address fill\n00 = Random data fill\nbit 1 TME: Test Mode Enable bit\n1 = Enable Test mode\n0 = Disable Test mode\nbit 0 BISTST: Built-in Self-Test Start/Busy bit\n1 = Test in progress; cleared automatically when test is done\n0 = No test running\nENC28J60\nDS39662E-page 76 . \uf0e3 2006-2012 Microchip Technology Inc.15.1 Using the BIST\nWhen the BIST controller is started, it will fill the entire\nbuffer with the data generated for the current testconfiguration and it will also calculate a checksum of\nthe data as it is written. When the BIST is complete, the\nEBSTCS registers will be updated with the checksum.The host controller will be able to determine if the test\npassed or failed by using the DMA module to calculate\na checksum of all memory. The resulting checksumgenerated by the DMA should match the BIST check-\nsum. If after any properly executed test, the checksums\ndiffer, a hardware Fault may be suspected.\nThe BIST controller supports 3 different operations:• Random Data Fill\n•A d d r e s s  F i l l\n• Pattern Shift Fill\nThe ports through which the BIST and DMA modules\naccess the dual port SRAM can be swapped for each\nof the four Test modes to ensure proper read/writecapability from both ports.\nTo use the BIST:1. Program the EDMAST register pair to 0000h.\n2. Program EDMAND and ERXND register pairs to\n1FFFh.\n3. Configure the DMA for checksum generation by\nsetting CSUMEN in ECON1.\n4. Write the seed/initial shift value byte to the\nEBSTSD register (this is not necessary if\nAddress Fill mode is used).\n5. Enable Test mode, select the desired test, select\nthe desired port configuration for the test.\n6. Start the BIST by setting EBSTCON.BISTST.\n7. Start the DMA checksum by setting DMAST in\nECON1. The DMA controller will read the\nmemory at the same rate the BIST controller will\nwrite to it, so the DMA can be started any timeafter the BIST is started.\n8. Wait for the DMA to complete by polling the\nDMAST bit or receiving the DMA interrupt (if\nenabled). \n9. Compare the EDMACS registers with the\nEBSTCS registers.\nTo ensure full testing, the test should be redone with\nthe Port Select bit, PSEL, altered. When not usingAddress Fill mode, additional tests may be done with\ndifferent seed values to gain greater confidence that\nthe memory is working as expected.At any time during a test, the test can be canceled by\nclearing the BISTST, DMAST and TME bits. While the\nBIST is filling memory, the EBSTSD register should not\nbe accessed, nor should any configuration changesoccur. When the BIST completes its memory fill and\nchecksum generation, the BISTST bit will automatically\nbe cleared.\nThe BIST module requires one main clock cycle for\neach byte that it writes into the RAM. The DMA\nmodule’s checksum implementation requires the same\ntime but it can be started immediately after the BIST isstarted. As a result, the minimum time required to do\none test pass is slightly greater than 327.68 \uf06ds. \n15.2 Random Data Fill Mode\nIn Random Data Fill mode, the BIST controller will write\npseudo-random data into the buffer. The random datais generated by a Linear Feedback Shift Register\n(LFSR) implementation. The random number genera-\ntor is seeded by the initial contents of the EBSTSDregister and the register will have new contents when\nthe BIST is finished. \nBecause of the LFSR implementation, an initial seed of\nzero will generate a continuous pattern of zeros. As aresult, a non-zero seed value will likely perform a more\nextensive memory test. Selecting the same seed for\ntwo separate trials will allow a repeat of the same test. \n15.3 Address Fill Mode\nIn Address Fill mode, the BIST controller will write thelow byte of each memory address into the associated\nbuffer location. As an example, after the BIST is oper-\nated, the location 0000h should have 00h in it, location0001h should have 01h in it, location 0E2Ah should\nhave 2Ah in it and so on. With this fixed memory\npattern, the BIST and DMA modules should alwaysgenerate a checksum of F807h. The host controller\nmay use Address Fill mode to confirm that the BIST\nand DMA modules themselves are both operating asintended.\n15.4 Pattern Shift Fill Mode\nIn Pattern Shift Fill mode, the BIST controller writes the\nvalue of EBSTSD into memory location 0000h. Before\nwriting to location 0001h, it shifts the contents ofEBSTSD to the left by the value specified by the\nPSV2:PSV0 bits in EBSTCON. Bits that leave the most\nsignificant end of EBSTSD are wrapped around to theleast significant side. This shift is repeated for each\nnew address. As a result of shifting the data, a checker-\nboard pattern can be written into the buffer memory toconfirm that adjacent memory elements do not affect\neach other when accessed.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 77ENC28J60\nTABLE 15-1: SUMMARY OF REGISTERS ASSO CIATED WITH THE SEL F-TEST CONTROLLER\nName Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0Reset \nValues \non page\nECON1 TXRST RXRST DMAST CSUMEN TXRTS RXEN BSEL1 BSEL0 13\nERXNDL RX End Low Byte (ERXND<7:0>) 13\nERXNDH — — — RX End High Byte (ERXND<12:8>) 13\nEDMASTL DMA Start Low Byte (EDMAST<7:0>) 13\nEDMASTH — — — DMA Start High Byte (EDMAST<12:8>) 13\nEDMANDL DMA End Low Byte (EDMAND<7:0>) 13\nEDMANDH — — — DMA End High Byte (EDMAND<12:8>) 13\nEDMACSL DMA Checksum Low Byte (EDMACS<7:0>) 13\nEDMACSH DMA Checksum High Byte (EDMACS<15:8>) 13\nEBSTSD Built-in Self-Test Fill Seed (EBSTSD<7:0>) 14\nEBSTCON PSV2 PSV1 PSV0 PSEL TMSEL1 TMSEL0 TME BISTST 14\nEBSTCSL Built-in Self-Test Checksum Low Byte (EBSTCS<7:0>) 14\nEBSTCSH Built-in Self-Test Checksum High Byte (EBSTCS<15:8>) 14\nLegend: — = unimplemented, read as ‘ 0’. Shaded cells are not used.\nENC28J60\nDS39662E-page 78 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 79ENC28J60\n16.0 ELECTRICAL CHARACTERISTICS\nAbsolute Maximum Ratings\nStorage temperature ............................................................................................................ ...................-65°C to +150°C\nAmbient temperature under bias.............................................................................................-40° C to +85°C (Industrial)\n0°C to +70°C (Commercial)\nVoltage on V DD, VDDOSC , VDDPLL , VDDRX  and V DDTX , with respect to V SS................................................. -0.3V to 3.6V\nVoltage on RESET , CS, SCK and SI, with respect to V SS........................................................................... -0.3V to 6.0V\nVoltage on CLKOUT, SO, OSC1, OSC2, LEDA and LEDB, with respect to V SS...............................-0.3V to V DD + 0.3V\nVoltage on TPIN+/- and TPOUT+/- with respect to V SS............................................................................... -0.3V to 5.0V\nVCAP with respect to V SS (Note 1 )............................................................................................................. -0.3V to 2.75V\nESD protection on all pins..................................................................................................... ..................................... 2 kV\nCurrent sourced or sunk by LEDA, LEDB.......................................................................................... .....................12 mA\nCurrent sourced or sunk by CLKOUT .............................................................................................. .........................8 mA\nCurrent sourced or sunk by INT  and SO...................................................................................................................4 mA\nNote 1: VCAP is not designed to supply an external load. No external voltage should be applied to this pin.\n† Notice:  Stresses above those listed under “Maximum Ratings” may cause permanent damage to the device. This\nis a stress rating only and functional operation of the device at those or any other conditions above those indicated in\nthe operational listings of this specification is not implied. Exposure to maximum rating conditions for extended periods\nmay affect device reliability.\nENC28J60\nDS39662E-page 80 . \uf0e3 2006-2012 Microchip Technology Inc.16.1 DC Characteristics: ENC28J60 (Industrial and Commercial)\nDC CHARACTERISTICSStandard Operating Conditions\n   -40°C \uf0a3\uf020TA\uf020\uf0a3 +85°C, 3.10V \uf0a3\uf020VDD\uf020\uf0a3 3.60V (Industrial)\n   0°C \uf0a3\uf020TA\uf020\uf0a3 +70°C, 3.10V \uf0a3\uf020VDD\uf020\uf0a3 3.60V (Commercial)\nParam.\nNo.Sym Characteristic Min Typ Max Units Conditions\nD001 V DD Supply Voltage 3.10 3.30 3.60 V\nD002 V POR VDD Power-on Reset \nVoltage  — — 0.7 V See Section 11.1, Power-on \nReset (POR)  for details\nD003 S VDD VDD Rise Rate  to Ensure \nInternal Power-on Reset Signal0.05 — — V/ms See Section 11.1, Power-on \nReset (POR)  for details\nV\nIH Input High Voltage\nD004 SCK, CS , SI, RESET 2.25 — 5.5 V\nD005 OSC1 0.7 V DD —V DD V\nVIL Input Low Voltage\nD006 SCK, CS , SI, RESET VSS —1 . 0 V\nD007 OSC1 V SS — 0.3 V DD V\nVOH Output High Voltage\nLEDA, LEDB\nCLKOUTINT\n, SOVDD – 0.7\nVDD – 0.7\nVDD – 0.7—\n———\n——V\nVVI\nOH = -12.0 mA ( Note 1 )\nIOH = -8.0 mA ( Note 1 )\nIOH = -4.0 mA ( Note 1 )\nVOL Output Low Voltage\nLEDA, LEDB\nCLKOUT\nINT, SO—\n—\n——\n—\n—0.4\n0.4\n0.4V\nV\nVIOL = 12.0 mA \nIOL = 8.0 mA\nIOL = 4.0 mA\nRPU Weak Pull-up Resistance 74K — 173K \uf057\nIIL Input Leakage Current\nAll Input Pins except OSC1 — — ±1 \uf06dAC S  = RESET  = V DD, \nVSS \uf0a3\uf020VPIN \uf0a3 VDD, pins in \nhigh-impedance state \n(Note 1 )\nOSC1 pin — — ±200 \uf06dAO S C 1  =  V DD (Note 1 )\nIDD Operating Current\nTransmitting Ethernet \nPackets —1 6 0 1 8 0 m A V DD = 3.30V, F SCK = 10 MHz, \nSO = Open, LEDA and LEDB Open, ECON2<PWRSV> = 0\nActive, not Transmitting \nEthernet Packets—1 2 0 — m A V\nDD = 3.30V, \nLEDA and LEDB Open, ECON2<PWRSV> = 0\nI\nDDS Standby Current  \n(Sleep mode)— 1.2 2.0 mA CS  = V DD, Inputs tied to V DD \nor V SS, VDD = 3.3V, \nTA = 25°C, \nECON2<PWRSV> = 1\nNote 1: Negative current is defined as current sourced by the pin.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 81ENC28J60\nTABLE 16-1: AC CHARACTERISTICS: ENC28J60 (INDUSTRIAL AND COMMERCIAL)\nTABLE 16-2: OSCILLATOR TIMING CHARACTERISTICS\nTABLE 16-3: RESET AC CHARACTERISTICS\nTABLE 16-4: CLKOUT PIN AC CHARACTERISTICS\nTABLE 16-5: REQUIREMENTS FOR EXTERNAL MAGNETICSAC CHARACTERISTICSStandard Operating Conditions\n   -40°C \uf0a3\uf020TA\uf020\uf0a3 +85°C, 3.10V \uf0a3\uf020VDD\uf020\uf0a3 3.60V (Industrial)\n   0°C \uf0a3\uf020TA\uf020\uf0a3 +70°C, 3.10V \uf0a3\uf020VDD\uf020\uf0a3 3.60V (Commercial)\nParam.\nNo.Sym Characteristic Min Max Units Conditions\nFOSC Clock In Frequency 25 25 MHz\nTOSC Clock In Period 40 40 ns\nTDUTY Duty Cycle \n(external clock input)40 60 %\n\uf044f Clock Tolerance — \uf0b150 ppm\nParam.\nNo.Sym Characteristic Min Max Units Conditions\ntrl RESET  Pin High Time \n(between Reset events)2— \uf06ds\ntRSTLOW RESET  Pin Low Time to \nTrigger Reset400 — ns\nParam.\nNo.Sym Characteristic Min Max Units Conditions\nthCLKOUT CLKOUT Pin High Time 16.5 — ns T DUTY  = 50% (Note 1 )\ntlCLKOUT CLKOUT Pin Low Time 16.5 — ns T DUTY  = 50% (Note 1 )\ntrCLKOUT CLKOUT Pin Rise Time — 3 ns Measured from 0.1 V DD to \n0.9 V DD, Load = 10 pF ( Note 1 )\ntfCLKOUT CLKOUT Pin Fall Time — 4 ns Measured from 0.9 V DD to \n0.1 V DD, Load = 10 pF ( Note 1 )\nNote 1: CLKOUT prescaler is set to divide by one. \nParameter Min Norm Max Units Conditions\nRX Transformer Turns Ratio — 1:1 — —\nTX Transformer Turns Ratio — 1:1 — — Transformer Center Tap = 3.3V\nInsertion Loss 0.0 0.6 1.1 dB\nPrimary Inductance 350 — — \uf06dH 8 mA bias\nTransformer Isolation — 1.5 — kV\nDifferential to Common Mode Rejection 40 — — dB 0.1 to 10 MHz\nReturn Loss -16 — — dB\nENC28J60\nDS39662E-page 82 . \uf0e3 2006-2012 Microchip Technology Inc.FIGURE 16-1: SPI INPUT TIMING\nFIGURE 16-2: SPI OUTPUT TIMING\nTABLE 16-6: SPI INTERFACE AC CHARACTERISTICS\nParam.\nNo.Sym Characteristic Min Max Units Conditions\nFSCK Clock Frequency DC 20 MHz\n1T CSS CS Setup Time 50 — ns\n2T CSH CS Hold Time 10 — ns ETH registers and memory buffer\n210 — ns MAC and MII registers\n3T CSD CS Disable Time 50 — ns\n4T SU Data Setup Time 10 — ns\n5T HD Data Hold Time 10 — ns\n6T V Output Valid from Clock Low — 10 ns SO Load = 30 pF\n7T DIS Output Disable Time — 10 ns SO Load = 30 pFTCSS\nCS\nSCK\nSI\nSOTSUTHD\n1/FSCKMSb In LSb In\nHigh-ImpedanceTCSH TCSD\nCS\nSCK\nSISO\n1/FSCK\nLSb In\nDon’t CareMSb OutTV TV\nLSb OutTDIS\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 83ENC28J60\n17.0 PACKAGING INFORMATION\n17.1 Package Marking Information          \n28-Lead SPDIP\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nYYWWNNNExample\nENC28J60-I/SP\n1210017\n28-Lead SOIC\nXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXX\nYYWWNNNExample\nENC28J60-I/SO\n1210017\n28-Lead QFN\nXXXXXXXX\nXXXXXXXX\nYYWWNNNExample\nENC28J60\n-I/ML\n121001728-Lead SSOP\nXXXXXXXXXXXX\nXXXXXXXXXXXX\nYYWWNNNExample\nENC28J60\n/SS\n1210017\nLegend: XX...X Customer-specific information\nY Year code (last digit of calendar year)YY Year code (last 2 digits of calendar year)\nWW Week code (week of January 1 is week ‘01’)\nNNN Alphanumeric traceability code  Pb-free JEDEC designator for Matte Tin (Sn)\n* This package is Pb-free. The Pb-free JEDEC designator (     )\ncan be found on the outer packaging for this package.\nNote : In the event the full Microchip part number cannot be marked on one line, it will\nbe carried over to the next line, thus limiting the number of available\ncharacters for customer-specific information.3e\n3e3e3e3e3e\nENC28J60\nDS39662E-page 84 . \uf0e3 2006-2012 Microchip Technology Inc.17.2 Package Details\nThe following sections give the technical details of the packages. \n/g21/g27/g16/g47/g72/g68/g71/g3/g54/g78/g76/g81/g81/g92/g3/g51/g79/g68/g86/g87/g76/g70/g3/g39/g88/g68/g79/g3/g44/g81/g16/g47/g76/g81/g72/g3/g11/g54/g51/g12/g3/g177/g3/g22/g19/g19/g3/g80/g76/g79/g3/g37/g82/g71/g92/g3/g62/g54/g51/g39/g44/g51/g64\n/g49/g82/g87/g72/g86/g29\n/g20/g17 /g51/g76/g81/g3/g20/g3/g89/g76/g86/g88/g68/g79/g3/g76/g81/g71/g72/g91/g3/g73/g72/g68/g87/g88/g85/g72/g3/g80/g68/g92/g3/g89/g68/g85/g92/g15/g3/g69/g88/g87/g3/g80/g88/g86/g87/g3/g69/g72/g3/g79/g82/g70/g68/g87/g72/g71/g3/g90/g76/g87/g75/g76/g81/g3/g87/g75/g72/g3/g75/g68/g87/g70/g75/g72/g71/g3/g68/g85/g72/g68/g17\n/g21/g17 /g134/g3/g54/g76/g74/g81/g76/g73/g76/g70/g68/g81/g87/g3/g38/g75/g68/g85/g68/g70/g87/g72/g85/g76/g86/g87/g76/g70/g17\n/g22/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g86/g3/g39/g3/g68/g81/g71/g3/g40/g20/g3/g71/g82/g3/g81/g82/g87/g3/g76/g81/g70/g79/g88/g71/g72/g3/g80/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g17/g3/g48/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g3/g86/g75/g68/g79/g79/g3/g81/g82/g87/g3/g72/g91/g70/g72/g72/g71/g3/g17/g19/g20/g19/g5/g3/g83/g72/g85/g3/g86/g76/g71/g72/g17/g23/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g76/g81/g74/g3/g68/g81/g71/g3/g87/g82/g79/g72/g85/g68/g81/g70/g76/g81/g74/g3/g83/g72/g85/g3/g36/g54/g48/g40/g3/g60/g20/g23/g17/g24/g48/g17\n/g37/g54/g38/g29 /g37/g68/g86/g76/g70/g3/g39/g76/g80/g72/g81/g86/g76/g82/g81/g17/g3/g55/g75/g72/g82/g85/g72/g87/g76/g70/g68/g79/g79/g92/g3/g72/g91/g68/g70/g87/g3/g89/g68/g79/g88/g72/g3/g86/g75/g82/g90/g81/g3/g90/g76/g87/g75/g82/g88/g87/g3/g87/g82/g79/g72/g85/g68/g81/g70/g72/g86/g17/g49/g82/g87/g72/g29 /g41/g82/g85/g3/g87/g75/g72/g3/g80/g82/g86/g87/g3/g70/g88/g85/g85/g72/g81/g87/g3/g83/g68/g70/g78/g68/g74/g72/g3/g71/g85/g68/g90/g76/g81/g74/g86/g15/g3/g83/g79/g72/g68/g86/g72/g3/g86/g72/g72/g3/g87/g75/g72/g3/g48/g76/g70/g85/g82/g70/g75/g76/g83/g3/g51/g68/g70/g78/g68/g74/g76/g81/g74/g3/g54/g83/g72/g70/g76/g73/g76/g70/g68/g87/g76/g82/g81/g3/g79/g82/g70/g68/g87/g72/g71/g3/g68/g87/g3\n/g75/g87/g87/g83/g29/g18/g18/g90/g90/g90/g17/g80/g76/g70/g85/g82/g70/g75/g76/g83/g17/g70/g82/g80/g18/g83/g68/g70/g78/g68/g74/g76/g81/g74\n/g56/g81/g76/g87/g86 /g44/g49/g38/g43/g40/g54\n/g39/g76/g80/g72/g81/g86/g76/g82/g81/g3/g47/g76/g80/g76/g87/g86 /g48/g44/g49 /g49/g50/g48 /g48/g36/g59\n/g49/g88/g80/g69/g72/g85/g3/g82/g73/g3/g51/g76/g81/g86 /g49 /g21/g27\n/g51/g76/g87/g70/g75 /g72 /g17/g20/g19/g19/g3/g37/g54/g38\n/g55/g82/g83/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g36 /g177 /g177 /g17/g21/g19/g19\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g36/g21 /g17/g20/g21/g19 /g17/g20/g22/g24 /g17/g20/g24/g19\n/g37/g68/g86/g72/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g36/g20 /g17/g19/g20/g24 /g177 /g177/g54/g75/g82/g88/g79/g71/g72/g85/g3/g87/g82/g3/g54/g75/g82/g88/g79/g71/g72/g85/g3/g58/g76/g71/g87/g75 /g40 /g17/g21/g28/g19 /g17/g22/g20/g19 /g17/g22/g22/g24\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g58/g76/g71/g87/g75 /g40/g20 /g17/g21/g23/g19 /g17/g21/g27/g24 /g17/g21/g28/g24\n/g50/g89/g72/g85/g68/g79/g79/g3/g47/g72/g81/g74/g87/g75 /g39 /g20/g17/g22/g23/g24 /g20/g17/g22/g25/g24 /g20/g17/g23/g19/g19\n/g55/g76/g83/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g47 /g17/g20/g20/g19 /g17/g20/g22/g19 /g17/g20/g24/g19\n/g47/g72/g68/g71/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g70 /g17/g19/g19/g27 /g17/g19/g20/g19 /g17/g19/g20/g24/g56/g83/g83/g72/g85/g3/g47/g72/g68/g71/g3/g58/g76/g71/g87/g75 /g69/g20 /g17/g19/g23/g19 /g17/g19/g24/g19 /g17/g19/g26/g19\n/g47/g82/g90/g72/g85/g3/g47/g72/g68/g71/g3/g58/g76/g71/g87/g75 /g69 /g17/g19/g20/g23 /g17/g19/g20/g27 /g17/g19/g21/g21\n/g50/g89/g72/g85/g68/g79/g79/g3/g53/g82/g90/g3/g54/g83/g68/g70/g76/g81/g74/g3/g3/g134 /g72/g37 /g177 /g177 /g17/g23/g22/g19NOTE 1N\n12\nDE1\neBcE\nLA2\ne bb1 A1A3\n/g48/g76/g70/g85/g82/g70/g75/g76/g83 /g55/g72/g70/g75/g81/g82/g79/g82/g74/g92 /g39/g85/g68/g90/g76/g81/g74 /g38/g19/g23/g16/g19/g26/g19/g37\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 85ENC28J60\nNote: For the most current package drawings, please see the Microchip Packaging Specification located at \nhttp://www.microchip.com/packaging\nENC28J60\nDS39662E-page 86 . \uf0e3 2006-2012 Microchip Technology Inc.Note: For the most current package drawings, please see the Microchip Packaging Specification located at \nhttp://www.microchip.com/packaging\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 87ENC28J60\nNote: For the most current package drawings, please see the Microchip Packaging Specification located at \nhttp://www.microchip.com/packaging\nENC28J60\nDS39662E-page 88 . \uf0e3 2006-2012 Microchip Technology Inc./g21/g27/g16/g47/g72/g68/g71/g3/g51/g79/g68/g86/g87/g76/g70/g3/g54/g75/g85/g76/g81/g78/g3/g54/g80/g68/g79/g79/g3/g50/g88/g87/g79/g76/g81/g72/g3/g11/g54/g54/g12/g3/g177/g3/g24/g17/g22/g19/g3/g80/g80/g3/g37/g82/g71/g92/g3/g62/g54/g54/g50/g51/g64\n/g49/g82/g87/g72/g86/g29\n/g20/g17 /g51/g76/g81/g3/g20/g3/g89/g76/g86/g88/g68/g79/g3/g76/g81/g71/g72/g91/g3/g73/g72/g68/g87/g88/g85/g72/g3/g80/g68/g92/g3/g89/g68/g85/g92/g15/g3/g69/g88/g87/g3/g80/g88/g86/g87/g3/g69/g72/g3/g79/g82/g70/g68/g87/g72/g71/g3/g90/g76/g87/g75/g76/g81/g3/g87/g75/g72/g3/g75/g68/g87/g70/g75/g72/g71/g3/g68/g85/g72/g68/g17\n/g21/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g86/g3/g39/g3/g68/g81/g71/g3/g40/g20/g3/g71/g82/g3/g81/g82/g87/g3/g76/g81/g70/g79/g88/g71/g72/g3/g80/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g17/g3/g48/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g3/g86/g75/g68/g79/g79/g3/g81/g82/g87/g3/g72/g91/g70/g72/g72/g71/g3/g19/g17/g21/g19/g3/g80/g80/g3/g83/g72/g85/g3/g86/g76/g71/g72/g17\n/g22/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g76/g81/g74/g3/g68/g81/g71/g3/g87/g82/g79/g72/g85/g68/g81/g70/g76/g81/g74/g3/g83/g72/g85/g3/g36/g54/g48/g40/g3/g60/g20/g23/g17/g24/g48/g17\n/g37/g54/g38/g29 /g37/g68/g86/g76/g70/g3/g39/g76/g80/g72/g81/g86/g76/g82/g81/g17/g3/g55/g75/g72/g82/g85/g72/g87/g76/g70/g68/g79/g79/g92/g3/g72/g91/g68/g70/g87/g3/g89/g68/g79/g88/g72/g3/g86/g75/g82/g90/g81/g3/g90/g76/g87/g75/g82/g88/g87/g3/g87/g82/g79/g72/g85/g68/g81/g70/g72/g86/g17\n/g53/g40/g41/g29 /g53/g72/g73/g72/g85/g72/g81/g70/g72/g3/g39/g76/g80/g72/g81/g86/g76/g82/g81/g15/g3/g88/g86/g88/g68/g79/g79/g92/g3/g90/g76/g87/g75/g82/g88/g87/g3/g87/g82/g79/g72/g85/g68/g81/g70/g72/g15/g3/g73/g82/g85/g3/g76/g81/g73/g82/g85/g80/g68/g87/g76/g82/g81/g3/g83/g88/g85/g83/g82/g86/g72/g86/g3/g82/g81/g79/g92/g17/g49/g82/g87/g72/g29 /g41/g82/g85/g3/g87/g75/g72/g3/g80/g82/g86/g87/g3/g70/g88/g85/g85/g72/g81/g87/g3/g83/g68/g70/g78/g68/g74/g72/g3/g71/g85/g68/g90/g76/g81/g74/g86/g15/g3/g83/g79/g72/g68/g86/g72/g3/g86/g72/g72/g3/g87/g75/g72/g3/g48/g76/g70/g85/g82/g70/g75/g76/g83/g3/g51/g68/g70/g78/g68/g74/g76/g81/g74/g3/g54/g83/g72/g70/g76/g73/g76/g70/g68/g87/g76/g82/g81/g3/g79/g82/g70/g68/g87/g72/g71/g3/g68/g87/g3\n/g75/g87/g87/g83/g29/g18/g18/g90/g90/g90/g17/g80/g76/g70/g85/g82/g70/g75/g76/g83/g17/g70/g82/g80/g18/g83/g68/g70/g78/g68/g74/g76/g81/g74\n/g56/g81/g76/g87/g86 /g48/g44/g47/g47/g44/g48/g40/g55/g40/g53/g54\n/g39/g76/g80/g72/g81/g86/g76/g82/g81/g3/g47/g76/g80/g76/g87/g86 /g48/g44/g49 /g49/g50/g48 /g48/g36/g59\n/g49/g88/g80/g69/g72/g85/g3/g82/g73/g3/g51/g76/g81/g86 /g49 /g21/g27\n/g51/g76/g87/g70/g75 /g72 /g19/g17/g25/g24/g3/g37/g54/g38\n/g50/g89/g72/g85/g68/g79/g79/g3/g43/g72/g76/g74/g75/g87 /g36 /g177 /g177 /g21/g17/g19/g19\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g36/g21 /g20/g17/g25/g24 /g20/g17/g26/g24 /g20/g17/g27/g24\n/g54/g87/g68/g81/g71/g82/g73/g73/g3 /g36/g20 /g19/g17/g19/g24 /g177 /g177/g50/g89/g72/g85/g68/g79/g79/g3/g58/g76/g71/g87/g75 /g40 /g26/g17/g23/g19 /g26/g17/g27/g19 /g27/g17/g21/g19\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g58/g76/g71/g87/g75 /g40/g20 /g24/g17/g19/g19 /g24/g17/g22/g19 /g24/g17/g25/g19\n/g50/g89/g72/g85/g68/g79/g79/g3/g47/g72/g81/g74/g87/g75 /g39 /g28/g17/g28/g19 /g20/g19/g17/g21/g19 /g20/g19/g17/g24/g19\n/g41/g82/g82/g87/g3/g47/g72/g81/g74/g87/g75 /g47 /g19/g17/g24/g24 /g19/g17/g26/g24 /g19/g17/g28/g24\n/g41/g82/g82/g87/g83/g85/g76/g81/g87 /g47/g20 /g20/g17/g21/g24/g3/g53/g40/g41/g47/g72/g68/g71/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g70 /g19/g17/g19/g28 /g177 /g19/g17/g21/g24\n/g41/g82/g82/g87/g3/g36/g81/g74/g79/g72 /g73 /g19/g131 /g23/g131 /g27/g131\n/g47/g72/g68/g71/g3/g58/g76/g71/g87/g75 /g69 /g19/g17/g21/g21 /g177 /g19/g17/g22/g27L L1c\nA2\nA1AE\nE1D\nN\n12\nNOTE 1b\ne\nφ\n/g48/g76/g70/g85/g82/g70/g75/g76/g83 /g55/g72/g70/g75/g81/g82/g79/g82/g74/g92 /g39/g85/g68/g90/g76/g81/g74 /g38/g19/g23/g16/g19/g26/g22/g37\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 89ENC28J60\nNote: For the most current package drawings, please see the Microchip Packaging Specification located at \nhttp://www.microchip.com/packaging\nENC28J60\nDS39662E-page 90 . \uf0e3 2006-2012 Microchip Technology Inc.\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 91ENC28J60\nENC28J60\nDS39662E-page 92 . \uf0e3 2006-2012 Microchip Technology Inc./g21/g27/g16/g47/g72/g68/g71/g3/g51/g79/g68/g86/g87/g76/g70/g3/g52/g88/g68/g71/g3/g41/g79/g68/g87/g15/g3/g49/g82/g3/g47/g72/g68/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g11/g48/g47/g12/g3/g177/g3/g25/g91/g25/g3/g80/g80/g3/g37/g82/g71/g92/g3/g62/g52/g41/g49/g64\n/g90/g76/g87/g75/g3/g19/g17/g24/g24/g3/g80/g80/g3/g38/g82/g81/g87/g68/g70/g87/g3/g47/g72/g81/g74/g87/g75\n/g49/g82/g87/g72/g29 /g41/g82/g85/g3/g87/g75/g72/g3/g80/g82/g86/g87/g3/g70/g88/g85/g85/g72/g81/g87/g3/g83/g68/g70/g78/g68/g74/g72/g3/g71/g85/g68/g90/g76/g81/g74/g86/g15/g3/g83/g79/g72/g68/g86/g72/g3/g86/g72/g72/g3/g87/g75/g72/g3/g48/g76/g70/g85/g82/g70/g75/g76/g83/g3/g51/g68/g70/g78/g68/g74/g76/g81/g74/g3/g54/g83/g72/g70/g76/g73/g76/g70/g68/g87/g76/g82/g81/g3/g79/g82/g70/g68/g87/g72/g71/g3/g68/g87/g3\n/g75/g87/g87/g83/g29/g18/g18/g90/g90/g90/g17/g80/g76/g70/g85/g82/g70/g75/g76/g83/g17/g70/g82/g80/g18/g83/g68/g70/g78/g68/g74/g76/g81/g74\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 93ENC28J60\nAPPENDIX A: REVISION HISTORY     \nRevision A (January 2006)\nOriginal data sheet for the ENC28J60. \nRevision B (July 2006)\nMinor edits and format changes throughout the\ndocument.\nRevision C (January 2008)\nAdded one line to the  “Ethernet Controller Features”\nsection and added omitted revision history. Minor edits\nto text throughout document.\nRevision D (July 2012)\nUpdated package drawings in Section 17.0, Packag-\ning Information  and updated marking examples in the \n“Product Identification System”  section. Minor edits\nand format changes throughout the document.\nRevision E (November 2012)\nRemoved references to Commercial temperatures;specifically in Section 17.0 “Packaging Information”\nand the Product Identification System  section.\nENC28J60\nDS39662E-page 94 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 95ENC28J60\nTHE MICROCHIP WEB SITE\nMicrochip provides online support via our WWW site at\nwww.microchip.com . This web site is used as a means\nto make files and information easily available tocustomers. Accessible by using your favorite Internet\nbrowser, the web site contains the following\ninformation:\n•Product Support  – Data sheets and errata, \napplication notes and sample programs, design \nresources, user’s guides and hardware support \ndocuments, latest software releases and archived software\n•General Technical Support  – Frequently Asked \nQuestions (FAQ), technical support requests, \nonline discussion groups, Microchip consultant \nprogram member listing\n•Business of Microchip  – Product selector and \nordering guides, latest Microchip press releases, listing of seminars and events, listings of \nMicrochip sales offices, distributors and factory \nrepresentatives\nCUSTOMER CHANGE NOTIFICATION \nSERVICE\nMicrochip’s customer notification service helps keep\ncustomers current on Microchip products. Subscribers\nwill receive e-mail notification whenever there arechanges, updates, revisions or errata related to a\nspecified product family or development tool of interest.\nTo register, access the Microchip web site at\nwww.microchip.com . Under “Support”, click on\n“Customer Change Notification” and follow the\nregistration instructions.CUSTOMER SUPPORT\nUsers of Microchip products can receive assistancethrough several channels:\n• Distributor or Representative\n• Local Sales Office\n• Field Application Engineer (FAE)• Technical Support\n• Development Systems Information Line\nCustomers should contact their distributor,\nrepresentative or field application engineer (FAE) for\nsupport. Local sales offices are also available to helpcustomers. A listing of sales offices and locations is\nincluded in the back of this document.\nTechnical support is available through the web site\nat: http://microchip.com/support\nENC28J60\nDS39662E-page 96 . \uf0e3 2006-2012 Microchip Technology Inc.READER RESPONSE\nIt is our intention to provide you with the best documentation possible to ensure successful use of your Microchip\nproduct. If you wish to provide your comments on organization, clarity, subject matter, and ways in which our\ndocumentation can better serve you, please FAX your comments to the Technical Publications Manager at(480) 792-4150.\nPlease list the following information, and use this outline to provide us with your comments about this document.\nTO: Technical Publications Manager\nRE: Reader ResponseTotal Pages Sent ________\nFrom: Name\nCompany\nAddressCity / State / ZIP / Country\nTelephone: (_______) _________ - _________\nApplication (optional):\nWould you like a reply?       Y         N\nDevice: Literature Number: \nQuestions:FAX: (______) _________ - _________\nDS39662E ENC28J60\n1. What are the best features of this document?\n2. How does this document meet your hardware and software development needs?3. Do you find the organization of this document easy to follow? If not, why?4. What additions to the document do you think would enhance the structure and subject?5. What deletions from the document could be made without affecting the overall usefulness?6. Is there any incorrect or misleading information (what and where)?7. How would you improve this document?\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 97ENC28J60\nINDEX\nA\nAC Characteristics\nCLKOUT Pin ............................................................... 81Industrial and Commercial .......................................... 81\nReset........................................................................... 81\nSPI Interface (table).................................................... 82\nB\nBIST\nAddress Fill Mode ....................................................... 76Associated Registers .................................................. 77\nEBSTCS registers....................................................... 76\nEBSTSD Register ....................................................... 76Pattern Shift Fill Mode................................................. 76\nRandom Data Fill Mode .............................................. 76\nUsage.......................................................................... 76\nBlock Diagrams\nCrystal Oscillator Operation .......................................... 5\nENC28J60 Architecture ................................................ 3Ethernet Buffer Organization ...................................... 18\nEthernet Packet Format.............................................. 31\nEthernet Termination and External Connections .......... 7External Clock Source .................................................. 5\nI/O Level Shifting Using 3-State Buffers ....................... 8\nI/O Level Shifting Using AND Gates ............................. 8Interrupt Logic ............................................................. 63\nLEDB Polarity and Reset Configuration........................ 8\nMagic Packet Format.................................................. 52Memory Organization.................................................. 11\nOn-Chip Reset Circuit................................................. 59\nPattern Match Filter Format ........................................ 51Typical ENC28J60 Based Interface.............................. 4\nBuilt-in Self-Test Controller (BIST)...................................... 75\nC\nChecksum Calculations ...................................................... 72CLKOUT Pin ......................................................................... 6\nControl Register Summary............................................ 13–14Control Registers ................................................................ 12\nMap............................................................................. 12\nCustomer Change Notification Service ............................... 95Customer Notification Service............................................. 95\nCustomer Support............................................................... 95\nD\nDC Characteristics\nIndustrial and Commercial .......................................... 80\nDMA Controller ................................................................... 71\nAssociated Registers .................................................. 72\nChecksum Calculations .............................................. 72\nCopying Memory......................................................... 71\nDuplex Mode\nConfiguration and Negotiation .................................... 53\nE\nElectrical Characteristics..................................................... 79\nAbsolute Maximum Ratings ........................................ 79Oscillator Timing ......................................................... 81\nRequirements for External Magnetics......................... 81\nEREVID Register ................................................................ 22Errata .................................................................................... 2Ethernet\nPacket Format ............................................................ 31\nCRC Field........................................................... 32\nData Field ........................................................... 32Destination Address ........................................... 32\nPadding Field ..................................................... 32\nPreamble/Start-of-Frame Delimiter..................... 31Source Address.................................................. 32\nType/Length Field............................................... 32\nEthernet Buffer ................................................................... 17\nDMA Controller\nAccess................................................................ 17\nReading and Writing ................................................... 17Receive....................................................................... 17\nTransmit...................................................................... 17\nEthernet Module\nTransmitting and Receiving Data\nReceive Packet Layout....................................... 43\nTransmit Packet Layout...................................... 40\nEthernet Overview .............................................................. 31\nF\nFlow Control........................................................................ 55\nAssociated Registers.................................................. 57\nFull-Duplex Mode ....................................................... 55\nHalf-Duplex Mode....................................................... 55Sample Full-Duplex Network (Diagram) ..................... 55\nFlowcharts\nReceive Filters Using AND Logic ............................... 50Receive Filters Using OR Logic.................................. 49\nFull-Duplex Mode\nOperation.................................................................... 53\nH\nHalf-Duplex Mode\nOperation.................................................................... 53\nI\nI/O Level Shifting .................................................................. 8Initialization......................................................................... 33\nMAC Settings.............................................................. 34\nPHY Settings .............................................................. 37\nReceive Buffer............................................................ 33Receive Filters............................................................ 33\nTransmit Buffer ........................................................... 33\nWaiting for OST.......................................................... 33\nInternet Address ................................................................. 95\nInterrupts ............................................................................ 63\nDMA Flag (DMAIF) ..................................................... 69INT Enable (INTIE) ..................................................... 64\nLink Change Flag (LINKIF)......................................... 69\nReceive Error Flag (RXERIF) ..................................... 68\nReceive Packet Pending Flag (PKTIF)....................... 69\nTransmit Error Flag (TXERIF) .................................... 68Transmit Interrupt Flag (TXIF) .................................... 68\nL\nLED Configuration ................................................................ 8\nM\nMagnetics and External Components................................... 7Memory Organization ......................................................... 11Microchip Internet Web Site................................................ 95\nENC28J60\nDS39662E-page 98 . \uf0e3 2006-2012 Microchip Technology Inc.O\nOscillator ...............................................................................5\nStart-up Timer (OST) ....................................................5\nP\nPackage Types ..................................................................... 1Packaging Information ........................................................83\nDetails .........................................................................84\nMarking .......................................................................83\nPer Packet Control Byte Format .........................................39\nPHID Registers ...................................................................22\nPHSTAT Registers..............................................................22PHY Register Summary......................................................20\nPHY Registers.....................................................................19\nReading....................................................................... 19Scanning ..................................................................... 19\nWriting.........................................................................19\nPin Diagrams.........................................................................1Pinout I/O Descriptions ......................................................... 4\nPower-Down........................................................................73\nAssociated Registers ..................................................73\nPower-on Reset (POR) .......................................................60\nR\nRead Control Register (RCR) ............................................. 27Reader Response ............................................................... 96\nReceive Filters ....................................................................47\nBroadcast....................................................................52Hash Table..................................................................52\nMagic Packet ..............................................................52\nMulticast......................................................................52Pattern Match Filter.....................................................51\nUnicast Filter ...............................................................51\nReceiving Packets...............................................................43\nAssociated Registers ..................................................46\nCalculating Buffer Free Space ....................................45\nCalculating Free Receive Buffer Space ......................45Calculating Random Access Address......................... 44\nEnabling Reception.....................................................43\nFreeing Buffer Space ..................................................45Layout .........................................................................43\nReading....................................................................... 44\nStatus Vectors.............................................................44\nRegisters\nEBSTCON (Ethernet Self-Test Control)...................... 75\nECOCON (Clock Output Control) .................................6ECON1 (Ethernet Control 1) .......................................15\nECON2 (Ethernet Control 2) .......................................16\nEFLOCON (Ethernet Flow Control) ............................56EIE (Ethernet Interrupt Enable)...................................65\nEIR (Ethernet Interrupt Request, Flag) ....................... 66\nERXFCON (Ethernet Receive Filter Control).............. 48ESTAT (Ethernet Status) ............................................64\nMABBIPG (MAC Back-to-Back Inter-Packet Gap)......36\nMACON1 (MAC Control 1)..........................................34\nMACON3 (MAC Control 3)..........................................35\nMACON4 (MAC Control 4)..........................................36MICMD (MII Command).............................................. 21\nMISTAT (MII Status)................................................... 21\nPHCON1 (PHY Control 1) .......................................... 61PHCON2 (PHY Control 2) .......................................... 37\nPHID (PHY Device ID)................................................ 22\nPHIE (PHY Interrupt Enable)...................................... 67PHIR (PHY Interrupt Request, Flag)........................... 67\nPHLCON (PHY Module LED Control)........................... 9\nPHSTAT1 (Physical Layer Status 1)........................... 23PHSTAT2 (Physical Layer Status 2)........................... 24\nResets................................................................................. 59\nMAC, PHY Subsystem................................................ 61Power-on Reset.......................................................... 60\nReceive Only .............................................................. 60\nSystem........................................................................ 60Transmit Only ............................................................. 60\nRevision History.................................................................. 93\nS\nSerial Peripheral Interface. See SPI.\nSPI\nBit Field Clear Command............................................ 29Bit Field Set Command............................................... 29\nInstruction Set............................................................. 26\nOverview..................................................................... 25Read Buffer\nMemory Command ............................................. 28\nRead Control Register Command............................... 27System Reset Command............................................ 30\nWrite Buffer\nMemory Command ............................................. 29\nWrite Control Register Command............................... 28\nT\nTermination Requirement ..................................................... 7Timing Diagrams\nCLKOUT Transition ...................................................... 6\nRead Control Register Command \n(ETH Registers).................................................. 27\nRead Control Register Command \n(MAC/MII Registers) ........................................... 27\nSPI Input............................................................... 25, 82\nSPI Output ............................................................ 25, 82\nSystem Reset Command Sequence........................... 30Write Buffer Memory Command Sequence................ 29\nWrite Control Register Command Sequence.............. 28\nTransmitting Packets .......................................................... 39\nAssociated Registers.................................................. 42\nStatus Vectors ............................................................ 41\nW\nWWW Address ................................................................... 95WWW, On-Line Support ....... ................................................ 2\n\uf0e3 2006-2012 Microchip Technology Inc. . DS39662E-page 99ENC28J60\nPRODUCT IDENTIFICATION SYSTEM\nTo order or obtain information, e. g., on pricing or delivery, refer to the factory or the listed sales office .\nPART NO. -X /XX\nPackage Temperature\nRangeDevice\n   \nDevice ENC28J60: Ethernet Controller w/SPI Interface\nENC28J60T: Ethernet Controller w/SPI Interface\n(Tape and Reel)\nTemperature \nRangeI= - 4 0 \uf0b0C to +85 \uf0b0C (Industrial)\n(SPDIP, SOIC, SSOP and QFN packages)\n(Blank) = 0 \uf0b0C to +70 \uf0b0C (Commercial)\n(SSOP packages only)\nPackage SP = SPDIP (Skinny Plastic DIP)\nSO = SOIC (Plastic Small Outline)\nSS = SSOP (Plastic Shrink Small Outline)\nML = QFN (Quad Flat No Lead)Examples:\na) ENC28J60-I/SP: Industrial temperature, \nSPDIP package.\nb) ENC28J60-I/SO: Industrial temperature, \nSOIC package.\nc) ENC28J60T-I/SO: Tape and Reel, Industrial\ntemperature, SOIC package.\nd) ENC28J60/SS: Commercial temperature,\nSSOP package.\ne) ENC28J60T-I/SS: Tape and Reel, Industrial \ntemperature, SSOP package.\nf) ENC28J60-I/ML: Industrial temperature, \nQFN package.\nENC28J60\nDS39662E-page 100 . \uf0e3 2006-2012 Microchip Technology Inc.NOTES:\n\uf0e3 2006-2012 Microchip Technology Inc. DS39662E-page 101Information contained in this publication regarding device\napplications and the like is provided only for your convenience\nand may be superseded by updates. It is your responsibility to\nensure that your application meets with your specifications.\nMICROCHIP MAKES NO REPRESENTATIONS OR\nWARRANTIES OF ANY KIND WHETHER EXPRESS OR\nIMPLIED, WRITTEN OR ORAL, STATUTORY OR\nOTHERWISE, RELATED TO THE INFORMATION,\nINCLUDING BUT NOT LIMITED TO ITS CONDITION,\nQUALITY, PERFORMANCE, MERCHANTABILITY OR\nFITNESS FOR PURPOSE . Microchip disclaims all liability\narising from this information and its use. Use of Microchip\ndevices in life support and/or safety applications is entirely at\nthe buyer’s risk, and the buyer agrees to defend, indemnify andhold harmless Microchip from any and all damages, claims,\nsuits, or expenses resulting from such use. No licenses are\nconveyed, implicitly or otherwise, under any Microchip\nintellectual property rights.Trademarks\nThe Microchip name and logo, the Microchip logo, dsPIC, \nFlashFlex, K EELOQ, KEELOQ logo, MPLAB, PIC, PICmicro, \nPICSTART, PIC32 logo, rfPIC, SST, SST Logo, SuperFlash \nand UNI/O are registered trademarks  of Microchip Technology \nIncorporated in the U.S.A. and other countries.\nFilterLab, Hampshire, HI-TECH C, Linear Active Thermistor,  \nMTP, SEEVAL and The Embedded Control Solutions \nCompany are registered trademarks of Microchip Technology Incorporated in the U.S.A.\nSilicon Storage Technology is  a registered trademark of \nMicrochip Technology Inc. in other countries.\nAnalog-for-the-Digital Age, App lication Maestro, BodyCom, \nchipKIT, chipKIT logo, CodeGuard, dsPICDEM, \ndsPICDEM.net, dsPICworks, dsSPEAK, ECAN, \nECONOMONITOR, FanSense, HI-TIDE, In-Circuit Serial Programming, ICSP, Mindi, MiWi, MPASM, MPF, MPLAB \nCertified logo, MPLIB, MPLINK, mTouch, Omniscient Code \nGeneration, PICC, PICC-18, PICDEM, PICDEM.net, PICkit, PICtail, REAL ICE, rfLAB, Select Mode, SQI, Serial Quad I/O, \nTotal Endurance, TSHARC, UniWinDriver, WiperLock, ZENA \nand Z-Scale are trademarks of Microchip Technology Incorporated in the U.S.A. and other countries.\nSQTP is a service mark of Microchip Technology Incorporated \nin the U.S.A.\nGestIC and ULPP are registered trademarks of Microchip \nTechnology Germany II GmbH & Co. & KG, a subsidiary of \nMicrochip Technology Inc., in other countries. \nAll other trademarks mentioned herein are property of their \nrespective companies.\n© 2006-2012, Microchip Technology Incorporated, Printed in \nthe U.S.A., All Rights Reserved.\n Printed on recycled paper.\nISBN: 978-1-62076-686-6\nNote the following details of the code protection feature on Microchip devices:\n• Microchip products meet the specification contai ned in their particular Microchip Data Sheet.\n• Microchip believes that its family of products is one of the most secure families of its kind on the market today, when used i n the \nintended manner and under normal conditions.\n• There are dishonest and possibly illegal methods used to breach the code protection feature. All of these methods, to our \nknowledge, require using the Microchip produc ts in a manner outside the operating specif ications contained in Microchip’s Data \nSheets. Most likely, the person doing so is  engaged in theft of intellectual property.\n• Microchip is willing to work with the customer who is concerned about the integrity of their code.• Neither Microchip nor any other semiconduc tor manufacturer can guarantee the security of their code. Code protection does not \nmean that we are guaranteeing the product as “unbreakable.”\nCode protection is constantly evolving. We at Microchip are co mmitted to continuously improvin g the code protection features of  our\nproducts. Attempts to break Microchip’s code  protection feature may be a violation of the Digital Millennium Copyright Act. If such acts\nallow unauthorized access to your software or other copyrighted work, you may have a right to sue for relief under that Act.\nMicrochip received ISO/TS-16949:2009 certification for its worldwide \nheadquarters, design and wafer fabrication facilities in Chandler and \nTempe, Arizona; Gresham, Oregon and design centers in California \nand India. The Company’s quality system processes and procedures \nare for its PIC® MCUs and dsPIC® DSCs, K EELOQ® code hopping \ndevices, Serial EEPROMs, microperipherals, nonvolatile memory and \nanalog products. In addition, Microchip’s quality system for the design \nand manufacture of development systems is ISO 9001:2000 certified.QUALITY MANAGEMENT  S YSTEM \nCERTIFIED BY DNV \n== ISO/TS 16949  == \nDS39662E-page 102 \uf0e3 2006-2012 Microchip Technology Inc.\nAMERICAS\nCorporate Office\n2355 West Chandler Blvd.\nChandler, AZ 85224-6199\nTel: 480-792-7200 Fax: 480-792-7277\nTechnical Support: \nhttp://www.microchip.com/support\nWeb Address: \nwww.microchip.com\nAtlanta\nDuluth, GA \nTel: 678-957-9614 \nFax: 678-957-1455\nBoston\nWestborough, MA \nTel: 774-760-0087 \nFax: 774-760-0088\nChicago\nItasca, IL \nTel: 630-285-0071 Fax: 630-285-0075\nCleveland\nIndependence, OH \nTel: 216-447-0464 Fax: 216-447-0643\nDallas\nAddison, TX \nTel: 972-818-7423 \nFax: 972-818-2924\nDetroit\nFarmington Hills, MI \nTel: 248-538-2250\nFax: 248-538-2260\nIndianapolis\nNoblesville, IN \nTel: 317-773-8323\nFax: 317-773-5453\nLos Angeles\nMission Viejo, CA \nTel: 949-462-9523 Fax: 949-462-9608\nSanta Clara\nSanta Clara, CA Tel: 408-961-6444\nFax: 408-961-6445\nToronto\nMississauga, Ontario, \nCanada\nTel: 905-673-0699 \nFax: 905-673-6509ASIA/PACIFIC\nAsia Pacific OfficeSuites 3707-14, 37th Floor\nTower 6, The Gateway\nHarbour City, KowloonHong Kong\nTel: 852-2401-1200\nFax: 852-2401-3431\nAustralia - Sydney\nTel: 61-2-9868-6733\nFax: 61-2-9868-6755\nChina - Beijing\nTel: 86-10-8569-7000 \nFax: 86-10-8528-2104\nChina - Chengdu\nTel: 86-28-8665-5511\nFax: 86-28-8665-7889\nChina - Chongqing\nTel: 86-23-8980-9588\nFax: 86-23-8980-9500\nChina - Hangzhou\nTel: 86-571-2819-3187 \nFax: 86-571-2819-3189\nChina - Hong Kong SAR\nTel: 852-2401-1200 \nFax: 852-2401-3431\nChina - Nanjing\nTel: 86-25-8473-2460\nFax: 86-25-8473-2470\nChina - Qingdao\nTel: 86-532-8502-7355\nFax: 86-532-8502-7205\nChina - Shanghai\nTel: 86-21-5407-5533 \nFax: 86-21-5407-5066\nChina - Shenyang\nTel: 86-24-2334-2829Fax: 86-24-2334-2393\nChina - Shenzhen\nTel: 86-755-8203-2660 Fax: 86-755-8203-1760\nChina - Wuhan\nTel: 86-27-5980-5300Fax: 86-27-5980-5118\nChina - Xian\nTel: 86-29-8833-7252Fax: 86-29-8833-7256\nChina - Xiamen\nTel: 86-592-2388138 Fax: 86-592-2388130\nChina - Zhuhai\nTel: 86-756-3210040 Fax: 86-756-3210049ASIA/PACIFIC\nIndia - Bangalore\nTel: 91-80-3090-4444 \nFax: 91-80-3090-4123\nIndia - New Delhi\nTel: 91-11-4160-8631Fax: 91-11-4160-8632\nIndia - Pune\nTel: 91-20-2566-1512Fax: 91-20-2566-1513\nJapan - Osaka\nTel: 81-66-152-7160 Fax: 81-66-152-9310\nJapan - Yokohama\nTel: 81-45-471- 6166 Fax: 81-45-471-6122\nKorea - Daegu\nTel: 82-53-744-4301\nFax: 82-53-744-4302\nKorea - Seoul\nTel: 82-2-554-7200\nFax: 82-2-558-5932 or 82-2-558-5934\nMalaysia - Kuala Lumpur\nTel: 60-3-6201-9857Fax: 60-3-6201-9859\nMalaysia - Penang\nTel: 60-4-227-8870Fax: 60-4-227-4068\nPhilippines - Manila\nTel: 63-2-634-9065Fax: 63-2-634-9069\nSingapore\nTel: 65-6334-8870\nFax: 65-6334-8850\nTaiwan - Hsin Chu\nTel: 886-3-5778-366\nFax: 886-3-5770-955\nTaiwan - Kaohsiung\nTel: 886-7-213-7828\nFax: 886-7-330-9305\nTaiwan - Taipei\nTel: 886-2-2508-8600 \nFax: 886-2-2508-0102\nThailand - Bangkok\nTel: 66-2-694-1351Fax: 66-2-694-1350EUROPE\nAustria - WelsTel: 43-7242-2244-39\nFax: 43-7242-2244-393\nDenmark - Copenhagen\nTel: 45-4450-2828 \nFax: 45-4485-2829\nFrance - Paris\nTel: 33-1-69-53-63-20 \nFax: 33-1-69-30-90-79\nGermany - Munich\nTel: 49-89-627-144-0 \nFax: 49-89-627-144-44\nItaly - Milan \nTel: 39-0331-742611 \nFax: 39-0331-466781\nNetherlands - Drunen\nTel: 31-416-690399 \nFax: 31-416-690340\nSpain - Madrid\nTel: 34-91-708-08-90\nFax: 34-91-708-08-91\nUK - Wokingham\nTel: 44-118-921-5869\nFax: 44-118-921-5820Worldwide Sales and Service\n10/26/12\n'}]
!==============================================================================!
### ENC28J60-I/SO Ethernet Controller Summary

**Key Characteristics and Specifications:**

- **Voltage Ratings:**
  - Operating Voltage: 3.1V to 3.6V (3.3V typical)
  - 5V Tolerant Inputs: Yes

- **Current Ratings:**
  - Operating Current (Transmitting): 160 mA (typical)
  - Operating Current (Idle): 120 mA (typical)
  - Standby Current (Sleep mode): 1.2 mA (max)

- **Power Consumption:**
  - Power consumption varies based on operation mode, with a maximum of 160 mA during transmission.

- **Operating Temperature Range:**
  - Industrial: -40°C to +85°C
  - Commercial: 0°C to +70°C

- **Package Type:**
  - Available in 28-Pin SPDIP, SSOP, SOIC, and QFN packages.

- **Special Features:**
  - Integrated MAC and 10Base-T PHY
  - Supports full and half-duplex modes
  - Programmable automatic retransmit on collision
  - Internal DMA for fast data movement
  - Hardware-assisted checksum calculation
  - Supports various packet filtering options (Unicast, Multicast, Broadcast, Magic Packet, etc.)
  - Built-in self-test (BIST) for memory verification

- **Moisture Sensitive Level (MSL):**
  - MSL is not specified in the provided data.

**Description:**
The ENC28J60 is a stand-alone Ethernet controller designed for microcontrollers with an SPI interface. It is compliant with IEEE 802.3 standards and integrates both the MAC (Medium Access Control) and PHY (Physical Layer) functionalities, allowing it to connect to Ethernet networks seamlessly. The device supports various packet filtering mechanisms and has a built-in DMA controller for efficient data handling.

**Typical Applications:**
The ENC28J60 is commonly used in applications such as:
- **Embedded Networking:** Connecting microcontrollers to Ethernet networks for IoT devices, home automation, and industrial control systems.
- **Data Acquisition Systems:** Enabling remote data collection and monitoring over Ethernet.
- **Home Automation:** Facilitating communication between smart devices and central control systems.
- **Remote Monitoring:** Allowing devices to send status updates and receive commands over the network.

This controller is ideal for applications requiring reliable Ethernet connectivity with minimal external components, making it a popular choice for developers looking to integrate networking capabilities into their designs.