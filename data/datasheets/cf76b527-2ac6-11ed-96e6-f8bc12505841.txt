[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of MAX3421EEHJ+ production of MAXIM INTEGRATED from the text:19-3953; Rev 4; 7/13MAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface  EVALUATION KIT AVAILABLE\nFor pricing, delivery, and ordering information, please contact Maxim Direct\nat 1-888-629-4642, or visit Maxim’s website at www.maximintegrated.com.General Description\nThe MAX3421E USB peripheral/host controller contains\nthe digital logic and analog circuitry necessary toimplement a full-speed USB peripheral or a full-/low-speed host compliant to USB specification rev 2.0. Abuilt-in transceiver features ±15kV ESD protection andprogrammable USB connect and disconnect. An inter-nal serial interface engine (SIE) handles low-level USBprotocol details such as error checking and bus retries.The MAX3421E operates using a register set accessedby an SPI interface that operates up to 26MHz. Any SPImaster (microprocessor, ASIC, DSP, etc.) can add USBperipheral or host functionality using the simple 3- or 4-wire SPI interface.\nThe MAX3421E makes the vast collection of USB\nperipherals available to any microprocessor, ASIC, orDSP when it operates as a USB host. For point-to-pointsolutions, for example, a USB keyboard or mouse inter-faced to an embedded system, the firmware that oper-ates the MAX3421E can be simple since only atargeted device is supported. \nInternal level translators allow the SPI interface to run at\na system voltage between 1.4V and 3.6V. USB-timedoperations are done inside the MAX3421E with inter-rupts provided at completion so an SPI master does notneed timers to meet USB timing requirements. TheMAX3421E includes eight general-purpose inputs andoutputs so any microprocessor that uses I/O pins toimplement the SPI interface can reclaim the I/O pinsand gain additional ones.\nThe MAX3421E operates over the extended -40°C to\n+85°C temperature range and is available in a 32-pinTQFP package (5mm x 5mm) and a 32-pin TQFN pack-age (5mm x 5mm).\nApplicationsFeatures\noMicroprocessor-Independent USB Solution\noSoftware Compatible with the MAX3420E USBPeripheral Controller with SPI Interface\noComplies with USB Specification Revision 2.0(Full-Speed 12Mbps Peripheral, Full-/Low-Speed12Mbps/1.5Mbps Host)\noIntegrated USB Transceiver\noFirmware/Hardware Control of an Internal D+Pullup Resistor (Peripheral Mode) and D+/D-Pulldown Resistors (Host Mode)\noProgrammable 3- or 4-Wire, 26MHz SPI Interface\noLevel Translators and V\nLInput Allow Independent\nSystem Interface Voltage\noInternal Comparator Detects V BUS for Self-\nPowered Peripheral Applications\noESD Protection on D+, D-, and VBCOMP\noInterrupt Output Pin (Level- or Programmable-Edge) Allows Polled or Interrupt-Driven SPIInterface\noEight General-Purpose Inputs and Eight General-Purpose Outputs\noInterrupt Signal for General-Purpose Input Pins,Programmable Edge Polarity\noIntelligent USB SIE\noAutomatically Handles USB Flow Control andDouble Buffering\noHandles Low-Level USB Signaling Details\noContains Timers for USB Time-SensitiveOperations so SPI Master Does Not Need to TimeEvents\noSpace-Saving Lead-Free TQFP and TQFNPackages (5mm x 5mm)Embedded Systems\nMedical DevicesMicroprocessors and\nDSPs\nCustom USB DevicesCamerasDesktop RoutersPLCsSet-Top BoxesPDAsMP3 PlayersInstrumentation\nPART TEMP RANGEPIN-\nPACKAGETOP\nMARK\nM AX 3421E E H J+ - 40°C  to + 85°C 32 TQFP —\nM AX 3421E E TJ+ - 40°C  to + 85°C 32 TQFN - E P *B T B GOrdering Information\n*EP = Exposed pad.\n+Denotes a lead(Pb)-free/RoHS-compliant package.\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n2 Maxim IntegratedFeatures in Host Operation\noEleven Registers (R21–R31) are Added to the\nMAX3420E Register Set to Control Host Operation\noHost Controller Operates at Full Speed or LowSpeed\noFIFOS\nSNDFIFO: Send FIFO, Double-Buffered 64-Byte\nRCVFIFO: Receive FIFO, Double-Buffered 64-Byte\noHandles DATA0/DATA1 Toggle Generation andChecking\noPerforms Error Checking for All Transfers\noAutomatically Generates SOF (Full-Speed)/EOP(Low-Speed) at 1ms Intervals\noAutomatically Synchronizes Host Transfers withBeginning of Frame (SOF/EOP)\noReports Results of Host Requests\noSupports USB Hubs\noSupports ISOCHRONOUS Transfers\noSimple Programming\nSIE Automatically Generates Periodic SOF(Full-Speed) or EOP (Low-Speed) FrameMarkersSPI Master Loads Data, Sets Function Address,Endpoint, and Transfer Type, and Initiates theTransferMAX3421E Responds with an Interrupt and Result Code Indicating Peripheral ResponseTransfer Request Can be Loaded Any TimeSIE Synchronizes with Frame MarkersFor Multipacket Transfers, the SIEAutomatically Maintains and Checks the\nData TogglesFeatures in Peripheral Operation\noBuilt-In Endpoint FIFOS\nEP0: CONTROL (64 bytes)EP1: OUT, BULK or INTERRUPT, 2 x 64 Bytes(Double-Buffered)EP2: IN, BULK or INTERRUPT, 2 x 64 Bytes (Double-Buffered)EP3: IN, BULK or INTERRUPT (64 Bytes)\noDouble-Buffered Data Endpoints IncreaseThroughput by Allowing the SPI Master toTransfer Data Concurrent with USB Transfers\noSETUP Data Has its Own 8-Byte FIFO, SimplifyingFirmware\nThe MAX3421E connects to any microprocessor (µP)\nusing 3 or 4 interface pins (Figure 1). On a simplemicroprocessor without SPI hardware, these can bebit-banged general-purpose I/O pins. Eight GPIN andeight GPOUT pins on the MAX3421E more thanreplace the µP pins necessary to implement the inter-face. Although the MAX3421E SPI hardware includesseparate data-in (MOSI, master-out, slave-in) and data-out (MISO, master-in, slave-out) pins, the SPI interfacecan also be configured for the MOSI pin to carry bidi-rectional data, saving an interface pin. This is referredto as half-duplex mode.Typical Application Circuits\n3.3V \nREGULATOR\nSPI\n3, 4\nINTUSB μP MAX3421E\nFigure 1. The MAX3421E Connects to Any Microprocessor\nUsing 3 or 4 Interface Pins\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n3 Maxim Integrated3.3V \nREGULATORPOWER RAIL\nASIC, \nDSP, \nETC.SPI\n3, 4\nINTMAX3421E USB\nFigure 2. The MAX3421E Connected to a Large Chip\n3.3V \nREGULATOR\nMISO\nLOCAL \nGNDLOCAL POWER\nINT\nMAX3421E\nSCLK MOSI \nSSMICRO \nASIC \nDSPI\nS\nO\nL\nA\nT\nO\nR\nSUSB\nFigure 3. Optical Isolation of USB Using the MAX3421E\nMICRO, \nASIC, DSP USB\nPERIPHERALUSB\n"A"USB\n"B"V\nBUS\nSWITCH \nFAULT5V\nSPI\n3, 4\nINTVBUS\nD+\nD-\nGNDVBUS\nPOWERON/OFF3.3V\nREGULATOR\nMAX3421E\nFigure 4. The MAX3421E in an Embedded Host ApplicationTwo MAX3421E features make it easy to connect to\nlarge, fast chips such as ASICs and DSPs (Figure 2).First, the SPI interface can be clocked up to 26MHz.Second, the V\nLpin and internal level translators allow\nrunning the system interface at a lower voltage thanthe 3.3V required for V\nCC.\nThe MAX3421E provides an ideal method for electricallyisolating a USB interface (Figure 3). USB employs flowcontrol in which the MAX3421E automatically answershost requests with a NAK handshake, until the micro-processor completes its data-transfer operations overthe SPI port. This means that the SPI interface can runat any frequency up to 26MHz. Therefore, the designeris free to choose the interface operating frequency andto make opto-isolator choices optimized for cost or per-formance.\nFigure 4 shows a block diagram for a system in which\nthe MAX3421E operates as a USB host. A USB hostsupplies 5V power to the V\nBUSpin of the USB “A” con-\nnector to power USB peripherals. A system that pro-vides power to an external peripheral should useprotection circuitry on the power pin to prevent anexternal overcurrent situation from damaging the sys-tem. A V\nBUS switch, such as the MAX4789, provides\npower control plus two additional features: it limits thecurrent delivered to the peripheral (for example to200mA), and it indicates a fault (overcurrent) conditionto the SPI controller. Maxim offers a variety of V\nBUS\nswitches with various current limits and features.Consult the Maxim website for details.\nA 3.3V regulator (for example, the MAX6349TL) powers\nthe MAX3421E, and optionally the system controller. Ifthe system controller operates with a lower voltage, theMAX3421E SPI and I/O interface can run at the lowervoltage by connecting the system voltage (for exam-ple, 2.5V or 1.8V) to the MAX3421E V\nLpin.Typical Application Circuits (continued)\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n4 Maxim IntegratedFunctional Diagram\nGPIN0\n1V TO 3VVBCOMPD-D+VCC\nRGPIN\nVBUS\nCOMPSSMISOSCLK\nINT\nSPI SLAVE \nINTERFACEUSB SIE \n(SERIAL-\nINTERFACE\nENGINE)FULL-SPEED/\nLOW-SPEED \nUSB \nTRANSCEIVERRESET \nLOGIC\n1.5kΩINTERNAL \nPORRES XI XO\nPOWER\nDOWNOSC \nAND \n4x PLL\n48MHz\nESD \nPROTECTION\nESD \nPROTECTION\nGPXOPERATE SOFBUSACT/\nINIRQ\nMUX01 2 3MOSI\nVBUS_DETENDPOINT \nBUFFERS\nMAX3421E\nGNDGPIN1\nGPIN2GPIN3\nGPIN4GPIN5GPIN6\nGPIN7\nGPOUT0\nGPOUT1\nGPOUT2\nGPOUT3\nGPOUT4\nGPOUT5\nGPOUT6\nGPOUT7VL\nRIN15kΩ\n15kΩ\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n5 Maxim IntegratedPin Description\nPIN NAMEINPUT/\nOUTPUTFUNCTION\n1 GPIN7 InputGeneral-Purpose Input.  GPIN7–GPIN0 are connected to V L with internal pullup resistors.\nGPIN7–GPIN0 logic levels are referenced to the voltage on V L.\n2V L InputLevel-Translator Voltage Input. Connect V L to the system’s 1.4V to 3.6V logic-level power\nsupply. Bypass V L to ground with a 0.1µF capacitor as close to V L as possible.\n3, 19 GND Input Ground\n4 GPOUT0\n5 GPOUT1\n6 GPOUT2\n7 GPOUT3\n8 GPOUT4\n9 GPOUT5\n10 GPOUT6\n11 GPOUT7OutputGeneral-Purpose Push-Pull Outputs. GPOUT7–GPOUT0 logic levels are referenced to the\nvoltage on V L.\n12 RES InputDevice Reset. Drive RES low to clear all of the internal registers except for PINCTL (R17),\nUSBCTL (R15), and SPI logic. The logic level is referenced to the voltage on V L. (See the\nDevice Reset section for a description of resets available on the MAX3421E.) Note:  The\nMAX3421E is internally reset if either V C C  or V L  is not present. The register file is not accessible\nunder these conditions.\n13 SCLK InputS P I S er i al - C l ock Inp ut. An exter nal  S P I m aster  sup p l i es S C LK w i th fr eq uenci es up  to 26M H z. The\nl og i c l evel  i s r efer enced  to the vol tag e on V L . D ata i s cl ocked  i nto the S P I sl ave i nter face on the\nr i si ng  ed g e of S C LK. D ata i s cl ocked  out of the S P I sl ave i nter face on the fal l i ng  ed g e of S C LK.\n14 SS InputSPI Slave Select Input. The SS logic level is referenced to the voltage on V L. When SS is driven\nhigh, the SPI slave interface is not selected, the MISO pin is high impedance, and SCLK\ntransitions are ignored. An SPI transfer begins with a high-to-low SS transition and ends with a\nlow-to-high SS transition.\n15 MISO OutputSPI Serial-Data Output (Master-In Slave-Out). MISO is a push-pull output. MISO is tri-stated inhalf-duplex mode or when SS = 1. The MISO logic level is referenced to the voltage on V\nL.\n16 MOSIInput or\nInput/\nOutputSPI Serial-Data Input (Master-Out Slave-In). The logic level on MOSI is referenced to thevoltage on V\nL. MOSI can also be configured as a bidirectional MOSI/MISO input and output.\n(See Figure 15.)\n17 GPX OutputG ener al - P ur p ose M ul ti p l exed  P ush- P ul l  O utp ut. The i nter nal  M AX 3421E  si g nal  that ap p ear s on\nG P X  i s p r og r am m ab l e b y w r i ti ng  to the G P X B and  G P X A b i ts of the P IN C TL ( R17)  r eg i ster  and  the\nS E P IRQ b i t of the M O D E  ( R27)  r eg i ster . GP X  i nd i cates one of fi ve si g nal s ( see the G P X  secti on) .\n18 INT OutputInterrupt Output. In edge mode, the logic level on INT is referenced to the voltage on V L and is\na push-pull output with programmable polarity.  In level mode, INT is open-drain and active low.\nSet the IE bit in the CPUCTL (R16) register to enable INT.\n20 D-Input/\nOutputUSB D- Signal. Connect D- to a USB connector through a 33 Ω ±1% series resistor. A\nswitchable 15kΩ  D- pulldown resistor is internal to the device.\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n6 Maxim IntegratedPin Description (continued)\nPIN NAMEINPUT/\nOUTPUTFUNCTION\n21 D+Input/\nOutputUSB D+ Signal. Connect D+ to a USB  connector through a 33 Ω  ±1% series resistor. A\nswitchable 1.5kΩ D+ pullup resistor and 15k Ω D+ pulldown resistor is internal to the device.\n22 VBCOMP InputVBUS Comparator Input. VBCOMP is internally connected to a voltage comparator to allow the\nSPI master to detect (through an interrupt or checking a register bit) the presence or loss of\npower on V BUS. Bypass VBCOMP to ground with a 1.0µF ceramic capacitor. VBCOMP is pulled\ndown to ground with R IN (see Electrical Characteristics ).\n23 V CC InputU S B Tr anscei ver  and  Log i c C or e P ow er - S up p l y Inp ut. C onnect V C C  to a p osi ti ve 3.3V  p ow er \nsup p l y. Byp ass V C C  to g r ound  w i th a 1.0µF cer am i c cap aci tor  as cl ose to the V C C  p i n as p ossi b l e.\n24 XI InputCrystal Oscillator Input. Connect XI to one side of a parallel resonant 12MHz ±0.25% crystal\nand a load capacitor to GND. XI can also be driven by an external clock referenced to V CC.\n25 XO OutputC r ystal  Osci l l ator  O utp ut. C onnect X O to the other  si d e of a p ar al l el  r esonant 12M H z ± 0.25%  cr ystal \nand  a l oad  cap aci tor  to GN D . Leave X O unconnected  i f X I i s d r i ven w i th an exter nal  sour ce.\n26 GPIN0\n27 GPIN1\n28 GPIN2\n29 GPIN3\n30 GPIN4\n31 GPIN5\n32 GPIN6InputGeneral-Purpose Inputs. GPIN7–GPIN0 are connected to V L with internal pullup resistors.\nGPIN7–GPIN0 logic levels are referenced to the voltage on V L.\n— EP InputE xp osed  P ad , C onnected  to G r ound . C onnect E P  to G N D  or  l eave unconnected . E P  i s l ocated  on\nthe b ottom  of the TQ FN  p ackag e. The TQFP  p ackag e d oes not have an exp osed  p ad .\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n7 Maxim IntegratedRegister Description\nThe SPI master controls the MAX3421E by reading and\nwriting 26 registers in peripheral mode (see Table 1) orreading and writing 23 registers in host mode (see Table2). Setting the HOST bit in the MODE (R27) register con-figures the MAX3421E for host operation. When operatingas a USB peripheral, the MAX3421E is register-compati-ble with the MAX3420E with the additional features listedin Note 1b below Table 1. For a complete description ofregister contents, refer to the \nMAX3421E Programming\nGuide on the Maxim website. \nA register access consists of the SPI master first writingan SPI command byte followed by reading or writing thecontents of the addressed register. All SPI transfers areMSB first. The command byte contains the registeraddress, a direction bit (read = 0, write = 1), and theACKSTAT bit (Figure 5). The SPI master addresses theMAX3421E registers by writing the binary value of theregister number in the Reg4 through Reg0 bits of thecommand byte. For example, to access the IOPINS1(R20) register, the Reg4 through Reg0 bits would be asfollows: Reg4 = 1, Reg3 = 0, Reg2 = 1, Reg1 = 0, Reg0= 0. The DIR (direction) bit determines the direction forthe data transfer. DIR = 1 means the data byte(s) arewritten to the register, and DIR = 0 means the databyte(s) are read from the register. The ACKSTAT bit setsthe ACKSTAT bit in the EPSTALLS (R9) register (periph-eral mode only). The SPI master sets this bit to indicatethat it has finished servicing a CONTROL transfer. Sincethe bit is frequently used, having it in the SPI commandbyte improves firmware efficiency. The ACKSTAT bit isignored in host mode. In SPI full-duplex mode, theMAX3421E clocks out eight USB status bits as the com-mand byte is clocked in (Figures 6, 7). In half-duplexmode, these status bits are accessed as register bits.\nThe first five registers (R0–R4) address FIFOs in both\nperipheral and host modes. Repeated accesses to theseregisters freeze the internal register address so that mul-tiple bytes may be written to or read from a FIFO in thesame SPI access cycle (while SSis low). Accesses to\nregisters R5–R19 increment the internal register addressfor every byte transferred during the SPI access cycle.Accessing R20 freezes access at that register, access-ing R21–R31 increments the internal address, andrepeated accesses to R31 freeze at R31. \nThe register maps in Table 1 and Table 2 show which\nregister bits apply in peripheral and host modes.Register bits that do not apply to a particular mode areshown as zeros. These register bits read as zero valuesand should not be written to with a logic 1.\nRegister Map in Peripheral Mode \nThe MAX3421E maintains register compatibility with theMAX3420E when operating in USB peripheral mode(MAX3421E HOST bit is set to 0 (default)). Firmwarewritten for the MAX3420E runs without modification onthe MAX3421E. To support new MAX3421E features,the register set includes new bits, described in Note 1bat the bottom of Table 1.\nRegister Map in Host Mode\nAs Table 2 shows, in host mode (HOST = 1), someMAX3420E registers are renamed (for example R1becomes RCVFIFO), some are not used (shown withzeros), and some still apply to host mode. In addition, 11registers (R21–R31) add the USB host capability.\nFigure 7. USB Status Bits Clocked Out as First Byte of Every Transfer in Host Mode (Full-Duplex Mode Only)STATUS BITS (HOST MODE)\nb7 b6 b5 b4 b3 b2 b1 b0\nHXFRDNIRQ FRAMEIRQ CONNIRQ SUSDNIRQ SNDBAVIRQ RCVDAVIRQ RSMREQIRQ BUSEVENTIRQ*The ACKSTAT bit is ignored in host mode.\nFigure 5. SPI Command Byteb7 b6 b5 b4 b3 b2 b1 b0\nReg4 Reg3 Reg2 Reg1 Reg0 0 DIR ACKSTAT*\nFigure 6. USB Status Bits Clocked Out as First Byte of Every Transfer in Peripheral Mode (Full-Duplex Mode Only)STATUS BITS (PERIPHERAL MODE)\nb7 b6 b5 b4 b3 b2 b1 b0\nSUSPIRQ URESIRQ SUDAVIRQ IN3BAVIRQ IN2BAVIRQ OUT1DAVIRQ OUT0DAVIRQ IN0BAVIRQ\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n8 Maxim IntegratedTable 1. MAX3421E Register Map in Peripheral Mode (HOST = 0) (Notes 1a, 1b)\nR EG NAME b 7 b 6 b 5 b 4 b 3 b 2 b 1 b 0 a c c \nR0 EP0 F IF O b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR1 EP1 O U T F IF O b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR2 EP2 IN F IF O b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR3 EP3 IN F IF O b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR4 SU D F IF O b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR5 EP0 B C 0b  6b  5b  4b  3b  2b  1b  0R S  C \nR6 EP1 O U T B C 0b  6b  5b  4b  3b  2b  1b  0R S  C \nR7 EP2 IN B C 0b  6b  5b  4b  3b  2b  1b  0R S  C \nR8 EP3 IN B C 0b  6b  5b  4b  3b  2b  1b  0R S  C \nR9 EPST A L L S 0A C  KS TAT S TLS TAT S TLE P 3IN S TLE P 2IN S TLE P 1OU TS  TLE P 0OU TS  TLE P 0IN RS C \nR10 C L R T O G S E P 3D IS AB E P 2D IS AB E P 1D IS AB C TG E P 3IN C TG E P 2IN C TG E P 1OU T0 0 R S  C \nR11 EPI R Q 00 S  U D AV IRQ IN 3BAV IRQ IN 2BAV IRQ OU T1D AV IRQ OU T0D AV IRQ IN 0BAV IRQ RC \nR12 EPI EN 00 S  U D AV IE IN 3BAV IE IN 2BAV IE OU T1D AV IE OU T0D AV IE IN 0BAV IE RS C \nR13 U SB IR Q U RE S D N IRQ V BU S IRQ N OV BU S IRQ S U S P IRQ U RE S IRQ BU S AC TIRQ RWU D N IRQ OS C OKIRQ RC \nR14 U SB IEN U RE S D N IE V BU S IE N OV BU S IE S U S P IE U RE S IE BU S AC TIE RWU D N IE OS C OKIE RS C \nR15 U SB C T L H OS C S TE N V BG ATE C H IP RE S P WRD OWN C ON N E C TS  IG RWU 0 0 RS C \nR16 C PU C T L P U LS E WID 1P  U LS E WID 00 0 0 0 0 I E  R S  C \nR17 PIN C T L E P 3IN AK E P 2IN AK E P 0IN AK FD U P S P II N  TLE V E LP  OS IN TG P  X BG P  X AR S  C \nR18 R EVISIO N 00 01 0 0 1 1 R\nR19 F N A D D R 0b  6b  5b  4b  3b  2b  1b  0R\nR20 IO PIN S1 GP IN 3G P  IN 2G P  IN 1G P  IN 0G P  O U T3 GP O U T2 GP O U T1 GP O U T0 RS C \nR21 IOPINS2 GP IN 7G P  IN 6G P  IN 5G P  IN 4G P  O U T7 GP O U T6 GP O U T5 GP O U T4 RS C \nR22 GPINIRQ GP IN IRQ7 GP IN IRQ6 GP IN IRQ5 GP IN IRQ4 GP IN IRQ3 GP IN IRQ2 GP IN IRQ1 GP IN IRQ0 RS C \nR23 GPINIEN GP IN IE N 7G P  IN IE N 6G P  IN IE N 5G P  IN IE N 4G P  IN IE N 3G P  IN IE N 2G P  IN IE N 1G P  IN IE N 0R S  C \nR24 GPINPOL GP IN P OL7 GP IN P OL6 GP IN P OL5 GP IN P OL4 GP IN P OL3 GP IN P OL2 GP IN P OL1 GP IN P OL0 RS C \nR25 — 00 00 0 0 0 0 —\nR26 — 00 00 0 0 0 0 —\nR27 MODE 00 0 S  E P IRQ 0 0 0 H OS T =  0R S  C \nR28 — 00 00 0 0 0 0 —\nR29 — 00 00 0 0 0 0 —\nR30 — 00 00 0 0 0 0 —\nR31 — 00 00 0 0 0 0 —\nNote 1a: The acc (access) column indicates how the SPI master can access the register.\nR = read, RC = read or clear, RSC = read, set, or clear. Writing to an R register (read only) has no effect. Writing a 1 to an RC bit (read or clear) clears the bit. Writing a zero to an RC bit has no effect.\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n9 Maxim IntegratedNote 1b: In peripheral mode, the MAX3421E performs identically to the MAX3420E with the following enhancements:\n1)  R16 adds the PULSEWID0 and PULSEWID1 bits to control the INT pulse width in edge interrupt mode\n(see Figure 12.) These bits default to the MAX3420E setting of 10.6µs.\n2)  R21 adds four more GPIO bits.3)  R22 and R23 add general-purpose input pins to the interrupt system. R24 controls the edge polarity. 4)  R27 controls the peripheral/host mode and the SEPIRQ bit.5)  When [GPXB:GPXA] = [1:0] and the bit SEPIRQ = 1 (R27 bit 4), the GPX output replaces the BUSACT\nsignal with a second IRQ pin dedicated to the GPIN pin interrupts.\nTable 2. MAX3421E Register Map in Host Mode (HOST = 1) (Note 2)\nR EG NAME b 7 b 6 b 5 b 4 b 3 b 2 b 1 b 0 a c c \nR0 — 0 0 0 0 0 0 0 0 —\nR1 RCVFIFO b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR2 SNDFIFO b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR3 — 0 0 0 0 0 0 0 0 —\nR4 SUDFIFO b 7b  6b  5b  4b  3b  2b  1b  0R S  C \nR5 — 0 0 0 0 0 0 0 0 —\nR6 RCVBC 0B C 6B C  5B C  4B C  3B C  2B C 1B C 0R S  C \nR7 SNDBC 0B C 6B C  5B C  4B C  3B C  2B C 1B C 0R S  C \nR8 — 00 0 00 0 0 0 —\nR9 — 00 0 00 0 0 0 —\nR10 — 00 0 00 0 0 0 —\nR11 — 00 0 00 0 0 0 —\nR12 — 00 0 00 0 0 0 —\nR13 USBIRQ 0V  BU S IRQ N OV BU S IRQ 0 0 0 0 OS C OKIRQ RC \nR14 USBIEN 0V  BU S IE N OV BU S IE 0 0 0 0 OS C OKIE RS C \nR15 USBCTL 00 C  H IP RE S P WRD OWN 0 0 0 0 RS C \nR16 CPUCTL P U LS E WID 1P  U LS E WID 00 0 0 0 0 I E  R S  C \nR17 PINCTL E P 3IN AK E P 2IN AK E P 0IN AK FD U P S P II N  TLE V E LP  OS IN TG P  X BG P  X AR S  C \nR18 REVISION 00 0 10 0 1 1 R\nR19 — 00 0 00 0 0 0 —\nR20 IOPINS1 GP IN 3G P  IN 2G P  IN 1G P  IN 0G P  O U T3 GP O U T2 GP O U T1 GP O U T0 RS C \nR21 IOPINS2 GP IN 7G P  IN 6G P  IN 5G P  IN 4G P  O U T7 GP O U T6 GP O U T5 GP O U T4 RS C \nR22 GPINIRQ GP IN IRQ7 GP IN IRQ6 GP IN IRQ5 GP IN IRQ4 GP IN IRQ3 GP IN IRQ2 GP IN IRQ1 GP IN IRQ0 RC \nR23 GPINIEN GP IN IE N 7G P  IN IE N 6G P  IN IE N 5G P  IN IE N 4G P  IN IE N 3G P  IN IE N 2G P  IN IE N 1G P  IN IE N 0R S  C \nR24 GPINPOL GP IN P OL7 GP IN P OL6 GP IN P OL5 GP IN P OL4 GP IN P OL3 GP IN P OL2 GP IN P OL1 GP IN P OL0 RS C \nR25 HIRQ H X FRD N IRQ FRAM E IRQ C ON N IRQ S U S D N IRQ S N D BAV IRQ RC V D AV IRQ RS M RE QIRQ BU S E V E N TIRQ RC \nR26 HIEN H X FRD N IE FRAM E IE C ON N IE S U S D N IE S N D BAV IE RC V D AV IE RS M RE QIE BU S E V E N TIE RS C \nR27 MODE D P P U LLD N D M P U LLD N D E LAY IS OS  E P IRQ S OFKAE N AB H U BP RE S P E E D H OS T =  1R S  C \nR28 PERADDR 0b  6b  5b  4b  3b  2b  1b  0R S  C \nR29 HCTL S N D TOG1 S N D TOG0 RC V TOG1 RC V TOG0 S IG RS M BU S S AM P LE FRM RS TB U  S RS TL S  \nR30 HXFR H S IS O OU TN IN S E TU P E P 3E  P 2E  P 1E  P 0L S  \nR31 HRSL JS TATU S KS TATU S S N D TOGRD RC V TOGRD H RS LT3 H RS LT2 H RS LT1 H RS LT0 RTable 1. MAX3421E Register Map in Peripheral Mode (HOST = 0) (Notes 1a, 1b) (continued)\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n10 Maxim IntegratedMAX3421E\nTQFP\n(5mm x 5mm)TOP VIEW\n29\n302827\n121113VL\nGPOUT0\nGPOUT1\nGPOUT2\nGPOUT314GPIN7\nVCC\nD+\nD-XI\nGND\nINT\n12GPIN2\n456723 24 22 20 19 18\nGPIN3\nGPIN4SS\nSCLK\nRES\nGPOUT7GND VBCOMP\n321\n31 10 GPIN5 GPOUT6\n32 9 GPIN6 GPOUT5GPIN126 15 MISO GPIN025 16 MOSIGPOUT4 GPX\n817\nXO\n+Pin ConfigurationsNote 2: The acc (access) column indicates how the SPI master can access the register.\nR = read; RC = read or clear; RSC = read, set, or clear; LS = load-sensitive.Writing to an R register (read only) has no effect.Writing a 1 to an RC bit (read or clear) clears the bit.Writing a zero to an RC bit has no effect.Writing to an LS register initiates a host operation based on the contents of the register.\nMAX3421E\nTQFN\n(5mm x 5mm)TOP VIEW OF BOTTOM LEADS\n29\n302827\n121113VL\nGPOUT0\nGPOUT1\nGPOUT2\nGPOUT314GPIN7\nVCC\nD+\nD-XI\nGND\nINT\n12GPIN2\n456723 24 22 20 19 18\nGPIN3\nGPIN4SS\nSCLK\nRES\nGPOUT7GND VBCOMP\n321\n31 10 GPIN5 GPOUT6\n32 9 GPIN6 GPOUT5GPIN126 15 MISO GPIN025 16 MOSIGPOUT4 GPX\n817\nXO\n+\n*EXPOSED PAD CONNECTED TO GROUND*EPTable 2. MAX3421E Register Map in Host Mode (HOST = 1) (Note 2) (continued)\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n11 Maxim IntegratedABSOLUTE MAXIMUM RATINGS\nELECTRICAL CHARACTERISTICS\n(VCC= +3V to +3.6V, V L= +1.4V to +3.6V, T A= TMINto TMAX, unless otherwise noted. Typical values are at V CC= +3.3V, V L=\n+2.5V, T A= +25°C.) (Note 3)Stresses beyond those listed under “Absolute Maximum Ratings” may cause permanent damage to the device. These are stress ratings only, and functional\noperation of the device at these or any other conditions beyond those indicated in the operational sections of the specifications is not implied. Exposure to\nabsolute maximum rating conditions for extended periods may affect device reliability.(All voltages referenced to GND, unless otherwise noted.)\nVCC......................................................................... -0.3V to +4V\nVL.............................................................................-0.3V to +4V\nVBCOMP .................................................................-0.3V to +6VD+, D-, XI, XO ............................................-0.3V to (V\nCC + 0.3V)\nSCLK, MOSI, MISO, SS, RES, GPOUT7–GPOUT0,\nGPIN7–GPIN0, GPX, INT ..........................-0.3V to (V L+ 0.3V)Continuous Power Dissipation (T A= +70°C)\n32-Pin TQFN (derate 21.3mW/°C above +70°C) .......1702mW32-Pin TQFP (derate 13.1mW/°C above +70°C)........1047mW\nOperating Temperature Range ...........................-40 °C to +85°C\nJunction Temperature......................................................+150 °C\nStorage Temperature Range .............................-65 °C to +150°C\nLead Temperature (soldering, 10s) .................................+300 °C\nSoldering Temperature (reflow) .......................................+260 °C\nPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nDC CHARACTERISTICS\nSupply Voltage V CC VCC 3.0 3.3 3.6 V\nLogic-Interface Voltage V L VL 1.4 3.6 V\nVCC Supply Current ICCContinuously transmitting on D+ and D- at\n12Mbps, C L = 50pF on D+ and D- to GND,\nCONNECT = 045 mA\nVL Supply Current ILSCLK toggling at 20MHz, SS = low,\nGPIN7–GPIN0 = 02.35 10 mA\nVCC Supply Current During Idle I CCID D+ = high, D- = low 8.7 15 mA\nVCC Suspend Supply Current I CCSUS CONNECT = 0, PWRDOWN = 1 30 60 µA\nV L S usp end  S up p l y C urr ent ILSUS CONNECT = 0, PWRDOWN = 1 20 50 µA\nLOGIC-SIDE I/O\nILOAD  = +1mA V L -  0.4\nILOAD  = +5mA, V L < 2.5V (Note 4) V L -  0.45MISO, GPOUT7–GPOUT0, GPX,\nINT Output High VoltageVOH\nILOAD  = +10mA, V L ≥ 2.5V (Note 4) V L -  0.4V\nILOAD  = -1mA 0.4\nILOAD  = -20mA, V L < 2.5V (Note 4) 0.6MISO, GPOUT7–GPOUT0, GPX,INT Output Low VoltageV\nOL\nILOAD  = -20mA, V L ≥ 2.5V (Note 4) 0.4V\nSCLK, MOSI, GPIN7–GPIN0, SS,\nRES Input High VoltageVIH 2/3 x V L V\nSCLK, MOSI, GPIN7–GPIN0, SS,\nRES Input Low VoltageVIL 0.4 V\nSCLK, MOSI, SS, RES  Input\nLeakage CurrentIIL -1 +1 µA\nGP IN 7–GP IN 0 P ul l up  Resi stor  to V L RGPIN 10 20 30 kΩ\nTRANSCEIVER SPECIFICATIONS\nDifferential-Receiver Input\nSensitivity|VD+ - VD-| 0.2 V\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n12 Maxim IntegratedELECTRICAL CHARACTERISTICS (continued)\n(VCC= +3V to +3.6V, V L= +1.4V to +3.6V, T A= TMINto TMAX, unless otherwise noted. Typical values are at V CC= +3.3V, V L=\n+2.5V, T A= +25°C.) (Note 3)\nPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nDifferential-Receiver Common-\nMode Voltage0.8 2.5 V\nSingle-Ended Receiver Input LowVoltageV\nIL 0.8 V\nSingle-Ended Receiver Input\nHigh VoltageVIH 2.0 V\nSingle-Ended ReceiverHysteresis Voltage0.2 V\nD+, D- Output Low Voltage VOL RL = 1.5k Ω from D+ to 3.6V 0.3 V\nD+, D- Output High Voltage VOH RL = 15k Ω from D+ and D- to GND 2.8 3.6 V\nDriver Output ImpedanceExcluding External Resistor(Note 4) 2 7 11 Ω\nD+ Pullup Resistor REXT = 33 Ω 1.425 1.5 1.575 kΩ\nD+, D- Pulldown Resistor REXT = 33 Ω 14.25 15 15.75 kΩ\nD+, D- Input Impedance 300 kΩ\nESD PROTECTION (D+, D-, VBCOMP)\nHuman Body Model1µF ceramic capacitors from VBCOMP and\nVCC to GND±15 kV\nIEC 61000-4-2 Air-Gap Discharge1µF ceramic capacitors from VBCOMP andV\nCC to GND±12 kV\nIEC 61000-4-2 Contact Discharge1µF ceramic capacitors from VBCOMP andV\nCC to GND±8 kV\nTHERMAL SHUTDOWN\nThermal-Shutdown Low-to-High +160 °C\nThermal-Shutdown High-to-Low +140 °C\nCRYSTAL OSCILLATOR SPECIFICATIONS (XI, XO)\nXI Input High Voltage 2/3 x V C C VCC V\nXI Input Low Voltage 0.4 V\nXI Input Current 10 µA\nXI, XO Input Capacitance 3p F\nVBCOMP COMPARATOR SPECIFICATIONS\nVBCOMP Comparator Threshold V TH 1.0 2.0 3.0 V\nVBCOMP Comparator Hysteresis V HYS 375 mV\nVBCOMP Comparator InputImpedanceR\nIN 100 kΩ\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n13 Maxim IntegratedNote 3: Parameters are 100% production tested at T A= +25°C. Specifications over temperature are guaranteed by design.\nNote 4: Guaranteed by bench testing. Limits are not production tested.\nNote 5: At V L= 1.4V to 2.5V, derate all the SPI timing characteristics by 50%. Not production tested.\nNote 6: The minimum period is derived from SPI timing parameters.\nNote 7: Time-to-exit suspend is dependent on the crystal used.PARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nUSB TRANSMITTER TIMING CHARACTERISTICS (FULL-SPEED MODE)\nD+, D- Rise Time tRISE CL = 50pF, Figures 8 and 9 4 20 ns\nD+, D- Fall Time tFALL CL = 50pF, Figures 8 and 9 4 20 ns\nRise-/Fall-Time Matching CL = 50pF, Figures 8 and 9 (Note 4) 90 110 %\nOutput-Signal Crossover Voltage CL = 50pF, Figures 8 and 9 (Note 4) 1.3 2.0 V\nUSB TRANSMITTER TIMING CHARACTERISTICS (HOST LOW-SPEED MODE)\nD+, D- Rise Time tRISE 200pF ≤  CL ≤ 600pF, Figures 8 and 9 75 300 ns\nD+, D- Fall Time tFALL 200pF ≤  CL ≤ 600pF, Figures 8 and 9 75 300 ns\nRise-/Fall-Time Matching 200p F ≤ C L ≤ 600p F, Fi g ur es 8 and  9 80 120 %\nOutput-Signal Crossover Voltage 200p F ≤ C L ≤ 600p F, Fi g ur es 8 and  9 1.3 2.0 V\nSPI BUS TIMING CHARACTERISTICS (V L = 2.5V) (Figures 10 and 11) (Note 5)\nVL > 2.5V 38.4S eri al  C l ock ( SC LK) P eri od  ( N ote 6) t CPVL = 1.4V 77.7ns\nSCLK Pulse-Width High tCH 17 ns\nSCLK Pulse-Width Low tCL 17 ns\nSS Fall to MISO Valid tCSS 20 ns\nSS Leading Time Before the First\nSCLK EdgetL 30 ns\nSS Trailing Time After the LastSCLK Edget\nT 30 ns\nData-In Setup Time tDS 5n s\nData-In Hold Time tDH 10 ns\nSS Pulse High tCSW 200 ns\nSCLK Fall to MISO PropagationDelayt\nDO 14.2 ns\nSCLK Fall to MOSI PropagationDelayt\nDI 14.2 ns\nSCLK Fall to MOSI Drive tON 3.5 ns\nSS High to MOSI High\nImpedancetOFF 20 ns\nSUSPEND TIMING CHARACTERISTICS\nTime-to-Enter Suspend PWRDOWN = 1 to oscillator stop 5 µs\nTime-to-Exit Suspend PWRDOWN = 1 to 0 to OSCOKIRQ (Note 7) 3 msTIMING CHARACTERISTICS \n(VCC= +3V to +3.6V, V L= +1.4V to +3.6V, T A= TMINto TMAX, unless otherwise noted. Typical values are at V CC= +3.3V, V L=\n+2.5V, T A= +25°C.) (Note 3 )\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n14 Maxim IntegratedTest Circuits and Timing Diagrams\nFigure 8. Rise and Fall TimesVOLVOHtRISE tFALL\n90%\n10%\nFigure 9. Load for D+/D- AC MeasurementsMAX3421E\nD+ OR D-TEST \nPOINT\n33Ω\n15kΩ CL\nSCLKSS\nMOSI\nMISOtDS\ntDHtCL\ntDOtCH tT\n8 1 2 9 10 16tL\ntCSStCSW\ntCP\nHIGH\nIMPEDANCEHIGHIMPEDANCE\nFigure 11. SPI Bus Timing Diagram (Half-Duplex Mode, SPI Mode (0,0))SCLK\nMOSI\nMISO\nNOTES:\n1) DURING THE FIRST 8 CLOCKS CYCLES, THE MOSI PIN IS HIGH IMPEDANCE AND THE SPI MASTER DRIVES DATA ONTO THE MOSI PIN. SETUP AND HOLD TIMES ARE THE SAME AS\n    FOR FULL-DUPLEX MODE.\n2) FOR SPI WRITE CYCLES, THE MOSI PIN CONTINUES TO BE HIGH IMPEDANCE AND THE EXTERNAL MASTER CONTINUES TO DRIVE MOSI.\n3) FOR SPI READ CYCLES, AFTER THE 8TH CLOCK-FALLING EDGE, THE MAX3421E STARTS DRIVING THE MOSI PIN AFTER TIME t ON. THE EXTERNAL MASTER MUST TURN \n    OFF ITS DRIVER TO THE MOSI PIN BEFORE t ON TO AVOID CONTENTION. PROPAGATION DELAYS ARE THE SAME AS FOR THE MOSI PIN IN FULL-DUPLEX MODE.tDS\ntDHtCL tCH\ntDI tOFFtTSS\nHI-Z8 1 2 9 10 16tL\ntCSW\ntONtCP\nHIGH\nIMPEDANCEHIGHIMPEDANCEFigure 10. SPI Bus Timing Diagram (Full-Duplex Mode, SPI Mode (0,0))\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n15 Maxim IntegratedTypical Operating Characteristics\n(VCC= +3.3V, V L= +3.3V, T A= +25°C.)\nDetailed Description\nThe MAX3421E contains digital logic and analog cir-\ncuitry necessary to implement a full-speed USB periph-eral or a full-/low-speed host compliant to USBspecification rev 2.0. The MAX3421E is selected tooperate as either a host or peripheral by writing to theHOST bit in the MODE (R27) register. The MAX3421Efeatures an internal USB transceiver with ±15kV ESDprotection on D+, D-, and VBCOMP. A switchable1.5kΩ pullup resistor is provided on D+ and switchable\n15kΩ pulldown resistors are provided on both D+ and\nD-. Any SPI master can communicate with theMAX3421E through the SPI slave interface that oper-ates in SPI mode (0,0) or (1,1). An SPI master accessesthe MAX3421E by reading and writing to internal regis-ters. A typical data transfer consists of writing a firstbyte that sets a register address and direction withadditional bytes reading or writing data to the registeror internal FIFO.\nIn peripheral mode, the MAX3421E contains 384 bytes\nof endpoint buffer memory, implementing the followingendpoints:\n• EP0: 64-byte bidirectional CONTROL endpoint• EP1: 2 x 64-byte double-buffered BULK/INT\nOUT endpoint\n• EP2: 2 x 64-byte double-buffered BULK/INT IN\nendpoint\n• EP3: 64-byte BULK/INT IN endpointThe choice to use EP1, EP2, EP3 as BULK or INTER-\nRUPT endpoints is strictly a function of the endpointdescriptors that the SPI master returns to the USB hostduring enumeration.\nIn host mode, the MAX3421E contains 256 bytes of\nsend and receive FIFO memory:\n• SNDFIFO: Send FIFO—double-buffered 64-byte\nFIFO\n• RCVFIFO: Receive FIFO—double-buffered 64-byte\nFIFO\nThe host FIFOs can send SETUP, BULK, INTERRUPT,\nand ISOCHRONOUS requests to a peripheral device, atfull speed or low speed. The MAX3421E accommodateslow-speed devices whether they are directly connected,or connected through a USB hub. Because theMAX3421E does much of the host housekeeping, it iseasy to program. The SPI master does a typical hostoperation by setting the device address and endpoint,launching a packet, and waiting for a completion inter-rupt. Then it examines transfer result bits to determinehow the peripheral responded. It automatically gener-ates frame markers (full-speed SOF packets or low-speed keep-alive pulses), and ensures that packets aredispatched at the correct times relative to these markers.\nThe MAX3421E register set and SPI interface is optimized\nto reduce SPI traffic. An interrupt output pin, INT, notifiesthe SPI master when USB service is required; for exam-ple, when a packet arrives, a packet is sent, or the hostsuspends or resumes bus activity. Double-buffered FIFOs\nEYE DIAGRAM\nMAX3421E toc014\n1\n0\n-1\n01 02 03 04 05 06 07 08 023\nTIME (ns)D+ AND D- (V)\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n16 Maxim Integratedhelp sustain bandwidth by allowing data to move concur-\nrently over USB and the SPI interface.\nVCC\nPower the USB transceiver and digital logic by apply-ing a positive 3.3V supply to V\nCC. Bypass V CCto GND\nwith a 1.0µF ceramic capacitor as close to the V CCpin\nas possible.\nVL\nVL acts as a reference level for the SPI interface and all\nother digital inputs and outputs. Connect V Lto the sys-\ntem’s logic-level power supply. Internal level translatorsand V\nLallow the SPI interface and all general-purpose\ninputs and outputs to operate at a system voltagebetween 1.4V and 3.6V.\nVBCOMP\nThe MAX3421E features a USB V BUS detector input,\nVBCOMP. The VBCOMP pin can withstand input volt-ages up to 6V. Bypass VBCOMP to GND with a 1.0µFceramic capacitor. VBCOMP is internally connected toa voltage comparator to allow the SPI master to detect(through an interrupt or checking a register bit) thepresence or loss of power on V\nBUS. VBCOMP does not\npower any internal circuitry inside the MAX3421E.VBCOMP is pulled down to ground with R\nIN(see\nElectrical Characteristics ).\nVBCOMP in Peripheral Mode\nVBCOMP is internally connected to a voltage compara-tor so that the SPI master can detect the presence orabsence of V\nBUS. According to the USB 2.0 specifica-\ntion, a self-powered peripheral must disconnect its1.5kΩ pullup resistor to D+ in the event that the host\nturns off bus power. The VBGATE bit in the USBCTL(R15) register provides the option for the MAX3421Einternal logic to automatically disconnect the 1.5k Ω\nresistor on D+. The VBGATE and CONNECT bits ofUSBCTL (R15), along with the VBCOMP comparatoroutput (VBUS_DET), control the pullup resistor betweenV\nCCand D+ as shown in Table 3 and the Functional\nDiagram. Note that if VBGATE = 1 and VBUS_DET = 0,\nthe pullup resistor is disconnected regardless of theCONNECT bit setting. If the device using theMAX3421E is bus powered (through a +3.3V regulatorconnected to V\nCC), the MAX3421E VBCOMP input can\nbe used as a general-purpose input. See the\nApplications Information section for more details about\nthis connection.VBCOMP in Host Mode\nWhen using the MAX3421E in host mode, the presenceof V\nBUSdoes not need to be detected. In this case, the\nVBCOMP input can be used as a general-purposeinput.\nD+ and D-\nThe internal USB full-/low-speed transceiver is broughtout to the bidirectional data pins D+ and D-. These pinsare ±15kV ESD protected. Connect D+ and D- to aUSB B connector through 33Ω ±1% series resistors.\nD+ and D- in Peripheral Mode\nIn peripheral mode, the D+ and D- pins connect to aUSB B connector through series resistors. A switchable1.5kΩ pullup resistor is internally connected to D+.\nD+ and D- in Host Mode\nIn host mode, the D+ and D- pins connect to a USB Aconnector through series resistors. Switchable 15k Ω\npulldown resistors are internally connected to D+ andD-. The DPPULLDN and DMPULLDN bits in the MODE(R27) register control the connection between D+ andD- to GND. For host operation, set these bits to 1 toenable the pulldown resistors. A host interrupt bit calledCONNIRQ alerts the SPI master when a peripheral isattached or detached.\nXI and XO\nXI and XO connect an external 12MHz crystal to theinternal oscillator circuit. XI is the crystal oscillatorinput, and XO is the crystal oscillator output. Connectone side of a 12MHz ±0.25% parallel resonant crystalto XI, and connect XO to the other side. Connect loadcapacitors (20pF max) to ground on both XI and XO. XIcan also be driven with an external 12MHz ±0.25%clock. If driving XI with an external clock, leave XOunconnected. The external clock must meet the voltagecharacteristics depicted in the \nElectrical Character-\nistics table. Internal logic is single-edge triggered. The\nexternal clock should have a nominal 50% duty cycle.Table 3. Internal Pullup Resistor Control\nin Peripheral Mode\nCONNECT VBGATE VBUS_DET PULLUP\n0 X X Not Connected\n1 0 X Connected\n1 1 0 Not Connected\n1 1 1 Connected\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n17 Maxim IntegratedRES\nDrive RES low to put the MAX3421E into a chip reset. A\nchip reset sets all registers to their default states,\nexcept for PINCTL (R17), USBCTL (R15), and SPI logic.All FIFO contents are unknown during chip reset. Bringthe MAX3421E out of chip reset by driving RES high.\nThe RES pulse width can be as short as 200ns. See the\nDevice Reset section for a description of the resets\navailable on the MAX3421E.\nINT\nThe MAX3421E INT output pin signals when a USBevent occurs that requires the attention of the SPI mas-ter. INT can also be configured to assert when any ofthe general-purpose inputs (GPIN0–GPIN7) are activat-ed (see the \nGPIN7–GPIN0 section for more details).\nThe SPI master must set the IE bit in the CPUCTL (R16)register to activate INT. When the IE bit is cleared, INTis inactive (open for level mode, high for negative edge,low for positive edge). INT is inactive upon power-up orafter a chip reset (IE = 0).\nThe INT pin can be a push-pull or open-drain output.\nSet the INTLEVEL bit of the PINCTL (R17) register highto program the INT output pin to be an active-low levelopen-drain output. An external pullup resistor to V\nLis\nrequired for this setting. In level mode, the MAX3421Edrives INT low when any of the interrupt flags are set. Ifmultiple interrupts are pending, INT goes inactive onlywhen the SPI master clears the last active interruptrequest bit (Figure 12). The POSINT bit of the PINCTL(R17) register has no effect on INT in level mode.\nClear the INTLEVEL bit to program INT to be an edge\nactive push-pull output. The active edge is programma-ble using the POSINT bit of the PINCTL (R17) register.In edge mode, the MAX3421E produces an edge refer-enced to V\nLany time an interrupt request is activated,\nor when an interrupt request is cleared and others arepending (Figure 12). Set the POSINT bit in the PINCTL(R17) register to make INT active high, and clear thePOSINT bit to make INT active low. The PULSEWID1and PULSEWID0 bits in the CPUCTL (R16) registercontrol the pulse width of INT in edge mode as shownin Table 4.\nGPIN7–GPIN0 \nThe SPI master samples GPIN3–GPIN0 states by read-ing bit 7 through bit 4 of the IOPINS1 (R20) register.GPIN7–GPIN4 states are sampled by reading bit 7through bit 4 of the IOPINS2 (R21) register. Writing tothese bits has no effect. \nThree registers, operational in both peripheral and host\nmode, control eight interrupt requests from theGPIN7–GPIN0 inputs. The GPINIRQ (R22) register con-tains the interrupt request flags for the eight GPINinputs. The GPINIEN (R23) register contains individualinterrupt enable bits for the eight GPIN interrupts. TheGPINPOL (R24) register controls the edge polarity forthe eight GPIN interrupts. The eight GPIN interrupts areadded into the MAX3421E interrupt system and appearon the INT output pin if enabled and asserted. It is alsopossible to separate the GPIN interrupts and make themavailable on the GPX output pin by setting SEPIRQ = 1.This provides lower latency interrupt service since thesource of the interrupt on the GPX output is known, andonly the GPINIRQ register needs to be checked todetermine the interrupt source. Note that the GPINPOLbits control the edge sensitivity of the GPIN transitionsas they set an internal “interrupt pending” flip-flop, notthe INT output pin. The INT pin output characteristicsare determined by the INTLEVEL and POSINT registerbits, as in the MAX3420E. If the GPX pin is configuredas the GPIN INT pin, its output characteristics are thesame as programmed for the INT pin.Table 4. Pulse Width of INT Output\nConfigured by PULSEWID1 andPULSEWID0\nPULSEWID1 PULSEWID0 INT PULSE WIDTH (µs)\n0 0 10.6\n0 1 5.3\n1 0 2.6\n1 1 1.3CLEAR\nFIRST IRQ,\nSECOND\nIRQ STILL \nACTIVE  SECOND\nIRQ\nACTIVE FIRST IRQ\nACTIVE CLEAR\nIRQSINGLE\nIRQ, \nINTLEVEL = 1\nPOSINT = X\nINTLEVEL = 0\nPOSINT = 0\nINTLEVEL = 0\nPOSINT = 1CLEAR\nLAST\nPENDING\nIRQ  \n(1)(2)INT\nINT\nINT\n(1) WIDTH DETERMINED BY TIME TAKEN TO CLEAR THE IRQ.\n(2) WIDTH DETERMINED BY PULSEWID1 AND PULSEWID0 BITS IN CPUCTL (R16) REGISTER.\nFigure 12. Behavior of the INT Pin for Different INTLEVEL and\nPOSINT Bit Settings\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n18 Maxim IntegratedGPOUT7–GPOUT0\nThe SPI master controls the GPOUT3–GPOUT0 states\nby writing to bit 3 through bit 0 of the IOPINS1 (R20)register. GPOUT7–GPOUT4 states are controlled bywriting to bit 3 through bit 0 of the IOPINS2 (R21) regis-ter. GPOUT7–GPOUT0 logic levels are referenced tothe voltage on V\nL. As shown in Figure 13, reading the\nstate of a GPOUT7–GPOUT0 bit returns the state of theinternal register bit, not the actual pin state. This is use-ful for doing read-modify-write operations to an outputpin (such as blinking an LED), since the load on theoutput pin does not affect the register logic state.\nGPX\nGPX is a push-pull output with a 4-way multiplexer thatselects its output signal. The logic level on GPX is refer-enced to V\nL. The SPI master writes to the GPXB and\nGPXA bits of PINCTL (R17) register to select one of fiveinternal signals as depicted in Table 5.\n•OPERATE: This signal goes high when the\nMAX3421E is able to operate after a power-up or\nRES reset. OPERATE is active when the RES input\nis high and the internal power-on-reset (POR) isnot asserted. OPERATE is the default GPX output.\n•VBUS_DET: VBUS_DET is the VBCOMP comparator\noutput. This allows the user to directly monitor theV\nBUSstatus.\n•BUSACT: USB BUS activity signal (active high).\nThis signal is active whenever there is traffic onthe USB bus. The BUSACT signal is set whenevera SYNC field is detected. BUSACT goes low duringbus reset or after 32-bit times of J-state.REGISTER BITGPOUT\nWRITE\nGPOUT\nREADGPOUT\nPIN\nFigure 13. Behavior of Read and Write Operations on\nGPOUT3–GPOUT0\nFULL-SPEED\nTIME FRAME\n1msFULL-SPEED\nTIME FRAME\n1ms\nSOFUSB\nPACKETS\nGPXSOF SOF\n~50%\nFigure 14. GPX Output in SOF Mode\nSPI\nCONTROLLER\nSPI\nCONTROLLER\nMAX3421EMAX3421EMOSI\nMISO\nMOSIMISO\nFDUPSPI = 0 (DEFAULT)FDUPSPI = 1\nFigure 15. MAX3421E SPI Data Pins for Full-Duplex (Top) and\nHalf-Duplex (Bottom) OperationTable 5. GPX Output State Due to GPXB\nand GPXA Bits\nGPXB GPXA GPX PIN OUTPUT\n0 0 OPERATE (Default State)\n0 1 VBUS_DET\n1 0 BUSACT/INIRQ*\n1 1 SOF\n*If SEPIRQ = 1.\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n19 Maxim Integrated•INIRQ: When the SEPIRQ bit of the MODE \n(R27) register is set high, the BUSACT signal is\nremoved from the INT output and GPX is used asan IRQ output pin dedicated to GPIN interrupts if GPX[B:A] = 10. In this mode, GPIN interruptsappear only on the GPX pin, and do not appear onthe INT output pin.\n•SOF: A square wave with a positive edge that \nindicates the USB start-of-frame (Figure 14).\nMOSI (Master-Out, Slave-In) and \nMISO (Master-In, Slave-Out)\nThe SPI data pins MOSI and MISO operate differentlydepending on the setting of a register bit called FDUPSPI(full-duplex SPI). Figure 15 shows the two configurationsaccording to the FDUPSPI bit setting.\nIn full-duplex mode (FDUPSPI = 1), the MOSI and MISO\npins are separate, and the MISO pin drives only when SS\nis low. In this mode, the first eight SCLK edges (after SS=\n0) clock the command byte into the MAX3421E on MOSI,and 8 USB status bits are clocked out of the MAX3421Eon MISO. For an SPI write cycle, any bytes following thecommand byte are clocked into the MAX3421E on MOSI,and zeros are clocked out on MISO. For an SPI readcycle, any bytes following the command byte are clockedout of the MAX3421E on MISO and the data on MOSI isignored. At the conclusion of the SPI cycle ( SS= 1), the\nMISO output tri-states.\nIn half-duplex mode, the MOSI pin is a bidirectional pin\nand the MISO pin is tri-stated. This saves a pin in the SPIinterface. Because of the shared data pin, this modedoes not offer the 8 USB status bits (Figures 6 and 7) asthe command byte is clocked into the MAX3421E. TheMISO pin can be left unconnected in half-duplex mode.\nSCLK (Serial Clock)\nThe SPI master provides the MAX3421E SCLK signal toclock the SPI interface. SCLK has no low-frequency limit,and can be as high as 26MHz. The MAX3421E changesits output data (MISO) on the falling edge of SCLK andsamples input data (MOSI) on the rising edge of SCLK.The MAX3421E ignores SCLK transitions when SSis\nhigh. The inactive level of SCLK may be low or high,depending on the SPI operating mode (Figure 16).\nSS(Slave Select)\nThe MAX3421E SPI interface is active only when SS is\nlow. When SS is high, the MAX3421E tri-states the SPI\noutput pin and resets the internal MAX3421E SPI logic.If SSgoes high before a complete byte is clocked in,\nthe byte-in-progress is discarded. The SPI master canterminate an SPI cycle after clocking in the first 8 bits(the command byte). This feature can be used in a full-duplex system to retrieve the USB status bits (Figure 6and 7) without sending or receiving SPI data.\nApplications Information\nSPI Interface\nThe MAX3421E operates as an SPI slave device. A reg-ister access consists of the SPI master first writing anSPI command byte, followed by reading or writing thecontents of the addressed register (see the \nRegister\nDescription section for more details). All SPI transfers\nare MSB first. The external SPI master provides a clocksignal to the MAX3421E SCLK input. This clock fre-quency can be between DC and 26MHz. Bit transfersSS\nMISO\nMOSISCLK\nMODE 0,0\nSCLK\nMODE 1,1SPI MODE 0,0 OR 1,1\n*MSB OF NEXT BYTE IN BURST MODE (SS REMAINS LOW)Q7 Q6 Q5 Q4 Q3\nD7 D6 D5 D4 D3 D2 D1 D0 *Q2 Q1 Q0 *\nFigure 16. SPI Clocking Modes\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n20 Maxim Integratedoccur on the positive edge of SCLK. The MAX3421E\ncounts bits and divides them into bytes. If fewer than 8bits are clocked into the MAX3421E when SSgoes\nhigh, the MAX3421E discards the partial byte. \nThe MAX3421E SPI interface operates without adjust-\nment in either SPI mode (CPOL = 0, CPHA = 0) or(CPOL = 1, CPHA = 1). No mode bit is required toselect between the two modes since the interface usesthe rising edge of the clock in both modes. The twoclocking modes are illustrated in Figure 16. Note thatthe inactive SCLK value is different for the two modes.Figure 16 illustrates the full-duplex mode, where data issimultaneously clocked into and out of the MAX3421E.\nSPI Half- and Full-Duplex Operation\nThe MAX3421E can be programmed to operate in half-duplex (a bidirectional data pin) or full-duplex (onedata-in and one data-out pin) mode. The SPI mastersets a register bit called FDUPSPI (full-duplex SPI) to 1for full-duplex, and 0 for half-duplex operation. Half-duplex is the power-on default.\nFull-Duplex Operation\nWhen the SPI master sets FDUPSPI = 1, the SPI inter-face uses separate data pins, MOSI and MISO to trans-fer data. Because of the separate data pins, bits canbe simultaneously clocked into and out of theMAX3421E. The MAX3421E makes use of this featureby clocking out 8 USB status bits as the command byteis clocked in. Figure 17 shows the status bits clockedout in peripheral mode and Figure 18 shows the statusbits clocked out host mode. \nReading from the SPI Slave Interface (MISO)\nThe SPI master reads data from the MAX3421E slaveinterface using the following steps:\n1) When SSis high, the MAX3421E is unselected and\ntri-states the MISO output.\n2) After driving SCLK to its inactive state, the SPI master\nselects the MAX3421E by driving SS low. The\nMAX3421E turns on its MISO output buffer and places\nthe first data bit (Q7) on the MISO output (Figure 16).\n3) The SPI master simultaneously clocks the com-\nmand byte into the MAX3421E MOSI pin, and USBstatus bits out of the MAX3421E MISO pin on therising edges of the SCLK it supplies. TheMAX3421E changes its MISO output data on thefalling edges of SCLK.\n4) After eight clock cycles, the master can drive SS\nhigh to deselect the MAX3421E, causing it to tri-state its MISO output. The falling edge of the clockputs the MSB of the next data byte in the sequenceon the MISO output (Figure 16).\n5) By keeping SS low, the master clocks register data\nbytes out of the MAX3421E by continuing to supplySCLK pulses (burst mode). The master terminatesthe transfer by driving SS high. The master must\nensure that SCLK is in its inactive state at thebeginning of the next access (when it drives SS\nlow). In full-duplex mode, the MAX3421E ignoresdata on MOSI while clocking data out on MISO.\nWriting to the SPI Slave Interface (MOSI)\nThe SPI master writes data to the MAX3421E slaveinterface through the following steps:\n1) The SPI master sets the clock to its inactive state.\nWhile SS is high, the master can drive the MOSI input.\n2) The SPI master selects the MAX3421E by driving\nSSlow and placing the first data bit to write on the\nMOSI input.\n3) The SPI master simultaneously clocks the com-\nmand byte into the MAX3421E and USB status bits\nout of the MAX3421E MISO pin on the rising edgesof the SCLK it supplies. The SPI master changes itsMOSI input data on the falling edges of SCLK.\n4) After eight clock cycles, the master can drive SS\nhigh to deselect the MAX3421E.\n5) By keeping SS low, the master clocks data bytes\ninto the MAX3421E by continuing to supply SCLKpulses (burst mode). The master terminates thetransfer by driving SS high. The master must ensure\nthat SCLK is inactive at the beginning of the nextaccess (when it drives SS low). In full-duplex mode,\nthe MAX3421E outputs USB status bits on MISOduring the first 8 bits (the command byte), and sub-sequently outputs zeros on MISO as the SPI masterclocks bytes into MOSI.\nHalf-Duplex Operation\nThe MAX3421E is put into half-duplex mode at power-on, or when the SPI master clears the FDUPSPI bit. Inhalf-duplex mode, the MAX3421E tri-states its MISO pinand makes the MOSI pin bidirectional, saving a pin inthe SPI interface. The MISO pin can be left unconnect-ed in half-duplex operation.\nBecause of the single data pin, the USB status bits\navailable in full-duplex mode are not available as theSPI master clocks in the command byte. In half-duplexmode these status bits are accessed in the normal way,as register bits. \nThe SPI master must operate the MOSI pin as bidirec-\ntional. It accesses a MAX3421E register as follows:\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n21 Maxim Integrated1) The SPI master sets the clock to its inactive state.\nWhile SSis high, the master can drive the MOSI pin\nto any value.\n2) The SPI master selects the MAX3421E by driving\nSSlow and placing the first data bit (MSB) to write\non the MOSI input.\n3) The SPI master turns on its output driver and clocks\nthe command byte into the MAX3421E on the rising\nedges of the SCLK it supplies. The SPI masterchanges its MOSI data on the falling edges of SCLK.\n4) After eight clock cycles, the master can drive SS\nhigh to deselect the MAX3421E.5) To write SPI data, the SPI master keeps its output\ndriver on and clocks subsequent bytes into theMOSI pin. To read SPI data, after the eighth clockcycle the SPI master tri-states its output driver andbegins clocking in data bytes from the MOSI pin.\n6) The SPI master terminates the SPI cycle by return-\ning SS high.\nFigures 10 and 11 show timing diagrams for full- andhalf-duplex operation.\nUSB Serial-Interface Engine\nThe serial-interface engine (SIE) does most of thedetailed work required by USB protocol:SS\nMISO\nMOSISCLKSPI MODE 0,0 (CPOL = 0, CPHA = 0)\nSUSPIRQ URESIRQ SUDAVIRQ IN3BAVIRQ IN2BAVIRQ\nREG4 REG3 REG2 REG1 REG0 0 DIR ACKSTATOUT1DAVIRQ OUT0DAVIRQ IN0BAVIRQ X\nFigure 17. SPI Port in Full-Duplex Mode (Peripheral Mode)\nSS\nMISO\nMOSISCLKSPI MODE 0,0 (CPOL = 0, CPHA = 0)\nHXFRDNIRQ FRAMEIRQ CONNIRQ SUSDNIRQ SNDBAVIRQ\nREG4 REG3 REG2 REG1 REG0 0 DIR ACKSTAT*RCVDAVIRQ RSMREQIRQ BUSEVENTIRQ X\n*ACKSTAT BIT NOT USED\nFigure 18. SPI Port in Full-Duplex Mode (Host Mode)\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n22 Maxim Integrated• USB packet PID detection and checking\n• CRC check and generation• Automatic retries in case of errors• USB packet generation• NRZI data encoding and decoding• Bit stuffing and unstuffing• USB error detection• USB bus reset, suspend, and wake-up detection• USB suspend/resume signaling• Automatic flow control (NAK)\nPLL\nAn internal PLL multiplies the 12MHz oscillator signal\nby four to produce an internal 48MHz clock. When thechip is powered down, the oscillator is turned off toconserve power. When repowered, the oscillator andPLL require time to stabilize and lock. The OSCOKIRQinterrupt bit is used to indicate to the SPI master thatthe clocking system is stable and ready for operation.\nThe oscillator and PLL can be turned off by setting the\nPWRDOWN bit in the USBCTL (R15) register (see the\nSuspend section).\nPower Management\nAccording to USB rev. 2.0 specification, when a USBhost stops sending traffic for at least 3ms to a peripher-al, the peripheral must enter a power-down state calledSUSPEND. Once suspended, the peripheral must haveenough of its internal logic active to recognize when thehost resumes signaling, or if enabled for remote wake-up, that the SPI master wishes to signal a resumeevent. The following sections titled \nSuspend and\nWakeup and USB Resume describe how the SPI mas-\nter coordinates with the MAX3421E to accomplish thispower management.\nSuspend\nAfter 3ms of USB bus inactivity, a USB peripheral isrequired to enter the USB suspend state and draw nomore than 500µA of V\nBUScurrent. The suspend state is\nhandled differently depending on whether theMAX3421E is used as a host or as a peripheral.\nSuspend in Host Mode\nIn host mode, the MAX3421E suspends the bus by set-ting SOFKAEN = 0. This stops automatic generation ofthe 1ms frame signals (SOF for full speed, keep-alivefor low speed).Suspend in Peripheral Mode\nIn peripheral mode, after 3ms of USB bus inactivity, theMAX3421E sets the SUSPIRQ bit in the USBIRQ (R13)register and asserts the INT output, if SUSPIE = 1 andIE = 1. The SPI master must do any necessary power-saving housekeeping and then set the PWRDOWN bitin the USBCTL (R15) register. This instructs theMAX3421E to enter a power-down state, in which itdoes the following:\n• Stops the 12MHz oscillator• Keeps the INT output active (according to the mode\nset in the PINCTL (R17) register)\n• Monitors the USB D+ line for a low level• Monitors the SPI port for any trafficNote that the MAX3421E does not automatically enter a\npower-down state after 3ms of bus inactivity. Thisallows the SPI master to perform any preshutdowntasks before it requests the MAX3421E to enter thepower-down state by setting PWRDOWN = 1.\nWakeup and USB Resume\nWakeup and USB resume are handled differentlydepending on whether the MAX3421E is used as a hostor as a peripheral.\nWakeup and USB Resume in Host Mode\nAfter a host has suspended the bus by settingSOFKAEN = 0, it can resume bus traffic in two ways:\n1) The SPI master initiates a host resume operation by\nsetting the bit SIGRSM = 1. The MAX3421E asserts\nthe resume signaling for 20ms, and then asserts theBUSEVENTIRQ bit. The SPI master then setsSOFKAEN = 1 to generate the 1ms frame markersthat keep the peripheral alive.\n2) The host recognizes a remote wakeup signal from a\nperipheral. The MAX3421E has an interrupt bit for thispurpose called RSMREQIRQ (resume request IRQ).\nWakeup and USB Resume in Peripheral Mode\nThe MAX3421E can wake up in three ways while it is aperipheral in the power-down state:\n1) The SPI master clears the PWRDOWN bit in the\nUSBCTL (R15) register (this is also achieved by a\nchip reset).\n2) The SPI master signals a USB remote wakeup by\nsetting the SIGRWU bit in the USBCTL (R15) regis-ter. When SIGRWU = 1 the MAX3421E restarts theoscillator and waits for it to stabilize. After the oscil-lator stabilizes, the MAX3421E drives RESUME sig-naling (a 10ms K-state) on the bus. The MAX3421Etimes this interval to relieve the SPI master of havingto keep accurate time. The MAX3421E also ensures\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n23 Maxim Integratedthat the RESUME signal begins only after at least\n5ms of the bus idle state. When the MAX3421E fin-ishes its RESUME signaling, it sets the RWUDNIRQ(remote wake-up done interrupt request) interruptflag in the USBIRQ (R13) register. At this time theSPI master should clear the SIGRWU bit.\n3) The host resumes bus activity. To enable the\nMAX3421E to wake up from host signaling, the SPImaster sets the HOSCSTEN (host oscillator startenable) bit of the USBCTL (R15) register. While inthis mode, if the MAX3421E detects a 1 to 0 transi-tion on D+, the MAX3421E restarts the oscillator andwaits for it to stabilize.\nDevice Reset\nThe MAX3421E has three reset mechanisms:\n• Power-On Reset. This is the most inclusive reset \n(sets all internal register bits to a known state).\n• Chip Reset. The SPI master can assert a chip\nreset by setting the bit CHIPRES = 1, which has\nthe same effect as pulling the RES pin low. This\nreset clears only some register bits and leaves others alone.\n• USB Bus Reset. A USB bus reset is the least\ninclusive (clears the smallest number of bits).\nNote: A power-on or chip reset clears the HOST bit and\nputs the MAX3421E into peripheral mode.\nPower-On Reset\nAt power-on, all register bits except 3 are cleared. Thefollowing 3 bits are set to 1 to indicate that the IN FIFOsare available for loading by the SPI master (BAV =buffer available):\n• IN3BAVIRQ• IN2BAVIRQ• IN0BAVIRQ\nChip Reset\nPulling the RES pin low or setting CHIPRES = 1 clears\nmost of the bits that control USB operation, but keeps\nthe SPI and pin-control bits unchanged so the interfacebetween the SPI master and the MAX3421E is not dis-turbed. Specifically:\n• CHIPRES is unchanged. If the SPI master asserted\nthis reset by setting CHIPRES = 1, it removes the\nreset by writing CHIPRES = 0.\n• CONNECT is unchanged, keeping the device \nconnected if CONNECT = 1.\n• General-purpose outputs GPOUT7–GPOUT0\nare unchanged, preventing output glitches.• The GPX output selector (GPXB, GPXA) is\nunchanged.\n• The bits that control the SPI interface are\nunchanged: FDUPSPI, INTLEVEL, and POSINT.\n• The bits that control power-down and wakeup\nbehavior are unchanged: HOSCSTEN, PWRDOWN,and SIGRWU.\nAll other bits except the three noted in the \nPower-On\nReset section are cleared.\nNote: The IRQ and IE bits are cleared using this reset.\nThis means that firmware routines that enable interruptsshould be called after a reset of this type. GPOUT7–GPOUT0 are left unchanged during chip reset. Theyare only cleared by an internal POR.\nUSB Bus Reset in Peripheral Mode\nWhen the MAX3421E detects 21.33µs of SE0, it assertsthe URESIRQ bit, and clears certain bits. This reset isthe least inclusive of the three resets. It maintains thebit states listed in the \nPower-On Reset andChip Reset\nsections, plus it leaves the following bits in their previ-ous states:\n• EPFIFO registers are unchanged.• The GPOUT7–GPOUT0 bits are unchanged.• The IE bit is unchanged.• URESIE/IRQ and URESDNIE/IRQ are unchanged,\nallowing the SPI master to check the state of USB\nbus reset.\nThe EPFIFO registers are left in their pre-USB bus resetstates only for diagnostic purposes. Their values shouldbe considered invalid after a bus reset. The actual datain the FIFOs is never cleared.\nAs with the chip reset, most of the interrupt request and\ninterrupt enable bits are cleared, meaning that thedevice firmware must re-enable individual interruptsafter a bus reset. The exceptions are the interruptsassociated with the actual bus reset, allowing the SPImaster to detect the beginning and end of the host sig-naling USB bus reset.\nUSB Bus Reset in Host Mode\nAs a host, an SPI master instructs the MAX3421E togenerate a USB bus reset by setting the BUSRST bit inthe HCTL register (R29). The MAX3421E generates thecorrectly timed signal, and asserts the BUSEVENTIRQbit in the HIRQ register (R25) at completion. \nCrystal Selection\nThe MAX3421E requires a crystal with the followingspecifications:\nFrequency: 12MHz ±0.25%\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n24 Maxim IntegratedCLOAD : 18pF (max)\nCO: 7pF (max)\nDrive level: 200µW\nSeries resonance resistance: 60Ω (max)\nNote: Series resonance resistance is the resistance\nobserved when the resonator is in the series resonant\ncondition. This is a parameter often stated by quartz crys-tal vendors and is called R1. When a resonator is used inthe parallel resonant mode with an external load capaci-tance, as is the case with the MAX3421E oscillator circuit,the effective resistance is sometimes stated. This effec-tive resistance at the loaded frequency of oscillation is:\nR1 x ( 1 + (C\nO / CLOAD ))2\nFor typical C O and C LOAD values, the effective resis-\ntance can be greater than R1 by a factor of 2.\nMAX3421E in a Bus-Powered Peripheral\nApplication\nFigure 19 depicts the MAX3421E in a peripheral devicethat is powered by V\nBUS. This configuration is advanta-\ngeous because it requires no external power supply.V\nBUSis specified from 4.75V to 5.25V, requiring a 3.3V\nregulator to power the MAX3421E. This diagramassumes that the microprocessor is powered by 3.3Vas well, so the V\nLpin (logic-level reference voltage) is\nconnected to V CC. Therefore, the GPIOs (general-pur-\npose inputs/outputs) are referenced to 3.3V.\nUSB is a hot-plug system (V BUS is powered when the\ndevice is plugged in), so it is good design practice to\nuse a power-on reset circuit to provide a clean reset tothe system when the device is plugged in. TheMAX6349TL serves as an excellent USB regulator,since it has very low quiescent current and a POR cir-cuit built in.\nBecause this design is bus powered, it is not necessary\nto test for the presence of V\nBUS. In this case, the bus\nvoltage-detection input, VBCOMP, makes an excellentgeneral-purpose input. The VBCOMP input has two inter-rupts associated with it, VBUSIRQ and NOVBUSIRQ.These interrupts can detect both edges of any transitionson the VBCOMP input.\nThe configuration in Figure 19 shows the SPI interface\nusing the maximum number of SPI interface pins. Thedata pins, MOSI and MISO, are separate, and theMAX3421E supplies an interrupt signal through the INToutput pin to the µP to notify the µP when its attentionis required.MAX3421EVCC VLXI XO\nINT\nMOSI\nMISOSCLKRES\nD+\nD-D+D-\nVBCOMPSS0.1μF\nGNDV\nBUS33Ω\n33Ω1.0μF\nCERAMIC CXI CXO12MHz3.3V\nREGULATOR\nMAX6349TL\nμP\n8 8USB "B"\nCONNECTOR\nGND GPIN GPOUT4.7μF\nGPIOGPI\nFigure 19. MAX3421E in a Bus-Powered Peripheral Application\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n25 Maxim IntegratedMAX3421E in a Self-Powered Application\nFigure 20 shows a self-powered peripheral design in\nwhich the µP has its own power source. This is a com-mon configuration in battery-powered handhelddevices. Figure 20 also illustrates the SPI interfacingwith the minimum number of pins. This is achieved byusing a single bidirectional data line and no interruptpin connection. The MAX3421E register bit, FDUPSPI,configures the SPI interface for bidirectional operation.\nAlthough Figure 20 shows V\nL= VCC, if the microcon-\ntroller uses a different interface voltage (1.71V to 3.6V),\nthis reference voltage can be connected to V L. The\nFigure 20 circuit shows a connection from the MAX3421EGPX output to the microcontroller. GPX can be pro-grammed (see Table 5) to connect the output of the inter-nal V\nBUScomparator to the GPX output. This enables the\nmicroprocessor to detect a USB plug-in event even if theMAX3421E is put into its power-down state.\nThe V\nBUS detect input, VBCOMP, is an important\nMAX3421E feature. Because the µP is powered\nwhether the USB device is plugged in or not, it needssome way to detect a plug-in event. A comparatorinside the MAX3421E checks for a valid V\nBUS connec-\ntion on VBCOMP and provides a connect status bit tothe µP. Once connected, the µP can delay the logicalconnection to the USB bus to perform any required ini-tialization, and then connect by setting the CONNECTbit to 1 in the MAX3421E register USBCTL (R15). Thisconnects the internal 1.5kΩ resistor from D+ to 3.3V, to\nsignal the host that a device has been plugged in.\nIf a host turns off V\nBUS while the device is connected,\nthe USB rev. 2.0 specification requires that the device\nmust not power its 1.5kΩ pullup resistor connected to\nD+. The MAX3421E has two features to help servicethis event. First, the NOVBUSIRQ bit indicates the lossof V\nBUS. Second, the µP can set a bit called VBGATE\n(VBUSgate) to instruct the MAX3421E to disconnect the\npullup resistor anytime V BUS goes away, regardless of\nthe CONNECT bit setting.\nMAX3421E in a Host Application\nFigure 21 illustrates the MAX3421E operating as anembedded host. A host supplies V\nBUS power to a\nperipheral; therefore, this circuit requires an external 5Vsupply. A circuit that provides power to externaldevices should include power protection (theMAX4793, for example, which limits current from300mA to 400mA) to ensure that the circuit can contin-ue to operate if the plugged-in device causes an over-current condition. The FLAG indicator of the overcurrentswitch connects to one of the eight MAX3421E GPINMAX3421EVCC VL XI XO\nINT\nMOSI\nMISOSCLKRES\nD+\nD-D+D-\nVBCOMPSS0.1μF\nGNDV\nBUS33Ω\n33Ω1.0μF\nCERAMIC\n1.0μF\nCERAMICCXI CXO12MHz\nμP\n8 8USB "B"\nCONNECTOR\nGND GPIN GPOUT\nGPIOGPX\nN.C.\nN.C.+3.3V\nFigure 20. MAX3421E in a Self-Powered Peripheral Application\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n26 Maxim Integratedinputs, and the GPX pin is configured to serve as a sec-\nond MAX3421E interrupt pin that activates only when aGPIN pin changes state. One of the eight GPOUT pinsturns the V\nBUS switch on and off. Seven MAX3421E\nGPIN and GPOUT pins are available to the system.\nShort-Circuit Protection\nThe MAX3421E withstands V BUS shorts to D+ and D-\non the USB connector side of the 33Ω series resistors.\nESD Protection\nD+, D-, and VBCOMP possess extra protection againststatic electricity to protect the devices up to ±15kV. TheESD structures withstand high ESD in all operatingmodes: normal operation, suspend mode, and powereddown. VBCOMP and V\nCCrequire 1µF ceramic capacitors\nconnected to ground as close to the pins as possible. D+,D-, and VBCOMP provide protection to the following limits:\n•±15kV using the Human Body Model\n•±8kV using the Contact Discharge method specifiedin IEC 61000-4-2\n•±12kV using the IEC 61000-4-2 Air-Gap MethodESD Test Conditions\nESD performance depends on a variety of conditions.Contact Maxim for a reliability report that documentstest setup, test methodology, and test results.\nHuman Body Model\nFigure 22 shows the Human Body Model, and Figure 23shows the current waveform generated when dis-charged into a low impedance. This model consists ofa 100pF capacitor charged to the ESD voltage of inter-est, which then discharges into the test device througha 1.5kΩ resistor.\nIEC 61000-4-2\nThe IEC 61000-4-2 standard covers ESD testing andperformance of finished equipment. It does not specifi-cally refer to integrated circuits. The major differencebetween tests done using the Human Body Model andIEC 61000-4-2 is a higher peak current in IEC 61000-4-2, due to lower series resistance. Hence, the ESD with-stand voltage measured to IEC 61000-4-2 generally islower than that measured using the Human BodyModel. Figure 24 shows the IEC 61000-4-2 model. TheMAX3421EVCCVL\nINTMOSI\nMISOSCLK\nD+\nD-D+D-\nVBCOMPSS\nGNDV\nBUS33Ω\n33Ω5V SWITCH WITH\nCURRENT LIMIT\nAND OC DETECT\nμPUSB\n"A" CONNECTOR\nGND4.7μF5V\nXI XO\nCXI CXO\n12MHzOUT IN\nGPOUT GPINON FLAG3.3V\nREGULATOR\nWITH POR\n1.0μF\nCERAMIC0.1μF\nGPXVCC\nGNDINT1\nINT2RES\nFigure 21. MAX3421E in a Host Application\nMAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\n27 Maxim IntegratedContact Discharge method connects the probe to the\ndevice before the probe is charged. The Air-GapDischarge test involves approaching the device with acharged probe.\nFigure 23. Human Body Model Current WaveformIP 100%\n90%\n36.8%\ntRLTIME\ntDL\nCURRENT WAVEFORMPEAK-TO-PEAK RINGING\n(NOT DRAWN TO SCALE)Ir\n10%\n0\n0AMPERESFigure 22. Human Body ESD Test ModelsCHARGE-CURRENT-\nLIMIT RESISTORDISCHARGE\nRESISTANCE\nSTORAGECAPACITORCs\n100pFR\nC\n1MΩRD\n1.5kΩ\nHIGH- \nVOLTAGE\nDC\nSOURCEDEVICE\nUNDER\nTEST\nFigure 24. IEC 61000-4-2 ESD Test ModelCHARGE-CURRENT-\nLIMIT RESISTORDISCHARGE\nRESISTANCE\nSTORAGECAPACITORCs\n150pFR\nC\n50MΩ to 100MΩRD\n330Ω\nHIGH- \nVOLTAGE\nDC\nSOURCEDEVICE\nUNDER\nTEST\nChip Information\nPROCESS: BiCMOS\nPackage Information\nFor the latest package outline information and land patterns (foot-\nprints), go to www.maximintegrated.com/packages . Note that a\n“+”, “#”, or “-” in the package code indicates RoHS status only.\nPackage drawings may show a different suffix character, but thedrawing pertains to the package regardless of RoHS status.\nPACKAGE\nTYPEPACKAGE\nCODEOUTLINE NO.LAND\nPATTERN NO.\n32 TQFP H32+1 21-0110 90-0149\n32 TQFN-EP T3255+4 21-0140 90-0012\nMaxim Integrated cannot assume responsibility for use of any circuitry other than circuitry entirely embodied in a Maxim Integrated product. No circuit patent\nlicenses are implied. Maxim Integrated reserves the right to change the circuitry and specifications without notice at any time. The parametric values (min and\nmax limits) shown in the Electrical Characteristics table are guaranteed. Other parametric values quoted in this data sheet are provided for guidance.\n28________________________________Maxim Integrated  160 Rio Robles, San Jose, CA 95134 USA  1-408-601-1000\n© 2013 Maxim Integrated Products, Inc. Maxim Integrated and the Maxim Integrated logo are trademarks of Maxim Integrated Products, Inc.  MAX3421E\nUSB Peripheral/Host Controller\nwith SPI Interface\nRevision History\nREVISION\nNUMBERREVISION\nDATEDESCRIPTIONPAGES\nCHANGED\n3 7/07 Changes to pin description, addition of text 5, 25, 28–31\n4 7/13Updated lead-free packaging info, Pin Description, Register Tables , Absolute\nMaximum Ratings1, 6, 8, 9, 10\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n \n \n Maxim Integrated:   \n\xa0 MAX3421EEHJ+\xa0 MAX3421EETJ+\xa0 MAX3421EEHJ+T\xa0 MAX3421EETJ+T\n'}]
!==============================================================================!
### Component Summary: MAX3421EEHJ+

**Key Characteristics and Specifications:**

- **Voltage Ratings:**
  - VCC: 3.0V to 3.6V
  - VL: 1.4V to 3.6V

- **Current Ratings:**
  - VCC Supply Current (active): 45 mA (at 12 Mbps)
  - VCC Idle Current: 8.7 mA to 15 mA
  - VCC Suspend Current: 30 µA to 60 µA
  - VL Supply Current: 2.35 mA to 10 mA

- **Power Consumption:**
  - VCC Suspend Supply Current: 30 µA to 60 µA
  - VL Suspend Supply Current: 20 µA to 50 µA

- **Operating Temperature Range:**
  - -40°C to +85°C

- **Package Type:**
  - 32-pin TQFP (5mm x 5mm)
  - 32-pin TQFN (5mm x 5mm)

- **Special Features:**
  - Integrated USB transceiver with ±15kV ESD protection
  - Programmable 3- or 4-wire SPI interface operating up to 26 MHz
  - Internal level translators for interfacing with different logic levels
  - Eight general-purpose inputs and outputs
  - Intelligent USB Serial Interface Engine (SIE) for handling USB protocol details
  - Supports both USB peripheral and host modes

- **Moisture Sensitive Level (MSL):**
  - MSL Level: 1 (JEDEC J-STD-020E)

### Description of the Component:

The **MAX3421E** is a USB peripheral/host controller designed to facilitate USB communication in embedded systems. It integrates both digital logic and analog circuitry to support full-speed USB peripheral or host functionality compliant with USB specification revision 2.0. The device features a built-in USB transceiver that provides robust ESD protection and programmable connection management. The MAX3421E communicates with a microprocessor or DSP via a Serial Peripheral Interface (SPI), allowing for easy integration into various applications.

### Typical Applications:

The MAX3421E is commonly used in a variety of applications, including:

- **Embedded Systems:** To add USB host or peripheral capabilities to microcontrollers or DSPs.
- **Medical Devices:** For connecting USB peripherals like keyboards, mice, or other medical instruments.
- **Consumer Electronics:** Such as cameras, MP3 players, and PDAs for USB connectivity.
- **Industrial Automation:** In PLCs and set-top boxes for USB communication.
- **Custom USB Devices:** Enabling the development of unique USB-enabled products.

This component is particularly useful in scenarios where a microprocessor needs to interface with USB devices without the complexity of managing USB protocols directly, as the MAX3421E handles low-level USB signaling and protocol management.