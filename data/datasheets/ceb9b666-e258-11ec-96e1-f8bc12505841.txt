[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of AT89C51RC2-3CSUM production of MICROCHIP TECHNOLOGY from the text:Rev. 4180E–8051–10/06Features\n\x8180C52 Compatible\n– 8051 Pin and Instruction Compatible\n– Four 8-bit I/O Ports \n– Three 16-bit Timer/Counters– 256 Bytes Scratch Pad RAM– 9 Interrupt Sources with 4 Priority Levels– Dual Data Pointer\n\x81Variable Length MOVX for Slow RAM/Peripherals\n\x81ISP (In-system Programming) Using Standard VCC Power Supply\n\x81Boot ROM Contains Low Level Flash Programming Routines and a Default Serial Loader\n\x81High-speed Architecture\n– In Standard Mode: \n40 MHz (Vcc 2.7V to 5.5V, both Internal and external code execution)\n60 MHz (Vcc 4.5V to 5.5V and Internal Code execution only)\n– In X2 mode (6 Clocks/machine cycle) \n20 MHz (Vcc 2.7V to 5.5V, both Internal and external code execution)30 MHz (Vcc 4.5V to 5.5V and Internal Code execution only)\n– 16K/32K Bytes On-chip Flash Program/Data Memory– Byte and Page (128 Bytes) Erase and Write\n– 100K Write Cycles\n\x81On-chip 1024 Bytes Expanded RAM (XRAM)\n– Software Selectable Size (0, 256, 512, 768, 1024 Bytes)– 256 Bytes Selected at Reset for TS87C51RB2/RC2 Compatibility\n\x81Keyboard Interrupt Interface on Port P1\n\x81SPI Interface (Master/Slave Mode)\n\x818-bit Clock Prescaler\n\x81Improved X2 Mode with Independent Selection for CPU and Each Peripheral\n\x81Programmable Counter Array 5 Channels\n– High-speed Output\n– Compare/Capture\n– Pulse Width Modulator\n– Watchdog Timer Capabilities\n\x81Asynchronous Port Reset\n\x81Full Duplex Enhanced UART\n\x81Dedicated Baud Rate Generator for UART\n\x81Low EMI (Inhibit ALE)\n\x81Hardware Watchdog Timer (One-time Enabled with Reset-out)\n\x81Power Control Modes\n– Idle Mode\n– Power-down Mode– Power-off Flag\n\x81Power Supply: \n– 2.7 to 3.6 (3V Version)– 2.7 to 5.5V (5V Version)\n\x81Temperature Ranges: Commercial (0 to +70 °C) and Industrial (-40 °C to +85 °C)\n\x81Packages: PDIL40, PLCC44, VQFP44\nDescription\nThe AT89C51RB2/RC2 is a high-performance Flash version of the 80C51 8-bit micro-\ncontrollers. It contains a 16K or 32K Bytes Flash memory block for program and data.\nThe Flash memory can be programmed either in parallel mode or in serial mode with\nthe ISP capability or with software. The programming voltage is internally generatedfrom the standard VCC pin.8-bit \nMicrocontroller with 16K/\n32K Bytes Flash\nAT89C51RB2\nAT89C51RC2\n2 AT89C51RB2/RC2\n4180E–8051–10/06The AT89C51RB2/RC2 retains all features of the 80C52 with 256 Bytes of internal\nRAM, a 9-source 4-level interrupt controller and three timer/counters.\nIn addition, the AT89C51RB2/RC2 has a Programmable Counter Array, an XRAM of\n1024 Bytes, a Hardware Watchdog Timer, a Keyboard Interface, an SPI Interface, amore versatile serial channel that facilitates multiprocessor communication (EUART)and a speed improvement mechanism (X2 mode). \nThe Pinout is the standard 40/44 pins of the C52.The fully static design reduces system power consumption of the AT89C51RB2/RC2 by\nallowing it to bring the clock frequency down to any value, even DC, without loss of data. \nThe AT89C51RB2/RC2 has 2 software-selectable modes of reduced activity and 8-bit\nclock prescaler for further reduction in power consumption. In Idle mode, the CPU is fro-zen while the peripherals and the interrupt system are still operating. In power-downmode, the RAM is saved and all other functions are inoperative.\nThe added features of the AT89C51RB2/RC2 make it more powerful for applications\nthat need pulse width modulation, high speed I/O and counting capabilities such asalarms, motor control, corded phones, and smart card readers.\nTable 1.  Memory Size\nPart Number Flash (Bytes) XRAM (Bytes)TOTAL RAM \n(Bytes) I/O\nAT89C51RB2 16K 1024 1280 32\nAT89C51RC2 32K 1024 1280 32\nAT89C51IC2 32K 1024 1280 32\n3AT89C51RB2/RC2\n4180E–8051–10/06Block Diagram\nFigure 1.  Block Diagram\nNotes: 1. Alternate function of Port 1.\n2. Alternate function of Port 3.Timer 0 INTRAM\n256x8T0\nT1RxD\nTxD\nWRRDEAPSENALE/XTAL2XTAL1\nEUART\nCPU\nTimer 1\nINT1Ctrl INT0(2)\n(2)C51 \nCORE\n(2) (2) (2) (2)Port 0\nP0Port 1 Port 2 Port 3Parallel I/O Ports & Ext. Bus\nP1\nP2\nP3XRAM\n1Kx8\nIB-busPCARESETPROG\nWatch\nDog\nPCAECIVssVCC\n(2)(2) (1) (1)\nTimer2 T2EX\nT2\n(1) (1)\nFlash\n32Kx8 or\n16Kx8\nKey\nBoardROM\n2Kx8Boot\n+\nBRG\nSPIMISO\nMOSI\nSCK(1) (1) (1)\nSS(1)\n4 AT89C51RB2/RC2\n4180E–8051–10/06SFR Mapping The Special Function Registers (SFRs) of the AT89C51RB2/RC2 fall into the following\ncategories:\n\x81 C51 core registers: ACC, B, DPH, DPL, PSW, SP\n\x81 I/O port registers: P0, P1, P2, P3 \n\x81 Timer registers: T2CON, T2MOD, TCON, TH0, TH1, TH2, TMOD, TL0, TL1, TL2, \nRCAP2L, RCAP2H\n\x81 Serial I/O port registers: SADDR, SADEN, SBUF, SCON\n\x81 PCA (Programmable Counter Array) registers: CCON, CCAPMx, CL, CH, CCAPxH, \nCCAPxL (x: 0 to 4)\n\x81 Power and clock control registers: PCON\n\x81 Hardware Watchdog Timer registers: WDTRST, WDTPRG\n\x81 Interrupt system registers: IEN0, IPL0, IPH0, IEN1, IPL1, IPH1\n\x81 Keyboard Interface registers: KBE, KBF, KBLS\n\x81 SPI registers: SPCON, SPSTR, SPDAT\n\x81 BRG (Baud Rate Generator) registers: BRL, BDRCON\n\x81 Flash register: FCON\n\x81 Clock Prescaler register: CKRL\n\x81 Others: AUXR, AUXR1, CKCON0, CKCON1\n5AT89C51RB2/RC2\n4180E–8051–10/06Table 2.  C51 Core SFRs\nM n e m o n i c A d d N a m e 76543210\nACC E0h Accumulator\nB F0h B Register\nPSW D0h Program Status Word CY AC F0 RS1 RS0 OV F1 P\nSP 81h Stack Pointer\nDPL 82h Data Pointer Low Byte\nDPH 83h Data Pointer High Byte\nTable 3.  System Management SFRs\nM n e m o n i c A d d N a m e 76543210\nPCON 87h Power Control SMOD1 SMOD0 - POF GF1 GF0 PD IDL\nAUXR 8Eh Auxiliary Register 0 DPU - M0 XRS2 XRS1 XRS0 EXTRAM AO\nAUXR1 A2h Auxiliary Register 1 - - ENBOOT - GF3 0 - DPS\nCKRL 97h Clock Reload Register CKRL7 CKRL6 CKRL5 CKRL4 CKRL3 CKRL2 CKRL1 CKRL0\nCKCKON0 8Fh Clock Control Register 0 - WDTX2 PCAX2 SIX2 T2X2 T1X2 T0X2 X2C K C K O N 1 A F h C l o c k  C o n t r o l  R e g i s t e r  1 ------- S P I X 2\nTable 4.  Interrupt SFRs \nM n e m o n i c A d d N a m e 76543210\nIEN0 A8h Interrupt Enable Control 0 EA EC ET2 ES ET1 EX1 ET0 EX0I E N 1 B 1 h I n t e r r u p t  E n a b l e  C o n t r o l  1 ----- ESPI EI2C KBD\nIPH0 B7h Interrupt Priority Control High 0 - PPCH PT2H PHS PT1H PX1H PT0H PX0H\nIPL0 B8h Interrupt Priority Control Low 0 - PPCL PT2L PLS PT1L PX1L PT0L PX0L\nI P H 1 B 3 h I n t e r r u p t  P r i o r i t y  C o n t r o l  H i g h  1 ----- S P I H I E 2 C H K B D H\nI P L 1 B 2 h I n t e r r u p t  P r i o r i t y  C o n t r o l  L o w  1 ----- S P I L I E 2 C L K B D L\nTable 5.  Port SFRs\nM n e m o n i c A d d N a m e 76543210\nP0 80h 8-bit Port 0P1 90h 8-bit Port 1P2 A0h 8-bit Port 2P3 B0h 8-bit Port 3\n6 AT89C51RB2/RC2\n4180E–8051–10/06Table 6.  Timer SFRs\nM n e m o n i c A d d N a m e 76543210\nTCON 88h Timer/Counter 0 and 1 Control TF1 TR1 TF0 TR0 IE1 IT1 IE0 IT0\nTMOD 89h Timer/Counter 0 and 1 Modes GATE1 C/T1# M11 M01 GATE0 C/T0# M10 M00\nTL0 8Ah Timer/Counter 0 Low Byte\nTH0 8Ch Timer/Counter 0 High Byte\nTL1 8Bh Timer/Counter 1 Low Byte\nTH1 8Dh Timer/Counter 1 High Byte\nWDTRST A6h Watchdog Timer Reset\nW D T P R G A 7 h W a t c h d o g  T i m e r  P r o g r a m ----- W T O 2 W T O 1 W T O 0\nT2CON C8h Timer/Counter 2 control TF2 EXF2 RCLK TCLK EXEN2 TR2 C/T2# CP/RL2#\nT 2 M O D C 9 h T i m e r / C o u n t e r  2  M o d e ------ T 2 O E D C E N\nRCAP2H CBhTimer/Counter 2 Reload/Capture \nHigh Byte\nRCAP2L CAhTimer/Counter 2 Reload/Capture \nLow Byte\nTH2 CDh Timer/Counter 2 High Byte\nTL2 CCh Timer/Counter 2 Low Byte\nTable 7.  PCA SFRs\nMnemo-\nnic A d d N a m e 76543210\nCCON D8h PCA Timer/Counter Control CF CR - CCF4 CCF3 CCF2 CCF1 CCF0CMOD D9h PCA Timer/Counter Mode CIDL WDTE - - - CPS1 CPS0 ECFCL E9h PCA Timer/Counter Low ByteCH F9h PCA Timer/Counter High ByteCCAPM0\nCCAPM1CCAPM2CCAPM3CCAPM4DAh\nDBhDChDDhDEhPCA Timer/Counter Mode 0\nPCA Timer/Counter Mode 1PCA Timer/Counter Mode 2PCA Timer/Counter Mode 3PCA Timer/Counter Mode 4-ECOM0\nECOM1ECOM2ECOM3ECOM4CAPP0\nCAPP1CAPP2CAPP3CAPP4CAPN0\nCAPN1CAPN2CAPN3CAPN4MAT0\nMAT1MAT2MAT3MAT4TOG0\nTOG1TOG2TOG3TOG4PWM0\nPWM1PWM2PWM3PWM4ECCF0\nECCF1ECCF2ECCF3ECCF4\nCCAP0H\nCCAP1HCCAP2HCCAP3HCCAP4HFAh\nFBhFChFDhFEhPCA Compare Capture Module 0 H\nPCA Compare Capture Module 1 HPCA Compare Capture Module 2 HPCA Compare Capture Module 3 HPCA Compare Capture Module 4 HCCAP0H7\nCCAP1H7CCAP2H7CCAP3H7CCAP4H7CCAP0H6\nCCAP1H6CCAP2H6CCAP3H6CCAP4H6CCAP0H5\nCCAP1H5CCAP2H5CCAP3H5CCAP4H5CCAP0H4\nCCAP1H4CCAP2H4CCAP3H4CCAP4H4CCAP0H3\nCCAP1H3CCAP2H3CCAP3H3CCAP4H3CCAP0H2\nCCAP1H2CCAP2H2CCAP3H2CCAP4H2CCAP0H1\nCCAP1H1CCAP2H1CCAP3H1CCAP4H1CCAP0H0\nCCAP1H0CCAP2H0CCAP3H0CCAP4H0\nCCAP0L\nCCAP1LCCAP2LCCAP3LCCAP4LEAh\nEBhEChEDhEEhPCA Compare Capture Module 0 L\nPCA Compare Capture Module 1 LPCA Compare Capture Module 2 LPCA Compare Capture Module 3 LPCA Compare Capture Module 4 LCCAP0L7\nCCAP1L7CCAP2L7CCAP3L7CCAP4L7CCAP0L6\nCCAP1L6CCAP2L6CCAP3L6CCAP4L6CCAP0L5\nCCAP1L5CCAP2L5CCAP3L5CCAP4L5CCAP0L4\nCCAP1L4CCAP2L4CCAP3L4CCAP4L4CCAP0L3\nCCAP1L3CCAP2L3CCAP3L3CCAP4L3CCAP0L2\nCCAP1L2CCAP2L2CCAP3L2CCAP4L2CCAP0L1\nCCAP1L1CCAP2L1CCAP3L1CCAP4L1CCAP0L0\nCCAP1L0CCAP2L0CCAP3L0CCAP4L0\n7AT89C51RB2/RC2\n4180E–8051–10/06Table 8.  Serial I/O Port SFRs\nM n e m o n i c A d d N a m e 76543210\nSCON 98h Serial Control FE/SM0 SM1 SM2 REN TB8 RB8 TI RI\nSBUF 99h Serial Data Buffer\nSADEN B9h Slave Address Mask\nSADDR A9h Slave Address\nBDRCON 9Bh Baud Rate Control BRR TBCK RBCK SPD SRC\nBRL 9Ah Baud Rate Reload\nTable 9.  SPI Controller SFRs\nM n e m o n i c A d d N a m e 76543210\nSPCON C3h SPI Control SPR2 SPEN SSDIS MSTR CPOL CPHA SPR1 SPR0\nSPSTA C4h SPI Status SPIF WCOL SSERR MODF ----\nSPDAT C5h SPI Data SPD7 SPD6 SPD5 SPD4 SPD3 SPD2 SPD1 SPD0\nTable 10.  Keyboard Interface SFRs\nM n e m o n i c A d d N a m e 76543210\nKBLS 9Ch Keyboard Level Selector KBLS7 KBLS6 KBLS5 KBLS4 KBLS3 KBLS2 KBLS1 KBLS0\nKBE 9Dh Keyboard Input Enable KBE7 KBE6 KBE5 KBE4 KBE3 KBE2 KBE1 KBE0KBF 9Eh Keyboard Flag Register KBF7 KBF6 KBF5 KBF4 KBF3 KBF2 KBF1 KBF0\n8 AT89C51RB2/RC2\n4180E–8051–10/06Table 11 shows all SFRs with their address and their reset value.  \nTable 11.  SFR Mapping\nBit\naddressable Non Bit addressable\n0/8 1/9  2/A 3/B  4/C 5/D 6/E  7/F\nF8hCH\n0000 0000CCAP0H\nXXXXCCAP1H\nXXXXCCAPL2H\nXXXXCCAPL3H\nXXXXCCAPL4H\nXXXXFFh\nF0hB\n0000 0000F7h\nE8hCL\n0000 0000CCAP0L\nXXXX XXXXCCAP1L\nXXXX XXXXCCAPL2L\nXXXX XXXXCCAPL3L\nXXXX XXXXCCAPL4L\nXXXX XXXXEFh\nE0hACC\n0000 0000E7h\nD8hCCON\n00X0 0000CMOD\n00XX X000CCAPM0\nX000 0000CCAPM1\nX000 0000CCAPM2\nX000 0000CCAPM3\nX000 0000CCAPM4\nX000 0000DFh\nD0hPSW\n0000 0000FCON (1) \nXXXX 0000\n1. FCON access is reserved for the Flash API and ISP software.\nReserved D7h\nC8hT2CON\n0000 0000T2MOD\nXXXX XX00RCAP2L\n0000 0000RCAP2H\n0000 0000TL2\n0000 0000TH2\n0000 0000CFh\nC0hSPCON\n0001 0100SPSTA\n0000 0000SPDAT\nXXXX XXXXC7h\nB8h IPL0\nX000 000SADEN\n0000 0000BFh\nB0hP3\n1111 1111IEN1\nXXXXX 000IPL1\nXXXXX000IPH1\nXXXX X000IPH0\nX000 0000B7h\nA8hIEN0\n0000 0000SADDR\n0000 0000CKCON1\nXXXX XXX0AFh\nA0hP2\n1111 1111AUXR1\nXXXXX0X0WDTRST\nXXXX XXXXWDTPRG\nXXXX X000A7h\n98h SCON\n0000 0000SBUF\nXXXX XXXXBRL\n0000 0000BDRCON\nXXX0 0000KBLS\n0000 0000KBE\n0000 0000KBF\n0000 00009Fh\n90hP1\n1111 1111CKRL\n1111 111197h\n88h TCON\n0000 0000TMOD\n0000 0000TL0\n0000 0000TL1\n0000 0000TH0\n0000 0000TH1\n0000 0000AUXR\nXX0X 0000CKCON0\n0000 00008Fh\n80hP0\n1111 1111SP\n0000 0111DPL\n0000 0000DPH\n0000 0000PCON\n00X1 000087h\n0/8 1/9  2/A 3/B  4/C 5/D 6/E  7/F\n9AT89C51RB2/RC2\n4180E–8051–10/06Pin Configurations\nFigure 2.  Pin Configurations\nP1.7CEX4/MOSI P1.4/CEX1\nRST\nP3.0/RxD\nP3.1/TxD P1.3CEX0  1 \nP1.5/CEX2/MISO\nP1.6/CEX3/SCK\nP3.2/INT0\nP3.3/INT1\nP3.4/T0\nP3.5/T1\nP3.6/WR\nP3.7/RD\nXTAL2\nXTAL1\nVSS P2.0/A8P2.1/A 9\nP2.2/A 10\nP2.3/A 11P2.4/A 12P0.4/AD4\nP0.6/AD6P0.5/AD5\nP0.7/AD7\nALE/PROG\nPSENEA\nP2.7/A15\nP2.5/A13\nP2.6/A14P1.0/T2\nP1.2/ECIP1.1/T2EX/SS VCC \n P0.0/AD0 \n P0.1/AD1 \n P0.2/AD2 \n P0.3/AD3 \n PDIL402 \n 3\n 4 \n 5\n6 \n7\n8 \n 9\n 10 \n 11\n12 \n13\n14\n 15 16\n 17\n18\n19\n20 40\n39\n38\n37\n36\n35\n34\n33\n32\n 31\n 30\n29\n28\n27\n 26\n25\n 24\n23\n22\n21\n43 42 41 40 3944 38 37 36 35 34P1.4/CEX1\nP1.0/T2P1.1/T2EX/SSP1.3/CEX0\nP1.2/ECI\nNIC*\nVCC\nP0.0/AD0\nP0.2/AD2\nP0.3/AD3P0.1/AD1\nP0.4/AD4\nP0.6/AD6P0.5/AD5\nP0.7/AD7\nALE/PROG\nPSENEA\nNIC*\nP2.7/A15\nP2.5/A13P2.6/A14P1.5/CEX2/MISO\nP1.6/CEX3/SCK\nP1.7/CEX4/MOSI\nRST\nP3.0/RxD\nNIC*\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1\nP3.4/T0\nP3.5/T1\nP3.6/WR\nP3.7/RD\nXTAL2\nXTAL1\nVSS\nP2.0/A8\nP2.1/A9\nP2.2/A10\nP2.3/A11\nP2.4/A12NIC*12 13 17 161514 20 1918 2122      \n \n \n  \n 33\n32 \n 31\n 30 \n 29\n28 \n27\n26\n 25\n 24\n 23 VQFP44 1.4 1 \n2 \n 3\n 4 \n 5\n6 \n7\n8 \n 9\n 10 \n 1118 19 23 222120 26 2524 27 28 5  4  3  2  1  6 44 43 42 41 40P1.4/CEX1\nP1.0/T2P1.1/T2EX/SSP1.3/CEX0\nP1.2/ECI\nNIC*\nVCC\nP0.0/AD0\nP0.2/AD2P0.1/AD1\nP0.4/AD4\nP0.6/AD6P0.5/AD5\nP0.7/AD7\nALE/PROG\nPSENEA\nNIC*\nP2.7/A15\nP2.5/A13P2.6/A14P3.6/WR\nP3.7/RD\nXTAL2\nXTAL1\nVSS\nP2.0/A8\nP2.1/A9\nP2.2/A10\nP2.3/A11\nP2.4/A12P1.5/CEX2/MISO\nP1.6/CEX3/SCK\nP1.7/CEx4/MOSI\nRST\nP3.0/RxD\nNIC*\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1\nP3.4/T0\nP3.5/T1\nP0.3/AD3NIC*7\n8 \n 9\n 10 \n 11\n12 \n13\n14\n 15\n 16\n 1739\n38 \n 37\n 36 \n 35\n34 \n33\n32\n 31\n 30\n 29PLCC44\n*NIC:  No Internal Connection\n10 AT89C51RB2/RC2\n4180E–8051–10/06 \nTable 12.  Pin Description for 40 - 44 Pin Packages \nMnemonicPin Number\nType Name and Function DIL LCC VQFP44 1.4\nVSS 20 22 16 I Ground :  0V reference\nVCC 40 44 38 IPower Supply :  This is the power supply voltage for normal, idle and power-down \noperation\nP0.0 - P0.7 39 - 32 43 - 36 37 - 30 I/O Port 0 :  Port 0 is an open-drain, bi-directional I/O port. Port 0 pins that have 1s \nwritten to them float and can be used as high impedance inputs. Port 0 must be \npolarized to VCC or VSS in order to prevent any parasitic current consumption. Port 0 \nis also the multiplexed low-order address and data bus during access to external \nprogram and data memory. In this application, it uses strong internal pull-up when \nemitting 1s. Port 0 also inputs the code Bytes during Flash programming. External pull-ups are required during program verification during which P0 outputs the code \nBytes. \nP1.0 - P1.7 1 - 8 2 - 9 40 - 44\n1 - 3I/O Port 1 :  Port 1 is an 8-bit bi-directional I/O port with internal pull-ups. Port 1 pins that \nhave 1s written to them are pulled high by the internal pull-ups and can be used as inputs. As inputs, Port 1 pins that are externally pulled low will source current \nbecause of the internal pull-ups. Port 1 also receives the low-order address Byte \nduring memory programming and verification. \nAlternate functions for AT89C51RB2/RC2  Port 1 include:\n1 2 40 I/O P1.0 :  Input/Output\nI/O T2 (P1.0):  Timer/Counter 2 external count input/Clockout\n2 3 41 I/O P1.1:  Input/Output\nI T2EX:  Timer/Counter 2 Reload/Capture/Direction Control\nI SS\n:  SPI Slave Select\n3 4 42 I/O P1.2:  Input/Output\nI ECI:  External Clock for the PCA\n4 5 43 I/O P1.3:  Input/Output\nI/O CEX0:  Capture/Compare External I/O for PCA Module 0\n5 6 44 I/O P1.4:  Input/Output\nI/O CEX1:  Capture/Compare External I/O for PCA Module 1\n6 7 1 I/O P1.5:  Input/Output\nI/O CEX2:  Capture/Compare External I/O for PCA Module 2\nI/O MISO:  SPI Master Input Slave Output line\nWhen SPI is in master mode, MISO receives data from the slave peripheral. When \nSPI is in slave mode, MISO outputs data to the master controller. \n7 8 2 I/O P1.6 :  Input/Output\nI/O CEX3:  Capture/Compare External I/O for PCA Module 3\nI/O SCK:  SPI Serial Clock\nSCK outputs clock to the slave peripheral\n8 9 3 I/O P1.7 :  Input/Output:\n11AT89C51RB2/RC2\n4180E–8051–10/06I/O CEX4:  Capture/Compare External I/O for PCA Module 4\nP1.0 - P1.7 I/O MOSI :  SPI Master Output Slave Input line\nWhen SPI is in master mode, MOSI outputs data to the slave peripheral. When SPI \nis in slave mode, MOSI receives data from the master controller. \nXTAL1 19 21 15 ICrystal 1:  Input to the inverting oscillator amplifier and input to the internal clock \ngenerator circuits. \nXTAL2 18 20 14 O Crystal 2:  Output from the inverting oscillator amplifier\nP2.0 - P2.7 21 - 28 24 - 31 18 - 25 I/O Port 2 :  Port 2 is an 8-bit bi-directional I/O port with internal pull-ups. Port 2 pins that \nhave 1s written to them are pulled high by the internal pull-ups and can be used as inputs. As inputs, Port 2 pins that are externally pulled low will source current \nbecause of the internal pull-ups. Port 2 emits the high - order address Byte during \nfetches from external program memory and during accesses to external data memory that use 16-bit addresses (MOVX @DPTR). In this application, it uses \nstrong internal pull-ups emitting 1s. During accesses to external data memory that \nuse 8-bit addresses (MOVX @Ri), port 2 emits the contents of the P2 SFR. Some Port 2 pins receive the high order address bits during EPROM programming and \nverification:\nP2.0 to P2.5 for 16 KB devicesP2.0 to P2.6 for 32KB devices\nP3.0 - P3.7 10 - 17 11,\n13 - 195,\n7 - 13I/O Port 3:  Port 3 is an 8-bit bi-directional I/O port with internal pull-ups. Port 3 pins that \nhave 1s written to them are pulled high by the internal pull-ups and can be used as inputs. As inputs, Port 3 pins that are externally pulled low will source current \nbecause of the internal pull-ups. Port 3 also serves the special features of the \n80C51 family, as listed below. \n10 11 5 I RXD (P3.0):  Serial input port\n11 13 7 O TXD (P3.1):  Serial output port\n12 14 8 I INT0\n (P3.2):  External interrupt 0\n13 15 9 I INT1  (P3.3):  External interrupt 1\n14 16 10 I T0 (P3.4):  Timer 0 external input\n15 17 11 I T1 (P3.5):  Timer 1 external input\n16 18 12 O WR (P3.6):  External data memory write strobe\n17 19 13 O RD (P3.7):  External data memory read strobe\nRST 9 10 4 I/OReset:  A high on this pin for two machine cycles while the oscillator is running, \nresets the device. An internal diffused resistor to VSS permits a power-on reset using \nonly an external capacitor to VCC. This pin is an output when the hardware \nwatchdog forces a system reset. \nALE/PROG 30 33 27 O (I) Address Latch Enable/Program Pulse:  Output pulse for latching the low Byte of \nthe address during an access to external memory. In normal operation, ALE is \nemitted at a constant rate of 1/6 (1/3 in X2 mode) the oscillator frequency, and can \nbe used for external timing or clocking. Note that one ALE pulse is skipped during each access to external data memory. This pin is also the program pulse input \n(PROG\n) during Flash programming. ALE can be disabled by setting SFR’s AUXR. 0 \nbit. With this bit set, ALE will be inactive during internal fetches. Table 12.  Pin Description for 40 - 44 Pin Packages  (Continued)\nMnemonicPin Number\nType Name and Function DIL LCC VQFP44 1.4\n12 AT89C51RB2/RC2\n4180E–8051–10/06PSEN 29 32 26 O Program Strobe Enable:  The read strobe to external program memory. When \nexecuting code from the external program memory, PSEN  is activated twice each \nmachine cycle, except that two PSEN  activations are skipped during each access to \nexternal data memory. PSEN  is not activated during fetches from internal program \nmemory. \nEA 31 35 29 I External Access Enable:  EA must be externally held low to enable the device to \nfetch code from external program memory locations 0000H to FFFFH (RD). If \nsecurity level 1 is programmed, EA  will be internally latched on Reset. Table 12.  Pin Description for 40 - 44 Pin Packages  (Continued)\nMnemonicPin Number\nType Name and Function DIL LCC VQFP44 1.4\n13AT89C51RB2/RC2\n4180E–8051–10/06Port Types AT89C51RB2/RC2 I/O ports (P1, P2, P3) implement the quasi-bidirectional output that\nis common on the 80C51 and most of its derivatives. This output type can be used asboth an input and output without the need to reconfigure the port. This is possiblebecause when the port outputs a logic high, it is weakly driven, allowing an externaldevice to pull the pin low. When the pin is pulled low, it is driven strongly and able to sinka fairly large current. These features are somewhat similar to an open drain outputexcept that there are three pull-up transistors in the quasi-bidirectional output that servedifferent purposes. One of these pull-ups, called the "weak" pull-up, is turned on when-ever the port latch for the pin contains a logic 1. The weak pull-up sources a very smallcurrent that will pull the pin high if it is left floating. A second pull-up, called the "medium"pull-up, is turned on when the port latch for the pin contains a logic 1 and the pin itself isalso at a logic 1 level. This pull-up provides the primary source current for a quasi-bidi-rectional pin that is outputting a 1. If a pin that has a logic 1 on it is pulled low by anexternal device, the medium pull-up turns off, and only the weak pull-up remains on. Inorder to pull the pin low under these conditions, the external device has to sink enoughcurrent to overpower the medium pull-up and take the voltage on the port pin below itsinput threshold.\nThe third pull-up is referred to as the "strong" pull-up. This pull-up is used to speed up\nlow-to-high transitions on a quasi-bidirectional port pin when the port latch changes froma logic 0 to a logic 1. When this occurs, the strong pull-up turns on for a brief time, twoCPU clocks, in order to pull the port pin high quickly. Then it turns off again.\nThe DPU bit (bit 7 in AUXR register) allows to disable the permanent weak pull up of all\nports when latch data is logical 0. \nThe quasi-bidirectional port configuration is shown in Figure 3. \nFigure 3.  Quasi-Bidirectional Output\n2 CPU\nInputPinStrong Medium\nNWeakP\nClock Delay\nPort Latch\nDataData\nDPU\nAUXR.7PP\n14 AT89C51RB2/RC2\n4180E–8051–10/06Oscillator To optimize the power consumption and execution time needed for a specific task, an\ninternal, prescaler feature has been implemented between the oscillator and the CPUand peripherals. \nRegisters Table 13.  CKRL Register\nCKRL – Clock Reload Register (97h)\nReset Value = 1111 1111b\nNot bit addressable\nTable 14.  PCON Register\nPCON – Power Control Register (87h)\nReset Value = 00X1 0000b Not bit addressable765 4 321 0\nCKRL7 CKRL6 CKRL5 CKRL4 CKRL3 CKRL2 CKRL1 CKRL0\nBit Number Mnemonic Description \n7:0 CKRLClock Reload Register\nPrescaler value \n76543210\nSMOD1 SMOD0 - POF GF1 GF0 PD IDL\nBit Number Bit Mnemonic Description\n7S M O D 1Serial Port Mode bit 1\nSet to select double baud rate in mode 1, 2 or 3.\n6S M O D 0Serial Port Mode bit 0\nCleared to select SM0 bit in SCON register. \nSet to select FE bit in SCON register. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4P O FPower-off Flag\nCleared to recognize next reset type. \nSet by hardware when VCC rises from 0 to its nominal voltage. Can \nalso be set by software. \n3G F 1General-purpose Flag\nCleared by software for general-purpose usage. \nSet by software for general-purpose usage. \n2G F 0General-purpose Flag\nCleared by software for general-purpose usage. Set by software for general-purpose usage. \n1P DPower-down Mode bit\nCleared by hardware when reset occurs. \nSet to enter power-down mode. \n0I D LIdle Mode bit\nCleared by hardware when interrupt or reset occurs. \nSet to enter idle mode. \n15AT89C51RB2/RC2\n4180E–8051–10/06Functional Block \nDiagram\nFigure 4.  Functional Oscillator Block Diagram\nPrescaler Divider \x81 A hardware RESET puts the prescaler divider in the following state:\n\x81C K R L  =  F F h :   FCLK CPU = FCLK PERIPH = FOSC/2 (Standard C51 feature)\n\x81 Any value between FFh down to 00h can be written by software into CKRL register \nin order to divide frequency of the selected oscillator:\n\x81 CKRL = 00h:  minimum frequency \nFCLK CPU = FCLK PERIPH  = FOSC/1020 (Standard Mode)\nFCLK CPU = FCLK PERIPH  = FOSC/510 (X2 Mode)\n\x81 CKRL = FFh:  maximum frequency\nFCLK CPU  = FCLK PERIPH  = FOSC/2 (Standard Mode) \nFCLK CPU  = FCLK PERIPH  = FOSC (X2 Mode) \nFCLK CPU  and FCLK PERIPH\nIn X2 Mode, for CKRL<>0xFF:\nIn X1 Mode, for CKRL<>0xFF then:Xtal2Xtal1\nOsc\nCLK\nIdleCPU clockCKRLReload\n8-bit\nPrescaler-DividerReset\nPeripheral Clock:2\nX201FOSC\nCKCON0CLK\nPERIPH\nCPU \nCKRL = 0xFF?01\nFCPU F=CLKPERIPHFOSC\n2 255 CKRL – ()×-------------------------------------------- --- =\nFCPU F=CLKPERIPHFOSC\n4 255 CKRL – ()×-------------------------------------------- --- =\n16 AT89C51RB2/RC2\n4180E–8051–10/06Enhanced Features In comparison to the original 80C52, th e AT89C51RB2/RC2 implements some new fea-\ntures, which are :\n\x81 X2 option\n\x81 Dual Data Pointer\n\x81 Extended RAM\n\x81 Programmable Counter Array (PCA)\n\x81 Hardware Watchdog\n\x81 SPI interface\n\x81 4-level interrupt priority system\n\x81 power-off flag\n\x81 ONCE mode \n\x81 ALE disabling\n\x81 Some enhanced features are also located in the UART and the timer 2\nX2 Feature The AT89C51RB2/RC2 core needs only 6 clock periods per machine cycle. This feature\ncalled ‘X2’ provides the following advantages:  \n\x81 Divide frequency crystals by 2 (cheaper crystals) while keeping same CPU power. \n\x81 Save power consumption while keeping same CPU power (oscillator power saving). \n\x81 Save power consumption by dividing dynamically the operating frequency by 2 in \noperating and idle modes. \n\x81 Increase CPU power by 2 while keeping same crystal frequency. \nIn order to keep the original C51 compatibility, a divider by 2 is inserted between the\nXTAL1 signal and the main clock input of the core (phase generator). This divider maybe disabled by software. \nDescription The clock for the whole circuit and peripherals is first divided by 2 before being used by\nthe CPU core and the peripherals. \nThis allows any cyclic ratio to be accepted on XTAL1 input. In X2 mode, as this divider is\nbypassed, the signals on XTAL1 must have a cyclic ratio between 40 to 60%. \nFigure 5 shows the clock generation block diagram. X2 bit is validated on the rising edge\nof the XTAL1 ÷2 to avoid glitches when switching from X2 to X1 mode. Figure 6 shows\nthe switching mode waveforms. \nFigure 5.  Clock Generation Diagram\nXTAL1  2\nCKCON0X2 8 bit PrescalerFOSC\nFXTAL0\n1XTAL1:2\nFCLK CPU\nFCLK PERIPHCKRL\n17AT89C51RB2/RC2\n4180E–8051–10/06Figure 6.  Mode Switching Waveforms\nThe X2 bit in the CKCON0 register (see Table 15) allows a switch from 12 clock periods\nper instruction to 6 clock periods and vice versa. At reset, the speed is set according toX2 bit of Hardware Security Byte (HSB). By default, Standard mode is active. Setting theX2 bit activates the X2 feature (X2 mode). \nThe T0X2, T1X2, T2X2, UARTX2, PCAX2, and WDX2 bits in the CKCON0 register\n(Table 15) and SPIX2 bit in the CKCON1 register (see Table 16) allow a switch fromstandard peripheral speed (12 clock periods per peripheral clock cycle) to fast periph-eral speed (6 clock periods per peripheral clock cycle). These bits are active only in X2mode. XTAL1:2 XTAL1\nCPU ClockX2 Bit\nX2 Mode x1 Mode X1 ModeFOSC\n18 AT89C51RB2/RC2\n4180E–8051–10/06Table 15.  CKCON0 Register\nCKCON0 - Clock Control Register (8Fh)\nReset Value = 0000 000’HSB. X2’b (see Table 65 “Hardware Security Byte”)\nNot bit addressable76543210\n- WDX2 PCAX2 SIX2 T2X2 T1X2 T0X2 X2\nBit \nNumberBit     \nMnemonic Description\n7 Reserved\n6W D X 2Watchdog Clock  \n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).\nCleared to select 6 clock periods per peripheral clock cycle. \nSet to select 12 clock periods per peripheral clock cycle. \n5P C A X 2Programmable Counter Array Clock  \n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).\nCleared to select 6 clock periods per peripheral clock cycle. Set to select 12 clock \nperiods per peripheral clock cycle. \n4S I X 2Enhanced UART Clock (Mode 0 and 2)  \n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).\nCleared to select 6 clock periods per peripheral clock cycle. Set to select 12 clock \nperiods per peripheral clock cycle. \n3T 2 X 2Timer 2 Clock  \n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).\nCleared to select 6 clock periods per peripheral clock cycle.\nSet to select 12 clock periods per peripheral clock cycle. \n2T 1 X 2Timer 1 Clock  \n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).Cleared to select 6 clock periods per peripheral clock cycle. Set to select 12 clock \nperiods per peripheral clock cycle.\n1T 0 X 2Timer0 Clock\n(This control bit is validated when the CPU clock X2 is set; when X2 is low, this bit \nhas no effect).Cleared to select 6 clock periods per peripheral clock cycle. Set to select 12 clock \nperiods per peripheral clock cycle.\n0X 2CPU Clock  \nCleared to select 12 clock periods per machine cycle (STD, X1 mode) for CPU \nand all the peripherals. Set to select 6 clock periods per machine cycle (X2 mode) and to enable the individual peripherals’X2’ bits. Programmed by \nhardware after Power-up regarding Hardware Security Byte (HSB), Default \nsetting, X2 is cleared.\n19AT89C51RB2/RC2\n4180E–8051–10/06Table 16.  CKCON1 Register\nCKCON1 - Clock Control Register (AFh)\nReset Value = XXXX XXX0b\nNot bit addressable76543210\n------- S P I X 2\nBit \nNumberBit     \nMnemonic Description\n7- Reserved\n6- Reserved\n5- Reserved\n4- Reserved\n3- Reserved\n2- Reserved\n1- Reserved\n0S P I X 2SPI (This control bit is validated when the CPU clock X2 is set; when X2 is low, \nthis bit has no effect).\nClear to select 6 clock periods per peripheral clock cycle. \nSet to select 12 clock periods per peripheral clock cycle. \n20 AT89C51RB2/RC2\n4180E–8051–10/06Dual Data Pointer \nRegister (DPTR)The additional data pointer can be used to speed up code execution and reduce code\nsize. \nThe dual DPTR structure is a way by which the chip will specify the address of an exter-\nnal data memory location. There are two 16-bit DPTR registers that address the externalmemory, and a single bit called DPS = AUXR1.0 (see Table 17) that allows the programcode to switch between them (see Figure 7). \nFigure 7.  Use of Dual Pointer\nExternal Data Memory\nAUXR1(A2H)DPS\nDPH(83H) DPL(82H)0 7\nDPTR0DPTR1\n21AT89C51RB2/RC2\n4180E–8051–10/06Table 17.  AUXR1 register\nAUXR1- Auxiliary Register 1(0A2h)\nReset Value =   XXXX XX0X0b\nNot bit addressable\nNote: 1. Bit 2 stuck at 0; this allows using INC AUXR1 to toggle DPS without changing GF3.\nASSEMBLY LANGUAGE \n; Block move using dual data pointers \n; Modifies DPTR0, DPTR1, A and PSW ; note:  DPS exits opposite of entry state \n; unless an extra INC AUXR1 is added \n; 00A2  AUXR1 EQU 0A2H \n; \n0000 909000MOV DPTR,#SOURCE ; address of SOURCE 0003 05A2 INC AUXR1 ; switch data pointers \n0005 90A000 MOV DPTR,#DEST ; address of DEST \n0008 LOOP:  0008 05A2 INC AUXR1 ; switch data pointers \n000A E0 MOVX A,@DPTR ; get a Byte from SOURCE \n000B A3 INC DPTR ; increment SOURCE address 000C 05A2 INC AUXR1 ; switch data pointers \n000E F0 MOVX @DPTR,A ; write the Byte to DEST \n000F A3 INC DPTR ; increment DEST address 0010 70F6JNZ LOOP ; check for 0 terminator \n0012 05A2 INC AUXR1 ; (optional) restore DPS 76543210\n- - ENBOOT - GF3 0 - DPS\nBit \nNumberBit     \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n5 ENBOOTEnable Boot Flash\nCleared to disable boot ROM. \nSet to map the boot ROM between F800h - 0FFFFh. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n3G F 3 This bit is a general-purpose user flag.\n(1)\n20 Always Cleared \n1-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n0D P SData Pointer Selection\nCleared to select DPTR0.\nSet to select DPTR1.\n22 AT89C51RB2/RC2\n4180E–8051–10/06INC is a short (2 Bytes) and fast (12 clocks) way to manipulate the DPS bit in the\nAUXR1 SFR. However, note that the INC instruction does not directly force the DPS bitto a particular state, but simply toggles it. In simple routines, such as the block moveexample, only the fact that DPS is toggled in the proper sequence matters, not its actualvalue. In other words, the block move routine works the same whether DPS is \'0\' or \'1\'on entry. Observe that without the last instru ction (INC AUXR1), the routine will exit with\nDPS in the opposite state. \n23AT89C51RB2/RC2\n4180E–8051–10/06Expanded RAM \n(XRAM)The AT89C51RB2/RC2 provides additional bytes of random access memory (RAM)\nspace for increased data parameter handling and high-level language usage. \nAT89C51RB2/RC2 devices have expanded RAM in external data space; maximum size\nand location are described in Table 18.\nTable 18.  Expanded RAM\nThe AT89C51RB2/RC2 has internal data memory that is mapped into four separate\nsegments. \nThe four segments are:  \n1. The Lower 128 Bytes of RAM (addresses 00h to 7Fh) are directly and indirectly \naddressable. \n2. The Upper 128 Bytes of RAM (addresses 80h to FFh) are indirectly addressable \nonly. \n3. The Special Function Registers, SFRs, (addresses 80h to FFh) are directly \naddressable only. \n4. The expanded RAM Bytes are indirectly accessed by MOVX instructions, and \nwith the EXTRAM bit cleared in the AUXR register (see Table 18).\nThe lower 128 Bytes can be accessed by either direct or indirect addressing. The Upper\n128 Bytes can be accessed by indirect addressing only. The Upper 128 Bytes occupythe same address space as the SFR. That means they have the same address, but arephysically separate from SFR space. \nFigure 8.  Internal and External Data Memory Address\nWhen an instruction accesses an internal location above address 7Fh, the CPU knows\nwhether the access is to the upper 128 Bytes of data RAM or to SFR space by theaddressing mode used in the instruction. \n\x81 Instructions that use direct addressing access SFR space. For example:  \nMOV 0A0H, # data, accesses the SFR at location 0A0h (which is P2). Part Number XRAM SizeAddress\nStart End\nAT89C51RB2/RC2 1024 00h 3FFh\nXRAMUpper\n128 Bytes\nInternal\nRAM\nLower\n128 Bytes\nInternal\nRAMSpecial\nFunction\nRegister\n80h 80h\n000FFh or 3FFh 0FFh\n000FFh\nExternal\nData\nMemory\n000000FFh up to 03FFh0FFFFh\nIndirect AccessesDirect Accesses\nDirect or Indirect\nAccesses7Fh\n24 AT89C51RB2/RC2\n4180E–8051–10/06\x81 Instructions that use indirect addressing access the Upper 128 Bytes of data RAM. \nFor example:  MOV @R0, # data where R0 contains 0A0h, accesses the data Byte at address 0A0h, rather than P2 (whose address is 0A0h). \n\x81 The XRAM Bytes can be accessed by indirect addressing, with EXTRAM bit cleared \nand MOVX instructions. This part of memory that is physically located on-chip, logically occupies the first Bytes of external data memory. The bits XRS0 and XRS1 are used to hide a part of the available XRAM as explained in Table 18. This can be useful if external peripherals are mapped at  addresses already used by the internal \nXRAM. \n\x81 With EXTRAM = 0,\n the XRAM is indirectly addressed, using the MOVX instruction in \ncombination with any of the registers R0, R1 of the selected bank or DPTR. An access to XRAM will not affect ports P0, P2, P3.6 (WR) and P3.7 (RD). For example, with EXTRAM = 0, MOVX @R0, # data where R0 contains 0A0H, accesses the XRAM at address 0A0H rather than external memory. An access to external data memory locations higher than the accessible size of the XRAM will be performed with the MOVX DPTR instructions in the same way as in the standard 80C51, with P0 and P2 as data/address busses, and P3.6 and P3.7 as write and read timing signals. Accesses to XRAM above 0FFH can only be done by the use of DPTR. \n\x81 With EXTRAM = 1\n, MOVX @RI and MOVX @DPTR will be similar to the standard \n80C51. MOVX @ Ri will provide an eight-bit address multiplexed with data on Port0 and any output port pins can be used to output higher order address bits. This is to provide the external paging capability. MOVX @DPTR will generate a sixteen-bit address. Port2 outputs the high-order eight address bits (the contents of DPH) while Port0 multiplexes the low-order eight address bits (DPL) with data. MOVX @ RI and MOVX @DPTR will generate either read or write signals on P3.6 (WR\n) and P3.7 \n(RD). \nThe stack pointer (SP) may be located anywhere in the 256 Bytes RAM (lower and\nupper RAM) internal data memory. The stack may not be located in the XRAM. \nThe M0 bit allows to stretch the XRAM timings; if M0 is set, the read and write pulses\nare extended from 6 to 30 clock periods. This is useful to access external slowperipherals. \n25AT89C51RB2/RC2\n4180E–8051–10/06Registers Table 19.  AUXR Register\nAUXR - Auxiliary Register (8Eh)\nReset Value = XX0X 00’HSB. XRAM’0b (see Table 65)\nNot bit addressable76543210\nDPU - M0 - XRS1 XRS0 EXTRAM AO\nBit \nNumberBit     \nMnemonic Description\n7D P UDisable Weak Pull-up\nCleared to activate the permanent weak pull up when latch data is logical 1Set to disactive the weak pull-up (reduce power consumption)\n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n5M 0Pulse Length\nCleared to stretch MOVX control:  the RD\n and the WR  pulse length is 6 clock \nperiods (default). \nSet to stretch MOVX control:  the RD  and the WR  pulse length is 30 clock \nperiods. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n3X R S 1 XRAM Size\nXRS1  XRS0 XRAM size\n 0 0 256 Bytes (default) 0 1 512 Bytes 1 0 768 Bytes 1 1 1024 Bytes2X R S 0\n1 EXTRAMEXTRAM Bit\nCleared to access internal XRAM using movx @ Ri/ @ DPTR. \nSet to access external memory. Programmed by hardware after Power-up regarding Hardware Security Byte \n(HSB), default setting, XRAM selected. \n0A OALE Output Bit\nCleared, ALE is emitted at a constant rate of 1/6 the oscillator frequency (or 1/3 if X2 mode is used). (default) Set, ALE is active only during a MOVX or MOVC \ninstruction is used. \n26 AT89C51RB2/RC2\n4180E–8051–10/06Timer 2 The Timer 2 in the AT89C51RB2/RC2 is the standard C52 Timer 2. \nIt is a 16-bit timer/counter:  the count is maintained by two eight-bit timer registers, TH2\nand TL2 are cascaded. It is controlled by T2CON (Table 20) and T2MOD (Table 21)registers. Timer 2 operation is similar to Timer 0 and Timer 1C/T2\n selects FOSC/12 (timer\noperation) or external pin T2 (counter operation) as the timer clock input. Setting TR2allows TL2 to increment by the selected input. \nTimer 2 has 3 operating modes:  capture, autoreload and Baud Rate Generator. These\nmodes are selected by the combination of RCLK, TCLK and CP/RL2\n (T2CON). \nsee the Atmel 8-bit Microcontroller Hardware description for the description of Capture\nand Baud Rate Generator Modes. \nTimer 2 includes the following enhancements:\n\x81 Auto-reload mode with up or down counter\n\x81 Programmable clock-output\nAuto-reload Mode The auto-reload mode configures Timer 2 as a 16-bit timer or event counter with auto-\nmatic reload. If DCEN bit in T2MOD is cleared, Timer 2 behaves as in 80C52 (see theAtmel C51 Microcontroller Hardware description). If DCEN bit is set, Timer 2 acts as anUp/down timer/counter as shown in Figure 9. In this mode the T2EX pin controls thedirection of count. \nWhen T2EX is high, Timer 2 counts up. Timer overflow occurs at FFFFh which sets the\nTF2 flag and generates an interrupt request. The overflow also causes the 16-bit valuein RCAP2H and RCAP2L registers to be loaded into the timer registers TH2 and TL2.\nWhen T2EX is low, Timer 2 counts down. Timer underflow occurs when the count in the\ntimer registers TH2 and TL2 equals the value stored in RCAP2H and RCAP2L registers.The underflow sets TF2 flag and reloads FFFFh into the timer registers. \nThe EXF2 bit toggles when Timer 2 overflows or underflows according to the direction of\nthe count. EXF2 does not generate any interrupt. This bit can be used to provide 17-bitresolution. \n27AT89C51RB2/RC2\n4180E–8051–10/06Figure 9.  Auto-Reload Mode Up/Down Counter (DCEN  =  1)\nProgrammable Clock-out \nModeIn the clock-out mode, Timer 2 operates as a 50% duty-cycle, programmable clock gen-\nerator (see Figure 10). The input clock increments TL2 at frequency FCLK PERIPH /2. The\ntimer repeatedly counts to overflow from a loaded value. At overflow, the contents ofRCAP2H and RCAP2L registers are loaded into TH2 and TL2. In this mode, Timer 2overflows do not generate interrupts. The formula gives the clock-out frequency as afunction of the system oscillator frequency and the value in the RCAP2H and RCAP2Lregisters:\nFor a 16 MHz system clock, Timer 2 has a programmable frequency range of 61 Hz \n(F\nCLK PERIPH /216) to 4 MHz (FCLK PERIPH /4). The generated clock signal is brought out to\nT2 pin (P1.0). \nTimer 2 is programmed for the clock-out mode as follows:\n\x81 Set T2OE bit in T2MOD register. \n\x81 Clear C/T2  bit in T2CON register. \n\x81 Determine the 16-bit reload value from the formula and enter it in RCAP2H/RCAP2L \nregisters. \n\x81 Enter a 16-bit initial value in timer registers TH2/TL2. It can be the same as the \nreload value or a different one depending on the application. \n\x81 To start the timer, set TR2 run control bit in T2CON register. \nIt is possible to use Timer 2 as a baud rate generator and a clock generator simulta-\nneously. For this configuration, the baud rates and clock frequencies are notindependent since both functions use the values in the RCAP2H and RCAP2L registers. (DOWN COUNTING RELOAD VALUE)C/T2\nTF2TR2T2\nEXF2\nTH2\n(8-bit)TL2\n(8-bit)\nRCAP2H\n(8-bit)RCAP2L\n(8-bit)FFh\n(8-bit)FFh\n(8-bit)\nTOGGLE\n(UP COUNTING RELOAD VALUE)TIMER 2\nINTERRUP TFCLK PERIPH 0\n1\nT2CON T2CON\nT2CON\nT2CONT2EX:\nif DCEN = 1, 1 = UPif DCEN = 1, 0 = DOWNif DCEN = 0, up countin\ng:6  \nClock O –utFrequencyFCLKPERIPH\n4 65536 RCAP 2HR C A P 2L ⁄) – (×------------- --------------- --------------- --------------- ---------------- --------------- --- - =\n28 AT89C51RB2/RC2\n4180E–8051–10/06Figure 10.  Clock-Out Mode C/T2  = 0\n:6\nEXF2TR2\nOVER-\nFLOW\nT2EXTH2\n(8-bit)TL2\n(8-bit)\nTIMER 2RCAP2H\n(8-bit)RCAP2L\n(8-bit)\nT2OET2FCLK PERIPH\nT2CON\nT2CON\nT2CON T2MOD \nINTERRUPTQDToggle\nEXEN2\n29AT89C51RB2/RC2\n4180E–8051–10/06Registers Table 20.  T2CON Register\nT2CON – Timer 2 Control Register (C8h)\nReset Value = 0000 0000b\nBit addressable76543210\nTF2 EXF2 RCLK TCLK EXEN2 TR2 C/T2# CP/RL2#\nBit \nNumberBit        \nMnemonic Description\n7 TF2Timer 2 Overflow Flag\nMust be cleared by software. \nSet by hardware on Timer 2 overflow, if RCLK = 0 and TCLK = 0.\n6E X F 2Timer 2 External Flag\nSet when a capture or a reload is caused by a negative transition on T2EX pin if EXEN2 = 1.\nWhen set, causes the CPU to vector to Timer 2 interrupt routine when Timer 2 \ninterrupt is enabled. Must be cleared by software. EXF2 doesn’t cause an interrupt in Up/down \ncounter mode (DCEN = 1).\n5 RCLKReceive Clock Bit\nCleared to use timer 1 overflow as receive clock for serial port in mode 1 or 3.Set to use Timer 2 overflow as receive clock for serial port in mode 1 or 3.\n4T C L KTransmit Clock Bit\nCleared to use timer 1 overflow as transmit clock for serial port in mode 1 or 3.\nSet to use Timer 2 overflow as transmit clock for serial port in mode 1 or 3.\n3 EXEN2Timer 2 External Enable Bit\nCleared to ignore events on T2EX pin for Timer 2 operation. \nSet to cause a capture or reload when a negative transition on T2EX pin is \ndetected, if Timer 2 is not used to clock the serial port. \n2T R 2Timer 2 Run Control Bit\nCleared to turn off Timer 2.\nSet to turn on Timer 2.\n1C / T 2 #Timer/Counter 2 Select Bit\nCleared for timer operation (input from internal clock system:  F\nCLK PERIPH ). \nSet for counter operation (input from T2 input pin, falling edge trigger). Must be 0 \nfor clock out mode. \n0C P / R L 2 #Timer 2 Capture/Reload Bit\nIf RCLK = 1 or TCLK = 1, CP/RL2# is ignored and timer is forced to auto-reload on Timer 2 overflow. \nCleared to auto-reload on Timer 2 overflows or negative transitions on T2EX pin \nif EXEN2 = 1.Set to capture on negative transitions on T2EX pin if EXEN2 = 1.\n30 AT89C51RB2/RC2\n4180E–8051–10/06Table 21.  T2MOD Register\nT2MOD – Timer 2 Mode Control Register (C9h)\nReset Value = XXXX XX00b\nNot bit addressable76543210\n------ T 2 O E D C E N\nBit \nNumberBit       \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n3-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n2-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n1T 2 O ETimer 2 Output Enable Bitt\nCleared to program P1.0/T2 as clock input or I/O port. \nSet to program P1.0/T2 as clock output. \n0 DCENDown Counter Enable Bit\nCleared to disable Timer 2 as up/down counter. \nSet to enable Timer 2 as up/down counter. \n31AT89C51RB2/RC2\n4180E–8051–10/06Programmable \nCounter Array (PCA)The PCA provides more timing capabilities with less CPU intervention than the standard\ntimer/counters. Its advantages include reduced software overhead and improved accu-racy. The PCA consists of a dedicated timer/counter which serves as the time base foran array of five compare/capture Modules. Its clock input can be programmed to countany one of the following signals:\n\x81 Peripheral clock frequency (F\nCLK PERIPH ) ÷ 6 \n\x81 Peripheral clock frequency (FCLK PERIPH ) ÷ 2 \n\x81 Timer 0 overflow\n\x81 External input on ECI (P1.2)\nEach compare/capture Modules can be programmed in any one of the following modes:  \n\x81 Rising and/or falling edge capture \n\x81 Software timer\n\x81 High-speed output\n\x81 Pulse width modulator \nModule 4 can also be programmed as a watchdog timer (see Section "PCA Watchdog\nTimer", page 42). \nWhen the compare/capture Modules are programmed in the capture mode, software\ntimer, or high speed output mode, an interrupt can be generated when the Module exe-cutes its function. All five Modules plus the PCA timer overflow share one interruptvector. \nThe PCA timer/counter and compare/capture modules share Port 1 for external I/O.\nThese pins are listed below. If one or several bits in the port are not used for the PCA,they can still be used for standard I/O. \nThe PCA timer is a common time base for all five Modules (see Figure 11). The timer\ncount source is determined from the CPS1 and CPS0 bits in the CMOD register(Table 22) and can be programmed to run at:  \n\x81 1/6 the \nperipheral clock frequency (FCLK PERIPH ) \n\x81 1/2 the peripheral clock frequency (FCLK PERIPH )\n\x81 The Timer 0 overflow\x81 The input on the ECI pin (P1.2)PCA Component External I/O Pin\n16-bit Counter P1.2/ECI\n16-bit Module 0 P1.3/CEX016-bit Module 1 P1.4/CEX116-bit Module 2 P1.5/CEX216-bit Module 3 P1.6/CEX3\n32 AT89C51RB2/RC2\n4180E–8051–10/06Figure 11.  PCA Timer/Counter\nCIDL CPS1 CPS0 ECFIt\nCH CL\n16-bit up CounterTo PCA\nModules\nFCLK PERIPH /6\nFCLK PERIPH /2\nT0 OVF\nP1.2\nIdleCMOD\n0xD9WDTE\nCF CRCCON\n0xD8CCF4 CCF3 CCF2 CCF1 CCF0overflow\n33AT89C51RB2/RC2\n4180E–8051–10/06Registers Table 22.  CMOD Register\nCMOD – PCA Counter Mode Register (D9h)\nReset Value = 00XX X000b\nNot bit addressable\nThe CMOD register includes three additional bits associated with the PCA.\n\x81 The CIDL bit which allows the PCA to stop during idle mode. \n\x81 The WDTE bit which enables or disables the watchdog function on Module 4. \n\x81 The ECF bit which when set causes an interrupt and the PCA overflow flag CF (in \nthe CCON SFR) to be set when the PCA timer overflows. \nThe CCON register contains the run control bit for the PCA and the flags for the PCA\ntimer (CF) and each Module (see Table 23). \n\x81 Bit CR (CCON. 6) must be set by software to run the PCA. The PCA is shut off by \nclearing this bit. \n\x81 Bit CF:  The CF bit (CCON. 7) is set when the PCA counter overflows and an \ninterrupt will be generated if the ECF bit in the CMOD register is set. The CF bit can only be cleared by software. \n\x81 Bits 0 through 4 are the flags for the Modules (bit 0 for Module 0, bit 1 for Module 1, \netc. ) and are set by hardware when either a match or a capture occurs. These flags \nalso can only be cleared by software. 76543210\nCIDL WDTE - - - CPS1 CPS0 ECF\nBit \nNumberBit       \nMnemonic Description\n7C I D LCounter Idle Control\nCleared to program the PCA Counter to continue functioning during idle Mode. Set to program PCA to be gated off during idle. \n6W D T EWatchdog Timer Enable\nCleared to disable Watchdog Timer function on PCA Module 4. Set to enable Watchdog Timer function on PCA Module 4. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n3-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n2 CPS1 PCA Count Pulse Select\nCPS1\nCPS0 Selected PCA input\n0  0 Internal clock FCLK PERIPH /6\n0   1 Internal clock FLK PERIPH /2\n1   0 Timer 0 Overflow1   1 External clock at ECI/P1.2 pin (max rate = fCLK PERIPH/ 4)1 CPS0\n0E C FPCA Enable Counter Overflow Interrupt\nCleared to disable CF bit in CCON to inhibit an interrupt. \nSet to enable CF bit in CCON to generate an interrupt. \n34 AT89C51RB2/RC2\n4180E–8051–10/06Table 23.  CCON Register\nCCON – PCA Counter Control Register (D8h)\nReset Value = 000X 0000b\nBit addressable\nThe watchdog timer function is implemented in Module 4 (see Figure 14). The PCA interrupt system is shown in Figure 12. 76543210\nCF CR - CCF4 CCF3 CCF2 CCF1 CCF0\nBit \nNumberBit       \nMnemonic Description\n7C FPCA Counter Overflow Flag\nSet by hardware when the counter rolls over. CF flags an interrupt if bit ECF in \nCMOD is set. CF may be set by either hardware or software but can only be \ncleared by software. \n6C RPCA Counter Run Control Bit\nMust be cleared by software to turn the PCA counter off. Set by software to turn the PCA counter on. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4 CCF4PCA Module 4 Interrupt Flag\nMust be cleared by software. Set by hardware when a match or capture occurs. \n3 CCF3PCA Module 3 Interrupt Flag\nMust be cleared by software. Set by hardware when a match or capture occurs. \n2 CCF2PCA Module 2 Interrupt Flag\nMust be cleared by software. Set by hardware when a match or capture occurs. \n1 CCF1PCA Module 1 Interrupt Flag\nMust be cleared by software. Set by hardware when a match or capture occurs. \n0 CCF0PCA Module 0 Interrupt Flag\nMust be cleared by software. Set by hardware when a match or capture occurs. \n35AT89C51RB2/RC2\n4180E–8051–10/06Figure 12.  PCA Interrupt System\nPCA Modules:  each one of the five compare/capture Modules has six possible func-\ntions. It can perform:\n\x81 16-bit Capture, positive-edge triggered\n\x81 16-bit Capture, negative-edge triggered\n\x81 16-bit Capture, both positive and negative-edge triggered\n\x81 16-bit Software Timer\n\x81 16-bit High-speed Output\n\x81 8-bit Pulse Width Modulator\nIn addition, Module 4 can be used as a Watchdog Timer. Each Module in the PCA has a special function register associated with it. These regis-\nters are:  CCAPM0 for Module 0, CCAPM1 for Module 1, etc. (see Table 24). Theregisters contain the bits that control the mode that each Module will operate in. \n\x81 The ECCF bit (CCAPMn. 0 where n = 0, 1, 2, 3, or 4 depending on the Module) \nenables the CCF flag in the CCON SFR to generate an interrupt when a match or compare occurs in the associated Module. \n\x81 PWM (CCAPMn. 1) enables the pulse width modulation mode. \n\x81 The TOG bit (CCAPMn. 2) when set causes the CEX output associated with the \nModule to toggle when there is a match between the PCA counter and the Module\'s capture/compare register. \n\x81 The match bit MAT (CCAPMn. 3) when set will cause the CCFn bit in the CCON \nregister to be set when there is a match between the PCA counter and the Module\'s capture/compare register. \n\x81 The next two bits CAPN (CCAPMn. 4) and CAPP (CCAPMn. 5) determine the edge \nthat a capture input will be active on. The CAPN bit enables the negative edge, and the CAPP bit enables the positive edge. If both bits are set both edges will be enabled and a captur e will occur for either transition. \n\x81 The last bit in the register ECOM (CCAPMn. 6) when set enables the comparator \nfunction. \nTable 24 shows the CCAPMn settings for the various PCA functions. CF CRCCON\n0xD8CCF4 CCF3 CCF2 CCF1 CCF0\nModule 4  Module 3  Module 2  Module 1  Module 0  \nECFPCA Timer/Counter  \nECCFn CCAPMn. 0 CMOD. 0IEN0. 6 IEN0. 7To Interrupt\nPriority Decoder\nEC EA\n36 AT89C51RB2/RC2\n4180E–8051–10/06Table 24.  CCAPMn Registers (n = 0-4)\nCCAPM0 – PCA Module 0 Compare/Capture Control Register (0DAh)CCAPM1 – PCA Module 1 Compare/Capture Control Register (0DBh)CCAPM2 – PCA Module 2 Compare/Capture Control Register (0DCh)CCAPM3 – PCA Module 3 Compare/Capture Control Register (0DDh)CCAPM4 – PCA Module 4 Compare/Capture Control Register (0DEh)\nReset Value = X000 0000b\nNot bit addressable76543210\n- ECOMn CAPPn CAPNn MATn TOGn PWMn ECCFn\nBit \nNumberBit       \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6E C O M nEnable Comparator\nCleared to disable the comparator function. Set to enable the comparator function. \n5 CAPPnCapture Positive\nCleared to disable positive edge capture. \nSet to enable positive edge capture. \n4 CAPNnCapture Negative\nCleared to disable negative edge capture. \nSet to enable negative edge capture. \n3M A T nMatch\nWhen MATn = 1, a match of the PCA counter with this Module\'s \ncompare/capture register causes the CCFn bit in CCON to be set, flagging an \ninterrupt. \n2 TOGnToggle  \nWhen TOGn = 1, a match of the PCA counter with this Module\'s \ncompare/capture register causes theCEXn pin to toggle. \n1P W M nPulse Width Modulation Mode\nCleared to disable the CEXn pin to be used as a pulse width modulated output. Set to enable the CEXn pin to be used as a pulse width modulated output. \n0 CCF0Enable CCF Interrupt\nCleared to disable compare/capture flag CCFn in the CCON register to generate \nan interrupt. \nSet to enable compare/capture flag CCFn in the CCON register to generate an \ninterrupt. \n37AT89C51RB2/RC2\n4180E–8051–10/06Table 25.  PCA Module Modes (CCAPMn Registers)\nThere are two additional registers associated with each of the PCA Modules. They are\nCCAPnH and CCAPnL and these are the registers that store the 16-bit count when acapture occurs or a compare should occur. When a Module is used in the PWM modethese registers are used to control the duty cycle of the output (see Table 26 andTable 27). \nTable 26.  CCAPnH Registers (n = 0-4)\nCCAP0H – PCA Module 0 Compare/Capture Control Register High (0FAh)CCAP1H – PCA Module 1 Compare/Capture Control Register High (0FBh)CCAP2H – PCA Module 2 Compare/Capture Control Register High (0FCh)CCAP3H – PCA Module 3 Compare/Capture Control Register High (0FDh)CCAP4H – PCA Module 4 Compare/Capture Control Register High (0FEh)\nReset Value = 0000 0000b\nNot bit addressableECOMn CAPPn CAPNn MATn TOGn PWMm ECCFn Module Function\n0000000  N o  O p e r a t i o n\nX10000X16-bit capture by a positive-edge \ntrigger on CEXn\nX01000X16-bit capture by a negative trigger \non CEXn\nX11000X16-bit capture by a transition on \nCEXn\n100100X16-bit Software Timer/Compare \nmode. \n100110X  1 6 - b i t  H i g h - s p e e d  O u t p u t1000010  8 - b i t  P W M1001X0X  W a t c h d o g  T i m e r  ( M o d u l e  4  o n l y )\n76543210\n--------\nBit \nNumberBit       \nMnemonic Description\n7 - 0 -PCA Module n Compare/Capture Control\nCCAPnH Value\n38 AT89C51RB2/RC2\n4180E–8051–10/06Table 27.  CCAPnL Registers (n = 0-4)\nCCAP0L – PCA Module 0 Compare/Capture Control Register Low (0EAh)CCAP1L – PCA Module 1 Compare/Capture Control Register Low (0EBh)CCAP2L – PCA Module 2 Compare/Capture Control Register Low (0ECh)CCAP3L – PCA Module 3 Compare/Capture Control Register Low (0EDh)CCAP4L – PCA Module 4 Compare/Capture Control Register Low (0EEh)\nReset Value = 0000 0000b\nNot bit addressable\nTable 28.  CH Register\nCH – PCA Counter Register High (0F9h)\nReset Value = 0000 0000b\nNot bit addressable\nTable 29.  CL Register\nCL – PCA Counter Register Low (0E9h)\nReset Value = 0000 0000b\nNot bit addressable76543210\n--------\nBit \nNumberBit       \nMnemonic Description\n7 - 0 -PCA Module n Compare/Capture Control\nCCAPnL Value\n76543210\n--------\nBit \nNumberBit       \nMnemonic Description\n7 - 0 -PCA Counter\nCH Value\n76543210\n--------\nBit \nNumberBit       \nMnemonic Description\n7 - 0 -PCA Counter\nCL Value\n39AT89C51RB2/RC2\n4180E–8051–10/06PCA Capture Mode To use one of the PCA Modules in the capture mode either one or both of the CCAPM\nbits CAPN and CAPP for that Module must be set. The external CEX input for the Mod-ule (on port 1) is sampled for a transition. When a valid transition occurs the PCAhardware loads the value of the PCA counter registers (CH and CL) into the Module\'scapture registers (CCAPnL and CCAPnH). If the CCFn bit for the Module in the CCONSFR and the ECCFn bit in the CCAPMn SFR are set then an interrupt will be generated(see Figure 13). \nFigure 13.  PCA Capture Mode\nCF CRCCON\n0xD8\nCH CL\nCCAPnH CCAPnLCCF4 CCF3 CCF2 CCF1 CCF0\nPCA IT\nPCA Counter/Timer\nECOMn CCAPMn, n = 0 to 4\n0xDA to 0xDECAPNn MATn TOGn PWMn ECCFn CAPPnCex. n\nCapture\n40 AT89C51RB2/RC2\n4180E–8051–10/0616-bit Software Timer/ \nCompare ModeThe PCA Modules can be used as software timers by setting both the ECOM and MAT\nbits in the Modules CCAPMn register. The PCA timer will be compared to the Module\'scapture registers and when a match occurs, an interrupt will occur if the CCFn (CCONSFR) and the ECCFn (CCAPMn SFR) bits for the Module are both set (see Figure 14). \nFigure 14.  PCA Compare Mode and PCA Watchdog Timer\nNote: 1. Only for Module 4\nBefore enabling ECOM bit, CCAPnL and CCAPnH should be set with a non zero value,\notherwise an unwanted match could occur. Writing to CCAPnH will set the ECOM bit. \nOnce ECOM set, writing CCAPnL will clear ECOM so that an unwanted match doesn’t\noccur while modifying the compare value. Writing to CCAPnH will set ECOM. For thisreason, user software should write CCAPnL first, and then CCAPnH. Of course, theECOM bit can still be controlled by accessing to CCAPMn register. CH CLCCAPnH CCAPnL\nECOMnCCAPMn, n = 0 to 4\n0xDA to 0xDECAPNn MATn TOGn PWMn ECCFn CAPPn16 bit ComparatorMatchCCON\n0xD8\nPCA IT\nEnable\nPCA Counter/TimerRESET(1)\nCIDL CPS1 CPS0 ECFCMOD\n0xD9WDTEResetWrite to\nCCAPnL\nWrite to\nCCAPnHCF CCF2 CCF1 CCF0 CR CCF3 CCF4\n10\n41AT89C51RB2/RC2\n4180E–8051–10/06High-speed Output Mode In this mode the CEX output (on port 1) associated with the PCA module will toggle\neach time a match occurs between the PCA counter and the modules capture registers.To activate this mode the TOG, MAT, and ECOM bits in the modules CCAPMn SFRmust be set (see Figure 15). \nA prior write must be done to CCAPnL and CCAPnH before writing the ECOMn bit. \nFigure 15.  PCA High-speed Output Mode\nBefore enabling ECOM bit, CCAPnL and CCAPnH should be set with a non-zero value,\notherwise an unwanted match could occur. \nOnce ECOM is set, writing CCAPnL will cl ear ECOM so that an unwanted match doesn’t\noccur while modifying the compare value. Writing to CCAPnH will set ECOM. For thisreason, user software should write CCAPnL first, and then CCAPnH. Of course, theECOM bit can still be controlled by accessing to CCAPMn register. CH CLCCAPnH CCAPnL\nECOMnCCAPMn, n = 0 to 4\n0xDA to 0xDECAPNn MATn TOGn PWMn ECCFn CAPPn16-bit ComparatorMatchCF CRCCON\n0xD8CCF4 CCF3 CCF2 CCF1 CCF0\nPCA IT\nEnable\nCEXn\nPCA Counter/TimerWrite to\nCCAPnHResetWrite to\nCCAPnL\n1 0\n42 AT89C51RB2/RC2\n4180E–8051–10/06Pulse Width Modulator \nModeAll of the PCA Modules can be used as PWM outputs. Figure 16 shows the PWM func-\ntion. The frequency of the output depends on the source for the PCA timer. All of theModules will have the same frequency of output because they all share the PCA timer.The duty cycle of each Module is independently variable using the module\'s captureregister CCAPLn. When the value of the PCA CL SFR is less than the value in the mod-ule\'s CCAPLn SFR the output will be low, when it is equal to or greater than the outputwill be high. When CL overflows from FF to 00, CCAPLn is reloaded with the value inCCAPHn. This allows updating the PWM without glitches. The PWM and ECOM bits inthe module\'s CCAPMn register must be set to enable the PWM mode. \nFigure 16.  PCA PWM Mode\nPCA Watchdog Timer An on-board watchdog timer is available with the PCA to improve the reliability of the\nsystem without increasing chip count. Watchdog timers are useful for systems that aresusceptible to noise, power glitches, or electrostatic discharge. Module 4 is the onlyPCA Module that can be programmed as a watchdog. However, this Module can still beused for other modes if the watchdog is not needed. Figure 14 shows a diagram of howthe watchdog works. The user pre-loads a 16-bit value in the compare registers. Justlike the other compare modes, this 16-bit value is compared to the PCA timer value. If amatch is allowed to occur, an internal reset will be generated. This will not cause theRST pin to be driven high. \nIn order to hold off the reset, the user has the following three options:  \n1. Periodically change the compare value so it will never match the PCA timer.\n2. Periodically change the PCA timer value so it will never match the compare \nvalues.\n3. Disable the watchdog by clearing the WDTE bit before a match occurs and then \nre-enable it. \nThe first two options are more reliable because the watchdog timer is never disabled as\nin option #3. If the program counter ever goes astray, a match will eventually occur andcause an internal reset. The second option is also not recommended if other PCA Mod-ules are being used. Remember, the PCA timer is the time base for all modules;CLCCAPnH\nCCAPnL\nECOMn CCAPMn, n = 0 to 4\n0xDA to 0xDECAPNn MATn TOGn PWMn ECCFn CAPPn8-bit ComparatorCEXn“0”\n“1” Enable\nPCA Counter/TimerOverflow\n43AT89C51RB2/RC2\n4180E–8051–10/06changing the time base for other Modules would not be a good idea. Thus, in most appli-\ncations the first solution is the best option. \nThis watchdog timer won’t generate a reset out on the reset pin. \n44 AT89C51RB2/RC2\n4180E–8051–10/06Serial I/O Port The serial I/O port in the AT89C51RB2/RC2 is compatible with the serial I/O port in the\n80C52.It provides both synchronous and asynchronous communication modes. It operates as aUniversal Asynchronous Receiver and Transmitter (UART) in three full-duplex modes(Modes 1, 2 and 3). Asynchronous transmission and reception can occur simultaneouslyand at different baud rates\nSerial I/O port includes the following enhancements:\n\x81 Framing error detection\n\x81 Automatic address recognition\nFraming Error Detection Framing bit error detection is provided for the three asynchronous modes (modes 1, 2\nand 3). To enable the framing bit error detection feature, set SMOD0 bit in PCON regis-ter (See Figure 17). \nFigure 17.  Framing Error Block Diagram\nWhen this feature is enabled, the receiver checks each incoming data frame for a valid\nstop bit. An invalid stop bit may result from noise on the serial lines or from simultaneoustransmission by two CPUs. If a valid stop bit is not found, the Framing Error bit (FE) inSCON register (See Table 33.) bit is set. Software may examine FE bit after each reception to check for data errors. Once set,only software or a reset can clear FE bit. Subsequently received frames with valid stopbits cannot clear FE bit. When FE feature is enabled, RI rises on stop bit instead of thelast data bit (See Figure 18. and Figure 19.). \nFigure 18.  UART Timings in Mode 1RI TI RB8 TB8 REN SM2 SM1 SM0/FE\nIDL PD GF0 GF1 POF - SMOD0 SMOD1\nTo UART framing error controlSM0 to UART mode control (SMOD0 = 0)Set FE bit if stop bit is 0 (framing error) (SMOD0 = 1)SCON (98h)\nPCON (87h)\nData byte\nRI\nSMOD0=XStop\nbitStart\nbitRXD D7 D6 D5 D4 D3 D2 D1 D0\nFE\nSMOD0=1\n45AT89C51RB2/RC2\n4180E–8051–10/06Figure 19.  UART Timings in Modes 2 and 3 \nAutomatic Address \nRecognitionThe automatic address recognition feature is enabled when the multiprocessor commu-\nnication feature is enabled (SM2 bit in SCON register is set). Implemented in hardware, automatic address recognition enhances the multiprocessorcommunication feature by allowing the serial port to examine the address of eachincoming command frame. Only when the serial port recognizes its own address, thereceiver sets RI bit in SCON register to generate an interrupt. This ensures that the CPUis not interrupted by command frames addressed to other devices. If desired, the user may enable the automatic address recognition feature in mode 1.Inthis configuration, the stop bit takes the place of the ninth data bit. Bit RI is set only whenthe received command frame address matches the device’s address and is terminatedby a valid stop bit. To support automatic address recognition, a device is identified by a given address anda broadcast address. \nNote: The multiprocessor communication and automatic address recognition features cannot\nbe enabled in mode 0 (i. e. setting SM2 bit in SCON register in mode 0 has no effect). \n Given Address Each device has an individual address that is specified in SADDR register; the SADEN\nregister is a mask byte that contains don’t-care bits (defined by zeros) to form thedevice’s given address. The don’t-care bits provide the flex ibility to addre ss one or more\nslaves at a time. The following example illustrates how a giv en address is formed. \nTo address a device by its individual address, the SADEN mask byte must be 1111\n1111b . \nFor example:\nSADDR0101 0110b\nSADEN 1111 1100b\nGiven0101 01XXb\nThe following is an example of how to use given addresses to address different slaves:\nSlave A:SADDR1111 0001b\nSADEN 1111 1010b\nGiven1111 0X0Xb\nSlave B:SADDR1111 0011b\nSADEN 1111 1001b\nGiven1111 0XX1b\nSlave C:SADDR1111 0010b\nSADEN 1111 1101b\nGiven1111 00X1bRI\nSMOD0=0Data byte Ninth\nbitStop\nbitStart\nbitRXD D8 D7 D6 D5 D4 D3 D2 D1 D0\nRI\nSMOD0=1\nFE\nSMOD0=1\n46 AT89C51RB2/RC2\n4180E–8051–10/06The SADEN byte is selected so that each slave may be addressed separately. \nFor slave A, bit 0 (the LSB) is a don’t-care bit; for slaves B and C, bit 0 is a 1.To commu-nicate with slave A only, the master must send an address where bit 0 is clear (e. g.1111 0000b ). \nFor slave A, bit 1 is a 1; for slaves B and C, bit 1 is a don’t care bit. To communicate withslaves B and C, but not slave A, the master must send an address with bits 0 and 1 bothset (e. g. 1111 0011b ). \nTo communicate with slaves A, B and C, the master must send an address with bit 0 set,bit 1 clear, and bit 2 clear (e. g. 1111 0001b ). \n Broadcast Address A broadcast address is formed from the logical OR of the SADDR and SADEN registers\nwith zeros defined as don’t-care bits, e. g. :\nSADDR0101 0110b\nSADEN1111 1100b\nBroadcast =SADDR OR SADEN1111 111Xb\nThe use of don’t-care bits provides flexib ility in defining the br oadcast address, however\nin most applications, a broadcast address is FFh. The following is an example of usingbroadcast addresses:\nSlave A:SADDR1111 0001b\nSADEN 1111 1010b\nBroadcast1111 1X11b,\nSlave B:SADDR1111 0011b\nSADEN 1111 1001b\nBroadcast1111 1X11B,\nSlave C:SADDR=1111 0011b\nSADEN 1111 1101b\nBroadcast1111 1111b\nFor slaves A and B, bit 2 is a don’t care bit; for slave C, bit 2 is set. To communicate with\nall of the slaves, the master must send an address FFh. To communicate with slaves Aand B, but not slave C, the master can send and address FBh. \n Reset Addresses On reset, the SADDR and SADEN registers are initialized to 00h, i. e. the given and\nbroadcast addresses are XXXX XXXXb  (all don’t-care bits). This ensures that the serial\nport will reply to any address, and so, that it is backwards compatible with the 80C51microcontrollers that do not support automatic address recognition. \n47AT89C51RB2/RC2\n4180E–8051–10/06Registers Table 30.  SADEN Register\nSADEN - Slave Address Mask Register (B9h)\nReset Value = 0000 0000b\nNot bit addressable\nTable 31.  SADDR Register\nSADDR - Slave Address Register (A9h)\nReset Value = 0000 0000b\nNot bit addressable\nBaud Rate Selection for \nUART for Mode 1 and 3The Baud Rate Generator for transmit and re ceive clocks can be selected separately via\nthe T2CON and BDRCON registers. \nFigure 20.  Baud Rate Selection76543210\n76543210\nRCLK/ 16\nRBCKINT_BRG0\n1TIMER1\n0\n10\n1TIMER2\nINT_BRGTIMER1\nTIMER2TIMER_BRG_RX\nRx Clock\n/ 160\n1TIMER_BRG_TX\nTx Clock\nTBCKTCLK\n48 AT89C51RB2/RC2\n4180E–8051–10/06Table 32.  Baud Rate Selection Table UART\nInternal Baud Rate Generator \n(BRG)When the internal Baud Rate Generator is used, the Baud Rates are determined by the\nBRG overflow depending on the BRL reload value, the value of SPD bit (Speed Mode)in BDRCON register and the value of the SMOD1 bit in PCON register. \nFigure 21.  Internal Baud Rate\n\x81 The baud rate for UART is token by formula:TCLK\n(T2CON)RCLK\n(T2CON)TBCK\n(BDRCON)RBCK\n(BDRCON)Clock Source \nUART TxClock Source\nUART Rx\n0000 T i m e r  1 T i m e r  11000 T i m e r  2 T i m e r  10100 T i m e r  1 T i m e r  21100 T i m e r  2 T i m e r  2\nX010 I N T _ B R G T i m e r  1X110 I N T _ B R G T i m e r  2\n0 X 0 1 Timer 1 INT_BRG1 X 0 1 Timer 2 INT_BRG\nX X 1 1 INT_BRG INT_BRG\n0\n1Overflow\nSPD\nBDRCON.1BRG\n(8 bits)\nBRL\n(8 bits)FClk Periph÷ 6\nBRR\nBDRCON.40\n1\nSMOD1\nPCON.7÷ 2\nINT_BRG\nBaud_Rate =\n6(1-SPD) ⋅ 32 ⋅ (256 -BRL)2SMOD1 ⋅ FPER\nBRL = 256 -\n6(1-SPD) ⋅ 32 ⋅ Baud_Rate2SMOD1 ⋅ FPER\n49AT89C51RB2/RC2\n4180E–8051–10/06Table 33.  SCON Register\nSCON - Serial Control Register (98h)\nReset Value = 0000 0000b\nBit addressable76543210\nFE/SM0 SM1 SM2 REN TB8 RB8 TI RI\nBit \nNumberBit       \nMnemonic Description\n7FEFraming Error bit (SMOD0=1 )\nClear to reset the error state, not cleared by a valid stop bit. \nSet by hardware when an invalid stop bit is detected. \nSMOD0 must be set to enable access to the FE bit.\nSM0Serial port Mode bit 0\nRefer to SM1 for serial port mode selection. \nSMOD0 must be cleared to enable access to the SM0 bit.\n6S M 1Serial port Mode bit 1\nSM0 SM1 Mode Baud Rate\n0  0 Shift Register FXTAL/12 (or FXTAL /6 in mode X2)\n0  1 8-bit UART Variable1 0 9 - b i t  U A R T F\nXTAL/64 or FXTAL/32\n1  1 9-bit UART Variable\n5S M 2Serial port Mode 2 bit / Multiprocessor Communication Enable bit\nClear to disable multiprocessor communication feature. Set to enable multiprocessor communication feature in mode 2 and 3, and \neventually mode 1.This bit should be cleared in mode 0.\n4R E NReception Enable bit\nClear to disable serial reception. \nSet to enable serial reception. \n3T B 8Transmitter Bit 8 / Ninth bit to transmit in modes 2 and 3\nClear to transmit a logic 0 in the 9th bit. \nSet to transmit a logic 1 in the 9th bit. \n2R B 8Receiver Bit 8 / Ninth bit received in modes 2 and 3\nCleared by hardware if 9th bit received is a logic 0.\nSet by hardware if 9th bit received is a logic 1.\nIn mode 1, if SM2 = 0, RB8 is the received stop bit. In mode 0 RB8 is not \nused. \n1T ITransmit Interrupt flag\nClear to acknowledge interrupt. \nSet by hardware at the end of the 8th bit time in mode 0 or at the beginning \nof the stop bit in the other modes. \n0R IReceive Interrupt flag\nClear to acknowledge interrupt. \nSet by hardware at the end of the 8th bit time in mode 0, see Figure 18. \nand Figure 19. in the other modes. \n50 AT89C51RB2/RC2\n4180E–8051–10/06Table 34.  Example of Computed Value When X2=1, SMOD1=1, SPD=1\nTable 35.  Example of Computed Value When X2=0, SMOD1=0, SPD=0\nThe baud rate generator can be used for mode 1 or 3 (refer to Figure 20.), but also for\nmode 0 for UART, thanks to the bit SRC located in BDRCON register (Table 42.)\nUART Registers Table 36.  SADEN Register\nSADEN - Slave Address Mask Register for UART (B9h)\nReset Value = 0000 0000b\nTable 37.  SADDR Register\nSADDR - Slave Address Register for UART (A9h)\nReset Value = 0000 0000bBaud Rates FOSC = 16. 384 MHz FOSC = 24MHz\nBRL Error (%) BRL Error (%)\n115200 247 1.23 243 0.16\n57600 238 1.23 230 0.1638400 229 1.23 217 0.1628800 220 1.23 204 0.1619200 203 0.63 178 0.16\n9600 149 0.31 100 0.164800 43 1.23 - -\nBaud Rates F\nOSC = 16. 384 MHz FOSC = 24MHz\nBRL Error (%) BRL Error (%)\n4800 247 1.23 243 0.162400 238 1.23 230 0.161200 220 1.23 202 3.55\n600 185 0.16 152 0.16\n76543210\n76543210\n51AT89C51RB2/RC2\n4180E–8051–10/06Table 38.  SBUF Register\nSBUF - Serial Buffer Register for UART (99h)\nReset Value = XXXX XXXXb\nTable 39.  BRL Register\nBRL - Baud Rate Reload Register for the internal baud rate generator, UART (9Ah)\nReset Value = 0000 0000b76543210\n76543210\n52 AT89C51RB2/RC2\n4180E–8051–10/06Table 40.  T2CON Register\nT2CON - Timer 2 Control Register (C8h)\nReset Value = 0000 0000b\nBit addressable76543210\nTF2 EXF2 RCLK TCLK EXEN2 TR2 C/T2# CP/RL2#\nBit \nNumberBit        \nMnemonic Description\n7T F 2Timer 2 overflow Flag\nMust be cleared by software. \nSet by hardware on timer 2 overflow, if RCLK = 0 and TCLK = 0.\n6E X F 2Timer 2 External Flag\nSet when a capture or a reload is caused by a negative transition on T2EX pin if \nEXEN2=1.\nWhen set, causes the CPU to vector to timer 2 interrupt routine when timer 2 interrupt is enabled. \nMust be cleared by software. EXF2 doesn’t cause an interrupt in Up/down \ncounter mode (DCEN = 1)\n5R C L KReceive Clock bit for UART\nCleared to use timer 1 overflow as receive clock for serial port in mode 1 or 3.\nSet to use timer 2 overflow as receive clock for serial port in mode 1 or 3.\n4T C L KTransmit Clock bit for UART\nCleared to use timer 1 overflow as transmit clock for serial port in mode 1 or 3.Set to use timer 2 overflow as transmit clock for serial port in mode 1 or 3.\n3E X E N 2Timer 2 External Enable bit\nCleared to ignore events on T2EX pin for timer 2 operation. \nSet to cause a capture or reload when a negative transition on T2EX pin is detected, if timer 2 is not used to clock the serial port. \n2T R 2Timer 2 Run control bit\nCleared to turn off timer 2.\nSet to turn on timer 2.\n1C / T 2 #Timer/Counter 2 select bit\nCleared for timer operation (input from internal clock system:  F\nCLK PERIPH ). \nSet for counter operation (input from T2 input pin, falling edge trigger). Must be \n0 for clock out mode. \n0C P / R L 2 #Timer 2 Capture/Reload bit\nIf RCLK=1 or TCLK=1, CP/RL2# is ignored and timer is forced to auto-reload on \ntimer 2 overflow. \nCleared to auto-reload on timer 2 overflows or negative transitions on T2EX pin if EXEN2=1.\nSet to capture on negative transitions on T2EX pin if EXEN2=1.\n53AT89C51RB2/RC2\n4180E–8051–10/06Table 41.  PCON Register\nPCON - Power Control Register (87h)\nReset Value = 00X1 0000b\nNot bit addressable\nPower-off flag reset value will be 1 only after a power on (cold reset). A warm reset\ndoesn’t affect the value of this bit. 76543210\nSMOD1 SMOD0 - POF GF1 GF0 PD IDL\nBit \nNumberBit \nMnemonic Description\n7S M O D 1Serial port Mode bit 1 for UART\nSet to select double baud rate in mode 1, 2 or 3.\n6S M O D 0Serial port Mode bit 0 for UART\nCleared to select SM0 bit in SCON register. \nSet to select FE bit in SCON register. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4P O FPower-Off Flag\nCleared to recognize next reset type. \nSet by hardware when VCC rises from 0 to its nominal voltage. Can also be set by software. \n3G F 1General purpose Flag\nCleared by user for general purpose usage. \nSet by user for general purpose usage. \n2G F 0General purpose Flag\nCleared by user for general purpose usage. \nSet by user for general purpose usage. \n1P DPower-Down mode bit\nCleared by hardware when reset occurs. Set to enter power-down mode. \n0I D LIdle mode bit\nCleared by hardware when interrupt or reset occurs. \nSet to enter idle mode. \n54 AT89C51RB2/RC2\n4180E–8051–10/06Table 42.  BDRCON Register\nBDRCON - Baud Rate Control Register (9Bh)\nReset Value = XXX0 0000b\nNot bit addressablef76543210\n- - - BRR TBCK RBCK SPD SRC\nBit        \nNumberBit        \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit\n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit\n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4B R RBaud Rate Run Control bit\nCleared to stop the internal Baud Rate Generator. Set to start the internal Baud Rate Generator. \n3T B C KTransmission Baud rate Generator Selection bit  for UART\nCleared to select Timer 1 or Timer 2 for the Baud Rate Generator. \nSet to select internal Baud Rate Generator. \n2R B C KReception Baud Rate Generator Selection bit  for UART\nCleared to select Timer 1 or Timer 2 for the Baud Rate Generator. \nSet to select internal Baud Rate Generator. \n1 SPDBaud Rate Speed Control bit  for UART\nCleared to select the SLOW Baud Rate Generator. Set to select the FAST Baud Rate Generator. \n0S R CBaud Rate Source select bit in Mode 0  for UART \nCleared to select F\nOSC/12 as the Baud Rate Generator (FCLK PERIPH /6 in X2 \nmode). \nSet to select the internal Baud Rate Generator for UARTs in mode 0.\n55AT89C51RB2/RC2\n4180E–8051–10/06Interrupt System The AT89C51RB2/RC2 has a total of 9 interrupt vectors:  two external interrupts (INT0\nand INT1 ), three timer interrupts (timers 0, 1 and 2), the serial port interrupt, SPI inter-\nrupt, Keyboard interrupt and the PCA global interrupt. These interrupts are shown inFigure 22.\nFigure 22.  Interrupt Control System\nEach of the interrupt sources can be individually enabled or disabled by setting or clear-\ning a bit in the Interrupt Enable register (Table 45 and Table 47). This register alsocontains a global disable bit, which must be cleared to disable all interrupts at once. \nEach interrupt source can also be individually programmed to one out of four priority lev-\nels by setting or clearing a bit in the Interrupt Priority register (Table 48) and in theInterrupt Priority High register (Table 46 and Table 47) shows the bit values and prioritylevels associated with each combination. IE103High Priority\nInterrupt\nInterruptPolling\nSequence, Decreasing Fr\nom\nHigh to Low Priority\nLow Priority\nInterruptGlobal DisableIndividual EnableEXF2TF2TIRITF0INT0\nINT1\nTF1IPH, IPL\nIE0\n03\n03\n03\n03\n03\n03PCA IT\nKBD IT\nSPI IT03\n03\n56 AT89C51RB2/RC2\n4180E–8051–10/06Registers A low-priority interrupt can be interrupted by a high-priority interrupt, but not by another\nlow-priority interrupt. A high-priority interrupt can’t be interrupted by any other interruptsource.\nTable 43.  Priority Level Bit Values\nIf two interrupt requests of different priority levels are received simultaneously, the\nrequest of higher-priority level is serviced. If interrupt requests of the same priority levelare received simultaneously, an internal polling sequence determines which request isserviced. Thus within each priority level there is a second priority structure determinedby the polling sequence. IPH. x IPL. x Interrupt Level Priority\n0 0 0 (Lowest)01110211 3  ( H i g h e s t )\n57AT89C51RB2/RC2\n4180E–8051–10/06Table 44.  IENO Register\nIEN0 - Interrupt Enable Register (A8h)\nReset Value = 0000 0000b\nBit addressable76543210\nEA EC ET2 ES ET1 EX1 ET0 EX0\nBit \nNumberBit        \nMnemonic Description\n7E AEnable All Interrupt Bit\nCleared to disable all interrupts. \nSet to enable all interrupts. \n6E CPCA Interrupt Enable Bit\nCleared to disable. Set to enable. \n5E T 2Timer 2 Overflow Interrupt Enable Bit\nCleared to disable timer 2 overflow interrupt. \nSet to enable timer 2 overflow interrupt. \n4E SSerial Port Enable Bit\nCleared to disable serial port interrupt. Set to enable serial port interrupt. \n3E T 1Timer 1 Overflow Interrupt Enable Bit\nCleared to disable timer 1 overflow interrupt. \nSet to enable timer 1 overflow interrupt. \n2 EX1External Interrupt 1 Enable Bit\nCleared to disable external interrupt 1.\nSet to enable external interrupt 1.\n1E T 0Timer 0 Overflow Interrupt Enable Bit\nCleared to disable timer 0 overflow interrupt. Set to enable timer 0 overflow interrupt. \n0 EX0External Interrupt 0 Enable Bit\nCleared to disable external interrupt 0.\nSet to enable external interrupt 0.\n58 AT89C51RB2/RC2\n4180E–8051–10/06Table 45.  IPL0 Register\nIPL0 - Interrupt Priority Register (B8h)\nReset Value = X000 0000b\nBit addressable76543210\n- PPCL PT2L PSL PT1L PX1L PT0L PX0L\nBit \nNumberBit \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6 PPCLPCA Interrupt Priority Bit\nsee PPCH for priority level. \n5P T 2 LTimer 2 Overflow Interrupt Priority Bit\nsee PT2H for priority level. \n4 PSLSerial Port Priority Bit\nsee PSH for priority level. \n3P T 1 LTimer 1 Overflow Interrupt Priority Bit\nsee PT1H for priority level. \n2P X 1 LExternal Interrupt 1 Priority Bit\nsee PX1H for priority level. \n1P T 0 LTimer 0 Overflow Interrupt Priority Bit\nsee PT0H for priority level. \n0P X 0 LExternal Interrupt 0 Priority Bit\nsee PX0H for priority level. \n59AT89C51RB2/RC2\n4180E–8051–10/06Table 46.  IPH0 Register\nIPH0 - Interrupt Priority High Register (B7h)\nReset Value = X000 0000b\nNot bit addressable76543210\n- PPCH PT2H PSH PT1H PX1H PT0H PX0H\nBit        \nNumberBit\nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6 PPCHPCA Interrupt Priority High Bit \nPPCH PPCL Priority Level\n00 L o w e s t\n01\n101 1 Highest\n5P T 2 HTimer 2 Overflow Interrupt Priority High Bit\nPT2H\nPT2L Priority Level\n00 L o w e s t\n01\n10\n1 1 Highest\n4 PSHSerial Port Priority High Bit\nPSH PSL Priority Level\n00 L o w e s t0110\n1 1 Highest\n3P T 1 HTimer 1 Overflow Interrupt Priority High Bit\nPT1H\nPT1L  Priority Level\n00 L o w e s t\n01\n101 1 Highest\n2 PX1HExternal Interrupt 1 Priority High Bit\nPX1H\nPX1L Priority Level\n00 L o w e s t\n01\n10\n1 1 Highest\n1P T 0 HTimer 0 Overflow Interrupt Priority High Bit\nPT0H PT0L Priority Level\n00 L o w e s t0110\n1 1 Highest\n0 PX0HExternal Interrupt 0 Priority High Bit\nPX0H \nPX0L Priority Level\n00 L o w e s t\n01\n101 1 Highest\n60 AT89C51RB2/RC2\n4180E–8051–10/06Table 47.  IEN1 Register\nIEN1 - Interrupt Enable Register (B1h)\nReset Value = XXXX X000b\nBit addressable76543210\n----- E S P I - K B D\nBit \nNumberBit        \nMnemonic Description\n7- Reserved\n6- Reserved\n5- Reserved\n4- Reserved\n3- Reserved\n2E S P ISPI Interrupt Enable Bit\nCleared to disable SPI interrupt. \nSet to enable SPI interrupt. \n1- R e s e r v e d\n0 KBDKeyboard Interrupt Enable Bit\nCleared to disable keyboard interrupt. Set to enable keyboard interrupt. \n61AT89C51RB2/RC2\n4180E–8051–10/06Table 48.  IPL1 Register\nIPL1 - Interrupt Priority Register (B2h)\nReset Value = XXXX X000b\nBit addressable76543210\n- - - - - SPIL - KBDL\nBit \nNumberBit \nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n3-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n2 SPILSPI Interrupt Priority Bit\nsee SPIH for priority level. \n1-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n0 KBDLKeyboard Interrupt Priority Bit\nsee KBDH for priority level. \n62 AT89C51RB2/RC2\n4180E–8051–10/06Table 49.  IPH1 Register\nIPH1 - Interrupt Priority High Register (B3h)\nReset Value = XXXX X000b\nNot bit addressable76543210\n- - - - - SPIH - KBDH\nBit        \nNumberBit\nMnemonic Description\n7-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n3-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n2S P I HSPI Interrupt Priority High Bit\nSPIH SPIL Priority Level\n00 L o w e s t0110\n1 1 Highest\n1-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n0 KBDHKeyboard Interrupt Priority High Bit\nKB DH\nKBDL Priority Level\n00 L o w e s t0110\n1 1 Highest\n63AT89C51RB2/RC2\n4180E–8051–10/06Interrupt Sources and \nVector AddressesTable 50.  Interrupt Sources and Vector Addresses\nNumber Polling Priority Interrupt SourceInterrupt\nRequestVector \nAddress\n0 0 Reset 0000h1 1 INT0 IE0 0003h2 2 Timer 0 TF0 000Bh3 3 INT1 IE1 0013h4 4 Timer 1 IF1 001Bh5 6 UART RI+TI 0023h6 7 Timer 2 TF2+EXF2 002Bh7 5 PCA CF + CCFn (n = 0-4) 0033h8 8 Keyboard KBDIT 003Bh9 9 SPI SPIIT 004Bh\n64 AT89C51RB2/RC2\n4180E–8051–10/06Keyboard Interface The AT89C51RB2/RC2 implements a keyboard interface allowing the connection of a \n8 x n matrix keyboard. It is based on 8 inputs with programmable interrupt capability onboth high or low level. These inputs are available as alternate function of P1 and allow toexit from idle and power-down modes. \nThe keyboard interfaces with the C51 core through 3 special function registers:  KBLS,\nthe Keyboard Level Selection register (Table 53), KBE, the Keyboard interrupt Enableregister (Table 52), and KBF, the Keyboard Flag register (Table 51). \nInterrupt The keyboard inputs are considered as 8 independent interrupt sources sharing the\nsame interrupt vector. An interrupt enable bit (KBD in IEN1) allows global enable or dis-able of the keyboard interrupt (see Figure 23). As detailed in Figure 24 each keyboardinput has the capability to detect a programmable level according to KBLS. x bit value.Level detection is then reported in interrupt flags KBF. x that can be masked by softwareusing KBE. x bits. \nThis structure allows keyboard arrangement from 1 by n to 8 by n matrix and allow\nusage of P1 inputs for other purpose. \nFigure 23.  Keyboard Interface Block Diagram\nFigure 24.  Keyboard Input Circuitry\nPower Reduction Mode P1 inputs allow exit from idle and power down modes as detailed in Section “Power-\ndown Mode”, page 82. P1:x\nKBE. xKBF. x\nKBLS. x0\n1VCC\nInternal Pull-up\nP1.0\nKeyboard Interface\nInterrupt RequestKBD\nIEN1Input Circuitry\nP1.1 Input Circuitry\nP1.2 Input Circuitry\nP1.3 Input Circuitry\nP1.4 Input Circuitry\nP1.5 Input Circuitry\nP1.6 Input Circuitry\nP1.7 Input CircuitryKBDIT\n65AT89C51RB2/RC2\n4180E–8051–10/06Registers Table 51.  KBF Register\nKBF - Keyboard Flag Register (9Eh)\nReset Value = 0000 0000b\nThis register is read only access, all flags are automatically cleared by reading the\nregister.76543210\nKBF7 KBF6 KBF5 KBF4 KBF3 KBF2 KBF1 KBF0\nBit \nNumberBit \nMnemonic Description\n7K B F 7Keyboard Line 7 Flag\nSet by hardware when the Port line 7 detects a programmed level. It generates a \nKeyboard interrupt request if the KBKBIE. 7 bit in KBIE register is set. Must be cleared by software. \n6K B F 6Keyboard Line 6 Flag \nSet by hardware when the Port line 6 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 6 bit in KBIE register is set. Must be cleared by software. \n5K B F 5Keyboard Line 5 Flag \nSet by hardware when the Port line 5 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 5 bit in KBIE register is set. Must be cleared by software. \n4K B F 4Keyboard Line 4 Flag \nSet by hardware when the Port line 4 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 4 bit in KBIE register is set. Must be cleared by software. \n3K B F 3Keyboard Line 3 Flag\nSet by hardware when the Port line 3 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 3 bit in KBIE register is set. Must be cleared by software. \n2K B F 2Keyboard Line 2 Flag\nSet by hardware when the Port line 2 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 2 bit in KBIE register is set. Must be cleared by software. \n1K B F 1Keyboard Line 1 Flag \nSet by hardware when the Port line 1 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 1 bit in KBIE register is set. Must be cleared by software. \n0K B F 0Keyboard Line 0 Flag \nSet by hardware when the Port line 0 detects a programmed level. It generates a \nKeyboard interrupt request if the KBIE. 0 bit in KBIE register is set. Must be cleared by software. \n66 AT89C51RB2/RC2\n4180E–8051–10/06Table 52.  KBE Register\nKBE - Keyboard Input Enable Register (9Dh)\nReset Value = 0000 0000b76543210\nKBE7 KBE6 KBE5 KBE4 KBE3 KBE2 KBE1 KBE0\nBit\nNumberBit\nMnemonic Description\n7 KBE7Keyboard Line 7 Enable Bit\nCleared to enable standard I/O pin. Set to enable KBF. 7 bit in KBF register to generate an interrupt request. \n6 KBE6Keyboard Line 6 Enable Bit\nCleared to enable standard I/O pin. \nSet to enable KBF. 6 bit in KBF register to generate an interrupt request. \n5 KBE5Keyboard Line 5 Enable Bit\nCleared to enable standard I/O pin. \nSet to enable KBF. 5 bit in KBF register to generate an interrupt request. \n4 KBE4Keyboard Line 4 Enable Bit\nCleared to enable standard I/O pin. Set to enable KBF. 4 bit in KBF register to generate an interrupt request. \n3 KBE3Keyboard Line 3 Enable Bit\nCleared to enable standard I/O pin. \nSet to enable KBF. 3 bit in KBF register to generate an interrupt request. \n2 KBE2Keyboard Line 2 Enable Bit\nCleared to enable standard I/O pin. \nSet to enable KBF. 2 bit in KBF register to generate an interrupt request. \n1 KBE1Keyboard Line 1 Enable Bit\nCleared to enable standard I/O pin. Set to enable KBF. 1 bit in KBF register to generate an interrupt request. \n0 KBE0Keyboard Line 0 Enable Bit\nCleared to enable standard I/O pin. \nSet to enable KBF. 0 bit in KBF register to generate an interrupt request. \n67AT89C51RB2/RC2\n4180E–8051–10/06Table 53.  KBLS Register\nKBLS - Keyboard Level Selector Register (9Ch)\nReset Value = 0000 0000b76543210\nKBLS7 KBLS6 KBLS5 KBLS4 KBLS3 KBLS2 KBLS1 KBLS0\nBit \nNumberBit \nMnemonic Description\n7K B L S 7Keyboard Line 7 Level Selection Bit\nCleared to enable a low level detection on Port line 7. Set to enable a high level detection on Port line 7. \n6K B L S 6Keyboard Line 6 Level Selection Bit\nCleared to enable a low level detection on Port line 6. \nSet to enable a high level detection on Port line 6. \n5K B L S 5Keyboard Line 5 Level Selection Bit\nCleared to enable a low level detection on Port line 5. \nSet to enable a high level detection on Port line 5. \n4K B L S 4Keyboard Line 4 Level Selection Bit\nCleared to enable a low level detection on Port line 4. Set to enable a high level detection on Port line 4. \n3K B L S 3Keyboard Line 3 Level Selection Bit\nCleared to enable a low level detection on Port line 3.\nSet to enable a high level detection on Port line 3.\n2K B L S 2Keyboard Line 2 Level Selection Bit\nCleared to enable a low level detection on Port line 2.\nSet to enable a high level detection on Port line 2.\n1K B L S 1Keyboard Line 1 Level Selection Bit\nCleared to enable a low level detection on Port line 1.Set to enable a high level detection on Port line 1.\n0K B L S 0Keyboard Line 0 Level Selection Bit\nCleared to enable a low level detection on Port line 0.\nSet to enable a high level detection on Port line 0.\n68 AT89C51RB2/RC2\n4180E–8051–10/06Serial Port Interface \n(SPI)The Serial Peripheral Interface Module (SPI) allows full-duplex, synchronous, serial\ncommunication between the MCU and peripheral devices, including other MCUs. \nFeatures Features of the SPI Module include the following:\n\x81 Full-duplex, three-wire synchronous transfers\n\x81 Master or Slave operation\n\x81 Eight programmable Master clock rates\n\x81 Serial clock with programmable polarity and phase\n\x81 Master Mode fault error flag with MCU interrupt capability\n\x81 Write collision flag protection\nSignal Description Figure 25 shows a typical SPI bus configuration using one Master controller and many\nSlave peripherals. The bus is made of three wires connecting all the devices.\nFigure 25.  SPI Master/Slaves Interconnection\nThe Master device selects the individual Slave devices by using four pins of a parallel\nport to control the four SS  pins of the Slave devices. \nMaster Output Slave Input \n(MOSI)This 1-bit signal is directly connected between the Master Device and a Slave Device.\nThe MOSI line is used to transfer data in series from the Master to the Slave. Therefore,it is an output signal from the Master, and an input signal to a Slave. A Byte (8-bit word)is transmitted most significant bit (MSB) first, least significant bit (LSB) last. \nMaster Input Slave Output \n(MISO)This 1-bit signal is directly connected between the Slave Device and a Master Device.\nThe MISO line is used to transfer data in series from the Slave to the Master. Therefore,it is an output signal from the Slave, and an input signal to the Master. A Byte (8-bitword) is transmitted most significant bit (MSB) first, least significant bit (LSB) last. \nSPI Serial Clock (SCK) This signal is used to synchronize the data movement both in and out of the devices\nthrough their MOSI and MISO lines. It is driven by the Master for eight clock cycleswhich allows to exchange one Byte on the serial lines. \nSlave Select (SS\n) Each Slave peripheral is selected by one Slave Select pin (SS ). This signal must stay\nlow for any message for a Slave. It is obvious that only one Master (SS  high level) canSlave 1\nMISO\nMOSISCKSSMISOMOSISCKSS\nPORT0\n12\n3\nSlave 3\nMISO\nMOSI\nSCK\nSS\nSlave 4MISO\nMOSI\nSCKSSSlave 2\nMISOMOSISCKSSVDD\nMaster\n69AT89C51RB2/RC2\n4180E–8051–10/06drive the network. The Master may select each Slave device by software through port\npins (Figure 26). To prevent bus conflicts on the MISO line, only one slave should beselected at a time by the Master for a transmission. \nIn a Master configuration, the SS\n line can be used in conjunction with the MODF flag in\nthe SPI Status register (SPSTA) to prevent multiple masters from driving MOSI andSCK (see Error conditions). \nA high level on the SS\n pin puts the MISO line of a Slave SPI in a high-impedance state. \nThe SS  pin could be used as a general-purpose if the following conditions are met:\n\x81 The device is configured as a Master and the SSDIS control bit in SPCON is set. \nThis kind of configuration can be found when only one Master is driving the network and there is no way that the SS\n pin could be pulled low. Therefore, the MODF flag in \nthe SPSTA will never be set(1). \n\x81 The Device is configured as a Slave with CPHA and SSDIS control bits set(2). This \nkind of configuration can happen when the system comprises one Master and one Slave only. Therefore, the device should always be selected and there is no reason that the Master uses the SS\n pin to select the communicating Slave device. \nNote: 1. Clearing SSDIS control bit does not clear MODF.\n2. Special care should be taken not to set SSDIS control bit when CPHA = ’0’ because\nin this mode, the SS  is used to start the transmission. \nBaud Rate In Master mode, the baud rate can be selected from a baud rate generator which is con-\ntrolled by three bits in the SPCON register:  SPR2, SPR1 and SPR0.The Master clock isselected from one of seven clock rates resulting from the division of the internal clock by2, 4, 8, 16, 32, 64 or 128. \nTable 54 gives the different clock rates selected by SPR2:SPR1:SPR0.\nTable 54.  SPI Master Baud Rate Selection\nSPR2 SPR1 SPR0 Clock Rate Baud Rate Divisor (BD)\n000 FCLK PERIPH  /2 2\n001 FCLK PERIPH  /4 4\n010 FCLK PERIPH /8 8\n011 FCLK PERIPH  /16 16\n100 FCLK PERIPH  /32 32\n101 FCLK PERIPH  /64 64\n110 FCLK PERIPH  /128 128\n1 1 1 Don’t Use No BRG\n70 AT89C51RB2/RC2\n4180E–8051–10/06Functional Description Figure 26 shows a detailed structure of the SPI Module. \nFigure 26.  SPI Module Block Diagram\nOperating Modes The Serial Peripheral Interface can be configured in one of the two modes:  Master\nmode or Slave mode. The configuration and initialization of the SPI Module is madethrough one register:\n\x81 The Serial Peripheral Control register (SPCON)\nOnce the SPI is configured, the data exchange is made using:\n\x81S P C O N\n\x81 The Serial Peripheral STAtus register (SPSTA)\n\x81 The Serial Peripheral DATa register (SPDAT)\nDuring an SPI transmission, data is simultaneously transmitted (shifted out serially) and\nreceived (shifted in serially). A serial clock line (SCK) synchronizes shifting and sam-pling on the two serial data lines (MOSI and MISO). A Slave Select line (SS\n) allows\nindividual selection of a Slave SPI device; Slave devices that are not selected do notinterfere with SPI bus activities. \nWhen the Master device transmits data to the Slave device via the MOSI line, the Slave\ndevice responds by sending data to the Master device via the MISO line. This impliesfull-duplex transmission with both data out and data in synchronized with the same clock(Figure 27). Shift Register\n01234567Internal Bus\nPin\nControl\nLogicMISOMOSI\nSCKM\nSClock\nLogicClock\nDivider\nClockSelect/4\n/64\n/128\nSPI Interrupt Request8-bit bus\n1-bit signa lSSFCLK PERIPH\n/32/8\n/16Receive Data RegisterSPDAT\nSPI\nControl\nSPSTACPHA SPR0 SPR1 CPOL MSTR SSDIS SPEN SPR2\nSPCON\nWCOL MODF SPIF -- - - -\n71AT89C51RB2/RC2\n4180E–8051–10/06Figure 27.  Full-Duplex Master-Slave Interconnection\nMaster Mode The SPI operates in Master mode when the Master bit, MSTR (1), in the SPCON register\nis set. Only one Master SPI device can initiate transmissions. Software begins the trans-mission from a Master SPI Module by writing to the Serial Peripheral Data Register(SPDAT). If the shift register is empty, the Byte is immediately transferred to the shiftregister. The Byte begins shifting out on MOSI pin under the control of the serial clock,SCK. Simultaneously, another Byte shifts in from the Slave on the Master’s MISO pin.The transmission ends when the Serial Peripheral transfer data flag, SPIF, in SPSTAbecomes set. At the same time that SPIF becomes set, the received Byte from the Slaveis transferred to the receive data register in SPDAT. Software clears SPIF by readingthe Serial Peripheral Status register ( SPSTA) with the SPIF bit set, and then reading the\nSPDAT. \nSlave Mode The SPI operates in Slave mode when the Master bit, MSTR\n (2), in the SPCON register is\ncleared. Before a data transmission occurs, the Slave Select pin, SS , of the Slave\ndevice must be set to ’0’. SS  must remain low until the transmission is complete. \nIn a Slave SPI Module, data enters the shift register under the control of the SCK from\nthe Master SPI Module. After a Byte enters the shift register, it is immediately trans-ferred to the receive data register in SPDAT, and the SPIF bit is set. To prevent anoverflow condition, Slave software must then read the SPDAT before another Byteenters the shift register\n (3). A Slave SPI must complete the write to the SPDAT (shift reg-\nister) at least one bus cycle before the Master SPI starts a transmission. If the write tothe data register is late, the SPI transmits the data already in the shift register from theprevious transmission. The maximum SCK frequency allowed in slave mode is \nFCLK PERIPH\n/4.\nTransmission Formats Software can select any of four combinations of serial clock (SCK) phase and polarity\nusing two bits in the SPCON: the Clock Polarity (CPOL (4)) and the Clock Phase\n(CPHA4). CPOL defines the default SCK line level in idle state. It has no significant\neffect on the transmission format. CPHA defines the edges on which the input data aresampled and the edges on which the output data are shifted (Figure 28 and Figure 29).The clock phase and polarity should be identical for the Master SPI device and the com-municating Slave device. 8-bit Shift register\nSPI \nClock Generator\nMaster MCU8-bit Shift registerMISO MISO\nMOSIMOSI\nSCK SCK\nVSSVDDSS SS\nSlave MCU\n1. The SPI Module should be configured as a Master before it is enabled (SPEN set). Also,\nthe Master SPI should be configured before the Slave SPI. \n2. The SPI Module should be configured as a Slave before it is enabled (SPEN set). \n3. The maximum frequency of the SCK for an SPI configured as a Slave is the bus clock\nspeed. \n4. Before writing to the CPOL and CPHA bits, the SPI should be disabled (SPEN = ’0’). \n72 AT89C51RB2/RC2\n4180E–8051–10/06Figure 28.  Data Transmission Format (CPHA = 0)\nFigure 29.  Data Transmission Format (CPHA = 1)\nFigure 30.  CPHA/SS  Timing\nAs shown in Figure 28, the first SCK edge is the MSB capture strobe. Therefore, the\nSlave must begin driving its data before the first SCK edge, and a falling edge on the SS\npin is used to start the transmission. The SS  pin must be toggled high and then low\nbetween each Byte transmitted (Figure 30). \nFigure 29 shows an SPI transmission in which CPHA is ’1’. In this case, the Master\nbegins driving its MOSI pin on the first SCK edge. Therefore, the Slave uses the firstSCK edge as a start transmission signal. The SS\n pin can remain low between transmis-\nsions (Figure 30). This format may be preffered in systems having only one Master andonly one Slave driving the MISO data line. MSB bit6 bit5 bit4 bit3 bit2 bit1 LSB\nbit6 bit5 bit4 bit3 bit2 bit1 MSB LSB13 2 4 5678\nCapture PointSS (to Slave)MISO (from Slave)MOSI (from Master)SCK (CPOL = 1)SCK (CPOL = 0)SPEN (Internal)SCK Cycle Number\nMSB bit6 bit5 bit4 bit3 bit2 bit1 LSB\nbit6 bit5 bit4 bit3 bit2 bit1 MSB LSB13 2 4 5678\nCapture PointSS (to Slave)MISO (from Slave)MOSI (from Master)SCK (CPOL = 1)SCK (CPOL = 0)SPEN (Internal)SCK Cycle Number\nByte 1 Byte 2 Byte 3 MISO/MOSI\nMaster SS\nSlave SS\n(CPHA = 1)Slave SS\n(CPHA = 0)\n73AT89C51RB2/RC2\n4180E–8051–10/06Error Conditions The following flags in the SPSTA signal SPI error c onditions:\nMode Fault (MODF) Mode Fault error in Master mode SPI indicates that the level on the Slave Select (SS )\npin is inconsistent with the actual mode of the device. MODF is set to warn that theremay be a multi-master conflict for system control. In this case, the SPI system isaffected in the following ways:  \n\x81 An SPI receiver/error CPU interrupt request is generated\n\x81 The SPEN bit in SPCON is cleared. This disables the SPI\n\x81 The MSTR bit in SPCON is cleared\nWhen SS\n Disable (SSDIS) bit in the SPCON register is cleared, the MODF flag is set\nwhen the SS  signal becomes ’0’. \nHowever, as stated before, for a system with one Master, if the SS  pin of the Master\ndevice is pulled low, there is no way that another Master attempts to drive the network.In this case, to prevent the MODF flag from being set, software can set the SSDIS bit inthe SPCON register and therefore making the SS\n pin as a general-purpose I/O pin. \nClearing the MODF bit is accomplished by a read of SPSTA register with MODF bit set,\nfollowed by a write to the SPCON register. SPEN Control bit may be restored to its orig-inal set state after the MODF bit has been cleared. \nWrite Collision (WCOL) A Write Collision (WCOL) flag in the SPSTA is set when a write to the SPDAT register is\ndone during a transmit sequence. \nWCOL does not cause an interruption, and the transfer continues uninterrupted. Clearing the WCOL bit is done through a software sequence of an access to SPSTA\nand an access to SPDAT. \nOverrun Condition An overrun condition occurs when the Master device tries to send several data Bytes\nand the Slave devise has not cleared the SPIF bit issuing from the previous data Bytetransmitted. In this case, the receiver buffer contains the Byte sent after the SPIF bit waslast cleared. A read of the SPDAT returns this Byte. All others Bytes are lost. \nThis condition is not detected by the SPI peripheral. \nSS Error Flag (SSERR) A Synchronous Serial Slave Error occurs when SS\n goes high before the end of a\nreceived data in slave mode. SSERR does not cause in interruption, this bit is clearedby writing 0 to SPEN bit (reset of the SPI state machine).\nInterrupts Two SPI status flags can generate a CPU interrupt requests:\nTable 55.  SPI Interrupts\nSerial Peripheral data transfer flag, SPIF:  This bit is set by hardware when a transfer\nhas been completed. SPIF bit generates transmitter CPU interrupt requests. \nMode Fault flag, MODF:  This bit becomes set to indicate that the level on the SS is\ninconsistent with the mode of the SPI. MODF with SSDIS reset, generates receiver/errorCPU interrupt requests. When SSDIS is set, no MODF interrupt request is generated.\nFigure 31 gives a logical view of the above statements. Flag Request\nSPIF (SP data transfer) SPI Transmitter Interrupt request MODF (Mode Fault) SPI Receiver/Error Interrupt Request (if SSDIS = ’0’)\n74 AT89C51RB2/RC2\n4180E–8051–10/06Figure 31.  SPI Interrupt Requests Generation\nRegisters There are three registers in the Module that provide control, status and data storage functions. These registers\nare describes in the following paragraphs. \nSerial Peripheral Control \nRegister (SPCON)\x81 The Serial Peripheral Control Register does the following:\n\x81 Selects one of the Master clock rates\n\x81 Configure the SPI Module as Master or Slave\n\x81 Selects serial clock polarity and phase\n\x81 Enables the SPI Module\n\x81 Frees the SS pin for a general-purpose\nTable 56 describes this register and explains the use of each bit\nTable 56.  SPCON Register\nSPCON - Serial Peripheral Control Register (0C3H)SSDISMODF\nCPU Interrupt RequestSPI Receiver/errorCPU Interrupt RequestSPI Transmitter SPI\nCPU Interrupt RequestSPIF\n76543210\nSPR2 SPEN SSDIS MSTR CPOL CPHA SPR1 SPR0\nBit Number Bit Mnemonic Description\n7 SPR2Serial Peripheral Rate 2\nBit with SPR1 and SPR0 define the clock rate.\n6 SPENSerial Peripheral Enable\nCleared to disable the SPI interface.Set to enable the SPI interface.\n5S S D I SSS\n Disable\nCleared to enable SS  in both Master and Slave modes.\nSet to disable SS  in both Master and Slave modes. In Slave mode, \nthis bit has no effect if CPHA =’0’. When SSDIS is set, no MODF \ninterrupt request is generated .\n4M S T RSerial Peripheral Master\nCleared to configure the SPI as a Slave.Set to configure the SPI as a Master.\n3C P O LClock Polarity\nCleared to have the SCK set to ’0’ in idle state.Set to have the SCK set to ’1’ in idle low.\n2C P H AClock Phase\nCleared to have the data sampled when the SCK leaves the idle \nstate (see CPOL).\nSet to have the data sampled when the SCK returns to idle state (see \nCPOL).\n75AT89C51RB2/RC2\n4180E–8051–10/06Reset Value = 0001 0100b\nNot bit addressable\nSerial Peripheral Status Register \n(SPSTA)The Serial Peripheral Status Register contains flags to signal the following conditions:\n\x81 Data transfer complete\n\x81 Write collision\n\x81 Inconsistent logic level on SS  pin (mode fault error)\nTable 57 describes the SPSTA register and explains the use of every bit in the register. \nTable 57.  SPSTA Register\nSPSTA - Serial Peri pheral Status and Control register (0C4H)1SPR1SPR2  SPR1   SPR0  Serial Peripheral Rate\n00  0 FCLK PERIPH /2\n00  1  FCLK PERIPH /4\n01  0  FCLK PERIPH /8\n01  1 FCLK PERIPH /16\n10 0 FCLK PERIPH /32\n10  1 FCLK PERIPH /64\n11 0 FCLK PERIPH /128\n1 1  1 Invalid0 SPR0Bit Number Bit Mnemonic Description\n76543210\nSPIF WCOL SSERR MODF - - - -\nBit \nNumberBit \nMnemonic Description\n7 SPIFSerial Peripheral Data Transfer Flag\nCleared by hardware to indicate data transfer is in progress or has been \napproved by a clearing sequence. \nSet by hardware to indicate that the data transfer has been completed. \n6W C O LWrite Collision Flag\nCleared by hardware to indicate that no collision has occurred or has been \napproved by a clearing sequence. \nSet by hardware to indicate that a collision has been detected. \n5 SSERRSynchronous Serial Slave Error Flag\nSet by hardware when SS  is deasserted before the end of a received data.\nCleared by disabling the SPI (clearing SPEN bit in SPCON). \n4M O D FMode Fault\nCleared by hardware to indicate that the SS  pin is at appropriate logic level, or \nhas been approved by a clearing sequence. \nSet by hardware to indicate that the SS  pin is at inappropriate logic level.\n3-Reserved\nThe value read from this bit is indeterminate. Do not set this bit\n2-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n76 AT89C51RB2/RC2\n4180E–8051–10/06Reset Value = 00X0 XXXXb\nNot Bit addressable\nSerial Peripheral DATa Register \n(SPDAT)The Serial Peripheral Data Register (Table 58) is a read/write buffer for the receive data\nregister. A write to SPDAT places data directly into the shift register. No transmit buffer isavailable in this model. \nA Read of the SPDAT returns the value located in the receive buffer and not the content\nof the shift register. \nTable 58.  SPDAT Register\nSPDAT - Serial Peripheral Data Register (0C5H)\nReset Value = Indeterminate\nR7:R0:  Receive data bitsSPCON, SPSTA and SPDAT registers may be read and written at any time while there\nis no on-going exchange. However, special care should be taken when writing to themwhile a transmission is on-going:\n\x81 Do not change SPR2, SPR1 and SPR0\n\x81 Do not change CPHA and CPOL\n\x81 Do not change MSTR\n\x81 Clearing SPEN would immediately disable the peri pheral\n\x81 Writing to the SPDAT will cause an overflow.1-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n0-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.Bit \nNumberBit \nMnemonic Description\n76543210\nR7 R6 R5 R4 R3 R2 R1 R0\n77AT89C51RB2/RC2\n4180E–8051–10/06Hardware Watchdog \nTimerThe WDT is intended as a recovery method in situations where the CPU may be sub-\njected to software upset. The WDT consists of a 14-bit counter and the Watchdog TimerReset (WDTRST) SFR. The WDT is by default disabled from exiting reset. To enablethe WDT, user must write 01EH and 0E1H in sequence to the WDTRST, SFR location0A6H. When WDT is enabled, it will increment every machine cycle while the oscillatoris running and there is no way to disable the WDT except through reset (either hardwarereset or WDT overflow reset). When WDT overflows, it will drive an output R ESET HIGH\npulse at the RST-pin. \nUsing the WDT To enable the WDT, user must write 01EH and 0E1H in sequence to the WDTRST, SFRlocation 0A6H. When WDT is enabled, the user needs to service it by writing to 01EHand 0E1H to WDTRST to avoid WDT overfl ow. The 14-bit counter overflows when it\nreaches 16383 (3FFFH) and this will reset t he device. When WDT is enabled, it will\nincrement every machine cycle while the oscillator is running. This means the user mustreset the WDT at least every 16383 machine cycle. To reset the WDT the user mustwrite 01EH and 0E1H to WDTRST. WDTRST is a write only register. The WDT countercannot be read or written. When WDT overflows, it will generate an output RESET pulseat the RST-pin. The RESET pulse duration is 96 x T\nCLK PERIPH , where TCLK PERIPH = 1/FCLK\nPERIPH . To make the best use of the WDT, it should be serviced in those sections of code\nthat will periodically be executed within the time required to prevent a WDT reset. \nTo have a more powerful WDT, a 27 counter has been added to extend the Time-out\ncapability, ranking from 16 ms to 2 s @ FOSCA = 12 MHz. To manage this feature, see\nWDTPRG register description, Table 59. \nTable 59.  WDTRST Register\nWDTRST - Watchdog Reset Register (0A6h)\nReset Value = XXXX XXXXb\nWrite only, this SFR is used to reset/enable the WDT by writing 01EH then 0E1H in\nsequence. 76543210\n--------\n78 AT89C51RB2/RC2\n4180E–8051–10/06Table 60.  WDTPRG Register\nWDTPRG - Watchdog Timer Out Register (0A7h)\nReset Value = XXXX X000\nWDT During Power-down \nand IdleIn Power-down mode the oscillator stops, which means the WDT also stops. While in\nPower-down mode the user does not need to service the WDT. There are two methodsof exiting Power-down mode:  by a hardware reset or via a level activated external inter-rupt which is enabled prior to entering Power-down mode. When Power-down is exitedwith hardware reset, servicing the WDT should occur as it normally should whenever theAT89C51RB2/RC2 is reset. Exiting Power-down with an interrupt is significantly differ-ent. The interrupt is held low long enough for the oscillator to stabilize. When theinterrupt is brought high, the interrupt is serviced. To prevent the WDT from resetting thedevice while the interrupt pin is held low, the WDT is not started until the interrupt ispulled high. It is suggested that the WDT be reset during the interrupt service routine. \nTo ensure that the WDT does not overflow within a few states of exiting of power-down,\nit is better to reset the WDT just before entering power-down. \nIn the Idle mode, the oscillator cont inues to run. To prevent the WDT from resetting the\nAT89C51RB2/RC2 while in Idle mode, the user should always set up a timer that willperiodically exit Idle, service the WDT, and re-enter Idle mode. 76543210\n- - - - - S2 S1 S0\nBit \nNumberBit       \nMnemonic Description\n7-\nReserved\nThe value read from this bit is undetermined. Do not try to set this bit. 6-\n5-4-3-2S 2 WDT Time-out Select Bit 2\n1S 1 WDT Time-out Select Bit 1\n0S 0 WDT Time-out Select Bit 0\nS2\nS1 S0Selected Time-out\n00 0 ( 214 - 1) machine cycles, 16. 3 ms @ FOSCA  = 12 MHz\n00 1 ( 215 - 1) machine cycles, 32.7 ms @ FOSCA = 12 MHz\n01 0  ( 216 - 1) machine cycles, 65. 5 ms @ FOSCA = 12 MHz\n01 1 ( 217 - 1) machine cycles, 131 ms @ FOSCA = 12 MHz\n10 0 ( 218 - 1) machine cycles, 262 ms @ FOSCA = 12 MHz\n10 1  ( 219 - 1) machine cycles, 542 ms @ FOSCA = 12 MHz\n11 0 ( 220 - 1) machine cycles, 1.05 s @ FOSCA = 12 MHz\n11 1  ( 221 - 1) machine cycles, 2.09 s @ FOSCA = 12 MHz\n79AT89C51RB2/RC2\n4180E–8051–10/06ONCE™ Mode (ON \nChip Emulation)The ONCE mode facilitates testing and debugging of systems using AT89C51RB2/RC2\nwithout removing the circuit from the board. The ONCE mode is invoked by driving cer-tain pins of the AT89C51RB2/RC2; the following sequence must be exercised:\n\x81 Pull ALE low while the device is in reset (RST high) and PSEN\n is high. \n\x81 Hold ALE low as RST is deactivated. \nWhile the AT89C51RB2/RC2 is in ONCE mode, an emulator or test CPU can be used to\ndrive the circuit. Table 61 shows the status of the port pins during ONCE mode. \nNormal operation is restored when normal reset is applied. \nTable 61.  External Pin Status during ONCE Mode\nALE PSEN Port 0 Port 1 Port 2 Port 3 XTAL1/2\nWeak pull-up Weak pull-up Float Weak pull-up Weak pull-up Weak pull-up Active\n80 AT89C51RB2/RC2\n4180E–8051–10/06Power Management Two power reduction modes are implemented in the AT89C51RB2/RC2: the Idle mode\nand the Power-down mode. These modes are detailed in the following sections. In addi-tion to these power reduction modes, the clocks of the core and peripherals can bedynamically divided by 2 using the X2 mode detailed in Section “X2 Feature”.\nReset In order to start-up (cold reset) or to restart (warm reset) properly the microcontroller, anhigh level has to be applied on the RST pin. A bad level leads to a wrong initialization ofthe internal registers like SFRs, Program Counter… and to unpredictable behavior ofthe microcontroller. A proper device reset initializes the AT89C51RB2/RC2 and vectorsthe CPU to address 0000h. RST input has a pull-down resistor allowing power-on resetby simply connecting an external capacitor to V\nDD as shown in Figure 32. A warm reset\ncan be applied either directly on the RST pin or indirectly by an internal reset sourcesuch as the watchdog timer. Resistor value and input characteristics are discussed inthe Section “DC Characteristics” of the AT89C51RB2/RC2 datasheet.\nFigure 32.  Reset Circuitry and Power-On Reset\nCold Reset 2 conditions are required before enabling a CPU start-up:\n\x81V\nDD must reach the specified VDD range\n\x81 The level on X1 input pin must be outside the specification (VIH, VIL)\nIf one of these 2 conditions are not met, the microcontroller does not start correctly and\ncan execute an instruction fetch from anywhere in the program space. An active levelapplied on the RST pin must be maintained till both of the above conditions are met. Areset is active when the level V\nIH1 is reached and when the pulse width covers the\nperiod of time where VDD and the oscillator are not stabilized. 2 parameters have to be\ntaken into account to determine the reset pulse width:\n\x81VDD rise time,\n\x81 Oscillator startup time.\nTo determine the capacitor value to implement, the highest value of these 2 parameters\nhas to be chosen. Table 1 gives some capacitor values examples for a minimum RRST of\n50 K Ω and different oscillator startup and VDD rise times.RRSTRST\nVSSTo CPU Core\nand Peripherals\nRSTVDD\n+\nPower-on Reset RST input circuitryPVDD From Internal\nReset Source\n81AT89C51RB2/RC2\n4180E–8051–10/06Table 1.  Minimum Reset Capacitor Value for a 50 k Ω Pull-down Resistor(1)\nNote: These values assume VDD starts from 0V to the nominal value. If the time between 2\non/off sequences is too fast, the power-supply de-coupling capacitors may not be fullydischarged, leading to a bad reset sequence.\nWarm Reset To achieve a valid reset, the reset signal must be maintained for at least 2 machine\ncycles (24 oscillator clock periods) while the oscillator is running. The number of clockperiods is mode independent (X2 or X1).\nWatchdog Reset As detailed in Section “Hardware Watchdog Timer”, page 77, the WDT generates a 96-\nclock period pulse on the RST pin. In order to properly propagate this pulse to the rest ofthe application in case of external capacitor or power-supply supervisor circuit, a 1 k Ω\nresistor must be added as shown Figure 33.\nFigure 33.  Reset Circuitry for WDT Reset-out UsageOscillator\nStart-Up TimeVDD Rise Time\n1 ms 10 ms 100 ms\n5 ms 820 nF 1.2 µF 12 µF\n20 ms 2.7 µF 3.9 µF 12 µF\nRRSTRST\nVSSTo CPU Core\nand PeripheralsVDD\n+\nPVDD From WDT\nReset Source\nVSSVDD\nRST1K\nTo OtherOn-board\nCircuitry\n82 AT89C51RB2/RC2\n4180E–8051–10/06Reset Recommendation \nto Prevent Flash \nCorruptionAn example of bad initialization situation may occur in an instance where the bit\nENBOOT in AUXR1 register is initialized from the hardware bit BLJB upon reset. Sincethis bit allows mapping of the bootloader in the code area, a reset failure can be critical. \nIf one wants the ENBOOT cleared in order to unmap the boot from the code area (yet\ndue to a bad reset) the bit ENBOOT in SFRs may be set. If the value of ProgramCounter is accidently in the range of the boot memory addresses then a Flash access(write or erase) may corrupt the Flash on-chip memory.\nIt is recommended to use an external reset circuitry featuring power supply monitoring to\nprevent system malfunction during periods of insufficient power supply voltage (powersupply failure, power supply switched off).\nIdle Mode An instruction that sets PCON.0 indicates that it is the last instruction to be executedbefore going into Idle mode. In Idle mode, the internal clock signal is gated off to theCPU, but not to the interrupt, Timer, and Serial Port functions. The CPU status is pre-served in its entirety: the Stack Pointer, Program Counter, Program Status Word,Accumulator and all other registers maintain their data during idle. The port pins hold thelogical states they had at the time Idle was activated. ALE and PSEN hold at logic high\nlevel. \nThere are two ways to terminate the Idle mode. Activation of any enabled interrupt will\ncause PCON.0 to be cleared by hardware, terminating the Idle mode. The interrupt willbe serviced, and following RETI the next instruction to be executed will be the one fol-lowing the instruction that put the device into idle. \nThe flag bits GF0 and GF1 can be used to give an indication if an interrupt occurred dur-\ning normal operation or during idle. For example, an instruction that activates idle canalso set one or both flag bits. When idle is terminated by an interrupt, the interrupt ser-vice routine can examine the flag bits. \nThe other way of terminating the Idle mode is with a hardware reset. Since the clock\noscillator is still running, the hardware reset needs to be held active for only twomachine cycles (24 oscillator periods) to complete the reset. \nPower-down Mode To save maximum power, a Power-down mode can be invoked by software (see Table14, PCON register).\nIn Power-down mode, the oscillator is stopped and the instruction that invoked Power-\ndown mode is the last instruction executed. The internal RAM and SFRs retain theirvalue until the Power-down mode is terminated. V\nCC can be lowered to save further\npower. Either a hardware reset or an external interrupt can cause an exit from Power-down. To properly terminate Power-down, the reset or external interrupt should not beexecuted before V\nCC is restored to its normal operating level and must be held active\nlong enough for the o scillator to restart and stabilize. \nOnly external interrupts INT0 , INT1  and Keyboard Interrupts are useful to exit from\nPower-down. For that, interrupt must be enabled and configured as level or edge sensi-tive interrupt input. When Keyboard Interrupt occurs after a power down mode, 1024clocks are necessary to exit to power down mode and enter in operating mode. \nHolding the pin low restarts the oscillator but bringing the pin high completes the exit as\ndetailed in Figure 34. When both interrupts are enabled, the oscillator restarts as soonas one of the two inputs is held low and power down exit will be completed when the firstinput will be released. In this case, the higher priority interrupt service routine is exe-cuted. Once the interrupt is serviced, the next instruction to be executed after RETI will\n83AT89C51RB2/RC2\n4180E–8051–10/06be the one following the instruction that puts the AT89C51RB2/RC2 into Power-down\nmode. \nFigure 34.  Power-down Exit Waveform\nExit from Power-down by reset redefines all the SFRs, exit from Power-down by exter-\nnal interrupt does no affect the SFRs. \nExit from Power-down by either reset or external interrupt or keyboard interrupt does not\naffect the internal RAM content. \nNote: If idle mode is activated with Power-down mode (IDL and PD bits set), the exit sequence\nis unchanged, when execution is vectored to interrupt, PD and IDL bits are cleared andidle mode is not entered. \nTable 62 shows the state of ports during idle and power-down modes. \nPort 0 can force a 0 level. A "one" will leave port floating. INT1INT0\nXTALA\nPower-down Phase Oscillator Restart Phase Active Phase Active Phaseor\nXTALB\nTable 62.  State of Ports\nMode Program Memory ALE PSEN PORT0 PORT1 PORT2 PORT3\nIdle Internal 1 1 Port Data(1)Port Data Port Data Port Data\nIdle External 1 1 Floating Port Data Address Port Data\nPower Down Internal 0 0 Port Data(1)Port Data Port Data Port Data\nPower Down External 0 0 Floating Port Data Port Data Port Data\n84 AT89C51RB2/RC2\n4180E–8051–10/06Power-off Flag The Power-off flag allows the user to distinguish between a “cold start” reset and a\n“warm start” reset. \nA cold start reset is the one induced by VCC switch-on. A warm start reset occurs while\nVCC is still applied to the device and could be generated by an exit from Power-down. \nThe Power-off flag (POF) is located in PCON register (Table 63). POF is set by hard-\nware when VCC rises from 0 to its nominal voltage. The POF can be set or cleared by\nsoftware allowing the user to determine the type of reset. \nTable 63.  PCON Register\nPCON - Power Control Register (87h)\nReset Value = 00X1 0000b\nNot bit addressable76543210\nSMOD1 SMOD0 - POF GF1 GF0 PD IDL\nBit \nNumberBit        \nMnemonic Description\n7S M O D 1Serial port Mode Bit 1\nSet to select double baud rate in mode 1, 2 or 3.\n6S M O D 0Serial port Mode Bit 0\nCleared to select SM0 bit in SCON register. Set to select FE bit in SCON register. \n5-Reserved\nThe value read from this bit is indeterminate. Do not set this bit. \n4P O FPower-off Flag\nCleared to recognize next reset type. Set by hardware when V\nCC rises from 0 to its nominal voltage. Can also be set by \nsoftware. \n3G F 1General-purpose Flag\nCleared by user for general-purpose usage. Set by user for general-purpose usage. \n2G F 0General-purpose Flag\nCleared by user for general-purpose usage. \nSet by user for general-purpose usage. \n1P DPower-down mode bit\nCleared by hardware when reset occurs. \nSet to enter power-down mode. \n0I D LIdle Mode Bit\nCleared by hardware when interrupt or reset occurs. Set to enter idle mode. \n85AT89C51RB2/RC2\n4180E–8051–10/06Reduced EMI Mode The ALE signal is used to demultiplex address and data buses on port 0 when used with\nexternal program or data memory. Nevertheless, during internal code execution, ALEsignal is still generated. In order to reduce EMI, ALE signal can be disabled by settingAO bit. \nThe AO bit is located in AUXR register at bit location 0.As soon as AO is set, ALE is no\nlonger output but remains active during MOVX and MOVC instructions and externalfetches. During ALE disabling, ALE pin is weakly pulled high. \nTable 64.  AUXR Register\nAUXR - Auxiliary Register (8Eh)\n76543210\nDPU - M0 - XRS1 XRS0 EXTRAM AO\nBit \nNumberBit     \nMnemonic Description\n7D P UDisable Weak Pull-up\nCleared to activate the permanent weak pull up when latch data is logic 1Set to disactive the weak pull-up.\n6-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n5M 0Pulse Length\nCleared to stretch MOVX control:  the RD\n and the WR  pulse length is 6 clock \nperiods (default). \nSet to stretch MOVX control:  the RD  and the WR  pulse length is 30 clock \nperiods. \n4-Reserved\nThe value read from this bit is indeterminate. Do not set this bit.\n3X R S 1 XRAM Size\nXRS1 XRS0 XRAM size\n0 0 256 Bytes (default)0 1 512 Bytes1 0 768 Bytes1 1 1024 Bytes2X R S 0\n1 EXTRAMEXTRAM Bit\nCleared to access internal XRAM using movx @ Ri\n @ DPTR. \nSet to access external memory. Programmed by hardware after Power-up regarding Hardware Security Byte \n(HSB), default setting, XRAM selected. \n0A OALE Output Bit\nCleared, ALE is emitted at a constant rate of 1/6 the oscillator frequency (or 1/3 if \nX2 mode is used). (default) Set, ALE is active only during a MOVX or MOVC \ninstruction is used. \n86 AT89C51RB2/RC2\n4180E–8051–10/06Flash EEPROM \nMemoryThe Flash memory increases EPROM and ROM functionality with in-circuit electrical\nerasure and programming. It contains 16K or 32K Bytes of program memory organizedin 128 or 256 pages of 128 Bytes. This memory is both parallel and serial In-system Pro-grammable (ISP). ISP allows devices to alter their own program memory in the actualend product under software control. A default serial loader (bootloader) program allowsISP of the Flash. \nThe programming does not require external dedicated programming voltage. The nec-\nessary high programming voltage is generated on-chip using the standard V\nCC pins of\nthe microcontroller. \nFeatures \x81 Flash EEPROM internal program memory. \n\x81 Boot vector allows user provided Flash loader code to reside anywhere in the Flash \nmemory space. This configuration provides flexibility to the user. \n\x81 Default loader in Boot ROM allows programming via the serial port without the need \nof a user-provided loader. \n\x81 Up to 64K Byte external program memory if the internal program memory is \ndisabled (EA = 0). \n\x81 Programming and erase voltage with standard 5V or 3V VCC supply. \n\x81 Read/Programming/Erase:\n– Byte-wise read without wait state\n– Byte or page erase and programming (10 ms)\n\x81 Typical programming time (32K Bytes) in 10 s\n\x81 Parallel programming with 87C51 compatible hardware interface to programmer\n\x81 Programmable security for the code in the Flash\n\x81 100K write cycles\n\x81 10 years data retention\nFlash Programming and \nErasureThe 16K or 32K Bytes Flash is programmed by Bytes or by pages of 128 Bytes. It is not\nnecessary to erase a Byte or a page before programming. The programming of a Byteor a page includes a self erase before programming. \nThere are three methods of programming the Flash memory:\n\x81 First, the on-chip ISP bootloader may be invoked which will use low level routines to \nprogram the pages. The interface used for serial downloading of Flash is the UART. \n\x81 Second, the Flash may be programmed or erased in the end-user application by \ncalling low-level routines through a common entry point in the Boot ROM. \n\x81 Third, the Flash may be programmed using the parallel method by using a \nconventional EPROM programmer. The parallel programming method used by these devices is similar to that used by EPROM 87C51 but it is not identical and the commercially available programmers need to have support for the AT89C51RB2/RC2. The bootloader and the Application Programming Interface (API) routines are located in the BOOT ROM. \n87AT89C51RB2/RC2\n4180E–8051–10/06Flash Registers and \nMemory MapThe AT89C51RB2/RC2 Flash memory uses several registers for its management:\n\x81 Hardware registers can only be accessed through the parallel programming modes \nwhich are handled by the parallel programmer. \n\x81 Software registers are in a special page of the Flash memory which can be \naccessed through the API or with the parallel programming modes. This page, called "Extra Flash Memory", is not in the internal Flash program memory addressing space. \nHardware Register The only hardware register of the AT89C51RB2/RC2 is called Hardware Security Byte\n(HSB). \nTable 65.  Hardware Security Byte (HSB)\nBoot Loader Jump Bit (BLJB)\nOne bit of the HSB, the BLJB bit, is used to force the boot address:\n\x81 When this bit is programmed (‘1’ value) the boot address is 0000h. \n\x81 When this bit is unprogrammed (‘1’ value) the boot address is F800h. By default, \nthis bit is unprogrammed and the ISP is enabled. \nFlash Memory Lock Bits The three lock bits provide different levels of protection for the on-chip code and data,\nwhen programmed as shown in Table 66. 76543210\nX2 BLJB - - XRAM LB2 LB1 LB0\nBit \nNumberBit \nMnemonic Description\n7X 2X2 Mode\nProgrammed (‘0’ value) to force X2 mode (6 clocks per instruction) after reset.\nUnprogrammed (‘1’ Value) to force X1 mode, Standard Mode, after reset \n(Default).\n6B L J BBoot Loader Jump Bit\nUnprogrammed (‘1’ value) to start the user’s application on next reset at address \n0000h. \nProgrammed (‘0’ value) to start the boot loader at address F800h on next reset \n(Default). \n5- Reserved\n4- Reserved\n3X R A MXRAM Config Bit (only programmable by programmer tools)\nProgrammed to inhibit XRAM after reset.Unprogrammed, this bit to valid XRAM after reset (Default).\n2-0 LB2-0User Memory Lock Bits (only programmable by programmer tools)\nSee Table 66.\n88 AT89C51RB2/RC2\n4180E–8051–10/06Table 66.  Program Lock Bits\nNote: U:  unprogrammed or "one" level. \nP:  programmed or "zero" level. \nX:  don’t careWARNING:  Security level ‘2’ and ‘3‘ should only be programmed after Flash and codeverification. \nThese security bits protect the code access through the parallel programming interface.\nThey are set by default to level 4. The code access through the ISP is still possible andis controlled by the "software security bits" which are stored in the extra Flash memoryaccessed by the ISP firmware. \nTo load a new application with the parallel programmer, a chip erase must first be done.\nThis will set the HSB in its inactive state and will erase the Flash memory. The part ref-\nerence can always be read using Flash parallel programming modes. \nDefault Values The default value of the HSB provides parts ready to be programmed with ISP:  \n\x81 BLJB:  Programmed force ISP operation. \n\x81 X2:  Unprogrammed to force X1 mode (Standard Mode). \n\x81 XRAM:  Unprogrammed to valid XRAM\n\x81 LB2-0:  Security level four to protect the code from a parallel access with maximum \nsecurity. \nSoftware Registers Several registers are used, in factory and by parallel programmers, to make copies of\nhardware registers contents. These values are used by Atmel ISP.\nThese registers are in the "Extra Flash Memory" part of the Flash memory. This block is\nalso called "XAF" or eXtra Array Flash. They are accessed in the following ways:\n\x81 Commands issued by the parallel memory programmer. \n\x81 Commands issued by the ISP software. \n\x81 Calls of API issued by the application software. \nSeveral software registers are described in Table 67. Program Lock Bits\nProtection DescriptionSecurity \nLevel LB0 LB1 LB2\n1 U U U No program lock features enabled. \n2P U UMOVC instruction executed from external program memory is disabled \nfrom fetching code Bytes from internal memory, EA  is sampled and \nlatched on reset, and further parallel programming of the Flash is \ndisabled. ISP and software programming with API are still allowed. \n3X P USame as 2, also verify through parallel programming interface is \ndisabled. \n4 X X P Same as 3, also external execution is disabled. (Default)\n89AT89C51RB2/RC2\n4180E–8051–10/06Table 67.   Default Values\nAfter programming the part by ISP, the BSB must be cleared (00h) in order to allow the\napplication to boot at 0000h. \nThe content of the Software Security Byte (SSB) is descri bed in Table 67 and Table 69.\nTo assure code protection from a parallel access, the HSB must also be at the required\nlevel. \nTable 68.  Software Security Byte\nThe two lock bits provide different levels of protection for the on-chip code and data,\nwhen programmed as shown in Table 69. Mnemonic Definition Default value Description\nSBV Software Boot Vector FCh\nHSB Hardware security Byte 101x 1011b\nBSB Boot Status Byte 0FFhSSB Software Security Byte FFh\nCopy of the Manufacturer Code 58h ATMELCopy of the Device ID #1:  Family Code D7h C51 X2, Electrically ErasableCopy of the Device ID #2:  memories F7h AT89C51RB2/RC2 32KB size and type FBh AT89C51RB2/RC2 16 KBCopy of the Device ID #3:  name and \nrevisionEFhAT89C51RB2/RC2 32KB, \nRevision 0\nFFhAT89C51RB2/RC2 16 KB, \nRevision 0\n76543210\n------ L B 1 L B 0\nBit \nNumberBit        \nMnemonic Description\n7-Reserved\nDo not clear this bit. \n6-Reserved\nDo not clear this bit. \n5-Reserved\nDo not clear this bit. \n4-Reserved\nDo not clear this bit. \n3-Reserved\nDo not clear this bit. \n2-Reserved\nDo not clear this bit. \n1-0 LB1-0User Memory Lock Bits\nsee Table 69\n90 AT89C51RB2/RC2\n4180E–8051–10/06Table 69.   Program Lock Bits of the SSB\nNote: U:  unprogrammed or "one" level. \nP:  programmed or "zero" level. \nX:  don’t careWARNING:  Security level 2 and 3 should only be programmed after Flash and codeverification. \nFlash Memory Status AT89C51RB2/RC2 parts are delivered in standard with the ISP boot in the Flash mem-\nory. After ISP or parallel programming, the possible contents of the Flash memory aresummarized on Figure 35.\nFigure 35.  Flash Memory Possible Contents\nMemory Organization In the AT89C51RB2/RC2, the lowest 16K or 32K of the 64 KB program memory address\nspace is filled by internal Flash. \nWhen the EA  pin is high, the processor fetches instructions from internal program Flash.\nBus expansion for accessing program memory from 16K or 32K upward automatic sinceexternal instruction fetches occur automatically when the program counter exceeds3FFFh (16K) or 7FFFh (32K). If the EA\n pin is tied low, all program memory fetches are\nfrom external memory. Program Lock Bits\nProtection DescriptionSecurity \nlevel LB0 LB1\n1 U U No program lock features enabled. \n2 P U ISP programming of the Flash is disabled. \n3 X P Same as 2, also verify through ISP programming interface is disabled. \n0000hVirgin3FFFh\nDefault After ISPAfter Parallel\nProgrammingAfter Parallel\nProgrammingApplication Application Virgin\nAfter ISPor \nDedicated\nISPDedicated\nISP7FFFh T89C51RC2 32KB\nT89C51RB2 16KB\nApplicationVirgin\nor \nApplication\n91AT89C51RB2/RC2\n4180E–8051–10/06Bootloader Architecture\nIntroduction The bootloader manages a communication according to a specific defined protocol to\nprovide the whole access and service on Flash memory. Furthermore, all accesses androutines can be called from the user application.\nFigure 36.  Diagram Context Description\nAcronyms ISP: In-system Programming\nSBV: Software Boot VectorBSB: Boot Status ByteSSB: Software Security BitHW : Hardware ByteBootloaderFlash Memo ryAccess via\nSpecific\nProtocol\nAccess FromUser\nApplication\n92 AT89C51RB2/RC2\n4180E–8051–10/06Functional Description\nFigure 37.  Bootloader Functional Description\nOn the above diagram, the on-chip bootloader processes are:\n\x81 ISP Communication Management\nThe purpose of this process is to manage the communication and its protocol between\nthe on-chip bootloader and a external device. The on-chip ROM implement a serial pro-tocol (see section Bootloader Protocol). This process translate serial communicationframe (UART) into Flash memory acess (read, write, erase ...).\n\x81 User Call Management\nSeveral Application Program Interface (API) calls are available for use by an application\nprogram to permit selective erasing and programming of Flash pages. All calls are made\nthrough a common interface (API calls), included in the ROM bootloader. The program-ming functions are selected by setting up the microcontroller’s registers before making acall to a common entry point (0xFFF0). Results are returned in the registers. The pur-pose on this process is to translate the registers values into internal Flash MemoryManagement.\n\x81 Flash Memory Management\nThis process manages low level access to Flash memory (performs read and write\naccess).ISP Communication\nManagementUser\nApplicationSpecific Protocol\nCommunication\nManagement \nFlash\nMemoryExernal Host with\nFlash MemoryUser Call\nManagement (API )\n93AT89C51RB2/RC2\n4180E–8051–10/06Bootloader Functionality\nIntroduction\nThe bootloader can be activated by two means: Hardware conditions or regular boot\nprocess.\nThe Hardware conditions (EA = 1, PSEN = 0) during the Reset# falling edge force the\non-chip bootloader execution. This allows an application to be built that will normallyexecute the end user’s code but can be manually forced into default ISP operation. \nAs PSEN is an output port in normal operating mode (running user application or boor-\nloader code) after reset, it is recommended to release PSEN after falling edge of resetsignal. The hardware conditions are sampled at reset signal falling edge, thus they canbe released at any time when reset input is low.\nTo ensure correct microcontroller startup, the PSEN pin should not be tied to ground\nduring power-on (See Figure 38).\nFigure 38.  Hardware conditions typical sequence during power-on.\nThe on-chip bootloader boot process is shown in Figure 39.VCC\nPSEN\nRST\nPurpose\nHardware ConditionsThe Hardware Conditions force the bootloader execution whatever BLJB, BSB \nand SBV values.\nBLJBThe Boot Loader Jump Bit forces the application execution.\nBLJB = 0 => Boot loader execution.\nBLJB = 1 => Application execution.\nThe BLJB is a fuse bit in the Hardware Byte.\nThat can be modified by hardware (programmer) or by software (API).\nNote:\nThe BLJB test is perform by hardware to prevent any program execution.\nSBVThe Software Boot Vector contains the high address of custumer bootloader \nstored in the application.SBV = FCh (default value) if no custumer bootloader in user Flash.\nNote:\nThe costumer bootloader is called by JMP [SBV]00h instruction.\n94 AT89C51RB2/RC2\n4180E–8051–10/06Boot Process\nFigure 39.  Bootloader process\nRESET\nHardware\nCondition?\nBLJB!= 0\n?\nUSER APPLICATIONHardware SoftwareFCON = 00h\nFCON = F0h\nFCON = 00h\n?\nAtmel BOOT LOADER USER BOOT LOADERyes = hardware bootF800hBLJB = 1\nBSB = 00h\n?\nSBV = FCh\n?PC = 0000h\nPC= [SBV]00hconditionsBLJB = 0If BLJB = 0 then ENBOOT bit (AUXR1) is set\nelse ENBOOT bit (AUXR1) is cleared\nENBOOT = 1ENBOOT = 0Yes (PSEN = 0, EA = 1, and ALE  = 1 or not connected)\n95AT89C51RB2/RC2\n4180E–8051–10/06ISP Protocol Description\nPhysical Layer The UART used to transmit information has the following configuration:\n\x81 Character: 8-bit data\n\x81 Parity: none\n\x81 Stop: 1 bit\n\x81 Flow control: none\n\x81 Baud rate: autobaud is performed by the bootloader to compute the baud rate \nchoosen by the host.\nFrame Description The Serial Protocol is based on the Intel Hex-type records. \nIntel Hex records consist of ASCII characters used to represent hexadecimal values and\nare summarized below.\nTable 70.  Intel Hex Type Frame\n\x81 Record Mark:\n– Record Mark is the start of frame. This field must contain ’:’.\n\x81 Reclen:\n– Reclen specifies the number of Bytes of information or data which follows \nthe Record Type field of the record.\n\x81 Load Offset:\n– Load Offset specifies the 16-bit starting load offset of the data Bytes, \ntherefore this field is used only for \n– Data Program Record (see Section “ISP Commands Summary”).\n\x81 Record Type:\n– Record Type specifies the command type. This field is used to interpret the \nremaining information within the frame. The encoding for all the current record types is described in Section “ISP Commands Summary”.\n\x81 Data/Info:\n– Data/Info is a variable length field. It consists of zero or more Bytes encoded \nas pairs of hexadecimal digits. The meaning of data depends on the Record Type.\n\x81 Checksum:\n– The two’s complement of the 8-bit Bytes that result from converting each pair \nof ASCII hexadecimal digits to one Byte of binary, and including the Reclen field to and including the last Byte of the Data/Info field. Therefore, the sum of all the ASCII pairs in a record after converting to binary, from the Reclen field to and including the Checksum field, is zero.Record Mark ‘:’ Reclen Load Offset Record Type Data or Info Checksum\n1 byte 1 byte 2 bytes 1 bytes n byte 1 byte\n96 AT89C51RB2/RC2\n4180E–8051–10/06Functional Description\nSoftware Security Bits (SSB) The SSB protects any Flash access from ISP command.\nThe command "Program Software Security bit" can only write a higher priority level.\nThere are three levels of security:\n\x81 level 0: NO_SECURITY  (FFh)\nThis is the default level.\nFrom level 0, one can write level 1 or level 2.\n\x81 level 1: WRITE_SECURITY  (FEh )\nFor this level it is impossible to write in the Flash memory, BSB and SBV.\nThe Bootloader returns ’P’ on write access.From level 1, one can write only level 2.\n\x81 level 2: RD_WR_SECURITY  (FCh\nThe level 2  forbids all read and write accesses to/from the Flash/EEPROM memory.\nThe Bootloader returns ’L’ on read or write access.Only a full chip erase in parallel mode (using a programmer) or ISP command can resetthe software security bits.From level 2, one cannot read and write anything.\nTable 71.  Software Security Byte Behavior\nLevel 0 Level 1 Level 2\nFlash/EEPROM Any access allowed Read only access allowed Any access not allowed\nFuse Bit Any access allowed Read only access allowed Any access not allowed\nBSB & SBV Any access allowed Read only access allowed Any access not allowed\nSSB Any access allowed Write level 2 allowed Read only access allowed\nManufacturer \nInfoRead only access allowed Read only access allowed Read only access allowed\nBootloader Info Read only access allowed Read only access allowed Read only access allowed\nErase Block Allowed Not allowed Not allowed\nFull-chip Erase Allowed Allowed Allowed\nBlank Check Allowed Allowed Allowed\n97AT89C51RB2/RC2\n4180E–8051–10/06Full Chip Erase The ISP command "Full Chip Erase" erases all User Flash memory (fills with FFh) and\nsets some Bytes used by the bootloader at their default values:\n\x81 BSB = FFh\n\x81 SBV = FCh\n\x81 SSB = FFh and finally erase the Software Security Bits\nThe Full Chip Erase does not affect the bootloader.\nChecksum Error When a checksum error is detected send ‘X’ followed with CR&LF.\nFlow Description\nOverview An initialization step must be performed after each Reset. After microcontroller reset,\nthe bootloader waits for an autobaud sequence ( see section ‘autobaud performance’).\nWhen the communication is initialized the protocol depends on the record type\nrequested by the host.\nFLIP, a software utility to implement ISP programming with a PC, is available from the\nAtmel the web site.\nCommunication Initialization The host initializes the communication by sending a ’U’ character to help the bootloader\nto compute the baudrate (autobaud).\nFigure 40.  Initialization\nHostBootloader\n"U"Performs Autobaud Init Communication\nIf (not received "U") \n"U"\n   Communication OpenedElseSends Back ‘U’ Characte r\n98 AT89C51RB2/RC2\n4180E–8051–10/06Autobaud Performances The ISP feature allows a wide range of baud rates in the user application. It is also\nadaptable to a wide range of oscillator frequencies. This is accomplished by measuringthe bit-time of a single bit in a received character. This information is then used to pro-gram the baud rate in terms of timer counts based on the oscillator frequency. The ISPfeature requires that an initial character (an uppercase U) be sent to theAT89C51RB2/RC2 to establish the baud rate. Table 72 shows the autobaud capability. \nCommand Data Stream \nProtocolAll commands are sent using the same flow. Each frame sent by the host is echoed by\nthe bootloader.Table 72.  Autobaud Performances\nFrequency (MHz)\nBaudrate (bit/s) 1.8432 2 2.4576 3 3.6864 4 5 6 7.3728 8\n2400 OK OK OK OK OK OK OK OK OK OK\n4 8 0 0 O K - O KO KO KO KO KO KO KO K9 6 0 0 O K - O KO KO KO KO KO KO KO K\n19200 OK - OK OK OK - - OK OK OK\n38400 - - OK OK - OK OK OK5 7 6 0 0 ---- O K --- O K\n1 1 5 2 0 0 -------- O K\nFrequency (MHz)\nBaudrate (bit/s) 10 11.0592 12 14.318 14.746 16 20 24 26.6\n2400 OK OK OK OK OK OK OK OK OK\n4800 OK OK OK OK OK OK OK OK OK\n9600 OK OK OK OK OK OK OK OK OK1 9 2 0 0 O KO KO KO KO KO KO KO KO K\n38400 - OK OK OK OK OK OK OK OK\n5 7 6 0 0 - O K - O KO KO KO KO KO K1 1 5 2 0 0 - O K - O K O K ----\n99AT89C51RB2/RC2\n4180E–8051–10/06Figure 41.  Command Flow\nWrite/Program Commands This flow is common to the following frames:\n\x81 Flash/EEPROM Programming Data Frame\n\x81 EOF or Atmel Frame (only Programming Atmel Frame)\n\x81 Config Byte Programming Data Frame\n\x81 Baud Rate Frame\nDescriptionFigure 42.  Write/Program FlowBootloader\n":"Sends first character of  the\nFrameIf (not  received ":")\n  \n   \nSends frame (made of 2 ASCII Gets frame, and sends back ec\nfor each received ByteHost\nElse":"\n   Sends echo and start \n   reception\ncharacters per Byte)Echo analysis\nHostBootloader\nWrite Command\n’X’ & CR & LF\nNO_SECURITYWait Write Command\nChecksum error\nWait ProgrammingSend Security error\nSend COMMAND_OKSend Write Command\nWait Checksum Error\nWait COMMAND_OKWait Security ErrorOR\nCOMMAND ABORTED\nCOMMAND FINISHEDSend Checksum error\nCOMMAND ABORTED’P’ & CR & LFOR\n’.’ & CR & LF\n100 AT89C51RB2/RC2\n4180E–8051–10/06Example\nHOST : 01 0010 00 55 9A\nBOOTLOADER : 01 0010 00 55 9A . CR LFProgramming Data (write 55h at address 0010h in the Flash) \nHOST : 02 0000 03 05 01 F5\nBOOTLOADER : 02 0000 03 05 01 F5. CR LFProgramming Atmel function (write SSB to level 2)\nHOST : 03 0000 03 06 00 55 9F\nBOOTLOADER : 03 0000 03 06 00 55 9F . CR LFWriting Frame (write BSB to 55h)\n101AT89C51RB2/RC2\n4180E–8051–10/06Blank Check Command\nDescriptionFigure 43.  Blank Check Flow\nExampleHost\nBootloader\nBlank Check Command \n’X’ & CR & LF\n Flash blankWait Blank Check Command\nSend first AddressSend COMMAND_OKSend Blank Check Command\nWait Checksum Error\nWait Address not\nerasedWait COMMAND_OKOR\nCOMMAND ABORTED\nCOMMAND FINISHEDSend Checksum error\nCOMMAND FINISHED’.’ & CR & LFOR\naddress & CR & LF\n not erasedChecksum error\nHOST : 05 0000 04 0000 7FFF 01 78\nBOOTLOADER : 05 0000 04 0000 7FFF 01 78 . CR LFBlank Check ok\nBOOTLOADER : 05 0000 04 0000 7FFF 01 70 X CR LF CR LFBlank Check with checksum error\nHOST : 05 0000 04 0000 7FFF 01 70BOOTLOADER : 05 0000 04 0000 7FFF 01 78 xxxx CR LFBlank Check ko at address xxxx\nHOST : 05 0000 04 0000 7FFF 01 78\n102 AT89C51RB2/RC2\n4180E–8051–10/06Display Data\nDescriptionFigure 44.  Display Flow\nNote: The maximum size of block is 400h. To read more than 400h Bytes, the Host must send a new command.HostBootloader\nDisplay Command \n’X’ & CR & LF\nRD_WR_SECURITYWait Display Command\nRead DataSend Security Error\nSend Display DataSend Display Command\nWait Checksum Error\nWait Display DataWait Security ErrorOR\nCOMMAND ABORTED\nCOMMAND FINISHEDSend Checksum Error\nCOMMAND ABORTED’L’ & CR & LFOR\n"Address = "All data read\nComplete Frame\n"Reading value"\nCR & LF\nAll data read All data read\nCOMMAND FINISHEDChecksum error\n103AT89C51RB2/RC2\n4180E–8051–10/06Example\nRead Function This flow is similar for the following frames:\n\x81 Reading Frame\n\x81 EOF Frame/Atmel Frame (only reading Atmel Frame)\nDescriptionFigure 45.  Read Flow\nExampleHOST : 05 0000 04 0000 0020 00 D7\nBOOTLOADER : 05 0000 04 0000 0020 00 D7\nBOOTLOADER 0000=-----data------ CR LF   (16 data)\nBOOTLOADER 0010=-----data------ CR LF   (16 data)\nBOOTLOADER 0020=data CR LF              ( 1 data)Display data from address 0000h to 0020h\nHostBootloader\nRead Command \n’X’ & CR & LF\nRD_WR_SECURITYWait Read Command\nRead ValueSend Security error\nSend Data ReadSend Read Command\nWait Checksum Error\nWait Value of DataWait Security ErrorOR\nCOMMAND ABORTED\nCOMMAND FINISHEDSend Checksum error\nCOMMAND ABORTED’L’ & CR & LFOR\n’value’ & ’.’ & CR & LFChecksum error\nHOST : 02 0000 05 07 02 F0\nBOOTLOADER : 02 0000 05 07 02 F0 Value . CR LF\nHOST : 02 0000 01 02 00 FB\nBOOTLOADER : 02 0000 01 02 00 FB Value . CR LFRead function (read SBV)\nAtmel Read function (read Bootloader version)\n104 AT89C51RB2/RC2\n4180E–8051–10/06ISP Commands Summary Table 73.  ISP Commands Summary\n \nCommand Command Name Data[0] Data[1] Command Effect\n00h Program DataProgram Nb Data Byte.\nBootloader will accept up to 128 (80h) \ndata Bytes. The data Bytes should be \n128 Byte page Flash boundary.\n03h Write Function01h00h Erase block0 (0000h-1FFFh)\n20h Erase block1 (2000h-3FFFh)\n40h Erase block2 (4000h-7FFFh)80h Erase block3 (8000h- BFFFh)\nC0h Erase block4 (C000h- FFFFh)\n03h 00h Hardware Reset04h 00h Erase SBV & BSB \n05h00h Program SSB level 1\n01h Program SSB level 2\n06h00h Program BSB (value to write in data[2])\n01h Program SBV (value to write in data[2])\n07h -Full Chip Erase (This command needs \nabout 6 sec to be executed)\n0Ah02hProgram Osc fuse (value to write in \ndata[2])\n04hProgram BLJB fuse (value to write in \ndata[2])\n08hProgram X2 fuse (value to write in \ndata[2])\n04h Display FunctionData[0:1] = start address\nData [2:3] = end address\nData[4] = 00h -> Display data\nData[4] = 01h -> Blank checkDisplay Data\nNote: The maximum number of data \nthat can be read with a single command frame (difference between \nstart and end address) is 1kbyte.\nBlank Check\n05h Read Function00h00h Manufacturer ID\n01h Device ID #1\n02h Device ID #203h Device ID #3\n07h00h Read SSB\n01h Read BSB02h Read SBV\n06h Read Extra Byte\n0Bh 00h Read Hardware Byte\n0Eh00h Read Device Boot ID1\n01h Read Device Boot ID2\n0Fh 00h Read Bootloader Version\n105AT89C51RB2/RC2\n4180E–8051–10/06API Call Description Several Application Program Interface (API) calls are available for use by an application\nprogram to permit selective erasing and programming of Flash pages. All calls are madethrough a common interface, PGM_MTP. The programming functions are selected bysetting up the microcontroller’s registers before making a call to PGM_MTP at FFF0h.Results are returned in the registers. \nWhen several Bytes have to be programmed, it is highly recommended to use the Atmel\nAPI “PROGRAM DATA PAGE” call. Indeed, this API call writes up to 128 Bytes in a sin-gle command. \nAll routines for software access are provided in the C Flash driver available at Atmel’s\nweb site.\nThe API calls description and arguments are shown in Table 74.\nTable 74.  API Call Summary \n Command R1 A DPTR0 DPTR1 Returned Value Command Effect\nREAD MANUF ID 00h XXh 0000h XXhACC = Manufacturer \nIdRead Manufacturer identifier\nREAD DEVICE ID1 00h XXh 0001h XXh ACC =  Device Id 1 Read Device identifier 1\nREAD DEVICE ID2 00h XXh 0002h XXh ACC = Device Id 2 Read Device identifier 2\nREAD DEVICE ID3 00h XXh 0003h XXh ACC = Device Id 3 Read Device identifier 3\nERASE BLOCK 01h XXhDPH = 00h\n00h ACC = DPHErase block 0\nDPH = 20h Erase block 1\nDPH = 40h Erase block 2\nPROGRAM DATA \nBYTE02h Vaue to writeAddress of \nbyte to \nprogramXXh ACC = 0: DONEProgram up one data byte in the on-chip \nflash memory.\nPROGRAM SSB 05h XXhDPH = 00h\nDPL = 00h\n00h ACC =  SSB valueSet SSB level 1\nDPH = 00h\nDPL = 01hSet SSB level 2\nDPH = 00h\nDPL = 10hSet SSB level 0\nDPH = 00h\nDPL = 11hSet SSB level 1\nPROGRAM BSB 06hNew BSB \nvalue0000h XXh none Program boot status byte\nPROGRAM SBV 06hNew SBV \nvalue0001h XXh none Program software boot vector\nREAD SSB 07h XXh 0000h XXh ACC = SSB Read Software Security Byte\nREAD BSB 07h XXh 0001h XXh ACC = BSB Read Boot Status Byte\nREAD SBV 07h XXh 0002h XXh ACC = SBV Read Software Boot Vector\nPROGRAM DATA \nPAGE09hNumber of \nbyte to \nprogramAddress of \nthe first byte \nto program in \nthe Flash \nmemoryAddress in \nXRAM of the \nfirst data to \nprogram ACC = 0: DONEProgram up to 128 bytes in user Flash.\nRemark:  number of bytes to program is \nlimited such as the Flash write remains in a \nsingle 128 bytes page. Hence, when ACC \nis 128, valid values of DPL are 00h, or, 80h. \n106 AT89C51RB2/RC2\n4180E–8051–10/06PROGRAM X2 FUSE 0AhFuse value\n00h or 01h0008h XXh none Program X2 fuse bit with ACC\nPROGRAM BLJB \nFUSE0AhFuse value\n00h or 01h0004h XXh none Program BLJB fuse bit with ACC\nREAD HSB 0Bh XXh XXXXh XXh ACC = HSB Read Hardware Byte\nREAD BOOT ID1 0Eh XXh DPL = 00h XXh ACC = ID1 Read boot ID1\nREAD BOOT ID2 0Eh XXh DPL = 01h XXh ACC = ID2 Read boot ID2\nREAD BOOT VERSION 0Fh XXh XXXXh XXh ACC = Boot_Version Read bootloader versionTable 74.  API Call Summary  (Continued)\n Command R1 A DPTR0 DPTR1 Returned Value Command Effect\n107AT89C51RB2/RC2\n4180E–8051–10/06Electrical Characteristics\nAbsolute Maximum Ratings\nDC Parameters for \nStandard VoltageC = commercial......................................................0 °C to 70 °C\nI = industrial ........................................................-40 °C to 85 °C\nStorage Temperature .................................... -65 °C to + 150 °C\nVoltage on VCC to VSS (standard voltage) .........-0.5V to + 6.5V\nVoltage on VCC to VSS (low voltage)..................-0.5V to + 4.5V\nVoltage on Any Pin to VSS..........................-0.5V to VCC + 0.5V\nPower Dissipation .............................................................. 1 WNote: Stresses at or above those listed under “Absolute\nMaximum Ratings” may cause permanent damage\nto the device. This is a stress rating only and func-\ntional operation of the device at these or any otherconditions above those indicated in the operationalsections of this specification is not implied. Expo-sure to absolute maximum rating conditions mayaffect device reliability.\nPower dissipation value is based on the maximum\nallowable die temperature and the thermal resis-tance of the package.\nTA = -40 °C to +85 °C; VSS = 0V; \nVCC =2.7V to 5.5V and F = 0 to 40 MHz (both internal and external code execution)\nVCC =4.5V to 5.5V and F = 0 to 60 MHz (internal code execution only)\nSymbol Parameter Min Typ Max Unit Test Conditions\nVIL Input Low Voltage -0.5 0.2 VCC - 0.1 V\nVIH Input High Voltage except RST, XTAL1 0.2 VCC + 0.9 VCC + 0.5 V\nVIH1(9)Input High Voltage RST, XTAL1 0.7 VCC VCC + 0.5 V\nVOL Output Low Voltage, ports 1, 2, 3, 4 (6)0.3\n0.45\n1.0V\nVVVCC = 4.5V to 5.5V\nI\nOL = 100 μA(4)\nIOL = 1.6 mA(4)\nIOL = 3.5 mA(4)\n0.45 VVCC = 2.7V to 5.5V\nIOL = 0.8 mA(4)\nVOL1 Output Low Voltage, port 0, ALE, PSEN  (6)0.3\n0.45\n1.0V\nVVVCC = 4.5V to 5.5V\nI\nOL = 200 μA(4)\nIOL = 3.2 mA(4)\nIOL = 7.0 mA(4)\n0.45 VVCC = 2.7V to 5.5V\nIOL = 1.6 mA(4)\nVOH Output High Voltage, ports 1, 2, 3, 4VCC - 0.3\nVCC - 0.7\nVCC - 1.5V\nVVV\nCC = 5V ± 10%\nIOH = -10 μA\nIOH = -30 μA\nIOH = -60 μA\n0.9 VCC VVCC = 2.7V to 5.5V\nIOH = -10 μA\n108 AT89C51RB2/RC2\n4180E–8051–10/06Notes: 1. Operating ICC is measured with all output pins disconnected; XTAL1 driven with TCLCH, TCHCL = 5 ns (see Figure 49.), VIL =\nVSS + 0.5V,\nVIH = VCC - 0.5V; XTAL2 N.C.; EA  = RST = Port 0 = VCC. ICC would be slightly higher if a crystal oscillator used (see Figure\n46).\n2. Idle ICC is measured with all output pins disconnected; XTAL1 driven with TCLCH, TCHCL = 5 ns, VIL = VSS + 0.5V, VIH = VCC -\n0.5V; XTAL2 N.C; Port 0 = VCC; EA = RST = VSS (see Figure 47).\n3. Power Down ICC is measured with all output pins disconnected; EA  = VSS, PORT 0 = VCC; XTAL2 NC.; RST = VSS (see Fig-\nure 48).\n4. Capacitance loading on Ports 0 and 2 may cause spurious noise pulses to be superimposed on the VOLs of ALE and Ports 1\nand 3. The noise is due to external bus capacitance discharging into the Port 0 and Port 2 pins when these pins make 1 to 0transitions during bus operation. In the worst cases (capacitive loading 100pF), the noise pulse on the ALE line may exceed\n0.45V with maxi V\nOL peak 0.6V. A Schmitt Trigger use is not necessary.\n5. Typical are based on a limited number of samples and are not guaranteed. The values listed are at room temperature and\n5V.\n6. Under steady state (non-transient) conditions, IOL must be externally limited as follows:\nMaximum IOL per port pin: 10 mA\nMaximum IOL per 8-bit port:\nPort 0: 26 mA\nPorts 1, 2 and 3: 15 mAMaximum total I\nOL for all output pins: 71 mA\nIf IOL exceeds the test condition, VOL may exceed the related specification. Pins are not guaranteed to sink current greater\nthan the listed test conditions.\n7. For other values, please contact your sales office.\n8. Icc Flash Write operation current while an on-chip flash page write is on going.\n9. Flash Retention is guaranteed with the same formula for VCC Min down to 0.VOH1 Output High Voltage, port 0, ALE, PSENVCC - 0.3\nVCC - 0.7\nVCC - 1.5V\nVVV\nCC = 5V ± 10%\nIOH = -200 μA\nIOH = -3.2 mA\nIOH = -7.0 mA\n0.9 VCC VVCC = 2.7V to 5.5V\nIOH = -10 μA\nRRST RST Pulldown Resistor 50 200(5)250 k Ω\nIIL Logical 0 Input Current ports 1, 2, 3, 4 and 5 -50 μAVIN = 0.45V\nILI Input Leakage Current for P0 only ±10 μA 0.45V < VIN < VCC\nITL Logical 1 to 0 Transition Current, ports 1, 2, 3, 4 -650 μAVIN = 2.0V\nCIO Capacitance of I/O Buffer 10 pFFc = 3 MHz\nTA = 25 °C\nIPD Power Down Current 100 150 μA4 . 5 V  <  VCC < 5.5V(3)\nICCOP Power Supply Current on normal mode 0.4 x Frequency (MHz) + 5 mA VCC = 5.5V(1)\nICCIDLE Power Supply Current on idle mode 0.3 x Frequency (MHz) + 5 mA VCC = 5.5V(1)\nICCProg Power Supply Current during flash Write / Erase0.4 x \nFrequency \n(MHz) + 20mA VCC = 5.5V(8)TA = -40 °C to +85 °C; VSS = 0V; \nVCC =2.7V to 5.5V and F = 0 to 40 MHz (both internal and external code execution)\nVCC =4.5V to 5.5V and F = 0 to 60 MHz (internal code execution only) (Continued)\nSymbol Parameter Min Typ Max Unit Test Conditions\n109AT89C51RB2/RC2\n4180E–8051–10/06DC Parameters for Low \nVoltage\nTA = 0°C to +70 °C; VSS = 0V; VCC = 2.7V to 3.6V; F = 0to 40 MHz\nTA = -40 °C to +85 °C; VSS = 0V; VCC = 2.7V to 3.6V; F = 0 to 40 MHz\nNotes: 1. Operating ICC is measured with all output pins disconnected; XTAL1 driven with TCLCH, TCHCL = 5 ns (see Figure 49.), VIL =\nVSS + 0.5V,\nVIH = VCC - 0.5V; XTAL2 N.C.; EA  = RST = Port 0 = VCC. ICC would be slightly higher if a crystal oscillator used (see Figure\n46).\n2. Idle ICC is measured with all output pins disconnected; XTAL1 driven with TCLCH, TCHCL = 5 ns, VIL = VSS + 0.5V, VIH = VCC -\n0.5V; XTAL2 N.C; Port 0 = VCC; EA = RST = VSS (see Figure 47).\n3. Power Down ICC is measured with all output pins disconnected; EA  = VSS, PORT 0 = VCC; XTAL2 NC.; RST = VSS (see Fig-\nure 48).\n4. Capacitance loading on Ports 0 and 2 may cause spurious noise pulses to be superimposed on the VOLs of ALE and Ports 1\nand 3. The noise is due to external bus capacitance discharging into the Port 0 and Port 2 pins when these pins make 1 to 0\ntransitions during bus operation. In the worst cases (capacitive loading 100pF), the noise pulse on the ALE line may exceed0.45V with maxi V\nOL peak 0.6V. A Schmitt Trigger use is not necessary.\n5. Typical are based on a limited number of samples and are not guaranteed. The values listed are at room temperature and\n5V.\n6. Under steady state (non-transient) conditions, IOL must be externally limited as follows:\nMaximum IOL per port pin: 10 mA\nMaximum IOL per 8-bit port:\nPort 0: 26 mAPorts 1, 2 and 3: 15 mAMaximum total I\nOL for all output pins: 71 mASymbol Parameter Min Typ Max Unit Test Conditions\nVIL Input Low Voltage -0.5 0.2 VCC - 0.1 V\nVIH Input High Voltage except RST, XTAL1 0.2 VCC + 0.9 VCC + 0.5 V\nVIH1 Input High Voltage, RST, XTAL1 0.7 VCC VCC + 0.5 V\nVOL Output Low Voltage, ports 1, 2, 3, 4(6)0.45 V IOL = 0.8 mA(4)\nVOL1 Output Low Voltage, port 0, ALE, PSEN  (6)0.45 V IOL = 1.6 mA(4)\nVOH Output High Voltage, ports 1, 2, 3, 4 0.9 VCC VIOH = -10 μA\nVOH1 Output High Voltage, port 0, ALE, PSEN 0.9 VCC VIOH = -40 μA\nIIL Logical 0 Input Current ports 1, 2, 3, 4 -50 μAVIN = 0.45 V\nILI Input Leakage Current for P0 only ±10 μA 0.45V < VIN < VCC\nITL Logical 1 to 0 Transition Current, ports 1, 2, 3, -650 μAVIN = 2.0V\nRRST RST Pulldown Resistor 50 200 (5)250 k Ω\nCIO Capacitance of I/O Buffer 10 pFFc = 3 MHz\nTA = 25 °C\nIPD Power Down Current 10 (5)50 μAVCC = 2.7V to \n3.6V(3)\nICCOP Power Supply Current on normal mode 0.4 x Frequency (MHz) + 5 mA VCC = 3.6 V(1)\nICCIDLE Power Supply Current on idle mode 0.3 x Frequency (MHz) + 5 mA VCC = 3.6 V(2)\nICCProg Power Supply Current during flash Write / Erase0.4 x \nFrequency \n(MHz) + \n20mA VCC = 5.5V(8)\n110 AT89C51RB2/RC2\n4180E–8051–10/06If IOL exceeds the test condition, VOL may exceed the related specification. Pins are not guaranteed to sink current greater\nthan the listed test conditions.\n7. For other values, please contact your sales office.\n8. Icc Flash Write operation current while an on-chip flash page write is on going.\nFigure 46.  ICC Test Condition, Active Mode\nFigure 47.  ICC Test Condition, Idle Mode\nFigure 48.  ICC Test Condition, Power-down Mode\nFigure 49.  Clock Signal Waveform for ICC Tests in Active and Idle ModesEAVCCVCC\nICC\n(NC)\nCLOCK \nSIGNALVCC\n All other pins are disconnected.RST\nXTAL2\nXTAL1\nVSSVCC\nP0\nRST EA\nXTAL2\nXTAL1\nVSSVCCVCC\nICC\n(NC)P0VCC\n All other pins are disconnected.CLOCK \nSIGNAL\nRST EA\nXTAL2\nXTAL1\nVSSVCCVCC\nICC\n(NC)P0VCC\n All other pins are disconnected.\nVCC-0.5V\n0.45V0.7VCC\n0.2VCC-0.1\nTCLCH TCHCL\nTCLCH = TCHCL = 5ns.\n111AT89C51RB2/RC2\n4180E–8051–10/06AC Parameters\nExplanation of the AC \nSymbolsEach timing symbol has 5 characters. The first character is always a “T” (stands for\ntime). The other characters, depending on their positions, stand for the name of a signalor the logical status of that signal. The following is a list of all the characters and whatthey stand for.\nExample:T\nAVLL = Time for Address Valid to ALE Low.\nTLLPL = Time for ALE Low to PSEN  Low.\n(Load Capacitance for port 0, ALE and PSEN = 100 pF; L oad Capacitance for all other\noutputs = 80 pF.)\nTable 75 Table 78, and Table 80 give the description of each AC symbols.Table 77, Table 79 and Table 81 give the AC parameterfor each range.Table 76, Table 77 and Table 82 gives the frequency derating formula of the AC param-\neter for each speed range description. To calculate each AC symbols, take the x valuein the correponding column (-M or -L) and use this value in the formula.\nExample: T\nLLIU for -M and 20 MHz, Standard clock.\nx = 35 nsT 50 nsT\nCCIV = 4T - x = 165 ns\nExternal Program Memory \nCharacteristicsTable 75.  Symbol Description\nSymbol Parameter\nT Oscillator clock period\nTLHLL ALE pulse width\nTAVLL Address Valid to ALE\nTLLAX Address Hold after ALE\nTLLIV ALE to Valid Instruction In\nTLLPL ALE to PSEN\nTPLPH PSEN  Pulse Width\nTPLIV PSEN  to Valid Instruction In\nTPXIX Input Instruction Hold after PSEN\nTPXIZ Input Instruction Float after PSEN\nTAVIV Address to Valid Instruction In\nTPLAZ PSEN  Low to Address Float\n112 AT89C51RB2/RC2\n4180E–8051–10/06Table 76.  AC Parameters for a Fix Clock\nTable 77.  AC Parameters for a Variable ClockSymbol -M -L Units\nMin Max Min Max\nT2 5 2 5 n s\nTLHLL 35 35 ns\nTAVLL 55 n s\nTLLAX 55 n s\nTLLIV n 65 65 ns\nTLLPL 55 n s\nTPLPH 50 50 ns\nTPLIV 30 30 ns\nTPXIX 00 n s\nTPXIZ 10 10 ns\nTAVIV 80 80 ns\nTPLAZ 10 10 ns\nSymbol TypeStandard \nClock X2 Clock X Parameter for -\nM RangeX Parameter for \n-L Range Units\nTLHLL Min 2 T - x T - x 15 15 ns\nTAVLL Min T - x 0.5 T - x 20 20 ns\nTLLAX Min T - x 0.5 T - x 20 20 ns\nTLLIV Max 4 T - x 2 T - x 35 35 ns\nTLLPL Min T - x 0.5 T - x 15 15 ns\nTPLPH Min 3 T - x 1.5 T - x 25 25 ns\nTPLIV Max 3 T - x 1.5 T - x 45 45 ns\nTPXIX Min x x 0 0 ns\nTPXIZ Max T - x 0.5 T - x 15 15 ns\nTAVIV Max 5 T - x 2.5 T - x 45 45 ns\nTPLAZ Max x x 10 10 ns\n113AT89C51RB2/RC2\n4180E–8051–10/06External Program Memory \nRead Cycle\nExternal Data Memory \nCharacteristics Table 78.  Symbol DescriptionTPLIV\nTPLAZALE\nPSEN\nPORT 0\nPORT 2A0-A7 A0-A7 INSTR IN INSTR IN INSTR IN\nADDRESS\nOR SFR-P2 ADDRESS A8-A15 ADDRESS A8-A1512 TCLCL\nTAVIVTLHLL\nTAVLLTLLIV\nTLLPL\nTPLPH\nTPXAV\nTPXIXTPXIZTLLAX\nSymbol Parameter\nTRLRH RD Pulse Width\nTWLWH WR Pulse Width\nTRLDV RD to Valid Data In\nTRHDX Data Hold After RD\nTRHDZ Data Float After RD\nTLLDV ALE to Valid Data In\nTAVDV Address to Valid Data In\nTLLWL ALE to WR  or RD\nTAVWL Address to WR  or RD\nTQVWX Data Valid to WR  Transition\nTQVWH Data set-up to WR  High\nTWHQX Data Hold After WR\nTRLAZ RD Low to Address Float\nTWHLH RD or WR  High to ALE high\n114 AT89C51RB2/RC2\n4180E–8051–10/06Table 79.  AC Parameters for a Fix Clock\nSymbol-M -L\nUnits Min Max Min Max\nTRLRH 125 125 ns\nTWLWH 125 125 ns\nTRLDV 95 95 ns\nTRHDX 00 n s\nTRHDZ 25 25 ns\nTLLDV 155 155 ns\nTAVDV 160 160 ns\nTLLWL 45 105 45 105 ns\nTAVWL 70 70 ns\nTQVWX 55 n s\nTQVWH 155 155 ns\nTWHQX 10 10 ns\nTRLAZ 00 n s\nTWHLH 54 5 5 4 5 n s\n115AT89C51RB2/RC2\n4180E–8051–10/06External Data Memory Write \nCycleSymbol TypeStandard \nClock X2 ClockX Parameter for -\nM RangeX Parameter for -\nL Range Units\nTRLRH Min 6 T - x 3 T - x 25 25 ns\nTWLWH Min 6 T - x 3 T - x 25 25 ns\nTRLDV Max 5 T - x 2.5 T - x 30 30 ns\nTRHDX Min x x 0 0 ns\nTRHDZ Max 2 T - x T - x 25 25 ns\nTLLDV Max 8 T - x 4T -x 45 45 ns\nTAVDV Max 9 T - x 4.5 T - x 65 65 ns\nTLLWL Min 3 T - x 1.5 T - x 30 30 ns\nTLLWL Max 3 T + x 1.5 T + x 30 30 ns\nTAVWL Min 4 T - x 2 T - x 30 30 ns\nTQVWX Min T - x 0.5 T - x 20 20 ns\nTQVWH Min 7 T - x 3.5 T - x 20 20 ns\nTWHQX Min T - x 0.5 T - x 15 15 ns\nTRLAZ Max x x 0 0 ns\nTWHLH Min T - x 0.5 T - x 20 20 ns\nTWHLH Max T + x 0.5 T + x 20 20 ns\nTQVWH TLLAXALE\nPSEN\nWR\nPORT 0\nPORT 2A0-A7 DATA OUT\nADDRESS\nOR SFR-P2TAVWLTLLWL\nTQVWX\nADDRESS A8-A15 OR SFR P2TWHQXTWHLH\nTWLWH\n116 AT89C51RB2/RC2\n4180E–8051–10/06External Data Memory Read Cycle\nSerial Port Timing - Shift \nRegister ModeTable 80.  Symbol Description\nTable 81.  AC Parameters for a Fix Clock\nTable 82.  AC Parameters for a Variable ClockALE\nPSEN\nRD\nPORT 0PORT 2A0-A7 DATA IN\nADDRESS\nOR SFR-P2TAVWLTLLWL\nTRLAZ\nADDRESS A8-A15 OR SFR P2TRHDZTWHLH\nTRLRHTLLDV\nTRHDXTLLAXTAVDV\nSymbol Parameter\nTXLXL Serial port clock cycle time\nTQVHX Output data set-up to clock rising edge\nTXHQX Output data hold after clock rising edge\nTXHDX Input data hold after clock rising edge\nTXHDV Clock rising edge to input data valid\nSymbol-M -L\nUnits Min Max Min Max\nTXLXL 300 300 ns\nTQVHX 200 200 ns\nTXHQX 30 30 ns\nTXHDX 00 n s\nTXHDV 117 117 ns\nSymbol TypeStandard \nClock X2 ClockX Parameter for -\nM RangeX Parameter for -L \nRange Units\nTXLXL Min 12 T 6 T ns\nTQVHX Min 10 T - x 5 T - x 50 50 ns\nTXHQX Min 2 T - x T - x 20 20 ns\nTXHDX Min x x 0 0 ns\nTXHDV Max 10 T - x 5 T- x 133 133 ns\n117AT89C51RB2/RC2\n4180E–8051–10/06Shift Register Timing \nWaveforms\nExternal Clock Drive \nWaveforms\nAC Testing Input/Output \nWaveforms\nAC inputs during testing are driven at VCC - 0.5 for a logic “1” and 0.45V for a logic “0”.\nTiming measurement are made at VIH min for a logic “1” and VIL max for a logic “0”.\nFloat Waveforms\nFor timing purposes as port pin is no longer floating when a 100 mV change from load\nvoltage occurs and begins to float when a 100 mV change from the loaded VOH/VOL level\noccurs. IOL/IOH ≥ ± 20mA.\nClock Waveforms Valid in normal clock mode. In X2 mode XTAL2 must be changed to XTAL2/2.INPUT DATA VALID VALID VALID VALID0123456 8 7\nALE\nCLOCK\nOUTPUT DATA\nWRITE to SBUF\nCLEAR RITXLXL\nTQVXHTXHQX\nTXHDVTXHDX SET TI\nSET RIINSTRUCTION\n01234567\nVALID VALID VALID VALID\nVCC-0.5V\n0.45V0.7VCC\n0.2VCC-0.1\nTCHCLTCLCX\nTCLCLTCLCHTCHCX\nINPUT/OUTPUT0.2 VCC + 0.9\n0.2 VCC - 0.1VCC -0.5V\n0.45 V\nFLOAT\nVOH - 0.1 V\nVOL + 0.1 VVLOADVLOAD + 0.1 V\nVLOAD - 0.1 V\n118 AT89C51RB2/RC2\n4180E–8051–10/06Figure 50.  Internal Clock Signals\nThis diagram indicates when signals are clocked internally. The time it takes the signals to propagate to the pins, however,\nranges from 25 to 125 ns. This propagation delay is dependent on variables such as temperature and pin loading. Propaga-tion also varies from output to output and component. Typically though (T\nA = 25 °C fully loaded) RD  and WR  propagation\ndelays are approximately 50 ns. The other signals are typically 85 ns. Propagation delays are incorporated in the ACspecifications.DATA    PCL OUT DATA    PCL OUT DATA    PCL OUT\n         SAMPLED          SAMPLED          SAMPLEDSTATE4 STATE5 STATE6 STATE1 STATE2 STATE3 STATE4 STATE5\nP1 P2 P1 P2 P1 P2 P1 P2 P1 P2 P1 P2 P1 P2 P1 P2\nFLOAT FLOAT FLOATTHESE SIGNALS ARE NOT ACTIVATED DURING THE\nEXECUTION OF A MOVX INSTRUCTION\nINDICATES ADDRESS TRANSITIONSEXTERNAL PROGRAM MEMORY FETCH\nFLOATDATA\nSAMPLEDDPL OR Rt OUT\nINDICATES DPH OR P2 SFR TO PCH TRANSITIONPCL OUT (IF PROGRAM\nMEMORY IS EXTERNAL)\nPCL OUT (EVEN IF PROGRAM\nMEMORY IS INTERNAL)\nPCL OUT (IF PROGRA M\nMEMORY IS EXTERNA L)\nOLD DATANEW DATA\nP0 PINS SAMPLED\nP1, P2, P3 PINS SAMPLED P1, P2, P3 PINS SAMPLEDP0 PINS SAMPLED\nRXD SAMPLEDINTERNAL\nCLOCK\nXTAL2\nALE\nPSEN\nP0\nP2 (EXT)\nREAD CYCLE\nWRITE CYCLERD\nP0\nP2\nWR\nPORT OPERATION\nMOV PORT SRC\nMOV DEST P0\nMOV DEST PORT (P1. P2. P3)\n(INCLUDES INTO. INT1. TO T1)\nSERIAL PORT SHIFT CLOCK\nTXD (MODE 0)DATA OUTDPL OR Rt OUT\nINDICATES DPH OR P2 SFR TO PCH TRANSITIONP0\nP2\nRXD SAMPLED\n119AT89C51RB2/RC2\n4180E–8051–10/06Ordering Information\nTable 83.  Possible Order Entries\nPart Number Memory Size Supply Voltage Temperature Range Package Packing Product Marking\nAT89C51RB2-3CSIM\n16 KBytes5V Industrial PDIL40 Stick 89C51RB2-IM\nAT89C51RB2-SLSCM 5V Commercial PLCC44 Stick 89C51RB2-CM\nAT89C51RB2-SLSIM 5V Industrial PLCC44 Stick 89C51RB2-IM\nAT89C51RB2-RLTCM 5V Commercial VQFP44 Tray 89C51RB2-CM\nAT89C51RB2-RLTIM 5V Industrial VQFP44 Tray 89C51RB2-IM\nAT89C51RB2-SLSIL 3V Industrial PLCC44 Stick 89C51RB2-IL\nAT89C51RB2-RLTIL 3V Industrial VQFP44 Tray 89C51RB2-IL\nAT89C51RC2-3CSCM\n32 KBytes5V Commercial PDIL40 Stick 89C51RC2-CM\nAT89C51RC2-3CSIM 5V Industrial PDIL40 Stick 89C51RC2-IM\nAT89C51RC2-SLSCM 5V Commercial PLCC44 Stick 89C51RC2-CM\nAT89C51RC2-SLSIM 5V Industrial PLCC44 Stick 89C51RC2-IM\nAT89C51RC2-RLTCM 5V Commercial VQFP44 Tray 89C51RC2-CM\nAT89C51RC2-RLTIM 5V Industrial VQFP44 Tray 89C51RC2-IM\nAT89C51RC2-SLSIL 3V Industrial PLCC44 Stick 89C51RC2-IL\nAT89C51RC2-RLTIL 3V Industrial VQFP44 Tray 89C51RC2-IL\nAT89C51RB2-3CSUM\n16 KBytes5V Industrial & Green PDIL40 Stick 89C51RB2-UM\nAT89C51RB2-SLSUM 5V Industrial & Green PLCC44 Stick 89C51RB2-UM\nAT89C51RB2-RLTUM 5V Industrial & Green VQFP44 Tray 89C51RB2-UM\nAT89C51RB2-SLSUL 3V Industrial & Green PLCC44 Stick 89C51RB2-UL\nAT89C51RB2-RLTUL 3V Industrial & Green VQFP44 Tray 89C51RB2-UL\nAT89C51RB2-RLTUM 5V Industrial & Green VQFP44 Tray 89C51RB2-UM\nAT89C51RC2-3CSUM\n32 KBytes5V Industrial & Green PDIL40 Stick 89C51RC2-UM\nAT89C51RC2-SLSUM 5V Industrial & Green PLCC44 Stick 89C51RC2-UM\nAT89C51RC2-RLTUM 5V Industrial & Green VQFP44 Tray 89C51RC2-UM\nAT89C51RC2-SLSUL 3V Industrial & Green PLCC44 Stick 89C51RC2-UL\nAT89C51RC2-RLTUL 3V Industrial & Green VQFP44 Tray 89C51RC2-UL\n120 AT89C51RB2/RC2\n4180E–8051–10/06Package Information\nPDIL40\n121AT89C51RB2/RC2\n4180E–8051–10/06VQFP44\n122 AT89C51RB2/RC2\n4180E–8051–10/06PLC44\n123AT89C51RB2/RC2\n4180E–8051–10/06Datasheet Change \nLog\nChanges from 4180A-\n08/02 to 4180B-04/031. Changed the endurance of Flash to 100, 000 Write/Erase cycles.\n2. Added note on Flash retention formula for VIH1, in Section “DC Parameters for \nStandard Voltage”, page 107.\nChanges from 4180B-\n04/03 to 4180C-12/031. Max frequency update for 4.5 to 5.5V range up to 60 MHz (internal code \nexecution).\nChanges from 4180C-\n12/03 - 4180D - 06/051. Added Green product ordering information. Page 119.\nChanges from 4180D - 06/05 to 4180E - 10/06 1. Correction to PDIL40 figure on page 9.\nTable of Contents\niTable of Contents\nFeatures ................................................................................................. 1\nDescription ............................................................................................ 1Block Diagram ....................................................................................... 3\nSFR Mapping ......................................................................................... 4\nPin Configurations ................................................................................ 9Port Types ........................................................................................... 13\nOscillator ............................................................................................. 14\nRegisters ............................................................................................................  14\nFunctional Block Diagram ..................................................................................  15\nEnhanced Features ............................................................................. 16\nX2 Feature..........................................................................................................  16\nDual Data Pointer Register (DPTR) ................................................... 20\nExpanded RAM (XRAM) ...................................................................... 23\nRegisters ............................................................................................................  25\nTimer 2 ................................................................................................. 26\nAuto-reload Mode...............................................................................................  26\nProgrammable Clock-out Mode..........................................................................  27Registers ............................................................................................................  29\nProgrammable Counter Array (PCA) ................................................. 31\nRegisters ............................................................................................................  33\nPCA Capture Mode ............................................................................................  39\n16-bit Software Timer/ Compare Mode ..............................................................  40High-speed Output Mode ...................................................................................  41\nPulse Width Modulator Mode .............................................................................  42\nPCA Watchdog Timer.........................................................................................  42\nSerial I/O Port ...................................................................................... 44\nFraming Error Detection .....................................................................................  44Automatic Address Recognition .........................................................................  45\nii\nxxxxA–8051–10/06Registers............................................................................................................. 47\nBaud Rate Selection for UART for Mode 1 and 3............................................... 47UART Registers.................................................................................................. 50\nInterrupt System ................................................................................. 55\nRegisters............................................................................................................. 56\nInterrupt Sources and Vector Addresses............................................................ 63\nKeyboard Interface ............................................................................. 64\nRegisters............................................................................................................. 65\nSerial Port Interface (SPI) ................................................................... 68\nFeatures.............................................................................................................. 68\nSignal Description............................................................................................... 68Functional Description ........................................................................................ 70\nHardware Watchdog Timer ................................................................ 77\nUsing the WDT ................................................................................................... 77\nWDT During Power-down and Idle ..................................................................... 78\nONCE™ Mode (ON Chip Emulation) .................................................. 79\nPower Management ............................................................................ 80\nReset .................................................................................................................. 80\nReset Recommendation to Prevent Flash Corruption ........................................ 82\nIdle Mode............................................................................................................ 82Power-down Mode.............................................................................................. 82\nPower-off Flag ..................................................................................... 84\nReduced EMI Mode ............................................................................. 85Flash EEPROM Memory ..................................................................... 86\nFeatures.............................................................................................................. 86\nFlash Programming and Erasure........................................................................ 86Flash Registers and Memory Map...................................................................... 87\nFlash Memory Status.......................................................................................... 90\nMemory Organization ......................................................................................... 90Bootloader Architecture ...................................................................................... 91\nISP Protocol Description..................................................................................... 95\nFunctional Description ........................................................................................ 96Flow Description ................................................................................................. 97\nAPI Call Description.......................................................................................... 105\nElectrical Characteristics ................................................................. 107\nAbsolute Maximum Ratings ..............................................................................107\niii\nxxxxA–8051–10/06DC Parameters for Standard Voltage ............................................................... 107\nDC Parameters for Low Voltage....................................................................... 109AC Parameters ................................................................................................. 111\nOrdering Information ........................................................................ 119\nPackage Information ........................................................................ 120\nPDIL40.............................................................................................................. 120\nVQFP44............................................................................................................ 121\nPLC44............................................................................................................... 122\nDatasheet Change Log ..................................................................... 123\nChanges from 4180A-08/02 to 4180B-04/03.................................................... 123\nChanges from 4180B-04/03 to 4180C-12/03.................................................... 123Changes from 4180C-12/03 - 4180D - 06/05 ................................................... 123\nChanges from 4180D - 06/05 to 4180E - 10/06................................................ 123\nTable of Contents .................................................................................. i\n Printed on recycled paper.Disclaimer:  The information in this document is provided in connection with Atmel products. No license, express or implied, by estoppel or  otherwise, to any\nintellectual property right is granted by this document or in connection with the sale of Atmel products. EXCEPT AS SET FORTH IN ATMEL’S TERMS AND CONDI-\nTIONS OF SALE LOCATED ON ATMEL’S WEB SITE, ATMEL ASSUMES NO LIABILITY WHATSOEVER AND DISCLAIMS ANY EXPRESS, IMPLIED OR STATUTOR Y\nWARRANTY RELATING TO ITS PRODUCTS INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICU LAR\nPURPOSE, OR NON-INFRINGEMENT. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT, CONSEQUENTIAL, PUNITIVE, SPECIAL OR I NCIDEN-\nTAL DAMAGES (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, OR LOSS OF INFORMATION) ARISING  OUT\nOF THE USE OR INABILITY TO USE THIS DOCUMENT, EVEN IF ATMEL HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  Atmel makes no\nrepresentations or warranties with respect to the accuracy or completeness of the contents of this document and reserves the rig ht to make changes to specifications\nand product descriptions at any time without notice. Atmel does not make any commitment to update the information contained her ein.  Atmel’s products are not\nintended, authorized, or warranted for use as components in applications intended to support or sustain life. Atmel Corporation Atmel Operations\n2325 Orchard Parkway\nSan Jose, CA 95131, USATel: 1(408) 441-0311Fax: 1(408) 487-2600\nRegional Headquarters\nEurope\nAtmel SarlRoute des Arsenaux 41Case Postale 80CH-1705 FribourgSwitzerlandTel: (41) 26-426-5555\nFax: (41) 26-426-5500\nAsia\nRoom 1219\nChinachem Golden Plaza\n77 Mody Road Tsimshatsui\nEast KowloonHong KongTel: (852) 2721-9778Fax: (852) 2722-1369\nJapan\n9F, Tonetsu Shinkawa Bldg.1-24-8 ShinkawaChuo-ku, Tokyo 104-0033JapanTel: (81) 3-3523-3551\nFax: (81) 3-3523-7581Memory\n2325 Orchard Parkway\nSan Jose, CA 95131, USATel: 1(408) 441-0311Fax: 1(408) 436-4314\nMicrocontrollers\n2325 Orchard ParkwaySan Jose, CA 95131, USATel: 1(408) 441-0311\nFax: 1(408) 436-4314\nLa Chantrerie\nBP 7060244306 Nantes Cedex 3, FranceTel: (33) 2-40-18-18-18\nFax: (33) 2-40-18-19-60\nASIC/ASSP/Smart Cards\nZone Industrielle\n13106 Rousset Cedex, France\nTel: (33) 4-42-53-60-00\nFax: (33) 4-42-53-60-01\n1150 East Cheyenne Mtn. Blvd.\nColorado Springs, CO 80906, USATel: 1(719) 576-3300Fax: 1(719) 540-1759\nScottish Enterprise Technology Park\nMaxwell BuildingEast Kilbride G75 0QR, Scotland Tel: (44) 1355-803-000Fax: (44) 1355-242-743RF/Automotive\nTheresienstrasse 2Postfach 353574025 Heilbronn, GermanyTel: (49) 71-31-67-0\nFax: (49) 71-31-67-2340\n1150 East Cheyenne Mtn. Blvd.\nColorado Springs, CO 80906, USATel: 1(719) 576-3300Fax: 1(719) 540-1759\nBiometrics/Imaging/Hi-Rel MPU/\nHigh Speed Converters/RF Datacom\nAvenue de Rochepleine\nBP 12338521 Saint-Egreve Cedex, France\nTel: (33) 4-76-58-30-00\nFax: (33) 4-76-58-34-80\nLiterature Requests\nwww.atmel.com/literature\nxxxxA–8051–10/06© Atmel Corporation 2006 . All rights reserved. Atmel®, logo and combinations thereof, are registered trademarks, and Everywhere You AreSM\nare the trademarks of Atmel Corporation or its subsidiaries. Other terms and product names may be trademarks of others.\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n \n \n Microchip:   \n\xa0 AT89C51RB2-SLRUM\xa0 AT89C51RC2-3CSUM\n'}]
!==============================================================================!
### Component Summary: AT89C51RC2-3CSUM

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 2.7V to 5.5V (5V version)
  - Power Supply: 2.7V to 3.6V (3V version)
  
- **Current Ratings**:
  - Power Supply Current (Normal Mode): 0.4 x Frequency (MHz) + 5 mA
  - Power Supply Current (Idle Mode): 0.3 x Frequency (MHz) + 5 mA
  - Power Down Current: 100 µA (typical)
  
- **Power Consumption**: 
  - Flash Write Operation Current: 0.4 x Frequency (MHz) + 20 mA

- **Operating Temperature Range**: 
  - Commercial: 0°C to +70°C
  - Industrial: -40°C to +85°C

- **Package Type**: 
  - Available in PDIL40, PLCC44, VQFP44

- **Special Features**:
  - 80C52 compatible with 8051 pin and instruction set
  - 16K/32K Bytes of on-chip Flash memory
  - 1024 Bytes of expanded RAM (XRAM)
  - In-system programming (ISP) capability
  - Dual data pointer and variable length MOVX for slow RAM/peripherals
  - Enhanced UART with dedicated baud rate generator
  - SPI interface (Master/Slave mode)
  - Programmable Counter Array (PCA) with multiple modes
  - Hardware watchdog timer
  - Power control modes (Idle and Power-down)
  - Low EMI operation (Inhibit ALE)

- **Moisture Sensitive Level**: 
  - Level 1 (JEDEC J-STD-020E)

#### Description:
The **AT89C51RC2** is a high-performance 8-bit microcontroller based on the 80C51 architecture, featuring Flash memory for program and data storage. It is designed for applications requiring high-speed processing and flexibility, with capabilities for in-system programming and a variety of peripheral interfaces. The microcontroller supports both standard and X2 modes, allowing for increased performance while maintaining compatibility with existing 8051 software.

#### Typical Applications:
The AT89C51RC2 is suitable for a wide range of applications, including:
- **Embedded Systems**: Used in consumer electronics, automotive systems, and industrial automation.
- **Control Systems**: Ideal for motor control, alarm systems, and smart card readers.
- **Communication**: Supports UART and SPI interfaces for data transmission in networking applications.
- **Data Acquisition**: Can be used in sensor applications where data processing and control are required.
- **Power Management**: Features like the watchdog timer and power-down modes make it suitable for battery-operated devices.

This microcontroller's combination of features, including its robust memory architecture and versatile I/O capabilities, makes it a popular choice for developers looking to create efficient and reliable embedded solutions.