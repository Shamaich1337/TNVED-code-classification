[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of AD9122BCPZ production of ANALOG DEVICES from the text: Dual, 16-Bit, 1230 MSPS, \nTxDAC+ Digital-to-Analog Converter\n  AD9122\n \n Rev. B \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change without notice. No license is granted by implication or otherwise under any patent or patent rights of Analog Devices. Trademarks and registered trademarks are the property of their respective owners.   \n \nOne Technology Way, P.O. Box 9106, Norwood, MA 02062-9106, U.S.A.\nTel: 781.329.4700 www.analog.com  \nFax: 781.461.3113 ©2009–2011 Analog Devices, Inc. All rights reserved. FEATURES \nFlexible LVDS interface allows word, byte, or nibble load \nSingle-carrier W-CDMA ACLR = 82 dBc at 122.88 MHz IF Analog output: adjustable 8.7 mA to 31.7 mA,  \nR\nL = 25 Ω to 50 Ω \nIntegrated 2×/4×/8× interpolator/complex modulator allows \ncarrier placement anywhere in the DAC bandwidth \nGain, dc offset, and phase adjustment for sideband \nsuppression \nMultiple chip synchronization interfaces High performance, low noise PLL clock multiplier Digital inverse sinc filter Low power: 1.5 W at 1.2 GSPS, 800 mW at 500 MSPS,  \nfull operating conditions \n72-lead, exposed paddle LFCSP \nAPPLICATIONS \nWireless infrastructure W-CDMA, CDMA2000, TD-SCDMA, WiMAX, GSM, L TE Digital high or low IF synthesis Transmit diversity Wideband communications: LMDS/MMDS, point-to-point \nGENERAL DESCRIPTION \nThe AD9122 is a dual, 16-bit, high dynamic range digital-to-\nanalog converter (DAC) that provides a sample rate of 1230 MSPS, \npermitting multicarrier generation up to the Nyquist frequency. \n  The AD9122 TxDAC+® includes features optimized for direct \nconversion transmit applications, including complex digital mod-\nulation, and gain and offset compensation. The DAC outputs are optimized to interface seamlessly with analog quadrature modulators, such as the ADL537x F-MOD series from Analog Devices, Inc. A 4-wire serial port interface provides for program-\nming/readback of many internal parameters. Full-scale output \ncurrent can be programmed over a range of 8.7 mA to 31.7 mA. \nThe AD9122 comes in a 72-lead LFCSP . \nPRODUCT HIGHLIGHTS \n1. Ultralow noise and intermodulation distortion (IMD) \nenable high quality synthesis of wideband signals from \nbaseband to high intermediate frequencies (IF). \n2. Proprietary DAC output switching technique enhances \ndynamic performance. \n3. Current outputs are easily configured for various single-\nended or differential circuit topologies. \n4. Flexible LVDS digital interface allows the standard 32-wire bus to be reduced to one-half or one-quarter of the width. \nCOMPANION PRODUCTS \nIQ Modulators: ADL5370, ADL537x  family \nIQ Modulators with PLL and VCO: ADRF6701 , ADRF670x family \nClock Drivers: AD9516 , AD951x  family \nVoltage Regulator Design Tool: ADIsimPower  \nAdditional companion products on the AD9122  product page  \n \n \nTYPICAL SIGNAL CHAIN \nNOTES\n1. AQM = ANALOG QUADRATURE MODULATOR.COMPLEX BASEBAND\nDCCOMPLEX IF\nfIFRF\nLO – fIF\nDIGITAL\nBASEBAND\nPROCESSORPAI DAC\nQ DAC 22\n2/42/4\nANTIALIASING\nFILTERAQM\nLOSIN\nCOS\n08281-001 \nFigure 1. \n \nAD9122 \n \nRev. B | Page 2 of 60 TABLE OF CONTENTS \nFeatures .............................................................................................. 1 \xa0\nApplications ....................................................................................... 1 \xa0\nGeneral Description ......................................................................... 1 \xa0\nProduct Highlights ........................................................................... 1 \xa0\nCompanion Products ....................................................................... 1 \xa0\nTypical Signal Chain ......................................................................... 1 \xa0\nRevision History ............................................................................... 3 \xa0\nFunctional Block Diagram .............................................................. 4 \xa0\nSpecifications ..................................................................................... 5 \xa0\nDC Specifications ......................................................................... 5 \xa0\nDigital Specifications ................................................................... 6 \xa0\nDigital Input Data Timing Specifications ................................. 6 \xa0\nAC Specifications .......................................................................... 7 \xa0\nAbsolute Maximum Ratings ............................................................ 8 \xa0\nThermal Resistance ...................................................................... 8 \xa0\nESD Caution .................................................................................. 8 \xa0\nPin Configuration and Function Descriptions ............................. 9 \xa0\nTypical Performance Characteristics ........................................... 11 \xa0\nTerminology .................................................................................... 17 \xa0\nDifferences Between AD9122R1 and AD9122R2 ...................... 18 \xa0\nDevice Marking of AD9122R1 and AD9122R2 ..................... 18 \xa0\nTheory of Operation ...................................................................... 19 \xa0\nSerial Port Operation ................................................................. 19 \xa0\nData Format ................................................................................ 19 \xa0\nSerial Port Pin Descriptions ...................................................... 19 \xa0\nSerial Port Options ..................................................................... 20 \xa0\nDevice Configuration Register Map and Descriptions ......... 21 \xa0\nLVDS Input Data Ports .................................................................. 32 \xa0\nWord Interface Mode ................................................................. 32 \xa0\nByte Interface Mode ................................................................... 32 \xa0\nNibble Interface Mode ............................................................... 32 \xa0\nInterface Timing ......................................................................... 32 \xa0\nFIFO Operation .......................................................................... 33 \xa0\nDigital Datapath .............................................................................. 36 \xa0\nPremodulation ............................................................................ 36 \xa0\nInterpolation Filters ................................................................... 36 \xa0\nNCO Modulation ....................................................................... 39 \xa0\nDatapath Configuration ............................................................ 39 \xa0\nDetermining Interpolation Filter Modes ................................ 40 \xa0\nDatapath Configuration Examples........................................... 41 \xa0Data Rates vs. Interpolation Modes ......................................... 42 \xa0\nCoarse Modulation Mixing Sequences .................................... 42 \xa0\nQuadrature Phase Correction ................................................... 43 \xa0\nDC Offset Correction ................................................................ 43 \xa0\nInverse Sinc Filter ....................................................................... 43 \xa0\nDAC Input Clock Configurations ................................................ 44 \xa0\nDriving the DACCLK and REFCLK Inputs ........................... 44 \xa0\nDirect Clocking .......................................................................... 44 \xa0\nClock Multiplication .................................................................. 44 \xa0\nPLL Settings ................................................................................ 45 \xa0\nConfiguring the VCO Tuning Band ........................................ 45 \xa0\nAnalog Outputs............................................................................... 46 \xa0\nTransmit DAC Operation .......................................................... 46 \xa0\nAuxiliary DAC Operation ......................................................... 47 \xa0\nInterfacing to Modulators ......................................................... 48 \xa0\nBaseband Filter Implementation .............................................. 48 \xa0\nDriving the ADL5375-15 .......................................................... 48 \xa0\nReducing LO Leakage and Unwanted Sidebands .................. 49 \xa0\nDevice Power Management ........................................................... 50 \xa0\nPower Dissipation....................................................................... 50 \xa0\nTemperature Sensor ................................................................... 51 \xa0\nMultichip Synchronization ............................................................ 52 \xa0\nSynchronization with Clock Multiplication ............................... 52 \xa0\nSynchronization with Direct Clocking .................................... 53 \xa0\nData Rate Mode Synchronization ............................................ 53 \xa0\nFIFO Rate Mode Synchronization ........................................... 54 \xa0\nAdditional Synchronization Features ...................................... 55 \xa0\nInterrupt Request Operation ........................................................ 56 \xa0\nInterrupt Service Routine .......................................................... 56 \xa0\nInterface Timing Validation .......................................................... 57 \xa0\nSED Operation ............................................................................ 57 \xa0\nSED Example .............................................................................. 58 \xa0\nExample Start-Up Routine ............................................................ 59 \xa0\nDevice Configuration ................................................................ 59 \xa0\nDerived PLL Settings ................................................................. 59 \xa0\nDerived NCO Settings ............................................................... 59 \xa0\nStart-Up Sequence ...................................................................... 59 \xa0\nOutline Dimensions ....................................................................... 60 \xa0\nOrdering Guide .......................................................................... 60 \xa0\n \n \n AD9122\n \nRev. B | Page 3 of 60 REVISION HISTORY \n5/11—Rev. A to Rev. B \nChange to General Description Section ......................................... 1 Added Companion Products Section ............................................. 1 \nMoved Power Supply Rejection Ratio Parameter from Power \nConsumption Section of Table 1 to Main DAC Outputs Section of Table 1 ............................................................................................. 5 Moved Power-Up Time Parameter from Table 3 to Table 1 ........ 5 Changed Maximum Clock Rate Parameter in Table 2 ................. 6 \nChanges to Table 3 ............................................................................ 6 \nChanges to Table 5 ............................................................................ 7 \nChanges to Table 6 ............................................................................ 8 Changes to Figure 3 and Table 8 ..................................................... 9 Changes to Differences Between AD9122R1 and AD9122R2 \nSection and Device Marking of AD9122R1 and AD9122R2 \nSection .............................................................................................. 18 Changes to Figure 40 and Figure 41 ............................................. 20 Changes to Table 10 ........................................................................ 21 Changes to Table 11 ........................................................................ 23 Changes to LVDS Input Data Ports Section and Figure 45 ....... 32 \nMoved Interface Timing Section ................................................... 32 \nMoved Figure 46 and Table 13; Changes to Interface  Timing Section ................................................................................ 33 Changes to Resetting the FIFO Section, Serial Port Initiated FIFO Reset Section, and Figure 48 ............................................... 34 \nChanges to FRAME Initiated Absolute FIFO Reset Section  \nand Monitoring the FIFO Status Section ..................................... 35 Changes to Table 22 ........................................................................ 42 Changes to Inverse Sinc Filter Section ......................................... 43 Change to Driving the DACCLK and REFCLK Inputs Section .... 44 \nChanges to Manual VCO Band Select Section ............................ 45 \nChanges to Transmit DAC Operation Section ............................ 46 Changes to Figure 69, Figure 70, Figure 71, and Figure 72 ....... 47 Changes to Power Dissipation Section ......................................... 50 Replaced Temperature Sensor Section ......................................... 51 \nChanges to Multichip Synchronization Section, Synchronization \nwith Clock Multiplication Section, and Procedure for Synchronization When Using the PLL Section ........................... 52 Changes to Procedure for Data Rate Synchronization When Directly Sourcing the DAC Sampling Clock Section ................. 53 Moved Table 25 and Figure 85 ...................................................... 54 Changes to Procedure for FIFO Rate Synchronization When Directly Sourcing the DAC Sampling Clock Section ................. 54 \nChanges to Additional Synchronization Features Section and \nTiming Optimization Section ........................................................ 55 Added One-Time Synchronization Section ................................ 55 Changes to Interrupt Request Operation Section ...................... 56 Changes to SED Operation Section .............................................. 57 \nChanges to SED Example Section ................................................. 58 \nChanges to Example Start-Up Routine Section .......................... 59  3/10—Rev. 0 to Rev. A Changes to Reflect Differences Between R1 and R2 \nSilicon .................................................................................. Universal \nChanges to Features Section ............................................................ 1 Changes to Table 1 ............................................................................ 5 Changes to Table 2 ............................................................................ 6 Changes to Table 5 ............................................................................ 7 Change to IOVDD Rating in Table 6 ............................................. 8 \nChanges to Table 8 ............................................................................ 9 \nChanges to Figure 10 through Figure 15 ...................................... 12 Added Differences Between AD9122R1 and AD9122R2  Section; Added Figure 36 and Figure 37; Renumbered Figures Sequentially ...................................................................................... 18 \nChanges to Table 10 ........................................................................ 21 \nChanges to Table 11 ........................................................................ 23 Changes to FIFO Operation Section ............................................ 33 \nChanges to Resetting the FIFO Section; Replaced Table 13;  \nAdded Serial Port Initiated FIFO Reset Section and FRAME \nInitiated Relative FIFO Reset Section ........................................... 34 \nAdded FRAME Initiated Absolute FIFO Reset Section; Replaced Table 14 ............................................................................ 35 Changes to Figure 54 ...................................................................... 38 Changes to Table 18 ........................................................................ 39 \nChanges to SED Example Section ................................................. 58 \nAdded Example Start-Up Routine Section .................................. 59  \n9/09—Revision 0: Initial Version  \n \nAD9122 \n \nRev. B | Page 4 of 60 FUNCTIONAL BLOCK DIAGRAM \n \nMULTICHIP\nSYNCHRONIZATIOND15P/D15N\nD0P/D0N\nDATA\nRECEIVERFIFO HB1 HB2 HB3NCO\nAND\nMODfDATA /2\nPRE\nMOD\nHB1_CLKMODE\nHB2_CLK\nHB3_CLK\nINTP\nFACTOR\nPHASE\nCORRECTION\nINTERNAL CLOCK TIMING AND CONTROL LOGIC1616\n10\n1616I OFFSET\nQ OFFSETINV\nSINCAUX1.2G\nDAC 1\n16-BITIOUT1P\nIOUT1N\nAUX1.2G\nDAC 2\n16-BITIOUT2P\nIOUT2N\nREF\nAND\nBIASFSADJ\nDACCLKP\nDACCLKN\nREFCLKP\nREFCLKNREFIO 10\nGAIN 1\n10\nGAIN 2DAC_CLK\nSERIAL\nINPUT/OUTPUT\nPORTPROGRAMMING\nREGISTERSPOWER-ON\nRESETSDO\nSDIO\nSCLK\nCS\nRESETIRQ0\n1CLOCK\nMULTIPLIER\n(2× TO 16×)CLK\nRCVR\nCLK\nRCVRPLL\nCONTROL\nSYNCDAC CLK_SEL\nDAC_CLK\nPLL_LOCKDCI\nFRAME\n08281-002INVSINC_CLK\n \nFigure 2.  \n \n \n  \n AD9122\n \nRev. B | Page 5 of 60 SPECIFICATIONS \nDC SPECIFICATIONS \nTMIN to T MAX, AVDD33 = 3.3 V , DVDD18 = 1.8 V , CVDD18 = 1.8 V , I FS = 20 mA, maximum sample rate, unless otherwise noted. \nTable 1.  \nParameter Min Typ Max Unit \nRESOLUTION  16  Bits \nACCURACY     \nDifferential Nonlinearity (DNL)  ±2.1  LSB \nIntegral Nonlinearity (INL)  ±3.7  LSB \nMAIN DAC OUTPUTS     \nOffset Error −0.001 0 +0.001 % FSR \nGain Error (with Internal Reference) −3.6 ±2 +3.6 % FSR \nFull-Scale Output Current18.66 19.6 31.66 mA \nOutput Compliance Range −1.0  +1.0 V \nPower Supply Rejection Ratio, AVDD33 −0.3  +0.3 % FSR/V \nOutput Resistance  10  MΩ \nGain DAC Monotonicity  Guaranteed   \nSettling Time to Within ±0.5 LSB  20  ns \nMAIN DAC TEMPERATURE DRIFT     \nOffset  0.04  ppm/°C \nGain  100  ppm/°C \nReference Voltage  30  ppm/°C \nREFERENCE     \nInternal Reference Voltage  1.2  V \nOutput Resistance  5  kΩ \nANALOG SUPPLY VOLTAGES     \nAVDD33 3.13 3.3 3.47 V \nCVDD18 1.71 1.8 1.89 V \nDIGITAL SUPPLY VOLTAGES     \nDVDD18 1.71 1.8 1.89 V \nIOVDD 1.71 1.8/3.3 3.47 V \nPOWER CONSUMPTION     \n2× Mode, f DAC = 491.22 MSPS, IF = 10 MHz, PLL Off  834  mW \n2× Mode, f DAC = 491.22 MSPS, IF = 10 MHz, PLL On  913  mW \n8× Mode, f DAC = 800 MSPS, IF = 10 MHz, PLL Off  1135 1241 mW \nAVDD33  55 57 mA \nCVDD18  85 90 mA \nDVDD18  444 495 mA \nPower-Down Mode (Register 0x01 = 0xF0)  6.5 18.8 mW \nPOWER-UP TIME  260  ms \nOPERATING RANGE −40 +25 +85 °C \n \n1 Based on a 10 kΩ  external resistor between FSADJ and AVSS. \n \n \n    \nAD9122 \n \nRev. B | Page 6 of 60 DIGITAL SPECIFICATIONS \nTMIN to T MAX, AVDD33 = 3.3 V , IOVDD = 3.3 V , DVDD18 = 1.8 V , CVDD18 = 1.8 V , I FS = 20 mA, maximum sample rate, unless otherwise \nnoted. \nTable 2.  \nParameter Test Conditions/Comments Min Typ Max Unit \nCMOS INPUT LOGIC LEVEL      \nInput V IN Logic High IOVDD = 1.8 V 1.2   V \n IOVDD = 2.5 V 1.6   V \n IOVDD = 3.3 V 2.0   V \nInput V IN Logic Low IOVDD = 1.8 V   0.6 V \n IOVDD = 2.5 V, 3.3 V   0.8 V \nCMOS OUTPUT LOGIC LEVEL      \nOutput V OUT Logic High IOVDD = 1.8 V 1.4   V \n IOVDD = 2.5 V 1.8   V \n IOVDD = 3.3 V 2.4   V \nOutput V OUT Logic Low IOVDD = 1.8 V, 2.5 V, 3.3 V   0.4 V \nLVDS RECEIVER INPUTS1Applies to data, DCI, and FRAME inputs     \nInput Voltage Range, V IA or V IB  825  1675 mV \nInput Differential Threshold, V IDTH   −100  +100 mV \nInput Differential Hysteresis, V IDTHH  to V IDTHL   20  mV \nReceiver Differential Input Impedance, R IN  80  120 Ω \nLVDS Input Rate See Table 5      \nDAC CLOCK INPUT (DACCLKP , DACCLKN)      \nDifferential Peak-to-Peak Voltage   100 500 2000 mV \nCommon-Mode Voltage Self-biased input, ac-coupled  1.25  V \nMaximum Clock Rate  1230   MHz \nREFCLK INPUT (REFCLKP , REFCLKN)      \nDifferential Peak-to-Peak Voltage   100 500 2000 mV \nCommon-Mode Voltage   1.25  V \nREFCLK Frequency (PLL Mode) 1 GHz ≤ f VCO ≤ 2.1 GHz 15.625  600 MHz \nREFCLK Frequency (SYNC Mode) See the Multichip Synchronization  section \nfor conditions 0  600 MHz \nSERIAL PORT INTERFACE      \nMaximum Clock Rate (SCLK)  40   MHz \nMinimum Pulse Width High (t PWH)    12.5 ns \nMinimum Pulse Width Low (t PWL)    12.5 ns \nSetup Time, SDIO to SCLK (t DS)  1.9   ns \nHold Time, SDIO to SCLK (t DH)  0.2   ns \nData Valid, SDO to SCLK (t DV)  2.3   ns \nSetup Time, CS to SCLK (t DCSB)   1.4  ns \n \n1 LVDS receiver is compliant with the IEEE 1596 redu ced range link, unless  otherwise noted. \n \nDIGITAL INPUT DATA TIMING SPECIFICATIONS \nTable 3.  \nParameter Value Unit \nLATENCY (DACCLK CYCLES)   \n1× Interpolation (With or Without Modulation) 64 Cycles \n2× Interpolation (With or Without Modulation) 135 Cycles \n4× Interpolation (With or Without Modulation) 292 Cycles \n8× Interpolation (With or Without Modulation) 608 Cycles \nInverse Sinc 20 Cycles \nFine Modulation 8 Cycles \n AD9122\n \nRev. B | Page 7 of 60 AC SPECIFICATIONS \nTMIN to T MAX, AVDD33 = 3.3 V , DVDD18 = 1.8 V , CVDD18 = 1.8 V , I FS = 20 mA, maximum sample rate, unless otherwise noted. \nTable 4.  \nParameter Min Typ Max Unit \nSPURIOUS-FREE DYNAMIC RANGE (SFDR)     \nfDAC = 100 MSPS, f OUT = 20 MHz  78  dBc \nfDAC = 200 MSPS, f OUT = 50 MHz  80  dBc \nfDAC = 400 MSPS, f OUT = 70 MHz  69  dBc \nfDAC = 800 MSPS, f OUT = 70 MHz  72  dBc \nTWO-TONE INTERMODULATION DISTORTION (IMD)     \nfDAC = 200 MSPS, f OUT = 50 MHz  84  dBc \nfDAC = 400 MSPS, f OUT = 60 MHz  86  dBc \nfDAC = 400 MSPS, f OUT = 80 MHz  84  dBc \nfDAC = 800 MSPS, f OUT = 100 MHz  81  dBc \nNOISE SPECTRAL DENSITY (NSD), EIGHT-TONE, 500 kHz TONE SPACING     \nfDAC = 200 MSPS, f OUT = 80 MHz  −162  dBm/Hz \nfDAC = 400 MSPS, f OUT = 80 MHz  −163  dBm/Hz \nfDAC = 800 MSPS, f OUT = 80 MHz  −164  dBm/Hz \nW-CDMA ADJACENT CHANNEL LEAKAGE RATIO (ACLR), SINGLE-CARRIER     \nfDAC = 491.52 MSPS, f OUT = 10 MHz  84  dBc \nfDAC = 491.52 MSPS, f OUT = 122.88 MHz  82  dBc \nfDAC = 983.04 MSPS, f OUT = 122.88 MHz  83  dBc \nW-CDMA SECOND ACLR, SINGLE-CARRIER     \nfDAC = 491.52 MSPS, f OUT = 10 MHz  88  dBc \nfDAC = 491.52 MSPS, f OUT = 122.88 MHz  86  dBc \nfDAC = 983.04 MSPS, f OUT = 122.88 MHz  88  dBc \n \nTable 5. Maximum Rate (MSPS) with  DVDD and CVDD Supply Regulation \nBus Width Interpolation \nFactor fINTERFACE  (MSPS) fDAC (MSPS) \nDVDD18, CVDD18 = DVDD18, CVDD18 = \n1.8 V ± 5% 1.8 V ± 2% 1.9 V ± 2% 1.8 V ± 5% 1.8 V ± 2% 1.9 V ± 2% \nNibble (4 Bits) 1× 1100 1200 1230 137.5 150 153.75 \n 2× 1100 1200 1230 275 300 307.5 \n 4× 1100 1200 1230 550 600 615 \n 8× 1100 1200 1230 1100 1200 1230 \nByte (8 Bits) 1× 1100 1200 1230 275 300 307.5 \n 2× 1100 1200 1230 550 600 615 \n 4× 1100 1200 1230 1100 1200 1230 \n 8× 550 600 615 1100 1200 1230 \nWord (16 Bits) 1× 1100 1200 1230 550 600 615 \n 2× (HB1) 900 1000 1000 900 1000 1000 \n 2× (HB2) 1100 1200 1230 1100 1200 1230 \n 4× 550 600 615 1100 1200 1230 \n 8× 275 300 307.5 1100 1200 1230 \n \nAD9122 \n \nRev. B | Page 8 of 60 ABSOLUTE MAXIMUM RATINGS \nTHERMAL RESISTANCE Table 6. \nParameter Rating \nAVDD33 to AVSS, EPAD, CVSS, DVSS −0.3 V to +3.6 V \nIOVDD to AVSS, EPAD, CVSS, DVSS −0.3 V to +3.6 V \nDVDD18, CVDD18 to AVSS, EPAD, \nCVSS, DVSS −0.3 V to +2.1 V \nAVSS to EPAD, CVSS, DVSS −0.3 V to +0.3 V \nEPAD to AVSS, CVSS, DVSS −0.3 V to +0.3 V \nCVSS to AVSS, EPAD, DVSS −0.3 V to +0.3 V \nDVSS to AVSS, EPAD, CVSS −0.3 V to +0.3 V \nFSADJ, REFIO, IOUT1P , IOUT1N, \nIOUT2P , IOUT2N to AVSS −0.3 V to AVDD33 + 0.3 V \nD[15:0]P , D[15:0]N, FRAMEP , FRAMEN, \nDCIP , DCIN to EPAD, DVSS −0.3 V to DVDD18 + 0.3 V \nDACCLKP , DACCLKN, REFCLKP , \nREFCLKN to CVSS −0.3 V to CVDD18 + 0.3 V \nRESET , IRQ, CS, SCLK, SDIO, SDO  \nto EPAD, DVSS −0.3 V to IOVDD + 0.3 V \nJunction Temperature 125°C \nStorage Temperature Range −65°C to +150°C The exposed pad (EPAD) of the 72-lead LFCSP must be \nsoldered to the ground plane (AVSS). The EPAD provides an \nelectrical, thermal, and mechanical connection to the board. \nTypical θ JA, θJB, and θ JC values are specified for a 4-layer board in \nstill air. Airflow increases heat dissipation, effectively reducing \nθJA and θ JB. \nTable 7. Thermal Resistance  \nPackage θ JA θ JB θ JC Unit Conditions \n72-Lead LFCSP 20.7 10.9 1.1 °C/W EPAD soldered \nto ground plane \n \nESD CAUTION \n \n Stresses above those listed under Absolute Maximum Ratings \nmay cause permanent damage to the device. This is a stress rating only; functional operation of the device at these or any other conditions above those indicated in the operational section of this specification is not implied. Exposure to absolute \nmaximum rating conditions for extended periods may affect \ndevice reliability.  \n \n AD9122\n \nRev. B | Page 9 of 60 PIN CONFIGURATION AND FU NCTION DESCRIPTIONS \n \n08281-0031\n23\n4\n5\n6\n78\n9\n10\n11\n12\n1314\n15\n16CVDD18\nDACCLKP\nDACCLKN\nCVSS\nFRAMEP\nFRAMEN\nIRQ\nD15P\nD15N\nNC\nIOVDD\nDVDD18\nD14P\nD14N\nD13P\nD13N\n17 D12P\n18 D12N\n19\n2021\n22\n23\n24\n2526\n27\n2829\n30\n31\n32\n3334D11P\nD11N\nD10P\nD10N\nD9P\nD9N\nD8P\nD8N\nDCIP\nDCIN\nDVDD18\nDVSS\nD7P\nD7N\nD6P\nD6N\n35 D5P\n36 D5N54\n53\n5251\n50\n49\n48\n47\n46\n45\n4443\n42\n4140\n3938\n37RESET\nCS\nSCLKSDIO\nSDO\nDVDD18\nD0N\nD0P\nD1N\nD1P\nDVSSDVDD18\nD2N\nD2PD3N\nD3PD4N\nD4P72\n71\n70\n69\n68\n67\n66\n6564\n63\n62\n61\n60\n5958\n5756\n55CVDD18\nCVDD18\nREFCLKP\nREFCLKN\nAVDD33\nIOUT1P\nIOUT1N\nAVDD33AVSS\nFSADJ\nREFIO\nAVSS\nAVDD33\nIOUT2NIOUT2P\nAVDD33AVSS\nNC\nPIN 1\nINDICATOR\nAD9122\nTOP VIEW\n(Not to Scale)\nNOTES\n1. EXPOSED PAD (EPAD) MUST BE SOLDERED TO THE GROUND PLANE (AVSS).    THE EPAD PROVIDES AN ELECTRICAL, THERMAL, AND MECHANICAL    CONNECTION TO THE BOARD.2. NC = NO CONNECT. DO NOT CONNECT TO THIS PIN.\n \nFigure 3. Pin Configuration \n \nTable 8. Pin Function Descriptions \nPin No. Mnemonic Description \n1 CVDD18 1.8 V Clock Supply. Supplies clock rece ivers, clock distribution, and PLL circuitry. \n2 DACCLKP DAC Clock Input, Positive. \n3 DACCLKN DAC Clock Input, Negative. \n4 CVSS Clock Supply Common. \n5 FRAMEP Frame Input, Positive. This pin must be tied to DVSS if not used. \n6 FRAMEN Frame Input, Negative. This pin must be tied to DVDD18 if not used. \n7 IRQ  Interrupt Request. Open-drain, active low output. Connect an external pull-up to IOVDD through a 10 kΩ \nresistor. \n8 D15P Data Bit 15 (MSB), Positive. \n9 D15N Data Bit 15 (MSB), Negative. \n10 NC No Connect. Do not connect to this pin. \n11 IOVDD Supply Pin for Serial Port I/O Pins, RESET , and IRQ. 1.8 V to 3.3 V can be supplied to this pin. \n12 DVDD18 1.8 V Digital Supply. Supplies power to digital core and digital data ports. \n13 D14P Data Bit 14, Positive. \n14 D14N Data Bit 14, Negative. \n15 D13P Data Bit 13, Positive. \n16 D13N Data Bit 13, Negative. \n17 D12P Data Bit 12, Positive. \n18 D12N Data Bit 12, Negative. \n19 D11P Data Bit 11, Positive. \n20 D11N Data Bit 11, Negative. \n21 D10P Data Bit 10, Positive. \n22 D10N Data Bit 10, Negative. \n23 D9P Data Bit 9, Positive. \n24 D9N Data Bit 9, Negative. \nAD9122 \n \nRev. B | Page 10 of 60 Pin No. Mnemonic Description \n25 D8P Data Bit 8, Positive. \n26 D8N Data Bit 8, Negative. \n27 DCIP Data Clock Input, Positive. \n28 DCIN Data Clock Input, Negative. \n29 DVDD18 1.8 V Digital Supply. Supplies power to digital core and digital data ports. \n30 DVSS Digital Common. \n31 D7P Data Bit 7, Positive. \n32 D7N Data Bit 7, Negative. \n33 D6P Data Bit 6, Positive. \n34 D6N Data Bit 6, Negative. \n35 D5P Data Bit 5, Positive. \n36 D5N Data Bit 5, Negative. \n37 D4P Data Bit 4, Positive. \n38 D4N Data Bit 4, Negative. \n39 D3P Data Bit 3, Positive. \n40 D3N Data Bit 3, Negative. \n41 D2P Data Bit 2, Positive. \n42 D2N Data Bit 2, Negative. \n43 DVDD18 1.8 V Digital Supply. Supplies power to digital core and digital data ports. \n44 DVSS Digital Common. \n45 D1P Data Bit 1, Positive. \n46 D1N Data Bit 1, Negative. \n47 D0P Data Bit 0 (LSB), Positive. \n48 D0N Data Bit 0 (LSB), Negative. \n49 DVDD18 1.8 V Digital Supply. Supplies power to digital core and digital data ports. \n50 SDO Serial Port Data Output (CMO S Levels with Respect to IOVDD). \n51 SDIO Serial Port Data Input/Output (CMOS Levels with Respect to IOVDD). \n52 SCLK Serial Port Clock Input (CMO S Levels with Respect to IOVDD). \n53 CS  Serial Port Chip Select, Active Low (CMOS Levels with Respect to IOVDD). \n54 RESET  Reset, Active Low (CMOS Levels with Respect to IOVDD). \n55 NC No Connect. Do not connect to this pin. \n56 AVSS Analog Supply Common. \n57 AVDD33 3.3 V Analog Supply. \n58 IOUT2P Q DAC Positive Current Output. \n59 IOUT2N Q DAC Negative Current Output. \n60 AVDD33 3.3 V Analog Supply. \n61 AVSS Analog Supply Common. \n62 REFIO Voltage Reference. Nominally 1.2 V output. Should be decoupled to AVSS. \n63 FSADJ Full-Scale Current Output Adjust. Place a 10 kΩ resistor from this pin to AVSS. \n64 AVSS Analog Supply Common. \n65 AVDD33 3.3 V Analog Supply. \n66 IOUT1N I DAC Negative Current Output. \n67 IOUT1P I DAC Positive Current Output. \n68 AVDD33 3.3 V Analog Supply. \n69 REFCLKN PLL Reference Clock Input, Negative. This pin has a secondary function as  a synchronization input. \n70 REFCLKP PLL Reference Clock Input, Positive. This pin has a secondary function as a synchronization input. \n71 CVDD18 1.8 V Clock Supply. Supplies clock rece ivers, clock distribution, and PLL circuitry. \n72 CVDD18 1.8 V Clock Supply. Supplies clock rece ivers, clock distribution, and PLL circuitry. \n EPAD The exposed pad (EPAD) must be sold ered to the ground plane (AVSS). The EPAD provides an electrical, \nthermal, and mechanical connection to the board. \n \n AD9122\n \nRev. B | Page 11 of 60 TYPICAL PERFORMANCE CHARACTERISTICS \n \n0\n–10\n–20\n–30–40–50\n–60\n–70–80\n–90\n–100\n0 50 100 150 200 250 300 350 400 450HARMONICS (dBc)\nfOUT (MHz)fDATA  = 250MSPS, SECOND HARMONIC\nfDATA  = 250MSPS, THIRD HARMONIC\nfDATA  = 400MSPS, SECOND HARMONIC\nfDATA  = 400MSPS, THIRD HARMONIC\n08281-1010\n–10–20\n–30–40–50\n–60\n–70–80\n–90\n–100\n0 50 100 150 200 250 300 350 400 450SECOND HARMONIC (dBc)\nfOUT (MHz)0dBFS\n–6dBFS\n–12dBFS\n–18dBFS\n08281-104\nFigure 4. Harmonics vs. f OUT over f DATA , 2× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA Figure 7. Second Harmonic vs. f OUT over Digital Scale, 2× Interpolation,  \nfDATA  = 400 MSPS, I FS = 20 mA \n0\n–10\n–20\n–30\n–40–50\n–60\n–70–80\n–90\n–100\n0 50 100 150 200 250 300 350 400 450HARMONICS (dBc)\nfOUT (MHz)fDATA  = 100MSPS, SECOND HARMONIC\nfDATA  = 100MSPS, THIRD HARMONIC\nfDATA  = 200MSPS, SECOND HARMONIC\nfDATA  = 200MSPS, THIRD HARMONIC\n08281-1020\n–10\n–20\n–30\n–40–50\n–60\n–70–80\n–90\n–100\n0 50 100 150 200 250 300 350 400 450THIRD HARMONIC (dBc)\nfOUT (MHz)0dBFS\n–6dBFS\n–12dBFS\n–18dBFS\n08281-105\nFigure 5. Harmonics vs. f OUT over f DATA , 4× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA Figure 8. Third Harmonic vs. f OUT over Digital Scale, 2× Interpolation,  \nfDATA  = 400 MSPS, I FS = 20 mA \n0\n–10–20\n–30–40–50\n–60\n–70–80\n–90\n–100\n0 100 200 300 400 500 600 700HARMONICS (dBc)\nfOUT (MHz)fDATA  = 100MSPS, SECOND HARMONIC\nfDATA  = 100MSPS, THIRD HARMONIC\nfDATA  = 150MSPS, SECOND HARMONIC\nfDATA  = 150MSPS, THIRD HARMONIC\n08281-1030\n–10–20\n–30–40–50\n–60\n–70–80\n–90\n–100\n0 50 100 150 200 250 300 350 400 450HARMONICS (dBc)\nfOUT (MHz)IFS = 10mA, SECOND HARMONIC\nIFS = 20mA, SECOND HARMONIC\nIFS = 30mA, SECOND HARMONIC\nIFS = 10mA, THIRD HARMONIC\nIFS = 20mA, THIRD HARMONIC\nIFS = 30mA, THIRD HARMONIC\n08281-106\nFigure 6. Harmonics vs. f OUT over f DATA , 8× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA Figure 9. Harmonics vs. f OUT over I FS, 2× Interpolation,  \nfDATA  = 400 MSPS, Digital Scale = 0 dBFS \nAD9122 \n \nRev. B | Page 12 of 60 –69\n–70\n–71\n–72\n–73–74\n–75\n–77\n–78\n–79\n0 50 100 150 200 250 300 350 400 450HIGHEST DIGITAL SPUR (dBc)\nfOUT (MHz)–76fDATA  = 250MSPS\nfDATA  = 400MSPS\n08281-107\nFigure 10. Highest Digital Spur vs. f OUT over f DATA , 2× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA \n–60\n–65\n–70\n–75\n–80\n–85\n0 50 100 150 200 250 300 350 400 450HIGHEST DIGITAL SPUR (dBc)\nfOUT (MHz)fDATA  = 100MSPS\nfDATA  = 200MSPS\n08281-108\nFigure 11. Highest Digital Spur vs. f OUT over f DATA , 4× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA \n–60\n–95–90–85–80–75–70–65\n0 100 200 300 400 500 600 700HIGHEST DIGITAL SPUR (dBc)\nfOUT (MHz)fDATA  = 100MSPS\nfDATA  = 150MSPS\n08281-109\nFigure 12. Highest Digital Spur vs. f OUT over f DATA , 8× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA \n08281-110START 1.0MHz\n#RES BW 10kHzVBW 10kHz STOP 500.0MHz\nSWEEP 6.017s (601 PTS)2× INTERPOLATION,\nSINGLE-TONE SPECTRUM,\nfDATA  = 250MSPS,\nfOUT = 101MHz\n \nFigure 13. Single-Tone Spectrum, 2× Interpolation,  \nfDATA  = 250 MSPS, f OUT = 101 MHz \n08281-111START 1.0MHz\n#RES BW 10kHzVBW 10kHz STOP 800.0MHz\nSWEEP 9.634s (601 PTS)4× INTERPOLATION,\nSINGLE-TONE SPECTRUM,\nfDATA  = 200MSPS,\nfOUT = 151MHz\n \nFigure 14. Single-Tone Spectrum, 4× Interpolation, \nfDATA  = 200 MSPS, f OUT = 151 MHz \n08281-112START 1.0MHz\n#RES BW 10kHzVBW 10kHz STOP 800.0MHz\nSWEEP 9.634s (601 PTS)8× INTERPOLATION,\nSINGLE-TONE SPECTRUM,\nfDATA  = 100MSPS,\nfOUT = 131MHz\n \nFigure 15. Single-Tone Spectrum, 8× Interpolation,  \nfDATA  = 100 MSPS, f OUT = 131 MHz \n AD9122\n \nRev. B | Page 13 of 60 0\n–90–80–70–60–50–40–30–20–10\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)fDATA  = 250MSPS\nfDATA  = 400MSPS\n08281-113\nFigure 16. IMD vs. f OUT over f DATA , 2× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA \n0\n–90–80–70–60–50–40–30–20–10\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)fDATA  = 100MSPS\nfDATA  = 200MSPS\n08281-114\nFigure 17. IMD vs. f OUT over f DATA , 4× Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA \n0\n–100–90–80–70–60–50–40–30–20–10\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)fDATA  = 100MSPS\n08281-115\nFigure 18. IMD vs. f OUT, 8× Interpolation, f DATA  = 100 MSPS, \nDigital Scale = 0 dBFS, I FS = 20 mA 0\n–90–80–70–60–50–40–30–20–10\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)\n08281-116–6dBFS0dBFS\n–12dBFS\n–18dBFS\nFigure 19. IMD vs. f OUT over Digital Scale, 2× Interpolation,  \nfDATA  = 400 MSPS, I FS = 20 mA \n–50\n–85–80–75–70–65–60–55\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)IFS = 20mA\nIFS = 30mAIFS = 10mA\n08281-117\nFigure 20. IMD vs. f OUT over I FS, 2× Interpolation,  \nfDATA  = 400 MSPS, Digital Scale = 0 dBFS \n–40\n–90–85–80–75–70–65–60–55–50–45\n0 50 100 150 200 250 300 350 400 450IMD (dBc)\nfOUT (MHz)PLL OFFPLL ON\n08281-118\nFigure 21. IMD vs. f OUT, 4× Interpolation, f DATA  = 200 MSPS,  \nDigital Scale = 0 dBFS, I FS = 20 mA, PLL On and PLL Off \nAD9122 \n \nRev. B | Page 14 of 60 –152\n–156–154\n–158\n–160\n–162\n–164\n–166\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)2×,fDATA  = 200MSPS1×,fDATA  = 200MSPS\n4×,fDATA  = 200MSPS\n8×,fDATA  = 100MSPS\n08281-119\nFigure 22. One-Tone NSD vs. f OUT over Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA, PLL Off \n–154\n–158–156\n–160\n–162\n–164\n–166\n–168\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)–6dBFS0dBFS\n–12dBFS\n–18dBFS\n08281-120\nFigure 23. One-Tone NSD vs. f OUT over Digital Scale, 4× Interpolation,  \nfDATA  = 200 MSPS, I FS = 20 mA, PLL Off \n–158\n–159\n–160\n–161\n–162–163\n–164\n–165\n–166\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)2×,fDATA  = 200MSPS\n4×,fDATA  = 200MSPS\n8×,fDATA  = 100MSPS\n08281-121\nFigure 24. One-Tone NSD vs. f OUT over Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA, PLL On –161.0\n–165.5–165.0–164.5–164.0–163.5–163.0–162.5–162.0–161.5\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)2×,fDATA  = 200MSPS1×,fDATA  = 200MSPS\n4×,fDATA  = 200MSPS\n8×,fDATA  = 100MSPS\n08281-122\nFigure 25. Eight-Tone NSD vs. f OUT over Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA, PLL Off \n–161.0\n–166.5–165.5\n–166.0–165.0–164.5–164.0–163.5–163.0–162.5–162.0–161.5\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)–6dBFS0dBFS\n–12dBFS\n–18dBFS\n08281-123\nFigure 26. Eight-Tone NSD vs. f OUT over Digital Scale, 4× Interpolation,  \nfDATA  = 200 MSPS, I FS = 20 mA, PLL Off \n–160\n–161\n–162\n–163\n–164\n–165\n–166\n0 50 100 150 200 250 300 350 400 450NSD (dBm/Hz)\nfOUT (MHz)2×,fDATA  = 200MSPS\n4×,fDATA  = 200MSPS\n8×,fDATA  = 100MSPS\n08281-124\nFigure 27. Eight-Tone NSD vs. f OUT over Interpolation,  \nDigital Scale = 0 dBFS, I FS = 20 mA, PLL On \n AD9122\n \nRev. B | Page 15 of 60 –77\n–84–83–82–81–80–79–78\n0 50 100 150 200 250ACLR (dBc)\nfOUT (MHz)0dBFS\n–3dBFS\n–6dBFS\n08281-125\nFigure 28. One-Carrie r W-CDMA ACLR vs. f OUT over Digital Scale,  \nAdjacent Channel, PLL Off \n–78\n–90–88–86–84–82–80\n0 50 100 150 200 250ACLR (dBc)\nfOUT (MHz)0dBFS\n–3dBFS\n–6dBFS\n08281-126\nFigure 29. One-Carrie r W-CDMA ACLR vs. f OUT over Digital Scale,  \nFirst Alternate Channel, PLL Off \n–70\n–95–90–85–80–75\n0 50 100 150 200 250ACLR (dBc)\nfOUT (MHz)0dBFS\n–3dBFS\n–6dBFS\n08281-127\nFigure 30. One-Carrie r W-CDMA ACLR vs. f OUT over Digital Scale,  \nSecond Alternate Channel, PLL Off –50\n–55\n–60–65\n–70\n–75\n–80\n–85\n–90\n0 100 200 300 400 500ACLR (dBc)\nfOUT (MHz)INTERPOLATION FACTOR = 2×, PLL OFF\nINTERPOLATION FACTOR = 4×, PLL OFF\nINTERPOLATION FACTOR = 2×, PLL ON\nINTERPOLATION FACTOR = 4×, PLL ON\n08281-128\nFigure 31. One-Carrie r W-CDMA ACLR vs. f OUT over Interpolation,  \nAdjacent Channel, PLL On and PLL Off \n–70\n–72\n–74–76\n–78\n–80–82–84–86\n–88\n–90\n0 100 200 300 400 500ACLR (dBc)\nfOUT (MHz)INTERPOLATION FACTOR = 2×, PLL OFF\nINTERPOLATION FACTOR = 4×, PLL OFF\nINTERPOLATION FACTOR = 2×, PLL ON\nINTERPOLATION FACTOR = 4×, PLL ON\n08281-129\nFigure 32. One-Carrie r W-CDMA ACLR vs. f OUT over Interpolation,  \nFirst Alternate Channel,  PLL On and PLL Off \n–70\n–95–90–85–80–75\n0 100 200 300 400 500ACLR (dBc)\nfOUT (MHz)INTERPOLATION FACTOR = 2×, PLL OFF\nINTERPOLATION FACTOR = 4×, PLL OFF\nINTERPOLATION FACTOR = 2×, PLL ON\nINTERPOLATION FACTOR = 4×, PLL ON\n08281-130\nFigure 33. One-Carrie r W-CDMA ACLR vs. f OUT over Interpolation,  \nSecond Alternate Channel, PLL On and PLL Off \nAD9122 \n \nRev. B | Page 16 of 60 08281-131START 133.06MHz\n#RES BW 30kHzVBW 30kHz STOP 166.94MHz\nSWEEP 143.6ms (601 PTS)\nRMS RESULTS FREQ    LOWER    UPPER\nOFFSET REF BW dBc dBm dBc dBm\nCARRIER POWER 5.00MHz 3.840MHz –75.96 –85.96 –77.13 –87.13\n–10.00dBm/ 10.00MHz 3.840MHz –85.33 –95.33 –85.24 –95.25\n3.840MHz 15.00MHz 2.888MHz –95.81 –95.81 –85.43 –95.43  \n08281-132START 125.88MHz\n#RES BW 30kHzVBW 30kHz STOP 174.42MHz\nSWEEP 206.9ms (601 PTS)\nTOTAL CARRIER POWER –11.19dBm/15.3600MHz\nRRC FILTER: OFF  FILTER ALPHA 0.22REF CARRIER POWER –16.89dBm/3.84000MHz\n    LOWER     UPPER\nOFFSET FREQ INTEG BW dBc dBm dBc dBm\n1 –16.92dBm 5.000MHz 3.840MHz –65.88 –82.76 –67.52 –84.40\n2 –16.89dBm 10.00MHz 3.840MHz –68.17 –85.05 –69.91 –86.79\n3 –17.43dBm 15.00MHz 3.840MHz –70.42 –87.31 –71.40 –88.28\n4 –17.64dBm\nFigure 34. One-Carrier W-CDMA ACLR Performance, IF = ~150 MHz Figure 35. Four-Carrier W-CDMA ACLR Performance, IF = ~150 MHz \n \n \n AD9122\n \nRev. B | Page 17 of 60 TERMINOLOGY \nIntegral Nonlinearity (INL) \nINL is the maximum deviation of the actual analog output from the ideal output, determined by a straight line drawn from zero \nscale to full scale. \nDifferential Nonlinearity (DNL) \nDNL is the measure of the variation in analog value, normalized to full scale, associated with a 1 LSB change in digital input code. \nOffset Error \nOffset error is the deviation of the output current from the ideal \nof 0 mA. For IOUT1P , 0 mA output is expected when all inputs are set to 0. For IOUT1N, 0 mA output is expected when all \ninputs are set to 1.  \nGain Error \nGain error is the difference between the actual and ideal output span. The actual span is determined by the difference between \nthe output when all inputs are set to 1 and the output when all \ninputs are set to 0. \nOutput Compliance Range \nThe output compliance range is the range of allowable voltage  at the output of a current output DAC. Operation beyond the maximum compliance limits can cause either output stage \nsaturation or breakdown, resulting in nonlinear performance. \nTemp er ature Drift \nTemperature drift is specified as the maximum change from  \nthe ambient (25°C) value to the value at either T\nMIN or T MAX.  \nFor offset and gain drift, the drift is reported in ppm of full-scale \nrange (FSR) per degree Celsius. For reference voltage drift, the \ndrift is reported in ppm per degree Celsius. \nPower Supply Rejection (PSR) \nPSR is the maximum change in the full-scale output as the supplies are varied from minimum to maximum specified voltages. \n Settling Time \nSettling time is the time required for the output to reach and remain within a specified error band around its final value, \nmeasured from the start of the output transition. \nSpurious-Free Dynamic Range (SFDR) \nSFDR is the difference, in decibels, between the peak amplitude \nof the output signal and the peak spurious signal within the dc \nto Nyquist frequency of the DAC. Typically, energy in this band is rejected by the interpolation filters. This specification, there-fore, defines how well the interpolation filters work and the \neffect of other parasitic coupling paths on the DAC output. \nSignal-to-Noise Ratio (SNR) \nSNR is the ratio of the rms value of the measured output signal \nto the rms sum of all other spectr al components below the Nyquist \nfrequency, excluding the first six harmonics and dc. The value \nfor SNR is expressed in decibels. \nInterpolation Filter \nIf the digital inputs to the DAC are sampled at a multiple rate of \nf\nDATA (interpolation rate), a digital filter can be constructed that \nhas a sharp transition band near f DATA/2. Images that typically \nappear around f DAC (output data rate) can be greatly suppressed. \nAdjacent Channel Leakage Ratio (ACLR) \nACLR is the ratio in decibels relative to the carrier (dBc) between \nthe measured power within a channel and that of its adjacent \nchannel. \nComplex Image Rejection \nIn a traditional two-part upconversion, two images are created \naround the second IF frequency. These images have the effect  \nof wasting transmitter power and system bandwidth. By placing \nthe real part of a second complex modulator in series with the \nfirst complex modulator, either the upper or lower frequency \nimage near the second IF can be rejected. \n \n  \nAD9122 \n \nRev. B | Page 18 of 60 DIFFERENCES BETWEEN AD9122R1 AND AD9122R2 \nThe AD9122 underwent a die revision in early 2010, which \nincremented the die revision from R1 to R2. The following list \nexplains the differences between the revisions. \n• IOVDD supply voltage range. \nFor the AD9122R1, the valid operational voltage range  for IOVDD is 1.8 V to 2.5 V ± 10%. For the AD9122R2,  \nthe valid operational voltage range for IOVDD is 1.8 V  \nto 3.3 V ± 10%. \n• Reduction in spurs level variation.  The AD9122R1 has variation in the f\nDATA ± f OUT spur level \nbetween device startups. The AD9122R2 has a consistent \nand lower f DATA ± f OUT spur level. (The AD9122R2 still has  \na spur level variation between power cycles of about 5 dB  \nif the PLL is enabled.) \n• DCI delay feature added. The AD9122R2 has a programmable delay associated with the DCI signal. There are four programmable delay options. \nThe 00 setting gives the minimum delay and leaves the \ntiming unchanged from the AD9122R1. Additional delay \ncan be added to improve timing margins in some systems. The resulting timing options are shown in Table 13 . \n• Power-down mode power consumption increase. \nThe maximum power-down mode power consumption  \nof the R1 devices is 9.8 mW . This power consumption increased to 18.8 mW in the R2 devices. \n• Configuration register map changes. Register 0x0B, Bit 5: \nAD9122R1 Æ  Enable VCO \nAD9122R2 Æ  Inactive bit. The VCO is now enabled \nwhen the PLL is enabled. \nRegister 0x16, Bits[1:0]:  \nAD9122R1 Æ  Unused \nAD9122R2 Æ  These bits control the delay of the DCI \nsignal (00 = minimum delay, 11 = maximum delay). \nRegister 0x7F: \nAD9122R1 Æ  Version ID = 0x04 \nAD9122R2 Æ  Version ID = 0x0C DEVICE MARKING OF AD9122R1 AND AD9122R2 \nRevision 1 devices are marked as shown in Figure 36 . Revision 1 \ndevices with TxDAC® as the top line have date codes earlier than #1001. Revision 1 devices with AD80255 as the top line have date \ncodes of #1001 or later. \nTxDAC®\nAD9122BCPZ\n#09351688587.1\nKOREADATE CODEAD80255\nAD9122BCPZ#10011688586.1\nKOREA\n08281-136 \nFigure 36. Revision 1 Silicon, AD9122BCPZ Marking \nRevision 2 devices are marked as shown in Figure 37 . Revision 2 \ndevices have TxDAC® as the top line and date codes of #1001 or \nlater. \nDATE CODETxDAC®\nAD9122BCPZ\n#10211688782.1\nKOREA\n08281-137 \nFigure 37. Revision 2 Silicon, AD9122BCPZ Marking \n \n  \n \n   \n \n  \n \n \n AD9122\n \nRev. B | Page 19 of 60 THEORY OF OPERATION \nThe AD9122 combines many features that make it a very attractive \nDAC for wired and wireless communications systems. The dual digital signal path and dual DAC structure allow an easy interface to common quadrature modulators when designing single side-\nband (SSB) transmitters. The speed and performance of the \nAD9122 allow wider bandwidths and more carriers to be syn-thesized than in previously available DACs. In addition, the AD9122 includes an innovative low power, 32-bit, complex \nNCO that greatly increases the ease of frequency placement. \nThe AD9122 offers features that allow simplified synchroniza-\ntion with incoming data and between multiple devices. Auxiliary \nDACs are also provided on chip. The auxiliary DACs can be used \nfor output dc offset compensation (for LO compensation in SSB transmitters) and for gain matching (for image rejection optimiza-\ntion in SSB transmitters). \nSERIAL PORT OPERATION \nThe serial port is a flexible, synchronous serial communications \nport that allows easy interfacing to many industry-standard micro-\ncontrollers and microprocessors. The serial I/O is compatible with most synchronous transfer formats, including both the \nMotorola SPI and Intel® SSR protocols. The interface allows \nread/write access to all registers that configure the AD9122. Single-byte or multiple-byte transfers are supported, as well as MSB first or LSB first transfer formats. The serial port interface can be configured as a single-pin I/O (SDIO) or as two unidi-rectional pins for input and output (SDIO and SDO). \n52 SCLK51 SDIO50 SDO\n53CSSPI\nPORT\n08281-010 \nFigure 38. Serial Port Interface Pins  \nA communication cycle with the AD9122 has two phases.  Phase 1 is the instruction cycle (the writing of an instruction byte into the device), coincident with the first eight SCLK rising edges. The instruction byte provides the serial port controller with information regarding the data transfer cycle—Phase 2 of \nthe communication cycle. The Phase 1 instruction byte defines \nwhether the upcoming data transfer is a read or write, along with the starting register address for the first byte of the data transfer. The first eight SCLK rising edges of each communication cycle \nare used to write the instruction byte into the device. \nA logic high on the CS\n pin followed by a logic low resets the \nserial port timing to the initial state of the instruction cycle. \nFrom this state, the next eight rising SCLK edges represent the \ninstruction bits of the current I/O operation. \n    The remaining SCLK edges are for Phase 2 of the communication \ncycle. Phase 2 is the actual data transfer between the device and \nthe system controller. Phase 2 of the communication cycle is a \ntransfer of one or more data bytes. Registers change immediately \nupon writing to the last bit of each transfer byte, except for the \nfrequency tuning word and NCO phase offsets, which change only when the frequency tuning word (FTW) update bit \n(Register 0x36, Bit 0) is set. \nDATA FORMAT \nThe instruction byte contains the information shown in Table 9 . \nTable 9. Serial Port Instruction Byte \nI7 (MSB) I6 I5 I4 I3 I2 I1 I0 (LSB) \nR/W A6 A5 A4 A3 A2 A1 A0  \nR/W, Bit 7 of the instruction byte, determines whether a read  \nor a write data transfer occurs after the instruction byte write. \nLogic 1 indicates a read operation, and Logic 0 indicates a write operation. \nA6 to A0, Bit 6 to Bit 0 of the instruction byte, determine the \nregister that is accessed during the data transfer portion of the \ncommunication cycle. For multibyte transfers, A6 is the starting byte address. The remaining register addresses are generated by \nthe device based on the LSB_FIRST bit (Register 0x00, Bit 6). \nSERIAL PORT PIN DESCRIPTIONS \nSerial Clock (SCLK) \nThe serial clock pin synchronizes data to and from the device \nand runs the internal state machines. The maximum frequency of SCLK is 40 MHz. All data input is registered on the rising edge of SCLK. All data is driven out on the falling edge of SCLK. \nChip Select ( CS\n) \nAn active low input starts and gates a communication cycle.  \nIt allows more than one device to be used on the same serial \ncommunications lines. When the CS pin is high, the SDO and \nSDIO pins go to a high impedance state. During the communica-\ntion cycle, the CS pin should stay low. \nSerial Data I/O (SDIO) \nData is always written into the device on this pin. However, this \npin can be used as a bidirectional data line. The configuration of this pin is controlled by Register 0x00, Bit 7. The default is Logic 0, configuring the SDIO pin as unidirectional. \nSerial Data Output (SDO) \nData is read from this pin for protocols that use separate lines \nfor transmitting and receiving data. If the device operates in a \nsingle bidirectional I/O mode, this pin does not output data and \nis set to a high impedance state. \n \nAD9122 \n \nRev. B | Page 20 of 60 SERIAL PORT OPTIONS \nThe serial port can support both MSB first and LSB first data \nformats. This functionality is controlled by the LSB_FIRST bit \n(Register 0x00, Bit 6). The default is MSB first (LSB_FIRST = 0). \nWhen LSB_FIRST = 0 (MSB first), the instruction and data bits \nmust be written from MSB to LSB. Multibyte data transfers in MSB first format start with an instruction byte that includes the \nregister address of the most significant data byte. Subsequent \ndata bytes should follow from high address to low address. In MSB first mode, the serial port internal byte address generator decrements for each data byte of the multibyte communication \ncycle. \nWhen LSB_FIRST = 1 (LSB first), the instruction and data bits \nmust be written from LSB to MSB. Multibyte data transfers in \nLSB first format start with an instruction byte that includes the \nregister address of the least significant data byte. Subsequent data bytes should follow from low address to high address. In LSB first mode, the serial port internal byte address generator increments for each data byte of the multibyte communication \ncycle. \nIf the MSB first mode is active, the serial port controller data \naddress decrements from the data address written toward 0x00 \nfor multibyte I/O operations. If the LSB first mode is active, the serial port controller data address increments from the data \naddress written toward 0x7F for multibyte I/O operations. \n \nR/W A6 A5 A4 A3 A2 A1 A0 D7ND6ND5ND00D10D20D30\nD7ND6ND5ND00D10D20D30INSTRUCTION CYCLE DATA TRANSFER CYCLE\nCS\nSCLK\nSDIO\nSDO\n08281-011 \nFigure 39. Serial Port Interface Timing, MSB First SCLK\nSDIO\nSDOCS\nA0 A1 A2 A3 A4 A5 A6 D00D10D20D7ND6ND5ND4N\nD00D10D20D7ND6ND5ND4NINSTRUCTION CYCLE DATA TRANSFER CYCLE\n08281-012R/W\n \nFigure 40. Serial Port Interface Timing, LSB First \n \nSCLK\nSDIOCS\nINSTRUCTION BIT 6 INSTRUCTION BIT 7tDCSB\ntDStDHtPWH tPWLtSCLK\n08281-013 \nFigure 41. Timing Diagram for Serial Port Register Write \n \nSCLK\nSDIO,\nSDOCS\nDATA BIT n – 1 DATA BIT ntDV\n08281-014 \nFigure 42. Timing Diagram for Serial Port Register Read \n \n \n AD9122\n \nRev. B | Page 21 of 60 DEVICE CONFIGURATION REGISTER MAP AND DESCRIPTIONS \nTable 10. Device Configuration Register Map \nAddr \n(Hex) Register Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Default\n0x00 Comm SDIO LSB_FIRST Reset      0x00 \n0x01 Power control Power \ndown  \nI DAC Power \ndown  \nQ DAC Power \ndown data \nreceiver Power \ndown \naux ADC     0x10 \n0x03 Data format Binary \ndata \nformat Q data  \nfirst MSB swap    Data Bus Width[1:0] 0x00 \n0x04 Interrupt enable Enable \nPLL lock \nlost Enable \nPLL \nlocked Enable \nsync \nsignal lost Enable \nsync \nsignal \nlocked   Enable FIFO \nWarning 1 Enable \nFIFO \nWarning 2 0x00 \n0x05 Interrupt enable 0 0 0 Enable AED compare \npass Enable \nAED compare \nfail Enable \nSED compare \nfail 0 0 0x00 \n0x06 Event flag PLL lock \nlost PLL locked Sync signal  \nlost Sync \nsignal \nlocked   FIFO \nWarning 1 FIFO Warning 2 N/A \n0x07 Event flag    AED \ncompare \npass AED \ncompare \nfail SED \ncompare \nfail   N/A \n0x08 Clock receiver control DACCLK duty \ncorrection REFCLK \nduty \ncorrection DACCLK \ncross- \ncorrection REFCLK \ncross- \ncorrection 1 1 1 1 0x3F \n0x0A PLL control PLL \nenable PLL manual \nenable Manual VCO Band[5:0] 0x40 \n0x0C PLL control PLL Loop  \nBandwidth[1:0]  PLL Charge Pump Current[4:0] 0xD1 \n0x0D PLL control N2[1:0]  PLL cross-control \nenable N0[1:0] N1[1:0] 0xD9 \n0x0E PLL status PLL locked    VCO Control Voltage[3:0] N/A \n0x0F PLL status   VCO Band Readback[5:0] N/A \n0x10 Sync control Sync \nenable Data/FIFO rate toggle   Rising edge syncSync Averaging[2:0] 0x48 \n0x11 Sync control   Sync Phase Request[5:0] 0x00 \n0x12 Sync status Sync lost Sync \nlocked       N/A \n0x13 Sync status Sync Phase Readback[7:0] (6.2 format) N/A \n0x15 Data receiver status   LVDS FRAME \nlevel high LVDS \nFRAME \nlevel low LVDS DCI \nlevel high LVDS DCI level low LVDS data level high LVDS data level low N/A \n0x16 DCI delay       DCI Delay[1:0] 0x00 \n0x17 FIFO control      FIFO Phase Offset[2:0] 0x04 \n0x18 FIFO status FIFO \nWarning 1 FIFO Warning 2    FIFO soft align ack FIFO soft align \nrequest  N/A \n0x19 FIFO status FIFO Level[7:0] N/A \n0x1B Datapath \ncontrol Bypass premod Bypass sinc\n−1 Bypass NCO  NCO gain Bypass phase \ncomp and \ndc offset Select sideband Send  I data to  \nQ data 0xE4 \nAD9122 \n \nRev. B | Page 22 of 60 Addr \n(Hex) Register Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Default\n0x1C HB1 control      HB1[1:0] Bypass HB1 0x00 \n0x1D HB2 control  HB2[5:0] Bypass HB2 0x00 \n0x1E HB3 control  HB3[5:0]  Bypass HB3 0x00 \n0x1F Chip ID Chip ID[7:0] 0x08 \n0x30 FTW LSB FTW[7:0] 0x00 \n0x31 FTW FTW[15:8] 0x00 \n0x32 FTW FTW[23:16] 0x00 \n0x33 FTW MSB FTW[31:24] 0x00 \n0x34 NCO phase \noffset LSB NCO Phase Offset[7:0] 0x00 \n0x35 NCO phase offset MSB NCO Phase Offset[15:8] 0x00 \n0x36 NCO FTW update   FRAME FTW ack FRAME FTW \nrequest   Update \nFTW ack Update FTW \nrequest 0x00 \n0x38 I phase adj LSB I Phase Adj[7:0] 0x00 \n0x39 I phase adj MSB       I Phase Adj[9:8] 0x00 \n0x3A Q phase adj LSB Q Phase Adj[7:0] 0x00 \n0x3B Q phase adj MSB       Q Phase Adj[9:8] 0x00 \n0x3C I DAC offset LSB I DAC Offset[7:0] 0x00 \n0x3D I DAC offset MSB I DAC Offset[15:8] 0x00 \n0x3E Q DAC offset LSB Q DAC Offset[7:0] 0x00 \n0x3F Q DAC offset MSB Q DAC Offset[15:8] 0x00 \n0x40 I DAC FS adjust I DAC FS Adj[7:0] 0xF9 \n0x41 I DAC control I DAC sleep      I DAC FS Adj[9:8] 0x01 \n0x42 I aux DAC data I Aux DAC[7:0] 0x00 \n0x43 I aux DAC \ncontrol I aux DAC sign I aux DAC current \ndirection I aux DAC \nsleep    I Aux DAC[9:8] 0x00 \n0x44 Q DAC FS adjust Q DAC FS Adj[7:0] 0xF9 \n0x45 Q DAC control Q DAC sleep      Q DAC FS Adj[9:8] 0x01 \n0x46 Q aux DAC data Q Aux DAC[7:0] 0x00 \n0x47 Q aux DAC \ncontrol Q aux DAC sign Q aux DAC current \ndirection Q aux \nDAC \nsleep    Q Aux DAC[9:8] 0x00 \n0x48 Die temp range control  FS Current[2:0] Reference Current[2:0] Capacitor value 0x02 \n0x49 Die temp LSB Die Temp[7:0] N/A \n0x4A Die temp MSB Die Temp[15:8] N/A \n0x67 SED control SED \ncompare \nenable  Sample \nerror \ndetected  Autoclear \nenable  Compare fail Compare pass 0x00 \n0x68 Compare I0 LSBs Compare Value I0[7:0] 0xB6 \n0x69 Compare  I0 MSBs Compare Value I0[15:8] 0x7A \n0x6A Compare  Q0 LSBs Compare Value Q0[7:0] 0x45 \n0x6B Compare  Q0 MSBs Compare Value Q0[15:8] 0xEA \n AD9122\n \nRev. B | Page 23 of 60 Addr \n(Hex) Register Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Default\n0x6C Compare I1 LSBs Compare Value I1[7:0] 0x16 \n0x6D Compare  \nI1 MSBs Compare Value I1[15:8] 0x1A \n0x6E Compare  \nQ1 LSBs Compare Value Q1[7:0] 0xC6 \n0x6F Compare  Q1 MSBs Compare Value Q1[15:8] 0xAA \n0x70 SED I LSBs Errors Detected I_BITS[7:0] 0x00 \n0x71 SED I MSBs Errors Detected I_BITS[15:8] 0x00 \n0x72 SED Q LSBs Errors Detected Q_BITS[7:0] 0x00 \n0x73 SED Q MSBs Errors Detected Q_BITS[15:8] 0x00 \n0x7F Revision 0 0 Revision[3:0] 0 0 N/A \n \nTable 11. Device Configuration Register Descriptions \nRegister \nName Address (Hex) Bits Name Description Default \nComm 0x00 7 SDIO SDIO pin operation. 0 \n    0 = SDIO operates as an input only.  \n    1 = SDIO operates as a bidirectional input/output.  \n  6 LSB_FIRST Serial port communication, LSB or MSB first. 0 \n    0 = MSB first.  \n    1 = LSB first.  \n  5 Reset The device is placed in reset when this bit is written high \nand remains in reset until the bit is written low. 0 \nPower Control 0x01 7 Power down I DAC 1 = power down I DAC. 0 \n 6 Power down Q DAC 1 = power down Q DAC. 0 \n  5 Power down data \nreceiver 1 = power down the input data receiver. 0 \n  4 Power down auxiliary ADC 1 = power down the auxiliary ADC for temperature sensor. 1 \nData Format 0x03 7 Binary data format 0 = input da ta is in twos complement format. 0 \n   1 = input data is in binary format.  \n  6 Q data first  Indicates I/Q data pairing on data input. 0 \n    0 = I data sent to data receiver first.  \n    1 = Q data sent to data receiver first.  \n  5 MSB swap Swaps the bit order of the data input port. 0 \n    0 = order of the data bits corresponds to the pin descriptions.  \n    1 = bit designations are swapped; most significant bits \nbecome the least significant bits.  \n  [1:0] Data Bus Width[1:0] Data receiver interface mode. See the LVDS Input Data Ports  \nsection for information about the operation of the different \ninterface modes. 00 \n    00 = word mode; 16-bit interface bus width.  \n    01 = byte mode; 8-bit interface bus width.  \n    10 = nibble mode; 4-bit interface bus width.  \n    11 = invalid.  \nInterrupt Enable 0x04 7 Enable PLL lock lost 1 = enab le interrupt for PLL lock lost. 0 \n6 Enable PLL locked 1 = enable interrupt for PLL locked. 0 \n5 Enable sync signal lost 1 = enable interrupt for sync signal lost. 0 \n4 Enable sync signal locked 1 = enable interrupt for sync signal locked. 0 \n1 Enable FIFO Warning 1 1 = enable interrupt for FIFO Warning 1. 0 \n0 Enable FIFO Warning 2 1 = enable interrupt for FIFO Warning 2. 0 \nAD9122 \n \nRev. B | Page 24 of 60 Register \nName Address (Hex) Bits Name Description Default \nInterrupt \nEnable 0x05 [7:5] Set to 0 Set these bits to 0. 000 \n4 Enable AED compare pass 1 = enable interrupt for AED comparison pass. 0 \n3 Enable AED compare fail 1 = enable interrupt for AED comparison fail. 0 \n2 Enable SED compare fail 1 = enable interrupt for SED comparison fail. 0 \n[1:0] Set to 0 Set these bits to 0.  00 \nEvent Flag 0x06 7 PLL lock lost 1 = indicates that the PLL, which had been previously \nlocked, has unlocked from the reference signal. This is a  \nlatched signal. N/A \n6 PLL locked 1 = indicates that the PLL has locked to the reference  clock input. N/A \n5 Sync signal lost 1 = indicates that the sync logic, which had been previously locked, has lost alignment. This is a latched signal. N/A \n4 Sync signal locked 1 = indicates that the sync logic has achieved sync alignment. This is indicated when no phase changes  \nwere requested for at least a few full averaging cycles. N/A \n1 FIFO Warning 1 1 = indicates that the difference between the FIFO read  \nand write pointers is 1. N/A \n0 FIFO Warning 2 1 = indicates that the difference between the FIFO read  and write pointers is 2.  N/A \n   Note that all event flags are cleared by writing the respective bit high.  \n 0x07 4 AED compare pass 1 = indicates that the SED logic detected a valid input data pattern compared against the preprogrammed expected \nvalues. This is a latched signal. N/A \n3 AED compare fail 1 = indicates that the SED logic detected an invalid input data pattern compared ag ainst the preprogrammed \nexpected values. This latched signal is automatically cleared when eight valid I/Q data pairs are received. N/A \n2 SED compare fail 1 = indicates that the SED logic detected an invalid input \ndata pattern compared ag ainst the preprogrammed \nexpected values. This is a latched signal. N/A \n   Note that all event flags are cleared by writing the respective bit high.  \nClock Receiver \nControl 0x08 7 DACCLK duty correction 1 = enable duty cycle correction on the DACCLK input. 0 \n6 REFCLK duty correction 1 = enable duty cycle correction on the REFCLK input. 0 \n5 DACCLK cross-correction 1 = enable differential crossing correction on the DACCLK input. 1 \n  4 REFCLK cross-correction 1 = enable differential crossing correction on the REFCLK input. 1 \nPLL Control 0x0A 7 PLL enable 1 = enable the PLL clock multipli er. The REFCLK input is used \nas the PLL reference clock signal. 0 \n6 PLL manual enable 1 = enable manual selection of the VCO band. The correct VCO band must be determined by the user and written to \nBits[5:0]. 1 \n[5:0] Manual VCO Band[5:0] Selects the VCO band to be used. 000000 \n 0x0C [7:6] PLL Loop Bandwidth[1:0] Selects the PLL loop filter bandwidth. 11 \n  00 = widest bandwidth.  \n  …  \n  11 = narrowest bandwidth.  \n[4:0] PLL Charge Pump \nCurrent[4:0] Sets the nominal PLL charge pump current. 10001 \n 00000 = lowest current setting.  \n  …  \n  11111 = highest current setting.  \n AD9122\n \nRev. B | Page 25 of 60 Register \nName Address (Hex) Bits Name Description Default \nPLL Control 0x0D [7:6] N2[1:0] PLL control clock divider. This divider determines the ratio of \nthe DACCLK frequency to the PLL controller clock frequency. \nfPC_CLK  must always be less than 75 MHz. 11 \n  00 = f DACCLK /fPC_CLK  = 2.  \n  01 = f DACCLK /fPC_CLK  = 4.  \n  10 = f DACCLK /fPC_CLK  = 8.  \n  11 = f DACCLK /fPC_CLK  = 16.  \n4 PLL cross-control enable 1 = enable PLL cross-point controller. 1 \n[3:2] N0[1:0] PLL VCO divider. This divider determines the ratio of the VCO \nfrequency to the DACCLK frequency. 10 \n  00 = f VCO/fDACCLK  = 1.  \n  01 = f VCO/fDACCLK  = 2.  \n  10 = f VCO/fDACCLK  = 4.  \n  11 = f VCO/fDACCLK  = 4.  \n[1:0] N1[1:0] PLL loop divider. This divider determines the ratio of the DACCLK frequency to the REFCLK frequency. 01 \n    00 = f DACCLK /fREFCLK  = 2.  \n    01 = f DACCLK /fREFCLK  = 4.  \n    10 = f DACCLK /fREFCLK  = 8.  \n    11 = f DACCLK /fREFCLK  = 16.  \nPLL Status 0x0E 7 PLL locked 1 = the PLL-generated clock is tracking the REFCLK input signal. N/A \n[3:0] VCO Control Voltage[3:0] VCO control voltage readback. See Table 24 . N/A \n 0x0F [5:0] VCO Band Readback[5:0] Indicates the VCO band currently selected. N/A \nSync Control 0x10 7 Sync enable 1 = enable the synchronization logic. 0 \n6 Data/FIFO rate toggle 0 = operate the synchronization at the FIFO reset rate. 1 \n  1 = operate the synchronization at the data rate.  \n3 Rising edge sync 0 = sync is initiated on the falling edge of the sync input. 1 \n  1 = sync is initiated on the rising edge of the sync input.  \n[2:0] Sync Averaging[2:0] Sets the number of input samples that are averaged in determining the sync phase. 000 \n    000 = 1.  \n    001 = 2.  \n    010 = 4.  \n    011 = 8.  \n    100 = 16.  \n    101 = 32.  \n    110 = 64.  \n    111 = 128.  \n 0x11 [5:0] Sync Phase Request[5:0] This register sets the requested clock phase offset after sync. The offset unit is in DACCLK cycles. This register enables \nrepositioning of the DAC output with respect to the sync input. The offset can also be used to skew the DAC outputs \nbetween the synchronized DACs. 000000 \n    000000 = 0 DACCLK cycles.  \n    000001 = 1 DACCLK cycle.  \n    …  \n    111111 = 63 DACCLK cycles.  \nAD9122 \n \nRev. B | Page 26 of 60 Register \nName Address (Hex) Bits Name Description Default \nSync Status 0x12 7 Sync lost 1 = synchroniz ation was attained but has been lost. N/A \n6 Sync locked 1 = synchronization has been attained. N/A \n 0x13 [7:0] Sync Phase Readback[7:0] Indicates the averaged sync phase offset (6.2 format). If  \nthis value differs from the Sync Phase Request[5:0] value  in Register 0x11, a sync timing error has occurred. For more \ninformation, see the Sync Status Bits  section. N/A \n    00000000 = 0.0.  \n    00000001 = 0.25.  \n    …  \n    11111110 = 63.50.  \n    11111111 = 63.75.  \nData \nReceiver \nStatus 0x15 5 LVDS FRAME level high One or both LVDS FRAME input signals have exceeded 1.7 V. N/A \n4 LVDS FRAME level low One or both LVDS FRAME input signals have crossed below \n0.7 V. N/A \n3 LVDS DCI level high One or both LVDS DCI input signals have exceeded 1.7 V. N/A \n2 LVDS DCI level low One or both LVDS DCI input signals have crossed \nbelow 0.7 V. N/A \n1 LVDS data level high One or more LVDS Dx input signals have exceeded 1.7 V. N/A \n0 LVDS data level low One or more LVDS Dx input signals have crossed below 0.7 V. N/A \nDCI Delay 0x16 [1:0] DCI Delay[1:0] This option is available for the Revision 2 silicon only. The \nDCI delay bits control the delay applied to the DCI signal. \nThe DCI delay affects the sampling interval of the DCI with respect to the Dx inputs. See Table 13 . \n00 = 350 ps delay of DCI signal.  01 = 590 ps delay of DCI signal.  \n10 = 800 ps delay of DCI signal.  \n11 = 925 ps delay of DCI signal. 00 \nFIFO \nControl 0x17 [2:0] FIFO Phase Offset[2:0] FIFO write pointer phase offset following FIFO reset. This  is the difference between the read pointer and the write \npointer values upon FIFO reset. The optimal value is \nnominally 4 (100). 100 \n   000 = 0.  \n   001 = 1.  \n   …  \n   111 = 7.  \nFIFO Status 0x18 7 FIFO Warning 1 1 = FIFO read and write pointers are within ±1. N/A \n6 FIFO Warning 2 1 = FIFO read and write pointers are within ±2. N/A \n2 FIFO soft align acknowledge 1 = FIFO read and write pointers are aligned after a serial port initiated FIFO reset. N/A \n1 FIFO soft align request 1 = request FIFO read and write pointer alignment via the serial port. 0 \n 0x19 [7:0] FIFO Level[7:0] Thermometer encoded measure of the FIFO level. N/A \n AD9122\n \nRev. B | Page 27 of 60 Register \nName Address (Hex) Bits Name Description Default \nDatapath \nControl 0x1B 7 Bypass premod 1 = bypass the f S/2 premodulator. 1 \n6 Bypass sinc−1 1 = bypass the inverse sinc filter. 1 \n5 Bypass NCO 1 = bypass the NCO. 1 \n3 NCO gain 0 = no gain scaling is applied to the NCO input to the internal digital modulator (default). 0 \n  1 = gain scaling of 0.5 is applied to the NCO input to the \ninternal digital modulator. Gain scaling can eliminate satu-\nration of the modulator output for some combinations of \ndata inputs and NCO signals.  \n2 Bypass phase \ncompensation  \nand dc offset 1 = bypass phase compensation and dc offset. 1 \n1 Select sideband 0 = the modula tor outputs the high-side image. 0 \n  1 = the modulator outputs the low-side image. The image is spectrally inverted compared to the input data.  \n0 Send I data to Q data 1 = ignore Q data from the interface and disable the clocks to the Q datapath. Send I data to both the I and Q DACs. 0 \nHB1 Control 0x1C [2:1] HB1[1:0] Modulation  mode for I Side Half-Band Filter 1. 00 \n   00 = input signal not modulated; filter pass band is from −0.4 to +0.4 of f\nIN1.  \n  01 = input signal not modulated; filter pass band is from  \n0.1 to 0.9 of f IN1.   \n  10 = input signal modulated by f IN1; filter pass band is from  \n0.6 to 1.4 of f IN1.   \n  11 = input signal modulated by f IN1; filter pass band is from  \n1.1 to 1.9 of f IN1.   \n0 Bypass HB1 1 = bypass the first-stage interpolation filter. 0 \nHB2 Control 0x1D [6:1] HB2[5:0]  Modulation mode for I Side Half-Band Filter 2. 000000 \n  000000 = input signal not modulate d; filter pass band is \nfrom −0.25 to +0.25 of f IN2.  \n  001001 = input signal not modulate d; filter pass band is  \nfrom 0.0 to 0.5 of f IN2.  \n  010010 = input signal not modulate d; filter pass band is  \nfrom 0.25 to 0.75 of f IN2.  \n  011011 = input signal not modulate d; filter pass band is  \nfrom 0.5 to 1.0 of f IN2.  \n  100100 = input signal modulated by f IN2; filter pass band is  \nfrom 0.75 to 1.25 of f IN2.  \n  101101 = input signal modulated by f IN2; filter pass band is  \nfrom 1.0 to 1.5 of f IN2.  \n  110110 = input signal modulated by f IN2; filter pass band is  \nfrom 1.25 to 1.75 of f IN2.  \n  111111 = input signal modulated by f IN2; filter pass band is  \nfrom 1.5 to 2.0 of f IN2.  \n0 Bypass HB2 1 = bypass the second-stage interpolation filter. 0 \nAD9122 \n \nRev. B | Page 28 of 60 Register \nName Address (Hex) Bits Name Description Default \nHB3 Control 0x1E [6:1] HB3[5:0] Modulation  mode for I Side Half-Band Filter 3. 000000 \n    000000 = input signal not modulate d; filter pass band is \nfrom −0.2 to +0.2 of f IN3.  \n    001001 = input signal not modulate d; filter pass band is  \nfrom 0.05 to 0.45 of f IN3.  \n    010010 = input signal not modulate d; filter pass band is  \nfrom 0.3 to 0.7 of f IN3.  \n    011011 = input signal not modulate d; filter pass band is  \nfrom 0.55 to 0.95 of f IN3.  \n    100100 = input signal modulated by f IN3; filter pass band is  \nfrom 0.8 to 1.2 of f IN3.  \n    101101 = input signal modulated by f IN3; filter pass band is  \nfrom 1.05 to 1.45 of f IN3.  \n    110110 = input signal modulated by f IN3; filter pass band is  \nfrom 1.3 to 1.7 of f IN3.  \n    111111 = input signal modulated by f IN3; filter pass band is  \nfrom 1.55 to 1.95 of f IN3.  \n  0 Bypass HB3 1 = bypass the third-stage interpolation filter. 0 \nChip ID 0x1F [7:0] Chip ID[7:0] This regi ster identifies the device as an AD9122. 00001000 \nFTW LSB 0x30 [7:0] FTW[7:0] See Register 0x33. 00000000 \nFTW 0x31 [7:0] FTW[15:8] See Register 0x33. 00000000 \nFTW 0x32 [7:0] FTW[23:16] See Register 0x33. 00000000 \nFTW MSB 0x33 [7:0] FTW[31:24] FTW[31:0] is the 32-bit frequency tuning word that deter-\nmines the frequency of the complex carrier generated by the \non-chip NCO. The frequency is not updated when the FTW \nregisters are written. The values are only updated when Bit 0 \nof Register 0x36 transitions from 0 to 1. 00000000 \nNCO Phase \nOffset LSB 0x34 [7:0] NCO Phase Offset[7:0] See Register 0x35. 00000000 \nNCO Phase Offset MSB 0x35 [7:0] NCO Phase Offset[15:8] The NCO sets the phase of the complex carrier signal when the NCO is reset. The phase offset spans from 0° to 360°. \nEach bit represents an offset of 0.0055°. This value is in  \ntwos complement format. 00000000 \nNCO FTW Update 0x36 5 FRAME FTW acknowledge 1 = the NCO has been reset due to an extended FRAME pulse signal. 0 \n4 FRAME FTW request 0 = the NCO is reset on the first extended FRAME pulse after this bit is set to 1. 0 \n1 Update FTW acknowledge 1 = the FTW has been updated. 0 \n0 Update FTW request The FTW is updated on  the 0-to-1 transition of this bit. 0 \nI Phase Adj LSB 0x38 [7:0] I Phase Adj[7:0] See Register 0x39. 00000000 \nI Phase Adj MSB 0x39 [1:0] I Phase Adj[9:8] I Phase Adj[9:0] is used to in sert a phase offset between  \nthe I and Q datapaths. This offset can be used to correct  for phase imbalance in a quadrature modulator. See the \nQuadrature Phase Correction section for more information. 00 \nQ Phase Adj \nLSB 0x3A [7:0] Q Phase Adj[7:0] See Register 0x3B. 00000000 \nQ Phase Adj MSB 0x3B [1:0] Q Phase Adj[9:8] Q Phase Adj[9:0] is used to insert a phase offset between  the I and Q datapaths. This offset can be used to correct  \nfor phase imbalance in a quadrature modulator. See the \nQuadrature Phase Correction section for more information. 00 \nI DAC Offset LSB 0x3C [7:0] I DAC Offset[7:0] See Register 0x3D. 00000000 \nI DAC Offset MSB 0x3D [7:0] I DAC Offset[15:8] I DAC Offset[15:0] is a value that is added directly to the samples written to the I DAC. 00000000 \n AD9122\n \nRev. B | Page 29 of 60 Register \nName Address (Hex) Bits Name Description Default \nQ DAC \nOffset LSB 0x3E [7:0] Q DAC Offset[7:0] See Register 0x3F. 00000000 \nQ DAC Offset MSB 0x3F [7:0] Q DAC Offset[15:8] Q DAC Offset[15:0] is a value that is added directly to the samples written to the Q DAC. 00000000 \nI DAC  FS Adjust 0x40 [7:0] I DAC FS Adj[7:0] See Register 0x41, Bits[1:0]. 11111001 \nI DAC Control 0x41 7 I DAC sleep 1 = puts the I DAC in to sleep mode (fast wake-up mode). 0 \n[1:0] I DAC FS Adj[9:8] I DAC FS Adj[9:0] sets the full-scale current of the I DAC.  The full-scale current can be adjusted from 8.64 mA to  \n31.68 mA in step sizes of approximately 22.5 μA. 01 \n    0x000 = 8.64 mA.  \n    …  \n    0x200 = 20.16 mA.  \n    …  \n    0x3FF = 31.68 mA.  \nI Aux DAC \nData 0x42 [7:0] I Aux DAC[7:0] See Register 0x43, Bits[1:0]. 00000000 \nI Aux DAC Control  0x43 7 I aux DAC sign 0 = the I auxiliary DAC sign is positive, and the current is directed to the IOUT1P pin (Pin 67). 0 \n  1 = the I auxiliary DAC sign is negative, and the current is directed to the IOUT1N pin (Pin 66).  \n6 I aux DAC current direction 0 = the I auxiliary DAC sources current. 0 \n 1 = the I auxiliary DAC sinks current.  \n5 I aux DAC sleep 1 = puts the I auxiliary DAC into sleep mode. 0 \n[1:0] I Aux DAC[9:8] I Aux DAC[9:0] sets the magnitude of the auxiliary DAC \ncurrent. The range is 0 mA to 2 mA, and the step size is 2 μA. 00 \n    0x000 = 0.000 mA.  \n    0x001 = 0.002 mA.  \n    …  \n    0x3FF = 2.046 mA.  \nQ DAC  FS Adjust 0x44 [7:0] Q DAC FS Adj[7:0] See Register 0x45, Bits[1:0]. 11111001 \nQ DAC Control 0x45 7 Q DAC sleep 1 = puts the Q DAC in to sleep mode (fast wake-up mode). 0 \n[1:0] Q DAC FS Adj[9:8] Q DAC FS Adj[9:0] sets the full-scale current of the Q DAC. \nThe full-scale current can be adjusted from 8.64 mA to \n31.68 mA in step sizes of approximately 22.5 μA. 01 \n    0x000 = 8.64 mA.  \n    …  \n    0x200 = 20.16 mA.  \n    …  \n    0x3FF = 31.68 mA.  \nQ Aux DAC Data 0x46 [7:0] Q Aux DAC[7:0]  See Register 0x47, Bits[1:0]. 00000000 \nAD9122 \n \nRev. B | Page 30 of 60 Register \nName Address (Hex) Bits Name Description Default \nQ Aux DAC \nControl 0x47 7 Q aux DAC sign 0 = the Q auxiliary DAC sign is positive, and the current is directed to the IOUT2P pin (Pin 58). 0 \n  1 = the Q auxiliary DAC sign is negative, and the current is directed to the IOUT2N pin (Pin 59).  \n6 Q aux DAC current \ndirection 0 = the Q auxiliary DAC sources current. 0 \n 1 = the Q auxiliary DAC sinks current.  \n5 Q aux DAC sleep 1 = puts the Q auxiliary DAC into sleep mode. 0 \n[1:0] Q Aux DAC[9:8] Q Aux DAC[9:0] sets the magnitude of the auxiliary DAC \ncurrent. The range is 0 mA to 2 mA, and the step size is 2 μA. 00 \n    0x000 = 0.000 mA.  \n    0x001 = 0.002 mA.  \n    …  \n    0x3FF = 2.046 mA.  \nDie Temp Range \nControl 0x48 [6:4] FS Current[2:0] Auxiliary ADC full-scale current. 000 \n   000 = lowest current.  \n   …  \n    111 = highest current.  \n  [3:1] Reference Current[2:0] Auxiliary ADC reference current. 001 \n    000 = lowest current.  \n    …  \n    111 = highest current.  \n  0 Capacitor value Auxiliary ADC internal capacitor value. 0 \n    0 = 5 pF.  \n    1 = 10 pF.  \nDie Temp \nLSB 0x49 [7:0] Die Temp[7:0] See Register 0x4A. N/A \nDie Temp MSB 0x4A [7:0] Die Temp[15:8] Die Temp[15:0] indicates the approximate die temperature. For more information, see the Temperature Sensor section. N/A \nSED Control 0x67 7 SED compare enable 1 = enable the SED circuitry. None of the flags in this register or the values in Register 0x70 through Register 0x73 are \nsignificant if the SED is not enabled. 0 \n5 Sample error detected 1 = indicates an error was detected. The bit remains set until cleared. Any write to this regi ster clears this bit to 0. 0 \n3 Autoclear enable 1 = enable autoclear mode. This activates Bit 1 and Bit 0 of this register and causes Regi ster 0x70 through Register 0x73 \nto be autocleared when eight consecutive sample data sets \nare received error free. 0 \n1 Compare fail 1 = indicates an error was detected. This bit remains set until \nit is autocleared by the reception of eight consecutive error-\nfree comparisons or is cleared by a write to this register. 0 \n0 Compare pass 1 = indicates that the last sample comparison was error free. 0 \nCompare  \nI0 LSBs 0x68 [7:0] Compare Value I0[7:0] See Register 0x69. 10110110 \nCompare  \nI0 MSBs 0x69 [7:0] Compare Value I0[15:8] Compare Value I0[15:0] is the word that is compared with the I0 input sample captured at the input interface. 01111010 \nCompare  Q0 LSBs 0x6A [7:0] Compare Value Q0[7:0] See Register 0x6B. 01000101 \nCompare  Q0 MSBs 0x6B [7:0] Compare Value Q0[15:8] Compare Value Q0[15:0] is the word that is compared with the Q0 input sample captured at the input interface. 11101010 \nCompare  I1 LSBs 0x6C [7:0] Compare Value I1[7:0] See Register 0x6D. 00010110 \nCompare  I1 MSBs 0x6D [7:0] Compare Value I1[15:8] Compare Value I1[15:0] is the word that is compared  with the I1 input sample cap tured at the input interface. 00011010 \n AD9122\n \nRev. B | Page 31 of 60 Register \nName Address (Hex) Bits Name Description Default \nCompare  \nQ1 LSBs 0x6E [7:0] Compare Value Q1[7:0] See Register 0x6F. 11000110 \nCompare  Q1 MSBs 0x6F [7:0] Compare Value Q1[15:8] Compare Value Q1[15:0] is the word that is compared  with the Q1 input sample captured at the input interface. 10101010 \nSED I  LSBs 0x70 [7:0] Errors Detected I_BITS[7:0] See Register 0x71. 00000000 \nSED I  MSBs 0x71 [7:0] Errors Detected  I_BITS[15:8] Errors Detected I_BITS[15:0] indicates which bits were received in error. 00000000 \nSED Q  LSBs 0x72 [7:0] Errors Detected  Q_BITS[7:0] See Register 0x73. 00000000 \nSED Q  MSBs 0x73 [7:0] Errors Detected  Q_BITS[15:8] Errors Detected Q_BITS[15:0]  indicates which bits were \nreceived in error. 00000000 \nRevision 0x7F [5:2] Revision[3:0] This value corresponds to the die revision number. 0001 = Die Revision 1. \n0011 = Die Revision 2. N/A \n \nAD9122 \n \nRev. B | Page 32 of 60 LVDS INPUT DATA PORTS \nThe AD9122 has one LVDS data port that receives data for  \nboth the I and Q transmit paths. The device can accept data in word, byte, and nibble formats. In word, byte, and nibble modes, the data is sent over 16-bit, 8-bit, and 4-bit LVDS data buses, \nrespectively. The pin assignments of the bus in each mode are \nshown in Table 12 . \nTable 12. Data Bit Pair Assignments for Data Input Modes \nMode MSB to LSB \nWord D15, D14, …, D0 \nByte1 D14, D12, D10, D8, D7, D5, D3, D1 \nNibble1 D10, D8, D7, D5 \n1 In byte and nibble modes, the unused pins can be left floating. \nThe data is accompanied by a reference bit (DCI) that is used  \nto generate a double data rate (DDR) clock. In byte and nibble \nmodes, a FRAME signal is required for controlling to which DAC the data is sent. All of the interface signals are time aligned, so there is a maximum skew requirement on the bus. \nWORD INTERFACE MODE \nIn word mode, the DCI signal is a reference bit used to generate \nthe data sampling clock. The DCI signal should be time aligned \nwith the data. The I DAC data should correspond to DCI high, and the Q DAC data should correspond to DCI low, as shown \nin Figure 43 . \nDCI\nQ0 I1 Q1 I2 Q2 I3 Q3 DATA[15:0]\n08281-015 \nFigure 43. Timing Diagram for Word Mode BYTE INTERFACE MODE \nIn byte mode, the DCI signal is a reference bit used to generate \nthe data sampling clock. The DCI signal should be time aligned \nwith the data. The most significant byte of the data should corre-spond to DCI high, and the least significant byte of the data should \ncorrespond to DCI low. The FRAME signal indicates to which \nDAC the data is sent. When FRAME is high, data is sent to the  I DAC; when FRAME is low, data is sent to the Q DAC. The \ncomplete timing diagram is shown in Figure 44 . \nNIBBLE INTERFACE MODE \nIn nibble mode, the DCI signal is a reference bit used to generate \nthe data sampling clock. The DCI signal should be time aligned \nwith the data. The FRAME signal indicates to which DAC the data is sent. When FRAME is high, data is sent to the I DAC; \nwhen FRAME is low, data is sent to the Q DAC. All four nibbles \nmust be written to the device for proper operation. For 12-bit resolution devices, the data in the fourth nibble acts as a place-holder for the data framing structure. The complete timing \ndiagram is shown in Figure 45 . \nINTERFACE TIMING \nThe timing diagram for the digital interface port is shown in \nFigure 46 . The sampling point of the data bus nominally occurs \n350 ps after each edge of the DCI signal and has an uncertainty \nof ±300 ps, as illustrated by the sampling interval shown in \nFigure 46 . The data and FRAME signals must be valid through-\nout this sampling interval. The data and FRAME signals may \nchange at any time between sampling intervals. \n \n \nDCI\nDATA[15:0]\nFRAMEQ0LSB I1MSB I1LSB Q1MSB Q1LSB I2MSB I2LSB Q2MSB Q2LSB\n08281-016 \nFigure 44. Timing Diagram for Byte Mode \n \nDCI\nDATA[15:0]\nFRAMEQ0N0 I1N3 I1N2 I1N1 I1N0 Q1N3 Q1N2 Q1N1 Q1N0 I2N3\n08281-017 \nFigure 45. Timing Diagram for Nibble Mode \n \n \n AD9122\n \nRev. B | Page 33 of 60 The setup (t S) and hold (t H) times, with respect to the edges,  \nare shown in Figure 46 . The minimum setup and hold times  \nare shown in Table 13 . \n08281-146DCI\nDATAtDATA tDATA\nSAMPLING\nINTERVALSAMPLING\nINTERVAL\ntS tS\ntH tH \nFigure 46. Timing Diagram for Input Data Port \nTable 13. Data to DCI Setup and Hold Times \nDCI Delay \nRegister 0x16, Bits[1:0] Minimum Setup Time, t\nS (ns) Minimum Hold Time, t\nH (ns) Sampling Interval (ns)\n00 −0.05 0.65 0.6 \n01 −0.23 0.95 0.72 \n10 −0.38 1.22 0.84 \n11 −0.47 1.38 0.91 \nThe data interface timing can be verified by using the sample \nerror detection (SED) circuitry. See the Interface Timing \nValidation  section for more information. \n \n FIFO OPERATION \nThe AD9122 contains a 2-channel, 16-bit wide, eight-word deep \nFIFO designed to relax the timing relationship between the data \narriving at the DAC input ports and the internal DAC data rate clock. The FIFO acts as a buffer that absorbs timing variations \nbetween the data source and the DAC, such as the clock-to-data \nvariation of an FPGA or ASIC, which significantly increases the \ntiming budget of the interface. \nFigure 47  shows the block diagram of the datapath through  \nthe FIFO. The data is latched into the device, is formatted, and \nis then written into the FIFO register determined by the FIFO write pointer. The value of the write pointer is incremented every time a new word is loaded into the FIFO. Meanwhile, data \nis read from the FIFO register determined by the read pointer \nand fed into the digital datapath. The value of the read pointer is incremented every time data is read into the datapath from the FIFO. The FIFO pointers are incremented at the data rate \n(DACCLK rate divided by the interpolation ratio). \nValid data is transmitted through the FIFO as long as the FIFO \ndoes not overflow or become empty. An overflow or empty \ncondition of the FIFO occurs when the write pointer and read \npointer point to the same FIFO location. This simultaneous access of data leads to unreliable data transfer through the FIFO \nand must be avoided. \nNominally, data is written to and read from the FIFO at the same \nrate. This keeps the FIFO depth constant. If data is written to the FIFO faster than data is read out, the FIFO depth increases. \nIf data is read out of the FIFO faster than data is written to it, \nthe FIFO depth decreases. For optimum timing margin, the FIFO depth should be maintained near half full (a difference of 4 between the write pointer and read pointer values). The FIFO depth represents the FIFO pipeline delay and is part of the over-all latency of the AD9122. \n \nI AND Q\nDACS32 32 3232 BITS\n÷ INT DCI DACCLKDATAI AND Q\nDATA\nPATHSDATA\nFORMATINPUT\nLATCHREG 0\nREG 1REG 2REG 3REG 4REG 5\nREG 6\nREG 7\n08281-018RESET\nLOGICFRAME\nSYNCFIFO SOFT ALIGN REQUEST\nREG 0x18[1]\nDATA/FIFO RATE\nREG 0x10[6]FIFO PHASE OFFSET\nREG 0x17[2:0]READ POINTER\nRESETWRITE POINTER\nRESETREAD\nPOINTERWRITE\nPOINTER\n \nFigure 47. Block Diagram of FIFO \n \n \nAD9122 \n \nRev. B | Page 34 of 60 Resetting the FIFO \nWhen the AD9122 is powered on, the FIFO depth is unknown. \nTo avoid a concurrent read and write to the same FIFO address \nand to ensure a fixed pipeline delay, it is important to reset the \nFIFO pointers to known states. Th e FIFO pointers can be initial-\nized in two ways: via a write sequence to the serial port or by strobing the FRAME input. There are two types of FIFO resets: a relative reset and an absolute reset. A relative reset enforces a \ndefined FIFO depth. An absolute reset enforces a particular write \npointer value when the reset is initiated. A serial port initiated FIFO reset is always a relative reset. A FRAME strobe initiated \nreset can be either a relative or an absolute reset. \nIf the FRAME differential inputs are not used for FIFO reset  \nor for framing the word width, they must be tied to logic low. FRAMEP must be tied to DVSS, and FRAMEN must be tied  to DVDD18 to avoid accidental reset of the FIFO due to noise. \nThe operation of the FRAME initiated FIFO reset depends on \nthe synchronization mode chosen. \n• When synchronization is disabled or when it is configured \nfor data rate mode synchronization, the FRAME strobe initiates a relative FIFO reset. The reference point of the relative reset is the position of the read pointer.  \n• When FIFO mode synchronization is chosen, the FRAME strobe initiates an absolute FIFO reset. \nFor more information about the synchronization function, see \nthe Multichip Synchronization  section. \nA summary of the synchronization modes and the types of FIFO reset used is provided in Table 14 . \nTable 14. Summary of FIFO Resets \nFIFO Reset Signal Synchronization Mode \nDisabled Data Rate FIFO Reset \nSerial Port Relative Relative Relative \nFRAME Relative Relative Absolute \n \nSerial Port Initiated FIFO Reset \nA serial port initiated FIFO reset can be issued in any synchro-\nnization mode and always results in a relative FIFO reset. To \ninitialize the FIFO data level th rough the serial port, Bit 1 of \nRegister 0x18 should be toggled from 0 to 1 and back. When the write to this register is complete, the FIFO data level is initialized. When the initialization is triggered, the next time that the read \npointer becomes 0, the write pointer is set to the value of the FIFO \nstart level variable (Register 0x17, Bits[2:0]) upon initialization. By default, this value is 4, but it can be programmed to a value from 0 to 7. It is recommended that a value of 5 (0x05) be pro-\ngrammed in Register 0x17. \n   The recommended procedure for a serial port FIFO data level \ninitialization is as follows: \n1. Program Register 0x17 to 0x05. \n2. Request FIFO level reset by setting Register 0x18, Bit 1, to 1. \n3. Verify that the part acknowledges the request by ensuring \nthat Register 0x18, Bit 2, is set to 1. \n4. Remove the request by setting Register 0x18, Bit 1, to 0. \n5. Verify that the part drops the acknowledge signal by ensuring that Register 0x18, Bit 2, is set to 0. \n6. Read back Register 0x19 to verify that the pointer spacing is set to 3 (0x07) or 4 (0x0F). \n7. If the readback of Register 0x19 shows a pointer spacing of \n2 (0x03), increment Register 0x17 to a spacing of 0x06 and \nrepeat Step 2 through Step 5. Read back Register 0x19 again to verify that the pointer spacing is now set to 3 (0x07). \n8. If the readback of Register 0x19 shows a pointer spacing of 5 (0x1F) after Step 6, decrement Register 0x17 to a spacing \nof 0x04 and repeat Step 2 through Step 5. Read back \nRegister 0x19 again to verify that the pointer spacing is now set to 4 (0x0F). \nFRAME Initiated Rela tive FIFO Reset \nThe primary function of the FRAME input is to indicate to \nwhich DAC the input data is written. Another function of the \nFRAME input is to initialize the FIFO data level value. This is done by asserting the FRAME signal high for at least the time \ninterval required to load complete data to the I and Q DACs. \nThis corresponds to one DCI period in word mode, two DCI \nperiods in byte mode, and four DCI periods in nibble mode.  \nTo initiate a relative FIFO reset with the FRAME signal, the \ndevice must be configured in data rate mode (Register 0x10,  Bit 6 = 1). When FRAME is asserted in data rate mode, the write pointer is set to 4 by default (or to the FIFO start level)  \nthe next time that the read pointer becomes 0 (see Figure 48 ). \n0 1 2 3 4 5 6 7 0 1 2 3\n3 4 5 6 7 0 1 2 3 4 5 6FIFO WRITE RESETSREAD\nPOINTER\nFRAME\nWRITE\nPOINTER\n08281-019 \nFigure 48. FRAME Input vs. Write Pointer Value, Data Rate Mode \n \n    \n \n \n \n AD9122\n \nRev. B | Page 35 of 60 FRAME Initiated Abso lute FIFO Reset Monitoring the FIFO Status \nIn FIFO rate synchronization mode, the write pointer of the FIFO \nis reset in an absolute manner. The synchronization signal aligns \nthe internal clocks on the part to a common reference clock so \nthat the pipeline delay in the digital circuit stays the same during power cycles. The synchronization signal is sampled by the DAC clock in the AD9122. The edge of the DAC clock used to sample \nthe synchronization signal is selected by Bit 3 of Register 0x10. The FIFO initialization and status can be read from Register 0x18. \nThis register provides information about the FIFO status and \nwhether the initialization was successful. The MSB of Register 0x18 \nis a FIFO warning flag that can optionally trigger a device IRQ\n. \nThis flag indicates that the FIFO is close to emptying (FIFO \nlevel is 1) or overflowing (FIFO level is 7). In this case, data  \nmay soon be corrupted, and action should be taken. \nThe FRAME signal is used to reset the FIFO write pointer. In \nthe FIFO rate synchronization mode, the FIFO write pointer is \nreset immediately after the FRAME signal is asserted high for at \nleast the time interval required to load complete data to the I and Q DACs. The FIFO write pointer is reset to the value of the FIFO Phase Offset[2:0] bits in Register 0x17. FIFO rate synchro-\nnization is selected by setting Bit 6 of Register 0x10 to 0. The FIFO data level can be read from Register 0x19 at any time. \nThe serial port reported FIFO data level is denoted as a 7-bit thermometer code (Base 1 code) of the write counter state \nrelative to the absolute read counter being at 0. The optimum \nFIFO data level of 4 is therefore reported as a value of 00001111 \nin the status register.  \nREAD\nPOINTER\nWRITE\nPOINTERSYNC\nFRAMEFIFO READ RESET\nFIFO WRITE\nRESET FIFO PHASE OFFSET[2:0]\nREG 0x17[2:0] = 10101 3 2 1 0 7 6 5 4 3 2\n3 2 1 0 7 6 5 66 5 47\n08281-148 Note that, depending on the timing relationship between the \nDCI and the main DACCLK, the FIFO level value can be off  by a ±1 count, that is, the readback of Register 0x19 can be 00011111 in the case of a +1 count and 00000111 in the case of \na −1 count. Therefore, it is important to keep the difference \nbetween the read and write pointers to a value of at least 2. \n \nFigure 49. FRAME Input vs. Write Pointer Value, FIFO Rate Mode \n \nAD9122 \n \nRev. B | Page 36 of 60 DIGITAL DATAPATH \nThe block diagram in Figure 50  shows the functionality of the \ndigital datapath. The digital processing includes a premodulation \nblock, three half-band (HB) interpolation filters, a quadrature modulator with a fine resolution NCO, phase and offset adjust-ment blocks, and an inverse sinc filter. \nPREMODPHASE\nAND\nOFFSET\nADJUSTHB1 HB2 HB3 SINC–1\n08281-020 \nFigure 50. Block Diagram of Digital Datapath \nThe digital datapath accepts I and Q data streams and processes them as a quadrature data stream. The signal processing blocks can \nbe used when the input data stream is represented as complex data. \nThe digital datapath can also be used to process an input data \nstream representing two independent real data streams, but the functionality is somewhat restricted. The premodulation block and any of the nonshifted interpolation filter modes can be used \nfor an input data stream representing two independent real data \nstreams. See the Coarse Modulation Mixing Sequences  section \nfor more information. \nPREMODULATION \nThe half-band interpolation filters have selectable pass bands \nthat allow the center frequencies to be moved in increments of \none-half their input data rate. The premodulation block provides a digital upconversion of the incoming waveform by one-half the \nincoming data rate, f\nDATA. This can be used to frequency-shift base-\nband input data to the center of the interpolation filter pass band. \nINTERPOLATION FILTERS \nThe transmit path contains three interpolation filters. Each of the three interpolation filters provides a 2× increase in output data \nrate. The half-band (HB) filters can be individually bypassed or cascaded to provide 1×, 2×, 4×, or 8× interpolation ratios. Each half-band filter stage offers a different combination of bandwidths and operating modes. \nThe bandwidth of the three half-band filters with respect to the \ndata rate at the filter input is as follows: \n• Bandwidth of HB1 = 0.8 × f\nIN1 \n• Bandwidth of HB2 = 0.5 × f IN2 \n• Bandwidth of HB3 = 0.4 × f IN3 \nThe usable bandwidth is defined as the frequency over which \nthe filters have a pass-band ripple of less than ±0.001 dB and  an image rejection of greater than +85 dB. As described in the \nHalf-Band Filter 1 (HB1)  section, the image rejection usually \nsets the usable bandwidth of the filter, not the pass-band flatness. \n \n \n The half-band filters operate in several modes, providing \nprogrammable pass-band center frequencies as well as signal modulation. The HB1 filter has four modes of operation, and \nthe HB2 and HB3 filters each have eight modes of operation. \nHalf-Band Filter 1 (HB1) \nHB1 has four modes of operation, as shown in Figure 51 . The \nshape of the filter response is identical in each of the four modes. \nThe four modes are distinguished by two factors: the filter center \nfrequency and whether the input signal is modulated by the filter. \n0\n–20\n–40\n–60\n–80\n–100\n02 1.8 1.6 1.4 1.2 1.0 0.8 0.6 0.4 0.2MAGNITUDE (dB)\nFREQUENCY (× fIN1) (Hz).0MODE 0 MODE 1 MODE 3 MODE 2\n08281-021 \nFigure 51. HB1 Filter Modes \nAs shown in Figure 51 , the center frequency in each mode is \noffset by one-half the input data rate (f IN1) of the filter. Mode 0 \nand Mode 1 do not modulate the input signal. Mode 2 and \nMode 3 modulate the input signal by f IN1. When operating in \nMode 0 and Mode 2, the I and Q paths operate independently and no mixing of the data between channels occurs. When oper-ating in Mode 1 and Mode 3, mixing of the data between the  I and Q paths occurs; therefore, the data input into the filter is \nassumed to be complex. Table 15  summarizes the HB1 modes. \nTable 15. HB1 Filter Modes \nMode f CENTER  f MOD Input Data \n0 DC None Real or complex \n1 f IN/2 None Complex \n2 f IN f IN Real or complex \n3 3f IN/2 f IN Complex \n \n    \n \n  \n AD9122\n \nRev. B | Page 37 of 60 .Figure 52  shows the pass-band filter response for HB1. In most \napplications, the usable bandwidth of the filter is limited by the \nimage suppression provided by the stop-band rejection and not by the pass-band flatness. Table 16  shows the pass-band flatness \nand stop-band rejection supported by the HB1 filter at different \nbandwidths. \n0.02\n–0.10–0.08–0.06–0.04–0.020\n00 0.36 0.32 0.28 0.24 0.20 0.16 0.12 0.08 0.04MAGNITUDE (dB)\nFREQUENCY (× fIN1) (Hz)40\n08281-022 \nFigure 52. Pass-Band Detail of HB1 \nTable 16. HB1 Pass-Band and Stop-Band Performance by \nBandwidth \nBandwidth (% of f IN1) Pass-Band  \nFlatness (dB) Stop-Band  Rejection (dB) \n80 0.001 85 \n80.4 0.0012 80 \n81.2 0.0033 70 \n82 0.0076 60 \n83.6 0.0271 50 \n85.6 0.1096 40 \n \n   \n \n  \n \n   \n \n     Half-Band Filter 2 (HB2) \nHB2 has eight modes of operation, as shown in Figure 53  and \nFigure 54 . The shape of the filter response is identical in each of \nthe eight modes. The eight modes are distinguished by two factors: \nthe filter center frequency and whether the input signal is \nmodulated by the filter. \n0\n–20\n–40\n–60\n–80\n–100\n02 1.8 1.6 1.4 1.2 1.0 0.8 0.6 0.4 0.2MAGNITUDE (dB)\nFREQUENCY (× fIN2) (Hz).0MODE 0 MODE 2 MODE 6 MODE 4\n08281-023 \nFigure 53. HB2, Even Filter Modes \n \n0\n–20\n–40\n–60\n–80\n–100\n02 1.8 1.6 1.4 1.2 1.0 0.8 0.6 0.4 0.2MAGNITUDE (dB)\nFREQUENCY (× fIN2) (Hz).0MODE 1 MODE 3MODE 7 MODE 5\n08281-024 \nFigure 54. HB2, Odd Filter Modes  \nAs shown in Figure 53  and Figure 54 , the center frequency in \neach mode is offset by one-fourth the input data rate (f IN2) of  \nthe filter. Mode 0 through Mode 3 do not modulate the input \nsignal. Mode 4 through Mode 7 modulate the input signal by \nfIN2. When operating in Mode 0 and Mode 4, the I and Q paths \noperate independently and no mixing of the data between chan-nels occurs. When operating in the other six modes, mixing of the data between the I and Q paths occurs; therefore, the data input to the filter is assumed to be complex. \n \n \n \n   \nAD9122 \n \nRev. B | Page 38 of 60 Half-Band Filter 3 (HB3) Table 17  summarizes the HB2 and HB3 modes. \nHB3 has eight modes of operation that function the same as \nHB2. The primary difference between HB2 and HB3 is the  filter bandwidths. Table 17. HB2 and HB3 Filter Modes \nMode f CENTER  f MOD Input Data \n0 DC None Real or complex \nFigure 56  shows the pass-band filter response for HB3. In most \napplications, the usable bandwidth of the filter is limited by the image suppression provided by the stop-band rejection and not by the pass-band flatness. Table 19  shows the pass-band flatness \nand stop-band rejection supported by the HB3 filter at different \nbandwidths. 1 f IN/4 None Complex \n2 f IN/2 None Complex \n3 3f IN/4 None Complex \n4 f IN f IN Real or complex \n5 5f IN/4 f IN Complex \n6 3f IN/2 f IN Complex \n7 7f IN/4 f IN Complex \n \nFigure 55  shows the pass-band filter response for HB2. In most \napplications, the usable bandwidth of the filter is limited by the \nimage suppression provided by the stop-band rejection and not by the pass-band flatness. Table 18  shows the pass-band flatness \nand stop-band rejection supported by the HB2 filter at different bandwidths. \n0.02\n0\n–0.02\n–0.04\n–0.06\n–0.08\n–0.10\n00 0.28 0.24 0.20 0.16 0.12 0.08 0.04MAGNITUDE (dB)\nFREQUENCY (× fIN2) (Hz).32\n08281-025 0.02\n–0.10–0.08–0.06–0.04–0.020\n00 0.24 0.20 0.16 0.12 0.08 0.04MAGNITUDE (dB)\nFREQUENCY (× fIN3) (Hz).28\n08281-026 \nFigure 56. Pass-Band Detail of HB3 \nTable 19. HB3 Pass-Band and Stop-Band Performance by \nBandwidth \nBandwidth (% of f IN3) Pass-Band \nFlatness (dB) Stop-Band Rejection (dB) \n40 0.001 85 \n40.8 0.0014 80 \n42.4 0.002 70 \n45.6 0.0093 60 Figure 55. Pass-Band Detail of HB2 \n49.8 0.03 50 Table 18. HB2 Pass-Band and Stop-Band Performance by \nBandwidth \nBandwidth (% of f IN2) Pass-Band  \nFlatness (dB) 55.6 0.1 40 \n Stop-Band  Rejection (dB) \n \n50 0.001 85  50.8 0.0012 80 \n 52.8 0.0028 70 \n56 0.0089 60  \n60 0.0287 50  64.8 0.1877 40 \n  \n \n AD9122\n \nRev. B | Page 39 of 60 INTERPOLATION\nINTERPOLATIONNCO\n10–1COSINE\nSINEI DATA\nQ DATAFTW[31:0]\nSPECTRAL\nINVERSIONOUT_I\nOUT_Q\n+–NCO PHASE OFFSET\n[15:0]\n08281-027 \nFigure 57. Digital Quadrature Modulator Block Diagram \nNCO MODULATION \nThe digital quadrature modulator makes use of a numerically \ncontrolled oscillator (NCO), a phase shifter, and a complex \nmodulator to provide a means for modulating the signal by a programmable carrier signal. A block diagram of the digital modulator is shown in Figure 57 . The fine modulation provided \nby the digital modulator, in conjunction with the coarse modu-\nlation of the interpolation filters and premodulation block, \nallows the signal to be placed anywhere in the output spectrum \nwith very fine frequency resolution. \nThe quadrature modulator is used to mix the carrier signal \ngenerated by the NCO with the I and Q signal. The NCO produces a quadrature carrier signal to translate the input signal to a new center frequency. A complex carrier signal is a pair of sinusoidal \nwaveforms of the same frequency, offset 90° from each other. \nThe frequency of the complex carrier signal is set via FTW[31:0] \nin Register 0x30 through Register 0x33. \nThe NCO operating frequency, f\nNCO, is at either f DATA (HB1 \nbypassed) or 2× f DATA (HB1 enabled). The frequency of the \ncomplex carrier signal can be set from dc up to f NCO. The \nfrequency tuning word (FTW) is calculated as \n322× =\nNCOCARRIER\nffFTW  \nThe generated quadrature carrier signal is mixed with the I and \nQ data. The quadrature products are then summed into the I and Q data paths, as shown in Figure 57 . \nUpdating the Frequency Tuning Word \nThe frequency tuning word registers are not updated immediately \nupon writing, as other configuration registers are. After loading \nthe FTW registers with the desired values, Bit 0 of Register 0x36 must transition from 0 to 1 for the new FTW to take effect. \nDATAPATH CONFIGURATION \nConfiguring the AD9122 datapath starts with the application \nrequirements of the input data rate, the interpolation ratio, the \noutput signal bandwidth, and the output signal center frequency. Given these four parameters, the first step in configuring the \ndatapath is to verify that the device supports the bandwidth requirements. The modes of the interpolation filters are then chosen. Finally, any additional frequency offset requirements are determined and applied with premodulation and NCO \nmodulation. \nDetermining the Datapath Signal Bandwidth \nThe available signal bandwidth of the datapath is dependent  \non the center frequency of the output signal in relation to the \ncenter frequency of the interpolation filters used. Signal center frequencies offset from the center frequencies of the half-band filters lower the available signal bandwidth. \nWhen correctly configured, the available complex signal band-\nwidth for 2× interpolation is always 80% of the input data rate. \nThe available signal bandwidth for 4× interpolation vs. output frequency varies between 50% and 80% of the input data rate,  as shown in Figure 58 . Note that in 4× interpolation mode,  \nf\nDAC = 4 × f DATA; therefore, the data shown in Figure 58  repeats \nfour times from dc to f DAC.  \nHB1 AND HB2\nHB2 AND HB3\nfOUT/fDATABANDWIDTH/ fDATA\n0.20.8\n0.5\n0.3\n0.4 0.6 0.8 1.0\n08281-028 \nFigure 58. Signal Bandwidth vs. Center  Frequency of the Output Signal,  \n4× Interpolation  \nConfiguring 4× interpolation using the HB2 and HB3 filters can \nlower the power consumption of the device at the expense of band-\nwidth. The lower curve in Figure 58  shows that the supported \nbandwidth in this mode varies from 30% to 50% of f DATA. \nAD9122 \n \nRev. B | Page 40 of 60 The available signal bandwidth for 8× interpolation vs. output \nfrequency varies between 50% and 80% of the input data rate,  as shown in Figure 59 . Note that in 8× interpolation mode,  \nf\nDAC = 8 × f DATA; therefore, the data shown in Figure 59  repeats \neight times from dc to f DAC. \nHB1, HB2, AND HB3\nfOUT/fDATABANDWIDTH/ fDATA\n0.250.8\n0.6\n0.5\n1.00 0.75 0.500.1 0.9 0.6 0.4\n08281-029 \nFigure 59. Signal Bandwidth vs. Center  Frequency of the Output Signal,  \n8× Interpolation DETERMINING INTERPOLATION FILTER MODES \nTable 20  shows the recommended interpolation filter settings \nfor a variety of filter interpolation factors, filter center frequencies, and signal modulation. The interpolation modes were chosen based on the final center frequency of the signal and by deter-\nmining the frequency shift of the signal required. When these \nparameters are known and put in terms of the input data rate \n(f\nDATA), the filter configuration that comes closest to matching  \nis selected from Table 20 . \n \n \nTable 20. Recommended Interpolation Filter Mo des (Register 0x1C Through Register 0x1E) \n Filter Modes   \nInterpolation Factor HB1[1:0] HB2[5:0] HB3[5:0] f SIGNAL  Modulation fCENTER  Shift \n8 00 (Mode 0) 000000 000000 DC 0 \n8 01 (Mode 1) 001001 000000 DC1 fDATA/2 \n82 10 (Mode 2) 010010 001001 fDATA fDATA \n8 11 (Mode 3) 011011 001001 fDATA1 3fDATA/2 \n8 00 (Mode 0) 100100 010010 2fDATA 2fDATA \n8 01 (Mode 1) 101101 010010 2fDATA1 5fDATA/2 \n8 10 (Mode 2) 110110 011011 3fDATA 3fDATA \n8 11 (Mode 3) 111111 011011 3fDATA1 7fDATA/2 \n8 00 (Mode 0) 000000 100100 4fDATA 4fDATA \n8 01 (Mode 1) 001001 100100 4fDATA1 9fDATA/2 \n8 10 (Mode 2) 010010 101101 5fDATA 5fDATA \n8 11 (Mode 3) 011011 101101 5fDATA1 11f DATA/2 \n8 00 (Mode 0) 100100 110110 6fDATA 6fDATA \n8 01 (Mode 1) 101101 110110 6fDATA1 13f DATA/2 \n8 10 (Mode 2) 110110 111111 7fDATA 7fDATA \n8 11 (Mode 3) 111111 111111 7fDATA1 15f DATA/2 \n4 00 (Mode 0) 000000 Bypass DC 0 \n43 01 (Mode 1) 001001 Bypass DC1 fDATA/2 \n4 10 (Mode 2) 010010 Bypass fDATA fDATA \n4 11 (Mode 3) 011011 Bypass fDATA1 3fDATA/2 \n4 00 (Mode 0) 100100 Bypass 2fDATA 2fDATA \n4 01 (Mode 1) 101101 Bypass 2fDATA1 5fDATA/2 \n4 10 (Mode 2) 110110 Bypass 3fDATA 3fDATA \n4 11 (Mode 3) 111111 Bypass 3fDATA1 7fDATA/2 \n2 00 (Mode 0) Bypass Bypass DC 0 \n2 01 (Mode 1) Bypass Bypass DC1 fDATA/2 \n2 10 (Mode 2) Bypass Bypass fDATA fDATA \n2 11 (Mode 3) Bypass Bypass fDATA1 3f DATA/2 \n1 When HB1 Mode 1 or Mode 3 is used, enabling premodulation provides an additional frequency translation of the input signal by fDATA/2, which centers a baseband \ninput signal in the filter pass band. \n2 This configuration was used in the 8× interpolation without NCO example (see the 8× Interpolation Without NCO  section). \n3 This configuration was us ed in the 4× interpolatio n with NCO example (see the 4× Interpolation with NCO  section). \n \n AD9122\n \nRev. B | Page 41 of 60 DATAPATH CONFIGURATION EXAMPLES \n8× Interpolation Without NCO \nFor this example, the following parameters are given: \n• fDATA = 100 MSPS \n• 8× interpolation \n• fBW = 75 MHz \n• fCENTER  = 100 MHz \nThe desired 75 MHz of bandwidth is 75% of f DATA. In this case, \nthe ratio of f OUT/fDATA = 100/100 = 1.0. From Figure 59 , the band-\nwidth supported at f DATA is 0.8, which verifies that the AD9122 \nsupports the bandwidth required in this configuration. \nThe signal center frequency is f DATA and, assuming the input \nsignal is at baseband, the frequency shift required is also f DATA. \nChoosing the third row (highlighted by the superscripted \nnumber 2) of the Interpolation Factor column from Table 20  \nselects filter modes that give a center frequency of f DATA and a \nfrequency translation of f DATA. The selected modes for the three \nhalf-band filters are HB1, Mode 2; HB2, Mode 2; and HB3, Mode 1. Figure 60  shows how the signal propagates through the \ninterpolation filters. \nBecause 2 × f\nIN1 = f IN2 and 2 × f IN2 = f IN3, the signal appears \nfrequency scaled by one-half into each consecutive stage. The \noutput signal band spans 0.15 to 0.35 of f IN3 (400 MHz). There-\nfore, the output frequency supported is 60 MHz to 140 MHz, which covers the 75 MHz bandwidth centered at 100 MHz, as \ndesired. \n \n \n \n 4× Interpolation with NCO \nFor this example, the following parameters are given: \n• fDATA = 250 MSPS \n• 4× interpolation \n• fBW = 140 MHz \n• fCENTER  = 175 MHz \nThe desired 140 MHz of bandwidth is 56% of f DATA. As shown  \nin Figure 58 , the value at 0.7 × f DATA is 0.6. This is calculated as \n0.8 − 2(0.7 − 0.6) = 0.6. This verifies that the AD9122 supports \na bandwidth of 60% of f DATA, which exceeds the required 56%. \nThe signal center frequency is 0.7 × f DATA and, assuming the \ninput signal is at baseband, the frequency shift required is also \n0.7 × f DATA. Choosing the second row in the Interpolation Factor \ncolumn in the 4× interpolation section of Table 20  selects the filter \nmodes that give a center frequency of f DATA/2 with no frequency \ntranslation. The selected modes for the three half-band filters \nare HB1, Mode 1; HB2, Mode 1; and HB3, bypassed. \nBecause Mode 1 of HB1 was selected, the premodulation block \nshould be enabled. This provides f DATA/2 modulation, which \ncenters the baseband input data at the center frequency of HB1. The digital modulator can be used to provide the final frequency translation of 0.2 × f\nDATA to place the output signal at 0.7 × f DATA, \nas desired. \nThe formula for calculating the FTW of the NCO is as follows: \n322× =\nNCOCARRIER\nffFTW  \nwhere:  \nfCARRIER  = 0.2 × f DATA. \nfNCO = 2 × f DATA.  \nTherefore, FTW = 232/10. \n \n0\n1230\n–0.5 0.5HB1\n0.1 0.4 0.6\n1.5 2.0×fIN1 1.0 0\n–0.5 0.5HB3\n0.2 –0.2 0.3 0.7\n0.15 0.351.5 2.0×fIN3 1.0 07 5 3\n40\n6 21–0.5 0.5HB2\n0.25 0.75\n0.3 0.71.25 1.75\n1.5 2.0×fIN2 1.0 07 5 3\n64 01\n2\n08281-030 \nFigure 60. Signal Propagation for 8× Interpolation (f DATA  Modulation)  \n \nAD9122 \n \nRev. B | Page 42 of 60 DATA RATES vs. INTERPOLATION MODES \nTable 22  summarizes the maximum bus speed (f BUS), supported \ninput data rates, and signal bandwidths with the various combi-\nnations of bus width modes and interpolation rates. The real signal bandwidth supported is a fraction of the input data rate, \nwhich depends on the interpolation filters (HB1, HB2, or HB3) \nselected. The complex signal bandwidth supported is twice the \nreal signal bandwidth. \nIn general, 2× interpolation is best supported by enabling HB1, \nand 4× interpolation is best supported by enabling HB1 and HB2. However, in some cases, power dissipation can be lowered by not using HB1. If the bandwidth required is low enough, 2× interpo-lation can be supported by using HB2, and 4× interpolation can be supported by using HB2 and HB3. \nCOARSE MODULATION MIXING SEQUENCES \nThe coarse digital quadrature modulation occurs within the \ninterpolation filters. The modulation shifts the frequency spectrum of the incoming data by the frequency offset selected. The frequency offsets available are multiples of the input data rate. The modulation is equivalent to multiplying the quadra-\nture input signal by a complex carrier signal, C(t), of the form \nC(t) = cos( ωct) + j sin( ωct) In practice, this modulation results in the mixing functions shown in Table 21 . \nTable 21. Modulation Mixing Sequences \nModulation Mixing Sequence \nfS/2 I = I, −I, I, −I, … \n Q = Q, −Q, Q, −Q, … \nfS/4 I = I, Q, −I, −Q, … \n Q = Q, −I, −Q, I, … \n3fS/4 I = I, −Q, −I, Q, … \n Q = Q, I, −Q, −I, … \nfS/8 I = I, r(I + Q), Q, r(−I + Q), −I, −r(I + Q), −Q, r(I − Q), … \n Q = Q, r(Q − I), −I, −r(Q + I), −Q, r(−Q + I), I, r(Q + I), … \nNote that 22=r  \nAs shown in Table 21 , the mixing functions of most of the modes \ncross-couple samples between the I and Q channels. The I and \nQ channels operate independently only in f S/2 mode. This means \nthat real modulation using both the I and Q DAC outputs can \nonly be done in f S/2 mode. All other modulation modes require \ncomplex input data and produce complex output signals. \n \n \n \nTable 22. Summary of Data Rates and Bandwidths vs. Interpolation Modes (DVDD18, CVDD18 = 1.9 V ± 2%) \n Filter Modes     \nBus Width HB3 HB2 HB1 fBUS (Mbps) fDATA (Mbps) Real Signal Bandwidth (MHz) fDAC (MHz) \nNibble (4 Bits) 0 0 0 1230 153.75 75 153.75 \n0 0 1 1230 153.75 60 307.5 \n0 1 0 1230 153.75 37.5 307.5 \n0 1 1 1230 153.75 60 615 \n1 1 0 1230 153.75 37.5 615 \n1 1 1 1230 153.75 60 1230 \nByte (8 Bits) 0 0 0 1230 307.5 150 307.5 \n0 0 1 1230 307.5 120 615 \n0 1 0 1230 307.5 75 615 \n0 1 1 1230 307.5 120 1230 \n1 1 0 1230 307.5 75 1230 \n1 1 1 615 153.75 60 1230 \nWord (16 Bits) 0 0 0 1230 615 300 615 \n0 0 1 1000 500 200 1000 \n0 1 0 1230 615 150 1230 \n0 1 1 615 307.5 120 1230 \n1 1 0 615 307.5 75 1230 \n1 1 1 307.5 153.75 60 1230 \n  \n \n AD9122\n \nRev. B | Page 43 of 60 QUADRATURE PHASE CORRECTION \nThe purpose of the quadrature phase correction block is to \nenable compensation of the phase imbalance of the analog \nquadrature modulator following the DAC. If the quadrature modulator has a phase imbalance, the unwanted sideband \nappears with significant energy. Tuning the quadrature phase \nadjust value can optimize image rejection in single sideband \nradios. \nOrdinarily, the I and Q channels have an angle of precisely 90° \nbetween them. The quadrature phase adjustment is used to change the angle between the I and Q channels. When I Phase Adj[9:0] (Register 0x38 and Register 0x39) is set to 1000000000, the I DAC output moves approximately 1.75° away from the Q DAC output, \ncreating an angle of 91.75° between the channels. When I Phase \nAdj[9:0] is set to 0111111111, the I DAC output moves approx-imately 1.75° toward the Q DAC output, creating an angle of \n88.25° between the channels. \nQ Phase Adj[9:0] (Register 0x3A and Register 0x3B) works in  \na similar fashion. When Q Phase Adj[9:0] is set to 1000000000, \nthe Q DAC output moves approximately 1.75° away from the \nI DAC output, creating an angle of 91.75° between the channels. \nWhen Q Phase Adj[9:0] is set to 0111111111, the Q DAC output moves approximately 1.75° toward the I DAC output, creating \nan angle of 88.25° between the channels. \nBased on these two endpoints, the combined resolution of the \nphase compensation register is approximately 3.5°/1024 or \n0.00342° per code. \nDC OFFSET CORRECTION \nThe dc value of the I datapath and the Q datapath can be \nindependently controlled by adjusting the I DAC Offset[15:0] \nand Q DAC Offset[15:0] values in Register 0x3C through \nRegister 0x3F. These values are added directly to the datapath values. Care should be taken not to overrange the transmitted \nvalues. \nFigure 61  shows how the DAC offset current varies as a function \nof the I DAC Offset[15:0] and Q DAC Offset[15:0] values. With \nthe digital inputs fixed at midscale (0x0000, twos complement data \nformat), Figure 61  shows the nominal I\nOUTxP  and I OUTxN  currents \nas the DAC offset value is swept from 0 to 65,535. Because I OUTxP  \nand I OUTxN  are complementary current outputs, the sum of I OUTxP  \nand I OUTxN  is always 20 mA. 0x0000 0x4000 0x8000 0xC000 0xFFFF5101520\n5\n10\n15\n20 00\nDAC OFFSET VALUE\nIOUTxN (mA)IOUTxP  (mA)\n08281-031 \nFigure 61. DAC Output Curre nts vs. DAC Offset Value \nINVERSE SINC FILTER \nThe inverse sinc (sinc−1) filter is a nine-tap FIR filter. The composite \nresponse of the sinc−1 filter and the sin(x)/x response of the DAC \nis shown in Figure 62 . The composite response has a pass-band \nripple of less than ±0.05 dB up to a frequency of 0.4 × f DACCLK . To \nprovide the necessary peaking at the upper end of the pass band, \nthe inverse sinc filters shown have an intrinsic insertion loss of \nabout 3.2 dB. Figure 62  shows the composite frequency response. \n–3.0\n–3.2\n–3.4\n–3.6\n–3.8\n–4.0\n00 0.3 0.4 0.2 0.1MAGNITUDE (dB)\nfOUT/fDAC.5\n08281-032 \nFigure 62. Sample Composite Responses of the Sinc−1 Filter with sin(x)/x Roll-Off \nThe sinc−1 filter is disabled by default. It can be enabled by \nsetting the bypass sinc−1 bit to 0 (Register 0x1B, Bit 6). \n \n \nAD9122 \n \nRev. B | Page 44 of 60 DAC INPUT CLOCK CONFIGURATIONS \nThe AD9122 DAC sampling clock (DACCLK) can be sourced \ndirectly or by clock multiplying. Clock multiplying uses the  on-chip phase-locked loop (PLL), which accepts a reference clock operating at a submultiple of the desired DACCLK rate, most \ncommonly the data input frequency. The PLL then multiplies \nthe reference clock up to the desired DACCLK frequency, which \ncan then be used to generate all the internal clocks required by \nthe DAC. The clock multiplier provides a high quality clock that meets the performance requirements of most applications. Using \nthe on-chip clock multiplier eliminates the need to generate and \ndistribute the high speed DACCLK. \nThe second mode bypasses the clock multiplier circuitry and \nallows the DACCLK to be sourced directly to the DAC core. This mode enables the user to source a very high quality clock directly to the DAC core. Sourcing the DACCLK directly through the REFCLKP , REFCLKN, DACCLKP , and DACCLKN pins may \nbe necessary in demanding applications that require the lowest \npossible DAC output noise, particularly when directly synthesizing \nsignals above 150 MHz. \nDRIVING THE DACCLK AND REFCLK INPUTS \nThe differential DACCLK and REFCLK inputs share similar \nclock receiver input circuitry. Figure 63  shows a simplified circuit \ndiagram of the inputs. The on-chip clock receiver has a differential \ninput impedance of about 10 kΩ. It is self-biased to a common-mode voltage of about 1.25 V . The inputs can be driven by \ndirect coupling differential PECL or LVDS drivers. The inputs \ncan also be ac-coupled if the driving source cannot meet the \ninput compliance voltage of the receiver. \n1.25V5kΩ\n5kΩDACCLKP,\nREFCLKP\nDACCLKN,\nREFCLKN\n08281-033 \nFigure 63. Clock Receiver Input Simplified Equivalent Circuit \nThe minimum input drive level to either of the clock inputs is \n100 mV p-p differential. The optimal performance is achieved when the clock input signal is between 800 mV p-p differential and 1.6 V p-p differential. Whether using the on-chip clock multiplier or sourcing the DACCLK directly, it is necessary that the input clock signal to the device have low jitter and fast edge rates to optimize the DAC noise performance. \nDIRECT CLOCKING \nDirect clocking with a low noise clock produces the lowest noise \nspectral density at the DAC outputs. To select the differential \nCLK inputs as the source for the DAC sampling clock, set the PLL enable bit (Register 0x0A, Bit 7) to 0. This powers down the internal PLL clock multiplier and selects the input from the DACCLKP and DACCLKN pins as the source for the internal \nDAC sampling clock. \nThe device also has duty cycle correction circuitry and differ-\nential input level correction circuitry. Enabling these circuits can \nprovide improved performance in some cases. The control bits \nfor these functions are in Register 0x08 (see Table 11 ). \nCLOCK MULTIPLICATION \nThe on-chip PLL clock multiplication circuit can be used to gen-\nerate the DAC sampling clock from a lower frequency reference \nclock. When the PLL enable bit (Register 0x0A, Bit 7) is set to 1, the clock multiplication circuit generates the DAC sampling clock from the lower rate REFCLK input. The functional diagram of the clock multiplier is shown in Figure 64 . \nThe clock multiplication circuit operates such that the VCO outputs a frequency, f\nVCO, equal to the REFCLK input signal \nfrequency multiplied by N1 × N0.  \nfVCO = f REFCLK  × (N1 × N0 ) \nThe DAC sampling clock frequency, f DACCLK , is equal to \nfDACCLK  = f REFCLK  × N1  \nThe output frequency of the VCO must be chosen to keep f VCO \nin the optimal operating range of 1.0 GHz to 2.1 GHz. The frequency of the reference clock and the values of N1 and N0 \nmust be chosen so that the desired DACCLK frequency can be \nsynthesized and the VCO output frequency is in the correct range. \n \nDACCLKP/DACCLKN\n(PIN 2 AND PIN 3)ADC\nVCOLOOP\nFILTERREFCLKP/REFCLKN\n(PIN 69 AND PIN 70)REG 0x0E[3:0]\nVCO CONTROL\nVOLTAGE\nREG 0x0D[3:2]\nN0REG 0x0D[1:0]\nN1REG 0x06[7:6]\nPLL LOCK LOST\nPLL LOCKED\nPHASE\nDETECTION\nREG 0x0A[7]\nPLL ENABLEREG 0x0D[7:6]N2÷N2DACCLK\nPC_CLK\n08281-034÷N1 ÷N0\n \nFigure 64. PLL Clock Multiplication Circuit \n \n AD9122\n \nRev. B | Page 45 of 60 PLL SETTINGS \nThree settings for the PLL circuitry should be programmed to \ntheir nominal values. The PLL values shown in Table 23  are the \nrecommended settings for these parameters. \nTable 23. PLL Settings \nPLL Control Register Register \nAddress Bits Optimal Setting \nPLL Loop Bandwidth[1:0] 0x0C [7:6] 11 \nPLL Charge Pump Current[4:0] 0x0C [4:0] 10001 \nPLL Cross-Control Enable 0x0D 4 1 \n \nCONFIGURING THE VCO TUNING BAND \nThe PLL VCO has a valid operating range from approximately \n1.0 GHz to 2.1 GHz covered in 63 overlapping frequency bands. \nFor any desired VCO output frequency, there may be several valid PLL band select values. The frequency bands of a typical device are shown in Figure 65 . Device-to-device variations and \noperating temperature affect the actual band frequency range. \nTherefore, it is required that the optimal PLL band select value \nbe determined for each individual device. \n0\n48\n12\n16\n20\n2428\n32\n3640\n44\n4852\n56\n60\n1000 2200 2000 1800 1600 1400 1200PLL BAND\nVCO FREQUENCY (MHz)\n08281-035 \nFigure 65. PLL Lock Range over Temperature for a Typical Device \nAutomatic VCO Band Select \nThe device has an automatic VCO band select feature on chip. \nUsing the automatic VCO band select feature is a simple and \nreliable method of configuring the VCO frequency band. This feature is enabled by starting the PLL in manual mode, then placing the PLL in auto band select mode. This is done by setting Register 0x0A to a value of 0xCF, then to a value of \n0xA0. When these values are written, the device executes an \nautomated routine that determines the optimal VCO band setting for the device. The setting selected by the device ensures that the PLL remains locked over the full −40°C to +85°C operating temperature range of the device without further adjustment. (The PLL remains locked over the full temperature \nrange even if the temperature during initialization is at one of \nthe temperature extremes.) Manual VCO Band Select \nThe device also has a manual band select mode (PLL manual \nenable, Register 0x0A, Bit 6 = 1) that allows the user to select \nthe VCO tuning band. In manual mode, the VCO band is set \ndirectly with the value written to the manual VCO band bits (Register 0x0A, Bits[5:0]). To properly select the VCO band, \nfollow these steps: \n1.\n Put the device in manual band select mode by setting \nRegister 0x0A, Bit 6 = 1. \n2. Sweep the VCO band over a range of bands that results in \nthe PLL being locked. \n3. For each band, verify that the PLL is locked and read the PLL \nusing the VCO control voltage bits (Register 0x0E, Bits[3:0]). \n4. Select the band that results in the control voltage being closest to the center of the range, that is, 1001 or 1000 (see \nTable 24 ). The resulting VCO band should be the optimal \nsetting for the device. Write this value to the manual VCO \nband bits (Register 0x0A, Bits[5:0]). \n5.\n If desired, an indication of where the VCO is within the operating frequency band can be determined by querying the \nVCO control voltage. Table 24  shows how to interpret the \nPLL VCO control voltage value (Register 0x0E, Bits[3:0]). \nTable 24. VCO Control Voltage Range Indications \nVCO Control Voltage \n(Register 0x0E, Bits[3:0]) Indication \n1111 Move to higher VCO band \n1110  \n1101 VCO is operating in the higher end \nof the frequency band 1100 \n1011  \n1010  \n1001 VCO is operating within an optimal region of the frequency band \n1000 \n0111  \n0110  \n0101 VCO is operating in the lower end \nof the frequency band 0100 \n0011  \n0010  \n0001 Move to lower VCO band \n0000  \n \n \n   \n \n \nAD9122 \n \nRev. B | Page 46 of 60 ANALOG OUTPUTS \nTRANSMIT DAC OPERATION \nFigure 66 shows a simplified block diagram of the transmit path \nDACs. The DAC core consists of a current source array, a switch \ncore, digital control logic, and full-scale output current control. The DAC full-scale output current (I\nFS) is nominally 20 mA. \nThe output currents from the IOUT1P/IOUT2P and IOUT1N/ IOUT2N pins are complementary, meaning that the sum of the two currents always equals the full-scale current of the DAC. The digital input code to the DAC determines the effective \ndifferential current delivered to the load. \nI DACIOUT1P\nIOUT1N\nQ DACIOUT2N\nIOUT2PCURRENT\nSCALINGI DAC FS ADJUST\nREGISTER 0x40\nQ DAC FS ADJUST\nREGISTER 0x440.1µF\n10kΩ\nRSETFSADJREFIO5kΩ1.2V\n08281-037 \nFigure 66. Simplified Block Diagram of DAC Core  \nThe DAC has a 1.2 V band gap reference with an output imped-\nance of 5 kΩ. The reference output voltage appears on the REFIO pin. When using the internal reference, decouple the REFIO pin to AVSS with a 0.1 μF capacitor. Use the internal reference only for \nexternal circuits that draw dc currents of 2 μA or less. For dynamic \nloads or static loads greater than 2 μA, buffer the REFIO pin. If desired, the internal reference can be overdriven by applying an \nexternal reference (from 1.10 V to 1.30 V) to the REFIO pin. \nA 10 kΩ external resistor, R\nSET, must be connected from the \nFSADJ pin to AVSS. This resistor, along with the reference control \namplifier, sets up the correct internal bias currents for the DAC. \nBecause the full-scale current is inversely proportional to this \nresistor, the tolerance of R SET is reflected in the full-scale output \namplitude. \nThe full-scale current equation, where the DAC gain is set individ-\nually for the I and Q DACs in Register 0x40 and Register 0x44, \nrespectively, is as follows: \n⎟\n⎠⎞⎜\n⎝⎛⎟⎠⎞⎜⎝⎛× + × =DAC gainRI\nSETFS16372VREF For the nominal values of V REF (1.2 V), R SET (10 kΩ), and  \nDAC gain (512), the full-scale current of the DAC is typically \n20.16 mA. The DAC full-scale current can be adjusted from 8.64 mA to 31.68 mA by setting the DAC gain parameter, as shown in Figure 67. \n35\n0\n0 1000\nDAC GAIN CODEIFS (mA)30\n25\n20\n1510\n5\n200 400 600 800\n08281-036 \nFigure 67. DAC Full-Scale Cu rrent vs. DAC Gain Code \nTransmit DAC Transfer Function \nThe output currents from the IOUT1P/IOUT2P and IOUT1N/ \nIOUT2N pins are complementary, meaning that the sum of the \ntwo currents always equals the full-scale current of the DAC. The digital input code to the DAC determines the effective differential current delivered to the load. IOUT1P/IOUT2P provide maxi-\nmum output current when all bits are high. The output currents \nvs. DACCODE for the DAC outputs are expressed as \nFS N OUTxP IDACCODEI ×⎥⎦⎤\n⎢⎣⎡=2 (1) \nOUTxP FS OUTxN I I I−=  (2) \nwhere DACCODE  = 0 to 2N − 1. \nTransmit DAC Output Configurations \nThe optimum noise and distortion performance of the AD9122 \nis realized when it is configured for differential operation. The common-mode error sources of the DAC outputs are significantly \nreduced by the common-mode rejection of a transformer or differential amplifier. These common-mode error sources include even-order distortion products and noise. The enhancement in distortion performance becomes more significant as the frequency content of the reconstructed waveform increases and/or its \namplitude increases. This is due to the first-order cancellation \nof various dynamic common-mode distortion mechanisms, \ndigital feedthrough, and noise. \n   \n \n AD9122\n \nRev. B | Page 47 of 60 Figure 68  shows the most basic transmit DAC output circuitry. \nA pair of resistors, R O, is used to convert each of the comple-\nmentary output currents to a differential voltage output, V OUT. \nBecause the current outputs of the DAC are high impedance, \nthe differential driving point impedance of the DAC outputs, \nROUT, is equal to 2 × R O. Figure 69  illustrates the output voltage \nwaveforms.  \nRO\nROVIP+\nVIN–VOUTIIOUT1P\nIOUT1N\nRO\nROVQP+\nVQN–VOUTQIOUT2P\nIOUT2N\n08281-038 \nFigure 68. Basic Transmit DAC Output Circuit \n \n+VPEAK\nVCM\n0\n–VPEAKVNVP\nVOUT\n08281-039 \nFigure 69. Output Voltage Waveforms \nThe common-mode signal voltage, V CM, is calculated as \nOFS\nCM RIV × =2 \nThe peak output voltage, V PEAK, is calculated as \nVPEAK = I FS × R O \nWith this circuit configuration, the single-ended peak voltage is \nthe same as the peak differential output voltage. \nTransmit DAC Linear Output Signal Swing \nTo achieve optimum performance, the DAC outputs have a \nlinear output compliance voltage range that must be adhered  \nto. The linear output signal swing is dependent on the full-scale output current, I\nFS, and the common-mode level of the output. \nFigure 70  and Figure 71  show the IMD performance vs. the \noutput common-mode voltage at different full-scale currents \nand output frequencies. –60\n–65\n–70\n–75–80\n–85\n–90\n01 1.2 1.0 0.8 0.6 0.4 0.2IMD (dBc)\nVCM (V).4IFS = 20mAIFS = 10mA\nIFS = 30mA\n08281-168 \nFigure 70. IMD vs. Output Common-Mode Voltage (f OUT = 61 MHz,  \nRLOAD  = 50 Ω Differential, I FS = 10 mA, 20 mA, and 30 mA) \n–50\n–55\n–60\n–65\n–70\n–75\n–80\n–85\n01 1.2 1.0 0.8 0.6 0.4 0.2IMD (dBc)\nVCM (V).4IFS = 20mAIFS = 10mA\nIFS = 30mA\n08281-169 \nFigure 71. IMD vs. Output Common-Mode Voltage (f OUT = 161 MHz,  \nRLOAD  = 50 Ω Differential, I FS = 10 mA, 20 mA, and 30 mA) \nAUXILIARY DAC OPERATION \nThe AD9122 has two auxiliary DACs: one associated with the \nI path and one associated with the Q path. These auxiliary DACs \ncan be used to compensate for dc offsets in the transmitted signal. Each auxiliary DAC has a single-ended current that can sink or source current into either the positive (P) or negative (N) output \nof the associated transmit DAC. The auxiliary DAC structure is \nshown in Figure 72 . \nIOUT1P\nIOUT1NI DACVB\nI AUX DAC\nCURRENT\nDIRECTIONI AUX DAC[9:0]\nI AUX DAC\nSIGN\n08281-040 \nFigure 72. Auxiliary DAC Structure \nAD9122 \n \nRev. B | Page 48 of 60 The control registers for the I and Q auxiliary DACs are \nRegister 0x42, Register 0x43, Register 0x46, and Register 0x47. \nINTERFACING TO MODULATORS \nThe AD9122 interfaces to the ADL537x  family of modulators \nwith a minimal number of components. An example of the \nrecommended interface circuitry is shown in Figure 73. \nRBIP\n50Ω\nRBIN\n50Ω67\n66\nIBBNIBBPAD9122 ADL537x\nRBQN\n50Ω\nRBQP\n50Ω59\n58RLI\n100Ω\nRLQ\n100ΩIOUT1NIOUT1P\nIOUT2PIOUT2N\nQBBPQBBN\n08281-041 \nFigure 73. Typical Interface Circuitr y Between the AD9122 and the ADL537x \nFamily of Modulators \nThe baseband inputs of the ADL537x family require a dc bias  \nof 500 mV . The nominal midscale output current on each output \nof the DAC is 10 mA (one-half the full-scale current). Therefore, a single 50 Ω resistor to ground from each of the DAC outputs results in the desired 500 mV dc common-mode bias for the inputs to the ADL537x. The signal level can be reduced through the addition of the load resistor in parallel with the modulator inputs. The peak-to-peak voltage swing of the transmitted signal is \n) 2 () 2 (\nL BL B\nFS SIGNALR RR RI V+ ×× ×× =  \nBASEBAND FILTER IMPLEMENTATION \nMost applications require a baseband anti-imaging filter between \nthe DAC and the modulator to filter out Nyquist images and \nbroadband DAC noise. The filter can be inserted between the  \nI-V resistors at the DAC output and the signal level setting \nresistor across the modulator input. This establishes the input \nand output impedances for the filter. Figure 75 shows a fifth-order, low-pass filter. A common-mode \nchoke is used between the I-V resistors and the remainder of the filter. This removes the common-mode signal produced by the DAC and prevents the common-mode signal from being \nconverted to a differential signal, which can appear as unwanted \nspurious signals in the output spectrum. Splitting the first filter capacitor into two and grounding the center point creates a common-mode low-pass filter, providing additional common-mode rejection of high frequency signals. A purely differential filter can pass common-mode signals. \nDRIVING THE ADL5375-15 \nThe ADL5375-15  requires a 1500 mV dc bias and, therefore, \nrequires a slightly more complex interface than most other \nAnalog Devices modulators. It is necessary to level-shift the \nDAC output from a 500 mV dc bias to the 1500 mV dc bias required by the ADL5375-15. Level-shifting can be achieved with a purely passive network, as shown in Figure 74. In this network, the dc bias of the DAC remains at 500 mV , whereas \nthe input to the ADL5375-15 is 1500 mV . This passive, level-\nshifting network introduces approximately 2 dB of loss in the  \nac signal. \n67\n66\nIBBNIBBPAD9122 ADL5375-15\n59\n5821\n22\n9\n10RBIP\n45.3Ω\nRBIN\n45.3Ω\nRBQN\n45.3Ω\nRBQP\n45.3ΩRLIP\n3480Ω\nRLIN\n3480Ω\nRLQN\n3480Ω\nRLQP\n3480ΩIOUT1NIOUT1P\nIOUT2PIOUT2N\nQBBPQBBNRSIP\n1kΩ\nRSIN\n1kΩ\nRSQN\n1kΩ\nRSQP\n1kΩ5V\n5V\n08281-043 \nFigure 74. Passive, Level-Shifting Network for Biasing the ADL5375-15 \n \n \n \nAD9122\n50Ω50Ω\n33nH\n33nH2pF56nH\n56nH140Ω 6pF3pF\n3pF22pF\n22pFADL537x\n08281-042 \nFigure 75. DAC Modulator Interface with Fifth-Order, Low-Pass Filter \n    \n \n  \n AD9122\n \nRev. B | Page 49 of 60 REDUCING LO LEAKAGE AND UNWANTED \nSIDEBANDS \nAnalog quadrature modulators can introduce unwanted signals at \nthe LO frequency due to dc offset voltages in the I and Q baseband \ninputs, as well as feedthrough paths from the LO input to the out-\nput. The LO feedthrough can be nulled by applying the correct \ndc offset voltages at the DAC output. This can be done using the auxiliary DACs (Register 0x42, Register 0x43, Register 0x46, and Register 0x47) or by using the digital dc offset adjustments \n(Register 0x3C through Register 0x3F). \n The advantage of using the auxiliary DACs is that none of  \nthe main DAC dynamic range is used to perform the dc offset adjustment. The disadvantage is that the common-mode level  of the output signal changes as a function of the auxiliary DAC \ncurrent. The opposite is true when the digital offset adjustment \nis used. \nGood sideband suppression requires both gain and phase \nmatching of the I and Q signals. The I/Q phase adjust registers (Register 0x38 through Register 0x3B) and the DAC FS adjust registers (Register 0x40 and Register 0x44) can be used to calibrate \nthe I and Q transmit paths to optimize sideband suppression. \n \n \nAD9122 \n \nRev. B | Page 50 of 60 DEVICE POWER MANAGEMENT \nPOWER DISSIPATION \nThe AD9122 has four supply rails: AVDD33, IOVDD, DVDD18, \nand CVDD18. \nThe AVDD33 supply powers the DAC core circuitry. The power \ndissipation of the AVDD33 supply rail is independent of the digital operating mode and sample rate. The current drawn from the AVDD33 supply rail is typically 55 mA (182 mW) when the full-\nscale current of the I and Q DACs is set to the nominal value of \n20 mA. Changing the full-scale current directly affects the supply current drawn from the AVDD33 rail. For example, if the full-scale current of the I DAC and the Q DAC is changed to 10 mA, the \nAVDD33 supply current drops by 20 mA to 35 mA. \nThe IOVDD voltage supplies the serial port I/O pins, the RESET\n \npin, and the IRQ pin. The voltage applied to the IOVDD pin can \nrange from 1.8 V to 3.3 V . The current drawn by the IOVDD \nsupply pin is typically 3 mA. \nThe DVDD18 supply powers all of the digital signal processing \nblocks of the device. The power consumption from this supply is a function of which digital blocks are enabled and the frequency \nat which the device is operating. \nThe CVDD18 supply powers the clock receiver and clock distri-\nbution circuitry. The power consumption from this supply varies \ndirectly with the operating frequency of the device. CVDD18 also powers the PLL. The power dissipation of the PLL is typically \n80 mW when enabled. \nFigure 76  through Figure 80  show the power dissipation of  \nthe AD9122 under a variety of operating conditions. All of  \nthe graphs were taken with data being supplied to both the I \nand Q DACs. The power consumption of the device does not \nvary significantly with changes in the coarse modulation mode selected or the analog output frequency. Figure 76  through \nFigure 80  show the total power dissipation, as well as the power \ndissipation of the DVDD18 and CVDD18 supplies. \nMaximum power dissipation can be estimated to be 20% higher \nthan the typical power dissipation. \n  1700\n1500\n1300\n1100\n900\n700\n500\n300\n100\n0 300 250 200 150 100 50\nfDATA  (MHz)POWER (mW)1× INTERPOLATION\n2× INTERPOLATION\n4× INTERPOLATION\n8× INTERPOLATION\n08281-044 \nFigure 76. Total Power Dissipation vs. f DATA  Without PLL, Fine NCO,  \nor Inverse Sinc \n \n1200\n1000\n800600\n400\n200\n0\n0 300 250 200 150 100 50\nfDATA  (MHz)POWER (mW)\n08281-0451× INTERPOLATION\n2× INTERPOLATION\n4× INTERPOLATION\n8× INTERPOLATION\n \nFigure 77. DVDD18 Power Dissipation vs. f DATA  Without Fine NCO  \nor Inverse Sinc \n \n250\n200\n150\n100\n50\n0\n0 300 250 200 150 100 50\nfDATA  (MHz)POWER (mW)\n08281-0461× INTERPOLATION\n2× INTERPOLATION\n4× INTERPOLATION\n8× INTERPOLATION\n \nFigure 78. CVDD18 Power Dissipation vs. f DATA  with PLL Disabled \n AD9122\n \nRev. B | Page 51 of 60 300\n250\n200150\n100\n50\n0\n0 1200 1000 800 600 400 200\nfDAC (MHz)POWER (mW)\n08281-047 \nFigure 79. DVDD18 Power Dissipation vs. f DAC Due to Inverse Sinc Filter \n \n300\n250\n200\n150\n100\n50\n0\n50 300 250 200 150 100\nfDATA  (MHz)POWER (mW)\n08281-0481× INTERPOLATION\n2×, 4×, 8× INTERPOLATION\n \nFigure 80. DVDD18 Power Dissipation vs. f DATA  Due to Fine NCO \n TEMPERATURE SENSOR \nThe AD9122 has a band gap temperature sensor for monitoring \nthe temperature change of the AD9122. The temperature must \nbe calibrated against a known temperature to remove the part-to-part variation on the band gap circuit used to sense the \ntemperature. The DACCLK must be running at a minimum  \nof 100 MHz to obtain a reliable temperature measurement. \nTo monitor temperature change, the user must take a reading  \nat a known ambient temperature for a single-point calibration \nof each AD9122 device. \nTx = T\nREF + 7.7 × (Code_x  − Code_ref )/1000 + 1 \nwhere: \nCode_x is the readback code at the unknown temperature, Tx . \nCode_ref  is the readback code at the calibrated temperature, TREF. \nTo use the temperature sensor, it must be enabled by setting Register 0x01, Bit 4, to 0. In addition, to obtain accurate read-ings, the die temperature range control register (Register 0x48) \nshould be set to 0x02. \n \n \nAD9122 \n \nRev. B | Page 52 of 60 MULTICHIP SYNCHRONIZATION \nSystem demands may require that the outputs of multiple DACs \nbe synchronized with each other or with a system clock. Systems that support transmit diversity or beamforming, where multiple antennas are used to transmit a correlated signal, require multiple \nDAC outputs to be phase aligned with each other. Systems with \na time division multiplexing transmit chain may require one or \nmore DACs to be synchronized with a system-level reference clock. \nMultiple devices are considered synchronized to each other when \nthe state of the clock generation state machines is identical for all parts and when time-aligned data is being read from the FIFOs of all parts simultaneously. Devices are considered synchronized \nto a system clock when there is a fixed and known relationship \nbetween the clock generation state machine and the data being read from the FIFO and a particular clock edge of the system clock. The AD9122 has provisions for enabling multiple devices \nto be synchronized to each other or to a system clock. \nThe AD9122 supports synchronization in two different modes: \ndata rate mode and FIFO rate mode. In data rate mode, the input \ndata rate represents the lowest synchronized clock rate. In FIFO \nrate mode, the FIFO rate, which is the data rate divided by the \nFIFO depth of 8, represents the lowest rate clock. \nThe advantage of FIFO rate synchronization is increased time \nbetween the setup and hold time windows for DCI changes relative to the DACCLK or REFCLK input. When the synchro-nization state machine is on in data rate mode, the elasticity of \nthe FIFO is not used to absorb timing variations between the data \nsource and the DAC, resulting in setup and hold time windows \nrepeating at the input data rate. \nThe method chosen for providing the DAC sampling clock \ndirectly affects the synchronization methods available. When the device clock multiplier is used, only data rate mode is available. When the DAC sampling clock is sourced directly, \nboth data rate mode and FIFO rate mode synchronization are \navailable. The following sections describe the synchronization methods for enabling both clocking modes and querying the \nstatus of the synchronization logic. \nThe full synchronization methods described are used to align \nmultiple dual DACs within one DACCLK cycle. To achieve syn-chronization within one DACCLK cycle, both the REFCLK and \nFRAME signals are required to perform back-end and front-end \nalignment. If synchronization does not need to be this accurate, other options can be used. In data rate mode or in FIFO rate mode, using soft alignment of the FIFO for multiple DACs synchronizes the DAC outputs within two data clock cycles (see the Serial Port \nInitiated FIFO Reset  section). For more information about \nsynchronization, see the AN-1093  Application Note, “Synchro-\nnization of Multiple AD9122 TxDAC+ Converters. ” \n SYNCHRONIZATION WITH CLOCK MULTIPLICATION \nWhen using the clock multiplier to generate the DAC sample rate \nclock, the REFCLK input signal acts as both the reference clock \nfor the PLL-based clock multiplier and the synchronization signal. To synchronize devices, distribute the REFCLK signal with low \nskew to all the devices that need to be synchronized. Skew between \nthe REFCLK signals of the different devices shows up directly as \na timing mismatch at the DAC outputs.  \nBecause two clocks are shared on the same signal, an appro-\npriate frequency must be chosen for the synchronization and REFCLK signals. The FRAME and DCI signals can be created in the FPGA along with the data. A circuit diagram of a typical \nconfiguration is shown in Figure 81 . \nSYSTEM\nCLOCKLOW SKEW\nCLOCK DRIVERMATCHED\nLENGTH TRACES\nREFCLKP/\nREFCLKN\nFRAMEP/\nFRAMEN\nDCIP/DCINREFCLKP/\nREFCLKN\nFRAMEP/\nFRAMENDCIP/DCINIOUT1P/IOUT1N\nIOUT2P/\nIOUT2N\nFPGA\n08281-049 \nFigure 81. Typical Circuit Diagram for Synchronizing Devices \nThe Procedure for Synchronization When Using the PLL  section \noutlines the steps required to synchronize multiple devices. The \nprocedure assumes that the REFCLK signal is applied to all the \ndevices and that the PLL of each device is phase locked to it. The \nfollowing procedure must be carried out on each individual device. \nProcedure for Synchronization When Using the PLL \nIn the initialization of the AD9122, all the clock signals (DACCLK, \nDCI, FRAME, synchronization, and REFCLK) must be present and \nstable before the synchronization feature is turned on. Configure \nthe AD9122 for data rate, periodic synchronization by writing 0xC8 to the sync control register (Register 0x10). Additional synchronization options are available (see the Additional \nSynchronization Features  section). \nRead the sync status register (Register 0x12) to verify that  the sync locked bit (Bit 6) is set high, indicating that the device \nachieved back-end synchronization, and that the sync lost bit \n(Bit 7) is low. These levels indicate that the clocks are running with a constant and known phase relative to the synchroniza-\ntion signal. \nReset the FIFO by strobing the FRAME signal high for the time \ninterval required to write two complete input data words. Resetting \nthe FIFO ensures that the correct data is being read from the FIFO. \nThis completes the synchronization procedure; all devices should \nnow be synchronized. \n \n AD9122\n \nRev. B | Page 53 of 60 REFCLKP(1)/\nREFCLKN(1)\nREFCLKP(2)/\nREFCLKN(2)\nDCIP(2)/\nDCIN(2)\nFRAMEP(2)/\nFRAMEN(2)tSKEW\ntSDCI tHDCI\n08281-050 \nFigure 82. Timing Diagram Required for Synchronizing Devices \nDACCLKP/\nDACCLKN\nFRAMEP/\nFRAMENREFCLKP/\nREFCLKN\nDCIP/\nDCINIOUT1P/\nIOUT1N\nDCIP/\nDCINDACCLKP/\nDACCLKN\nREFCLKP/\nREFCLKN\nFRAMEP/\nFRAMENIOUT2P/\nIOUT2NSAMPLE\nRATE CLOCKLOW SKEW\nCLOCK DRIVER\nSYNC\nCLOCKLOW SKEW\nCLOCK DRIVERMATCHED\nLENGTH TRACES\nFPGA\n08281-051 \nFigure 83. Typical Circuit Diagram for Synchronizing Devices to a System Clock \nTo maintain synchronization, the skew between the REFCLK \nsignals of the devices must be less than t SKEW ns. When resetting \nthe FIFO, the FRAME signal must be held high for the time interval required to write two complete input data words. A \ntiming diagram of the input signals is shown in Figure 82 . \nFigure 82  shows a REFCLK frequency equal to the data rate. \nAlthough this is the most common situation, it is not strictly \nrequired for proper synchronization. Any REFCLK frequency that satisfies the following equation is acceptable. (This \nequation is valid only when the PLL is used because only data \nrate mode is available with the PLL on.) \nf\nSYNC_I  = f DACCLK /2N and fSYNC_I  ≤ fDATA \nwhere N = 0, 1, 2, or 3. \nAs an example, a configuration with 4× interpolation and clock \nfrequencies of f VCO = 1600 MHz, f DACCLK  = 800 MHz, f DATA = \n200 MHz, and f SYNC_I  = 100 MHz is a viable solution. \nSYNCHRONIZATION WITH DIRECT CLOCKING \nWhen directly sourcing the DAC sample rate clock, a separate REFCLK input signal is required for synchronization. To syn-\nchronize devices, the DACCLK signal and the REFCLK signal \nmust be distributed with low skew to all the devices being synchronized. If the devices need to be synchronized to a master clock, use the master clock directly for generating the \nREFCLK input (see Figure 83 ). \nDATA RATE MODE SYNCHRONIZATION \nThe Procedure for Data Rate Synchronization When Directly \nSourcing the DAC Sampling Clock  section outlines the steps \nrequired to synchronize multiple devices in data rate mode. The \nprocedure assumes that the DACCLK and REFCLK signals are applied to all the devices. The following procedure must be \ncarried out on each individual device. \nProcedure for Data Rate Synchronization When Directly \nSourcing the DAC Sampling Clock \nConfigure the AD9122 for data rate, periodic synchronization \nby writing 0xC8 to the sync control register (Register 0x10). \nAdditional synchronization options are available (see the \nAdditional Synchronization Features  section). \nRead the sync locked bit (Register 0x12, Bit 6) to verify that the \ndevice is back-end synchronized. A high level on this bit indicates that the clocks are running with a constant and known phase \nrelative to the synchronization signal. \nReset the FIFO by strobing the FRAME signal high for one \ncomplete DCI period. Resetting the FIFO ensures that the \ncorrect data is being read from the FIFO of each of the devices \nsimultaneously. \nAD9122 \n \nRev. B | Page 54 of 60 This completes the synchronization procedure; all devices \nshould now be synchronized. \nTo ensure that each DAC is updated with the correct data on \nthe same CLK edge, two timing relationships must be met on \neach DAC. \n• DCIP/DCIN and D[15:0]P/D[15:0]N must meet the setup \nand hold times with respect to the rising edge of DACCLK. \n• Synchronization (REFCLK) must also meet the setup and \nhold times with respect to the rising edge of DACCLK. \nWhen these conditions are met, the outputs of the DACs are \nupdated within one DAC clock cycle of each other. The timing \nrequirements of the input signals are shown in Figure 84 . \nDACCLKP(1)/\nDACCLKN(1)\nDACCLKP(2)/\nDACCLKN(2)\nREFCLKP(2)/\nREFCLKN(2)\nDCIP(2)/\nDCIN(2)\nFRAMEP(2)/\nFRAMEN(2)tSKEW\ntSUSYNC\ntSDCI tHDCItHSYNC\n08281-052 \nFigure 84. Data Rate Synchronizat ion Signal Timing Requirements,  \n2× Interpolation \nFigure 84  shows the synchronization signal timing with 2× \ninterpolation; therefore, f DCI = ½ × f CLK. The REFCLK input is \nshown to be equal to the data rate. The maximum frequency at \nwhich the device can be resynchronized in data rate mode can be expressed as \nf\nSYNC_I  = f DATA/2N \nwhere N is any non-negative integer. \nGenerally, for values of N greater than or equal to 3, select the \nFIFO rate synchronization mode. \nWhen synchronization is used in data rate mode, the timing \nconstraint between the DCI and DACCLK must be met according to Table 25 . In data rate mode, the allowed phase drift between \nthe DCI and DACCLK is limited to one DCI cycle. The DCI to \nDACCLK timing restriction is required to prevent corruption of \nthe data transfer when the FIFO is constantly reset. The required \ntiming between the DCI and DACCLK is shown in Figure 85 . \nTable 25. DCI to DACCLK Setup and Hold Times \nDCI Delay \nRegister 0x16, \nBits[1:0] Minimum Setup Time, t\nSDCI (ns) Minimum Hold Time, t\nHDCI (ns) Sampling Interval (ns) \n00 −0.07 0.82 0.75 \n01 −0.24 1.13 0.89 \n10 −0.39 1.40 1.01 \n11 −0.49 1.55 1.06 \n08281-147DCIDACCLK/\nREFCLKtDATA\ntSDCI\ntHDCISAMPLING\nINTERVAL\n \nFigure 85. Timing Diagram for Input Data Port (Data Rate Mode) \nFIFO RATE MODE SYNCHRONIZATION \nThe Procedure for FIFO Rate Synchronization When Directly \nSourcing the DAC Sampling Clock  section outlines the steps \nrequired to synchronize multiple devices in FIFO rate mode. \nThe procedure assumes that the DACCLK and REFCLK signals \nare applied to all the devices. The procedure must be carried out \non each individual device. \nProcedure for FIFO Rate Synchronization When Directly \nSourcing the DAC Sampling Clock \nConfigure the AD9122 for FIFO rate, periodic synchronization \nby writing 0x88 to the sync control register (Register 0x10). Addi-\ntional synchronization options are available (see the Additional \nSynchronization Features  section). \nRead the sync locked bit (Register 0x12, Bit 6) to verify that the \ndevice is back-end synchronized. A high level on this bit indicates \nthat the clocks are running with a constant and known phase \nrelative to the synchronization signal. \nReset the FIFO by strobing the FRAME signal high for one com-\nplete DCI period. Resetting the FIFO ensures that the correct data \nis being read from the FIFO of each of the devices simultaneously. \nThis completes the synchronization procedure; all devices should \nnow be synchronized. \nWhen these conditions are met, the outputs of the DACs are \nupdated within one DAC clock cycle of each other. The timing requirements of the input signals are shown in Figure 86 . \nDACCLKP(1)/\nDACCLKN(1)\nDACCLKP(2)/\nDACCLKN(2)\nREFCLKP(2)/\nREFCLKN(2)\nDCIP(2)/\nDCIN(2)\nFRAMEP(2)/\nFRAMEN(2)tSKEW\ntSUSYNC tHSYNC\n08281-053 \nFigure 86. FIFO Rate Synchronizat ion Signal Timing Requirements,  \n2× Interpolation \n AD9122\n \nRev. B | Page 55 of 60 Figure 86  shows the synchronization signal timing with 2× \ninterpolation; therefore, f DCI = ½ × f CLK. The REFCLK input is \nshown to be equal to the FIFO rate. The maximum frequency  \nat which the device can be resynchronized in FIFO rate mode can be expressed as \nf\nSYNC_I  = f DATA/(8 × 2N) \nwhere N is any non-negative integer. \nADDITIONAL SYNCHRONIZATION FEATURES \nTable 26  shows the required timing between the DACCLK and the \nsynchronization clock when synchronization is used. This timing \nrestriction applies to both data rate mode and FIFO rate mode. \nTable 26. Synchronization Setup and Hold Times \nParameter Min Max Unit \ntSKEW −t DACCLK /2 +t DACCLK /2 ps \ntSUSYNC  100  ps \ntHSYNC  330  ps \nOne-Time Synchronization \nWhen implementing the full multichip synchronization feature \n(with the REFCLK and FRAME signals aligned within one DACCLK \ncycle), the user may experience difficulty meeting the DACCLK to synchronization clock timing. In this case, a one-time synchroni-zation method can be used. Before implementing the one-time \nsynchronization, make sure that the synchronization signal is \nlocked by checking both the sync signal locked and the sync signal lost flags (Bit 4 and Bit 5 in Register 0x06). It is also important that synchronization not be enabled before stable REFCLK signals are present from the FPGA or ASIC. For more information and \na detailed flowchart of the one-time synchronization feature, see \nthe AN-1093 Application Note, “Synchronization of Multiple \nAD9122 TxDAC+ Converters. ” \nSync Status Bits \nWhen the sync locked bit (Register 0x12, Bit 6) is set, it indicates that the synchronization logic has reached alignment. This align-\nment is determined when the clock generation state machine \nphase is constant. \nAlignment takes from (11 + averaging) × 64 to (11 + averaging) × \n128 DACCLK cycles. The sync locked bit can also trigger an IRQ\n, \nas described in the  section. Interrupt Request Operation\nWhen the sync lost bit (Register 0x12, Bit 7) is set, it indicates \nthat a previously synchronized device has lost alignment. This bit is latched and remains set until cleared by overwriting the \nregister. This bit can also trigger an IRQ\n, as described in the \n section. Interrupt Request OperationThe sync phase readback bits (Register 0x13, Bits[7:0]) report \nthe current clock phase in a 6.2 format. Bits[7:2] report which of \nthe 64 states (0 to 63) the clock is currently in. When averaging \nis enabled, Bits[1:0] provide ¼ state accuracy (for 0, ¼, ½, ¾). \nThe lower two bits give an indication of the timing margin \nissues that may exist. If the synchronization sampling is error \nfree, the fractional clock state should be 00. \nTiming Optimization \nThe synchronization signal (REFCLK) is sampled by a version \nof the DACCLK. If sampling errors are detected, the opposite \nsampling edge can be selected to improve the sampling point. \nThe sampling edge can be selected by setting Register 0x10,  \nBit 3 (1 = rising and 0 = falling). \nThe synchronization logic resynchronizes when a phase change \nbetween the synchronization signal (REFCLK) and the state of the clock generation state machine exceeds a threshold. To mitigate the effects of jitter and prevent erroneous resynchronizations, the \nrelative phase can be averaged. The amount of averaging is set \nby the sync averaging bits (Register 0x10, Bits[2:0]) and can be set from 1 to 128. The higher the number of averages, the more slowly the device recognizes and resynchronizes to a legitimate phase correction. Generally, the averaging should be made as \nlarge as possible while still meeting the allotted resynchroniza-\ntion time interval. Note that, if the average synchronization sampling result is in approximately the middle of the probability curve, the synchronization engine can be unstable, resulting in \ncorrupted output. \nThe value of the Sync Phase Request[5:0] bits (Register 0x11, \nBits[5:0]) is the state to which the clock generation state machine \nresets upon initialization. By varying this value, the timing of \nthe internal clocks, with respect to the synchronization signal (REFCLK), can be adjusted. Every increment of the Sync Phase Request[5:0] value advances the internal clocks by one DACCLK cycle. This offset can be used for two purposes: to skew the out-\nputs of two synchronized DAC outputs in increments of the \nDACCLK cycle, and to change the relative timing between the DAC output and the SYNC input (REFCLK). This may allow for a more optimal placement of the DCI sampling point in data rate synchronization mode. \n \n   \n \nAD9122 \n \nRev. B | Page 56 of 60 INTERRUPT REQUEST OPERATION \nThe AD9122 provides an interrupt request output signal on \nPin 7 ( IRQ) that can be used to notify an external host processor \nof significant device events. Upon assertion of the interrupt, the \ndevice should be queried to determine the precise event that \noccurred. The IRQ pin is an open-drain, active low output. Pull \nthe IRQ pin high external to the device. This pin can be tied to \nthe interrupt pins of other devices with open-drain outputs to \nwire-OR these pins together. \nThe event flags provide visibility into the device. These flags  \nare located in the two event flag registers, Register 0x06 and Register 0x07. The behavior of each event flag is independently \nselected in the interrupt enable registers, Register 0x04 and \nRegister 0x05. When the flag interrupt enable is active, the event flag latches and triggers an external interrupt. When the flag interrupt is disabled, the event flag monitors the source signal, \nbut the IRQ\n pin remains inactive. \nFigure 87  shows the IRQ-related circuitry and how the event flag \nsignals propagate to the IRQ output. The INTERRUPT_ENABLE \nsignal represents one bit from the interrupt enable register. The \nEVENT_FLAG_SOURCE signal represents one bit from the event flag register. The EVENT_FLAG_SOURCE signal represents one of the device signals that can be monitored, such as the PLL_LOCKED signal from the PLL phase detector or the \nFIFO_W ARNING_1 signal from the FIFO controller. \nWhen an interrupt enable bit is set high, the corresponding \nevent flag bit reflects a positively tripped version of the \nEVENT_FLAG_SOURCE signal; that is, the event flag bit is latched on the rising edge of the EVENT_FLAG_SOURCE \nsignal. This signal also asserts the external IRQ\n pin. \n When an interrupt enable bit is set low, the event flag bit reflects \nthe current status of the EVENT_FLAG_SOURCE signal, and \nthe event flag has no effect on the external IRQ pin. \nThe latched version of an event flag (the INTERRUPT_SOURCE \nsignal) can be cleared in two ways. The recommended way is by writing 1 to the corresponding event flag bit. A hardware or soft-\nware reset also clears the INTERRUPT_SOURCE signal. \nINTERRUPT SERVICE ROUTINE \nInterrupt request management starts by selecting the set of \nevent flags that require host intervention or monitoring. The \nevents that require host action should be enabled so that the \nhost is notified when they occur. For events requiring host \nintervention upon IRQ activation, run the following routine  \nto clear an interrupt request: \n1. Read the status of the event flag bits that are being \nmonitored. \n2. Set the interrupt enable bit low so that the unlatched EVENT_FLAG_SOURCE signal can be monitored directly. \n3.\n Perform any actions that may be required to clear the EVENT_FLAG_SOURCE. In many cases, no specific \nactions may be required. \n4.\n Read the event flag to verify that the actions taken have \ncleared the EVENT_FLAG_SOURCE. \n5. Clear the interrupt by writing 1 to the event flag bit. \n6. Set the interrupt enable bits of the events to be monitored. \nNote that some EVENT_FLAG_SOURCE signals are latched signals. These signals are cleared by writing to the correspond-ing event flag bit. For more information about each event flag, \nsee Register 0x06 and Register 0x07 in Table 11 . \n \n \nINTERRUPT_ENABLE\nEVENT_FLAG_SOURCE\nDEVICE_RESETEVENT_FLAG\nINTERRUPT_\nSOURCE10\nOTHER\nINTERRUPT\nSOURCESIRQ\nWRITE_1_TO_EVENT_FLAG\n08281-054 \nFigure 87. Simplified Schematic of IRQ  Circuitry \n \n AD9122\n \nRev. B | Page 57 of 60 INTERFACE TIMING VALIDATION \nThe AD9122 provides on-chip sample error detection (SED) \ncircuitry that simplifies verification of the input data interface. The SED circuitry compares the input data samples captured  at the digital input pins with a set of comparison values. The \ncomparison values are loaded into registers through the SPI \nport. Differences between the captured values and the compar-ison values are detected and stored. Options are available for \ncustomizing SED test sequencing and error handling. \nSED OPERATION \nThe SED circuitry operates on a data set made up of four 16-bit \ninput words, denoted as I0, Q0, I1, and Q1. To properly align \nthe input samples, the first I data-word (that is, I0) is indicated \nby asserting FRAME for at least one complete input sample. \nFigure 88  shows the input timing of the interface in word mode. \nThe FRAME signal can be issued once at the start of the data \ntransmission, or it can be asserted repeatedly at intervals coinciding \nwith the I0 and Q0 data-words. \nFRAME\nDATA[15:0] Q1 Q0 I0 I1 I0 Q0\n08281-056 \nFigure 88. Timing Diagram of Extended FRAME Signal Required  \nto Align Input Data for SED \n The SED has three flag bits (Register 0x67, Bit 5, Bit 1, and Bit 0) \nthat indicate the results of the input sample comparisons. The sample error detected bit (Register 0x67, Bit 5) is set when an error is detected and remains set until cleared. The SED also \nprovides registers that indicate which input data bits experienced \nerrors (Register 0x70 through Register 0x73). These bits are \nlatched and indicate the accumulated errors detected until cleared. \nAutosample error detection (AED) is an autoclear function in \nthe SED. The autoclear mode has two effects: it activates the compare fail bit and the compare pass bit (Register 0x67, Bit 1 and Bit 0) and changes the behavior of Register 0x70 through \nRegister 0x73. The compare pass bit is set if the last comparison \nindicated that the sample was error free. The compare fail bit is set if an error is detected. The compare fail bit is automatically cleared by the reception of eight consecutive error-free compar-isons. When autoclear mode is enabled, Register 0x70 through Register 0x73 accumulate errors as previously described but are \nreset to all 0s after eight consecutive error-free sample comparisons \nare made. \nIf desired, the sample error detected, compare pass, and com-\npare fail flags can be configured to trigger the IRQ\n pin when \nactive. This is done by enabling the appropriate bits in the event \nflag register (Register 0x07). \nTable 27  shows a progression of the input sample comparison \nresults and the corresponding states of the error flags. \n \nTable 27. Progression of Input Sample Comparison  Results and the Resulting SED Register Values \nCompare Results (Pass/Fail) P F F F P P P P P P P P P F P F \nRegister 0x67, Bit 5 (Sample Error Detected) 0  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 \nRegister 0x67, Bit 1 (Compare Fail) 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 \nRegister 0x67, Bit 0 (Compare Pass) 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 \nRegister 0x70 to Register 0x73  \n(Errors Detected x_BITS[15:0]) Z1 N2 N2 N2 N2 N2 N2 N2 N2 N2 N2 N2 Z1 N2 N2 N2 \n1 Z = all 0s. \n2 N = nonzero. \n \nAD9122 \n \nRev. B | Page 58 of 60 SED EXAMPLE \nNormal Operation \nThe following example illustrates the SED configuration for \ncontinuously monitoring the input data and assertion of the \nIRQ pin when a single error is detected. \n1. Load the following comparison values. (Comparison values \ncan be chosen arbitrarily; however, choosing values that \nrequire frequent bit toggling provides the most robust test.) Register 0x68: I0[7:0] Register 0x69: I0[15:8] Register 0x6A: Q0[7:0] \nRegister 0x6B: Q0[15:8] \nRegister 0x6C: I1[7:0] Register 0x6D: I1[15:8] Register 0x6E: Q1[7:0] Register 0x6F: Q1[15:8] \n2.\n Enable the SED error detect flag to assert the IRQ pin. \n(Set Register 0x05 to 0x04.) \n3. Begin transmitting the input data pattern. \n 4. Write to Register 0x67 to enable the SED. (Set Register 0x67 to 0x80.) \n5.\n Clear the SED errors in Register 0x67 and Register 0x07. When the SED is first turned on, the FRAME signal may \nbe detected immediately; therefore, the SED failure bit may \nbe asserted due to the unknown initial FRAME status. For this reason, the SED compare fail status bit must be cleared at least once immediately after enabling the SED. \nIf IRQ\n is asserted, read Register 0x67 and Register 0x70 through \nRegister 0x73 to verify that a SED error was detected and to deter-mine which input bits were in error. The bits in Register 0x70 \nthrough Register 0x73 are latched; therefore, the bits indicate \nany errors that occurred on those bits throughout the test (not \nonly the errors that caused the error detected flag to be set). \nNote that the FRAME signal is not required during normal \noperation when the device is configured for word mode. Enabling the alignment of the I0 sample as described in the \nSED Operation section requires the use of the FRAME signal. \nThe timing diagrams for byte and nibble modes are the same  as during normal operation and are shown in Figure 44  and \nFigure 45 , respectively. \n AD9122\n \nRev. B | Page 59 of 60 EXAMPLE START-UP ROUTINE \nTo ensure reliable start-up of the AD9122, certain sequences \nshould be followed. This section shows an example start-up routine. This example uses the configuration described in the \nDevice Configuration section. \nDEVICE CONFIGURATION \nThe following device configuration is used for this example: \n• fDATA = 122.88 MSPS \n• Interpolation is 4×, using HB1 = 10 and HB2 = 010010 \n• Input data is baseband data \n• fOUT = 140 MHz \n• fREFCLK  = 122.88 MHz \n• PLL is enabled \n• Fine NCO is enabled \n• Inverse sinc filter is enabled \n• Synchronization is enabled \n• Silicon revision is R2 \nDERIVED PLL SETTINGS \nThe following PLL settings can be derived from the device \nconfiguration: \n• fDACCLK  = f DATA × interpolation = 491.52 MHz \n• fVCO = 4 × f DACCLK  = 1966.08 MHz (1 GHz < f VCO < 2 GHz) \n• N1 = f DACCLK /fREFCLK  = 4 \n• N2 = f VCO/fDACCLK  = 4 \nDERIVED NCO SETTINGS \nThe following NCO settings can be derived from the device \nconfiguration: \n• fNCO = 2 × f DATA \n• fCARRIER  = f OUT − f MODHB1  = 140 − 122.88 = 17.12 MHz \n• FTW = 17.12/(2 × 122.8) × 232 = 0x11D55555 \nSTART-UP SEQUENCE \nThe following sequence configures the power clock and register \nwrite sequencing for reliable device start-up in PLL ON mode: \nPower up Device (no specific power supply \nsequence is required) \nApply stable REFCLK input signal. \nApply stable DCI input signal. \nIssue H/W RESET (Optional). Device Configuration Register Write Sequence: \n0x00 Æ 0x20 /* Issue Software Reset */ \n0x00 Æ 0x00 \n \n/* Start PLL */ \n0x0D Æ 0xD9 \n0x0A Æ 0xC0 \n0x0A Æ 0x80 \n \n/* Verify PLL is Locked */ Read 0x0E /* Expect bit 7 = 1 */  \n/* Configure Interpolation Filters */ \n0x1B Æ 0x84 \n0x1C Æ 0x04 \n0x1D Æ 0x24 \n \n/* Configure NCO */ \n0x1E Æ 0x01 \n0x30 Æ 0x55 \n0x31 Æ 0x55 \n0x32 Æ 0xD5 \n0x33 Æ 0x11 \n \n/* Update Frequency Tuning Word */ \n0x36 Æ 0x01 \n0x36 Æ 0x00 \n \n/* Choose Data Rate Mode */  \n0x10 Æ 0x48 \n \n/* Issue Software FIFO Reset */ \n0x17 Æ 0x04 \n0x18 Æ 0x02 \n \n/* Verify FIFO Reset */ Read 0x18 /* Expect 0x07 */ \n0x18 Æ 0x00 \nRead 0x19 /* Expect 0x1F or 0x0F or 0x07 */ \n \n \nAD9122 \n \nRev. B | Page 60 of 60 OUTLINE DIMENSIONS \n \nCOMPLIANT TO JEDEC STANDARDS MO-220-VNND-4\n052809-A0.20 REF0.80 MAX\n0.65 TYP1.000.850.80\n0.05 MAX0.02 NOM1\n1854\n37\n19 3672 55\n0.500.400.306.156.00 SQ5.85\n8.50 REFEXPOSED PAD\n(BOTTOM VIEW)TOP VIEW9.75\nBSC SQ10.00\nBSC SQ\nPIN 1\nINDICATOR\nSEATING\nPLANE12° MAX0.600.420.240.600.420.24\n0.300.230.180.50\nBSCPIN 1\nINDICATOR\nCOPLANARITY\n0.08FOR PROPER CONNECTION OFTHE EXPOSED PAD, REFER TOTHE PIN CONFIGURATION ANDFUNCTION DESCRIPTIONSSECTION OF THIS DATA SHEET.\n \nFigure 89. 72-Lead Lead Frame Chip Scale Package [LFCSP_VQ] \n10 mm × 10 mm Body, Very Thin Quad \n(CP-72-7) \nDimensions shown in millimeters \n \nORDERING GUIDE \nModel1 Temperature Range Package Description Package Option \nAD9122BCPZ −40°C to +85°C 72-lead LFCSP_VQ CP-72-7 \nAD9122BCPZRL −40°C to +85°C 72-lead LFCSP_VQ CP-72-7 \nAD9122-M5372-EBZ  Evaluation Board Connected to ADL5372 Modulator  \nAD9122-M5375-EBZ  Evaluation Board Connected to ADL5375 Modulator  \n1 Z = RoHS Compliant Part. \n \n   \n \n \n \n©2009–2011 Analog Devices, Inc. All rights reserved. Trademarks and  \n registered trademarks are the prop erty of their respective owners. \n  D08281-0-5/11(B)  \n'}]
!==============================================================================!
### Component Summary: AD9122BCPZ

**Key Characteristics and Specifications:**

- **Voltage Ratings:**
  - AVDD33: 3.13 V to 3.47 V
  - DVDD18: 1.71 V to 1.89 V
  - CVDD18: 1.71 V to 1.89 V
  - IOVDD: 1.71 V to 3.47 V

- **Current Ratings:**
  - Full-scale output current: 8.7 mA to 31.7 mA (programmable)
  - Typical current consumption: 
    - 55 mA at AVDD33 (when I/Q DACs are set to 20 mA)
    - 444 mA at DVDD18 (varies with digital blocks enabled)

- **Power Consumption:**
  - 1.5 W at 1.2 GSPS
  - 800 mW at 500 MSPS
  - Power-down mode: 6.5 mW to 18.8 mW

- **Operating Temperature Range:**
  - -40°C to +85°C

- **Package Type:**
  - 72-lead, exposed paddle LFCSP (Lead Frame Chip Scale Package)

- **Special Features:**
  - Dual, 16-bit, high dynamic range DAC with a sample rate of 1230 MSPS.
  - Integrated 2×/4×/8× interpolator/complex modulator.
  - Low power consumption and high performance with low noise and intermodulation distortion.
  - Multiple chip synchronization interfaces.
  - Digital inverse sinc filter.
  - Flexible LVDS interface for data input.

- **Moisture Sensitive Level (MSL):**
  - MSL Level 3 per JEDEC J-STD-020E.

**Description:**
The AD9122 is a dual, 16-bit Digital-to-Analog Converter (DAC) designed for high-performance applications in wireless infrastructure. It operates at a maximum sample rate of 1230 MSPS, allowing for multicarrier generation up to the Nyquist frequency. The device is optimized for direct conversion transmit applications, featuring complex digital modulation capabilities and gain/offset compensation.

**Typical Applications:**
- Wireless infrastructure (W-CDMA, CDMA2000, TD-SCDMA, WiMAX, GSM, LTE)
- Digital high or low IF synthesis
- Transmit diversity
- Wideband communications (LMDS/MMDS, point-to-point)
- Signal processing in advanced communication systems

The AD9122 is particularly suited for applications requiring high fidelity and low distortion in signal generation, making it ideal for modern communication systems that demand high performance and efficiency.