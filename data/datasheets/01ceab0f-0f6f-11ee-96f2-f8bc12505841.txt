[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': "Give me information about the component of ATMEGA128A-AU production of ATMEL from the text: 8-bit AVR Microcontroller\n ATmega128A\n DATASHEET SUMMARY\nIntroduction\nThe Atmel® ATmega128A is a low-power CMOS 8-bit microcontroller based\non the AVR® enhanced RISC architecture. By executing powerful instructions\nin a single clock cycle, the ATmega128A achieves throughputs close to\n1MIPS per MHz. This empowers system designer to optimize the device for\npower consumption versus processing speed.\nFeatures\n•High-performance, Low-power Atmel AVR 8-bit Microcontroller\n•Advanced RISC Architecture\n–133 Powerful Instructions - Most Single-clock Cycle Execution\n–32 × 8 General Purpose Working Registers + Peripheral Control\nRegisters\n–Fully Static Operation\n–Up to 16MIPS Throughput at 16MHz\n–On-chip 2-cycle Multiplier\n•High Endurance Non-volatile Memory segments\n–128Kbytes of In-System Self-programmable Flash program\nmemory\n–4Kbytes EEPROM\n–4Kbytes Internal SRAM\n–Write/Erase cycles: 10,000 Flash/100,000 EEPROM\n–Data retention: 20 years at 85°C/100 years at 25°C(1)\n–Optional Boot Code Section with Independent Lock Bits\n• In-System Programming by On-chip Boot Program\n• True Read-While-Write Operation\n–Up to 64 Kbytes Optional External Memory Space\n–Programming Lock for Software Security\n–SPI Interface for In-System Programming\n•JTAG (IEEE std. 1149.1 Compliant) Interface\n–Boundary-scan Capabilities According to the JTAG Standard\n–Extensive On-chip Debug Support\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/2015This is a summary document. A\ncomplete document is available\non our Web site at\nwww.atmel.com\n–Programming of Flash, EEPROM, Fuses and Lock Bits through the JTAG Interface\n•Atmel QTouch® library support\n–Capacitive touch buttons, sliders and wheels\n–Atmel QTouch and QMatrix acquisition\n–Up to 64 sense channels\n•Peripheral Features\n–Two 8-bit Timer/Counters with Separate Prescalers and Compare Modes\n–Two Expanded 16-bit Timer/Counters with Separate Prescaler, Compare Mode and Capture\nMode\n–Real Time Counter with Separate Oscillator\n–Two 8-bit PWM Channels\n–6 PWM Channels with Programmable Resolution from 2 to 16 Bits\n–Output Compare Modulator\n–8-channel, 10-bit ADC\n• 8 Single-ended Channels\n• 7 Differential Channels\n• 2 Differential Channels with Programmable Gain at 1x, 10x, or 200x\n–Byte-oriented Two-wire Serial Interface\n–Dual Programmable Serial USARTs\n–Master/Slave SPI Serial Interface\n–Programmable Watchdog Timer with On-chip Oscillator\n–On-chip Analog Comparator\n•Special Microcontroller Features\n–Power-on Reset and Programmable Brown-out Detection\n–Internal Calibrated RC Oscillator\n–External and Internal Interrupt Sources\n–Six Sleep Modes: Idle, ADC Noise Reduction, Power-save, Power-down, Standby, and\nExtended Standby\n–Software Selectable Clock Frequency\n–ATmega103 Compatibility Mode Selected by a Fuse\n–Global Pull-up Disable\n•I/O and Packages\n–53 Programmable I/O Lines\n–64-lead TQFP and 64-pad QFN/MLF\n•Operating Voltages\n–2.7 - 5.5V\n•Speed Grades\n–0 - 16MHz\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20152\nTable of Contents\nIntroduction......................................................................................................................1\nFeatures.......................................................................................................................... 1\n1.Description.................................................................................................................4\n2.Configuration Summary.............................................................................................5\n3.Ordering Information..................................................................................................6\n4.Block Diagram........................................................................................................... 7\n5.ATmega103 and ATmega128A Compatibility............................................................ 8\n5.1. ATmega103 Compatibility Mode...................................................................................................8\n6.Pin Configurations..................................................................................................... 9\n6.1. Pin Descriptions............................................................................................................................9\n7.Resources................................................................................................................12\n8.Data Retention.........................................................................................................13\n9.About Code Examples.............................................................................................14\n10.Capacitive Touch Sensing....................................................................................... 15\n11.Packaging Information.............................................................................................16\n11.1. 64A............................................................................................................................................. 16\n11.2. 64M1...........................................................................................................................................17\n12.Errata.......................................................................................................................18\n12.1. ATmega128A Rev. U..................................................................................................................18\n1. Description\nThe Atmel AVR core combines a rich instruction set with 32 general purpose working registers. All the 32\nregisters are directly connected to the Arithmetic Logic Unit (ALU), allowing two independent registers to\nbe accessed in one single instruction executed in one clock cycle. The resulting architecture is more code\nefficient while achieving throughputs up to ten times faster than conventional CISC microcontrollers.\nThe ATmega128A provides the following features: 128Kbytes of In-System Programmable Flash with\nRead- While-Write capabilities, 4Kbytes EEPROM, 4Kbytes SRAM, 53 general purpose I/O lines, 32\ngeneral purpose working registers, Real Time Counter (RTC), four flexible Timer/Counters with compare\nmodes and PWM, 2 USARTs, one byte oriented Two-wire Serial Interface, an 8-channel, 10-bit ADC with\noptional differential input stage with programmable gain, programmable Watchdog Timer with Internal\nOscillator, one SPI serial port, IEEE std. 1149.1 compliant JTAG test interface, also used for accessing\nthe On-chip Debug system and programming and six software selectable power saving modes. The Idle\nmode stops the CPU while allowing the SRAM, Timer/Counters, SPI port, and interrupt system to\ncontinue functioning. The Power-down mode saves the register contents but freezes the Oscillator,\ndisabling all other chip functions until the next interrupt or Hardware Reset. In Power-save mode, the\nasynchronous timer continues to run, allowing the user to maintain a timer base while the rest of the\ndevice is sleeping. The ADC Noise Reduction mode stops the CPU and all I/O modules except\nAsynchronous Timer and ADC, to minimize switching noise during ADC conversions. In Standby mode,\nthe Crystal/Resonator Oscillator is running while the rest of the device is sleeping. This allows very fast\nstart-up combined with low power consumption. In Extended Standby mode, both the main Oscillator and\nthe Asynchronous Timer continue to run.\nThe device is manufactured using Atmel’s high-density nonvolatile memory technology. The On-chip ISP\nFlash allows the program memory to be reprogrammed in-system through an SPI serial interface, by a\nconventional nonvolatile memory programmer, or by an On-chip Boot program running on the AVR core.\nThe boot program can use any interface to download the application program in the application Flash\nmemory. Software in the Boot Flash section will continue to run while the Application Flash section is\nupdated, providing true Read- While-Write operation. By combining an 8-bit RISC CPU with In-System\nSelf-Programmable Flash on a monolithic chip, the Atmel ATmega128A is a powerful microcontroller that\nprovides a highly flexible and cost effective solution to many embedded control application\nThe ATmega128A AVR is supported with a full suite of program and system development tools including:\nC compilers, macro assemblers, program debugger/simulators, in-circuit emulators, and evaluation kits.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20154\n2. Configuration Summary\nFeatures ATmega128A\nPin count 64\nFlash (KB) 128\nSRAM (KB) 4\nEEPROM (KB) 4\nExternal Memory (KB) 64\nGeneral Purpose I/O pins 53\nSPI 1\nTWI (I2C) 1\nUSART 2\nADC 10-bit, up to 76.9ksps (15ksps at max resolution)\nADC channels 6 (8 in TQFP and QFN/MLF packages)\nAC propagation delay Typ 400ns\n8-bit Timer/Counters 2\n16-bit Timer/Counters 2\nPWM channels 6\nRC Oscillator +/-3%\nVREF Bandgap\nOperating voltage 2.7 - 5.5V\nMax operating frequency 16MHz\nTemperature range -55°C to +125°C\nJTAG Yes\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20155\n3. Ordering Information\nSpeed (MHz) Power Supply Ordering Code(2)Package(1)Operational Range\n16 2.7 - 5.5VATmega128A-AU\nATmega128A-AUR(3)\nATmega128A-MU\nATmega128A-MUR(3)64A\n64A\n64M1\n64M1Industrial (-40oC to 85oC)\nNote:\u2000\n1. This device can also be supplied in wafer form. Please contact your local Atmel sales office for\ndetailed ordering information and minimum quantities.\n2. Pb-free packaging, complies to the European Directive for Restriction of Hazardous Substances\n(RoHS directive). Also Halide free and fully Green.\n3. Tape and Reel\nPackage Type\n64A 64-lead, 14 × 14 × 1.0 mm, Thin Profile Plastic Quad Flat Package (TQFP)\n64M1 64-pad, 9 × 9 × 1.0 mm, Quad Flat No-Lead/Micro Lead Frame Package (QFN/MLF)\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20156\n4. Block Diagram\nFigure 4-1\u2000Block Diagram\nCPU\nADCADC[7:0]\nAREFI/O\nPORTSD\nA\nT\nA\nB\nU\nSSRAM\nOCDFLASH\nNVM\nprogrammingJTAG\nTC 0\n(8-bit async)SPIACAIN0\nAIN1\nACO\nADCMUXEEPROM\nEEPROMIF\nTC 3\n(16-bit)OC3A/B\nT3\nICP3TWISDA\nSCL\nUSART 1RxD1\nTxD1\nXCK1Internal\nReferenceWatchdog\nTimerPower \nmanagement\nand clock \ncontrol\nVCC\nGNDPower\nSupervision\nPOR/BOD &\nRESETTOSC2XTAL2\nRESETXTAL1\nTOSC1TCK\nTMS\nTDI\nTDO\nINT[7:0]\nOC0MISO\nMOSI\nSCK\nSSPA[7:0]\nPB[7:0]\nPC[7:0]\nPD[7:0]\nPE[7:0]\nPF[7:0]\nPG[4:0]\nUSART 0RxD0\nTxD0\nXCK0TC 1\n(16-bit)OC1A/B/C\nT1\nICP1\nTC 2\n(8-bit)T2\nOC2AD[7:0]\nA[15:8]\nRD/WR/ALEExtMem\nExtIntSERPROGPARPROG\nPEN\nPDI\nPDO\nSCK\nClock generation\n1MHz int\nosc32.768kHz\nXOSCExternal\nclock8MHz\nCrystal Osc\n12MHz\nExternal\nRC Osc8MHz\nCalib RC\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20157\n5. ATmega103 and ATmega128A Compatibility\nThe ATmega128A is a highly complex microcontroller where the number of I/O locations supersedes the\n64 I/O locations reserved in the AVR instruction set. To ensure backward compatibility with the\nATmega103, all I/O locations present in ATmega103 have the same location in ATmega128A. Most\nadditional I/O locations are added in an Extended I/O space starting from 0x60 to 0xFF, (that is, in the\nATmega103 internal RAM space). These locations can be reached by using LD/LDS/LDD and\nST/STS/STD instructions only, not by using IN and OUT instructions. The relocation of the internal RAM\nspace may still be a problem for ATmega103 users. Also, the increased number of interrupt vectors might\nbe a problem if the code uses absolute addresses. To solve these problems, an ATmega103 compatibility\nmode can be selected by programming the fuse M103C. In this mode, none of the functions in the\nExtended I/O space are in use, so the internal RAM is located as in ATmega103. Also, the Extended\nInterrupt vectors are removed.\nThe Atmel AVR ATmega128A is 100% pin compatible with ATmega103, and can replace the ATmega103\non current Printed Circuit Boards. The application note “Replacing ATmega103 by ATmega128A”\ndescribes what the user should be aware of replacing the ATmega103 by an ATmega128A.\n5.1. ATmega103 Compatibility Mode\nBy programming the M103C fuse, the ATmega128A will be compatible with the ATmega103 regards to\nRAM, I/O pins and interrupt vectors as described above. However, some new features in ATmega128A\nare not available in this compatibility mode, these features are listed below:\n•One USART instead of two, Asynchronous mode only. Only the eight least significant bits of the\nBaud Rate Register is available.\n•One 16 bits Timer/Counter with two compare registers instead of two 16-bit Timer/Counters with\nthree compare registers.\n•Two-wire serial interface is not supported.\n•Port C is output only.\n•Port G serves alternate functions only (not a general I/O port).\n•Port F serves as digital input only in addition to analog input to the ADC.\n•Boot Loader capabilities is not supported.\n•It is not possible to adjust the frequency of the internal calibrated RC Oscillator.\n•The External Memory Interface can not release any Address pins for general I/O, neither configure\ndifferent wait-states to different External Memory Address sections.\n•In addition, there are some other minor differences to make it more compatible to ATmega103:\n•Only EXTRF and PORF exists in MCUCSR.\n•Timed sequence not required for Watchdog Time-out change.\n•External Interrupt pins 3 - 0 serve as level interrupt only.\n•USART has no FIFO buffer, so data overrun comes earlier.\nUnused I/O bits in ATmega103 should be written to 0 to ensure same operation in ATmega128A.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20158\n6. Pin Configurations\nFigure 6-1\u2000Pinout ATmega128A\n1\n2\n3\n4\n44\n43\n42\n41\n40\n39\n385\n6\n7\n8\n9\n10\n11\n333231302928272625242337\n36\n35\n3412\n13\n14\n15\n16\n17\n18\n19\n20\n21\n224546474864\n63\n62\n61\n60\n59\n58\n57\n56\n55\n54\n53\n52\n51\n50\n49RESET\nVCCGNDGNDVCCAREFA VCC\nGND\nPA3 (AD3)\nPA4 (AD4)\nPA5 (AD5)\nPA6 (AD6)\nPA7 (AD7)\nPG2 (ALE)\nPC7 (A15)\nPC6 (A14)\nPC5 (A13)\nPC4 (A12)\nPC3 (A11)\nPC2 (A10)\nPC1 (A9)\nPC0 (A8)\nPG1 (RD)\nPG0 (WR)PA0 (AD0)\nPA1 (AD1)\nPA2 (AD2)PF7 (ADC7/TDI)PF6 (ADC6/TDO)PF5 (ADC5/TMS)PF4 (ADC4/TCK)PF3 (ADC3)PF2 (ADC2)PF1 (ADC1)PF0 (ADC0)\nXTAL2\nXTAL1(TOSC1) PG4(TOSC2) PG3(OC2/OC1C) PB7\n(SCL/INT0) PD0\n(SDA/INT1) PD1\n(RXD1/INT2) PD2\n(TXD1/INT3) PD3\n(ICP1) PD4\n(XCK1) PD5\n(T1) PD6\n(T2) PD7PEN\n(RXD0/PDI) PE0\n(TXD0/PDO) PE1\n(XCK0/AIN0) PE2\n(OC3A/AIN1) PE3\n(OC3B/INT4) PE4\n(OC3C/INT5) PE5\n(T3/INT6) PE6\n(ICP3/INT7) PE7\n(SS) PB0\n(SCK) PB1\n(MOSI) PB2\n(MISO) PB3\n(OC0) PB4\n(OC1A) PB5\n(OC1B) PB6Power\nGround\nProgramming/debug\nDigital\nAnalog\nCrystal/Osc\nExternal Memory\nNote:\u2000  The Pinout figure applies to both TQFP and MLF packages. The bottom pad under the QFN/MLF\npackage should be soldered to ground.\n6.1. Pin Descriptions\n6.1.1. VCC\nDigital supply voltage.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/20159\n6.1.2. GND\nGround.\n6.1.3. Port A (PA7:PA0)\nPort A is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port A\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort A pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nA pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort A also serves the functions of various special features of the ATmega128A as listed in Alternate\nFunctions of Port A .\n6.1.4. Port B (PB7:PB0)\nPort B is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port B\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort B pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nB pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort B also serves the functions of various special features of the ATmega128A as listed in Alternate\nFunctions of Port B .\n6.1.5. Port C (PC7:PC0)\nPort C is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port C\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort C pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nC pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort C also serves the functions of special features of the ATmega128A as listed in Alternate Functions of\nPort C . In ATmega103 compatibility mode, Port C is output only, and the port C pins are not tri-stated\nwhen a reset condition becomes active.\nNote:\u2000  The Atmel AVR ATmega128A is by default shipped in ATmega103 compatibility mode. Thus, if the\nparts are not programmed before they are put on the PCB, PORTC will be output during first power up,\nand until the ATmega103 compatibility mode is disabled.\n6.1.6. Port D (PD7:PD0)\nPort D is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port D\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort D pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nD pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort D also serves the functions of various special features of the ATmega128A as listed in Alternate\nFunctions of Port D .\n6.1.7. Port E (PE7:PE0)\nPort E is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port E\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort E pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nE pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort E also serves the functions of various special features of the ATmega128A as listed in Alternate\nFunctions of Port E .\n6.1.8. Port F (PF7:PF0)\nPort F serves as the analog inputs to the A/D Converter.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201510\nPort F also serves as an 8-bit bi-directional I/O port, if the A/D Converter is not used. Port pins can\nprovide internal pull-up resistors (selected for each bit). The Port F output buffers have symmetrical drive\ncharacteristics with both high sink and source capability. As inputs, Port F pins that are externally pulled\nlow will source current if the pull-up resistors are activated. The Port F pins are tri-stated when a reset\ncondition becomes active, even if the clock is not running. If the JTAG interface is enabled, the pull-up\nresistors on pins PF7(TDI), PF5(TMS), and PF4(TCK) will be activated even if a Reset occurs.\nThe TDO pin is tri-stated unless TAP states that shift out data are entered.\nPort F also serves the functions of the JTAG interface.\nIn ATmega103 compatibility mode, Port F is an input Port only.\n6.1.9. Port G (PG4:PG0)\nPort G is a 5-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The Port G\noutput buffers have symmetrical drive characteristics with both high sink and source capability. As inputs,\nPort G pins that are externally pulled low will source current if the pull-up resistors are activated. The Port\nG pins are tristated when a reset condition becomes active, even if the clock is not running.\nPort G also serves the functions of various special features.\nThe port G pins are tri-stated when a reset condition becomes active, even if the clock is not running.\nIn Atmel AVR ATmega103 compatibility mode, these pins only serves as strobes signals to the external\nmemory as well as input to the 32kHz Oscillator, and the pins are initialized to PG0 = 1, PG1 = 1, and\nPG2 = 0 asynchronously when a reset condition becomes active, even if the clock is not running. PG3\nand PG4 are oscillator pins.\n6.1.10. RESET\nReset input. A low level on this pin for longer than the minimum pulse length will generate a reset, even if\nthe clock is not running. The minimum pulse length is given in System and Reset Characteristics . Shorter\npulses are not guaranteed to generate a reset.\n6.1.11. XTAL1\nInput to the inverting Oscillator amplifier and input to the internal clock operating circuit.\n6.1.12. XTAL2\nOutput from the inverting Oscillator amplifier.\n6.1.13. AVCC\nAVCC is the supply voltage pin for Port F and the A/D Converter. It should be externally connected to V CC,\neven if the ADC is not used. If the ADC is used, it should be connected to V CC through a low-pass filter.\n6.1.14. AREF\nAREF is the analog reference pin for the A/D Converter.\n6.1.15. PEN\nPEN is a programming enable pin for the SPI Serial Programming mode, and is internally pulled high. By\nholding this pin low during a Power-on Reset, the device will enter the SPI Serial Programming mode.\nPEN has no function during normal operation.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201511\n7. Resources\nA comprehensive set of development tools, application notes and datasheets are available for download\non http://www.atmel.com/avr .\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201512\n8. Data Retention\nReliability Qualification results show that the projected data retention failure rate is much less than 1 PPM\nover 20 years at 85°C or 100 years at 25°C.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201513\n9. About Code Examples\nThis datasheet contains simple code examples that briefly show how to use various parts of the device.\nThese code examples assume that the part specific header file is included before compilation. Be aware\nthat not all C compiler vendors include bit definitions in the header files and interrupt handling in C is\ncompiler dependent. Please confirm with the C compiler documentation for more details.\nFor I/O registers located in extended I/O map, “IN”, “OUT”, “SBIS”, “SBIC”, “CBI”, and “SBI” instructions\nmust be replaced with instructions that allow access to extended I/O. Typically “LDS” and “STS”\ncombined with “SBRS”, “SBRC”, “SBR”, and “CBR”.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201514\n10. Capacitive Touch Sensing\nThe Atmel QTouch Library provides a simple to use solution to realize touch sensitive interfaces on most\nAtmel AVR microcontrollers. The QTouch Library includes support for the QTouch and QMatrix®\nacquisition methods.\nTouch sensing can be added to any application by linking the appropriate Atmel QTouch Library for the\nAVR Microcontroller. This is done by using a simple set of APIs to define the touch channels and sensors,\nand then calling the touch sensing API’s to retrieve the channel information and determine the touch\nsensor states.\nThe QTouch Library is FREE and downloadable from the Atmel website at the following location: \nwww.atmel.com/qtouchlibrary . For implementation details and other information, refer to the Atmel\nQTouch Library User Guide  - also available for download from the Atmel website.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201515\n11. Packaging Information\n11.1. 64A\n2325 Orchard Parkway\n San Jose, CA 95131TITL E DRA WING NO. R EV . \n64A, 64-lead, 14 x 14mm Body Size, 1.0mm Body Thickness,\n0.8mm L ead Pitch, Thin Prof le Plastic Quad Flat Package (T QFP) C 64A2010-10-20PIN 1 IDENTIFIER\n0°~7°PIN 1 \nLC\nA1 A2 AD1\nDe\nE1 EB\nCOMMON DIMENSIONS\n(Unit of measure = mm)\nSY MB OL MIN NOM MAX NOTE\nNotes:\n 1.This package conforms to JEDEC reference MS-026, V ariation AEB . \n2. Dimensions D1 and E1 do not include mold protrusion. Allowable \nprotrusion is 0.25mm per side. Dimensions D1 and E1 are maximum \nplastic body size dimensions including mold mismatch.\n 3. L ead coplanarity is 0.10mm maximum. A – – 1.20\n A1 0.05 – 0.15\n A2 0.95 1.00 1.05 \nD 15.75 16.00 16.25\n D1 13.90 14.00 14.10 Note 2\n E 15.75 16.00 16.25\n E1 13.90 14.00 14.10 Note 2\n B  0.30 – 0.45\n C 0.09 – 0.20\n L  0.45 – 0.75\n e 0.80 TY P\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201516\n11.2. 64M1\n2325 Orchard Parkway\n San Jos e, CA 9513 1TITL E DRAWING N O. R E V . \n64M1 , 64-pad, 9 x 9 x 1.0 mm Bod y, L ead Pitch 0.50 mm , H 64M12010-10-19COMMON DIMENSIONS\n(Unit of Measure = mm)\nSY MB OL MIN NOM MAX NOTE\nA 0.80  0.90  1.00\n A1 – 0.02  0.05\n b 0.18 0.25 0.30\n D \nD2 5.20 5.40 5.608.90 9.00 9.10\n8.90 9.00 9.10  E  \nE2  5.20 5.40 5.60\n e 0.50 B SC\nL 0.35  0.40  0.45  \nNotes:\n 1 . JEDEC Standard MO-220, (S AW Singulation) Fig . 1, V MM D.\n 2 . Dimension and tole rance con form to ASMEY 14.5M-1994 .TOP V IE W\nSIDE V IEW\nBOTTOM V IE WD\nEMa rked Pin# 1 I D\nSE A TING PL AN E\nA1C\nA\nC 0.08\n1\n2\n3\nK 1.25 1.40 1.55E2D2\nb ePin #1 Co rnerL\nPin #1 \nTriangle\nPin #1 \nCham fer\n(C 0.30)Option A\nOption B\nPin #1 \nNotch\n(0.20 R )Option CK\nK\n5.40 mm Exposed Pad, Micro L ead Frame Package (ML F)  \nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201517\n12. Errata\nThe revision letter in this section refers to the revision of the ATmega128A device.\n12.1. ATmega128A Rev. U\n•First Analog Comparator conversion may be delayed\n•Interrupts may be lost when writing the timer registers in the asynchronous timer\n•Stabilizing time needed when changing XDIV Register\n•Stabilizing time needed when changing OSCCAL Register\n•IDCODE masks data from TDI input\n•Reading EEPROM by using ST or STS to set EERE bit triggers unexpected interrupt request\n1.First Analog Comparator conversion may be delayed\nIf the device is powered by a slow rising V CC, the first Analog Comparator conversion will take\nlonger than expected on some devices.\nProblem Fix/Workaround\nWhen the device has been powered or reset, disable then enable the Analog Comparator before\nthe first conversion.\n2.Interrupts may be lost when writing the timer registers in the asynchronous timer\nThe interrupt will be lost if a timer register that is synchronous timer clock is written when the\nasynchronous Timer/Counter register (TCNTx) is 0x00.\nProblem Fix/Workaround\nAlways check that the asynchronous Timer/Counter register neither have the value 0xFF nor 0x00\nbefore writing to the asynchronous Timer Control Register (TCCRx), asynchronous Timer Counter\nRegister (TCNTx), or asynchronous Output Compare Register (OCRx).\n3.Stabilizing time needed when changing XDIV Register\nAfter increasing the source clock frequency more than 2% with settings in the XDIV register, the\ndevice may execute some of the subsequent instructions incorrectly.\nProblem Fix/Workaround\nThe NOP instruction will always be executed correctly also right after a frequency change. Thus,\nthe next 8 instructions after the change should be NOP instructions. To ensure this, follow this\nprocedure:\n3.1. Clear the I bit in the SREG Register.\n3.2. Set the new pre-scaling factor in XDIV register.\n3.3. Execute 8 NOP instructions\n3.4. Set the I bit in SREG\nThis will ensure that all subsequent instructions will execute correctly.\nAssembly Code Example:\nCLI                    ; clear global interrupt enable\nOUT   XDIV, temp       ; set new prescale value\nNOP                    ; no operation\nNOP                    ; no operation\nNOP                    ; no operation\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201518\nNOP                    ; no operation\nNOP                    ; no operation\nNOP                    ; no operation\nNOP                    ; no operation\nNOP                    ; no operation\nSEI                    ; set global interrupt enable\n4.Stabilizing time needed when changing OSCCAL Register\nAfter increasing the source clock frequency more than 2% with settings in the OSCCAL register, the\ndevice may execute some of the subsequent instructions incorrectly.\nProblem Fix/Workaround\nThe behavior follows errata number 3., and the same Fix / Workaround is applicable on this errata.\n5.IDCODE masks data from TDI input\nThe JTAG instruction IDCODE is not working correctly. Data to succeeding devices are replaced by\nall-ones during Update-DR.\nProblem Fix/Workaround\n–If ATmega128A is the only device in the scan chain, the problem is not visible.\n–Select the Device ID Register of the ATmega128A by issuing the IDCODE instruction or by\nentering the Test-Logic-Reset state of the TAP controller to read out the contents of its Device\nID Register and possibly data from succeeding devices of the scan chain. Issue the BYPASS\ninstruction to the ATmega128A while reading the Device ID Registers of preceding devices of\nthe boundary scan chain.\n–If the Device IDs of all devices in the boundary scan chain must be captured simultaneously,\nthe ATmega128A must be the first device in the chain.\n6.Reading EEPROM by using ST or STS to set EERE bit triggers unexpected interrupt request.\nReading EEPROM by using the ST or STS command to set the EERE bit in the EECR register\ntriggers an unexpected EEPROM interrupt request.\nProblem Fix/Workaround\nAlways use OUT or SBI to set EERE in EECR.\nAtmel ATmega128A [DATASHEET]\nAtmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/201519\nAtmel Corporation 1600 Technology Drive, San Jose, CA 95110 USA T: (+1)(408) 441.0311 F: (+1)(408) 436.4200 | www.atmel.com\n© 2015 Atmel Corporation. / Rev.: Atmel-8151JS-8-bit AVR Microcontroller_Datasheet_Summary-09/2015\nAtmel®, Atmel logo and combinations thereof, Enabling Unlimited Possibilities®, AVR®, and others are registered trademarks or trademarks of Atmel Corporation in\nU.S. and other countries. Other terms and product names may be trademarks of others.\nDISCLAIMER: The information in this document is provided in connection with Atmel products. No license, express or implied, by estoppel or otherwise, to any\nintellectual property right is granted by this document or in connection with the sale of Atmel products. EXCEPT AS SET FORTH IN THE ATMEL TERMS AND\nCONDITIONS OF SALES LOCATED ON THE ATMEL WEBSITE, ATMEL ASSUMES NO LIABILITY WHATSOEVER AND DISCLAIMS ANY EXPRESS, IMPLIED\nOR STATUTORY WARRANTY RELATING TO ITS PRODUCTS INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTY OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,\nCONSEQUENTIAL, PUNITIVE, SPECIAL OR INCIDENTAL DAMAGES (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS AND PROFITS, BUSINESS\nINTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF THE USE OR INABILITY TO USE THIS DOCUMENT, EVEN IF ATMEL HAS BEEN ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGES. Atmel makes no representations or warranties with respect to the accuracy or completeness of the contents of this\ndocument and reserves the right to make changes to specifications and products descriptions at any time without notice. Atmel does not make any commitment to\nupdate the information contained herein. Unless specifically provided otherwise, Atmel products are not suitable for, and shall not be used in, automotive\napplications. Atmel products are not intended, authorized, or warranted for use as components in applications intended to support or sustain life.\nSAFETY-CRITICAL, MILITARY, AND AUTOMOTIVE APPLICATIONS DISCLAIMER: Atmel products are not designed for and will not be used in connection with any\napplications where the failure of such products would reasonably be expected to result in significant personal injury or death (“Safety-Critical Applications”) without\nan Atmel officer's specific written consent. Safety-Critical Applications include, without limitation, life support devices and systems, equipment or systems for the\noperation of nuclear facilities and weapons systems. Atmel products are not designed nor intended for use in military or aerospace applications or environments\nunless specifically designated by Atmel as military-grade. Atmel products are not designed nor intended for use in automotive applications unless specifically\ndesignated by Atmel as automotive-grade.\n"}]
!==============================================================================!
### ATmega128A-AU Microcontroller Summary

**Key Specifications:**
- **Voltage Ratings:** 2.7V to 5.5V
- **Current Ratings:** Not explicitly stated; typical low-power operation.
- **Power Consumption:** Low-power consumption with various sleep modes.
- **Operating Temperature Range:** -40°C to +85°C (Industrial grade)
- **Package Type:** 64-lead TQFP (Thin Quad Flat Package) or 64-pad QFN/MLF (Micro Lead Frame)
- **Special Features:**
  - 128KB Flash memory, 4KB EEPROM, 4KB SRAM
  - True Read-While-Write operation
  - JTAG interface for debugging and programming
  - Supports capacitive touch sensing with Atmel QTouch library
  - Multiple timer/counter configurations and PWM channels
- **Moisture Sensitive Level (MSL):** Not specified in the provided text.

**Description:**
The ATmega128A is an 8-bit AVR microcontroller developed by Atmel (now part of Microchip Technology). It is based on an enhanced RISC architecture, allowing it to execute powerful instructions in a single clock cycle, achieving throughput close to 1 MIPS per MHz. This microcontroller is designed for low-power applications while providing high performance, making it suitable for a wide range of embedded control applications.

**Typical Applications:**
The ATmega128A is commonly used in:
- **Embedded Systems:** Ideal for applications requiring control and automation.
- **Consumer Electronics:** Used in devices such as remote controls, home appliances, and toys.
- **Industrial Automation:** Suitable for process control and monitoring systems.
- **Data Acquisition Systems:** Can be utilized in systems that require analog-to-digital conversion and data processing.
- **Touch Interfaces:** Supports capacitive touch sensing applications through the Atmel QTouch library.
- **Communication Systems:** Equipped with USART, SPI, and I2C interfaces for various communication needs.

This microcontroller's versatility, combined with its extensive memory and peripheral features, makes it a popular choice for developers looking to implement complex functionalities in their designs while maintaining low power consumption.