[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADUC812BSZ-REEL production of ANALOG DEVICES from the text:a\nADuC812\n \n MicroConverter®, Multichannel\n12-Bit ADC with Embedded Flash MCU\nFUNCTIONAL BLOCK DIAGRAM\nMICROCONTROLLER\n8051 BASED\nMICROCONTROLLER COREPOWER SUPPLY\nMONITOR\nWATCHDOG\nTIMER\n640 /H11547 8 USER\nFLASH EEPROM\n256 /H11547 8 USER\nRAMSPI12-BIT\nSUCCESSIVE\nAPPROXIMATION\nADCADC\nCONTROL\nAND\nCALIBRATION\nLOGICT/H\nTEMP\nSENSOR2.5V\nREFAIN\nMUXBUF DAC0\nMOSI/\nSDATAMISO\n(P3.3)SCLOCK TxD\n(P3.1)RxD\n(P3.0)XTAL2 XTAL1 DGND DVDD AGND AVDDDAC0\nDAC1\nT0 (P3.4)\nT1 (P3.5)\nT2 (P1.0)\nT2EX (P1.1)\nINT0 (P3.2)\nINT1 (P3.3)\nALE\nPSENEARESET\nADuC812P3.0–P3.7 P2.0–P2.7 P1.0–P1.7 P0.0–P0.7\nAIN0 (P1.0)–AIN7 (P1.7)\nVREFUART8K /H11547 8 PROGRAM\nFLASH EEPROMDAC\nCONTROL\n3 /H11547 16-BIT\nTIMER/COUNTERS\nOSCMUXDAC1 BUF\nCREFBUF2-WIRE\nSERIAL I/OFEATURES\nAnalog I/O\n8-Channel, High Accuracy 12-Bit ADCOn-Chip, 100 ppm/ /H11543C Voltage Reference\nHigh Speed 200 kSPS\nDMA Controller for High Speed ADC-to-RAM Capture\n2 12-Bit Voltage Output DACsOn-Chip Temperature Sensor Function\nMemory\n8K Bytes On-Chip Flash/EE Program Memory640 Bytes On-Chip Flash/EE Data Memory\n256 Bytes On-Chip Data RAM\n16M Bytes External Data Address Space64K Bytes External Program Address Space\n8051 Compatible Core\n12 MHz Nominal Operation (16 MHz Max)3 16-Bit Timer/Counters\nHigh Current Drive Capability—Port 3\n9 Interrupt Sources, 2 Priority Levels\nPower\nSpecified for 3 V and 5 V OperationNormal, Idle, and Power-Down Modes\nOn-Chip Peripherals\nUART and SPI\n® Serial I/O\n2-Wire (400 kHz I2C® Compatible) Serial I/O\nWatchdog Timer\nPower Supply MonitorAPPLICATIONSIntelligent Sensors Calibration and ConditioningBattery-Powered Systems (Portable PCs, Instruments,\nMonitors)\nTransient Capture SystemsDAS and Communications Systems\nControl Loop Monitors (Optical Networks/Base Stations)\nGENERAL DESCRIPTION\nThe ADuC812 is a fully integrated 12-bit data acquisition system\nincorporating a high performance self-calibrating multichannelADC, dual DAC, and programmable 8-bit MCU (8051 instruc-\ntion set compatible) on a single chip.\nThe programmable 8051 compatible core is supported by 8K\nbytes Flash/EE program memory, 640 bytes Flash/EE datamemory, and 256 bytes data SRAM on-chip.\nAdditional MCU support functions include Watchdog Timer,\nPower Supply Monitor, and ADC DMA functions. Thirty-two\nprogrammable I/O lines, I\n2C compatible SPI and Standard\nUART Serial Port I/O are provided for multiprocessor inter faces\nand I/O expansion.\nNormal, idle, and power-down operating modes for both the  \nMCU core and analog converters allow flexible power manage-\nment schemes suited to low power applications. The part is \nspecified for 3 V and 5 V operation over the industrial tem-\nperature range and is available in a 52-lead, plastic quad  \nflatpack package .\nRev. G  Document Feedback \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change without notice. No license is granted by implication or otherwise under any patent or patent rights of Analog Devices. Trademarks and registered trademarks are the property of their respective owners. One T\nechnology Way, P.O. Box 9106, Norwood, MA 02062-9106, U.S.A.\nTel: 781.329.4700 ©2001–2017 Analog Devices, Inc. All rights reserved. \nTechnical Support  www.analog.com   \n\nREV.ADuC812\n–2–FEATURES  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nAPPLICATONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1GENERAL DESCRIPTION  . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nSPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\nABSOLUTE MAXIMUM RATINGS  . . . . . . . . . . . . . . . . . . . . 6PIN CONFIGURATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6\nORDERING GUIDE  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nPIN FUNCTION DESCRIPTIONS  . . . . . . . . . . . . . . . . . . . . . 7TERMINOLOGY  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nADC SPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nIntegral Nonlinearity  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nDifferential Nonlinearity  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nOffset Error  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nFull-Scale Error  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Signal to (Noise + Distortion) Ratio  . . . . . . . . . . . . . . . . . . . . 8\nTotal Harmonic Distortion  . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nDAC SPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\nRelative Accuracy  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Voltage Output Settling Time  . . . . . . . . . . . . . . . . . . . . . . . . . 8\nDigital-to-Analog Glitch Impulse  . . . . . . . . . . . . . . . . . . . . . . . 8\nARCHITECTURE, MAIN FEATURES  . . . . . . . . . . . . . . . . . . 9\nMEMORY ORGANIZATION  . . . . . . . . . . . . . . . . . . . . . . . . . . 9\nOVERVIEW OF MCU-RELATED SFRs  . . . . . . . . . . . . . . . . . 10\nAccumulator SFR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\nB SFR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\nStack Pointer SFR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10Data Pointer  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10Program Status Word SFR  . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\nPower Control SFR  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\nSPECIAL FUNCTION REGISTERS  . . . . . . . . . . . . . . . . . . . 11\nADC CIRCUIT INFORMATION  . . . . . . . . . . . . . . . . . . . . . . 12\nGeneral Overview  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12ADC Transfer Function  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12Typical Operation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\nADCCON1—(ADC Control SFR #1)  . . . . . . . . . . . . . . . . . 13\nADCCON2—(ADC Control SFR #2)  . . . . . . . . . . . . . . . . . 14ADCCON3—(ADC Control SFR #3)  . . . . . . . . . . . . . . . . . 14\nDriving the ADC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\nVoltage Reference Connections  . . . . . . . . . . . . . . . . . . . . . . . 16Configuring the ADC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n ADC DMA Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\nDMA Mode Configuration Example  . . . . . . . . . . . . . . . . . . . 17\n Micro Operation during ADC DMA Mode  . . . . . . . . . . . . . . 17\nOffset and Gain Calibration Coefficients  . . . . . . . . . . . . . . . . 17Calibration  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\nNONVOLATILE FLASH MEMORY  . . . . . . . . . . . . . . . . . . . 18\nFlash Memory Overview  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18Flash/EE Memory and the ADuC812  . . . . . . . . . . . . . . . . . . 18ADuC812 Flash/EE Memory Reliability  . . . . . . . . . . . . . . . . 18\nUsing the Flash/EE Program Memory  . . . . . . . . . . . . . . . . . . 19\nUsing the Flash/EE Data Memory  . . . . . . . . . . . . . . . . . . . . . 19ECON—Flash/EE Memory Control SFR  . . . . . . . . . . . . . . . 20\nFlash/EE Memory Timing  . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\nUsing the Flash/EE Memory Interface  . . . . . . . . . . . . . . . . . . 20Erase-All  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\nProgram a Byte  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\nUSER INTERFACE TO OTHER ON-CHIP\nADuC812 PERIPHERALS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21\nUsing the DAC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22WATCHDOG TIMER  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24POWER SUPPLY MONITOR  . . . . . . . . . . . . . . . . . . . . . . . . . 24SERIAL PERIPHERAL INTERFACE  . . . . . . . . . . . . . . . . . . . 25\nMISO (Master In, Slave Out Data I/O Pin)  . . . . . . . . . . . . . . 25MOSI (Master Out, Slave In Pin)  . . . . . . . . . . . . . . . . . . . . . 26SCLOCK (Serial Clock I/O Pin)  . . . . . . . . . . . . . . . . . . . . . . 26\nSS (Slave Select Input Pin)  . . . . . . . . . . . . . . . . . . . . . . . . . . 26\nUsing the SPI Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\nSPI Interface—Master Mode  . . . . . . . . . . . . . . . . . . . . . . . . . 27\nSPI Interface—Slave Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . 27\nI\n2C COMPATIBLE INTERFACE  . . . . . . . . . . . . . . . . . . . . . . 28\n8051 COMPATIBLE ON-CHIP PERIPHERALS  . . . . . . . . . . 29\nParallel I/O Ports 0–3  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\nTimers/Counters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29Timer/Counters 0 and 1 Data Registers  . . . . . . . . . . . . . . . . . 31\nTH0 and TL0  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\nTH1 and TL1  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\nTIMER/COUNTERS 0 AND 1 OPERATING MODES  . . . . . 32\nMode 0 (13-Bit Timer/Counter)  . . . . . . . . . . . . . . . . . . . . . . 32Mode 1 (16-Bit Timer/Counter)  . . . . . . . . . . . . . . . . . . . . . . 32Mode 2 (8-Bit Timer/Counter with Auto Reload)  . . . . . . . . . 32\nMode 3 (Two 8-Bit Timer/Counters)  . . . . . . . . . . . . . . . . . . 32\nTimer/Counter 2 Data Registers  . . . . . . . . . . . . . . . . . . . . . . 33TH2 and TL2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\nRCAP2H and RCAP2L  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\nTimer/Counter Operation Modes  . . . . . . . . . . . . . . . . . . . . . 3416-Bit Autoreload Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3416-Bit Capture Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\nUART SERIAL INTERFACE  . . . . . . . . . . . . . . . . . . . . . . . . . 35\nMode 0 (8-Bit Shift Register Mode)  . . . . . . . . . . . . . . . . . . . 36Mode 1 (8-Bit UART, Variable Baud Rate)  . . . . . . . . . . . . . . 36\nMode 2 (9-Bit UART with Fixed Baud Rate)  . . . . . . . . . . . . 36\nMode 3 (9-Bit UART with Variable Baud Rate)  . . . . . . . . . . 36UART Serial Port Baud Rate Generation  . . . . . . . . . . . . . . . 36\nTimer 1 Generated Baud Rates  . . . . . . . . . . . . . . . . . . . . . . . 37\nTimer 2 Generated Baud Rates  . . . . . . . . . . . . . . . . . . . . . . . 37\nINTERRUPT SYSTEM  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\nInterrupt Priority  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39Interrupt Vectors  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\nADuC812 HARDWARE DESIGN CONSIDERATIONS  . . . . 40\nClock Oscillator  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40External Memory Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . 40Power-On Reset Operation  . . . . . . . . . . . . . . . . . . . . . . . . . . 41\nPower Supplies  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\nPower Consumption  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42Grounding and Board Layout Recommendations  . . . . . . . . . 43\nOTHER HARDWARE CONSIDERATIONS  . . . . . . . . . . . . . 44\nIn-Circuit Serial Download Access  . . . . . . . . . . . . . . . . . . . . 44Embedded Serial Port Debugger  . . . . . . . . . . . . . . . . . . . . . . 44\nSingle-Pin Emulation Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . 45\nEnhanced-Hooks Emulation Mode  . . . . . . . . . . . . . . . . . . . . 45Typical System Configuration  . . . . . . . . . . . . . . . . . . . . . . . . 45\nQUICKSTART DEVELOPMENT SYSTEM  . . . . . . . . . . . . . 45\nDownload—In-Circuit Serial Downloader  . . . . . . . . . . . . . . . 45DeBug—In-Circuit Debugger  . . . . . . . . . . . . . . . . . . . . . . . . 45\nADSIM—Windows Simulator  . . . . . . . . . . . . . . . . . . . . . . . . 45\nTIMING SPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . 46\nOUTLINE DIMENSIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56\nRevision History  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57TABLE OF CONTENTS\n56\n G\nREV. –3–ADuC812\nSPECIFICATIONS1, 2(AV DD = DV DD = 3.0 V or 5.0 V /H11550 10%, REF IN/REF OUT = 2.5 V Internal Reference, MCLKIN = 11.0592 MHz,\nfSAMPLE = 200 kHz, DAC V OUT Load to AGND; R L = 2 k/H9024, CL = 100 pF. All specifications T A = T MIN to T MAX, unless otherwise noted.)\n            ADuC812BS\nParameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nADC CHANNEL SPECIFICATIONS\nDC ACCURACY3, 4\nResolution 12 12 Bits\nIntegral Nonlinearity ±1/2 ±1/2 LSB typ f SAMPLE  = 100 kHz\n±1.5 ±1.5 LSB max f SAMPLE  = 100 kHz\n±1.5 ±1.5 LSB typ f SAMPLE  = 200 kHz\nDifferential Nonlinearity ±1 ±1 LSB typ f SAMPLE  = 100 kHz. Guaranteed No\nMissing Codes at 5 V\nCALIBRATED ENDPOINT ERRORS5, 6\nOffset Error ±5 ±5 LSB max\n±1 ±1 LSB typ\nOffset Error Match 1 1 LSB typ\nGain Error ±6 ±6 LSB max\n±1 ±1 LSB typ\nGain Error Match 1.5 1.5 LSB typ\nUSER SYSTEM CALIBRATION7\nOffset Calibration Range ±5 ±5 % of V REF typ\nGain Calibration Range ±2.5 ±2.5 % of V REF typ\nDYNAMIC PERFORMANCE f IN = 10 kHz Sine Wave\nfSAMPLE  = 100 kHz\nSignal-to-Noise Ratio (SNR)870 70 dB typ\nTotal Harmonic Distortion (THD) –78 –78 dB typ\nPeak Harmonic or Spurious Noise –78 –78 dB typ\nANALOG INPUT\nInput Voltage Ranges 0 to V REF 0 to V REF V\nLeakage Current ±1 ±1 μA max\n±0.1 ±0.1 μA typ\nInput Capacitance920 20 pF max\nTEMPERATURE SENSOR10\nVoltage Output at 25°C 600 600 mV typ Can vary significantly (> ±20%)\nVoltage TC –3.0 –3.0 mV/°C typ from device to device\nDAC CHANNEL SPECIFICATIONS\nDC ACCURACY11\nResolution 12 12 Bits\nRelative Accuracy ±3 ±3 LSB typ\nDifferential Nonlinearity ±0.5 ±1 LSB typ Guaranteed 12-Bit Monotonic\nOffset Error ±60 ±60 mV max\n±15 ±15 mV typ\nFull-Scale Error ±30 ±30 mV max\n±10 ±10 mV typ\nFull-Scale Mismatch ±0.5 ±0.5 % typ % of Full-Scale on DAC1\nANALOG OUTPUTS\nVoltage Range_0 0 to V REF 0 to V REF V typ\nVoltage Range_1 0 to V DD 0 to V DD V typ\nResistive Load 10 10 kΩ  typ\nCapacitive Load 100 100 pF typ\nOutput Impedance 0.5 0.5 Ω typ\nISINK 50 50 μA typ\n G\nREV. –4–ADuC812\nSPECIFICATIONS1, 2 (continued)\n            ADuC812BS\nParameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nDAC AC CHARACTERISTICS\nVoltage Output Settling Time 15 15 μs typ Full-Scale Settling Time to\nwithin 1/2 LSB of Final Value\nDigital-to-Analog Glitch Energy 10 10 nV sec typ 1 LSB Change at Major Carry\nREFERENCE INPUT/OUTPUT\nREF IN Input Voltage Range92.3/V DD 2.3/V DD V min/max\nInput Impedance 150 150 k Ω typ\nREF OUT Output Voltage 2.5 ± 2.5% 2.5 ± 2.5% V min/max Initial Tolerance @ 25°C\n2.5 2.5 V typ\nREF OUT Tempco 100 100 ppm/°C typ\nFLASH/EE MEMORY PERFORMANCE\nCHARACTERISTICS12, 13\nEndurance 10,000 Cycles min\n50,000 50,000 Cycles typ\nData Retention 10 Years min\nWATCHDOG TIMER\nCHARACTERISTICS\nOscillator Frequency 64 64 kHz typ\nPOWER SUPPLY MONITOR\nCHARACTERISTICS\nPower Supply Trip Point Accuracy ±2.5 ±2.5 % of Selected\nNominal Trip\nPoint Voltagemax\n±1.0 ±1.0 % of Selected\nNominal TripPoint Voltage\ntyp\nDIGITAL INPUTS\nInput High Voltage (V INH) 2.4 2.4 V min\nXTAL1 Input High Voltage (V INH) Only 4 V min\nInput Low Voltage (V INL) 0.8 0.8 V max\nInput Leakage Current (Port 0, EA) ±10 ±10 μA max V IN = 0 V or V DD\n±1 ±1 μA typ V IN = 0 V or V DD\nLogic 1 Input Current\n(All Digital Inputs) ±10 ±10 μA max V IN = V DD\n±1 ±1 μA typ V IN = V DD\nLogic 0 Input Current (Port 1, 2, 3) –80 –40 μA max\n–40 –20 μA typ V IL = 450 mV\nLogic 1-0 Transition Current (Port 1, 2, 3) –700 –500 μA max V IL = 2 V\n–400 –200 μA typ V IL = 2 V\nInput Capacitance 10 10 pF typ\n G\nREV. –5–ADuC812\n            ADuC812BS\nParameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nDIGITAL OUTPUTS\nOutput High Voltage (V OH) 2.4 2.4 V min V DD = 4.5 V to 5.5 V\nISOURCE  = 80 μA\n4.0 2.6 V typ V DD = 2.7 V to 3.3 V\nISOURCE  = 20 μA\nOutput Low Voltage (V OL)\nALE, PSEN , Ports 0 and 2 0.4 0.4 V max I SINK = 1.6 mA\n0.2 0.2 V typ I SINK = 1.6 mA\nPort 3 0.4 0.4 V max I SINK = 8 mA\n0.2 0.2 V typ I SINK = 8 mA\nFloating State Leakage Current ±10 ±10 μA max\n±1 ±1 μA typ\nFloating State Output Capacitance 10 10 pF typ\nPOWER REQUIREMENTS14, 15, 16\nIDD Normal Mode1743 25 mA max MCLKIN = 16 MHz\n32 16 mA typ MCLKIN = 16 MHz\n26 12 mA typ MCLKIN = 12 MHz\n8 3 mA typ MCLKIN = 1 MHz\nIDD Idle Mode 25 10 mA max MCLKIN = 16 MHz\n18 6 mA typ MCLKIN = 16 MHz\n15 6 mA typ MCLKIN = 12 MHz\n7 2 mA typ MCLKIN = 1 MHz\nIDD Power-Down Mode1830 15 μA max\n5 5 μA typ\nNOTES\n1Specifications apply after calibration.\n2Temperature range –40°C to +85°C.\n3Linearity is guaranteed during normal MicroConverter core operation.\n4Linearity may degrade when programming or erasing the 640 byte Flash/EE space during ADC conversion times due to on-chip charge  pump activity.\n5Measured in production at V DD = 5 V after Software Calibration Routine at 25°C only.\n6User may need to execute Software Calibration Routine to achieve these specifications, which are configuration dependent.\n7The offset and gain calibration spans are defined as the voltage range of user system offset and gain errors that the ADuC812 can compensate.\n8SNR calculation includes distortion and noise components.\n9Specification is not production tested, but is supported by characterization data at initial product release.\n10The temperature sensor will give a measure of the die temperature directly; air temperature can be inferred from this result.\n11DAC linearity is calculated using:\nReduced code range of 48 to 4095, 0 to V REF range\nReduced code range of 48 to 3995, 0 to V DD range\nDAC output load = 10 k Ω and 50 pF.\n12Flash/EE Memory Performance Specifications are qualified as per JEDEC Specification (Data Retention) and JEDEC Draft Specification A117 (Endurance).\n13Endurance Cycling is evaluated under the following conditions:\nMode = Byte Programming, Page Erase Cycling\nCycle Pattern = 00H to FFHErase Time = 20 msProgram Time = 100 μs\n14IDD at other MCLKIN frequencies is typically given by:\nNormal Mode (V DD = 5 V): I DD = (1.6 nAs × MCLKIN) + 6 mA\nNormal Mode (V DD = 3 V): I DD = (0.8 nAs × MCLKIN) + 3 mA\nIdle Mode (V DD = 5 V): I DD = (0.75 nAs × MCLKIN) + 6 mA\nIdle Mode (V DD = 3 V): I DD = (0.25 nAs × MCLKIN) + 3 mA\nwhere MCLKIN is the oscillator frequency in MHz and resultant I DD values are in mA.\n15IDD currents are expressed as a summation of analog and digital power supply currents during normal MicroConverter operation.\n16IDD is not measured during Flash/EE program or erase cycles; I DD will typically increase by 10 mA during these cycles.\n17Analog I DD = 2 mA (typ) in normal operation (internal V REF, ADC, and DAC peripherals powered on).\n18EA = Port0 = DV DD, XTAL1 (Input) tied to DV DD, during this measurement.\nTypical specifications are not production tested, but are supported by characterization data at initial product release.\nTiming Specifications—See Pages 46–55.Specifications subject to change without notice.\nPlease refer to User Guide, Quick Reference Guide, Application Notes, and Silicon Errata Sheet at www.analog.com/microconverter  for additional information.\n G\nREV.ADuC812\n–6–52-Lead MQFPABSOLUTE MAXIMUM RATINGS *\n(TA = 25°C, unless otherwise noted.)\nAVDD to DV DD . . . . . . . . . . . . . . . . . . . . . .  –0.3 V to +0.3 V\nAGND to DGND  . . . . . . . . . . . . . . . . . . . .  –0.3 V to +0.3 V\nDV DD to DGND, AV DD to AGND  . . . . . . . . .  –0.3 V to +7 V\nDigital Input Voltage to DGND  . . .  –0.3 V to DV DD + 0.3 V\nDigital Output Voltage to DGND  . .  –0.3 V to DV DD + 0.3 V\nVREF to AGND  . . . . . . . . . . . . . . . . . –0.3 V to AV DD + 0.3 V\nAnalog Inputs to AGND  . . . . . . . . . .  –0.3 V to AV DD + 0.3 V\nOperating Temperature Range Industrial (B Version)\n . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  –40°C to +85°CStorage Temperature Range  . . . . . . . . . . . . –65°C to +150°CJunction Temperature  . \n . . . . . . . . . . . . . . . . . . . . . . . .  150°C\nθJA Thermal Impedance  . . . . . . . . . . . . . . . . . . . . . . .  90°C/W\nLead Temperature, Soldering\nVapor Phase (60 sec)  . . . . . . . . . . . . . . . . . . . . . . . .  215°CInfrared (15 sec)  . . . . . . . . . . . . . . . . . . . . . . . . . . .  220°C\n*Stresses at or above those listed under Absolute Maximum Ratings may cause \npermanent damage to the product. This is a stress rating only; functional operation of \nthe product at these or any other conditions above those indicated in the operational \nsection of this specification is not implied. Operation beyond the maximum operating \nconditions for extended periods may affect product reliability.\n G\n \n \n \n       \n \n \nPIN CONFIGURATION\nESD CAUTION\n52 51 50 49 48 43 42 41 40 47 46 45 44\n14 15 16 17 18 19 20 21 22 23 24 25 261\n2\n34\n5\n678\n9\n10\n13121139\n38\n37\n36\n35343332\n31\n30\n29\n28\n27PIN 1\nIDENTIFIER\nTOP VIEW\n(Not to Scale)P0.7/AD7\nP0.6/AD6\nP0.5/AD5\nP0.4/AD4\nDVDD\nDGND\nP0.3/AD3\nP0.2/AD2\nP0.1/AD1\nP0.0/AD0\nALE\nPSEN\nEA\nP1.0/ADC0/T2\nP1.1/ADC1/T2EX\nP1.2/ADC2\nP1.3/ADC3\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nP1.4/ADC4\nP1.5/ADC5/ SS\nP1.6/ADC6P2.7/A15/A23P2.6/A14/A22\nP2.5/A13/A21\nP2.4/A12/A20\nDGND\nDV\nDD\nXTAL2\nXTAL1\nP2.3/A11/A19P2.2/A10/A18\nP2.1/A9/A17\nP2.0/A8/A16\nSDATA/MOSIP1.7/ADC7\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/ INT0\nP3.3/ INT1 /MISO\nDVDD\nDGND\nP3.4/T0\nP3.5/T1/ CONVST\nP3.7/ RD\nSCLOCKP3.6/ WRADuC812\nREV.ADuC812\n–7–PIN FUNCTION DESCRIPTIONS\nMnemonic Type Function\nDV DD P Digital Positive Supply Voltage, 3 V or 5 V Nominal.\nAVDD P Analog Positive Supply Voltage, 3 V or 5 V Nominal.\nCREF I Decoupling Input for On-Chip Reference. Connect 0.1 μF between this pin and AGND.\nVREF I/O Reference Input/Output. This pin is connected to the internal reference through a series resistor and is the\nreference source for the ADC. The nominal internal reference voltage is 2.5 V, which appears at the pin.\nThis pin can be overdriven by an external reference.\nAGND G Analog Ground. Ground reference point for the analog circuitry.\nP1.0–P1.7 I Port 1 is an 8-bit input port only. Unlike other ports, Port 1 defaults to Analog Input mode. To configure\nany of these Port Pins as a digital input, write a 0 to the port bit. Port 1 pins are multifunctional and share\nthe following functionality.\nADC0–ADC7 I Analog Inputs. Eight single-ended analog inputs. Channel selection is via ADCCON2 SFR.\nT2 I Timer 2 Digital Input. Input to Timer/Counter 2. When enabled, Counter 2 is incremented in response to a\n1 to 0 transition of the T2 input.\nT2EX I Digital Input. Capture/Reload trigger for Counter 2; also functions as an Up/Down control input for\nCounter 2.\nSS I Slave Select Input for the SPI Interface.\nSDATA I/O User selectable, I2C Compatible or SPI Data Input/Output Pin.\nSCLOCK I/O Serial Clock Pin for I2C Compatible or SPI Serial Interface Clock.\nMOSI I/O SPI Master Output/Slave Input Data I/O Pin for SPI Interface.\nMISO I/O SPI Master Input/Slave Output Data I/O Pin for SPI Serial Interface.DAC0 O Voltage Output from DAC0.\nDAC1 O Voltage Output from DAC1.\nRESET I Digital Input. A high level on this pin for 24 master clock cycles while the oscillator is running resets the\ndevice. External power-on reset (POR) circuity must be implemented to drive the RESET pin as described\nin the Power-On Reset Operation section.\nP3.0–P3.7 I/O Port 3 is a bidirectional port with internal pull-up resistors. Port 3 pins that have 1s written to them are\npulled high by the internal pull-up resistors; in that state they can be used as inputs. As inputs, Port 3 pins\nbeing pulled externally low will source current because of the internal pull-up resistors. Port 3 pins alsocontain various secondary functions that are described below.\nRxD I/O Receiver Data Input (Asynchronous) or Data Input/Output (Synchronous) of Serial (UART) Port\nTxD O Transmitter Data Output (Asynchronous) or Clock Output (Synchronous) of Serial (UART) Port\nINT0 I Interrupt 0, programmable edge or level triggered Interrupt input, INT0  can be programmed to one of two\npriority levels. This pin can also be used as a gate control input to Timer 0.\nINT1 I Interrupt 1, programmable edge or level triggered Interrupt input, INT1  can be programmed to one of two\npriority levels. This pin can also be used as a gate control input to Timer 1.\nT0 I Timer/Counter 0 Input.\nT1 I Timer/Counter 1 Input.CONVST I Active Low Convert Start Logic Input for the ADC Block when the External Convert Start Function is Enabled.\nA low-to-high transition on this input puts the track-and-hold into its hold mode and starts conversion.\nWR O Write Control Signal, Logic Output. Latches the data byte from Port 0 into the external data memory.\nRD O Read Control Signal, Logic Output. Enables the external data memory to Port 0.\nXTAL2 O Output of the Inverting Oscillator Amplifier.XTAL1 I Input to the Inverting Oscillator Amplifier and to the Internal Clock Generator Circuits.\nDGND G Digital Ground. Ground reference point for the digital circuitry.\nP2.0–P2.7 I/O Port 2 is a bidirectional port with internal pull-up resistors. Port 2 pins that have 1s written to them are\n(A8–A15) pulled high by the internal pull-up resistors; in that state they can be used as inputs. As inputs, Port 2\n(A16–A23) pins being pulled externally low will source current because of the internal pull-up resistors. Port 2 emits the\nhigh order address bytes during fetches from external program memory and middle and high order address\nbytes during accesses to the external 24-bit external data memory space.\n G\nREV.ADuC812\n–8–Mnemonic Type Function\nPSEN O Program Store Enable, Logic Output. This output is a control signal that enables the external program\nmemory to the bus during external fetch operations. It is active every six oscillator periods except during\nexternal data memory accesses. This pin remains high during internal program execution. PSEN  can also be\nused to enable serial download mode when pulled low through a resistor on power-up or RESET.\nALE O Address Latch Enable, Logic Output. This output is used to latch the low byte (and page byte for 24-bit\naddress space accesses) of the address into external memory during normal operation. It is activated every\nsix oscillator periods except during an external data memory access.\nEA I External Access Enable, Logic Input. When held high, this input enables the device to fetch code from\ninternal program memory locations 0000H to 1FFFH. When held low, this input enables the device to fetch\nall instructions from external program memory.\nP0.7–P0.0 I/O Port 0 is an 8-bit open-drain bidirectional I/O port. Port 0 pins that have 1s written to them float and in(A0–A7) that state can be used as high impedance inputs. Port 0 is also the multiplexed low order address and data\nbus during accesses to external program or data memory. In this application, it uses strong internal pull-ups\nwhen emitting 1s.\nTERMINOLOGY\nADC SPECIFICATIONS\nIntegral Nonlinearity\nThis is the maximum deviation of any code from a straight line\npassing through the endpoints of the ADC transfer function.\nThe endpoints of the transfer function are zero scale, a point1/2 LSB below the first code transition, and full scale, a point\n1/2 LSB above the last code transition.\nDifferential Nonlinearity\nThis is the difference between the measured and the ideal 1 LSB\nchange between any two adjacent codes in the ADC.\nOffset Error\nThis is the deviation of the first code transition (0000 . . . 000)\nto (0000 . . . 001) from the ideal, i.e., +1/2 LSB.\nFull-Scale Error\nThis is the deviation of the last code transition from the ideal\nAIN voltage (Full Scale – 1.5 LSB) after the offset error has\nbeen adjusted out.\nSignal-to-(Noise + Distortion) Ratio\nThis is the measured ratio of signal-to-(noise + distortion) at the\noutput of the ADC. The signal is the rms amplitude of the fun-\ndamental. Noise is the rms sum of all nonfundamental signals up\nto half the sampling frequency (f S/2), excluding dc. The ratio isdependent upon the number of quantization levels in the digiti-\nzation process; the more levels, the smaller the quantization\nnoise. The theoretical signal-to-(noise + distortion) ratio for anideal N-bit converter with a sine wave input is given by:\nSignal-to- (Noise + Distortion ) = (6.02 N + 1.76)  dB\nThus for a 12-bit converter, this is 74 dB.\nTotal Harmonic Distortion\nTotal Harmonic Distortion is the ratio of the rms sum of theharmonics to the fundamental.\nDAC SPECIFICATIONS\nRelative Accuracy\nRelative accuracy or endpoint linearity is a measure of the\nmaximum deviation from a straight line passing through the\nendp oints of the DAC transfer function. It is measured after\nadjusting for zero-scale error and full-scale error.\nVoltage Output Settling Time\nThis is the amount of time it takes for the output to settle to aspecified level for a full-scale input change.\nDigital-to-Analog Glitch Impulse\nThis is the amount of charge injected into the analog output\nwhen the inputs change state. It is specified as the area of the\nglitch in nV sec.PIN FUNCTION DESCRIPTIONS (continued)\n G \n\nREV.ADuC812\n–9–ARCHITECTURE, MAIN FEATURES\nThe ADuC812 is a highly integrated, true 12-bit data acquisi-\ntion system. At its core, the ADuC812 incorporates a high\nperfor mance 8-bit (8052 compatible) MCU with on-chip\nreprogrammable nonvolatile Flash program memory control-ling a multichannel ( eight input channels) 12-bit ADC.\nThe chip incorporates all secondary functions to fully support\nthe programmable data acquisition core. These secondary\nfunctions include User Flash Memory, Watchdog Timer(WDT), Power Supply Monitor (PSM), and various industry-\nstandard parallel and serial interfaces.\nEXTERNAL\nPROGRAM\nMEMORY\nSPACEFFFFH\n2000H\n1FFFH\n0000HEA = 0\nEXTERNAL\nPROGRAM\nMEMORY\nSPACEEA = 1\nINTERNAL\n8K BYTE\nFLASH/EE\nPROGRAM\nMEMORYPROGRAM MEMORY SPACE\nREAD ONLY\nACCESSIBLE\nBY\nINDIRECT\nADDRESSING\nONLY\nACCESSIBLE\nBY\nDIRECT\nAND\nINDIRECT\nADDRESSINGSPECIAL\nFUNCTION\nREGISTERS\nACCESSIBLE\nBY DIRECT\nADDRESSING\nONLY640 BYTES\nFLASH/EE DATA\nMEMORY\nACCESSED\nINDIRECTLY\nVIA SFR\nCONTROL REGISTERS\nINTERNAL\nDATA MEMORY\nSPACE\nFFH\n80H\n7FH\n00HUPPER\n128\nLOWER\n128FFH\n80HEXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)FFFFFFH\n000000HDATA MEMORY SPACE\nREAD/WRITE\n(PAGE 159)\n(PAGE 0) 00H9FH\nFigure 1. Program and Data Memory Maps\nThe l ower 128 bytes of internal data memory are mapped as\nshown in Figure 2. The lowest 32 bytes are grouped into four\nbanks of eight registers addressed as R0 through R7. The next16 bytes (128 bits) above the register banks form a block of\nbit addressable memory space at bit addresses 00H through 7FH.BIT ADDRESSABLE SPACE\n(BIT ADDRESSES 0FH–7FH)\n4 BANKS OF 8 REGISTERS\nR0–R7BANKS\nSELECTED\nVIA\nBITS IN PSW\n11\n10\n01\n0007H0FH17H1FH2FH7FH\n00H08H10H18H20H\nRESET VALUE OF\nSTACK POINTER\nFigure 2. Lower 128 Bytes of Internal RAM\nMEMORY ORGANIZATION\nAs with all 8052 compatible devices, the ADuC812 has separate\naddress spaces for program and data memory as shown in Fig-ure 1. Also as shown in Figure 1, an additional 640 bytes of\nUser Data Flash EEPROM are available to the user. The User\nData Flash Memory area is accessed indirectly via a group ofcontrol registers mapped in the Special Function Register (SFR)\narea in the Data Memory Space.\nThe SFR space is mapped in the upper 128 bytes of internal data\nmemory space. The SFR area is accessed by direct addressingonly and provides an interface between the CPU and all on-chipperipherals. A block diagram showing the programming model\nof the ADuC812 via the SFR area is shown in Figure 3.\n128-BYTE\nSPECIAL\nFUNCTION\nREGISTER\nAREA8K BYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE PROGRAM\nMEMORY\n8051\nCOMPATIBLE\nCORE\nOTHER ON-CHIP\nPERIPHERALS\nTEMPERATURE\nSENSOR\n2 /H11547 12-BIT DACs\nSERIAL I/O\nPARALLEL I/O\nWDT\nPSMAUTOCALIBRATING\n8-CHANNEL\nHIGH SPEED\n12-BIT ADC640-BYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE DATA\nMEMORY\nFigure 3. Programming Model\n G\nREV.ADuC812\n–10–OVERVIEW OF MCU-RELATED SFRs\nAccumulator SFR\nACC is the Accumulator register and is used for math opera-\ntions including addition, subtraction, integer multiplication and\ndivision, and Boolean bit manipulations. The mnemonics foraccumulator-specific instructions refer to the Accumulator as A.\nB SFR\nThe B register is used with the ACC for multiplication anddivision operations. For other instructions, it can be treated as ageneral-purpose scratch pad register.\nStack Pointer SFR\nThe SP register is the stack pointer and is used to hold an internalRAM address that is called the “top of the stack.” The SP registeris incremented before data is stored during PUSH and CALL\nexecutions. While the stack may reside anywhere in on-chip RAM,\nthe SP register is initialized to 07H after a reset. This causes thestack to begin at location 08H.\nData Pointer\nThe Data Pointer is made up of three 8-bit registers: DPP (pagebyte), DPH (high byte), and DPL (low byte). These are used toprovide memory addresses for internal and external code access\nand external data access. It may be manipulated as a 16-bit\nregister (DPTR = DPH, DPL), although INC DPTR instruc tions\nwill automatically carry over to DPP, or as three independent\n8-bit registers (DPP, DPH, and DPL).\nProgram Status Word SFR\nThe PSW register is the Program Status Word that contains\nseveral bits reflecting the current status of the CPU as detailedin Table I.\nSFR Address D0H\nPower-On Default Value 00H\nBit Addressable Yes\nYCC A0 F1 SR0 SRV O1 FP\nTable I. PSW SFR Bit Designations\nBit Name Description\n7 CY Carry Flag\n6 AC Auxiliary Carry Flag\n5 F0 General-Purpose Flag\n4 RS1 Register Bank Select Bits\n3 RS0 RS1 RS0 Selected Bank\n000\n011\n102113\n2 OV Overflow Flag\n1 F1 General-Purpose Flag\n0 P Parity BitPower Control SFR\nThe Power Control (PCON) register contains bits for powersaving options and general-purpose status flags as shown in\nTable II.\nSFR Address 87H\nPower-On Default Value 00HBit Addressable No\nD O M SD P I R E SD P O T N IF F O E L A1 FG0 FGD PL D I\nTable II. PCON SFR Bit Designations\nBit Name Description\n7 SMOD Double UART Baud Rate\n6 ——— Reserved\n5 ——— Reserved\n4 ALEOFF Disable ALE Output3 GF1 General-Purpose Flag Bit\n2 GF0 General-Purpose Flag Bit\n1 PD Power-Down Mode Enable\n0 IDL Idle Mode Enable\n G\nREV.ADuC812\n–11–SPECIAL FUNCTION REGISTERS\nAll registers except the program counter and the four general-purpose register banks reside in the special function register (SFR) area.\nThe SFR registers include control, configuration, and data registers that provide an interface between the CPU and other on-chi p\nperipherals.\nFigure 4 shows a full SFR memory map and SFR contents on reset. Unoccupied SFR locations are shown dark shaded (NOT USED).\nUnoccupied locations in the SFR address space are not implemented, i.e., no register exists at this location. If an unoccupiedlocation is read, an unspecified value is returned. SFR locations reserved for on-chip testing are shown lighter shaded (RESERV ED)\nand should not be accessed by user software. Sixteen of the SFR locations are also bit addressable and denoted by \n“1”  i.e., the bit\naddressable SFRs are those whose address ends in 0H or 8H.\nSPICON1\nF8H 00HDAC0L\nF9H 00HDAC0H\nFAH 00HDAC1L\nFBH 00HDAC1H\nFCH 00HDACCON\nFDH 04HRESERVED NOT USED\nB1\nF0H 00HADCOFSL2\nF1H 00HADCOFSH2\nF2H 20HADCGAINL2\nF3H 00HADCGAINH2\nF4H 00HADCCON3\nF5H 00HRESERVED\nI2CCON1\nE8H 00HRESERVED\nACC1\nE0H 00HRESERVED\nADCCON21\nD8H 00HADCDAT AL\nD9H 00HADCDAT AH\nDAH 00HRESERVED\nPSW1\nD0H 00HDMAL\nD2H 00HDMAH\nD3H 00HDMAP\nD4H 00HRESERVED\nT2CON1\nC8H 00HRCAP2L\nCAH 00HRCAP2H\nCBH 00HTL2\nCCH 00HTH2\nCDH 00HRESERVED\nWDCON1\nC0H 00H\nIP1\nB8H 00HECON\nB9H 00HETIM1\nBAH 52HETIM2\nBBH 04HEDATA1\nBCH 00HEDATA2\nBDH 00H\nNOT USED\nIE1\nA8H 00HIE2\nA9H 00HNOT USED\nP21\nA0H FFHNOT USED\nSCON1\n98H 00HSBUF\n99H 00HNOT USED\nP11, 3\n90H FFHNOT USED\nTCON1\n88H 00HTMOD\n89H 00HTL0\n8AH 00HTL1\n8BH 00HTH0\n8CH 00HTH1\n8DH 00HNOT USED\nP01\n80H FFHSP\n81H 07HDPL\n82H 00HDPH\n83H 00HDPP\n84H 00HRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED\nRESERVED\nRESERVED RESERVED\nNOT USEDNOT USEDNOT USEDNOT USED\nNOT USEDNOT USED NOT USED NOT USED NOT USED NOT USED NOT USEDP31\nB0H FFH\nNOT USED NOT USED NOT USED NOT USED\nNOT USED NOT USED NOT USED NOT USED NOT USED\nNOT USED NOT USED NOT USED NOT USED NOT USEDNOT USED NOT USED NOT USEDSPIDAT\nF7H 00H\nADCCON1\nEFH 20H\nRESERVED\nPSMCON\nDFH DEH\nEDARL\nC6H 00H\nEDATA3\nBEH 00HEDATA4\nBFH 00H\nNOT USED NOT USED\nPCON\n87H 00HISPI\nFFH 0WCOL\nFEH 0SPE\nFDH 0SPIM\nFCH 0CPOL\nFBH 0CPHA\nFAHSPR1\nF9H 0SPR0\nF8H 0BITS\nF7H 0 F6H 0 F5H 0 F4H 0 F3H 0 F2H F1H 0 F0H 0BITS\nMDO\nEFH 0MDE\nEEH 0MCO\nEDH 0 ECH 0I2CM\nEBH 0 EAH E9H 0 E8H 0BITS\nE7H 0 E6H 0 E5H 0 E4H 0 E3H 0 E2H E1H 0 E0H 0BITS\nADCI\nDFH 0DMA\nDEH 0CCONV\nDDH 0SCONV\nDCH 0CS3\nDBH 0CS2\nDAHCS1\nD9H 0CS0\nD8H 0BITS\nCY\nD7H 0AC\nD6H 0F0\nD5H 0RS1\nD4H 0RS0\nD3H 0OV\nD2HFI\nD1H 0P\nD0H 0BITS\nTF2\nCFH 0EXF2\nCEH 0RCLK\nCDH 0TCLK\nCCH 0EXEN2\nCBH 0TR2\nCAHCNT2\nC9H 0CAP2\nC8H 0BITS\nPRE2\nC7H 0PRE1\nC6H 0PRE0\nC5H 0 C4H 0WDR1\nC3H 0WDR2\nC2HWDS\nC1H 0WDE\nC0H 0BITS\nPSI\nBFH 0PADC\nBEH 0PT2\nBDH 0PS\nBCH 0PT1\nBBH 0PX1\nBAHPT0\nB9H 0PX0\nB8H 0BITS\nRD\nB7H 1WR\nB6H 1T1\nB5H 1T0\nB4H 1INT1\nB3H 1INT0\nB2HTxD\nB1H 1RxD\nB0H 1BITS\nEA\nAFHEADC\nAEHET2\nADHES\nACH 0ET1\nABH 0EX1\nAAHET0\nA9H 0EX0\nA8H 0BITS\nA7H A6H A5H 1 A4H 1 A3H 1 A2H A1H 1 A0H 1BITS\nSM0\n9FH 0SM1\n9EH 0SM2\n9DH 0REN\n9CH 0TB8\n9BH 0RB8\n9AHTI\n99H 0RI\n98H 0BITS\n97H 1 96H 1 95H 1 94H 1 93H 1 92HT2EX\n91H 1T2\n90H 1BITS\nTF1\n8FH 0TR1\n8EH 0TF0\n8DH 0TR0\n8CH 0IE1\n8BH 0IT1\n8AHIE0\n89H 0IT0\n88H 0BITS\n87H 1 86H 1 85H 1 84H 1 83H 1 82H 81H 1 80H 1BITS1\n1\n0\n101\nIE0\n89H 0IT0\n88H 0TCON\n88H 00HMNEMONIC\nSFR ADDRESS\nDEFAULT VALUEMNEMONIC\nDEFAULT VALUE\nSFR ADDRESSTHESE BITS ARE CONTAINED IN THIS BYTE. SFR MAP KEY:\nSFR NOTES\n1SFRs WHOSE ADDRESS ENDS IN 0H OR 8H ARE BIT ADDRESSABLE.\n2CALIBRATION COEFFICIENTS ARE PRECONFIGURED ON POWER-UP TO FACTORY CALIBRATED VALUES.\n3THE PRIMARY FUNCTION OF PORT 1 IS AS AN ANALOG INPUT PORT;  THEREFORE,  TO ENABLE THE DIGITAL SECONDARY FUNCTIONS\n  ON THESE PORT PINS,  WRITE A “0”  TO THE CORRESPONDING PORT 1 SFR BIT.0\nRESERVED RESERVEDRESERVED\nETIM3\nC4H C9H0\n0\n0\n00\n0\n0\n0\n0 0 00\n11\nI2CDAT\n9AH 00HI2CADD\n9BH 55HMDI I2CRS I2CTX I2CI\nFigure 4. Special Function Register Locations and Reset Values\n G\nREV.ADuC812\n–12–ADC CIRCUIT INFORMATION\nGeneral Overview\nThe ADC conversion block incorporates a fast, 8-channel,\n12-bit, single-supply ADC. This block provides the user with\nmultichannel mux, track-and-hold, on-chip reference, calibra-tion features, and ADC. All components in this block are easily\nconfigured via a 3-register SFR interface.\nThe ADC consists of a conventional successive-a pproxima tion\nconverter based around a capacitor DAC. The converter accepts\nan analog input range of 0 V to V\nREF. A high precision, low drift\nand factory calibrated 2.5 V reference is provided on-chip. Theinternal reference may be overdriven via the external V\nREF pin.\nThis external reference can be in the range 2.3 V to AV DD.\nSingle step or continuous conversion modes can be initiated in\nsoftware or alternatively by applying a convert signal to an e xternal\npin. Timer 2 can also be configured to generate a repetitive trigger\nfor ADC conversions. The ADC may be configured to operatein a DMA mode whereby the ADC block continuously converts\nand captures samples to an external RAM space without any\ninteraction from the MCU core. This automatic capture facility\ncan extend through a 16 MByte external Data Memory space.\nThe ADuC812 is shipped with factory programmed calibration\ncoefficients that are automatically downloaded to the ADC onpower-up, ensuring optimum ADC performance. The ADC\ncore contains internal offset and gain calibration registers.\nA software calibration routine is provided to allow the user to\noverwrite the factory programmed calibration coefficients if\nrequired, thus minimizing the impact of endpoint errors in the\nuser’s target system.\nA voltage output from an on-chip band gap reference propor-\ntional to absolute temperature can also be routed through thefront end ADC multiplexer (effectively a ninth ADC channel\ninput) facilitating a temperature sensor implementation.ADC Transfer Function\nThe analog input range for the ADC is 0 V to V REF. For this\nrange, the designed code transitions occur midway betweensuccessive integer LSB values (i.e., 1/2 LSB, 3/2 LSBs,\n5/2 LSBs . . . FS –3/2 LSBs). The output coding is straightbinary with 1 LSB = FS/4096 or  2.5 V/4096 = 0.61 mV when\nV\nREF = 2.5 V. The ideal input/output transfer characteristic for\nthe 0 to V REF  range is shown in Figure 5.\nOUTPUT\nCODE\n111...111\n111...110\n111...101\n111...100\n000...011\n000...010\n000...001\n000...000\n0V1LSB+FS\n–1LSBVOLTAGE INPUT1LSB =FS\n4096\nFigure 5. ADC Transfer Function\nTypical Operation\nOnce configured via the ADCCON 1–3 SFRs (shown on the\nfollowing page), the ADC will convert the analog input andprovide an ADC 12-bit result word in the ADCDATAH/L SFRs.The top four bits of the ADCDATAH SFR will be written\nwith the channel selection bits to identify the channel result.The format of the ADC 12-bit result word is shown in Figure 6.\nCH–ID\nTOP 4 BITSHIGH 4 BITS OF\nADC RESULT WORD\nLOW 8 BITS OF THEADC RESULT WORDADCDATAH SFR\nADCDATAL SFR\nFigure 6. ADC Result Format\n G\nREV.ADuC812\n–13–ADCCON1—(ADC Control SFR #1)\nThe ADCCON1 register controls conversion and acquisition times, hardware conversion modes and power-down modes as\ndetailed below.\nSFR Address EFH\nSFR Power-On Default Value 20H\nTable III. ADCCON1 SFR Bit Designations\nBit Name Description\nADCCON1.7 MD1 The mode bits (MD1, MD0) select the active operating mode of the ADC as follows:ADCCON1.6 MD0 MD1 MD0 Active Mode\n0 0 ADC powered down\n0 1 ADC normal mode\n1 0 ADC powered down if not executing a conversion cycle1 1 ADC standby if not executing a conversion cycle\nNote: In power-down mode the ADC V\nREF circuits are maintained on, whereas all ADC peripherals are\npowered down, thus minimizing current consumption.\nADCCON1.5 CK1 The ADC clock divide bits (CK1, CK0) select the divide ratio for the master clock used to generate the\nADCCON1.4 CK0 ADC clock. A typical ADC conversion will require 17 ADC clocks. The divider ratio is selected\nas follows:CK1 CK0 MCLK Divider\n00 101 2\n10 4\n11 8\nADCCON1.3 AQ1 The ADC acquisition select bits (AQ1, AQ0) select the time provided for the input track-and-holdADCCON1.2 AQ0 amplifier to acquire the input signal, and are selected as follows:\nAQ1 AQ0 #ADC Clks\n00 1\n01 210 4\n11 8\nADCCON1.1 T2C The Timer 2 conversion bit (T2C) is set by the user to enable the Timer 2 overflow bit be used as\nthe ADC convert start trigger input. ADC conversions are initiated on the second Timer 2 overflow.\nADCCON1.0 EXC The external trigger enable bit (EXC) is set by the user to allow the external CONVST pin to be\nused as the active low convert start input. This input should be an active low pulse (minimum\npulsewidth >100 ns) at the required sample rate.1 DM0 DM1 KC0 KC1 QA0 QAC 2TC X E\n G\nREV.ADuC812\n–14–ADCCON2—(ADC Control SFR #2)\nThe ADCCON2 register controls ADC channel selection and conversion modes as detailed below.\nSFR Address D8H\nSFR Power-On Default Value 00H\nI C D AA MDV N O C CV N O C S3 SC2 SC1 SC0 S C\nTable IV. ADCCON2 SFR Bit Designations\nLocation Name Description\nADCCON2.7 ADCI The ADC interrupt bit (ADCI) is set by hardware at the end of a single ADC conversion cycle or at the\nend of a DMA block conversion. ADCI is cleared by hardware when the PC vectors to the ADC Interrupt\nService Routine.\nADCCON2.6 DMA The DMA mode enable bit (DMA) is set by the user to enable a preconfigured ADC DMA mode operation.A more detailed description of this mode is given in the ADC DMA Mode section.\nADCCON2.5 CCONV The continuous conversion bit (CCONV) is set by the user to initiate the ADC into a continuous mode\nof conversion. In this mode, the ADC starts converting based on the timing and channel configurationalready set up in the ADCCON SFRs; the ADC automatically starts another conversion once a previous\nconversion has completed.\nADCCON2.4 SCONV The single conversion bit (SCONV) is set to initiate a single conversion cycle. The SCONV bit is\nautomatically reset to “0” on completion of the single conversion cycle.\nADCCON2.3 CS3 The channel selection bits (CS3–0) allow the user to program the ADC channel selection underADCCON2.2 CS2 software control. When a conversion is initiated, the channel converted will be the one pointed to by\nADCCON2.1 CS1 these channel selection bits. In DMA mode, the channel selection is derived from the channel IDADCCON2.0 CS0 written to the external memory.\nCS3 CS2 CS1 CS0 CH#\n00000\n000110010200113\n01004\n0101501106\n01117\n1000Temp Sensor1111DMA STOP\nAll other combinations reserved.\nADCCON3—(ADC Control SFR #3)\nThe ADCCON3 register gives user software an indication of ADC busy status.\nSFR Address F5H\nSFR Power-On Default Value 00H\nY S U BD V SRD V SRD V SRD V SRD V SRD V SRD V S R\nTable V. ADCCON3 SFR Bit Designations\nBit Location Bit Status Description\nADCCON3.7 BUSY The ADC busy status bit (BUSY) is a read-only status bit that is set during a valid ADC conversion\nor calibration cycle. BUSY is automatically cleared by the core at the end of conversion or calibration.\nADCCON3.6 RSVD ADCCON3.0–3.6 are reserved (RSVD) for internal use. These bits will read as “0” and should only\nADCCON3.5 RSVD be written as “0” by user software.\nADCCON3.4 RSVDADCCON3.3 RSVD\nADCCON3.2 RSVD\nADCCON3.1 RSVD\nADCCON3.0 RSVD\n G\nREV.ADuC812\n–15–Driving the ADC\nThe ADC incorporates a successive approximation (SAR) archi-\ntecture involving a charge-sampled input stage. Figure 7 shows\nthe equivalent circuit of the analog input section. Each ADC\nconversion is divided into two distinct phases as defined by theposition of the switches in Figure 7. During the sampling phase\n(with SW1 and SW2 in the “track” position), a charge propor-\ntional to the voltage on the analog input is developed across theinput sampling capacitor. During the conversion phase (with\nboth switches in the “hold” position), the capacitor DAC is\nadjusted via internal SAR logic until the voltage on node A is zero,\nindicating that the sampled charge on the input capacitor is\nbalanced out by the charge being output by the capacitor DAC.\nThe digital value finally contained in the SAR is then latchedout as the result of the ADC conversion. Control of the SAR,\nand timing of acquisition and sampling modes, is handled\nautomatically by built-in ADC control logic. Acquisition andconversion times are also fully configurable under user control.\nADuC812 TEMPERATURE\nSENSORADC0\nADC7\n200/H9024\nSW1\n2pF\nNODE A\nCOMP ARATORSW2\nHOLD TRACKTRACK\nHOLDCAP ACITOR\nDAC\nAGND\nFigure 7. Internal ADC Structure\nNote that whenever a new input channel is selected, a residualcharge from the 2 pF sampling capacitor places a transient on\nthe newly selected input. The signal source must be capable of\nrecovering from this transient before the sampling switches clickinto “hold” mode. Delays can be inserted in software (between\nchannel selection and conversion request) to account for input\nstage settling, but a hardware solution will alleviate this burden\nfrom the software design task and will ultimately result in a\ncleaner system implementation. One hardware solution would\nbe to choose a very fast settling op amp to drive each analog\ninput. Such an op amp would need to settle fully from a small\nsignal transient in less than 300 ns to guarantee adequate settling\nunder all software configurations. A better solution, recommendedfor use with any amplifier, is shown in Figure 8.\nThough at first glance the circuit in Figure 8 may look like a\nsimple antialiasing filter, it actually serves no such purpose since\nits corner frequency is well above the Nyquist frequency, even ata 200 kHz sample rate. Though the R/C does help to reject some\nincoming high frequency noise, its primary function is to ensure\nthat the transient demands of the ADC input stage are met. It\ndoes so by providing a capacitive bank from which the 2 pFADuC812\nADC01\n0.01/H9262F51/H9024\nFigure 8. Buffering Analog Inputs\nsampling capacitor can draw its charge. Since the 0.01 μF capacitor\nin Figure 8 is more than 4096 times the size of the 2 pF sampling\ncapacitor, its voltage will not change by more than one count \n(1/4096) of the 12-bit transfer function when the 2 pF chargefrom a previous channel is dumped onto it. A larger capacitor\ncan be used if desired, but not a larger resistor (for reasons\ndescribed below).\nThe Schottky diodes in Figure 8 may be necessary to limit the\nvoltage applied to the analog input pin as per the Absolute Maxi-\nmum Ratings. They are not necessary if the op amp is powered\nfrom the same supply as the ADuC812 since in that case, the\nop amp is unable to generate voltages above V\nDD or below ground.\nAn op amp is necessary unless the signal source is very low imped-\nance to begin with. DC leakage cur rents at the ADuC812’s analog\ninputs can cause measurable dc errors with external source imped-\nances of as little as 100 Ω. To ensure accu rate ADC operation,\nkeep the total source impedance at each analog input less than\n61Ω. The table below illustrates examples of how source\nimpedance can affect dc accuracy.\nSource Error from 1 /H9262A Error from 10 /H9262A\nImpedance Leakage Current Leakage Current\n61 Ω 61 μV = 0.1 LSB 610 μV = 1 LSB\n610 Ω 610 μV = 1 LSB 61 mV = 10 LSB\nAlthough Figure 8 shows the op amp operating at a gain of 1,\nyou can configure it for any gain needed. Also, you can use aninstrumentation amplifier in its place to condition differential\nsignals. Use any modern amplifier that is capable of delivering\nthe signal (0 to V\nREF) with minimal saturation. Some single- supply,\nrail-to-rail op amps that are useful for this purpose include, but\nare not limited to, the ones given in Table VI. Check Analog\nDevices literature (CD ROM data book, and so on) for details\nabout these and other op amps and instrumentation  amps.\nTable VI. Some Single-Supply Op Amps\nOp Amp Model Characteristics\nOP181/OP281/OP481 Micropower\nOP191/OP291/OP491 I/O Good up to V DD, Low Cost\nOP196/OP296/OP496 I/O to V DD, Micropower, Low Cost\nOP183/OP283 High Gain-Bandwidth Product\nOP162/OP262/OP462 High GBP, Micro Package\nAD820/AD822/AD824 FET Input, Low Cost\nAD823 FET Input, High GBP\nKeep in mind that the ADC’s transfer function is 0 V to V REF,\nand any signal range lost to amplifier saturation near ground willimpact dynamic range. Though the op amps in Table VI arecapable of delivering output signals very closely approaching\nground, no amplifier can deliver signals all the way to ground when\npowered by a single supply. Therefore, if a negative supply is\navailable, consider using it to power the front end amplifiers.\n G\nREV.ADuC812\n–16–However, be sure to include the Schottky diodes shown in\nFigure 8 (or at least the lower of the two diodes) to protect theanalog input from undervoltage conditions. To summarize this\nsection, use the circuit of Figure 8 to drive the analog input pins\nof the ADuC812.\nVoltage Reference Connections\nThe on-chip 2.5 V band gap voltage reference can be used as\nthe reference source for the ADC and DACs. To ensure the\naccuracy of the voltage reference, decouple both the V REF pin and\nthe C REF pin to ground with 0.1 μF ceramic chip capacitors as\nshown in Figure 9.\n0.1/H9262F\n0.1/H9262FVREF\nCREFBUFFER51/H9024 2.5V\nBAND GAP\nREFERENCEADuC812\nBUFFER\nFigure 9. Decoupling V REF and C REF\nThe internal voltage reference can also be tapped directly fromthe V\nREF pin, if desired, to drive external circuitry. However, a\nbuffer must be used to ensure that no current is drawn from theV\nREF pin itself. The voltage on the C REF pin is that of an internal\nnode within the buffer block, and its voltage is critical to ADC\nand DAC accuracy.  Do not connect anything to this pin except\nthe capacitor, and be sure to keep trace-lengths short on theC\nREF capacitor, decoupling the node straight to the underlying\nground plane.\nThe ADuC812 powers up with its internal voltage reference in the\n“off” state. The voltage reference turns on automatically whenever\nthe ADC or either DAC gets enabled in software. Once enabled,the voltage reference requires approximately 65 ms to power up\nand settle to its specified value. Be sure that your software allows\nthis time to elapse before initiating any conversions. If an externalvoltage reference is preferred, connect it to the V\nREF pin as shown\nin Figure 10 to overdrive the internal reference.\nTo ensure accurate ADC operation, the voltage applied to V REF\nmust be between 2.3 V and AV DD. In situations where analog\ninput signals are proportional to the power supply (such as some\nstrain gage applications), it may be desirable to connect the\nVREF pin directly to AV DD. In such a configuration, the user\nmust also connect the C REF pin directly to AV DD to circumvent\ninternal buffer headroom limitations. This allows the ADCinput transfer function to span the full range of 0 V to AV\nDD\naccurately.\nOperation of the ADC or DACs with a reference voltage below\n2.3 V, however, may incur loss of accuracy resulting in missing\ncodes or nonmonotonicity. For that reason, do not use a referencevoltage less than 2.3 V.VDD\nEXTERNAL\nVOLTAGE\nREFERENCE\nVREF\nCREFBUFFER51/H9024 2.5V\nBAND GAP\nREFERENCEADuC812\n0.1/H9262F\n0.1/H9262F\nFigure 10. Using an External Voltage Reference\nConfiguring the ADC\nThe three SFRs (ADCCON1, ADCCON2, ADCCON3) con-\nfigure the ADC. In nearly all cases, an acquisition time of one\nADC clock (ADCCON1.2 = 0, ADCCON1.3 = 0) will provideplenty of time for the ADuC812 to acquire its signal before\nswitching the internal track-and-hold amplifier into hold mode.\nThe only exception would be a high source impedance analoginput, but these should be buffered first anyway since source\nimpedances of greater than 610 Ω can cause dc errors as well.\nThe ADuC812’s successive approximation ADC is driven by a\ndivided down version of the master clock. To ensure adequateADC operation, this ADC clock must be between 400 kHz and\n4 MHz, and optimum performance is obtained with ADC clock\nbetween 400 kHz and 3 MHz. Frequencies within this range canbe achieved with master clock frequencies from 400 kHz to wellabove 16 MHz with the four ADC clock divide ratios to choose\nfrom. For example, with a 12 MHz master clock, set the ADC\nclock divide ratio to 4 (i.e., ADCCLK = MCLK/4 = 3 MHz) bysetting the appropriate bits in ADCCON1 (ADCCON1.5 = 1,\nADCCON1.4 = 0).\nThe total ADC conversion time is 15 ADC clocks, plus one\nADC clock for synchronization, plus the selected acquisitiontime (1, 2, 3, or 4 ADC clocks). For the example above, with a\none clock acquisition time, total conversion time is 17 ADC clocks\n(or 5.67 μs for a 3 MHz ADC clock).\nIn continuous conversion mode, a new conversion begins eachtime the previous one finishes. The sample rate is the inverse of the\ntotal conversion time described above. In the example above, the\ncontinuous conversion mode sample rate would be 176.5 kHz.\nADC DMA Mode\nThe on-chip ADC has been designed to run at a maximum\nconversion speed of 5 μs (200 kHz sampling rate). When con-\nverting at this rate, the ADuC812 MicroConverter has 5 μs toread the ADC result and store the result in memory for further\npostprocessing, otherwise the next ADC sample could be lost.\nIn an interrupt driven routine, the MicroConverter would alsohave to jump to the ADC Interrupt Service routine, which will\nalso increase the time required to store the ADC results. In\napplications where the ADuC812 cannot sustain the interruptrate, an ADC DMA mode is provided.\nTo enable DMA mode, Bit 6 in ADCCON2 (DMA) must be set.\nThis allows the ADC results to be written directly to a 16 MByte\nexternal static memory SRAM (mapped into data memory space)\n G\nREV.ADuC812\n–17–without any interaction from the ADuC812 core. This mode\nallows the ADuC812 to capture a contiguous sample stream atfull ADC update rates (200 kHz).\nDMA Mode Configuration Example\nTo set the ADuC812 into DMA mode, a number of steps mustbe followed.\n1. The ADC must be powered down by setting MD1 and MD0\nto 0 in ADCCON1.\n2. The DMA Address pointer must be set to the start address of\nwhere the ADC results are to be written. This is done by\nwriting to the DMA mode Address Pointers DMAL, DMAH,and DMAP. DMAL must be written to first, followed by\nDMAH, and then DMAP.\n3. The external memory must be preconfigured. This consists of\nwriting the required ADC channel IDs into the top four bits of\nevery second memory location in the external SRAM, starting\nat the first address specified by the DMA address pointer. As the\nADC DMA mode operates independently of the ADuC812core, it is necessary to provide it with a stop command. This is\ndone by duplicating the last channel ID to be converted, fol-\nlowed by “1111” into the next channel selection field. Figure 11shows a typical preconfiguration of external memory.\n1111\n0011\n0011\n100 0\n010 1\n001000000AH\n000000HSTOP COMMAND\nREPEAT LAST CHANNEL\nFOR A VALID STOPCONDITION\nCONVERT ADC CH#3\nCONVERT TEMP SENSOR\nCONVERT ADC CH#5\nCONVERT ADC CH#2\nFigure 11. Ty pical DMA External Memory Preconfiguration\n4. The DMA is initiated by writing to the ADC SFRs in the\nfollowing sequence.\na. ADCCON2 is written to enable the DMA mode, i.e.,\nMOV ADCCON2, #40H; DMA mode enabled.\nb. ADCCON1 is written to configure the conversion time and\npower-up of the ADC. It can also enable Timer 2 driven\nconversions or External Triggered conversions if required.\nc. ADC conversions are initiated by starting single/continuous\nconversions, starting Timer 2 running  for Timer 2 conver-\nsions, or by receiving an external trigger.\nWhen the DMA conversions are completed, the ADC interruptbit ADCI is set by hardware and the external SRAM contains the\nnew ADC conversion results as shown in Figure 12. It should be\nnoted that no result is written to the last two memory locations.\nWhen the DMA mode logic is active, it is responsible for storing\nthe ADC results away from both the user and ADuC812 core\nlogic. As it writes the results of the ADC conversions to external\nmemory, it takes over the external memory interface from the core.Thus, any core instructions that access the external memory\nwhile DMA mode is enabled will not gain access to it. The core\nwill execute the instructions and they will take the same time toexecute, but they will not gain access to the external memory.NO CONVERSION\nRESULT WRITTEN HERE\nCONVERSION RESULTFOR ADC CH#3\nCONVERSION RESULT\nFOR TEMP SENSOR\nCONVERSION RESULT\nFOR ADC CH#5\nCONVERSION RESULTFOR ADC CH#21111\n00110011\n100 0\n010 1\n001000000AH\n000000HSTOP COMMAND\nFigure 12. Typical External Memory Configuration Post\nADC DMA Operation\nThe DMA logic operates from the ADC clock and uses pipelining\nto perform the ADC conversions and access th e external memory\nat the same time. The time it takes to perform one ADC conver-\nsion is called a DMA cycle. The actions performed by the logic\nduring a typical DMA cycle are shown in Figure 13.\nWRITE ADC RESULT\nCONVERTED DURING\nPREVIOUS DMA CYCLEREAD CHANNEL ID\nTO BE CONVERTED DURING\nNEXT DMA CYCLECONVERT CHANNEL READ DURING PREVIOUS DMA CYCLE\nDMA CYCLE\nFigure 13. DMA Cycle\nFrom the previous diagram, it can be seen that during one DMA\ncycle the following actions are performed by the DMA logic.\n1. An ADC conversion is performed on the channel whose ID\nwas read during the previous cycle.\n2. The 12-bit result and the channel ID of the conversion per-\nformed in the previous cycle are written to the external memory.\n3. The ID of the next channel to be converted is read from\nexternal memory.\nFor the previous example, the complete flow of events is shown\nin Figure 13. Because the DMA logic uses pipelining, it takesthree cycles before the first correct result is written out.\nMicro Operation during ADC DMA Mode\nDuring ADC DMA mode, the MicroConverter core is free tocontinue code execution, including general housekeeping andcommunication tasks. However, it should be noted that MCU core\naccesses to Ports 0 and 2 (which are being used by the DMA\ncontroller) are gated OFF during ADC DMA mode of operation.This means that even though the instruction that accesses the\nexternal Ports 0 or 2 will appear to execute, no data will be seen\nat these external ports as a result.\nThe MicroConverter core can be configured with an interrupt\nto be triggered by the DMA controller when it has finished\nfilling the requested block of RAM with ADC results, allowing\nthe service routine for this interrupt to postprocess data withoutany real-time timing constraints.\nOffset and Gain Calibration Coefficients\nThe ADuC812 has two ADC calibration coefficients, one for offsetcalibration and one for gain calibration. Both the offset and gaincalibration coefficients are 14-bit words, located in the Special\nFunction Register (SFR) area. The offset calibration coefficient\nis divided into ADCOFSH (six bits) and ADCOFSL (eight bits),\n G\nREV.ADuC812\n–18–and the gain calibration coefficient is divided into ADCGAINH\n(six bits) and ADCGAINL ( eight bits). The offset calibration\ncoefficient com pensates for dc offset errors in both the ADC and\nthe input signal.\nIncreasing the offset coefficient compensates for positive offset,\nand effectively pushes the ADC transfer function DOWN. De-creasing the offset coefficient compensates for negative offset,\nand effectively pushes the ADC transfer function UP. The\nmaximum offset that can be compensated is typically ±5% ofV\nREF, which equates to typically ±125 mV with a 2.5 V reference.\nSimilarly, the gain calibration coefficient compensates for dc gain\nerrors in both the ADC and the input signal.\nIncreasing the gain coefficient compensates for a smaller analog\ninput signal range and scales the ADC transfer function UP,effectively increasing the slope of the transfer function. Decreasing\nthe gain coefficient compensates for a larger analog input signal\nrange and scales the ADC transfer function DOWN, effectivelydecreasing the slope of the transfer function. The maximum analog\ninput signal range for which the gain coefficient can compensate\nis 1.025 /H11003 V\nREF, and the minimum input range is 0.975 /H11003 VREF,\nwhich equates to ±2.5% of the reference voltage.\nCalibration\nEach ADuC812 is calibrated in the factory prior to shipping, andthe offset and gain calibration coefficients are stored in a hiddenarea of FLASH/EE memory. Each time the ADuC812 powers up,\nan internal power-on configuration routine copies these coefficients\ninto the offset and gain calibration registers in the SFR area.\nThe MicroConverter ADC accuracy may vary from system\nto system due to board layout, grounding, clock speed, and soon. To get the best ADC accuracy in your system, perform\nthe software calibration routine described in Application Note\nuC005, available from the MicroConverter homepage atwww.analog.com/microconverter.\nNONVOLATILE FLASH MEMORY\nFlash Memory Overview\nThe ADuC812 incorporates Flash memory technology on-chip\nto provide the user with a nonvolatile, in-circuit reprogrammable\ncode and data memory space.\nFlash/EE memory is a relatively new type of nonvolatile memory\ntechnology based on a single transistor cell architecture.\nThis technology is basically an outgrowth of EPROM technology\nand was developed in the late 1980s. Flash/EE memory takes the\nflexible in-circuit reprogrammable features of EEPROM andcombines them with the space efficient/density features of EPROM\n(see Figure 14).\nBecause Flash/EE technology is based on a single transistor cell\narchitecture, a Flash memory array, like EPROM, can be imple-mented to achieve the space efficiencies or memory densities\nrequired by a given design.\nLike EEPROM, Flash memory can be programmed in-system\nat a byte level, although it must first be erased in page blocks.Thus, Flash memory is often and more correctly referred to as\nFlash/EE memory.FLASH/EE MEMORY\nTECHNOLOGYSPACE EFFICIENT/\nDENSITYIN-CIRCUIT\nREPROGRAMMABLEEPROM\nTECHNOLOGYEEPROM\nTECHNOLOGY\nFigure 14. Flash Memory Development\nOverall, Flash/EE memory represents a step closer to the idealmemory device that includes nonvolatility, in-circuit programma-\nbility, high density, and low cost. Incorporated in the  ADuC812,\nFlash/EE memory technology allows the user to update program\ncode space in-circuit without replacing one-time programmable\n(OTP) devices at remote operating nodes.\nFlash/EE Memory and the ADuC812\nThe ADuC812 provides two arrays of Flash/EE memory for user\napplications. 8K bytes of Flash/EE program space are provided\non-chip to facilitate code execution without any external discreteROM device requirements. The program memory can be pro-\ngrammed using conventional third party memory programm ers.\nThis array can also be programmed in-circuit, using the serialdownload mode provided.\nA 640 byte Flash/EE data memory space is also provided on-chip\nas a general-purpose nonvolatile scratchpad area. User access to\nthis area is via a group of six SFRs.\nADuC812 Flash/EE Memory Reliability\nThe Flash/EE program and data memory arrays on the ADuC812\nare fully qualified for two key Flash/EE memory characteristics:\nFlash/EE Memory Cycling Endurance and Flash/EE Memory\nData Retention.\nEndurance quantifies the ability of the Flash/EE memory to be\ncycled through many program, read, and erase cycles. In real\nterms, a single endurance cycle is composed of four indepen dent\nsequential events:\na. Initial Page Erase Sequenceb. Read/Verify Sequence\nc. Byte Program Sequence\nd. Second Read/Verify Sequence\nIn reliability qualification, every byte in the program and data\nFlash/EE memory is cycled from 00H to FFH until the f irst fail is\nrecorded, signifying the endurance limit of the on- chip Flash/EE\nmemory.\nAs indicated in the Specification tables, the ADuC812 Flash/EE\nMemory Endurance qualification has been carried out in accor-\ndance with JEDEC Specification A117 over the industrial\ntemperature ranges of –40°C, +25°C, and +85°C. The results\nallow the specification of a minimum endurance figure over supply\nand temperature of 10,000 cycles, with an endur ance figure of\n50,000 cycles being typical of operation at 25°C.\nRetention quantifies the ability of the Flash/EE memory to retain\nits programmed data over time. Again, the ADuC812 has been\nqualified in accordance with the formal JEDEC Retention Lifetime\nSpecification (A117) at a specific junction temperature (T\nJ = 55°C).\nAs part of this qualification procedure, the Flash/EE memory is\ncycled to its specified endurance limit described above, before data\nretention is characterized. This means that the Flash/EE memoryis guaranteed to retain its data for its full specified retention\nlifetime every time the Flash/EE memory is reprogrammed.\n G\nREV.ADuC812\n–19–Using the Flash/EE Program Memory\nThis 8K byte Flash/EE program memory array is mapped\ninto the lower 8K bytes of the 64K bytes program space address-\nable by the ADuC812 and will be used to hold user code in\ntypical applications.\nThe program memory array can be programmed in one of\ntwo modes:\nSerial Downloading (In-Circuit Programming)\nAs part of its embedded download/debug kernel, the ADuC812facilitates serial c ode download via the standard UART serial port.\nSerial down load mode is automatically entered on power-up if the\nexternal pin PSEN  is pulled low through an external resistor as\nshown in Figure 15. Once in this mode, the user can download code\nto the p rogram memory array while the device is sited in its target\napplication hardware. A PC serial download executable is pro vided\nas part of the ADuC812 QuickStart development system.\nThe Serial Download protocol is detailed in a MicroConverter\nApplications Note uC004, available from the ADI MicroConverter\nwebsite at www.analog.com/micronverter.\n1k/H9024PSENADuC812PULL PSEN LOW DURING RESET TO\nCONFIGURE THE ADuC812 FOR\nSERIAL DOWNLOAD MODE\nFigure 15. Flash/EE Memory Serial Download Mode\nProgramming\nParallel Programming\nThe parallel programming mode is fully compatible with\nconventional third party Flash or EEPROM device programmers.\nIn this mode, Ports P0, P1, and P2 operate as the external dataand address bus interface, ALE operates as the Write Enable\nstrobe, and Port P3 is used as a general configuration port that\nconfigures the device for various program and erase operationsduring parallel programming.\nThe high voltage (12 V) supply required for Flash programming\nis generated using on-chip charge pumps to supply the high\nvoltage program lines.\nThe complete parallel programming specification is available on the\nMicroConverter homepage at www.analog.com/microconverter.U\nsing the Flash/EE Data Memory\nThe user Flash/EE data memory array consists of 640 bytes that\nare configured into 160 (Page 00H to Page 9FH) 4-byte pages,\nas shown in Figure 16.\n9FH BYTE 1 BYTE 2 BYTE 3 BYTE 4\n00H BYTE 1 BYTE 2 BYTE 3 BYTE 4\nFigure 16. User Flash/EE Memory Configuration\nAs with other ADuC812 user peripheral circuits, the interface to\nthis memory space is via a group of registers mapped in the SFR\nspace. A group of four data registers (EDATA1–4) is used to hold\nthe 4-byte page being accessed. EADRL is used to hold the 8-bitaddress of the page being accessed. Finally, ECON is an\n8-bit control register that may be written with one of five Flash/EE\nmemory access commands to trigger various read, write, erase,and verify functions. These register can be summarized as follows:\nECON: SFR Address B9H\nFunction Controls access to 640 bytes\nFlash/EE data space.\nDefault 00H\nEADRL: SFR Address C6H\nFunction Holds the Flash/EE data\npage address. 0H through 9FH\nDefault 00H\nEDATA1–4:\nSFR Address BCH to BFH, respectively\nFunction Holds the Flash/EE data\nmemory page write or page\nread data bytes.\nDefault EDATA1–4 ➝00H\nA block diagram of the SFR registered interface to the data\nFlash/EE memory array is shown in Figure 17.\n9FH BYTE 1 BYTE 2 BYTE 3 BYTE 4\n00HEDATA1 (BYTE 1)\nEDATA2 (BYTE 2)\nEDATA3 (BYTE 3)\nEDATA4 (BYTE 4)EADRL\nECON COMMAND\nINTERPRETER LOGIC\nECONBYTE 1 BYTE 2 BYTE 3 BYTE 4FUNCTION:\nHOLDS THE 8-BIT PAGE\nADDRESS POINTER\nFUNCTION:\nHOLDS COMMAND WORDFUNCTION:\nHOLDS THE 4-BYTE\n  PAGE WORD\nFUNCTION: INTERPRETS THE FLASH\nCOMMAND WORD\nFigure 17. User Flash/EE Memory Control and\nConfiguration\n G\nREV.ADuC812\n–20–ECON—Flash/EE Memory Control SFR\nThis SFR acts as a command interpreter and may be written\nwith one of five command modes to enable various read, pro-\ngram, and erase cycles as detailed in Table VII.\nTable VII. ECON—Flash/EE Memory Control Register\nCommand Modes\nCommand Byte Command Mode\n01H READ COMMAND\nResults in four bytes being read into\nEDATA1–4 from memory page address\ncontained in EADRL.\n02H PROGRAM COMMAND\nResults in four bytes (EDATA1–4) b eing\nwritten to mem ory page address in EADRL.\nThis write command assumes the desig nated\n“write” page has been pre-erased.\n03H RESERVED FOR INTERNAL USE\n03H should not be written to theECON SFR.\n04H VERIFY COMMAND\nAllows the user to verify if data in EDATA1–4\nis contained in page address designated by\nEADRL.\nA subsequent read of the ECON SFR will\nresult in a zero being read if the verificationis valid; a nonzero value will be read toindicate an invalid verification.\n05H ERASE COMMAND\nResults in an erase of the 4-byte page\ndesignated in EADRL.\n06H ERASE-ALL COMMAND\nResults in erase of the full Flash/EE data\nmemory 160-page (640 bytes) array.\n07H to FFH RESERVED COMMANDS\nCommands reserved for future use.\nFlash/EE Memory Timing\nThe typical program/erase times for the Flash/EE datamemory are:\nErase Full Array (640 Bytes) – 20 ms\nErase Single Page (4 Bytes) – 20 ms\nProgram Page (4 Bytes) – 250 μs\nRead Page (4 Bytes) – Within Single Instruction Cycle\nFlash/EE erase and program timing is derived from the master\nclock. When using a master clock frequency of 11.0592 MHz, it\nis not necessary to write to the ETIM registers at all. However,\nwhen operating at other master clock frequencies (f\nCLK), you\nmust change the values of ETIM1 and ETIM2 to avoid degrad-\ning data Flash/EE endurance and retention. ETIM1 and ETIM2form a 16-bit word, ETIM2 being the high byte and ETIM1 the\nlow byte. The value of this 16-bit word must be set as follows to\nensure optimum data Flash/EE endurance and retention.\nETIM2 , ETIM1  = 100 μs × f\nCLK\nETIM3 should always remain at its default value of 201 dec/C9 hex.Using the Flash/EE Memory Interface\nAs with all Flash/EE memory architectures, the array can be pro-grammed in system at a byte level, although it must be erased\nfirst, the erasure being performed in page blocks (4-byte pages\nin this case).\nA typical access to the Flash/EE array will involve setting up the\npage address to be accessed in the EADRL SFR, configuring the\nEDATA1–4 with data to be programmed to the array (the\nEDATA SFRs will not be written for read accesses), and finallywriting the ECON command word that initiates one of the six\nmodes shown in Table VII. It should be noted that a given\nmode of operation is initiated as soon as the command word iswritten to the ECON SFR. The core mi crocontroller operation\non the ADuC812 is idled until the requested Program/Read orErase mode is completed.\nIn practice, this means that even though the Flash/EE memory\nmode of operation is typically initiated with a two-machine cycle\nMOV instruction (to write to the ECON SFR), the next instruction\nwill not be executed until the Flash/EE operation is complete(250 μs or 20 ms later). This means that the core will not respond\nto Interrupt requests until the Flash/EE operation is complete,\nalthough the core peripheral functions like Counter/Timers willcontinue to count and time as configured throughout this pseudo-\nidle period.\nErase-All\nAlthough the 640-byte user Flash/EE array is shipped from the\nfactory pre-erased, i.e., byte locations set to FFH, it is nonetheless\ngood programming practice to include an erase-all routine as\npart of any configuration/setup code running on the ADuC812.An ERASE-ALL command consists of writing 06H to theECON SFR, which initiates an erase of all 640 byte locations in\nthe Flash/EE array. This command coded in 8051 assembly\nwould appear as:\nMOV ECON, #06H ; Erase all Command\n; 20 ms Duration\nProgram a Byte\nIn general terms, a byte in the Flash/EE array can only be pro-\ngrammed if it has previously been erased. To be more specific, a\nbyte can only be programmed if it already holds the value FFH.\nBecause of the Flash/EE architecture, this erasure must happenat a page level; therefore, a minimum of four bytes (1 page) will\nbe erased when an erase command is initiated. A more specific\nexample of the Program-Byte process is shown b elow. In this\nexample, the user writes F3H into the second byte on Page 03Hof the Flash/EE data memory space while preserving the o ther\nthree bytes already in this page. As the user is only required to\nmodify one of the page bytes, the full page must be first read so  that\nthis page can then be erased without the existing data being lost.\nThis example, coded in 8051 assembly, would appear as:\nMOV EADRL, #03H ; Set Page Address Pointer\nMOV ECON, #01H ; Read Page\nMOV EDATA2, #0F3H ; Write New Byte\nMOV ECON, #05H ; Erase PageMOV ECON, #02H ; Write Page (Program\n  Flash/EE)\n G\nREV.ADuC812\n–21–USER INTERFACE TO OTHER ON-CHIP ADuC812\nPERIPHERALS\nThe following section gives a brief overview of the various\nperipherals also available on-chip. A summary of the SFRs used\nto control and configure these peripherals is also given.\nDAC\nThe ADuC812 incorporates two 12-bit voltage output DACs\non-chip. Each has a rail-to-rail voltage output buffer capableof driving 10 k Ω/100 pF. Each has two selectable ranges, 0 V to\nVREF (the internal band gap 2.5 V reference) and 0 V to AV DD.\nEach can operate in 12-bit or 8-bit mode. Both DACs share a\ncontrol register, DACCON, and four data registers, DAC1H/L,\nDAC0H/L. It should be noted that in 12-bit asynchronous mode,the DAC voltage output will be updated as soon as the DACL\ndata SFR has been written; therefore, the DAC data registers\nshould be updated as DACH first, followed by DACL.\nE D O M1 G NR0 G NR1 R LC0 R LCC N YS1 DP0 D P\nTable VIII. DACCON SFR Bit Designations\nBit Name Description\n7 MODE The DAC MODE bit sets the overriding operating mode for both DACs.\nSet to “1” = 8-bit mode (Write eight Bits to DACxL SFR).Set to “0” = 12-bit mode.\n6 RNG1 DAC1 Range Select Bit.\nSet to “1” = DAC1 range 0–V\nDD.\nSet to “0” = DAC1 range 0–V REF.\n5 RNG0 DAC0 Range Select Bit.\nSet to “1” = DAC0 range 0–V DD.\nSet to “0” = DAC0 range 0–V REF.\n4 CLR1 DAC1 Clear Bit.\nSet to “0” = DAC1 output forced to 0 V.Set to “1” = DAC1 output normal.\n3 CLR0 DAC0 Clear Bit.\nSet to “0” = DAC1 output forced to 0 V.Set to “1” = DAC1 output normal.\n2 SYNC DAC0/1 Update Synchronization Bit.\nWhen set to “1” the DAC outputs update as soon as DACxL SFRs are written. The user cansimultaneously update both DACs by first updating the DACxL/H SFRs while SYNC is “0.” Both\nDACs will then update simultaneously when the SYNC bit is set to “1.”\n1 PD1 DAC1 Power-Down Bit.\nSet to “1” = Power-on DAC1.\nSet to “0” = Power-off DAC1.\n0 PD0 DAC0 Power-Down Bit.\nSet to “1” = Power-on DAC0.\nSet to “0” = Power-off DAC0.\nDACxH/L DAC Data Registers\nFunction DAC data registers, written by user to update the DAC output.\nSFR Address DAC0L (DAC0 Data Low Byte) ➝F9H; DAC1L (DAC1 data low byte) ➝FBH\nDAC0H (DAC0 Data High Byte) ➝FAH; DAC1H(DAC1 data high byte) ➝FCH\nPower-On Default Value 00H ➝All four registers\nBit Addressable No ➝All four registers\nThe 12-bit DAC data should be written into DACxH/L, right-justified such that DACL contains the lower eight bits, and the lowernibble of DACH contains the upper four bits.DAC Control\nDACCON Register\nSFR Address FDH\nPower-On Default Value 04H\nBit Addressable No\n G\nREV.ADuC812\n–22–Using the DAC\nThe on-chip DAC architecture consists of a resistor string DAC\nfollowed by an output buffer amplifier, the functional  equivalent\nof which is illustrated in Figure 18. Details of the actual DAC\narchitecture can be found in U.S. Patent Number 5969657\n(www.uspto.gov). Features of this architecture include  inherent\nguaranteed monotonicity and excellent differential linearity.\nADuC812AVDD\nVREFR\nR\nROUTPUT\nBUFFER\n8\nR\nRHIGH-Z\nDISABLE\n(FROM MCU)\nFigure 18. Resistor String DAC Functional Equivalent\nAs illustrated in Figure 18, the reference source for each DAC is\nuser selectable in software. It can be either AV DD or V REF.  In\n0-to-AV DD mode, the DAC output transfer function spans from\n0 V to the voltage at the AV DD pin. In 0-to-V REF mode, the\nDAC output transfer function spans from 0 V to the internal\nVREF, or if an external reference is applied, the voltage at the\nVREF pin. The DAC output buffer amplifier features a true rail-to-\nrail output stage implementation. This means that unloaded, each\noutput is capable of swinging to within less than 100 mV of both\nAVDD and ground. Moreover, the DAC’s linearity specifi cation\n(when driving a 10 k Ω resistive load to ground) is guaranteed\nthrough the full transfer function except  codes 0 to 48, and, in\n0-to-AV DD mode only, codes 3995 to 4095. Linearity degrada tion\nnear ground and V DD is caused by saturation of the output\namplifier, and a general representation of its effects (neglectingoffset and gain error) is illustrated in Figure 19. The dotted linein Figure 19 indicates the ideal transfer function, and the solid\nline represents what the transfer function might look like withendpoint nonlinearities due to saturation of the output amplifier. Note\nthat Figure 19 represents a transfer function in 0-to-V\nDD mode\nonly. In 0-to-V REF mode (with V REF < V DD) the lower nonlinearity\nwould be similar, but the upper portion of the transfer functionwould follow the “ideal” line right to the end (V\nREF in this case,\nnot V DD), showing no signs of endpoint linearity errors.VDD\nFFF HEX 000 HEXVDD – 50mV\nVDD – 100mV\n100mV\n50mV\n0mV\nFigure 19. Endpoint Nonlinearities Due to Amplifier\nSaturation\nThe endpoint nonlinearities conceptually illustrated in Figure 19\nget worse as a function of output loading. Most of the ADuC812’s\ndata sheet specifications assume a 10 k Ω resistive load to ground\nat the DAC output. As the output is forced to source or sinkmore current, the nonlinear regions at the top or bottom(respectively) of Figure 19 become larger. With larger current\ndemands, this can significantly limit output voltage swing.\nFigure 20 and Figure 21 illustrate this behavior. It should be noted\nthat the upper trace in each of these figures is only valid for an\noutput range selection of 0-to-AV DD. In 0-to-V REF mode, DAC\nloading will not cause high-side voltage drops as long as the\nreference voltage remains below the upper trace in the corre spond-\ning figure. For example, if AV DD = 3 V and V REF = 2.5 V, the\nhigh-side voltage will not be affected by loads less than 5 mA.But somewhere around 7 mA the upper curve in Figure 21 drops\nbelow 2.5 V (V\nREF), indicating that at these higher currents the\noutput will not be capable of reaching V REF.\nSOURCE/SINK CURRENT – mA5\n05 1 0 1 5OUTPUT VOLTAGE – V4\n3\n21\n0DAC LOADED WITH 0FFF HEX\nDAC LOADED WITH 0000 HEX\nFigure 20. Source and Sink Current Capability with\nVREF = V DD = 5 V\n G\nREV.ADuC812\n–23–SOURCE/SINK CURRENT – mA3\n05 1 0 1 5OUTPUT VOLTAGE – V2\n1\n0\nFigure 21. Source and Sink Current Capability with\nVREF = V DD = 3 V\nTo drive significant loads with the DAC outputs, external\nbuffering may be required, as illustrated in Figure 22.\n9ADuC812\n10\nFigure 22. Buffering the DAC Outputs\nThe DAC output buffer also features a high impedance disable\nfunction. In the chip’s default power-on state, both DACs are\ndisabled, and their outputs are in a high impedance state (or\n“three-state”) where they remain inactive until enabled in software.This means that if a zero output is desired during power-up or\npower-down transient conditions, then a pull-down resistor must\nbe added to each DAC output. Assuming this resistor is in place,the DAC outputs will remain at ground potential whenever theDAC is disabled. However, each DAC output will still spikebriefly when power is first applied to the chip, and again when\neach DAC is first enabled in software. Typical scope shots of\nthese spikes are given in Figure 23 and Figure 24, respectively.\n200/H9262s/DIV\nAVDD – 2V/DIV\nDAC OUT – 500mV/DIV\nFigure 23. DAC Output Spike at Chip Power-Up\ns/DIV, 1V/DIV/H92625\nFigure 24. DAC Output Spike at DAC Enable\n G\nREV.ADuC812\n–24–WATCHDOG TIMER\nThe purpose of the watchdog timer is to generate a device reset\nwithin a reasonable amount of time if the ADuC812 enters an\nerroneous state, possibly due to a programming error. The Watch-\ndog function can be disabled by clearing the WDE (Watchdog\nEnable) bit in the Watchdog Control (WDCON) SFR. When\nenabled, the watchdog circuit will generate a system reset if theuser program fails to set the watchdog timer refresh bits (WDR1,\nWDR2) within a predetermined amount of time (see PRE2–0bits in WDCON). The watchdog timer itself is a 16-bit counter.\nThe watchdog timeout interval can be adjusted via the PRE2–0 bits\nin WDCON. Full Control and Status of the watchdog timer functioncan be controlled via the watchdog timer control SFR (WDCON).\n2 E R P1 E RP0 E RP—1 R DW2 R DWS DWE D W\nTable IX. WDCON SFR Bit Designations\nBit Name Description\n7 PRE2 Watchdog Timer Prescale Bits.\n6 PRE1\n5 PRE0 PRE2 PRE1 PRE0 Timeout Period (ms)\n000 1 6\n001 3 2\n010 6 4011 1 2 8\n100 2 5 6\n101 5 1 21 1 0 1024\n1 1 1 2048\n4 — Not Used.\n3 WDR1 Watchdog Timer Refresh Bits. Set sequentially to refresh the watchdog timer.\n2 WDR2\n1 WDS Watchdog Status Bit.\nSet by the Watchdog Controller to indicate that a watchdog timeout has occurred.\nCleared by writing a “0” or by an external hardware reset. It is not cleared by a watchdog reset.\n0 WDE Watchdog Enable Bit.\nSet by user to enable the watchdog and clear its counters.Watchdog Timer\nWDCON Control Register\nSFR Address C0H\nPower-On Default Value 00HBit Addressable Yes\nExample\nTo set up the watchdog timer for a timeout period of 2048 ms,\nthe following code would be used:\nMOV WDCON,#0E0h ;2.048 second\n;timeout period\nSETB WDE ;enable watchdog timerTo prevent the watchdog timer from timing out, the timer\nrefresh bits need to be set before 2.048 seconds has elapsed.\nSETB WDR1 ;refresh watchdog timer..SETB WDR2 ; ..bits must be set in this\n;orderPOWER SUPPLY MONITOR\nAs its name suggests, the Power Supply Monitor, once enabled,\nmonitors both supplies (AV DD and DV DD) on the ADuC812. It\nwill indicate when either power supply drops below one of fiveuser selectable voltage trip points from 2.63 V to 4.63 V. For\ncorrect operation of the Power Supply Monitor function, AV DD\nmust be equal to or greater than 2.7 V. The Power SupplyMonitor function is controlled via the PSMCON SFR. If\nenabled via the IE2 SFR, the Power Supply Monitor will interrupt\nthe core using the PSMI bit in the PSMCON SFR. This bit will\nnot be cleared until the failing power supply has  returned\nabove the trip point for at least 256 ms. T his ensures that the\npower supply has fully settled before the bit is cleared. This\nmonitor function allows the user to save working registers to avoid\npossible data loss due to the low supply condition, and also en sures\nthat normal code execution will not resume until a safe supply\nlevel has been well established. The supply monitor is also\nprotected against spurious glitches triggering the interrupt circuit.\n G\nREV.ADuC812\n–25–Power Supply Monitor\nPSMCON Control Register\nSFR Address DFH\nPower-On Default Value DCH\nBit Addressable No\n—P MCI M SP2 PT1 PT0 PTF SPN E M S P\nTable X. PSMCON SFR Bit Designations\nBit Name Description\n7 — Not Used.\n6 CMP AVDD and DV DD Comparator Bit.\nThis is a read-only bit and directly reflects the state of the AV DD and DV DD comparators.\nRead “1” indicates that both the AV DD and DV DD supplies are above their selected trip points.\nRead “0” indicates that either the AV DD or DV DD supply is below its selected trip point.\n5 PSMI Power Supply Monitor Interrupt Bit.\nThis bit will be set high by the MicroConverter if CMP is low, indicating low analog or digital\nsupply. The PSMI bit can be used to interrupt the processor. Once CMPD and/or CMP return(and remain) high, a 256 ms counter is started. When this counter times out, the PSMI interrupt\nis cleared. PSMI can also be written by the user. However, if either comparator output is low,\nit is not possible for the user to clear PSMI.\n4 TP2 V\nDD Trip Point Selection Bits.\n3 TP1\n2 TP0 These bits select the AV DD and DV DD trip point voltage as follows:\nTP2 TP1 TP0 Selected DV DD Trip Point (V)\n0 0 0 4.630 0 1 4.37\n0 1 0 3.080 1 1 2.931 0 0 2.63\n1 PSF AV\nDD/DV DD Fault Indicator.\nRead “1” indicates that the AV DD supply caused the fault condition.\nRead “0” indicates that the DV DD supply caused the fault condition.\n0 PSMEN Power Supply Monitor Enable Bit.\nSet to “1” by the user to enable the Power Supply Monitor Circuit.\nCleared to “0” by the user to disable the Power Supply Monitor Circuit.\nExample\nTo configure the PSM for a trip point of 4.37 V, the followingcode would be used:MOV PSMCON,#005h ;enable PSM with\n;4.37V threshold\nSETB EA ;enable interruptsMOV IE2,#002h ;enable PSM\n;interrupt\nIf the supply voltage falls below this level, the PC would vectorto the ISR.\nORG 0043h ;PSM ISR\nCHECK:MOV A,PSMCON ;PSMCON.5 is the\n;PSM interrupt;bit..\nJB ACC.5,CHECK ;..it is cleared\n;only when Vdd;has remained;above the trip\n;point for 256ms\n;or more.\nRETI ; return only when "all\'s well"SERIAL PERIPHERAL INTERFACE\nThe ADuC812 integrates a complete hardware Serial PeripheralInterface (SPI) on-chip. SPI is an industry-standard synchronousserial interface that allows eight bits of data to be synchronously\ntransmitted and received simultaneously, i.e., full duplex. It should\nbe noted that the SPI pins are shared with the I\n2C interface, and\ntherefore the user can only enable one or the other interface at\nany given time (see SPE in Table XI ). The SPI Port can be con-\nfigured for Master or Slave operation and typically consists of\nfour pins, namely:\nMISO (Master In, Slave Out Data I/O Pin)\nThe MISO (master in, slave out) pin is configured as an inputline in master mode a nd an output line in slave mode. The\nMISO line on the master (data in) should be connected to the\nMISO line in the slave device (data out). The data is transferred\nas byte wide (8-bit) serial data, MSB first.\n G\nREV.ADuC812\n–26–MOSI (Master Out, Slave In Pin)\nThe MOSI (master out, slave in) pin is configured as an output\nline in master mode and an input line in slave mode. The\nMOSI line on the master (data out) should be connected to theMOSI line in the slave device (data in). The data is transferred asbyte wide (8-bit) serial data, MSB first.\nSCLOCK (Serial Clock I/O Pin)\nThe master serial clock (SCLOCK) is used to synchronize thedata being transmitted and received through the MOSI and MISOdata lines. A single data bit is transmitted and received in each\nSCLOCK period. Therefore, a byte is transmitted/received after\neight SCLOCK periods. The SCLOCK pin is configured as anoutput in master mode and as an input in slave mode. In master\nmode, the bit rate, polarity, and phase of the clock are con trolled\nby the CPOL, CPHA, SPR0, and SPR1 bits in the SPICON SFR\n(see Table XI). In slave mode, the SPICON register will have to\nbe configured with the phase and polarity (CPHA and CPOL) of\nthe expected input clock. In both master and slave modes, thedata is transmitted on one edge of the SCLOCK signal andsampled on the other. It is important therefore that the CPHA\nand CPOL are configured the same for the master and slave\ndevices.\nSS (Slave Select Input Pin)\nThe Slave Select ( SS) input pin is shared with the ADC5 input.\nTo configure this pin as a digital input, the bit must be cleared,\ne.g., CLR P1.5.\nThis line is active low. Data is only received or transmitted in\nslave mode when the SS pin is low, allowing the ADuC812 to\nbe used in single master, multislave SPI configurations. If\nCPHA = 1, then the SS input may be permanently pulled low.\nWith CPHA = 0, the SS input must be driven low before the\nfirst bit in a byte wide transmission or reception, and returnhigh again after the last bit in that byte wide transmission or\nreception. In SPI Slave mode, the logic level on the external SS\npin can be read via the SPR0 bit in the SPICON SFR. The follow-\ning SFR registers are used to control the SPI interface.\nSPI Control\nSPICON Register\nSFR Address F8H\nPower-On Default Value OOH\nBit Addressable Yes\nI P SIL O CWE PSM I PSL O PCA H PC1 R PS0 R P S\nTable XI. SPICON SFR Bit Designations\nBit Name Description\n7 ISPI SPI Interrupt Bit.\nSet by MicroConverter at the end of each SPI transfer.\nCleared directly by user code or indirectly by reading the SPIDAT SFR.\n6 WCOL Write Collision Error Bit.\nSet by MicroConverter if SPIDAT is written to while an SPI transfer is in progress.Cleared by user code.\n5 SPE SPI Interface Enable Bit.\nSet by user to enable the SPI interface.Cleared by user to enable I\n2C interface.\n4 SPIM SPI Master/Slave Mode Select Bit.\nSet by user to enable Master mode operation (SCLOCK is an output).Cleared by user to enable Slave mode operation (SCLOCK is an input).\n3 CPOL * Clock Polarity Select Bit.Set by user if SCLOCK idles high.Cleared by user if SCLOCK idles low.\n2 CPHA * Clock Phase Select Bit.Set by user if leading SCLOCK edge is to transmit data.Cleared by user if trailing SCLOCK edge is to transmit data.\n1 SPR1 SPI Bit Rate Select Bits.0 SPR0 These bits select the SCLOCK rate (bit rate) in Master mode as follows:\nSPR1 SPR0 Selected Bit Rate\n00 f\nOSC/4\n01 f OSC/8\n10 f OSC/32\n11 f OSC/64\nIn SPI Slave mode, i.e., SPIM = 0, the logic level on the external SS pin can be read\nvia the SPR0 bit.\n*The CPOL and CPHA bits should both contain the same values for master and slave devices.\n G\nREV.ADuC812\n–27–SPI Interface—Master Mode\nIn master mode, the SCLOCK pin is always an output and gener-\nates a bu rst of eight clocks whenever user code writes to the\nSPIDAT register. The SCLOCK bit rate is determined by SPR0and SPR1 in SPICON. It should also be noted that the SS pin\nis not used in master mode. If the ADuC812 needs to assert the\nSS pin on an external slave device, a Port digital output pin\nshould be used.\nIn master mode a byte transmission or reception is initiated by\na write to SPIDAT. Eight clock periods are generated via the\nSCLOCK pin and the SPIDAT byte being transmitted via MOSI.\nWith each SCLOCK period a data bit is also sampled viaMISO. After eight clocks, the transmitted byte will have been\ncompletely transmitted and the input byte will be waiting in\nthe input shift register. The ISPI flag will be set automatically\nand an interrupt will occur if enabled. The value in the shift\nregister will be latched into SPIDAT.\nSPI Interface—Slave Mode\nIn slave mode the SCLOCK is an input. The SS pin must also\nbe driven low externally during the byte communication.\nTransmission is also initiated by a write to SPIDAT. In slave mode,\na data bit is transmitted via MISO and a data bit is received via\nMOSI through each input SCLOCK period. After eight clocks,the transmitted byte will have been completely transmitted and\nthe input byte will be waiting in the input shift register. The\nISPI flag will be set automatically and an interrupt will occur\nif enabled. The value in the shift register will be latched into\nSPIDAT only when the transmission/reception of a byte has been\ncompleted. The end of transmission occurs after the eighthclock has been received if CPHA = 1, or when SS returns high\nif CPHA = 0.SPIDAT SPI Data Register\nFunction The SPIDAT SFR is written by the\nuser to transmit data over the SPI\ninterface or read by user code to read\ndata just received by the SPI interface.\nSFR Address F7H\nPower-On Default Value 00H\nBit Addressable No\nUsing the SPI Interface\nDepending on the configuration of the bits in the SPICON SFR\nshown in Table XI, the ADuC812 SPI interface will transmit or\nreceive data in a number of possible modes. Figure 25 shows allpossible ADuC812 SPI configurations and the timing relation ships\nand synchronization between the signals involved. Also shown inthis figure is the SPI interrupt bit (ISPI) and how it is triggeredat the end of each byte wide communication.\nMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSB?\nMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSB ?SCLOCK\n(CPOL = 1)\nSCLOCK\n(CPOL = 0)\nSS\nSAMPLE INPUT\nDATA OUTPUT\nISPI FLAG\nSAMPLE INPUT\nDATA OUTPUT\nISPI FLAG(CPHA = 1) (CPHA = 0)\nFigure 25. SPI Timing, All Modes\n G\nREV.ADuC812\n–28–I2CADD I2C Address Register\nFunction Holds the I2C peripheral address for\nthe part. It may be overwritten by\nthe user code. Application note uC001\nat www.analog.com/microconverter\ndescribes the format of the I2C\nstandard 7-bit address in detail.\nSFR Address 9BH\nPower-On Default Value 55HBit Addressable NoI2CDAT I\n2C Data Register\nFunction The I2CDAT SFR is written by the\nuser to transmit data over the I2C\ninterface or read by user code to readdata just received by the I\n2C interface.\nUser software should only accessI2CDAT once per interrupt cycle.\nSFR Address 9AHPower-On Default Value 00HBit Addressable NoO DME DMO CMI DMM C 2IS R C 2IX T C 2II C 2 I\nTable XII. I2CCON SFR Bit Designations\nBit Name Description\n7 MDO I2C Software Master Data Output Bit (Master Mode Only).\nThis data bit is used to implement a master I2C transmitter interface in software. Data written to\nthis bit will be output on the SDATA pin if the data output enable (MDE) bit is set.\n6 MDE I2C Software Master Data Output Enable Bit (Master Mode Only).\nSet by the user to enable the SDATA pin as an output (Tx). Cleared by the user to enable SDATApin as an input (Rx).\n5 MCO I\n2C Software Master Data Output Bit (Master Mode Only).\nThis data bit is used to implement a master I2C transmitter interface in software. Data written to\nthis bit will be output on the SCLOCK pin.\n4 MDI I2C Software Master Data Input Bit (Master Mode Only).\nThis data bit is used to implement a master I2C receiver interface in software. Data on the\nSDATA pin is latched into this bit on SCLOCK if the Data Output Enable (MDE) = 0.\n3 I2CM I2C Master/Slave Mode Bit.\nSet by user to enable I2C software master mode. Cleared by user to enable I2C hardware slave mode.\n2 I2CRS I2C Reset Bit (Slave Mode Only).\nSet by user to reset the I2C interface. Cleared by user for normal I2C operation.\n1 I2CTX I2C Direction Transfer Bit (Slave Mode Only).\nSet by the MicroConverter if the interface is transmitting. Cleared by the MicroConverter if the\ninterface is receiving.\n0 I2CI I2C Interrupt Bit (Slave Mode Only).\nSet by the MicroConverter after a byte has been transmitted or received. Cleared by user software.I2C* COMPATIBLE INTERFACE\nThe ADuC812 supports a 2-wire serial interface mode that is\nI2C compatible. The I2C compatible interface shares its pins with\nthe on-chip SPI interface and therefore the user can only enableone or the other interface at any given time (see SPE in Table IX).An application note describing the operation of this interface as\nimplemented is available from the MicroConverter website at\nwww.analog.com/microconverter. This interface can be configuredas a software master or hardware slave, and uses two pins in the\ninterface.SDATA Serial Data I/O Pin\nSCLOCK Serial Clock\nThree SFRs are used to control the I\n2C compatible interface.\nThese are described below:\nI2CCON I2C Control Register\nSFR Address E8H\nPower-On Default Value 00HBit Addressable Yes\n*Purchase of licensed I2C components of Analog Devices or one of its sublicensed Associated Companies conveys a license for the purchaser under the Phi lips\nI2C Patent Rights to use these components in an I2C system, provided that the system conforms to the I2C Standard Specification as defined by Philips.\n G\nREV.ADuC812\n–29–8051 COMPATIBLE ON-CHIP PERIPHERALS\nThis section gives a brief overview of the various secondary\nperipheral circuits that are also available to the user on-chip.\nThese remaining functions are fully 8051 compatible and arecontrolled via standard 8051 SFR bit definitions.\nParallel I/O Ports 0–3\nThe ADuC812 uses four input/output ports to exchange data withexternal devices. In addition to performing general-purpose I/O,some ports are capable of external memory operations; others\nare multiplexed with an alternate function for the peripheral\nfeatures on the device. In general, when a peripheral is enabled,that pin may not be used as a general-purpose I/O pin.\nPort 0 is an 8-bit, open-drain, bidirectional I/O port that is directly\ncontrolled via the P0 SFR (SFR address = 80H). Port 0 pins\nthat have 1s written to them via the Port 0 SFR will be configuredas open-drain and will therefore float. In that state, Port 0 pins can\nbe used as high impedance inputs. An external pull-up resistor\nwill be required on P ort 0 outputs to force a valid logic high\nlevel externally. Port 0 is also the multiplexed low order address\nand data bus during accesses to external program or data memory.In this application, it uses strong internal pull-ups when emitting 1s.\nPort 1 is also an 8-bit port directly controlled via the P1 SFR\n(SFR address = 90H). Port 1 is an input only port. Port 1 digital\noutput capability is not supported on this device. Port 1 pins can\nbe configured as digital inputs or analog inputs.\nBy (power-on) default these pins are configured as analog in puts,\ni.e., “1” written in the corresponding Port 1 register bit. To\nconfigure any of these pins as digital inputs, the user should write\na “0” to these port bits to configure the corresponding pin as a\nhigh impedance digital input.\nThese pins also have various secondary functions described in\nTable XIII.\nTable XIII. Port 1, Alternate Pin Functions\nPin Alternate Function\nP1.0 T2 (Timer/Counter 2 External Input)\nP1.1 T2EX (Timer/Counter 2 Capture/Reload Trigger)\nP1.5 SS (Slave Select for the SPI Interface)\nPort 2 is a bidirectional port with internal pull-up resistors directly\ncontrolled via the P2 SFR (SFR address = A0H). Port 2 pins\nthat have 1s written to them are pulled high by the internal pull-up\nresistors and, in that state, can be used as inputs. As inputs, Port\n2 pins being pulled externally low will source current because ofthe internal pull-up resistors. Port 2 emits the high orderaddress bytes during fetches from external program memory,\nand middle and high order address bytes during accesses to the\n24-bit external data memory space.Port 3 is a bidirectional port with internal pull-ups directlycontrolled via the P3 SFR (SFR address = B0H). Port 3 pinsthat have 1s written to them are pulled high by the internal pull-ups\nand, in that state, can be used as inputs. As inputs, Port 3 pins\nbeing pulled externally low will source current be cause of the internal\npull-ups. Port 3 pins also have various secondary functionsdescribed in Table XIV.\nTable XIV. Port 3, Alternate Pin Functions\nPin Alternate Function\nP3.0 RxD (UART Input Pin)\n(or Serial Data I/O in Mode 0)\nP3.1 TxD (UART Output Pin)\n(or Serial Clock Output in Mode 0)\nP3.2 INT0  (External Interrupt 0)\nP3.3 INT1  (External Interrupt 1)\nP3.4 T0 (Timer/Counter 0 External Input)\nP3.5 T1 (Timer/Counter 1 External Input)P3.6 WR (External Data Memory Write Strobe)\nP3.7 RD (External Data Memory Read Strobe)\nThe alternate functions of P1.0, P1.1, P1.5, and Port 3 pinscan be activated only if the corresponding bit latch in the P1\nand P3 SFRs  contains a 1. Otherwise, the port pin is stuck at 0.\nTimers/Counters\nThe ADuC812 has three 16-bit Timer/Counters: Timer 0,Timer 1, and Timer 2. The Timer/Counter hardware has beenincluded on-chip to relieve the processor core of the overhead\ninherent in implementing timer/counter functionality in software.\nEach Timer/Counter consists of two 8-bit registers, THx andTLx (x = 0, 1, and 2). All three can be configured to operate\neither as timers or event counters.\nIn Timer function, the TLx register is incremented every machine\ncycle. Thus, think of it as counting machine cycles. Since amachine cycle consists of 12 core clock periods, the maximum\ncount rate is 1/12 of the core clock frequency.\nIn Counter function, the TLx register is incremented by a 1-to-0\ntransition at its corresponding external input pin, T0, T1, or T2.In this function, the external input is sampled during S5P2 of\nevery machine cycle. When the samples show a high in one cycle and\na low in the next cycle, the count is incremented. The new countvalue appears in the register during S3P1 of the cycle following the\none in which the transition was detected. Since it takes two machine\ncycles (24 core clock periods) to recognize a 1-to-0 transition,the maximum count rate is 1/24 of the core clock frequency.\nThere are no restrictions on the duty cycle of the external input\nsignal, but to ensure that a given level is sampled at least oncebefore it changes, it must be held for a minimum of one full\nmachine cycle.\n G\nREV.ADuC812\n–30–Table XV. TMOD SFR Bit Designations\nBit Name Description\n7 Gate Timer 1 Gating Control.\nSet by software to enable Timer/Counter 1 only while INT1 pin is high and TR1 control bit is set.\nCleared by software to enable Timer 1 whenever TR1 control bit is set.\n6 C/T Timer 1 Timer or Counter Select Bit.\nSet by software to select counter operation (input from T1 pin).\nCleared by software to select timer operation (input from internal system clock).\n5 M1 Timer 1 Mode Select Bit 1 (used with M0 Bit).\n4 M0 Timer 1 Mode Select Bit 0.\nM1 M0\n0 0 TH1 operates as an 8-bit timer/counter. TL1 serves as 5-bit prescaler.0 1 16-Bit Timer/Counter. TH1 and TL1 are cascaded; there is no prescaler.\n1 0 8-Bit Autoreload Timer/Counter. TH1 holds a value that is to be\nreloaded into TL1 each time it overflows.\n1 1 Timer/Counter 1 Stopped.\n3 Gate Timer 0 Gating Control.\nSet by software to enable Timer/Counter 0 only while INT0 pin is high and TR0 control bit is set.\nCleared by software to enable Timer 0 whenever TR0 control bit is set.\n2 C/T Timer 0 Timer or Counter Select Bit.\nSet by software to select counter operation (input from T0 pin).\nCleared by software to select timer operation (input from internal system clock).\n1 M1 Timer 0 Mode Select Bit 1.\n0 M0 Timer 0 Mode Select Bit 0.\nM1 M0\n0 0 TH0 operates as an 8-bit timer/counter. TL0 serves as 5-bit prescaler.\n0 1 16-Bit Timer/Counter. TH0 and TL0 are cascaded; there is no prescaler.1 0 8-Bit Autoreload Timer/Counter. TH0 holds a value that is to be\nreloaded into TL0 each time it overflows.\n1 1 TL0 is an 8-bit timer/counter controlled by the standard timer 0 control\nbits. TH0 is an 8-bit timer only, controlled by Timer 1 control bits.User configuration and control of all Timer operating modes is achieved via three SFRs:\nTMOD, TCON Control and configuration for Timers 0 and 1.T2CON Control and configuration for Timer 2.\nTimer/Counter 0 and\nTMOD 1 Mode Register\nSFR Address 89H\nPower-On Default Value 00H\nBit Addressable No\ne t aGT /C1 M0 Me t aGT /C1 M0 M\n G\nREV.ADuC812\n–31–*These bits are not used in the control of Timer/Counter 0 and 1, but are used instead in the control and monitoring of the external INT0  and INT1  interrupt pins.\nTable XVI. TCON SFR Bit Designations\nBit Name Description\n7 TF1 Timer 1 Overflow Flag.\nSet by hardware on a Timer/Counter 1 overflow.\nCleared by hardware when the Program Counter (PC) vectors to the interrupt service routine.\n6 TR1 Timer 1 Run Control Bit.\nSet by user to turn on Timer/Counter 1.Cleared by user to turn off Timer/Counter 1.\n5 TF0 Timer 0 Overflow Flag.\nSet by hardware on a Timer/Counter 0 overflow.Cleared by hardware when the PC vectors to the interrupt service routine.\n4 TR0 Timer 0 Run Control Bit.\nSet by user to turn on Timer/Counter 0.Cleared by user to turn off Timer/Counter 0.\n3 IE1 External Interrupt 1 ( INT1 ) Flag.\nSet by hardware by a falling edge or zero level being applied to external interrupt pin INT1 ,\ndepending on bit IT1 state.\nCleared by hardware when the when the PC vectors to the interrupt service routine only if the\ninterrupt was transition-activated. If level-activated, the external requesting source controls therequest flag, rather than the on-chip hardware.\n2 IT1 External Interrupt 1 (IE1) Trigger Type.\nSet by software to specify edge-sensitive detection (i.e., 1-to-0 transition).Cleared by software to specify level-sensitive detection (i.e., zero level).\n1 IE0 External Interrupt 0 ( INT0 ) Flag.\nSet by hardware by a falling edge or zero level being applied to external interrupt pin INT0 ,\ndepending on bit IT0 state.Cleared by hardware when the PC vectors to the interrupt service routine only if the interrupt\nwas transition activated. If level activated, the external requesting source controls the request flag,\nrather than the on-chip hardware.\n0 IT0 External Interrupt 0 (IE0) Trigger Type.\nSet by software to specify edge-sensitive detection (i.e., 1-to-0 transition).\nCleared by software to specify level-sensitive detection (i.e., zero level).\nTimer/Counters 0 and 1 Data Registers\nEach timer consists of two 8-bit registers. These can be used asindependent registers or combined to be a single 16-bit registerdepending on the timer mode configuration.\nTH0 and TL0\nTimer 0 high byte and low byte.SFR Address = 8CH, 8AH, respectively.\nTH1 and TL1\nTimer 1 high byte and low byte.\nSFR Address = 8DH, 8BH, respectively.Timer/Counter 0 and\nTCON 1 Control Register\nSFR Address 88H\nPower-On Default Value 00H\nBit Addressable Yes\n1 FT1 RT0 FT0 RT1 E I* 1 T I* 0 E I* 0 T I*\n G\nREV.ADuC812\n–32–Mode 2 (8-Bit Timer/Counter with Auto Reload)\nMode 2 configures the timer register as an 8-bit counter (TL0)\nwith automatic reload, as shown in Figure 28. Overflow from TL0\nnot only sets TF0, but also reloads TL0 with the contents of TH0,\nwhich is preset by software. The reload leaves TH0 unchanged.\n/H1154812CORE\nCLK\nTF0\nCONTROLP3.4/T0TL0\n(8 BITS)INTERRUPTC/T = 0\nC/T = 1\nRELOAD\nTH0\n(8 BITS)GATE\nP3.2/INT0TR0\nFigure 28. Timer/Counter 0, Mode 2\nMode 3 (Two 8-Bit Timer/Counters)\nMode 3 has different effects on Timer 0 and Timer 1. Timer 1 in\nMode 3 simply holds its count. The effect is the same as setting\nTR1 = 0. Timer 0 in Mode 3 establishes TL0 and TH0 as two\nseparate counters. This configuration is shown in Figure 29.TL0 uses the Timer 0 control bits: C/T, Gate, TR0, INT0 , and\nTF0. TH0 is locked into a timer function (counting machinecycles) and takes over the use of TR1 and TF1 from Timer 1.Thus, TH0 now controls the Timer 1 interrupt. Mode 3 is\nprovided for applications requiring an extra 8-bit timer or counter.\nWhen Timer 0 is in Mode 3, Timer 1 can be turned on and off by\nswitching it out of, and into, its own Mode 3, or can still be used\nby the serial interface as a baud rate generator . In fact, it can be used\nin any application not requiring an interrupt from Timer 1 itself.\n/H1154812CORE\nCLK\nTL0\n(8 BITS)TF0INTERRUPT\nCONTROLP3.4/T0C/T = 0\nC/T = 1\nTH0\n(8 BITS)CORE\nCLK/12\nTR1CORE\nCLK/12\nCONTROLGATE\nP3.2/INT0TR0\nTF1INTERRUPT\nFigure 29. Timer/Counter 0, Mode 3TIMER/COUNTERS 0 AND 1 OPERATING MODES\nThe following paragraphs describe the operating modes for\nTimer/Counters 0 and 1. Unless otherwise noted, it should be\nassumed that these modes of operation are the same for Timer 0\nas for Timer 1.\nMode 0 (13-Bit Timer/Counter)\nMode 0 configures an 8-bit timer/counter with a divide-by-32prescaler. Figure 26 shows Mode 0 operation.\n/H1154812CORE\nCLK\nP3.4/T0\nGATE\nP3.2/INT0TR0TF0\nCONTROLTL0\n(5 BITS)TH0\n(8 BITS)INTERRUPTC/T = 0\nC/T = 1\nFigure 26. Timer/Counter 0, Mode 0\nIn this mode, the timer register is configured as a 13-bit register. As\nthe count rolls over from all 1s to all 0s, it sets the timer overflow\nflag TF0. The overflow flag, TF0, can then be used to request\nan interrupt. The counted input is enabled to the timer whenTR0 = 1 and either Gate = 0 or INT0  = 1. Setting Gate = 1 allows\nthe timer to be controlled by external input INT0  to facilitate\npulsewidth measurements. TR0 is a control bit in the specialfunction register TCON; Gate is in TMOD. The 13-bit registerconsists of all eight bits of TH0 and the lower five bits of TL0.\nThe upper three bits of TL0 are indeterminate and should be\nignored. Setting the run flag (TR0) does not clear the registers.\nMode 1 (16-Bit Timer/Counter)\nMode 1 is the same as Mode 0, except that the timer register is\nrunning with all 16 bits. Mode 1 is shown in Figure 27.\n/H1154812CORE\nCLK\nTF0\nCONTROLP3.4/T0TL0\n(8 BITS)TH0\n(8 BITS)INTERRUPTC/T = 0\nC/T = 1\nGATE\nP3.2/INT0TR0\nFigure 27. Timer/Counter 0, Mode 1\n G\nREV.ADuC812\n–33–Timer/Counter 2\nT2CON Control Register\nSFR Address C8H\nPower-On Default Value 00H\nBit Addressable Yes\n2 FT2 F XEK L CRK L CT2 N E X E2 RT2 T NC2 P A C\nTable XVII. T2CON SFR Bit Designations\nBit Name Description\n7 TF2 Timer 2 Overflow Flag.\nSet by hardware on a Timer 2 overflow. TF2 will not be set when either RCLK = 1 or TCLK = 1.\nCleared by user software.\n6 EXF2 Timer 2 External Flag.\nSet by hardware when either a capture or reload is caused by a negative transition on T2EX andEXEN2 = 1.Cleared by user software.\n5 RCLK Receive Clock Enable Bit.\nSet by user to enable the serial port to use Timer 2 overflow pulses for its receive clock in serial port\nModes 1 and 3.\nCleared by user to enable Timer 1 overflow to be used for the receive clock.\n4 TCLK Transmit Clock Enable Bit.\nSet by user to enable the serial port to use Timer 2 overflow pulses for its transmit clock in serialport Modes 1 and 3.\nCleared by user to enable Timer 1 overflow to be used for the transmit clock.\n3 EXEN2 Timer 2 External Enable Flag.\nSet by user to enable a capture or reload to occur as a result of a negative transition on T2EX ifTimer 2 is not being used to clock the serial port.Cleared by user for Timer 2 to ignore events at T2EX.\n2 TR2 Timer 2 Start/Stop Control Bit.\nSet by user to start Timer 2.Cleared by user to stop Timer 2.\n1 CNT2 Timer 2 Timer or Counter Function Select Bit.\nSet by the user to select counter function (input from external T2 pin).Cleared by the user to select timer function (input from on-chip core clock).\n0 CAP2 Timer 2 Capture/Reload Select Bit.\nSet by user to enable captures on negative transitions at T2EX if EXEN2 = 1.Cleared by user to enable autoreloads with Timer 2 overflows or negative transitions at T2EX\nwhen EXEN2 = 1. When either RCLK = 1 or TCLK = 1, this bit is ignored and the timer is\nforced to autoreload on Timer 2 overflow.\nTimer/Counter 2 Data Registers\nTimer/Counter 2 also has two pairs of 8-bit data registersassociated with it. These are used as both timer data registers\nand timer capture/reload registers.\nTH2 and TL2\nTimer 2, data high byte and low byte.\nSFR Address = CDH, CCH, respectively.\nRCAP2H and RCAP2L\nTimer 2, Capture/Reload high byte and low byte.\nSFR Address = CBH, CAH, respectively.\n G\nREV.ADuC812\n–34–Timer/Counter Operation Modes\nThe following paragraphs describe the operating modes for\nTimer/ Counter 2. The operating modes are selected by bits in the\nT2CON SFR as shown in Table XVIII.\nTable XVIII. TIMECON SFR Bit Designations\nRCLK (or) TCLK CAP2 TR2 MODE\n0 0 1 16-Bit Autoreload\n0 1 1 16-Bit Capture\n1 X 1 Baud Rate\nX X 0 OFF\n16-Bit Autoreload Mode\nIn Autoreload mode, there are two options, which are selected bybit EXEN2 in T2CON. If EXEN2 = 0, then when Timer 2 rollsover, it not only sets TF2 but also causes the Timer 2 registers to\nreload with the 16-bit value in registers RCAP2L and RCAP2H,\nwhich are preset by software. If EXEN2 = 1 then Timer 2 stillperforms the above, but with the added feature that a 1-to-0\ntransition at external input T2EX will also trigger the 16-bit reload\nand set EXF2. The Autoreload mode is illustrated in Figure 30.16-Bit Capture Mode\nIn the Capture mode, there are again two options, which areselected by bit EXEN2 in T2CON. If EXEN2 = 0, then Timer 2\nis a 16-bit timer or counter that, upon overflowing, sets bit TF2,\nthe Timer 2 overflow bit, that can be used to generate an inter-rupt. If EXEN2 = 1, then Timer 2 still performs the above, but\na l-to-0 transition on external input T2EX causes the current\nvalue in the Timer 2 registers, TL2 and TH2, to be captured intoregisters RCAP2L and RCAP2H, respectively. In addition, the\ntransition at T2EX causes bit EXF2 in T2CON to be set, and\nEXF2, like TF2, can generate an interrupt. The Capture modeis illustrated in Figure 31.\nThe baud rate generator mode is selected by RCLK = 1 and/or\nTCLK = 1.\nIn either case, if Timer 2 is being used to generate the baud rate,\nthe TF2 interrupt flag will not occur. Therefore Timer 2 inter-rupts will not occur, so they do not have to be disabled. In this\nmode however, the EXF2 flag can still cause interrupts and this\ncan be used as a third external interrupt.\nBaud rate generation will be described as part of the UART\nserial port operation in the following pages.\nCORE\nCLK12\nT2\nPINC/T2 = 0\nC/T2 = 1\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nTF2\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2H\nFigure 30. Timer/Counter 2, 16-Bit Autoreload Mode\nTF2CORE\nCLK12\nT2\nPIN\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nCAPTURE\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2HC/T2 = 0\nC/T2 = 1\nFigure 31. Timer/Counter 2, 16-Bit Capture Mode\n G\nREV.ADuC812\n–35–UART SERIAL INTERFACE\nThe serial port is full-duplex, meaning it can transmit and receive\nsimultaneously. It is also receive-buffered, meaning it can begin\nreceiving a second byte before a previously received byte has been\nread from the receive register. However, if the first byte still has\nnot been read by the time reception of the second byte is com-\nplete, the first byte will be lost. The physical in terface to the\nserial data network is via Pins RXD(P3.0) and TXD(P3.1)while the SFR interface to the UART is comprised of SBUF\nand SCON, as described below.\nSBUF\nThe serial port receive and transmit registers are both accessed\nthrough the SBUF SFR (SFR address = 99H). W riting to\nSBUF loads the transmit register and reading SBUF accesses a\nphysically separate receive register.\nUART Serial Port\nSCON Control Register\nSFR Address 98H\nPower-On Default Value 00HBit Addressable Yes\n0 MS1 MS2 MSN ER8 BT8 BRI TI R\nTable XIX. SCON SFR Bit Designations\nBit Name Description\n7 SM0 UART Serial Mode Select Bits.\n6 SM1 These bits select the Serial Port operating mode as follows:\nSM0 SM1 Selected Operating Mode0 0 Mode 0: Shift Register, fixed baud rate (Core_Clk/2)0 1 Mode 1: 8-bit UART, variable baud rate\n1 0 Mode 2: 9-bit UART, fixed baud rate (Core_Clk/64) or (Core_Clk/32)\n1 1 Mode 3: 9-bit UART, variable baud rate\n5 SM2 Multiprocessor Communication Enable Bit.\nEnables multiprocessor communication in Modes 2 and 3. In Mode 0, SM2 should be cleared.In Mode 1, if SM2 is set, RI will not be activated if a valid stop bit was not received. If SM2 is\ncleared, RI will be set as soon as the byte of data has been received. In Modes 2 or 3, if SM2 isset, RI will not be activated if the received ninth data bit in RB8 is 0. If SM2 is cleared, RI will\nbe set as soon as the byte of data has been received.\n4 REN Serial Port Receive Enable Bit.\nSet by user software to enable serial port reception.Cleared by user software to disable serial port reception.\n3 TB8 Serial Port Transmit (Bit 9).\nThe data loaded into TB8 will be the ninth data bit that will be transmitted in Modes 2 and 3.\n2 RB8 Serial Port Receiver Bit 9.\nThe ninth data bit received in Modes 2 and 3 is latched into RB8. For Mode 1, the stop bit is\nlatched into RB8.\n1 TI Serial Port Transmit Interrupt Flag.\nSet by hardware at the end of the eighth bit in Mode 0, or at the beginning of the stop bit inModes 1, 2, and 3. TI must be cleared by user software.\n0 RI Serial Port Receive Interrupt Flag.\nSet by hardware at the end of the eighth bit in Mode 0, or halfway through the stop bit in\nModes 1, 2, and 3. RI must be cleared by software.\n G\nREV.ADuC812\n–36–Mode 0 (8-Bit Shift Register Mode)\nMode 0 is selected by clearing both the SM0 and SM1 bits in the\nSFR SCON. Serial data enters and exits through RxD. TxD\noutputs the shift clock. Eight data bits are transmitted or received.\nTransmission is initiated by any instruction that writes to  SBUF.\nThe data is shifted out of the RxD line. The eight bits are\ntransmit ted with the least significant bit (LSB) first, as shown\nin Figure 32.\nCORE\nCLK\nALE\nRxD\n(DATA OUT)\nTxD\n(SHIFT\nCLOCK)DATA BIT 0 DATA BIT 1 DATA BIT 6 DATA BIT 7S6 S5 S4 S3 S2 S1 S6 S5 S4 S4 S3 S2 S1 S6 S5 S4 S3 S2 S1MACHINE\nCYCLE 8MACHINE\nCYCLE 7MACHINE\nCYCLE 2MACHINE\nCYCLE 1\nFigure 32. UART Serial Port Transmission, Mode 0\nReception is initiated when the receive enable bit (REN) is 1 and\nthe receive interrupt bit (RI) is 0. When RI is cleared, the datais clocked into the RxD line and the clock pulses are output\nfrom the TxD line.\nMode 1 (8-Bit UART, Variable Baud Rate)\nMode 1 is selected by clearing SM0 and setting SM1. Each data\nbyte (LSB first) is preceded by a start bit (0) and followed by a\nstop bit (1). Therefore 10 bits are transmitted on TxD or received\non RxD. The baud rate is set by the Timer 1 or Timer 2 overflowrate, or a combination of the two (one for transmission and theother for reception).\nTransmission is initiated by writing to SBUF. The “write to SBUF”\nsignal also loads a 1 (stop bit) into the ninth bit position of the\ntransmit shift register. The data is output bit by bit until the stopbit appears on TxD and the transmit interrupt flag (TI) is auto-\nmatically set, as shown in Figure 33.\nTxD\nTI\n(SCON.1)START\nBITD0 D1 D2 D3 D4 D5 D6 D7STOP BIT\nSET INTERRUPT\ni.e., READY FOR MORE DATA\nFigure 33. UART Serial Port Transmission, Mode 0\nReception is initiated when a 1-to-0 transition is detected on\nRxD. Assuming a valid start bit was detected, character reception\ncontinues. The start bit is skipped and the eight data bits areclocked into the serial port shift register. When all eight bits have\nbeen clocked in, the following events occur:\n  The eight bits in the receive shift register are latched into SBUF.\n  The ninth bit (Stop bit) is clocked into RB8 in SCON.\n  The Receiver interrupt flag (RI) is set.\nThis will be the case if, and only if, the following conditions are\nmet at the time the final shift pulse is generated:\n  RI = 0, and\n  Either SM2 = 0 or SM2 = 1 and the received stop bit = 1.\nIf either of these conditions is not met, the received frame is\nirretrievably lost, and RI is not set.Mode 2 (9-Bit UART with Fixed Baud Rate)\nMode 2 is selected by setting SM0 and clearing SM1. In thismode, the UART operates in 9-bit mode with a fixed baud rate.\nThe baud rate is fixed at Core_Clk/64 by default, although by\nsetting the SMOD bit in PCON, the frequency can be doubled toCore_Clk/32. Eleven bits are transmitted or received, a start\nbit (0), eight data bits, a programmable ninth bit, and a stop bit\n(1). The ninth bit is most often used as a parity bit, although it\ncan be used for anything, including a ninth data bit if required.\nTo transmit, the eight data bits must be written into SBUF. The\nninth bit must be written to TB8 in SCON. When transmission is\ninitiated, the eight data bits (from SBUF) are loaded onto thetransmit shift register (LSB first). The contents of TB8 are loaded\ninto the ninth bit position of the transmit shift register. The trans-\nmission will start at the next valid baud rate clock. The TI flagis set as soon as the stop bit appears on TxD.\nReception for Mode 2 is similar to that of Mode 1. The eight\ndata bytes are input at RxD (LSB first) and loaded onto the\nreceive shift register. When all eight bits have been clocked in,the following events occur:\n The eight bits in the receive shift register are latched into SBUF.\nThe ninth data bit is latched into RB8 in SCON.\nThe Receiver interrupt flag (RI) is set.\nThis will be the case if, and only if, the following conditions are\nmet at the time the final shift pulse is generated:\nRI = 0, and\nEither SM2 = 0, or SM2 = 1 and the received stop bit = 1.\nIf either of these conditions is not met, the received frame isirretrievably lost, and RI is not set.\nMode 3 (9-Bit UART with Variable Baud Rate)\nMode 3 is selected by setting both SM0 and SM1. In this mode\nthe 8051 UART serial port operates in 9-bit mode with a vari able\nbaud rate determined by either Timer 1 or Timer 2. The opera-\ntion of the 9-bit UART is the same as for Mode 2, but the baud\nrate can be varied as for Mode 1.\nIn all four modes, transmission is initiated by any instruction\nthat uses SBUF as a destination register. Reception is initiated in\nMode 0 by the condition RI = 0 and REN = 1. Reception is\ninitiated in the other modes by the incoming start bit if REN = 1.\nUART Serial Port Baud Rate Generation\nMode 0 Baud Rate Generation\nThe baud rate in Mode 0 is fixed:\n  Mode Baud Rate Core Clock Frequency 01 2 =()\nMode 2 Baud Rate Generation\nThe baud rate in Mode 2 depends on the value of the SMOD bit\nin the PCON SFR. If SMOD = 0, the baud rate is 1/64 of the core\nclock. If SMOD = 1, the baud rate is 1/32 of the core clock:\n  Mode Baud Rate Core Clock FrequencySMOD22 6 4 =() ×()\nMode 1 and 3 Baud Rate Generation\nThe baud rates in Modes 1 and 3 are determined by the overflow\nrate in Timer 1 or Timer 2, or both (one for transmit and theother for receive).\n G\nREV.ADuC812\n–37–Timer 1 Generated Baud Rates\nWhen Timer 1 is used as the baud rate generator, the baud rates\nin Modes 1 and 3 are determined by the Timer 1 overflow rate and\nthe value of SMOD as follows:\nThe Timer 1 interrupt should be disabled in this application.\nThe timer itself can be configured for either timer or counter\noperation, and in any of its three running modes. In the most\ntypical application, it is configured for timer operation in the\nAutoreload mode (high nibble of TMOD = 0010 binary). In that\ncase, the baud rate is given by the formula:\nTable XX shows some commonly used baud rates and how they\nmight be calculated from a core clock frequency of 11.0592 MHzand 12 MHz. Generally speaking, a 5% error is tolerable using\nasynchronous (start/stop) communications.\nTable XX. Commonly Used Baud Rates, Timer 1\nIdeal Core  SMOD TH1-Reload Actual %\nBaud CLK  Value Value Baud Error\n9600 12 1 –7 (F9H) 8929 7\n19200 11.0592 1 –3 (FDH) 19200 09600 11.0592 0 –3 (FDH) 9600 0\n2400 11.0592 0 –12 (F4H) 2400 0\nTimer 2 Generated Baud Rates\nBaud rates can also be generated using Timer 2. Using Timer 2 is\nsimilar to using Timer 1 in that the timer must overflow 16 times\nbefore a bit is transmitted/received. Because Timer 2 has a 16-bitAutoreload mode, a wider range of baud rates is possible using\nTimer 2.    Modes and Baud Rate\nTimer Overflow Rate13 =\n() ×() 11 6 2\nTherefore, when Timer 2 is used to generate baud rates, the\ntimer increments every two clock cycles and not every core\nmachine cycle as before. Therefore, it increments six times\nfaster than Timer 1, and baud rates six times faster are possible.Because Timer 2 has 16-bit autoreload capability, very low baud\nrates are still possible.\nTimer 2 is selected as the baud rate generator by setting the TCLK\nand/or RCLK in T2CON. The baud rates for transmit and receive\ncan be simultaneously different. Setting RCLK and/or TCLK puts\nTimer 2 into its baud rate generator mode as shown in Figure 34.\nIn this case, the baud rate is given by the formula:\n  Modes and Baud Rate\nCore Clk RCAP H RCAP L13 =\n() ×− () []()32 65536 2 2 ,\nTable XXI shows some commonly used baud rates and how they\nmight be calculated from a core clock frequency of 11.0592 MHz\nand 12 MHz.\nTable XXI. Commonly Used Baud Rates, Timer 2\nIdeal Core RCAP2H RCAP2L Actual %\nBaud CLK Value Value Baud Error\n19200 12 –1 (FFH) –20 (ECH) 19661 2.4\n9600 12 –1 (FFH) –41 (D7H) 9591 0.1\n2400 12 –1 (FFH) –164 (5CH) 2398 0.11200 12 –2 (FEH) –72 (B8H) 1199 0.119200 11.0592 –1 (FFH) –18 (EEH) 19200 0\n9600 11.0592 –1 (FFH) –36 (DCH) 9600 0\n2400 11.0592 –1 (FFH) –144 (70H) 2400 0\n1200 11.0592 –2 (FFH) –32 (E0H) 1200 0\nCORE\nCLK2\nT2\nPIN\nTR2CONTROL\nTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nEXEN2CONTROLT2EX\nPINRCAP2L RCAP2HNOTE: OSCILLATOR FREQUENCY\nIS DIVIDED BY 2, NOT 12.\nTIMER 2\nOVERFLOW2\n16\n16RCLK\nTCLKRXCLOCK\nTX\nCLOCK0\n01\n11 0\nSMODTIMER 1\nOVERFLOW\nTRANSITION\nDETECTOREXF\n2TIMER 2\nINTERRUPTNOTE: AVAILABILITY OF ADDITIONALEXTERNAL INTERRUPTC/T2 = 0\nC/T2 = 1\nFigure 34. Timer 2, UART Baud Rates  Modes and Baud Rate\nTimer Overflow RateSMOD13 =\n() ×() 23 2 1\n  Modes and Baud Rate\nCore Clock THSMOD13 =\n() ×× − []() () 2 32 12 256 1\n G\nREV.ADuC812\n–38–INTERRUPT SYSTEM\nThe ADuC812 provides a total of nine interrupt sources with two priority levels. The control and configuration of the interrupt system\nis carried out through three interrupt related SFRs.\nIE Interrupt Enable Register\nIP Interrupt Priority Register\nIE2 Secondary Interrupt Enable Register\nInterrupt Enable\nIE Register\nSFR Address A8H\nPower-On Default Value 00H\nBit Addressable Yes\nAEC D AE2 TES E1 TE1 XE0 TE0 X E\nTable XXII. IE SFR Bit Designations\nBit Name Description\n7 EA Written by user to enable “1” or disable “0” all interrupt sources.\n6 EADC Written by user to enable “1” or disable “0” ADC interrupt.\n5 ET2 Written by user to enable “1” or disable “0” Timer 2 interrupt.\n4 ES Written by user to enable “1” or disable “0” UART serial port interrupt.\n3 ET1 Written by user to enable “1” or disable “0” Timer 1 interrupt.\n2 EX1 Written by user to enable “1” or disable “0” External Interrupt 1.\n1 ET0 Written by user to enable “1” or disable “0” Timer 0 interrupt.\n0 EX0 Written by user to enable “1” or disable “0” External Interrupt 0.\nInterrupt Priority\nIP Register\nSFR Address B8H\nPower-On Default Value 00H\nBit Addressable Yes\nI SPC D AP2 TPS P1 TP1 XP0 TP0 X P\nTable XXIII. IP SFR Bit Designations\nBit Name Description\n7 PSI Written by user to select I2C/SPI priority (“1” = High; “0” = Low).\n6 PADC Written by user to select ADC interrupt priority (“1” = High; “0” = Low).5 PT2 Written by user to select Timer 2 interrupt priority (“1” = High; “0” = Low).\n4 PS Written by user to select UART serial port interrupt priority (“1” = High; “0” = Low).\n3 PT1 Written by user to select Timer 1 interrupt priority (“1” = High; “0” = Low).2 PX1 Written by user to select External Interrupt 1 priority (“1” = High; “0” = Low).\n1 PT0 Written by user to select Timer 0 interrupt priority (“1” = High; “0” = Low).\n0 PX0 Written by user to select External Interrupt 0 priority (“1” = High; “0” = Low).\n G\nREV.ADuC812\n–39–Secondary Interrupt\nIE2 Enable Register\nSFR Address A9H\nPower-On Default Value 00H\nBit Addressable No\n— — ——— — I M S P EI S E\nTable XXIV. IE2 SFR Bit Designations\nBit Name Description\n7 — Reserved for future use.\n6 — Reserved for future use.\n5 — Reserved for future use.\n4 — Reserved for future use.\n3 — Reserved for future use.\n2 — Reserved for future use.\n1 EPSMI Written by user to Enable “1” or Disable “0” power supply monitor interrupt.\n0 ESI Written by user to Enable “1” or Disable “0” I2C/SPI serial port interrupt.\nInterrupt Priority\nThe Interrupt Enable registers are written by the user to enableindividual interrupt sources, while the Interrupt Priority registers\nallow the user to select one of two priority levels for each interrupt.\nAn interrupt of high priority may interrupt the service routine ofa low priority interrupt. If two interrupts of different priorities\noccur at the same time, the higher level interrupt will be served\nfirst. An interrupt cannot be interrupted by another interrupt ofthe same priority level. If two interrupts of the same priority leveloccur simultaneously, a polling sequence is observed, as shown\nin Table XXV.\nTable XXV. Priority within an Interrupt Level\nSource Priority Description\nPSMI 1 (Highest) Power Supply Monitor Interrupt\nIE0 2 External Interrupt 0\nADCI 3 ADC Interrupt\nTF0 4 Timer/Counter 0 Interrupt\nIE1 5 External Interrupt 1TF1 6 Timer/Counter 1 Interrupt\nI2CI + ISPI 7 I\n2C/SPI Interrupt\nRI + TI 8 Serial Interrupt\nTF2 + EXF2 9 (Lowest) Timer/Counter 2 InterruptInterrupt Vectors\nWhen an interrupt occurs, the program counter is pushed onto\nthe stack and the corresponding interrupt vector address isloaded into the program counter. The interrupt vector addresses\nare shown in the Table XXVI.\nTable XXVI. Interrupt Vector Addresses\nSource Vector Address\nIE0 0003H\nTF0 000BH\nIE1 0013H\nTF1 001BH\nRI + TI 0023H\nTF2 + EXF2 002BH\nADCI 0033H\nI2CI + ISPI 003BH\nPSMI 0043H\n G\nREV.ADuC812\n–40–ADuC812 HARDWARE DESIGN CONSIDERATIONS\nThis section outlines some of the key hardware design consider-\nations that must be addressed when integrating the ADuC812\ninto any hardware system.\nClock Oscillator\nThe clock source for the ADuC812 can come either from an\nexternal source or from the internal clock oscillator. To use the\ninternal clock oscillator, connect a parallel resonant crystal\nbetween Pins 32 and 33, and connect a capacitor from each pin\nto ground as shown below.\nXTAL2XTAL1\nTO INTERNAL\nTIMING CIRCUITSADuC812\nFigure 35. External Parallel Resonant Crystal Connections\nXTAL2XTAL1\nTO INTERNAL\nTIMING CIRCUITSADuC812\nEXTERNAL\nCLOCK\nSOURCE\nFigure 36. Connecting an External Clock Source\nWhether using the internal oscillator or an external clock source,\nthe ADuC812’s specified operational clock speed range is 300 kHzto 16 MHz. The core is static, and will function all the way\ndown to dc. But at clock speeds slower that 400 kHz the ADC\nwill no longer function correctly. Therefore, to ensure specifiedoperation, use a clock frequency of at least 400 kHz and no\nmore than 16 MHz.\nExternal Memory Interface\nIn addition to its internal program and data memories, the\nADuC812 can access up to 64 K bytes of external program\nmemory (ROM, PROM, etc.) and up to 16 M bytes of exter-\nnal data memory (SRAM).\nTo select from which code space (internal or external program\nmemory) to begin executing instructions, tie the EA (external\naccess) pin high or low, respectively. When EA is high (pulled\nup to V DD), user program execution will start at address 0 of the\ninternal 8 K bytes Flash/EE code space. When EA is low (tied\nto ground) user program execution will start at address 0 of theexternal code space. In either case, addresses above 1FFFH\n(8K) are mapped to the external space.\nNote that a second very important function of the EA pin is\ndescribed in the Single Pin Emulation Mode section.External program memory (if used) must be connected to the\nADuC812 as illustrated in Figure 37. Note that 16 I/O lines(Ports 0 and 2) are dedicated to bus functions during external\nprogram memory fetches. Port 0 (P0) serves as a multiplexed\naddress/data bus. It emits the low byte of the program counter(PCL) as an address, and then goes into a float state awaiting\nthe arrival of the code byte from the program memory. During\nthe time that the low byte of the program counter is valid on P0,the signal ALE (Address Latch Enable) clocks this byte into an\naddress latch. Meanwhile, Port 2 (P2) emits the high byte of the\nprogram counter (PCH), then PSEN  strobes the EPROM and\nthe code byte is read into the ADuC812.\nLATCHEPROM\nOEA8–A15A0–A7D0–D7\n(INSTRUCTION)ADuC812\nPSENP2ALEP0\nFigure 37. External Program Memory Interface\nNote that program memory addresses are always 16 bits wide, even\nin cases where the actual amount of program memory used is less\nthan 64 K bytes. External program execution sacrifices two of the8-bit ports (P0 and P2) to the function of addressing the programmemory. While executing from external program memory, Ports 0\nand 2 can be used simultaneously for read/write access to external\ndata memory, but not for general-purpose I/O.\nThough both external program memory and external data memory\nare accessed by some of the same pins, the two are completely\nindependent of each other from a software point of view. For example,\nthe chip can read/write external data memory while executingfrom external program memory.\nFigure 38 shows a hardware configuration for accessing up to\n64 K bytes of external RAM. This interface is standard to any\n8051 compatible MCU.\nLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)ADuC812\nRDP2ALEP0\nWE WR\nFigure 38. External Data Memory Interface\n(64K Address Space)\n G\nREV.ADuC812\n–41–If access to more than 64K bytes of RAM is desired, a feature\nunique to the ADuC812 allows addressing up to 16 MBytesof external RAM simply by adding an additional latch as illus-\ntrated in Figure 39.\nLATCHADuC812\nRDP2ALEP0\nWRLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)\nWEA16–A23\nFigure 39. External Data Memory Interface (16 M Bytes\nAddress Space)\nIn either implementation, Port 0 (P0) serves as a multiplexed\naddress/data bus. It emits the low byte of the data pointer (DPL) asan address, which is latched by a pulse of ALE prior to data being\nplaced on the bus by the ADuC812 (write operation) or theSRAM (read operation). Port 2 (P2) provides the data pointerpage byte (DPP) to be latched by ALE, followed by the data\npointer high byte (DPH). If no latch is connected to P2, DPP is\nignored by the SRAM and the 8051 standard of 64K byte ex ternal\ndata memory access is maintained.\nDetailed timing diagrams of external program and data memory\nread and write access can be found in the Timing Specifica-\ntion sections.\nPower-On Reset Operation\nExternal POR (power-on reset) circuitry must be implemented to\ndrive the RESET pin of the ADuC812. The circuit must hold\nthe RESET pin asserted (high) whenever the power supply(DV\nDD) is below 2.5 V. Furthermore, V DD must remain above\n2.5 V for at least 10 ms before the RESET signal is deasserted\n(low), by which time the po wer supply must have reached at least\na 2.7 V level. The external POR circuit must be operational\ndown to 1.2 V or less. The timing diagram in Figure 40 illus-\ntrates this functionality under three separate events: power-up,\nbrownout, and power-down. Notice that when RESET is asserted\n(high), it tracks the voltage on DV DD. These recommendations\nmust be adhered to through the manufacturing flow of yourADuC812 based system as well as during its normal power-onoperation. Failure to adhere to these recommendations can\nresult in permanent damage to device functionality.\n10ms\nMIN1.2V MAX 10ms\nMIN2.5V MIN\n1.2V MAXDVDD\nRESET\nFigure 40. External POR TimingThe best way to implement an external POR function to meet the\nabove requirements involves the use of a dedicated POR chip, suchas the ADM809/ADM810 SOT-23 packaged PORs from Analog\nDevices. Recommended connection diagrams for both active high\nADM810 and active low ADM809 PORs are shown in Figure 41and Figure 42, respectively.\nDVDD\nRESET483420\n15ADuC812\nPOR\n(ACTIVE HIGH)POWER SUPPLY\nFigure 41. External Active High POR Circuit\nSome active-low POR chips, such as the ADM 809, can be used\nwith a manual push-button as an additional reset source as\nillustrated by the dashed line connection in Figure 42.\nDVDD\nRESET483420ADuC812\n15\nOPTIONAL\nMANUAL\nRESET\nPUSH BUTTONPOR\n(ACTIVE LOW)POWER SUPPLY\n1k/H9024\nFigure 42. External Active Low POR Circuit\nPower Supplies\nThe ADuC812’s operational power supply voltage range is 2.7 V\nto 5.25 V. Although the guaranteed data sheet specifications are\ngiven only for power supplies within 2.7 V to 3.6 V or ±10% of\nthe nominal 5 V level, the chip will function equally well at anypower supply level between 2.7 V and 5.5 V.\nSeparate analog and digital power supply pins (AV\nDD and DV DD,\nrespectively) allow AV DD to be kept relatively free of noisy digital\nsignals often present on the system DV DD line. However, though\nyou can power AV DD and DV DD from two separate supplies if\ndesired, you must ensure that they remain within ±0.3 V of one\nanother at all times in order to avoid damaging the chip (as per theAbsolute Maximum Ratings section). Therefore it is recommended\nthat unless AV\nDD and DV DD are connected directly together,\nyou connect back-to-back Schottky diodes between them as\nshown in Figure 43.\nDVDD\n483420ADuC812\n5\n6 AGNDAVDD–+\n0.1/H9262F10/H9262FANALOG SUPPLY\n10/H9262F\nDGND3521\n470.1/H9262F–+DIGITAL SUPPLY\nFigure 43. External Dual-Supply Connections\n G\nREV.ADuC812\n–42–As an alternative to providing two separate power supplies, the\nuser can help keep AV DD quiet by placing a small series resistor\nand/or ferrite bead between it and DV DD, and then decoupling\nAVDD separately to ground. An example of this configuration is\nshown in Figure 44. With this configuration, other analogcircuitry (such as op amps, voltage reference, and so on) can be\npowered from the AV\nDD supply line as w ell. The user will still\nwant to include back-to-back Schottky diodes between AV DD\nand DV DD in order to protect from power-up and power-down\ntransient conditions that could separate the two supply voltages\nmomentarily.\nDVDD\n483420ADuC812\n5\n6 AGNDAVDD0.1/H9262F10/H9262F\nDGND3521\n470.1/H9262F–+DIGITAL SUPPLY\n10/H9262F 1.6/H9024 BEAD\nFigure 44. External Single-Supply Connections\nNotice that in both Figure 43 and Figure 44, a large value (10 μF)reservoir capacitor sits on DV\nDD and a separate 10 μF capacitor\nsits on AV DD. Also, local small value (0.1 μF) capacitors are\nlocated at each V DD pin of the chip. As per standard design prac-\ntice, be sure to include all of these capacitors, and ensure thesmaller capacitors are close to each AV\nDD pin with trace lengths as\nshort as possible. Connect the ground terminal of each of these\ncapacitors directly to the underlying ground plane. Finally, itshould also be noted that, at all times, the analog and digitalground pins on the ADuC812 must be referenced to the same\nsystem ground reference point.\nPower Consumption\nThe currents consumed by the various sections of the ADuC812\nare shown in Table XXVII. The CORE values given represent\nthe current drawn by DV DD, while the rest (ADC, DAC, Volt-\nage Reference) are pulled by the AV DD pin and can be disabled\nin software when not in use. The other on-chip peripherals(watch dog timer, power supply monitor, and so on) consume\nnegligible current and are therefore lumped in with the CORE\noperating current here. Of course, the user must add anycurrents sourced by the DAC or the parallel and serial I/O pins,\nin order to determine the total current needed at the ADuC812’s\nsupply pins. Also, current drawn from the DV\nDD supply will\nincrease by approximately 10 mA during Flash/EE erase and\nprogram cycles.Table XXVII. Typical I DD of Core and Peripherals\nVDD = 5 V VDD = 3 V\nCORE\n(Normal Mode) (1.6 nAs × MCLK) + (0.8 nAs × MCLK) +\n6 mA 3 mA\nCORE\n(Idle Mode) (0.75 nAs × MCLK) + (0.25 nAs × MCLK) +\n5 mA 3 mA\nADC 1.3 mA 1.0 mA\nDAC (Each) 250 μA 200 μA\nVoltage Ref 200 μA 150 μA\nSince operating DV DD current is primarily a function of clock\nspeed, the expressions for CORE supply current in Table XXVII\nare given as functions of MCLK, the oscillator frequency. Plug\nin a value for MCLK in hertz to determine the current consumed\nby the core at that oscillator frequency. Since the ADC and DACscan be enabled or disabled in software, add only the currents\nfrom the peripherals you expect to use. The internal voltage refer-\nence is automatically enabled whenever either the ADC or atleast one DAC is enabled. And again, do not forget to include\ncurrent sourced by I/O pins, serial port pins, DAC outputs, and\nso forth, plus the additional current drawn during Flash/EEerase and program cycles.\nA software switch allows the chip to be switched from normal\nmode into idle mode, and also into full power-down mode.\nBelow are brief descriptions of power-down and idle modes.\nIn idle mode, the oscillator continues to run but is gated off to\nthe core only. The on-chip peripherals continue to receive the\nclock, and remain functional. Port pins and DAC output pins\nretain their states in this mode. The chip will recover from idlemode upon receiving any enabled interrupt, or upon receiving a\nhardware reset.\nIn full power-down mode, the on-chip oscillator stops, and all\non-chip peripherals are shut down. Port pins retain their logic levelsin this mode, but the DAC output goes to a high impedance\nstate (three-state). The chip will only recover from power-down\nmode upon receiving a hardware reset or when power is cycled.During full power-down mode, the ADuC812 consumes a total\nof approximately 5 μA.\n G\nREV.ADuC812\n–43–Grounding and Board Layout Recommendations\nAs with all high resolution data converters, special attention\nmust be paid to grounding and PC board layout of ADuC812\nbased designs in order to achieve optimum performance fromthe ADC and DACs.\nAlthough the ADuC812 has separate pins for analog and digitalground (AGND and DGND), the user must not tie these to two\nseparate ground planes unless the two ground planes are connected\ntogether very close to the ADuC812, as illustrated in the simpli-fied example of Figure 45a. In systems where digital and analog\nground planes are connected together somewhere else (for example,\nat the system’s power supply), they cannot be connected againnear the ADuC812 since a ground loop would result. In these\ncases, tie the ADuC812’s AGND and DGND pins all to the\nanalog ground plane, as illustrated in Figure 45b. In systems withonly one ground plane, ensure that the digital and analog com-\nponents are physically separated onto separate halves of the board\nsuch that digital return currents do not flow near analog circuitryand vice versa. The ADuC812 can then be placed between the\ndigital and analog sections, as illustrated in Figure 45c.In all of these scenarios, and in more complicated real-life appli-\ncations, keep in mind the flow of current from the supplies andback to ground. Make sure the return paths for all currents are\nas close as possible to the paths the currents took to reach their\ndestinations. For example, do not power components on theanalog side of Figure 45b with DV\nDD since that would force\nreturn currents from DV DD to flow through AGND. Also, try to\navoid digital currents flowing under analog circuitry, which couldhappen if the user placed a noisy digital chip on the left half of the\nboard in Figure 45c. Whenever possible, avoid large discontinuities\nin the ground plane(s) (formed by a long trace on the samelayer), since they force return signals to travel a longer path. And\nof course, make all connections to the ground plane directly,\nwith little or no trace separating the pin from its via to ground.\nIf the user plans to connect fast logic signals (rise/fall time < 5 ns)\nto any of the ADuC812’s digital inputs, add a series resistor to\neach relevant line to keep rise and fall times longer than 5 ns at the\nADuC812 input pins. A value of 100  or 200  is usually suffi-cient to prevent high speed signals from coupling capacitively\ninto the ADuC812 and affecting the accuracy of ADC conversions.\nb.\nDGND AGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHERE\nc.\nGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHEREDGND AGNDPLACE ANALOG\nCOMPONENTS\nHEREa.PLACE DIGITAL\nCOMPONENTS\nHERE\nFigure 45. System Grounding Schemes\n G\nREV.ADuC812\n–44–C1+\nV+C1–\nC2+\nC2–\nV–\nT2OUTR2INV\nCC\nGND\nT1OUT\nR1IN\nR1OUT\nT1INT2IN\nR2OUTADM202DVDD\n2734\n33\n31\n30\n29\n2839\n38\n37\n36\n35\n3240 47 46 44 43 42 41 52 51 50 49 48 45DVDD1k/H9024DVDD\n1k/H9024\n2-PIN HEADER FOR\nEMULATION ACCESS(NORMALLY OPEN)DOWNLOAD/DEBUG\nENABLE JUMPER\n(NORMALLY OPEN)\n11.0592MHz\nDVDD\n19-PIN D-SUB\nFEMALE\n2\n3\n4\n5\n6\n7\n8\n9AVDD\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nDVDD\nDGND\nPSEN\nEA\nDGND\nDVDD\nXTAL2\nXTAL1RESETRxD\nTxD\nDVDD\nDGND\nADM810\nVCC RST\nGNDNOT CONNECTED IN THIS EXAMPLE\nDVDDADuC812\nDAC OUTPUT51/H9024\nVREF OUTPUTADC0\nADC7ANALOG INPUT\nDVDD\nFigure 46. Typical System Configuration\nOTHER HARDWARE CONSIDERATIONS\nTo facilitate in-circuit programming, plus in-circuit debug and\nemulation options, users will want to implement some simple\nconnection points in their hardware that will allow easy access\nto download, debug, and emulation modes.\nIn-Circuit Serial Download Access\nNearly all ADuC812 designs will want to take advantage of the\nin-circuit reprogrammability of the chip. This is accomplished by\na connection to the ADuC812’s UART, which requires an externalRS-232 chip for level translation if downloading code from a PC.\nBasic configuration of an RS-232 connection is illustrated in\nFigure 46 with a simple ADM202 based circuit. If users wouldrather not design an RS-232 chip onto a board, refer to the Appli-\ncation Note, uC006–A 4-Wire UART-to-PC Interface,  (available\nat www.analog.com/microconverter)  for a simple (and zero-cost-\nper-board) method of gaining in-circuit serial download accessto the ADuC812.\nIn addition to the basic UART connections, users will also need\na way to trigger the chip into download mode. This is accom-plished via a 1 k  pull-down resistor that can be jumpered onto\nthe PSEN  pin, as shown in Figure 46. To get the ADuC812into download mode, simply connect this jumper and power-\ncycle the device (or manually reset the device, if a manual resetbutton is available) and it will be ready to receive a new program\nserially. With the jumper removed, the device will come up in\nnormal mode (and run the program) whenever power is cycledor RESET is toggled.\nNote that PSEN  is normally an output (as described in the External\nMemory Interface section), and is sampled as an input only on\nthe falling edge of RESET (i.e., at power-up or upon an externalmanual reset). Note also that if any external circuitry uninten-\ntionally pulls PSEN  low during power-up or reset events, it could\ncause the chip to enter download mode and therefore fail to begin\nuser code execution as it should. To prevent this, ensure that no\nexternal signals are capable of pulling the PSEN  pin low, except\nfor the external PSEN  jumper itself.\nEmbedded Serial Port Debugger\nFrom a hardware perspective, entry to serial port debug mode isidentical to the serial download entry sequence described above.\nIn fact, both serial download and serial port debug modes can bethought of as essentially one mode of operation used in two\ndifferent ways.\n G\nREV.ADuC812\n–45–Note that the serial port debugger is fully contained on the\nADuC812 device, (unlike ROM monitor type debuggers) andtherefore no external memory is needed to enable in-system\ndebug sessions.\nSingle-Pin Emulation Mode\nAlso built into the ADuC812 is a dedicated controller for single-pin\nin-circuit emulation (ICE) using standard production ADuC812\ndevices. In this mode, emulation access is gained by connection\nto a single pin, the EA pin. Normally, this pin is hardwired either\nhigh or low to select execution from internal or external program\nmemory space, as described earlier. To enable single-pin emulation\nmode, however, users will need to pull the EA pin high through\na 1 k  resistor, as shown in Figure 46. The emulator will then\nconnect to the 2-pin header also shown in Figure 46. To be com-\npatible with the standard connector that comes with the single-pinemulator available from Accutron Limited (www.accutron.com),\nuse a 2-pin 0.1 inch pitch “Friction Lock” header from Molex\n(www.molex.com) such as their part number 22-27-2021. Be sureto observe the polarity of this header. As represented in Figure 46,\nwhen the Friction Lock tab is at the right, the ground pin should\nbe the lower of the two pins (when viewed from the top).\nEnhanced-Hooks Emulation Mode\nADuC812 also supports enhanced-hooks emulation mode. An\nenhanced-hooks based emulator is available from Metalink\nCorporation (www.metaice.com). No special hardware supportfor these emulators needs to be designed onto the board since\nthese are pod-style emulators where users must replace the chip\non their board with a header device that the emulator pod plugsinto. The only hardware concern is then one of determining ifadequate space is available for the emulator pod to fit into the\nsystem enclosure.\nTypical System Configuration\nA typical ADuC812 configuration is shown in Figure 46 . It sum-\nmarizes some of the hardware considerations discussed in theprevious paragraphs.\nQUICKSTART DEVELOPMENT SYSTEM\nThe QuickStart Development System is a full featured, low cost\ndevelopment tool suite supporting the ADuC812. The systemconsists of the following PC based (Windows\n® compatible)\nhardware and software development tools.\nHardware: ADuC812 Evaluation Board, Plug-InPower Supply and Serial Port C able\nCode Development: 8051 Assembler\nCode Functionality: Windows Based Simulator\nIn-Circuit Code Download: Serial Downloader\nIn-Circuit Debugger: Serial Port Debugger\nMiscellaneous Other: CD-ROM Documentation and\nTwo Additional Prototype Devices\nFigure 47 shows the typical components of a QuickStart\nDevel opment System. A brief description of some of the software\ntools components in the QuickStart Development System is\ngiven in the following sections.\nFigure 47. Components of the QuickStart Development\nSystem\nFigure 48. Typical Debug Session\nDownload—In-Circuit Serial Downloader\nThe Serial Downloader is a Windows application that allows theuser to serially download an assembled program (Intel Hex format\nfile) to the on-chip program FLASH memory via the serial COM1\nport on a standard PC. Application Note uC004 detailing thisserial download protocol is available at www.analog.com/\nmicroconverter.\nDeBug—In-Circuit Debugger\nThe Debugger is a Windows application that allows the user to\ndebug code execution on silicon using the MicroConverter UART\nserial port. The debugger provides access to all on-chip periph-\nerals during a typical debug session as well as single-step and\nbreakpoint code execution control.\nADSIM—Windows Simulator\nThe Simulator is a Windows application that fully simulates all\nthe MicroConverter functionality including ADC and DACperipherals. The simulator provides an easy-to-use, intuitive in ter-\nface to the MicroConverter functionality and integrates many\nstandard debug features including multiple breakpoints, single\nstepping, and code execution trace capability. This tool can be\nused both as a tutorial guide to the part as well as an efficient way\nto prove code functionality before moving to a hardware plat form.\nThe QuickStart development tool suite software is freely available at\nthe Analog Devices MicroConverter website, www.analog.com/\nmicroconverter.\n G\nREV.ADuC812\n–46–12 MHz  Variable Clock\nParameter Min Typ Max Min Typ Max Unit\nCLOCK INPUT (External Clock Driven XTAL1)\ntCK XTAL1 Period 83.33 62.5 1000 ns\ntCKL XTAL1 Width Low 20 20 ns\ntCKH XTAL1 Width High 20 20 ns\ntCKR XTAL1 Rise Time 20 20 ns\ntCKF XTAL1 Fall Time 20 20 ns\ntCYC4ADuC812 Machine Cycle Time 1 12t CK μs\nNOTES\n1AC inputs during testing are driven at DV DD– 0.5 V for a Logic 1 and 0.45 V for a Logic 0. Timing measurements are made at V IH min for a Logic 1 and V IL max for\na Logic 0.\n2For timing purposes, a port pin is no longer floating when a 100 mV change from load voltage occurs. A port pin begins to float when a 100 mV change from the\nloaded V OH/VOL level occurs.\n3CLOAD for Port 0, ALE, PSEN  outputs = 100 pF; C LOAD for all other outputs = 80 pF, unless otherwise noted.\n4ADuC812 Machine Cycle Time is nominally defined as MCLKIN/12.\ntCKL tCKF\ntCKtCKH tCKR\nFigure 49. XTAL 1 Input\nDVDD – 0.5V\n0.45V0.2V CC + 0.9V\nTEST POINTS\n0.2V CC – 0.1VVLOAD  – 0.1V\nVLOAD\nVLOAD  + 0.1VTIMING\nREFERENCE\nPOINTSVLOAD  – 0.1V\nVLOAD\nVLOAD  – 0.1V\nFigure 50. Timing Waveform Characteristics(AV DD = DV DD = 3.0 V or 5.0 V /H11550 10%. All specifications T A = T MIN to T MAX, unless otherwise noted.) TIMING SPECIFICATIONS1, 2, 3\n G\nREV. –47–ADuC812\n       12 MHz    Variable Clock\nParameter Min Max Min Max Unit\nEXTERNAL PROGRAM MEMORY READ CYCLE\ntLHLL ALE Pulsewidth 127 2tCK–4 0 n s\ntAVLL Address Valid to ALE Low 43 tCK–4 0 n s\ntLLAX Address Hold after ALE Low 53 tCK–3 0 n s\ntLLIV ALE Low to Valid Instruction In 234 4tCK– 100 ns\ntLLPL ALE Low to PSEN  Low 53 t CK–3 0 n s\ntPLPH PSEN  Pulsewidth 205 3t CK–4 5 n s\ntPLIV PSEN  Low to Valid Instruction In 145 3t CK– 105 ns\ntPXIX Input Instruction Hold after PSEN 00 n s\ntPXIZ Input Instruction Float after PSEN 59 t CK–2 5 n s\ntAVIV Address to Valid Instruction In 312 5tCK– 105 ns\ntPLAZ PSEN  Low to Address Float 25 25 ns\ntPHAX Address Hold after PSEN  High 0 0 ns\nMCLK\nALE (O)\nPSEN (O)\nPORT 0 (I/O)\nPORT 2 (O)tLHLL\ntAVLL tLLPL tPLPH\ntLLIV\ntPLIV\ntPLAZtLLAXtPXIXtPXIZ\ntPHAXtAVIVPCL (OUT)INSTRUCTION\n(IN)\nPCH\nFigure 51. External Program Memory Read Cycle\n G\nREV.ADuC812\n–48–      12 MHz Variable Clock\nParameter Min Max Min Max Unit\nEXTERNAL DATA MEMORY READ CYCLE\ntRLRH RD Pulsewidth 400 6t CK– 100 ns\ntAVLL Address Valid after ALE Low 43 tCK–4 0 n s\ntLLAX Address Hold after ALE Low 48 tCK–3 5 n s\ntRLDV RD Low to Valid Data In 252 5t CK – 165 ns\ntRHDX Data and Address Hold after RD 00 n s\ntRHDZ Data Float after RD 97 2t CK– 70 ns\ntLLDV ALE Low to Valid Data In 517 8tCK– 150 ns\ntAVDV Address to Valid Data In 585 9tCK– 165 ns\ntLLWL ALE Low to RD or WR Low 200 300 3t CK–5 0 3 t CK+5 0 n s\ntAVWL Address Valid to RD or WR Low 203 4t CK– 130 ns\ntRLAZ RD Low to Address Float 0 0 ns\ntWHLH RD or WR High to ALE High 43 123 t CK–4 0 6 t CK– 100 ns\nMCLK\nALE (O)\nPSEN (O)\nRD (O)\nPORT 0 (I/O)\nPORT 2 (O)tWHLH\ntLLDV\ntLLWL tRLRH\ntAVWL\ntLLAXtAVLL\ntRLAZtRHDXtRHDZ\ntAVDVA0–A7 (OUT) DATA (IN)\nA16–A23 A8–A15tRLDV\nFigure 52. External Data Memory Read Cycle\n G\nREV. –49–ADuC812\n      12 MHz Variable Clock\nParameter Min Max Min Max Unit\nEXTERNAL DATA MEMORY WRITE CYCLE\ntWLWH WR Pulsewidth 400 6t CK– 100 ns\ntAVLL Address Valid after ALE Low 43 tCK–4 0 n s\ntLLAX Address Hold after ALE Low 48 tCK–3 5 n s\ntLLWL ALE Low to RD or WR Low 200 300 3t CK–5 0 3 t CK+5 0 n s\ntAVWL Address Valid to RD or WR Low 203 4t CK– 130 ns\ntQVWX Data Valid to WR Transition 33 t CK–5 0 n s\ntQVWH Data Setup before WR 433 7t CK– 150 ns\ntWHQX Data and Address Hold after WR 33 t CK–5 0 n s\ntWHLH RD or WR High to ALE High 43 123 t CK–4 0 6 t CK– 100 ns\nMCLK\nALE (O)\nPSEN (O)\nWR (O)\nPORT 2 (O)tWHLH\ntWLWH tLLWL\ntAVWL\ntLLAXtAVLLtQVWX\ntQVWHtWHQX\nA0–A7 DATA\nA16–A23 A8–A15\nFigure 53. External Data Memory Write Cycle\n G\nREV.ADuC812\n–50– 12 MHz  Variable Clock\nParameter Min Typ Max Min Typ Max Unit\nUART TIMING (Shift Register Mode)\ntXLXL Serial Port Clock Cycle Time 1.0 12t CK μs\ntQVXH Output Data Setup to Clock 700 10tCK – 133 ns\ntDVXH Input Data Setup to Clock 300 2tCK + 133 ns\ntXHDX Input Data Hold after Clock 0 0 ns\ntXHQX Output Data Hold after Clock 50 2tCK – 117 ns\nALE (O)\nTxD\n(OUTPUT CLOCK)\nRxD\n(OUTPUT DATA)\nRxD\n(INPUT DATA)tXLXL\ntQVXH\ntXHQX\ntDVXH tXHDXSET RI\nOR\nSET TI0 6\nMSB BIT6 BIT1\nMSB BIT6 BIT1 LSB7\nLSB1\nFigure 54. UART Timing in Shift Register Mode\n G\nREV. –51–ADuC812\nParameter Min Max Unit\nI2C COMPATIBLE INTERFACE TIMING\ntLOW SCLOCK Low Pulsewidth 1.3 μs\ntHIGH SCLOCK High Pulsewidth 0.6 μs\ntHD; STA Start Condition Hold Time 0.6 μs\ntSU; DAT Data Setup Time 100 μs\ntHD; DAT Data Hold time 0 0.9 μs\ntSU; STA Setup time for Repeated Start 0.6 μs\ntSU; STO Stop Condition Setup Time 0.6 μs\ntBUF Bus Free Time between a STOP\nCondition and a START Condition 1.3 μs\ntR Rise Time for Both SCLOCK and SDATA 300 ns\ntF Fall Time for Both SCLOCK and SDATA 300 ns\ntSUP1Pulsewidth of Spike Suppressed 50 ns\nSDATA (I/O)\nSCLK (I)\nSTOP\nCONDITIONSTART\nCONDITIONPS\nREPEATED\nSTARTS(R)1 2–7 8 1MSBtBUF\ntSUP\ntSUPtR\ntR\ntFLSB ACK MSB\ntSU; STOtHD; STAtHD; STA\ntHD; DAT\ntLOWtHIGHtSU; DAT\ntSU; STA\n9tHD; DAT\nFigure 55. I2C Compatible Interface Timing\n G\nREV.ADuC812\n–52–Parameter Min Typ Max Unit\nSPI MASTER MODE TIMING (CPHA = 1)\ntLOW SCLOCK Low Pulsewidth 330 ns\ntSH SCLOCK High Pulsewidth 330 ns\ntDAV Data Output Valid after SCLOCK Edge 50 ns\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns\ntDF Data Output Fall Time 10 25 ns\ntDR Data Output Rise Time 10 25 ns\ntSR SCLOCK Rise Time 10 25 ns\ntSF SCLOCK Fall Time 10 25 ns\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL = 0)\n tSH  tSL\n tSR  tSF\nBIT 6–1 LSB IN tDR\nMISO tDAV  tDF\n tDSUMSB BIT 6–1 LSB\n tDHDMSB IN\nFigure 56. SPI Master Mode Timing (CPHA = 1)\n G\nREV. –53–ADuC812\nParameter Min Typ Max Unit\nSPI MASTER MODE TIMING (CPHA = 0)\ntSL SCLOCK Low Pulsewidth 330 ns\ntSH SCLOCK High Pulsewidth 330 ns\ntDAV Data Output Valid after SCLOCK Edge 50 ns\ntDOSU Data Output Setup before SCLOCK Edge 150 ns\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns\ntDF Data Output Fall Time 10 25 ns\ntDR Data Output Rise Time 10 25 ns\ntSR SCLOCK Rise Time 10 25 ns\ntSF SCLOCK Fall Time 10 25 ns\n tDAV\nMISOMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL = 0)\n tSH tSL\n tSR  tSF\n tDOSU tDF  tDR\n tDSU  tDHDMSB BIT 6–1 LSB\nBIT 6–1 LSB IN MSB IN\nFigure 57. SPI Master Mode Timing (CPHA = 0)\n G\nADuC812\n–54–Parameter Min Typ Max Unit\nSPI SLAVE MODE TIMING (CPHA = 1)\ntSS SS to SCLOCK Edge 0 ns\ntSL SCLOCK Low Pulsewidth 330 ns\ntSH SCLOCK High Pulsewidth 330 ns\ntDAV Data Output Valid after SCLOCK Edge 50 ns\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns\ntDF Data Output Fall Time 10 25 ns\ntDR Data Output Rise Time 10 25 ns\ntSR SCLOCK Rise Time 10 25 ns\ntSF SCLOCK Fall Time 10 25 ns\ntSFS SS High after SCLOCK Edge 0 ns\nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL = 0)\n tSH  tSR tSF\n tDAV   tDR\nMSB LSB tSFS tSSSS\nBIT 6–1\nBIT 6–1 tSL\nLSB IN MSB IN\n tDSU  tDHDtDF\nFigure 58. SPI Slave Mode Timing (CPHA = 1)\nREV.  G\nREV. –55–ADuC812\nParameter Min Typ Max Unit\nSPI SLAVE MODE TIMING (CPHA = 0)\ntSS SS to SCLOCK Edge 0 ns\ntSL SCLOCK Low Pulsewidth 330 ns\ntSH SCLOCK High Pulsewidth 330 ns\ntDAV Data Output Valid after SCLOCK Edge 50 ns\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns\ntDF Data Output Fall Time 10 25 ns\ntDR Data Output Rise Time 10 25 ns\ntSR SCLOCK Rise Time 10 25 ns\ntSF SCLOCK Fall Time 10 25 ns\ntDOSS Data Output Valid after SS Edge 20 ns\ntSFS SS High After SCLOCK Edge 0 ns\n tDAV tSFS\nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL = 0)\n tSH  tSL\n tSR\n tDF  tDR\n tDSU  tDHD tSSSS\n tDOSS\nMSB BIT 6–1 LSB\nBIT 6–1 LSB IN MSB IN tSF\nFigure 59. SPI Slave Mode Timing (CPHA = 0)\n G\nADuC812 \nOUTLINE DIMENSIONS \nFigure 6\n0. 52-Lead Metric Quad Flat Package [MQFP] \n(S-52-2) \nDimensions shown in millimeters \nORDERING GUIDE \nModel1 Temperature Range Package Description Package Option \nADuC812BSZ −40°C to +85°C 52-Lead Metric Quad Flat Package [MQFP] S-52-2 \nADuC812BSZ-REEL −40°C to +85°C 52-Lead Metric Quad Flat Package [MQFP] S-52-2 \n1 Z = RoHS Compliant Part. COMPLIANT TO JEDEC STANDARDS MO-112-AC-214.15\n13.90  SQ13.652.45\nMAX1.030.880.73\n1452\n262740\n39\n132.102.00\n1.95\n7°\n0°0.250.150.100.230.1110.2010.00 SQ 9.80\n0.65 BSC\nLEAD PITCHLEAD WIDTH0.10\nCOPLANARITYSEATING\nPLANE1.95 REF 1\nVIEW A\nVIEW A\nROTATED 90° CCW\n06-10-20014-BTOP VIEW\n(PINS DOWN)\n0.38\n0.22\n–5 REV.  G 6–\nADuC812\nREVISION HISTORY \n9/2017—Rev. F to Rev. G \nDeleted 56-Lead LFCSP ..................................................... Universal Changes to General Description Section ...................................... 1 \nDeleted 56-Lead LFCSP Pin Configuration .................................. 6 \nDeleted EP , Pin Function Descriptions Table ............................... 8 Updated Outline Dimensions ....................................................... 56 Changes to Ordering Guide .......................................................... 56 \n3/2013—Rev. E to Rev. F \nAdded EPAD Note to LFCSP Pin Configuration ......................... 6 Added EPAD Note to Pin Function Descriptions Table ............. 8 Updated Outline Dimensions ....................................................... 56 Changes to Ordering Guide .......................................................... 56 \n4/2003—Rev. D to Rev. E \nUpdated Outline Dimensions ....................................................... 56 \n2/2003—Rev. C to Rev. D \nAdded CP-56 Package ............................................................. Global \nEdits to General Description ........................................................... 1 \nAdded 56-Lead LFCSP Pin Configuration ................................... 6 Updated Ordering Guide ................................................................. 6 Added I2C Compatible Interface Timing Table ......................... 51 Added new Figure 55 ..................................................................... 51 \nUpdated Outline Dimensions ....................................................... 56 03/2002—Rev. B to Rev. C \nEdits to Features ................................................................................. 1 Edits to General Description ........................................................... 1 \nEdits to Functional Block Diagram ................................................. 1 \nEdits to Specifications ....................................................................... 3 Edits to Pin Configuration ............................................................... 6 Edits to Pin Function Descriptions ................................................. 7 Edits to Figure 4 .............................................................................. 11 \nEdits to Serial Peripheral Interface Section ................................ 25 \nEdits to Table XI ............................................................................. 26 Edits to Table XXIII ....................................................................... 37 Edits to Tables XXIV , XXV , and XXVI ........................................ 38 \n10/2001—Data Sheet changed from Rev. A to Rev. B \nEntire Data Sheet Revised ............................................................ All \n2/2001—Rev. 0 to Rev. A 7/1999—Revision 0: Initial Version \n©1999–2017 Analog Devices, Inc. All rights reserved. Trademarks and  \n registered trademarks are the prop erty of their respective owners. \nD00208-0-9/17(G)  \n–5 REV.  G 7–\n'}]
!==============================================================================!
### Component Summary: ADuC812BSZ-REEL

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 3 V to 5 V
- **Current Ratings**: 
  - Normal Mode: Up to 25 mA (max at 5 V)
  - Idle Mode: Up to 10 mA (max at 5 V)
  - Power-Down Mode: 15 μA (max)
- **Power Consumption**: 
  - Core current varies with clock speed; typically 6 mA at 5 V in normal mode.
- **Operating Temperature Range**: 
  - Industrial: -40°C to +85°C
- **Package Type**: 
  - 52-Lead Metric Quad Flat Package (MQFP)
- **Special Features**: 
  - Integrated 12-bit ADC, dual 12-bit DACs, 8051-compatible microcontroller core, on-chip Flash/EE memory, UART, SPI, and I2C interfaces.
  - Watchdog timer and power supply monitor.
- **Moisture Sensitive Level**: 
  - Level 1 (JEDEC J-STD-020E)

#### Description:
The **ADuC812** is a highly integrated MicroConverter® from Analog Devices, combining a 12-bit analog-to-digital converter (ADC), dual 12-bit digital-to-analog converters (DACs), and an 8051-compatible microcontroller (MCU) on a single chip. It features a self-calibrating multichannel ADC with high accuracy and a built-in voltage reference. The device is designed for low-power applications, making it suitable for battery-powered systems.

#### Typical Applications:
- **Intelligent Sensors**: Used for calibration and conditioning of sensor signals.
- **Battery-Powered Systems**: Ideal for portable PCs, instruments, and monitors due to its low power consumption.
- **Data Acquisition Systems**: Suitable for transient capture systems and communications systems.
- **Control Loop Monitors**: Used in applications such as optical networks and base stations.

The ADuC812 is particularly useful in applications requiring precise data acquisition and control, leveraging its integrated features to minimize external component count and enhance system reliability.