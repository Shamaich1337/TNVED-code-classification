[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of MCP2515-I/ST production of MICROCHIP TECHNOLOGY from the text:\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 1\nMCP2515\nFeatures\n• Implements CAN V2.0B at 1 Mb/s:\n- 0 to 8-byte length in the data field\n- Standard and extended data and remote \nframes \n• Receive Buffers, Masks and Filters:\n- Two receive buffers with prioritized message \nstorage\n- Six 29-bit filters\n-T w o  2 9 - b i t  m a s k s\n• Data Byte Filtering on the First Two Data Bytes \n(applies to standard data frames)\n• Three Transmit Buffers with Prioritization and \nAbort Features\n• High-Speed SPI Interface (10 MHz):\n- SPI Modes 0,0 and 1,1\n• One-Shot mode Ensures Message Transmission \nis Attempted Only One Time\n• Clock Out Pin with Programmable Prescaler:\n- Can be used as a clock source for other \ndevice(s)\n• Start-of-Frame (SOF) Signal is Available for \nMonitoring the SOF Signal:\n- Can be used for time slot-based protocols \nand/or bus diagnostics to detect early bus \ndegradation\n• Interrupt Output Pin with Selectable Enables\n• Buffer Full Output Pins Configurable as:\n- Interrupt output for each receive buffer\n- General purpose output\n• Request-to-Send (RTS) Input Pins Individually \nConfigurable as:\n- Control pins to request transmission for each \ntransmit buffer\n- General purpose inputs\n• Low-Power CMOS Technology:\n- Operates from 2.7V-5.5V\n- 5 mA active current (typical)- 1 µA standby current (typical) (Sleep mode)\n• Temperature Ranges Supported:\n- Industrial (I): -40°C to +85°C- Extended (E): -40°C to +125°C\n• AEC-Q100 QualifiedDescription\nMicrochip Technology’s MCP2515 is a stand-alone\nController Area Network (CAN) controller that imple-\nments the CAN specification, Version 2.0B. It is capable\nof transmitting and receiving both standard and\nextended data and remote frames. The MCP2515 hastwo acceptance masks and six acceptance filters that\nare used to filter out unwanted messages, thereby\nreducing the host MCU’s overhead. The MCP2515\ninterfaces with microcontrollers (MCUs) via an industry\nstandard Serial Peripheral Interface (SPI).\nPackage Types\n16\n5TXCAN\nRXCANVDD\nRESET\nCS\nSOMCP25151\n2\n3418\n17\n16\n15\nSI\nSCK\nINT\nRX0BF1413\n12\n11\nRX1BF\n10OSC2\nOSC1CLKOUT/SOF\nTX2RTS5\n6\n7\n8\nVSS 9TX0RTS\nTX1RTS\nTXCAN\nRXCAN\nTX0RTS\nOSC1CLKOUT/SOF\nOSC2CSVDD\nRESET\nSO\nSCK\nINTSI\nRX0BF\nRX1BF VSSTX1RTS\nTX2RTSNC NC18-Lead PDIP/SOIC\n20-Lead TSSOP\n2\nNC\nTX2RTSTX0RTSSO\nSIOSC2NCOSC1\nGND\nRX1BFSCKRXCAN\nTXCAN\nVDD\nRESET\nTX1RTSEP20\n1191817\n3\n414\n13\n12\n11\n678921\n1015 CLKOUT\nCS\nINTRX0BF\n* Includes Exposed Thermal Pad (EP); see Table 1-1 .13\n121\n23\n4\n5\n6\n7\n8\n920\n1918\n17\n16\n15\n14\n11 10\nMCP2515\n20-Lead QFN*Stand-Alone CAN Controller with SPI Interface\nMCP2515\nDS20001801K-page 2 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc.  DS20001801K-page 3MCP2515\n1.0 DEVICE OVERVIEW\nThe MCP2515 is a stand-alone CAN controller devel-\noped to simplify applications that require interfacing\nwith a CAN bus. A simple block diagram of theMCP2515 is shown in Figure 1-1 . The device consists\nof three main blocks: \n1. The CAN module, which includes the CAN\nprotocol engine, masks, filters, transmit andreceive buffers.\n2. The control logic and registers that are used to\nconfigure the device and its operation.\n3. The SPI protocol block.\nAn example system implementation using the device is\nshown in Figure 1-2 .\n1.1 CAN Module\nThe CAN module handles all functions for receiving and\ntransmitting messages on the CAN bus. Messages are\ntransmitted by first loading the appropriate message buf-fer and control registers. Transmission is initiated by\nusing control register bits via the SPI interface or by\nusing the transmit enable pins. Status and errors can bechecked by reading the appropriate registers. Any\nmessage detected on the CAN bus is checked for errors\nand then matched against the user-defined filters to seeif it should be moved into one of the two receive buffers.1.2 Control Logic\nThe control logic block controls the setup and operationof the MCP2515 by interfacing to the other blocks inorder to pass information and control.\nInterrupt pins are provided to allow greater system\nflexibility. There is one multipurpose interrupt pin (as\nwell as specific interrupt pins) for each of the receiveregisters that can be used to indicate a valid message\nhas been received and loaded into one of the receive\nbuffers. Use of the specific interrupt pins is optional.The general purpose interrupt pin, as well as status\nregisters (accessed via the SPI interface), can also be\nused to determine when a valid message has beenreceived.\nAdditionally, there are three pins available to initiate\nimmediate transmission of a message that has been\nloaded into one of the three transmit registers. Use ofthese pins is optional, as initiating message transmis-\nsions can also be accomplished by utilizing control\nregisters accessed via the SPI interface.\n1.3 SPI Protocol Block\nThe MCU interfaces to the device via the SPI interface.Writing to, and reading from, all registers is\naccomplished using standard SPI read and write\ncommands, in addition to specialized SPI commands.\nFIGURE 1-1: BLOCK DIAGRAM\nSPI\nInterface\nLogicSPI\nBus\nINTCS\nSCK\nSI\nSOCAN\nProtocol\nEngineRXCAN\nTXCAN\nControl Logic\nRX0BF\nRX1BF\nTX0RTS\nTX1RTS\nTX2RTSTX and RX Buffers\nMasks and FiltersCAN Module\nRESETTiming\nGenerationOSC1\nOSC2\nCLKOUT\nControl\nand\nInterrupt\nRegisters\nMCP2515\nDS20001801K-page 4  \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 1-2: EXAMPLE SYSTEM IMPLEMENTATION\nTABLE 1-1: PINOUT DESCRIPTION\nNamePDIP/\nSOIC \nPin #TSSOP\nPin #QFN \nPin #I/O/P \nTypeDescription Alternate Pin Function\nTXCAN 1 1 19 O Transmit output pin to CAN bus —\nRXCAN 2 2 20 I Receive input pin from CAN bus —\nCLKOUT 3 3 1 O Clock output pin with programmable \nprescalerStart-of-Frame signal\nTX0RTS 4 4 2 I Transmit buffer TXB0 Request-to-Send; \n100 k\uf057\uf020internal pull-up to VDDGeneral purpose digital input,\n100 k\uf057\uf020internal pull-up to VDD\nTX1RTS 5 5 3 I Transmit buffer TXB1 Request-to-Send; \n100 k\uf057\uf020internal pull-up to VDDGeneral purpose digital input,\n100 k\uf057\uf020internal pull-up to VDD\nTX2RTS 6 7 5 I Transmit buffer TXB2 Request-to-Send; \n100 k\uf057\uf020internal pull-up to VDDGeneral purpose digital input,\n100 k\uf057\uf020internal pull-up to VDD\nOSC2 7 8 6 O Oscillator output —\nOSC1 8 9 7 I Oscillator input External clock inputV\nSS 9 10 8 P Ground reference for logic and I/O \npins—\nRX1BF 10 11 9 O Receive buffer RXB1 interrupt pin or \ngeneral purpose digital outputGeneral purpose digital output\nRX0BF 11 12 10 O Receive buffer RXB0 interrupt pin or \ngeneral purpose digital outputGeneral purpose digital output\nINT 12 13 11 O Interrupt output pin —\nSCK 13 14 12 I Clock input pin for SPI interface —\nSI 14 16 14 I Data input pin for SPI interface —SO 15 17 15 O Data output pin for SPI interface —\nCS\n16 18 16 I Chip select input pin for SPI interface —\nRESET 17 19 17 I Active-low device Reset input —\nVDD 18 20 18 P Positive supply for logic and I/O pins —\nNC — 6,15 4,13 — No internal connection —\nEP — — 21 — Exposed Thermal Pad, connect to VSS —\nLegend: I = Input; O = Output; P = PowerXCVRSPI\nTX RX\nCANH\nCANLXCVRSPI\nTX RX\nXCVRSPI\nTX RXNode\nController\nMCP2515Node\nController\nMCP2515Node\nController\nMCP2515\n\uf0e3 2003-2021 Microchip Technology Inc.  DS20001801K-page 5MCP2515\n1.4 Transmit/Receive Buffers/Masks/\nFilters\nThe MCP2515 has three transmit and two receive\nbuffers, two acceptance masks (one for each receive\nbuffer) and a total of six acceptance filters. Figure 1-3\nshows a block diagram of these buffers and their\nconnection to the protocol engine.\nFIGURE 1-3: CAN BUFFERS AND PROTOCOL ENGINE BLOCK DIAGRAM\nAcceptance Filter\nRXF2\nR\nX\nB\n1Identifier\nData Field Data FieldIdentifierAcceptance Mask\nRXM1\nAcceptance Filter\nRXF3\nAcceptance Filter\nRXF4\nAcceptance Filter\nRXF5\nMA\nBAcceptance Filter\nRXF0\nAcceptance Filter\nRXF1\nRXB\n0TXREQTXB2ABTF\nMLOA\nTXERR\nMESSAGE\nMessage\nQueue\nControl\nTXREQTXB0ABTF\nMLOA\nTXERR\nMESSAGE\nComparatorReceive\nError\nTransmit\nError\nProtocolREC\nTEC\nErrPas\nBusOff\nFinite\nState\nMachineCounter\nCounter\nShift[14:0]\n{Transmit[5:0], Receive[8:0]}\nTransmit\nLogic\nTX RX\nConfiguration\nRegistersClock\nGeneratorPROTOCOL\nENGINEBUFFERS\nTXREQTXB1ABTF\nMLOA\nTXERR\nMESSAGEAcceptance Mask\nRXM0A\nc\nc\nep\ntA\nc\nce\np\nt\nSOF\nBit\nTiming\nLogicReceive[7:0] Transmit]7:0]Transmit Byte Sequencer\nCRC[14:0]\nMCP2515\nDS20001801K-page 6  \uf0e3 2003-2021 Microchip Technology Inc.1.5 CAN Protocol Engine\nThe CAN protocol engine combines several functional\nblocks, shown in Figure 1-4  and described below.\n1.5.1 PROTOCOL FINITE STATE MACHINE\nThe heart of the engine is the Finite State Machine\n(FSM). The FSM is a sequencer that controls the\nsequential data stream between the TX/RX Shiftregister, the CRC register and the bus line. The FSM\nalso controls the Error Management Logic (EML) and\nthe parallel data stream between the TX/RX Shiftregisters and the buffers. The FSM ensures that the\nprocesses of reception, arbitration, transmission and\nerror signaling are performed according to the CANprotocol. The automatic retransmission of messages\non the bus line is also handled by the FSM.\n1.5.2 CYCLIC REDUNDANCY CHECK\nThe Cyclic Redundancy Check register generates the\nCyclic Redundancy Check (CRC) code, which is\ntransmitted after either the Control Field (for messages\nwith 0 data bytes) or the Data Field and is used tocheck the CRC field of incoming messages. 1.5.3 ERROR MANAGEMENT LOGIC\nThe Error Management Logic (EML) is responsible forthe Fault confinement of the CAN device. Its two count-\ners, the Receive Error Counter (REC) and the Transmit\nError Counter (TEC), are incremented and decrementedby commands from the bit stream processor. Based on\nthe values of the error counters, the CAN controller is set\ninto the states: error-active, error-passive or bus-off.\n1.5.4 BIT TIMING LOGIC\nThe Bit Timing Logic (BTL) monitors the bus line input\nand handles the bus related bit timing according to the\nCAN protocol. The BTL synchronizes on a recessive-to-dominant bus transition at the Start-of-Frame (hard\nsynchronization) and on any further recessive-to-\ndominant bus line transition if the CAN controller itselfdoes not transmit a dominant bit (resynchronization).\nThe BTL also provides programmable Time Segments\nto compensate for the propagation delay time, phaseshifts and to define the position of the sample point\nwithin the bit time. The programming of the BTL\ndepends on the baud rate and external physical delaytimes.\nFIGURE 1-4: CAN PROTOCOL ENGINE BLOCK DIAGRAM\nBit Timing Logic\nCRC[14:0]\nComparator\nReceive[7:0] Transmit[7:0]Sample[2:0]\nMajority\nDecisionStuffReg[5:0]\nComparatorTransmit Logic\nReceive\nError Counter\nTransmit\nError Counter\nProtocol\nFSMRX\nSAM\nBusMon\nRec/Trm Addr.RecData[7:0] TrmData[7:0]Shift[14:0]\n(Transmit[5:0], Receive[7:0])TX\nREC\nTEC\nErrPas\nBusOff\nInterface to Standard BufferSOF\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 7MCP2515\n2.0 CAN MESSAGE FRAMES\nThe MCP2515 supports standard data frames, extended\ndata frames and remote frames (standard and\nextended), as defined in the CAN 2.0B specification. \n2.1 Standard Data Frame\nThe CAN standard data frame is shown in Figure 2-1 .\nAs with all other frames, the frame begins with a Start-\nof-Frame (SOF) bit, which is of the dominant state and\nallows hard synchronization of all nodes.\nThe SOF is followed by the arbitration field, consisting\nof 12 bits: the 11-bit identifier and the Remote\nTransmission Request (RTR) bit. The RTR bit is used\nto distinguish a data frame (RTR bit dominant) from aremote frame (RTR bit recessive).\nFollowing the arbitration field is the control field,\nconsisting of six bits. The first bit of this field is the\nIdentifier Extension (IDE) bit, which must be dominantto specify a standard frame. The following bit, Reserved\nBit Zero (RB0), is reserved and is defined as a dominant\nbit by the CAN protocol. The remaining four bits of thecontrol field are the Data Length Code (DLC) bits, which\nspecify the number of bytes of data (0-8 bytes)\ncontained in the message.\nAfter the control field, is the data field, which contains\nany data bytes that are being sent, and is of the length\ndefined by the DLC (0-8 bytes).\nThe Cyclic Redundancy Check (CRC) field follows the\ndata field and is used to detect transmission errors. TheCRC field consists of a 15-bit CRC sequence, followed\nby the recessive CRC Delimiter bit.\nThe final field is the two-bit Acknowledge (ACK) field.\nDuring the ACK Slot bit, the transmitting node sendsout a recessive bit. Any node that has received an\nerror-free frame Acknowledges the correct reception of\nthe frame by sending back a dominant bit (regardlessof whether the node is configured to accept that\nspecific message or not). The recessive Acknowledge\ndelimiter completes the Acknowledge field and may notbe overwritten by a dominant bit.\n2.2 Extended Data Frame\nIn the extended CAN data frame, shown in Figure 2-2 ,\nthe SOF bit is followed by the arbitration field, which\nconsists of 32 bits. The first 11 bits are the MostSignificant bits (MSbs) (Base-lD) of the 29-bit identifier.\nThese 11 bits are followed by the Substitute Remote\nRequest (SRR) bit, which is defined to be recessive.The SRR bit is followed by the lDE bit, which is\nrecessive to denote an extended CAN frame. \nIt should be noted that if arbitration remains unresolved\nafter transmission of the first 11 bits of the identifier, andone of the nodes involved in the arbitration is sendinga standard CAN frame (11-bit identifier), the standard\nCAN frame will win arbitration due to the assertion of a\ndominant lDE bit. Also, the SRR bit in an extended\nCAN frame must be recessive to allow the assertion ofa dominant RTR bit by a node that is sending a\nstandard CAN remote frame. \nThe SRR and lDE bits are followed by the remaining\n18 bits of the identifier (Extended lD) and the RemoteTransmission Request bit.\nTo enable standard and extended frames to be sent\nacross a shared network, the 29-bit extended message\nidentifier is split into 11-bit (Most Significant) and 18-bit(Least Significant) sections. This split ensures that the\nlDE bit can remain at the same bit position in both the\nstandard and extended frames.\nFollowing the arbitration field is the six-bit control field.\nThe first two bits of this field are reserved and must be\ndominant. The remaining four bits of the control field\nare the DLC, which specifies the number of data bytescontained in the message.\nThe remaining portion of the frame (data field, CRC\nfield, Acknowledge field, End-of-Frame and intermis-\nsion) is constructed in the same way as a standard dataframe (see  Section 2.1 “Standard Data Frame” ).\n2.3 Remote Frame\nNormally, data transmission is performed on an\nautonomous basis by the data source node (e.g., a\nsensor sending out a data frame). It is possible,\nhowever, for a destination node to request data from the\nsource. To accomplish this, the destination node sends\na remote frame with an identifier that matches the iden-tifier of the required data frame. The appropriate data\nsource node will then send a data frame in response to\nthe remote frame request.\nThere are two differences between a remote frame\n(shown in Figure 2-3 ) and a data frame. First, the RTR\nbit is at the recessive state, and second, there is no\ndata field. In the event of a data frame and a remoteframe with the same identifier being transmitted at the\nsame time, the data frame wins arbitration due to the\ndominant RTR bit following the identifier. In this way,the node that transmitted the remote frame receives\nthe desired data immediately.\n2.4 Error Frame\nAn error frame is generated by any node that detects a\nbus error. An error frame, shown in Figure 2-4 , consists\nof two fields: an error flag field followed by an error\ndelimiter field. There are two types of error flag fields.\nThe type of error flag field sent depends upon the errorstatus of the node that detects and generates the error\nflag field.\nMCP2515\nDS20001801K-page 8 \uf0e3 2003-2021 Microchip Technology Inc.2.4.1 ACTIVE ERRORS\nIf an error-active node detects a bus error, the node\ninterrupts transmission of the current message bygenerating an active error flag. The active error flag is\ncomposed of six consecutive dominant bits. This bit\nsequence actively violates the bit-stuffing rule. All otherstations recognize the resulting bit-stuffing error, and in\nturn, generate error frames themselves, called error\necho flags.\nThe error flag field, therefore, consists of between six\nand twelve consecutive dominant bits (generated by\none or more nodes). The error delimiter field (eight\nrecessive bits) completes the error frame. Uponcompletion of the error frame, bus activity returns to\nnormal and the interrupted node attempts to resend the\naborted message.\n2.4.2 PASSIVE ERRORS\nIf an error-passive node detects a bus error, the nodetransmits an error-passive flag followed by the error\ndelimiter field. The error-passive flag consists of six\nconsecutive recessive bits. The error frame for an error-passive node consists of 14 recessive bits. From this, it\nfollows that unless the bus error is detected by an error-\nactive node or the transmitting node, the message willcontinue transmission because the error-passive flag\ndoes not interfere with the bus.\nIf the transmitting node generates an error-passive flag,\nit will cause other nodes to generate error frames due tothe resulting bit-stuffing violation. After transmission of\nan error frame, an error-passive node must wait for six\nconsecutive recessive bits on the bus before attemptingto rejoin bus communications.\nThe error delimiter consists of eight recessive bits, and\nallows the bus nodes to restart bus communications\ncleanly after an error has occurred.2.5 Overload Frame\nAn overload frame, shown in Figure 2-5 , has the same\nformat as an active-error frame. An overload frame,however, can only be generated during an interframe\nspace. In this way, an overload frame can be\ndifferentiated from an error frame (an error frame issent during the transmission of a message). The\noverload frame consists of two fields: an overload flag\nfollowed by an overload delimiter. The overload flagconsists of six dominant bits followed by overload flags\ngenerated by other nodes (and, as for an active error\nflag, giving a maximum of twelve dominant bits). Theoverload delimiter consists of eight recessive bits. An\noverload frame can be generated by a node as a result\nof two conditions:\n1. The node detects a dominant bit during the inter-\nframe space, an illegal condition. Exception:  The\ndominant bit is detected during the third bit of IFS.\nIn this case, the receivers will interpret this as aSOF.\n2. Due to internal conditions, the node is not yet\nable to begin reception of the next message. A\nnode may generate a maximum of two sequential\noverload frames to delay the start of the nextmessage.\n2.6 Interframe Space\nThe interframe space separates a preceding frame (of\nany type) from a subsequent data or remote frame.\nThe interframe space is composed of at least threerecessive bits, called the ‘Intermission’. This allows\nnodes time for internal processing before the start of\nthe next message frame. After the intermission, thebus line remains in the recessive state (Bus Idle) until\nthe next transmission starts.Note: Error echo flags typically occur when a\nlocalized disturbance causes one or more\n(but not all) nodes to send an error flag.\nThe remaining nodes generate error flagsin response (echo) to the original error flag.\nNote: Case 2 should never occur with the\nMCP2515 due to very short internal\ndelays.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 9MCP2515\nFIGURE 2-1: STANDARD DATA FRAME\n0 000 11111111Start-of-FrameData Frame (number of bits = 44 + 8N)\n12\nArbitration FieldID 1011\nID3\nID0\nIdentifier\nMessage\nFiltering\nStored in Buffers\nRTR\nIDE\nRB0\nDLC3\nDLC06\n4Control\nField\nDataLengthCodeReserved Bit8N (0 \uf0a3\uf020N \uf0a3\uf0208)\nData Field\n8 8\nStored in Transmit/Receive Buffers\nBit-Stuffing16\nCRC Field\n15\nCRC7\nEnd-of-\nFrameCRC Del\nAck Slot Bit\nACK DelIFS\n1111\nMCP2515\nDS20001801K-page 10 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 2-2: EXTENDED DATA FRAME\n0 11 000 1Start-of-FrameArbitration Field32\n11ID10\nID3\nID0\nIDE\nIdentifier\nMessage\nFiltering\nStored in Buffers\nSRR\nEID17\nEID0\nRTR\nRB1\nRB0\nDLC318\nDLC06\nControl\nField\n4Reserved BitsData\nLengthCode\nStored in Transmit/Receive Buffers8 8Data Frame (number of bits = 64 + 8N)\n8N (0 \uf0a3\uf020N \uf0a3\uf0208)\nData Field\n1111111116\nCRC Field\n15\nCRC\nCRC Del\nAck Slot Bit\nACK DelEnd-of-\nFrame7\nBit-StuffingIFS\nExtended Identifier111\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 11MCP2515\nFIGURE 2-3: REMOTE FRAME\n0 11 100Start-of-FrameArbitration Field32\n11ID10\nID3\nID0\nIDE\nIdentifier\nMessage\nFiltering\nSRR\nEID17\nEID0\nRTR\nRB1\nRB0\nDLC318\nDLC06\nControl\nField\n4Reserved BitsData\nLength\nCodeExtended Identifier11111111116\nCRC Field\n15\nCRC\nCRC Del\nAck Slot Bit\nACK DelEnd-of-\nFrame7\nRemote Frame with Extended Identifier111IFS\nNo Data Field\nMCP2515\nDS20001801K-page 12 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 2-4: ACTIVE ERROR FRAME\n0 000Start-of-FrameInterrupted Data Frame\n12\nArbitration FieldID 1011\nID3\nID0\nIdentifier\nMessage\nFiltering\nRTR\nIDE\nRB0\nDLC3\nDLC06\n4Control\nField\nData\nLengthCodeReserved Bit8N (0 \uf0a3\uf020N \uf0a3\uf0208)\nData Field\n8 8\nBit-Stuffing\n0000000 00111111110Data Frame or\nRemote FrameError Frame\n6\nError\nFlag£ 6\nEcho\nError\nFlag8\nError\nDelimiterInter-Frame Space or\nOverload Frame\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 13MCP2515\nFIGURE 2-5: OVERLOAD FRAME\n0 100 111111111Start-of-FrameRemote Frame (number of bits = 44)\n12\nArbitration FieldID 1011\nID0\nRTR\nIDE\nRB0\nDLC3\nDLC06\n4Control\nField16\nCRC Field\n15\nCRC7\nEnd-of-\nFrameCRC Del\nAck Slot Bit\nACK Del\n000000011111111Overload Frame\nEnd-of-Frame or\nError Delimiter orOverload Delimiter6\nOverload\nFlagOverload\nDelimiter8 Inter-Frame Space or\nError Frame\nMCP2515\nDS20001801K-page 14 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 15MCP2515\n3.0 MESSAGE TRANSMISSION\n3.1 Transmit Buffers\nThe MCP2515 implements three transmit buffers. Each\nof these buffers occupies 14 bytes of SRAM and are\nmapped into the device memory map.\nThe first byte, TXBnCTRL, is a control register\nassociated with the message buffer. The information inthis register determines the conditions under which the\nmessage will be transmitted and indicates the status of\nthe message transmission (see Register 3-1 ).\nFive bytes are used to hold the Standard and Extended\nIdentifiers, as well as other message arbitration infor-\nmation (see Register 3-3  through Register 3-6 ). The\nlast eight bytes are for the eight possible data bytes ofthe message to be transmitted (see Register 3-8 ). \nAt a minimum, the TXBnSIDH, TXBnSIDL and TXBnDLC\nregisters must be loaded. If data bytes are present in the\nmessage, the TXBnDm registers must also be loaded.If the message is to use Extended Identifiers, the\nTXBnEIDm registers must also be loaded and the\nEXIDE (TXBnSIDL[3]) bit set.\nPrior to sending the message, the MCU must initialize\nthe TXnIE bit in the CANINTE register to enable or\ndisable the generation of an interrupt when the message\nis sent.\n3.2 Transmit Priority\nTransmit priority is a prioritization within the MCP2515of the pending transmittable messages. This isindependent from, and not necessarily related to, any\nprioritization implicit in the message arbitration scheme\nbuilt into the CAN protocol.\nPrior to sending the SOF, the priority of all buffers that\nare queued for transmission is compared. The transmit\nbuffer with the highest priority will be sent first. For\nexample, if Transmit Buffer 0 has a higher prioritysetting than Transmit Buffer 1, Transmit Buffer 0 will be\nsent first.\nIf two buffers have the same priority setting, the buffer\nwith the highest buffer number will be sent first. Forexample, if Transmit Buffer 1 has the same priority\nsetting as Transmit Buffer 0, Transmit Buffer 1 will be\nsent first.\nThere are four levels of transmit priority. If the TXP[1:0]\nbits (TXBnCTRL[1:0]) for a particular message buffer\nare set to ‘ 11’, that buffer has the highest possible pri-\nority. If the TXP[1:0] bits for a particular message bufferare ‘00’, that buffer has the lowest possible priority.3.3 Initiating Transmission \nIn order to initiate message transmission, the TXREQ\nbit (TXBnCTRL[3]) must be set for each buffer to betransmitted. This can be accomplished by:\n• Writing to the register via the SPI write command\n• Sending the SPI RTS command• Setting the TX\nnRTS pin low for the particular \ntransmit buffer(s) that are to be transmitted\nIf transmission is initiated via the SPI interface, the\nTXREQ bit can be set at the same time as the TXPx\npriority bits.\nWhen TXREQ is set, the ABTF, MLOA and TXERR bits\n(TXBnCTRL[5:4]) will be cleared automatically.\nOnce the transmission has completed successfully, the\nTXREQ bit will be cleared, the TXnIF bit (CANINTF) willbe set and an interrupt will be generated if the TXnIE bit\n(CANINTE) is set.\nIf the message transmission fails, the TXREQ bit will\nremain set. This indicates that the message is stillpending for transmission and one of the following\ncondition flags will be set:\n• If the message started to transmit but \nencountered an error condition, the TXERR (TXBnCTRL[4]) and MERRF bits (CANINTF[7]) \nwill be set, and an interrupt will be generated on \nthe INT\n pin if the MERRE bit (CANINTE[7]) is set\n• If the message is lost, arbitration at the                \nMLOA bit (TXBnCTRL[5]) will be set\n3.4 One-Shot Mode\nOne-Shot mode ensures that a message will onlyattempt to transmit one time. Normally, if a CANmessage loses arbitration, or is destroyed by an error\nframe, the message is retransmitted. With One-Shot\nmode enabled, a message will only attempt to transmitone time, regardless of arbitration loss or error frame.\nOne-Shot mode is required to maintain time slots in\ndeterministic systems, such as TTCAN.Note: The TXREQ bit (TXBnCTRL[3]) must be\nclear (indicating the transmit buffer is not\npending transmission) before writing to\nthe transmit buffer.Note: Setting the TXREQ bit (TXBnCTRL[3])\ndoes not initiate a message transmission.\nIt merely flags a message buffer as being\nready for transmission. Transmission willstart when the device detects that the bus\nis available.\nNote: If One-Shot mode is enabled (OSM bit\n(CANCTRL[3])), the above conditions willstill exist. However, the TXREQ bit will be\ncleared and the message will not attempt\ntransmission a second time.\nMCP2515\nDS20001801K-page 16 \uf0e3 2003-2021 Microchip Technology Inc.3.5 TXnRTS  Pins\nThe TX nRTS pins are input pins that can be configured\nas:\n• Request-to-Send inputs, which provide an \nalternative means of initiating the transmission of \na message from any of the transmit buffers\n• Standard digital inputs\nConfiguration and control of these pins is accomplished\nusing the TXRTSCTRL register (see Register 3-2 ). The\nTXRTSCTRL register can only be modified when theMCP2515 is in Configuration mode (see Section 10.0\n“Modes of Operation” ). If configured to operate as a\nRequest-to-Send pin, the pin is mapped into therespective TXREQ bit (TXBnCTRL[3]) for the transmit\nbuffer. The TXREQ bit is latched by the falling edge of\nthe TX\nnRTS pin. The TX nRTS pins are designed to\nallow them to be tied directly to the RX nBF pins to\nautomatically initiate a message transmission when the\nRXnBF pin goes low.\nThe TX nRTS pins have internal pull-up resistors of\n100 k\uf057 (nominal).3.6 Aborting Transmission\nThe MCU can request to abort a message in a specific\nmessage buffer by clearing the associated TXREQ bit.\nIn addition, all pending messages can be requested to\nbe aborted by setting the ABAT bit (CANCTRL[4]). This\nbit MUST be reset (typically after the TXREQ bits have\nbeen verified to be cleared) to continue transmittingmessages. The ABTF flag (TXBnCTRL[6]) will only be\nset if the abort was requested via the ABAT bit. Abort-\ning a message by resetting the TXREQ bit does NOTcause the ABTF bit to be set.\nNote 1: Messages that were transmitting when\nthe abort was requested will continue to\ntransmit. If the message does not suc-cessfully complete transmission (i.e., lost\narbitration or was interrupted by an error\nframe), it will then be aborted.\n2:When One-Shot mode is enabled, if the\nmessage is interrupted due to an error\nframe or loss of arbitration, the ABTF bit\nwill set.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 17MCP2515\nFIGURE 3-1: TRANSMIT MESSAGE FLOWCHART\nStart\nIs\nCAN bus available\nto start transmission?No\nExamine TXP[1:0] (TXBnCTRL[1:0])Are any\nTXREQ (TXBnCTRL[3])\nbits = 1?The message transmission \nsequence begins when the \ndevice determines that the TXREQ bit (TXBnCTRL[3]) for \nany of the transmit registers \nhas been set.\nClear: \nABTF (TXBnCTRL[6])MLOA (TXBnCTRL[5])TXERR (TXBnCTRL[4])Yes\nIs\nTXREQ = 0\nor ABAT = 1?Clearing the TXREQ bit while it is set, \nor setting the ABAT bit (CANCTRL[4]) \nbefore the message has started \ntransmission, will abort the message.\nNo\nTransmit Message\nWas\nMessage Transmitted\nSuccessfully?No\nYes\nClear TXREQ bit\nTXnIE (CANINTE) = 1?Generate\nInterruptYes\nMessage\nYes\nSetSet\nTXERR (TXBnCTRL[4])\nLostto Determine Highest Priority MessageNo\nSet\nMLOA (TXBnCTRL[5])\nThe TXnIE bit determines \nif an interrupt should be \ngenerated when a \nmessage is successfully transmitted.\nGOTO STARTTXnIF (CANTINF)Yes\nNoMessage error\nor\nlost arbitration\nArbitrationError\nMERRE (CANINTE)?\nNo\nGenerate\nInterruptYes\nSet\nMERRF (CANTINF)?\nMCP2515\nDS20001801K-page 18 \uf0e3 2003-2021 Microchip Technology Inc. \nREGISTER 3-1: TXBnCTRL: TRANSM IT BUFFER n CONTROL REGISTER\n(ADDRESS: 30h, 40h, 50h)\nU-0 R-0 R-0 R-0 R/W-0 U-0 R/W-0 R/W-0\n— ABTF MLOA TXERR TXREQ — TXP1 TXP0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented:  Read as ‘ 0’\nbit 6 ABTF:  Message Aborted Flag bit\n1 = Message was aborted\n0 = Message completed transmission successfully\nbit 5 MLOA:  Message Lost Arbitration bit\n1 = Message lost arbitration while being sent\n0 = Message did not lose arbitration while being sent\nbit 4 TXERR:  Transmission Error Detected bit\n1 = A bus error occurred while the message was being transmitted\n0 = No bus error occurred while the message was being transmitted\nbit 3 TXREQ:  Message Transmit Request bit\n1 = Buffer is currently pending transmission\n(MCU sets this bit to request message be transmitted – bit is automatically cleared when themessage is sent)\n0 = Buffer is not currently pending transmission\n(MCU can clear this bit to request a message abort)\nbit 2 Unimplemented:  Read as ‘ 0’\nbit 1-0 TXP[1:0]:  Transmit Buffer Priority bits\n11 = Highest message priority\n10 = High intermediate message priority\n01 = Low intermediate message priority\n00 = Lowest message priority\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 19MCP2515\n \nREGISTER 3-2: TXRTSCTRL: TX nRTS PIN CONTROL AND STATUS REGISTER\n(ADDRESS: 0Dh)\nU-0 U-0 R-x R-x R-x R/W-0 R/W-0 R/W-0\n— — B2RTS B1RTS B0RTS B2RTSM B1RTSM B0RTSM\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-6 Unimplemented:  Read as ‘ 0’\nbit 5 B2RTS:  TX2RTS  Pin State bit\n- Reads state of TX2RTS  pin when in Digital Input mode\n- Reads as ‘ 0’ when pin is in Request-to-Send mode\nbit 4 B1RTS:  TX1RTS  Pin State bit\n- Reads state of TX1RTS  pin when in Digital Input mode\n- Reads as ‘ 0’ when pin is in Request-to-Send mode\nbit 3 B0RTS:  TX0RTS  Pin State bit\n- Reads state of TX0RTS  pin when in Digital Input mode\n- Reads as ‘ 0’ when pin is in Request-to-Send mode\nbit 2 B2RTSM:  TX2RTS  Pin mode bit\n1 = Pin is used to request message transmission of TXB2 buffer (on falling edge)\n0 = Digital input\nbit 1 B1RTSM:  TX1RTS  Pin mode bit\n1 = Pin is used to request message transmission of TXB1 buffer (on falling edge)\n0 = Digital input\nbit  0 B0RTSM:  TX0RTS  Pin mode bit\n1 = Pin is used to request message transmission of TXB0 buffer (on falling edge)\n0 = Digital input\nMCP2515\nDS20001801K-page 20 \uf0e3 2003-2021 Microchip Technology Inc. \n REGISTER 3-3: TXBnSIDH: TRANSMIT BUFFE R n STANDARD IDENTIFIER REGISTER HIGH\n(ADDRESS: 31h, 41h, 51h)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nSID10 SID9 SID8 SID7 SID6 SID5 SID4 SID3\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 SID[10:3]:  Standard Identifier bits \nREGISTER 3-4: TXBnSIDL: TRANSMIT BUFFER n STANDARD IDENTIFIER REGISTER LOW\n(ADDRESS: 32h, 42h, 52h)\nR/W-x R/W-x R/W-x U-0 R/W-x U-0 R/W-x R/W-x\nSID2 SID1 SID0 — EXIDE —E I D 1 7 E I D 1 6\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 SID[2:0]:  Standard Identifier bits \nbit 4 Unimplemented:  Read as ‘ 0’\nbit 3 EXIDE:  Extended Identifier Enable bit\n1 =   Message will transmit Extended Identifier\n0 =   Message will transmit Standard Identifier\nbit 2 Unimplemented:  Read as ‘ 0’\nbit 1-0 EID[17:16]:  Extended Identifier bits \n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 21MCP2515\n REGISTER 3-5: TXBnEID8: TRANSMIT BUFFER n EXTENDED IDENTIFIER 8 REGISTER HIGH\n(ADDRESS: 33h, 43h, 53h)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nEID15 EID14 EID13 EID12 EID11 EID10 EID9 EID8\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[15:8]:  Extended Identifier bits \nREGISTER 3-6: TXBnEID0: TRANSMIT BUFFER n EXTENDED IDENTIFIER 0 REGISTER LOW\n(ADDRESS: 34h, 44h, 54h)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nEID7 EID6 EID5 EID4 EID3 EID2 EID1 EID0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[7:0]:  Extended Identifier bits \nMCP2515\nDS20001801K-page 22 \uf0e3 2003-2021 Microchip Technology Inc. \n REGISTER 3-7: TXBnDLC: TRANSMIT BU FFER n DATA LENGTH CODE REGISTER\n(ADDRESS: 35h, 45h, 55h)\nU-0 R/W-x U-0 U-0 R/W-x R/W-x R/W-x R/W-x\n—R T R — —D L C 3(1)DLC2(1)DLC1(1)DLC0(1)\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented:  Read as ‘ 0’\nbit 6 RTR:  Remote Transmission Request bit\n1 = Transmitted message will be a remote transmit request\n0 = Transmitted message will be a data frame\nbit 5-4 Unimplemented:  Reads as ‘ 0’\nbit 3-0 DLC[3:0]:  Data Length Code bits(1)\nSets the number of data bytes to be transmitted (0 to 8 bytes).\nNote 1: It is possible to set the DLC[3:0] bits to a value greater than eight; however, only eight bytes are \ntransmitted.\nREGISTER 3-8: TXBnDm: TRANSMIT BUFFER n DATA BYTE m REGISTER\n(ADDRESS: 36h-3Dh, 46h-4Dh, 56h-5Dh)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nTXBnDm7 TXBnDm6 TXBnDm5 TXBnDm4 T XBnDm3 TXBnDm2 TXBnDm1 TXBnDm0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 TXBnDm[7:0]:  Transmit Buffer n Data Field Byte m bits\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 23MCP2515\n4.0 MESSAGE RECEPTION\n4.1 Receive Message Buffering\nThe MCP2515 includes two full receive buffers with\nmultiple acceptance filters for each. There is also a\nseparate Message Assembly Buffer (MAB) that acts as\na third receive buffer (see Figure 4-2 ). \n4.1.1 MESSAGE ASSEMBLY BUFFER\nOf the three receive buffers, the MAB is always\ncommitted to receiving the next message from the bus.\nThe MAB assembles all messages received. These\nmessages will be transferred to the RXBn buffers (seeRegister 4-4  to Register 4-9 ) only if the acceptance\nfilter criteria is met. \n4.1.2 RXB0 AND RXB1\nThe remaining two receive buffers, called RXB0 and\nRXB1, can receive a complete message from theprotocol engine via the MAB. The MCU can access one\nbuffer, while the other buffer is available for message\nreception, or for holding a previously receivedmessage.\n4.1.3 RECEIVE FLAGS/INTERRUPTS\nWhen a message is moved into either of the receivebuffers, the appropriate RX nIF bit (CANINTF) is set.\nThis bit must be cleared by the MCU in order to allow a\nnew message to be received into the buffer. This bit\nprovides a positive lockout to ensure that the MCU hasfinished with the message before the MCP2515\nattempts to load a new message into the receive buffer.\nIf the RXnIE bit (CANINTE) is set, an interrupt will be\ngenerated on the INT\n pin to indicate that a valid\nmessage has been received. In addition, the associ-\nated RXnBF  pin will drive low if configured as a receive\nbuffer full pin. See Section 4.4 “RX0BF and RX1BF\nPins”  for details.4.2 Receive Priority\nRXB0, the higher priority buffer, has one mask and two\nmessage acceptance filters associated with it. Thereceived message is applied to the mask and filters for\nRXB0 first.\nRXB1 is the lower priority buffer, with one mask and\nfour acceptance filters associated with it.\nIn addition to the message being applied to the RXB0\nmask and filters first, the lower number of acceptance\nfilters makes the match on RXB0 more restrictive and\nimplies a higher priority for that buffer.\nWhen a message is received, the RXBnCTRL[3:0]\nregister bits will indicate the acceptance filter number\nthat enabled reception and whether the received\nmessage is a Remote Transfer Request. \n4.2.1 ROLLOVER\nAdditionally, the RXB0CTRL register can be configuredsuch that, if RXB0 contains a valid message and\nanother valid message is received, an overflow error\nwill not occur and the new message will be moved intoRXB1, regardless of the acceptance criteria of RXB1.\n4.2.2 RXM BITS\nThe RXM[1:0] bits (RXBnCTRL[6:5]) set special\nReceive modes. Normally, these bits are cleared to ‘ 00’\nto enable reception of all valid messages as deter-mined by the appropriate acceptance filters. In this\ncase, the determination of whether or not to receive\nstandard or extended messages is determined by theEXIDE bit (RFXnSIDL[3]) in the Filter n Standard\nIdentifier Low register.\nIf the RXM[1:0] bits are set to ‘ 11’, the buffer will receive\nall messages, regardless of the values of the accep-tance filters. Also, if a message has an error before the\nEOF, that portion of the message assembled in the\nMAB, before the error frame, will be loaded into thebuffer. This mode has some value in debugging a CAN\nsystem and would not be used in an actual system\nenvironment. \nSetting the RXM[1:0] bits to ‘ 01’ or ‘10’ is not\nrecommended.Note: The entire content of the MAB is moved\ninto the receive buffer once a message is\naccepted. This means, that regardless ofthe type of identifier (Standard or\nExtended) and the number of data bytes\nreceived, the entire receive buffer is over-written with the MAB contents. Therefore,\nthe contents of all registers in the buffer\nmust be assumed to have been modifiedwhen any message is received. \nMCP2515\nDS20001801K-page 24 \uf0e3 2003-2021 Microchip Technology Inc.4.3 Start-of-Frame Signal\nIf enabled, the Start-of-Frame signal is generated on\nthe SOF pin at the beginning of each CAN message\ndetected on the RXCAN pin.\nThe RXCAN pin monitors an Idle bus for a recessive-\nto-dominant edge. If the dominant condition remains\nuntil the sample point, the MCP2515 interprets this as\na SOF and a SOF pulse is generated. If the dominantcondition does not remain until the sample point, the\nMCP2515 interprets this as a glitch on the bus and no\nSOF signal is generated. Figure 4-1  illustrates SOF\nsignaling and glitch filtering.\nAs with One-Shot mode, one use for SOF signaling is\nfor TTCAN-type systems. In addition, by monitoring\nboth the RXCAN pin and the SOF pin, an MCU candetect early physical bus problems by detecting small\nglitches before they affect the CAN communications.\n4.4 RX0BF and RX1BF Pins\nIn addition to the INT  pin, which provides an interrupt\nsignal to the MCU for many different conditions, the\nReceive Buffer Full pins (RX0BF  and RX1BF ) can be\nused to indicate that a valid message has been loadedinto RXB0 or RXB1, respectively. The pins have three\ndifferent configurations ( Table 4-1 ):\n1. Disabled\n2. Buffer Full Interrupt3. Digital Output4.4.1 DISABLED\nThe RXnBF  pins can be disabled to the high-impedance\nstate by clearing the BnBFE bits (BFPCTRL[3:2]).\n4.4.2 CONFIGURED AS BUFFER FULL\nThe RX nBF pins can be configured to act as either\nbuffer full interrupt pins or as standard digital outputs.\nConfiguration and status of these pins are available via\nthe BFPCTRL register ( Register 4-3 ). When set to\noperate in Interrupt mode by setting the BnBFE and\nBnBFM bits (BFPCTRL[3:0]), these pins are active-low\nand are mapped to the RXnIF bit (CANINTF) for eachreceive buffer. When this bit goes high for one of the\nreceive buffers (indicating that a valid message has\nbeen loaded into the buffer), the corresponding RXnBF\npin will go low. When the RXnIF bit is cleared by the\nMCU, the corresponding interrupt pin will go to the logic\nhigh state until the next message is loaded into thereceive buffer. \nFIGURE 4-1: START-OF-FRAME SIGNALING\nSTART-OF-FRAME BIT\nSample\nPointID Bit\nRXCAN\nSOF\nEXPECTED START-OF-FRAME BIT\nSample\nPointBus Idle\nRXCAN\nSOFExpectedNormal SOF Signaling\nGlitch Filtering\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 25MCP2515\n4.4.3 CONFIGURED AS DIGITAL OUTPUT\nWhen used as digital outputs, the BnBFM bits\n(BFPCTRL[1:0]) must be cleared and the BnBFE bits(BFPCTRL[3:2]) must be set for the associated buffer.\nIn this mode, the state of the pin is controlled by the\nBnBFS bits (BFPCTRL[5:4]). Writing a ‘ 1’ to a BnBFS\nbit will cause a high level to be driven on the associated\nbuffer full pin, while a ‘ 0’ will cause the pin to drive low.\nWhen using the pins in this mode, the state of the pinshould be modified only by using the SPI BIT MODIFY\ncommand to prevent glitches from occurring on either\nof the buffer full pins.TABLE 4-1: CONFIGURING R XnBF PINS\nFIGURE 4-2: RECEIVE BUFFER BLOCK DIAGRAMBnBFE BnBFM BnBFS Pin Status\n0XX Disabled, high-impedance\n11X Receive buffer interrupt\n100 Digital output = 0\n101 Digital output = 1\nAcceptance Mask\nRXM1\nAcceptance Filter\nRXF2\nAcceptance Filter\nRXF3\nAcceptance Filter\nRXF4\nAcceptance Filter\nRXF5Acceptance Mask\nRXM0\nAcceptance Filter\nRXF0\nAcceptance Filter\nRXF1\nIdentifier\nData Field Data FieldIdentifierNote: Messages received in the MAB are initially\napplied to the mask and filters of RXB0. In\naddition, only one filter match occurs (e.g.,if the message matches both RXF0 and\nRXF2, the match will be for RXF0 and the\nmessage will be moved into RXB0).\nA\nc\nc\ne\np\ntA\nc\nc\ne\np\nt\nR\nX\nB\n0R\nX\nB\n1M\nA\nB\nMCP2515\nDS20001801K-page 26 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 4-3: RECEIVE FLOWCHART\nSet RXBF0Start\nDetect\nStart of\nMessage?\nValid\nMessage\nReceived?Generate\nError\nMeets\na Filter Criteria\nIs\nRX0IF (CANINTF)Go to Start\nMove Message into RXB0\nSet FILHIT[2:0] (RXB1CTRL[2:0])Is\nRX1IF (CANINTF[3])\nMove Message into RXB1\nSet RX1IF (CANINTF[3]) = 1Yes \nNo\nGenerate\nInterrupt on INTYesYes\nNo NoYes\nYesNo\nNoYes\nYesFrame\nNo Yes\nNoBegin Loading Message into\nMessage Assembly Buffer (MAB)\nAccording to which Filter Criteria\nwas MetSet FILHIT0 (RXB0CTRL[0])\nAccording to Which Filter Criteria\nSet CANSTAT[3:0] according to \nwhich receive buffer the message was loaded intoIs\nBUKT (RXB0CTRL[2])\nGenerate Overflow Error:\nSet RX1OVR (EFLG[7])\nIs\nERRIE (CANINTE[5])No\nGo to StartYesNo\nAre\nB0BFM (BFPCTRL[0]) = 1\nB0BFE (BFPCTRL[2]) = 1?andPin = 0\nNoSet RXBF1\nPin = 0\nNoYes YesRX0IE (CANINTE[0]) RX1IE (CANINTE[1])\nRXB1 RXB0Set RX0OVR (EFLG[6])Generate Overflow Error:\nSet RX0IF (CANINTF[0]) =  1\nAre\nB1BFM (BFPCTRL[1]) = 1\nB1BFE (BF1CTRL[3]) = 1?andMeets\na Filter Criteria\nfor RXB1?for RXB0?No Yes\nGenerate\nInterrupt on INTDetermines if the Receive\nregister is empty and ableto accept a new message.\nDetermines if RXB0 can rollover into RXB1 if it is full.\n= 0?\n= 1?= 1?\n= 1?= 0?\n= 1?\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 27MCP2515\nREGISTER 4-1: RXB0CTRL: RECEIVE BUFFE R 0 CONTROL REGISTER (ADDRESS: 60h)\nU-0 R/W-0 R/W-0 U-0 R-0 R/W-0 R-0 R-0\n— RXM1 RXM0 — RXRTR BUKT BUKT1 FILHIT0(1)\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented:  Read as ‘ 0’\nbit 6-5 RXM[1:0]:  Receive Buffer Operating mode bits\n11 = Turns mask/filters off; receives any message\n10 = Reserved\n01 = Reserved\n00 = Receives all valid messages using either Standard or Extended Identifiers that meet filter criteria;\nExtended ID Filter registers, RXFnEID8:RXFnEID0, are applied to the first two bytes of data inthe messages with standard IDs\nbit 4 Unimplemented:  Read as ‘ 0’\nbit 3 RXRTR:  Received Remote Transfer Request bit\n1 = Remote Transfer Request received\n0 = No Remote Transfer Request received\nbit 2 BUKT:  Rollover Enable bit\n1 = RXB0 message will roll over and be written to RXB1 if RXB0 is full\n0 = Rollover is disabled\nbit 1 BUKT1:  Read-Only Copy of BUKT bit (used internally by the MCP2515)\nbit 0 FILHIT0:  Filter Hit bit (indicates which acceptance filter enabled reception of message)\n(1)\n1 = Acceptance Filter 1 (RXF1)\n0 = Acceptance Filter 0 (RXF0)\nNote 1: If a rollover from RXB0 to RXB1 occurs, the FILHIT0 bit will reflect the filter that accepted the message \nthat rolled over.\nMCP2515\nDS20001801K-page 28 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 4-2: RXB1CTRL: RECEIVE BUFFE R 1 CONTROL REGISTER (ADDRESS: 70h)\nU-0 R/W-0 R/W-0 U-0 R-0 R-0 R-0 R-0\n— RXM1 RXM0 — RXRTR FILHIT2 FILHIT1 FILHIT0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented:  Read as ‘ 0’\nbit 6-5 RXM[1:0]:  Receive Buffer Operating mode bits\n11 = Turns mask/filters off; receives any message\n10 = Reserved\n01 = Reserved\n00 = Receives all valid messages using either Standard or  Extended Identifiers that meet filter criteria\nbit 4 Unimplemented:  Read as ‘ 0’\nbit 3 RXRTR:  Received Remote Transfer Request bit\n1 = Remote Transfer Request received\n0 = No Remote Transfer Request received\nbit 2-0 FILHIT[2:0]:  Filter Hit bits (indicates which acceptance filter enabled reception of message)\n101 = Acceptance Filter 5 (RXF5)\n100 = Acceptance Filter 4 (RXF4)\n011 = Acceptance Filter 3 (RXF3)\n010 = Acceptance Filter 2 (RXF2)\n001 = Acceptance Filter 1 (RXF1) (only if the BUKT bit is set in RXB0CTRL)\n000 = Acceptance Filter 0 (RXF0) (only if the BUKT bit is set in RXB0CTRL)\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 29MCP2515\nREGISTER 4-3: BFPCTRL: RX nBF PIN CONTROL AND STATUS REGISTER (ADDRESS: 0Ch)\nU-0 U-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\n— — B1BFS B0BFS B1BFE B0BFE B1BFM B0BFM\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-6 Unimplemented:  Read as ‘ 0’\nbit 5 B1BFS:  RX1BF  Pin State bit (Digital Output mode only)\nReads as ‘ 0’ when RX1BF is configured as an interrupt pin.\nbit 4 B0BFS:  RX0BF  Pin State bit (Digital Output mode only)\nReads as ‘ 0’ when RX0BF is configured as an interrupt pin.\nbit 3 B1BFE:  RX1BF  Pin Function Enable bit\n1 = Pin function is enabled, operation mode is determined by the B1BFM bit\n0 = Pin function is disabled, pin goes to a high-impedance state\nbit 2 B0BFE:  RX0BF  Pin Function Enable bit\n1 = Pin function is enabled, operation mode is determined by the B0BFM bit\n0 = Pin function is disabled, pin goes to a high-impedance state\nbit 1 B1BFM:  RX1BF  Pin Operation mode bit\n1 = Pin is used as an interrupt when a valid message is loaded into RXB1\n0 = Digital Output mode\nbit 0 B0BFM:  RX0BF  Pin Operation mode bit\n1 = Pin is used as an interrupt when a valid message is loaded into RXB0\n0 = Digital Output mode\nMCP2515\nDS20001801K-page 30 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 4-4: RXBnSIDH: RECEIVE BUFFER n STANDARD IDENTIFIER REGISTER HIGH\n(ADDRESS: 61h, 71h)\nR-x R-x R-x R-x R-x R-x R-x R-x\nSID10 SID9 SID8 SID7 SID6 SID5 SID4 SID3\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 SID[10:3]:  Standard Identifier bits \nThese bits contain the eight Most Significant bits of the Standard Identifier for the received message.\nREGISTER 4-5: RXBnSIDL: RECEIVE BUFFE R n STANDARD IDENTIFIER REGISTER LOW\n(ADDRESS: 62h, 72h)\nR-x R-x R-x R-x R-x U-0 R-x R-x\nSID2 SID1 SID0 SRR IDE —E I D 1 7 E I D 1 6\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 SID[2:0]:  Standard Identifier bits \nThese bits contain the three Least Significant bits of the Standard Identifier for the received message.\nbit 4 SRR: Standard Frame Remote Transmit Request bit (valid only if IDE bit = 0)\n1 = Standard frame Remote Transmit Request received\n0 = Standard data frame received\nbit 3 IDE: Extended Identifier Flag bit\nThis bit indicates whether the received message was a standard or an extended frame.\n1 = Received message was an extended frame\n0 = Received message was a standard frame\nbit 2 Unimplemented:  Read as ‘ 0’\nbit 1-0 EID[17:16]:  Extended Identifier bits \nThese bits contain the two Most Significant bits of the Extended Identifier for the received message.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 31MCP2515\nREGISTER 4-6: RXBnEID8: RECEIVE BUFFER n EXTENDED IDENTIFIER REGISTER HIGH\n(ADDRESS: 63h, 73h)\nR-x R-x R-x R-x R-x R-x R-x R-x\nEID15 EID14 EID13 EID12 EID11 EID10 EID9 EID8\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[15:8]:  Extended Identifier bits \nThese bits hold bits 15 through 8 of the Extended Identifier for the received message\nREGISTER 4-7: RXBnEID0: RECEIVE BUFFER n EXTENDED IDENTIFIER REGISTER LOW\n(ADDRESS: 64h, 74h)\nR-x R-x R-x R-x R-x R-x R-x R-x\nEID7 EID6 EID5 EID4 EID3 EID2 EID1 EID0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[7:0]:  Extended Identifier bits \nThese bits hold the Least Significant eight bits of the Extended Identifier for the received message.\nMCP2515\nDS20001801K-page 32 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 4-8: RXBnDLC: RECEIVE BUFF ER n DATA LENGTH CODE REGISTER \n(ADDRESS: 65h, 75h)\nU-0 R-x R-x R-x R-x R-x R-x R-x\n— RTR RB1 RB0 DLC3 DLC2 DLC1 DLC0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 Unimplemented:  Read as ‘ 0’\nbit 6 RTR:  Extended Frame Remote Transmission Request bit (valid only when IDE (RXBnSIDL[3]) = 1)\n1 = Extended frame Remote Transmit Request received\n0 = Extended data frame received\nbit 5 RB1: Reserved Bit 1\nbit 4 RB0: Reserved Bit 0\nbit 3-0 DLC[3:0]:  Data Length Code bits \nIndicates the number of data bytes that were received.\nREGISTER 4-9: RXBnDm: RECEIVE BUFFER n DATA BYTE m REGISTER \n(ADDRESS: 66h-6Dh, 76h-7Dh)\nR-x R-x R-x R-x R-x R-x R-x R-x\nRBnD7 RBnD6 RBnD5 RBnD4 RBnD3 RBnD2 RBnD1 RBnD0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 RBnD[7:0]:  Receive Buffer n Data Field Bytes m bits\nEight bytes containing the data bytes for the received message.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 33MCP2515\n4.5 Message Acceptance Filters and \nMasks\nThe message acceptance filters and masks are used to\ndetermine if a message in the Message Assembly Buffer\nshould be loaded into either of the receive buffers (seeFigure 4-5 ). Once a valid message has been received\ninto the MAB, the identifier fields of the message are com-\npared to the filter values. If there is a match, that messagewill be loaded into the appropriate receive buffer.\n4.5.1 DATA BYTE FILTERING\nWhen receiving standard data frames (11-bit identifier),\nthe MCP2515 automatically applies 16 bits of masks\nand filters, normally associated with ExtendedIdentifiers, to the first 16 bits of the data field (Data\nBytes 0 and 1). Figure 4-4  illustrates how masks and\nfilters apply to extended and standard data frames.\nData byte filtering reduces the load on the MCU when\nimplementing Higher Layer Protocols (HLPs) that filter\non the first data byte (e.g., DeviceNet™).\n4.5.2 FILTER MATCHING\nThe filter masks (see Register 4-14  through\nRegister 4-17 ) are used to determine which bits in the\nidentifier are examined with the filters. A truth table is\nshown in Table 4-2  that indicates how each bit in theidentifier is compared to the masks and filters to deter-\nmine if the message should be loaded into a receive\nbuffer. The mask essentially determines which bits to\napply the acceptance filters to. If any mask bit is set toa zero, that bit will automatically be accepted,\nregardless of the filter bit.\nTABLE 4-2: FILTER/MASK TRUTH TABLE\nAs shown in the Receive Buffer Block Diagram\n(Figure 4-2 ), acceptance filters, RXF0 and RXF1 (and\nfilter mask, RXM0), are associated with RXB0. The\nfilters, RXF2, RXF3, RXF4, RXF5 and mask RXM1, areassociated with RXB1.\nFIGURE 4-4: MASKS AND FILTERS APPLY TO CAN FRAMESMask Bit n Filter Bit nMessage \nIdentifier \nBit Accept or \nReject Bit n\n0xx Accept\n100 Accept\n101 Reject\n110 Reject\n111 Accept\nNote:  x = don’t care\nExtended Frame\nStandard Data FrameID10 ID0 EID17 EID0\nMasks and Filters Apply to the Entire 29-Bit ID Field\nID10 ID0 Data Byte 0 Data Byte 1\n11-Bit ID Standard Frame*\n16-Bit Data Filtering *\n*The two MSbs’ (EID17 and EID16) mask and filter bits are not used.\nMCP2515\nDS20001801K-page 34 \uf0e3 2003-2021 Microchip Technology Inc.4.5.3 FILHIT BITS\nFilter matches on received messages can be determined\nby the FILHIT bits in the associated RXBnCTRL register;FILHIT0 (RXB0CTRL[0]) for Buffer 0 and FILHIT[2:0]\n(RXB1CTRL[2:0]) for Buffer 1.\nThe three FILHITn bits for Receive Buffer 1 (RXB1) are\ncoded as follows:\n•101 = Acceptance Filter 5 (RXF5)\n•100 = Acceptance Filter 4 (RXF4)\n•011 = Acceptance Filter 3 (RXF3)\n•010 = Acceptance Filter 2 (RXF2)\n•001 = Acceptance Filter 1 (RXF1) \n•000 = Acceptance Filter 0 (RXF0)\nRXB0CTRL contains two copies of the BUKT bit and a\ncopy of the FILHIT0 bit.\nThe coding of the BUKT bit enables these three bits to be\nused similarly to the FILHIT[2:0] (RXB1CTRL[2:0]) bits\nand to distinguish a hit on filters, RXF0 and RXF1, in\neither RXB0 or after a rollover into RXB1.\n•111 = Acceptance Filter 1 (RXB1)\n•110 = Acceptance Filter 0 (RXB1)\n•001 = Acceptance Filter 1 (RXB0)\n•000 = Acceptance Filter 0 (RXB0)If the BUKT bit is clear, there are six codes\ncorresponding to the six filters. If the BUKT bit is set,\nthere are six codes corresponding to the six filters, plus\ntwo additional codes corresponding to the RXF0 andRXF1 filters that roll over into RXB1.\n4.5.4 MULTIPLE FILTER MATCHES\nIf more than one acceptance filter matches, the\nFILHITn bits will encode the binary value of the lowest\nnumbered filter that matched. For example, if filters,RXF2 and RXF4, match, the FILHITn bits will be loaded\nwith the value for RXF2. This essentially prioritizes the\nacceptance filters with a lower numbered filter havinghigher priority. Messages are compared to filters in\nascending order of filter number. This also ensures that\nthe message will only be received into one buffer. Thisimplies that RXB0 has a higher priority than RXB1.\n4.5.5 CONFIGURING THE MASKS AND \nFILTERS\nThe Mask and Filter registers can only be modified\nwhen the MCP2515 is in Configuration mode (see\nSection 10.0 “Modes of Operation” ).\nFIGURE 4-5: MESSAGE ACCEPTANCE MASK AND FILTER OPERATIONNote: ‘000’ and ‘001’ can only occur if the BUKT\nbit in RXB0CTRL is set, allowing RXB0\nmessages to roll over into RXB1.\nNote: The Mask and Filter registers read all ‘ 0’s\nwhen in any mode except Configuration\nmode.\nAcceptance Mask Register\nRxRqst\nMessage Assembly BufferRXFn0\nRXFn1\nRXFn nRXMn0\nRXMn1\nRXMnn\nIdentifierAcceptance Filter Register\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 35MCP2515\nREGISTER 4-10: RXFnSIDH: FILTER n STANDARD IDENTIFIER REGISTER HIGH\n(ADDRESS: 00h, 04h, 08h, 10h, 14h, 18h)(1)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nSID10 SID9 SID8 SID7 SID6 SID5 SID4 SID3\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 SID[10:3]:  Standard Identifier Filter bits \nThese bits hold the filter bits to be applied to bits[10:3] of the Standard Identifier portion of a received\nmessage.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nREGISTER 4-11: RXFnSIDL: FILTER n STANDARD IDENTIFIER REGISTER LOW\n(ADDRESS: 01h, 05h, 09h, 11h, 15h, 19h)(1)\nR/W-x R/W-x R/W-x U-0 R/W-x U-0 R/W-x R/W-x\nSID2 SID1 SID0 — EXIDE —E I D 1 7 E I D 1 6\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 SID[2:0]:  Standard Identifier Filter bits \nThese bits hold the filter bits to be applied to bits[2:0] of the Standard Identifier portion of a received\nmessage.\nbit 4 Unimplemented:  Read as ‘ 0’\nbit 3 EXIDE:  Extended Identifier Enable bit\n1 = Filter is applied only to extended frames\n0 = Filter is applied only to standard frames\nbit 2 Unimplemented:  Read as ‘ 0’\nbit 1-0 EID[17:16]:  Extended Identifier Filter bits \nThese bits hold the filter bits to be applied to bits[17:16] of the Extended Identifier portion of a received\nmessage.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nMCP2515\nDS20001801K-page 36 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 4-12: RXFnEID8: FILTER n EXTENDED IDENTIFIER REGISTER HIGH\n(ADDRESS: 02h, 06h, 0Ah, 12h, 16h, 1Ah)(1)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nEID15 EID14 EID13 EID12 EID11 EID10 EID9 EID8\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[15:8]:  Extended Identifier bits \nThese bits hold the filter bits to be applied to bits[15:8] of the Extended Identifier portion of a received\nmessage or to Byte 0 in received data if the corresponding RXM[1:0] bits = 00 and EXIDE = 0.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nREGISTER 4-13: RXFnEID0: FILTER n EXTENDED 1 REGISTER LOW\n(ADDRESS: 03h, 07h, 0Bh, 13h, 17h, 1Bh)(1)\nR/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x R/W-x\nEID7 EID6 EID5 EID4 EID3 EID2 EID1 EID0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[7:0]:  Extended Identifier bits \nThese bits hold the filter bits to be applied to bits[7:0] of the Extended Identifier portion of a received\nmessage or to Byte 1 in received data if the corresponding RXM[1:0] bits = 00 and EXIDE = 0.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 37MCP2515\nREGISTER 4-14: RXMnSIDH: MASK n STANDARD IDENTIFIER REGISTER HIGH \n(ADDRESS: 20h, 24h)(1)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nSID10 SID9 SID8 SID7 SID6 SID5 SID4 SID3\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 SID[10:3]:  Standard Identifier Mask bits \nThese bits hold the mask bits to be applied to bits[10:3] of the Standard Identifier portion of a received\nmessage.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nREGISTER 4-15: RXMnSIDL: MASK n STANDARD IDENTIFIER REGISTER LOW \n(ADDRESS: 21h, 25h)(1)\nR/W-0 R/W-0 R/W-0 U-0 U-0 U-0 R/W-0 R/W-0\nSID2 SID1 SID0 — — —E I D 1 7 E I D 1 6\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 SID[2:0]:  Standard Identifier Mask bits \nThese bits hold the mask bits to be applied to bits[2:0] of the Standard Identifier portion of a received\nmessage.\nbit 4-2 Unimplemented:  Reads as ‘ 0’\nbit 1-0 EID[17:16]:  Extended Identifier Mask bits \nThese bits hold the mask bits to be applied to bits[17:16] of the Extended Identifier portion of a received\nmessage.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nMCP2515\nDS20001801K-page 38 \uf0e3 2003-2021 Microchip Technology Inc.\\\nREGISTER 4-16: RXMnEID8: MASK n EXTENDED IDENTIFIER REGISTER HIGH \n(ADDRESS: 22h, 26h)(1)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nEID15 EID14 EID13 EID12 EID11 EID10 EID9 EID8\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[15:8]:  Extended Identifier bits \nThese bits hold the filter bits to be applied to bits[15:8] of the Extended Identifier portion of a received\nmessage. If the corresponding RXM[1:0] bits =  00 and EXIDE = 0, these bits are applied to Byte 0 in\nreceived data.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\nREGISTER 4-17: RXMnEID0: MASK n EXTENDED IDENTIFIER REGISTER LOW \n(ADDRESS: 23h, 27h)(1)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nEID7 EID6 EID5 EID4 EID3 EID2 EID1 EID0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 EID[7:0]:  Extended Identifier Mask bits \nThese bits hold the filter bits to be applied to bits[7:0] of the Extended Identifier portion of a received\nmessage. If the corresponding RXM[1:0] bits =  00 and EXIDE = 0, these bits are applied to Byte 1 in\nreceived data.\nNote 1: The Mask and Filter registers read all ‘ 0’s when in any mode except Configuration mode.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 39MCP2515\n5.0 BIT TIMING\nAll nodes on a given CAN bus must have the same\nNominal Bit Rate (NBR). The CAN protocol uses Non-\nReturn-to-Zero (NRZ) coding, which does not encode aclock within the data stream. Therefore, the receive\nclock must be recovered by the receiving nodes and\nsynchronized to the transmitter’s clock.\nAs oscillators and transmission times may vary from\nnode to node, the receiver must have some type of\nPhase-Locked Loop (PLL) synchronized to data\ntransmission edges to synchronize and maintain thereceiver clock. Since the data are NRZ coded, it is\nnecessary to include bit-stuffing to ensure that an edge\noccurs, at least every six bit times, to maintain theDigital Phase-Locked Loop (DPLL) synchronization.\nThe bit timing of the MCP2515 is implemented using a\nDPLL that is configured to synchronize to the incoming\ndata, as well as provide the nominal timing for thetransmitted data. The DPLL breaks each bit time into\nmultiple segments made up of minimal periods of time,\ncalled the Time Quanta (T\nQ).\nBus timing functions executed within the bit time frame\n(such as synchronization to the local oscillator, network\ntransmission delay compensation and sample point\npositioning) are defined by the programmable BitTiming Logic (BTL) of the DPLL.5.1 The CAN Bit Time\nAll devices on the CAN bus must use the same bit rate.However, all devices are not required to have the samemaster oscillator clock frequency. For the different\nclock frequencies of the individual devices, the bit rate\nhas to be adjusted by appropriately setting the BaudRate Prescaler and number of Time Quanta in each\nsegment.\nThe CAN bit time is made up of non-overlapping\nsegments. Each of these segments is made up of integer\nunits, called Time Quanta (T\nQ), explained later in this\ndata sheet. The Nominal Bit Rate (NBR) is defined in\nthe CAN specification as the number of bits persecond, transmitted by an ideal transmitter, with no\nresynchronization. It can be described with the\nequation:\nEQUATION 5-1:\n5.2 Nominal Bit Time\nThe Nominal Bit Time (NBT) (tbit) is made up of non-\noverlapping segments ( Figure 5-1 ). Therefore, the\nNBT is the summation of the following segments:\nAssociated with the NBT are the sample point,\nSynchronization Jump Width (SJW) and Information\nProcessing Time (IPT), which are explained later.\n5.2.1 SYNCHRONIZATION SEGMENT\nThe Synchronization Segment (SyncSeg) is the first\nsegment in the NBT and is used to synchronize thenodes on the bus. Bit edges are expected to occur\nwithin the SyncSeg. This segment is fixed at 1 T\nQ.\nFIGURE 5-1: CAN BIT TIME SEGMENTSNBR fbit1\ntbit------- ==\ntbittSyncSegtPropSegtPS1tPS2++ + =\nNominal Bit Time (NBT), tbitSample\nPointSyncSeg PropSeg PhaseSeg1 (PS1) PhaseSeg2 (PS2)\nMCP2515\nDS20001801K-page 40 \uf0e3 2003-2021 Microchip Technology Inc.5.2.2 PROPAGATION SEGMENT\nThe Propagation Segment (PropSeg) exists to\ncompensate for physical delays between nodes. Thepropagation delay is defined as twice the sum of the\nsignal’s propagation time on the bus line, including the\ndelays associated with the bus driver. The PropSeg isprogrammable from 1-8 T\nQs.\n5.2.3 PHASE SEGMENT 1 (PS1) AND \nPHASE SEGMENT 2 (PS2)\nThe two Phase Segments, PS1 and PS2, are used to\ncompensate for edge phase errors on the bus. PS1 can\nbe lengthened (or PS2 shortened) by resynchroniza-tion. PS1 is programmable from 1-8  T\nQs and PS2 is\nprogrammable from 2-8 TQs.\n5.2.4 SAMPLE POINT\nThe sample point is the point in the bit time at which the\nlogic level is read and interpreted. The sample point islocated at the end of PS1. The exception to this rule is\nif the Sample mode is configured to sample three times\nper bit. In this case, while the bit is still sampled at theend of PS1, two additional samples are taken at one-\nhalf T\nQ intervals prior to the end of PS1, with the value\nof the bit being determined by a majority decision.\n5.2.5 INFORMATION PROCESSING TIME\nThe Information Processing Time (IPT) is the timerequired for the logic to determine the bit level of a\nsampled bit. The IPT begins at the sample point, is\nmeasured in T\nQ and is fixed at 2 TQs for the Microchip\nCAN module. Since PS2 also begins at the sample\npoint and is the last segment in the bit time, it is\nrequired that the PS2 minimum is not less than the IPT.Therefore:\n5.2.6 SYNCHRONIZATION JUMP WIDTH\nThe Synchronization Jump Width (SJW) adjusts the bit\nclock, as necessary, by 1-4 T Qs (as configured) to\nmaintain synchronization with the transmitted\nmessage. Synchronization is covered in more detaillater in this data sheet.\n5.3 Time Quantum\nEach of the segments that make up a bit time are made\nup of integer units, called Time Quanta (TQ). The length\nof each Time Quantum is based on the oscillator period(T\nOSC). The base TQ equals twice the oscillator period.\nFigure 5-2  shows how the bit period is derived from\nTOSC and TQ. The TQ length equals one TQ clock\nperiod (t BRPCLK ), which is programmable using a pro-\ngrammable prescaler, called the Baud Rate Prescaler\n(BRP). This is illustrated in the following equation:\nEQUATION 5-2:\nFIGURE 5-2: TQ AND THE BIT PERIODPS2min = IPT = 2 TQs\nWhere: BRP equals the configuration as shown\nin Register 5-1 .TQ = 2 • BRP • TOSC =2 • BRP\nFOSC\nTOSC\nTBRPCLK\ntbitSync\n(fixed)PropSeg\n(Programmable)PS2\n(Programmable)PS1\n(Programmable)\nTQ\n(tTQ)\nCAN Bit Time\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 41MCP2515\n5.4 Synchronization\nTo compensate for phase shifts between the oscillator\nfrequencies of each of the nodes on the bus, each CAN\ncontroller must be able to synchronize to the relevantsignal edge of the incoming signal. Synchronization is\nthe process by which the DPLL function is implemented.\nWhen an edge in the transmitted data is detected, the\nlogic will compare the location of the edge to theexpected time (SyncSeg). The circuit will then adjust\nthe values of PS1 and PS2 as necessary.\nThere are two mechanisms used for synchronization:1. Hard synchronization\n2. Resynchronization\n5.4.1 HARD SYNCHRONIZATION\nHard synchronization is only performed when there is a\nrecessive-to-dominant edge during a Bus Idle condi-\ntion, indicating the start of a message. After hard\nsynchronization, the bit time counters are restarted withSyncSeg.\nHard synchronization forces the edge that has\noccurred to lie within the Synchronization Segment of\nthe restarted bit time. Due to the rules of synchroniza-tion, if a hard synchronization occurs, there will not be\na resynchronization within that bit time.\n5.4.2 RESYNCHRONIZATION\nAs a result of resynchronization, PS1 may belengthened or PS2 may be shortened. The amount of\nlengthening or shortening of the Phase Buffer Segmentshas an upper bound, given by the Synchronization Jump\nWidth (SJW).\nThe value of the SJW will be added to PS1 or subtracted\nfrom PS2 (see Figure 5-3 ). The SJW represents the loop\nfiltering of the DPLL. The SJW is programmable\nbetween 1 T\nQ and 4 TQs.\n5.4.2.1 Phase Errors\nThe NRZ bit coding method does not encode a clockinto the message. Clocking information will only be\nderived from recessive-to-dominant transitions. Theproperty which states that only a fixed maximum\nnumber of successive bits have the same value (bit-\nstuffing) ensures resynchronization to the bit streamduring a frame. The phase error of an edge is given by the position of\nthe edge relative to SyncSeg, measured in T\nQ. The\nphase error is defined in a magnitude of TQ as follows:\n•e  =  0 if the edge lies within SyncSeg\n•e  >  0 if the edge lies before the sample point \n(TQ is added to PS1)\n•e  <  0 if the edge lies after the sample point of the \nprevious bit (TQ is subtracted from PS2)\n5.4.2.2 No Phase Error (e = 0)\nIf the magnitude of the phase error is less than or equal\nto the programmed value of the SJW, the effect of a\nresynchronization is the same as that of a hard\nsynchronization.\n5.4.2.3 Positive Phase Error (e > 0)\nIf the magnitude of the phase error is larger than the\nSJW, and if the phase error is positive, PS1 is\nlengthened by an amount equal to the SJW.\n5.4.2.4 Negative Phase Error (e < 0)\nIf the magnitude of the phase error is larger than the\nresynchronization jump width, and the phase error is\nnegative, PS2 is shortened by an amount equal to theSJW.\n5.4.3 SYNCHRONIZATION RULES\n1. Only recessive-to-dominant edges will be used\nfor synchronization.\n2. Only one synchronization within one bit time is\nallowed.\n3. An edge will be used for synchronization only if\nthe value detected at the previous sample point\n(previously read bus value) differs from the busvalue immediately after the edge.\n4. A transmitting node will not resynchronize on a\npositive phase error (e > 0).\n5. If the absolute magnitude of the phase error is\ngreater than the SJW, the appropriate Phase\nSegment will adjust by an amount equal to the\nSJW.\nMCP2515\nDS20001801K-page 42 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 5-3: SYNCHRONIZING THE BIT TIME\nSyncSeg PropSeg PhaseSeg1 (PS1)PhaseSeg2 (PS2)\nSample\nPointSyncSeg PropSeg PhaseSeg1 (PS1)PhaseSeg2 (PS2)\nSample\nPointSyncSeg PropSeg PhaseSeg1 (PS1)PhaseSeg2 (PS2)\nSample\nPoint\nNominal Bit Time (NBT)SJW (PS1)SJW (PS2)\nNominal Bit Time (NBT)SJW (PS1)SJW (PS2)\nActual Bit Time\nResynchronization to a Slower Transmitter (e > 0)Input Signal\nInput Signal (e < 0)\nSJW (PS1)SJW (PS2)\nNominal Bit Time (NBT)\nActual Bit Time\nResynchronization to a Faster Transmitter (e < 0)Input Signal (e = 0)\nNo Resynchronization (e = 0)\n(e > 0)\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 43MCP2515\n5.5 Programming Time Segments\nSome requirements for programming of the Time\nSegments:\n• PropSeg + PS1 \uf0b3 PS2\n• PropSeg + PS1 \uf0b3 TDELAY\n• PS2 \uf0b3 SJW\nFor example, assuming that a 125 kHz CAN baud rate\nwith FOSC = 20 MHz is desired:\nTOSC = 50 ns, choose BRP[5:0] = 04h, then TQ = 500 ns.\nTo obtain 125 kHz, the bit time must be 16 TQs.\nTypically, the sampling of the bit should take place at\nabout 60-70% of the bit time, depending on the system\nparameters. Also, typically, the TDELAY  is 1-2 TQs.\nSyncSeg = 1 TQ and PropSeg = 2 TQs. So setting\nPS1 = 7 TQs would place the sample at 10 TQs after the\ntransition. This would leave 6 T Qs for PS2.\nSince PS2 is 6, according to the rules, SJW could be a\nmaximum of 4 TQs. However, a large SJW is typically\nonly necessary when the clock generation of the differ-ent nodes is inaccurate or unstable, such as using\nceramic resonators. So a SJW of 1 is usually enough.\n5.6 Oscillator Tolerance\nThe bit timing requirements allow ceramic resonators\nto be used in applications with transmission rates of upto 125 kbit/sec as a rule of thumb. For the full bus\nspeed range of the CAN protocol, a quartz oscillator is\nrequired. A maximum node-to-node oscillator variationof 1.7% is allowed.5.7 Bit Timing Configuration \nRegisters\nThe Configuration registers (CNF1, CNF2, CNF3)\ncontrol the bit timing for the CAN bus interface. These\nregisters can only be modified when the MCP2515 is inConfiguration mode (see Section 10.0 “Modes of\nOperation” ).\n5.7.1 CNF1\nThe BRP[5:0] bits control the Baud Rate Prescaler.\nThese bits set the length of TQ relative to the OSC1\ninput frequency, with the minimum T Q length being\n2TOSC (when BRP[5:0] = b000000 ). The SJW[1:0]\nbits select the SJW in terms of number of TQs.\n5.7.2 CNF2\nThe PRSEG[2:0] bits set the length (in TQs) of the\nPropagation Segment. The PHSEG1[2:0] bits set the\nlength (in TQs) of PS1.\nThe SAM bit controls how many times the RXCAN pin\nis sampled. Setting this bit to a ‘ 1’ causes the bus to be\nsampled three times: twice at T Q/2 before the sample\npoint and once at the normal sample point (which is at\nthe end of PS1). The value of the bus is determined tobe the majority sampled. If the SAM bit is set to a ‘ 0’,\nthe RXCAN pin is sampled only once at the sample\npoint.\nThe BTLMODE bit controls how the length of PS2 is\ndetermined. If this bit is set to a ‘ 1’, the length of PS2 is\ndetermined by the PHSEG2[2:0] bits of CNF3 (see\nSection 5.7.3 “CNF3” ). If the BTLMODE bit is set to a\n‘0’, the length of PS2 is greater than that of PS1 and the\nInformation Processing Time (which is fixed at 2 T\nQs\nfor the MCP2515).\n5.7.3 CNF3\nThe PHSEG2[2:0] bits set the length (in TQs) of PS2 if\nthe BTLMODE bit (CNF2[7]) is set to a ‘ 1’. If the\nBTLMODE bit is set to a ‘ 0’, the PHSEG2[2:0] bits have\nno effect.\nMCP2515\nDS20001801K-page 44 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 5-1: CNF1: CONFIGURATION REGISTER 1 (ADDRESS: 2Ah)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nSJW1 SJW0 BRP5 BRP4 BRP3 BRP2 BRP1 BRP0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-6 SJW[1:0]:  Synchronization Jump Width Length bits\n11 = Length = 4 x T Q\n10 = Length = 3 x TQ\n01 = Length = 2 x TQ\n00 = Length = 1 x T Q\nbit 5-0 BRP[5:0]:  Baud Rate Prescaler bits \nTQ = 2 x (BRP[5:0] + 1)/FOSC.\nREGISTER 5-2: CNF2: CONFIGURATION REGISTER 2 (ADDRESS: 29h)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nBTLMODE SAM PHSEG1[2:0] PRSEG2 PRSEG1 PRSEG0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 BTLMODE:  PS2 Bit Time Length bit\n1 = Length of PS2 is determined by the PHSEG2[2:0] bits of CNF3\n0 = Length of PS2 is the greater of PS1 and IPT (2 T\nQs)\nbit 6 SAM : Sample Point Configuration bit\n1 = Bus line is sampled three times at the sample point\n0 = Bus line is sampled once at the sample point\nbit 5-3 PHSEG1[2:0]:  PS1 Length bits\n(PHSEG1[2:0] + 1) x T Q.\nbit 2-0 PRSEG[2:0]:  Propagation Segment Length bits \n(PRSEG[2:0] + 1) x T Q.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 45MCP2515\nREGISTER 5-3: CNF3: CONFIGURATION REGISTER 3 (ADDRESS: 28h)\nR/W-0 R/W-0 U-0 U-0 U-0 R/W-0 R/W-0 R/W-0\nSOF WAKFIL — — — PHSEG2[2:0]\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 SOF: Start-of-Frame Signal bit\nIf CLKEN (CANCTRL[2]) = 1:\n1 = CLKOUT pin is enabled for SOF signal\n0 = CLKOUT pin is enabled for clock out function\nIf CLKEN (CANCTRL[2]) = 0:\nBit is don’t care.\nbit 6 WAKFIL:  Wake-up Filter bit\n1 = Wake-up filter is enabled\n0 = Wake-up filter is disabled\nbit 5-3 Unimplemented:  Reads as ‘ 0’\nbit 2-0 PHSEG2[2:0]:  PS2 Length bits\n(PHSEG2[2:0] + 1) x TQ. Minimum valid setting for PS2 is 2 TQs.\nMCP2515\nDS20001801K-page 46 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 47MCP2515\n6.0 ERROR DETECTION\nThe CAN protocol provides sophisticated error\ndetection mechanisms. The following errors can be\ndetected.\n6.1 CRC Error\nWith the Cyclic Redundancy Check (CRC), thetransmitter calculates special check bits for the bit\nsequence from the Start-of-Frame until the end of the\ndata field. This CRC sequence is transmitted in theCRC field. The receiving node also calculates the CRC\nsequence using the same formula and performs a com-\nparison to the received sequence. If a mismatch isdetected, a CRC error has occurred and an error frame\nis generated. The message is repeated.\n6.2 Acknowledge Error\nIn the Acknowledge field of a message, the transmitter\nchecks if the Acknowledge Slot bit (which has beensent out as a recessive bit) contains a dominant bit. If\nnot, no other node has received the frame correctly. An\nAcknowledge error has occurred, an error frame isgenerated and the message will have to be repeated.\n6.3 Form Error  \nIf a node detects a dominant bit in one of the four\nsegments (including End-of-Frame, interframe space,\nAcknowledge delimiter or CRC delimiter), a form errorhas occurred and an error frame is generated. The\nmessage is repeated.\n6.4 Bit Error\nA bit error occurs if a transmitter detects the opposite\nbit level to what it transmitted (i.e., transmitted adominant and detected a recessive, or transmitted a\nrecessive and detected a dominant).\nException:  In the case where the transmitter sends a\nrecessive bit, and a dominant bit is detected during thearbitration field and the Acknowledge Slot, no bit error\nis generated because normal arbitration is occurring.\n6.5 Stuff Error\nlf, between the Start-of-Frame and the CRC delimiter,\nsix consecutive bits with the same polarity aredetected, the bit-stuffing rule has been violated. A stuff\nerror occurs and an error frame is generated. The\nmessage is repeated.6.6 Error States\nDetected errors are made known to all other nodes viaerror frames. The transmission of the erroneous mes-sage is aborted and the frame is repeated as soon as\npossible. Furthermore, each CAN node is in one of the\nthree error states according to the value of the internalerror counters:\n1. Error-active.\n2. Error-passive.3. Bus-off (transmitter only).\nThe error-active state is the usual state where the node\ncan transmit messages and active error frames (madeof dominant bits) without any restrictions.\nIn the error-passive state, messages and passive error\nframes (made of recessive bits) may be transmitted.\nThe bus-off state makes it temporarily impossible for\nthe station to participate in the bus communication.During this state, messages can neither be received or\ntransmitted. Only transmitters can go bus-off.\n6.7 Error Modes and Error Counters\nThe MCP2515 contains two error counters: the\nReceive Error Counter (REC) (see Register 6-2 ) and\nthe Transmit Error Counter (TEC) (see Register 6-1 ).\nThe values of both counters can be read by the MCU.\nThese counters are incremented/decremented inaccordance with the CAN bus specification.\nThe MCP2515 is error-active if both error counters are\nbelow the error-passive limit of 128.\nIt is error-passive if at least one of the error counters\nequals or exceeds 128.\nIt goes to bus-off if the TEC exceeds the bus-off limit of\n255. The device remains in this state until the bus-off\nrecovery sequence is received. The bus-off recovery\nsequence consists of 128 occurrences of 11 consecutiverecessive bits (see Figure 6-1 ).\nThe current Error mode of the MCP2515 can be read\nby the MCU via the EFLG register (see Register 6-3 ).\nAdditionally, there is an error state warning flag bit,\nEWARN (EFLG[0]), which is set if at least one of the\nerror counters equals or exceeds the error warning limitof 96. EWARN is reset if both error counters are less\nthan the error warning limit.Note: The MCP2515, after going bus-off, will\nrecover back to error-active without any\nintervention by the MCU if the busremains idle for 128 x 11 bit times. If this is\nnot desired, the error Interrupt Service\nRoutine (ISR) should address this. \nMCP2515\nDS20001801K-page 48 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 6-1: ERROR MODES STATE DIAGRAM\nBus-OffError-Active\nError-PassiveREC < 127 or\nTEC < 127\nREC > 127 or\nTEC > 127\nTEC > 255Reset\n128 Occurrences of\n11 Consecutive\n“Recessive” Bits\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 49MCP2515\nREGISTER 6-1: TEC: TRANSMIT ERRO R COUNTER REGISTER (ADDRESS: 1Ch)\nR-0 R-0 R-0 R-0 R-0 R-0 R-0 R-0\nTEC7 TEC6 TEC5 TEC4 TEC3 TEC2 TEC1 TEC0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 TEC[7:0]:  Transmit Error Count bits \nREGISTER 6-2: REC: RECEIVE ERRO R COUNTER REGISTER (ADDRESS: 1Dh)\nR-0 R-0 R-0 R-0 R-0 R-0 R-0 R-0\nREC7 REC6 REC5 REC4 REC3 REC2 REC1 REC0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-0 REC[7:0]:  Receive Error Count bits \nMCP2515\nDS20001801K-page 50 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 6-3: EFLG: ERROR FLAG REGISTER (ADDRESS: 2Dh)\nR/W-0 R/W-0 R-0 R-0 R-0 R-0 R-0 R-0\nRX1OVR RX0OVR TXBO TXEP RXEP TXWAR RXWAR EWARN\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 RX1OVR:  Receive Buffer 1 Overflow Flag bit\nSets when a valid message is received for RXB1 and RX1IF (CANINTF[1]) = 1. Must be reset by MCU.\nbit 6 RX0OVR:  Receive Buffer 0 Overflow Flag bit\nSets when a valid message is received for RXB0 and RX0IF (CANINTF[0]) = 1. Must be reset by MCU.\nbit 5 TXBO:  Bus-Off Error Flag bit\nSets when TEC reaches 255. Resets after a successful bus recovery sequence.\nbit 4 TXEP:  Transmit Error-Passive Flag bit\nSets when TEC is equal to or greater than 128. Resets when TEC is less than 128.\nbit 3 RXEP:  Receive Error-Passive Flag bit\nSets when REC is equal to or greater than 128. Resets when REC is less than 128.\nbit 2 TXWAR:  Transmit Error Warning Flag bit\nSets when TEC is equal to or greater than 96. Resets when TEC is less than 96.\nbit 1 RXWAR:  Receive Error Warning Flag bit\nSets when REC is equal to or greater than 96. Resets when REC is less than 96.\nbit 0 EWARN:  Error Warning Flag  bit\nSets when TEC or REC is equal to or greater than 96 (TXWAR or RXWAR = 1). Resets when both\nREC and TEC are less than 96.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 51MCP2515\n7.0 INTERRUPTS\nThe MCP2515 has eight sources of interrupts. The\nCANINTE register contains the individual interrupt\nenable bits for each interrupt source. The CANINTFregister contains the corresponding interrupt flag bit for\neach interrupt source. When an interrupt occurs, the\nINT\n pin is driven low by the MCP2515 and will remain\nlow until the interrupt is cleared by the MCU. An\ninterrupt can not be cleared if the respective condition\nstill prevails.\nIt is recommended that the BIT MODIFY  command be\nused to reset flag bits in the CANINTF register rather than\nnormal write operations. This is done to prevent uninten-\ntionally changing a flag that changes during the WRITE\ncommand, potentially causing an interrupt to be missed.\nIt should be noted that the CANINTF flags are\nread/write and an interrupt can be generated by the\nMCU setting any of these bits, provided the associatedCANINTE bit is also set.\n7.1 Interrupt Code Bits\nThe source of a pending interrupt is indicated in the\nInterrupt Code bits, ICOD[2:0] (CANSTAT[3:1]), as\nshown in Register 10-2 . In the event that multiple inter-\nrupts occur, the INT  pin will remain low until all interrupts\nhave been reset by the MCU. The ICOD[2:0] bits will\nreflect the code for the highest priority interrupt that iscurrently pending. Interrupts are internally prioritized,\nsuch that the lower the ICODn bits value, the higher the\ninterrupt priority. Once the highest priority interrupt\ncondition has been cleared, the code for the next highest\npriority interrupt that is pending (if any) will be reflected\nby the ICODn bits (see Table 7-1 ). Only those interrupt\nsources that have their associated CANINTE enable bit\nset will be reflected in the ICODn bits.\nTABLE 7-1: ICOD[2:0] DECODE7.2 Transmit Interrupt\nWhen the Transmit Interrupt is enabled, TXnIE\n(CANINTE) = 1, an interrupt will be generated on the\nINT pin once the associated transmit buffer becomes\nempty and is ready to be loaded with a new message.\nThe TXnIF bit (CANINTF) will be set to indicate thesource of the interrupt. The interrupt is cleared by\nclearing the TXnIF bit.\n7.3 Receive Interrupt\nWhen the Receive Interrupt is enabled, RXnIE\n(CANINTE) = 1, an interrupt will be generated on the\nINT pin once a message has been successfully\nreceived and loaded into the associated receive buffer.\nThis interrupt is activated immediately after receivingthe EOF field. The RXnIF bit (CANINTF) will be set to\nindicate the source of the interrupt. The interrupt is\ncleared by clearing the RXnIF bit.\n7.4 Message Error Interrupt\nWhen an error occurs during the transmission or recep-tion of a message, the Message Error Flag, MERRF\n(CANINTF[7]), will be set, and if the MERRE bit\n(CANINTE[7]) is set, an interrupt will be generated onthe INT\n pin. This is intended to be used to facilitate\nbaud rate determination when used in conjunction with\nListen-Only mode. \n7.5 Bus Activity Wake-up Interrupt\nWhen the MCP2515 is in Sleep mode and the bus activitywake-up interrupt is enabled (WAKIE (CANINTE[6]) = 1),\nan interrupt will be generated on the INT\n pin and the\nWAKIF bit (CANINTF[6]) will be set when activity isdetected on the CAN bus. This interrupt causes the\nMCP2515 to exit Sleep mode. The interrupt is reset by\nclearing the WAKIF bit.\n7.6 Error Interrupt\nWhen the error interrupt is enabled (ERRIE(CANINTE[5]) = 1), an interrupt is generated on the INT\npin if an overflow condition occurs, or if the error state\nof the transmitter or receiver has changed. The ErrorFlag (EFLG) register will indicate one of the following\nconditions.ICOD[2:0] Boolean Expression\n000 ERR\n•WAK •TX0 •TX1 •TX2 •RX0 •RX1\n001 ERR\n010 ERR •WAK\n011 ERR •WAK •TX0\n100 ERR •WAK •TX0 •TX1\n101 ERR •WAK •TX0 •TX1 •TX2\n110 ERR •WAK •TX0 •TX1 •TX2 •RX0\n111 ERR •WAK •TX0 •TX1 •TX2 •RX0 •RX1\nNote: ERR  is associated with the ERRIE bit\n(CANINTE[5]).Note: The MCP2515 wakes up into Listen-Only\nmode.\nMCP2515\nDS20001801K-page 52 \uf0e3 2003-2021 Microchip Technology Inc.7.6.1 RECEIVER OVERFLOW\nAn overflow condition occurs when the MAB has\nassembled a valid receive message (the message\nmeets the criteria of the acceptance filters) and the\nreceive buffer associated with the filter is not availablefor loading of a new message. The associated\nRXnOVR bit (EFLG) will be set to indicate the overflow\ncondition. This bit must be cleared by the MCU.\n7.6.2 RECEIVER WARNING\nThe REC has reached the MCU warning limit of 96.\n7.6.3 TRANSMITTER WARNING\nThe TEC has reached the MCU warning limit of 96.\n7.6.4 RECEIVER ERROR-PASSIVE\nThe REC has exceeded the error-passive limit of 127and the device has gone to the error-passive state.7.6.5 TRANSMITTER ERROR-PASSIVE\nThe TEC has exceeded the error-passive limit of 127and the device has gone to the error-passive state.\n7.6.6 BUS-OFF\nThe TEC has exceeded 255 and the device has goneto the bus-off state.\n7.7 Interrupt Acknowledge\nInterrupts are directly associated with one or morestatus flags in the CANINTF register. Interrupts are\npending as long as one of the flags is set. Once an\ninterrupt flag is set by the device, the flag can not bereset by the MCU until the interrupt condition is\nremoved.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 53MCP2515\nREGISTER 7-1: CANINTE: CAN INTERRUPT ENABLE REGISTER (ADDRESS: 2Bh)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nMERRE WAKIE ERRIE TX2IE TX1IE TX0IE RX1IE RX0IE\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 MERRE:  Message Error Interrupt Enable bit\n1 = Interrupt on error during message reception or transmission\n0 =D i s a b l e d\nbit 6 WAKIE:  Wake-up Interrupt Enable bit\n1 = Interrupt on CAN bus activity\n0 =D i s a b l e d\nbit 5 ERRIE:  Error Interrupt Enable bit (multiple sources in EFLG register)\n1 = Interrupt on EFLG error condition change\n0 = Disabled\nbit 4 TX2IE:  Transmit Buffer 2 Empty Interrupt Enable bit\n1 = Interrupt on TXB2 becoming empty\n0 =D i s a b l e d\nbit 3 TX1IE:  Transmit Buffer 1 Empty Interrupt Enable bit\n1 = Interrupt on TXB1 becoming empty\n0 =D i s a b l e d\nbit 2 TX0IE:  Transmit Buffer 0 Empty Interrupt Enable bit\n1 = Interrupt on TXB0 becoming empty\n0 =D i s a b l e d\nbit 1 RX1IE:  Receive Buffer 1 Full Interrupt Enable bit\n1 = Interrupt when message was received in RXB1\n0 =D i s a b l e d\nbit 0 RX0IE:  Receive Buffer 0 Full Interrupt Enable bit\n1 = Interrupt when message was received in RXB0\n0 =D i s a b l e d\nMCP2515\nDS20001801K-page 54 \uf0e3 2003-2021 Microchip Technology Inc.REGISTER 7-2: CANINTF: CAN INTERRUPT FLAG REGISTER (ADDRESS: 2Ch)\nR/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0 R/W-0\nMERRF WAKIF ERRIF TX2IF TX1IF TX0IF RX1IF RX0IF\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7 MERRF:  Message Error Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 6 WAKIF:  Wake-up Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 5 ERRIF:  Error Interrupt Flag bit (multiple sources in EFLG register)\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 4 TX2IF:  Transmit Buffer 2 Empty Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 3 TX1IF:  Transmit Buffer 1 Empty Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 2 TX0IF:  Transmit Buffer 0 Empty Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 1 RX1IF:  Receive Buffer 1 Full Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\nbit 0 RX0IF:  Receive Buffer 0 Full Interrupt Flag bit\n1 = Interrupt is pending (must be cleared by MCU to reset the interrupt condition)\n0 = No interrupt is pending\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 55MCP2515\n8.0 OSCILLATOR\nThe MCP2515 is designed to operate with a crystal or\nceramic resonator connected to the OSC1 and OSC2\npins. The MCP2515 oscillator design requires the useof a parallel cut crystal. Use of a series cut crystal may\ngive a frequency out of the crystal manufacturer’s\nspecifications. A typical oscillator circuit is shown inFigure 8-1 . The MCP2515 may also be driven by an\nexternal clock source connected to the OSC1 pin, as\nshown in Figure 8-2  and Figure 8-3 .\n8.1 Oscillator Start-up Timer\nThe MCP2515 utilizes an Oscillator Start-up Timer\n(OST) that holds the MCP2515 in Reset to ensure that\nthe oscillator has stabilized before the internal state\nmachine begins to operate. The OST keeps the devicein a Reset state for 128 OSC1 clock cycles after the\noccurrence of a Power-on Reset, SPI Reset, after the\nassertion of the RESET\n pin and after a wake-up from\nSleep mode. It should be noted that no SPI protocol\noperations should be attempted until after the OST has\nexpired.8.2 CLKOUT Pin\nThe CLKOUT pin is provided to the system designer foruse as the main system clock or as a clock input for otherdevices in the system. The CLKOUT has an internal\nprescaler which can divide F\nOSC by 1, 2, 4 and 8. The\nCLKOUT function is enabled and the prescaler isselected via the CANCTRL register (see Register 10-1 ).\nThe CLKOUT pin will be active upon system Reset and\ndefault to the slowest speed (divide-by-8) so that it can\nbe used as the MCU clock.\nWhen Sleep mode is requested, the MCP2515 will\ndrive sixteen additional clock cycles on the CLKOUTpin before entering Sleep mode. The Idle state of the\nCLKOUT pin in Sleep mode is low. When the CLKOUT\nfunction is disabled (CLKEN (CANCTRL[2]) = 0), the\nCLKOUT pin is in a high-impedance state.\nThe CLKOUT function is designed to ensure that\nt\nhCLKOUT  and tlCLKOUT  timings are preserved when the\nCLKOUT pin function is enabled, disabled or theprescaler value is changed. \nFIGURE 8-1: CRYSTAL/CERAMIC RESONATOR OPERATION\nFIGURE 8-2: EXTERNAL CLOCK SOURCE(2)Note: The maximum frequency on CLKOUT is\nspecified as 25 MHz (See Table 13-5 ).\nC1\nC2XTAL\nOSC2OSC1\nSleepTo Internal Logic\nNote 1: A Series Resistor (R S) may be required for AT strip cut crystals.\n2:The Feedback Resistor (RF) is typically in the range of 2 to 10 M \uf057.RS(1)RF(2)\nClock from\nExternal SystemOSC1\nOSC2\nNote 1: A resistor to ground may be used to reduce system noise; this may increase system current.\n2:Duty cycle restrictions must be observed (see Table 13-2 ).Open(1)\nMCP2515\nDS20001801K-page 56 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 8-3: EXTERNAL SERIES RESONANT CRYSTAL OSCILLATOR CIRCUIT(1)\nTABLE 8-1: CAPACITOR SELECTION FOR \nCERAMIC RESONATORSTABLE 8-2: CAPACITOR SELECTION FOR \nCRYSTAL OSCILLATOR330 k\uf057\n74AS0474AS04MCP2510\nOSC1To Other\nDevices\nXTAL330 k\uf057\n74AS04\n0.1 mF\nNote 1: Duty cycle restrictions must be observed (see Table 13-2 ).\nTypical Capacitor Values Used:\nMode Freq. OSC1 OSC2\nH S 8 . 0  M H z 2 7p F 2 7p F\n16.0 MHz 22 pF 22 pF\nCapacitor values are for design guidance only:\nThese capacitors were tested with the resonators \nlisted below for basic start-up and operation. These \nvalues are not optimized.\nDifferent capacitor values may be required to \nproduce acceptable oscillator operation. The user should test the performance of the oscillator over the \nexpected V\nDD and temperature range for the \napplication.\nSee Table 8-2  footnotes for additional information.\nResonators Used:\n4.0 MHz\n8.0 MHz\n16.0 MHzOsc \nType(1,4)Crystal\nFreq.(2)Typical Capacitor \nValues Tested:\nC1 C2\nHS 4 MHz 27 pF 27 pF\n8 MHz 22 pF 22 pF\n20 MHz 15 pF 15 pF\nCapacitor values are for design guidance only:\nThese capacitors were tested with the crystals listed \nbelow for basic start-up and operation. These values \nare not optimized.\nDifferent capacitor values may be required to produce \nacceptable oscillator operation. The user should test \nthe performance of the oscillator over the expected V\nDD and temperature range for the application.\nSee the notes following this table for additional \ninformation.\nCrystals Used:(3)\n4.0 MHz\n8.0 MHz\n20.0 MHz\nNote 1: While higher capacitance increases the \nstability of the oscillator, it also increases \nthe start-up time.\n2:Since each resonator/crystal has its own \ncharacteristics, the user should consult the \nresonator/crystal manufacturer for appropriate values of external components.\n3:R\nS may be required to avoid overdriving \ncrystals with a low drive level specification.\n4:Always verify oscillator performance over \nthe V DD and temperature range that is \nexpected for the application.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 57MCP2515\n9.0 RESET\nThe MCP2515 differentiates between two kinds of\nResets:\n1. Hardware Reset – Low on RESET  pin.\n2. SPI Reset – Reset via SPI command.Both of these Resets are functionally equivalent. It is\nimportant to provide one of these two Resets after\npower-up to ensure that the logic and registers are in\ntheir default state. A hardware Reset can be achievedautomatically by placing an RC on the RESET\n pin (see\nFigure 9-1 ). The values must be such that the device is\nheld in Reset for a minimum of 2 µs after VDD reaches\nthe operating voltage, as indicated in the electrical\nspecification (tRL).\nFIGURE 9-1: RESET  PIN CONFIGURATION EXAMPLE\nRESETVDDVDD\nR\nC\nNote 1: The diode, D, helps discharge the capacitor quickly when VDD powers down.\n2:R1 = 1 k \uf057 to 10 k\uf057 will limit any current flowing into RESET  from the external capacitor, C, in the event of \nRESET  pin breakdown due to Electrostatic Discharge (ESD) or Electrical Overstress (EOS).R1(2)D(1)\nMCP2515\nDS20001801K-page 58 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 59MCP2515\n10.0 MODES OF OPERATION\nThe MCP2515 has five modes of operation. These\nmodes are:\n1. Configuration mode.\n2. Normal mode.\n3. Sleep mode.4. Listen-Only mode.\n5. Loopback mode.\nThe operational mode is selected via the\nREQOP[2:0] bits (CANCTRL[7:5]); see Register 10-1 ). \nWhen changing modes, the mode will not actually\nchange until all pending message transmissions arecomplete. The requested mode must be verified by\nreading the OPMOD[2:0] bits (CANSTAT[7:5]); see\nRegister 10-2 .\n10.1 Configuration Mode\nThe MCP2515 must be initialized before activation.\nThis is only possible if the device is in the Configuration\nmode. Configuration mode is automatically selected\nafter power-up, a Reset or can be entered from anyother mode by setting the REQOP[2:0] bits to ‘ 100’.\nWhen Configuration mode is entered, all error counters\nare cleared. Configuration mode is the only modewhere the following registers are modifiable:\n• CNF1, CNF2, CNF3 registers\n• TXRTSCTRL register• Filter registers\n• Mask registers\n10.2 Sleep Mode\nThe MCP2515 has an internal Sleep mode that is used\nto minimize the current consumption of the device. The\nSPI interface remains active for reading even when theMCP2515 is in Sleep mode, allowing access to all\nregisters.\nTo enter Sleep mode, the Request Operation Mode bits\nare set in the CANCTRL register (REQOP[2:0]). TheOPMOD[2:0] bits (CANSTAT[7:5]) indicate the opera-\ntion mode. These bits should be read after sending the\nSLEEP  command to the MCP2515. The MCP2515 is\nactive and has not yet entered Sleep mode until these\nbits indicate that Sleep mode has been entered.\nWhen in internal Sleep mode, the wake-up interrupt is\nstill active (if enabled). This is done so that the MCUcan also be placed into a Sleep mode and use the\nMCP2515 to wake it up upon detecting activity on the\nbus.When in Sleep mode, the MCP2515 stops its internal\noscillator. The MCP2515 will wake up when bus activity\noccurs or when the MCU sets, via the SPI interface, the\nWAKIF bit (CANINTF[6]). To ‘generate’ a wake-upattempt, the WAKIE bit (CANINTE[6]) must also be set\nin order for the wake-up interrupt to occur.\nThe TXCAN pin will remain in the recessive state while\nthe MCP2515 is in Sleep mode.\n10.2.1 WAKE-UP FUNCTIONS\nThe device will monitor the RXCAN pin for activity whileit is in Sleep mode. If the WAKIE bit is set, the device\nwill wake-up and generate an interrupt. Since the inter-\nnal oscillator is shut down while in Sleep mode, it willtake some amount of time for the oscillator to start-up\nand the device to enable itself to receive messages.\nThis Oscillator Start-up Timer (OST) is defined as128 T\nOSC.\nThe device will ignore the message that caused the\nwake-up from Sleep mode, as well as any messages\nthat occur while the device is ‘waking up’. The devicewill wake up in Listen-Only mode. The MCU must set\nNormal mode before the MCP2515 will be able to\ncommunicate on the bus.\nThe device can be programmed to apply a low-pass\nfilter function to the RXCAN input line while in internal\nSleep mode. This feature can be used to prevent the\ndevice from waking up due to short glitches on the CANbus lines. The WAKFIL bit (CNF3[6]) enables or\ndisables the filter.\n10.3 Listen-Only Mode\nListen-Only mode provides a means for the MCP2515 to\nreceive all messages (including messages with errors)by configuring the RXM[1:0] bits (RXBnCTRL[6:5]). This\nmode can be used for bus monitor applications or for\ndetecting the baud rate in ‘hot plugging’ situations.\nFor Auto-Baud Detection (ABD), it is necessary that at\nleast two other nodes are communicating with each\nother. The baud rate can be detected empirically by\ntesting different values until valid messages arereceived.\nListen-Only mode is a silent mode, meaning no\nmessages will be transmitted while in this mode\n(including error flags or Acknowledge signals). InListen-Only mode, both valid and invalid messages will\nbe received, regardless of filters and masks or the\nReceive Buffer Operating Mode bits, RXMn. The errorcounters are reset and deactivated in this state. The\nListen-Only mode is activated by setting the Request\nOperation Mode bits (REQOP[2:0]) in the CANCTRLregister.\nMCP2515\nDS20001801K-page 60 \uf0e3 2003-2021 Microchip Technology Inc.10.4 Loopback Mode\nLoopback mode will allow internal transmission of\nmessages from the transmit buffers to the receivebuffers without actually transmitting messages on the\nCAN bus. This mode can be used in system\ndevelopment and testing.\nIn this mode, the ACK bit is ignored and the device will\nallow incoming messages from itself, just as if they\nwere coming from another node. The Loopback mode\nis a silent mode, meaning no messages will be trans-mitted while in this state (including error flags or\nAcknowledge signals). The TXCAN pin will be in a\nrecessive state. The filters and masks can be used to allow only\nparticular messages to be loaded into the Receive\nregisters. The masks can be set to all zeros to provide\na mode that accepts all messages. The Loopbackmode is activated by setting the Request Operation\nMode bits in the CANCTRL register.\n10.5 Normal Mode\nNormal mode is the standard operating mode of the\nMCP2515. In this mode, the device actively monitors allbus messages and generates Acknowledge bits, error\nframes, etc. This is also the only mode in which the\nMCP2515 will transmit messages over the CAN bus.\nREGISTER 10-1: CANCTRL: CAN CONT ROL REGISTER (ADDRESS: XFh)\nR/W-1 R/W-0 R/W-0 R/W-0 R/W-0 R/W-1 R/W-1 R/W-1\nREQOP2 REQOP1 REQOP0 ABAT OSM CLKEN CLKPRE1 CLKPRE0\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 REQOP[2:0]: Request Operation Mode bits \n000 = Sets Normal Operation mode\n001 = Sets Sleep mode\n010 = Sets Loopback mode\n011 = Sets Listen-Only mode\n100 = Sets Configuration mode\nAll other values for the REQOPn bits are invalid and should not be used. On power-up, REQOP[2:0] = b’100’ .\nbit 4 ABAT: Abort All Pending Transmissions bit\n1 = Requests abort of all pending transmit buffers\n0 = Terminates request to abort all transmissions\nbit 3 OSM: One-Shot Mode bit\n1 = Enabled; messages will only attempt to transmit one time\n0 = Disabled; messages will reattempt transmission if required\nbit 2 CLKEN:  CLKOUT Pin Enable bit\n1 = CLKOUT pin is enabled\n0 = CLKOUT pin is disabled (pin is in high-impedance state)\nbit 1-0 CLKPRE[1:0]: CLKOUT Pin Prescaler bits \n00 =FCLKOUT  = System Clock/1\n01 =F CLKOUT  = System Clock/2\n10 =FCLKOUT  = System Clock/4\n11 =FCLKOUT  = System Clock/8\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 61MCP2515\nREGISTER 10-2: CANSTAT: CAN STATUS REGISTER (ADDRESS: XEh)\nR-1 R-0 R-0 U-0 R-0 R-0 R-0 U-0\nOPMOD2 OPMOD1 OPMOD0 — ICOD2 ICOD1 ICOD0 —\nbit 7 bit 0\nLegend:\nR = Readable bit W = Writable bit U = Unimplemented bit, read as ‘0’\n-n = Value at POR ‘1’ = Bit is set ‘0’ = Bit is cleared x = Bit is unknown\nbit 7-5 OPMOD[2:0]:  Operation Mode bits \n000 = Device is in Normal Operation mode\n001 = Device is in Sleep mode\n010 = Device is in Loopback mode\n011 = Device is in Listen-Only mode\n100 = Device is in Configuration mode\nbit 4 Unimplemented: Read as ‘0’\nbit 3-1 ICOD[2:0]: Interrupt Flag Code bits \n000 = No interrupt\n001 = Error interrupt\n010 = Wake-up interrupt\n011 = TXB0 interrupt\n100 = TXB1 interrupt\n101 = TXB2 interrupt\n110 = RXB0 interrupt\n111 = RXB1 interrupt\nbit 0 Unimplemented: Read as ‘0’\nMCP2515\nDS20001801K-page 62 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 63MCP2515\n11.0 REGISTER MAP\nThe register map for the MCP2515 is shown in\nTable 11-1 . Address locations for each register are\ndetermined by using the column (higher order fourbits) and row (lower order four bits) values. The regis-\nters have been arranged to optimize the sequentialreading and writing of data. Some specific control and\nstatus registers allow individual bit modification using\nthe SPI BIT MODIFY  command. The registers that\nallow this command are shown as shaded locations inTable 11-1 . A summary of the MCP2515 control\nregisters is shown in Table 11-2 .\nTABLE 11-1: CAN CONTROLLER REGISTER MAP\nTABLE 11-2: CONTROL REGISTER SUMMARYLower\nAddress\nBitsHigher Order Address Bits\n0000 xxxx 0001 xxxx 0010 xxxx 0011 xxxx 0100 xxxx 0101 xxxx 0110 xxxx 0111 xxxx\n0000 RXF0SIDH RXF3SIDH RXM0SIDH TXB0CTRL TXB1CTRL TXB2CTRL RXB0CTRL RXB1CTRL\n0001 RXF0SIDL RXF3SIDL RXM0SIDL TXB0SIDH TXB1SIDH TXB2SIDH RXB0SIDH RXB1SIDH\n0010 RXF0EID8 RXF3EID8 RXM0EID8 TXB0SIDL TXB1SIDL TXB2SIDL RXB0SIDL RXB1SIDL\n0011 RXF0EID0 RXF3EID0 RXM0EID0 TXB0EID8 TXB1EID8 TXB2EID8 RXB0EID8 RXB1EID8\n0100 RXF1SIDH RXF4SIDH RXM1SIDH TXB0EID0 TXB1EID0 TXB2EID0 RXB0EID0 RXB1EID0\n0101 RXF1SIDL RXF4SIDL RXM1SIDL TXB0DLC TXB1DLC TXB2DLC RXB0DLC RXB1DLC\n0110 RXF1EID8 RXF4EID8 RXM1EID8 TXB0D0 TXB1D0 TXB2D0 RXB0D0 RXB1D0\n0111 RXF1EID0 RXF4EID0 RXM1EID0 TXB0D1 TXB1D1 TXB2D1 RXB0D1 RXB1D1\n1000 RXF2SIDH RXF5SIDH CNF3 TXB0D2 TXB1D2 TXB2D2 RXB0D2 RXB1D2\n1001 RXF2SIDL RXF5SIDL CNF2 TXB0D3 TXB1D3 TXB2D3 RXB0D3 RXB1D3\n1010 RXF2EID8 RXF5EID8 CNF1 TXB0D4 TXB1D4 TXB2D4 RXB0D4 RXB1D4\n1011 RXF2EID0 RXF5EID0 CANINTE TXB0D5 TXB1D5 TXB2D5 RXB0D5 RXB1D5\n1100 BFPCTRL TEC CANINTF TXB0D6 TXB1D6 TXB2D6 RXB0D6 RXB1D6\n1101 TXRTSCTRL REC EFLG TXB0D7 TXB1D7 TXB2D7 RXB0D7 RXB1D7\n1110 CANSTAT CANSTAT CANSTAT CANSTAT CANSTAT CANSTAT CANSTAT CANSTAT\n1111 CANCTRL CANCTRL CANCTRL CANCTRL CANCTRL CANCTRL CANCTRL CANCTRL\nNote: Shaded register locations indicate that the user is allowed to manipulate individual bits using the BIT MODIFY  command.\nRegister\nNameAddress\n(Hex)Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0POR/Reset\nValue\nBFPCTRL 0C — — B1BFS B0BFS B1BFE B0BFE B1BFM B0BFM --00 0000\nTXRTSCTRL 0D — — B2RTS B1RTS B0RTS B2RTSM B1RTSM B0RTSM --xx x000\nCANSTAT XE OPMOD2 OPMOD1 OPMOD0 — ICOD2 ICOD1 ICOD0 —100- 000-\nCANCTRL XF REQOP2 REQOP1 REQOP0 ABAT OSM CLKEN CLKPRE1 CLKPRE0 1000 0111\nTEC 1C Transmit Error Counter (TEC) 0000 0000\nREC 1D Receive Error Counter (REC) 0000 0000\nCNF3 28 SOF WAKFIL — — — PHSEG22 PHSEG21 PHSEG20 00-- -000\nCNF2 29 BTLMODE SAM PHSEG12 PHSEG11 PHSEG10 PRSEG2 PRSEG1 PRSEG0 0000 0000\nCNF1 2A SJW1 SJW0 BRP5 BRP4 BRP3 BRP2 BRP1 BRP0 0000 0000\nCANINTE 2B MERRE WAKIE ERRIE TX2IE TX1IE TX0IE RX1IE RX0IE 0000 0000\nCANINTF 2C MERRF WAKIF ERRIF TX2IF TX1IF TX0IF RX1IF RX0IF 0000 0000\nEFLG 2D RX1OVR RX0OVR TXBO TXEP RXEP TXWAR RXWAR EWARN 0000 0000\nTXB0CTRL 30 — ABTF MLOA TXERR TXREQ —T X P 1 T X P 0 -000 0-00\nTXB1CTRL 40 — ABTF MLOA TXERR TXREQ —T X P 1 T X P 0 -000 0-00\nTXB2CTRL 50 — ABTF MLOA TXERR TXREQ —T X P 1 T X P 0 -000 0-00\nRXB0CTRL 60 —R X M 1 R X M 0 — RXRTR BUKT BUKT1 FILHIT0 -00- 0000\nRXB1CTRL 70 —R X M 1 R X M 0 — RXRTR FILHIT2 FILHIT1 FILHIT0 -00- 0000\nMCP2515\nDS20001801K-page 64 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 65MCP2515\n12.0 SPI INTERFACE\n12.1 Overview\nThe MCP2515 is designed to interface directly with the\nSerial Peripheral Interface (SPI) port available on many\nmicrocontrollers and supports Mode 0,0 and Mode 1,1.\nCommands and data are sent to the device via the SIpin, with data being clocked in on the rising edge of\nSCK. Data are driven out by the MCP2515 (on the SO\nline) on the falling edge of SCK. The CS\n pin must be\nheld low while any operation is performed. Table 12-1\nshows the instruction bytes for all operations. Refer to\nFigure 12-10  and Figure 12-11  for detailed input and\noutput timing diagrams for both Mode 0,0 and Mode 1,1\noperation.\n12.2RESET  Instruction\nThe RESET  instruction can be used to reinitialize the inter-\nnal registers of the MCP2515 and set the Configurationmode. This command provides the same functionality, via\nthe SPI interface, as the RESET\n pin.\nThe RESET  instruction is a single byte instruction that\nrequires selecting the device by pulling the CS  pin low,\nsending the instruction byte and then raising the CS\npin. It is highly recommended that the RESET  command\nbe sent (or the RESET  pin be lowered) as part of the\npower-on initialization sequence.\n12.3READ  Instruction\nThe READ  instruction is started by lowering the CS  pin.\nThe READ  instruction is then sent to the MCP2515,\nfollowed by the 8-bit address (A7 through A0). Next, thedata stored in the register at the selected address will\nbe shifted out on the SO pin.\nThe internal Address Pointer is automatically incre-\nmented to the next address once each byte of data isshifted out. Therefore, it is possible to read the next\nconsecutive register address by continuing to provide\nclock pulses. Any number of consecutive registerlocations can be read sequentially using this method.\nThe READ  operation is terminated by raising the CS\n pin\n(Figure 12-2 ).12.4READ RX BUFFER  Instruction\nThe READ RX BUFFER  instruction ( Figure 12-3 ) provides\na means to quickly address a receive buffer for reading.This instruction reduces the SPI overhead by one byte,\nthe address byte. The command byte actually has four\npossible values that determine the Address Pointerlocation. Once the command byte is sent, the controller\nclocks out the data at the address location, the same as\nthe READ  instruction (i.e., sequential reads are\npossible). This instruction further reduces the SPI\noverhead by automatically clearing the associated\nreceive flag, RXnIF (CANINTF), when CS\n is raised at\nthe end of the command.\n12.5WRITE  Instruction\nThe WRITE  instruction is started by lowering the CS\npin. The WRITE  instruction is then sent to the\nMCP2515, followed by the address and at least onebyte of data.\nIt is possible to write to sequential registers by continu-\ning to clock in data bytes as long as CS\n is held low.\nData will actually be written to the register on the risingedge of the SCK line for the D0 bit. If the CS\n line is\nbrought high before eight bits are loaded, the write will\nbe aborted for that data byte and previous bytes in thecommand will have been written. Refer to the timing\ndiagram in Figure 12-4  for a more detailed illustration of\nthe byte write sequence.\n12.6LOAD TX BUFFER  Instruction\nThe LOAD TX BUFFER  instruction ( Figure 12-5 ) elimi-\nnates the eight-bit address required by a normal WRITE\ncommand. The eight-bit instruction sets the Address\nPointer to one of six addresses to quickly write to atransmit buffer that points to the “ID” or “data” address\nof any of the three transmit buffers.\n12.7 Request-to-Send ( RTS) Instruction\nThe RTS command can be used to initiate message\ntransmission for one or more of the transmit buffers. \nThe MCP2515 is selected by lowering the CS  pin. The\nRTS command byte is then sent. As shown in\nFigure 12-6 , the last three bits of this command\nindicate which transmit buffer(s) are enabled to send.\nThis command will set the TXREQ bit (TXBnCTRL[3])\nfor the respective buffer(s). Any or all of the last three\nbits can be set in a single command. If the RTS\ncommand is sent with nnn =  000 , the command will be\nignored.Note: The MCP2515 expects the first byte after\nlowering CS  to be the instruction/command\nbyte. This implies that CS  must be raised\nand then lowered again to invoke anothercommand.\nMCP2515\nDS20001801K-page 66 \uf0e3 2003-2021 Microchip Technology Inc.12.8READ STATUS  Instruction\nThe READ STATUS  instruction allows single instruction\naccess to some of the often used status bits formessage reception and transmission.\nThe MCP2515 is selected by lowering the CS\n pin and the\nREAD STATUS  command byte, shown in Figure 12-8 , is\nsent to the MCP2515. Once the command byte is sent,the MCP2515 will return eight bits of data that contain the\nstatus.\nIf additional clocks are sent after the first eight bits are\ntransmitted, the MCP2515 will continue to output thestatus bits as long as the CS\n pin is held low and clocks\nare provided on SCK.\nEach status bit returned in this command may also be\nread by using the standard READ  command with the\nappropriate register address.\n12.9RX STATUS  Instruction\nThe RX STATUS  instruction ( Figure 12-9 ) is used to\nquickly determine which filter matched the message\nand message type (standard, extended, remote). Afterthe command byte is sent, the controller will return\n8 bits of data that contain the status data. If more clocks\nare sent after the eight bits are transmitted, thecontroller will continue to output the same status bits as\nlong as the CS\n pin stays low and clocks are provided.\n12.10BIT MODIFY  Instruction\nThe BIT MODIFY  instruction provides a means for\nsetting or clearing individual bits in specific status andcontrol registers. This command is not available for all\nregisters. See Section 11.0 “Register Map”  to\ndetermine which registers allow the use of thiscommand.The part is selected by lowering the CS\n pin and the BIT\nMODIFY  command byte is then sent to the MCP2515.\nThe command is followed by the address of the\nregister, the mask byte and finally, the data byte.\nThe mask byte determines which bits in the register will\nbe allowed to change. A ‘ 1’ in the mask byte will allow\na bit in the register to change, while a ‘ 0’ will not.\nThe data byte determines what value the modified bits\nin the register will be changed to. A ‘ 1’ in the data byte\nwill set the bit and a ‘ 0’ will clear the bit, provided that\nthe mask for that bit is set to a ‘ 1’ (see Figure 12-7 ).\nFIGURE 12-1: BIT MODIFY\nNote: Executing the BIT MODIFY  command on\nregisters that are not bit-modifiable willforce the mask to FFh. This will allow byte\nwrites to the registers, not BIT MODIFY .Mask Byte\nData Byte\nPrevious\nRegisterContents\nResulting\nRegisterContents001 11100\nxx1 100xx\n010 11000\n011 10000\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 67MCP2515\nTABLE 12-1: SPI INSTRUCTION SET\nInstruction Name Instruction Format Description\nRESET 1100 0000 Resets internal registers to the default state, sets Configuration \nmode.\nREAD 0000 0011 Reads data from the register beginning at selected address.\nREAD RX BUFFER 1001 0nm0 When reading a receive buffer, reduces the overhead of a normal \nREAD  command by placing the Address Pointer at one of four \nlocations, as indicated by ‘n,m’. \nNote: The associated RX flag bit, RXnIF (CANINTF), will be\ncleared after bringing CS  high.\nWRITE 0000 0010 Writes data to the register beginning at the selected address.\nLOAD TX BUFFER 0100 0abc When loading a transmit buffer, reduces the overhead of a normal \nWRITE  command by placing the Address Pointer at one of six \nlocations, as indicated by ‘a,b,c’.\nRTS \n(Message \nRequest-to-Send)1000 0nnn Instructs controller to begin message transmission sequence for \nany of the transmit buffers. \nREAD STATUS 1010 0000 Quick polling command that reads several status bits for transmit \nand receive functions.\nRX STATUS 1011 0000 Quick polling command that indicates filter match and message \ntype (standard, extended and/or remote) of received message.\nBIT MODIFY 0000 0101 Allows the user to set or clear individual bits in a particular \nregister. \nNote: Not all registers can be bit modified with this command.\nExecuting this command on registers that are not bitmodifiable will force the mask to FFh. See the register\nmap in Section 11.0 “Register Map”  for a list of the\nregisters that apply.1000 0nnn\nRequest-to-Send for TXBO\nRequest-to-Send for TXB1Request-to-Send for TXB2\nMCP2515\nDS20001801K-page 68 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 12-2: READ  INSTRUCTION\nFIGURE 12-3: READ RX BUFFER  INSTRUCTION\nFIGURE 12-4: BYTE WRITE  INSTRUCTIONSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n01000001 A7 6 5 4 1A 0\n76543210Instruction Address Byte\nData OutHigh-Impedance23\n32 Don’t Care\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 51\nmn\n76543210Instruction\nData Out\nHigh-ImpedanceDon’t Caren m Address Points to Address\n00 Receive Buffer 0, \nStart at RXB0SIDH0x61\n01 Receive Buffer 0, \nStart at RXB0D00x66\n10 Receive Buffer 1, \nStart at RXB1SIDH0x71\n11 Receive Buffer 1, \nStart at RXB1D00x760 01001\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n0000000 A7 6 5 4 1A 0 76543210Instruction\nHigh-Impedance23\n32 1Address Byte Data Byte\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 69MCP2515\nFIGURE 12-5: LOAD TX BUFFER  INSTRUCTION\nFIGURE 12-6: REQUEST-TO-SEND ( RTS) INSTRUCTION\nFIGURE 12-7: BIT MODIFY  INSTRUCTIONSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 51\nac00010 b 76543210Instruction Data In\nHigh-Impedancea b c Address Points to Addr\n000 TX Buffer 0, Start at \nTXB0SIDH0x31\n001 TX Buffer 0, Start at \nTXB0D00x36\n010 TX Buffer 1, Start at \nTXB1SIDH0x41\n011 TX Buffer 1, Start at \nTXB1D00x46\n100 TX Buffer 2, Start at \nTXB2SIDH0x51\n101 TX Buffer 2, Start at \nTXB2D00x56\nSOSISCKCS\n0 234567 1\nT2 T000001Instruction\nHigh-ImpedanceT1\nSOSISCKCS\n0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 1\n1100000 A7654 1A076543210Instruction\nHigh-Impedance32 0Address Byte Mask Byte\n76543210232425262728293031\nData Byte\nNote: Not all registers can be accessed with this command. See t he register map for a list of the registers that apply.\nMCP2515\nDS20001801K-page 70 \uf0e3 2003-2021 Microchip Technology Inc.FIGURE 12-8: READ STATUS  INSTRUCTION\nFIGURE 12-9: RX STATUS  INSTRUCTIONSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n00001010\n76543210Instruction\nData Out\nHigh-Impedance23\nDon’t Care\nRX0IF (CANINTF[0])\nRX1IF (CANINTF[1])\nTX0IF (CANINTF[2])\nTX1IF (CANINTF[3])\nTX2IF (CANINTF[4])TXREQ (TXB2CTRL[3])TXREQ (TXB1CTRL[3])TXREQ (TXB0CTRL[3])7654321 0Data OutRepeat\nSOSISCKCS\n0 23456789 1 0 1 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 2 0 2 1 22 1\n00011010\n76543210Instruction\nData Out\nHigh-Impedance23\nDon’t Care\n7654321 0Data OutRepeat\n2 1 0 Filter Match\n000 RXF0\n001 RXF1\n010 RXF2\n011 RXF3\n100 RXF4\n101 RXF5\n110 RXF0 (rollover to RXB1)\n111 RXF1 (rollover to RXB1)RXnIF (CANINTF) bits are mapped\nto bits 7 and 6.7 6 Received Message\n00 No RX message\n01 Message in RXB0\n10 Message in RXB1\n11 Messages in both buffers*\nThe extended ID bit is mapped to\nbit 4. The RTR bit is mapped to\nbit 3.4 3 Msg Type Received\n00 Standard data frame\n01 Standard remote frame\n10 Extended data frame\n11 Extended remote frame\n*Buffer 0 has higher priority; therefore, RXB0 status is reflected in bits[4:0].\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 71MCP2515\nFIGURE 12-10: SPI INPUT TIMING\nFIGURE 12-11: SPI OUTPUT TIMINGCS\nSCK\nSI\nSO1\n5 4763\n10\n2\nLSB In MSB In\nHigh-Impedance11\nMode 1,1\nMode 0,0\nCS\nSCK\nSO8\n13\nMSB Out LSB Out2\n14\nDon’t Care\nSIMode 1,1\nMode 0,09\n12\nMCP2515\nDS20001801K-page 72 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 73MCP2515\n13.0 ELECTRICAL CHARACTERISTICS\n13.1 Absolute Maximum Ratings †\nVDD............................................................................................................................... ..............................................7.0V\nAll Inputs and Outputs w.r.t. V SS........................................................................................................-0.6V to V DD + 1.0V\nStorage Temperature ............................................................................................................ ..................-65°C to +150°C\nAmbient Temperature with Power Applied ......................................................................................... .....-65°C to +125°C\nSoldering Temperature of Leads (10 seconds) .................................................................................... ................. +300°C\n†Notice:  Stresses above those listed under “Maximum Ratings” may cause permanent damage to the device. This \nis a stress rating only and functional operation of the device at those or any other conditions above those \nindicated in the operational listings of this specification is not implied. Exposure to maximum rating conditions for extended periods may affect device reliability.\nMCP2515\nDS20001801K-page 74 \uf0e3 2003-2021 Microchip Technology Inc.TABLE 13-1: DC CHARACTERISTICS\nDC Characteristics VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\nVDD Supply Voltage 2.7 5.5 V\nVRET Register Retention Voltage 2.4 — V\nHigh-Level Input Voltage\nVIH RXCAN Pin 2 V DD + 1 V\nSCK, CS , SI, TXnRTS  Pins 0.7 V DD VDD + 1 V\nOSC1 Pin 0.85 VDD VDD V\nRESET  Pin 0.85 VDD VDD V\nLow-Level Input Voltage\nVIL RXCAN, TXnRTS  Pins -0.3 0.15 * VDD V\nSCK, CS , SI Pins -0.3 0.4 * VDD V\nOSC1 Pin VSS 0.3 * VDD V\nRESET  Pin VSS 0.15 * VDD V\nLow-Level Output Voltage\nVOL TXCAN Pin — 0.6 V IOL = +6.0 mA, VDD = 4.5V\nRXnBF  Pin — 0.6 V IOL = +8.5 mA, VDD = 4.5V\nSO, CLKOUT Pins — 0.6 V IOL = +2.1 mA, VDD = 4.5V\nINT Pin — 0.6 V IOL = +1.6 mA, VDD = 4.5V\nHigh-Level Output Voltage V\nVOH TXCAN, RXnBF  Pins VDD – 0.7 — V IOH = -3.0 mA, VDD = 4.5V \nSO, CLKOUT Pins VDD – 0.5 — V IOH = -400 µA, VDD = 4.5V\nINT Pin VDD – 0.7 — V IOH = -1.0 mA, VDD = 4.5V\nInput Leakage Current\nILI All I/Os except OSC1 and \nTXnRTS  Pins-1 +1 µA CS  = RESET  = VDD, \nVIN = VSS to VDD\nOSC1 Pin -5 +5 µA\nCINT Internal Capacitance\n(all inputs and outputs)—7 p F TAMB = +25°C, fC = 1.0 MHz,\nVDD = 0V (Note 1 )\nIDD Operating Current — 10 mA VDD = 5.5V, FOSC = 25 MHz,\nFCLK = 1 MHz, SO = Open\nIDDS Standby Current \n(Sleep mode)—5 µ A C S ,  TXnRTS  = V DD, inputs tied \nto VDD or VSS, -40°C to +85°C\n—8 µ A C S ,  TXnRTS  = VDD, inputs tied \nto VDD or VSS, -40°C to +125°C\nNote 1: This parameter is periodically sampled and not 100% tested.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 75MCP2515\nTABLE 13-2: OSCILLATOR TIMING CHARACTERISTICS\nTABLE 13-3: CAN INTERFACE AC CHARACTERISTICS\nTABLE 13-4: RESET AC CHARACTERISTICSOscillator Timing Characteristics(1)VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\nFOSC Clock In Frequency 1\n140\n25MHz\nMHzVDD = 4.5V to 5.5V\nVDD = 2.7V to 5.5V\nTOSC Clock In Period 25\n401000\n1000ns\nnsVDD = 4.5V to 5.5V\nVDD = 2.7V to 5.5V\nTDUTY Duty Cycle\n(external clock input)0.45 0.55 — TOSH/(TOSH + TOSL)\nNote 1: This parameter is periodically sampled and not 100% tested.\nCAN Interface AC Characteristics VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\nTWF Wake-up Noise Filter 100 — ns\nReset AC Characteristics VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\ntRL RESET  Pin Low Time 2 — µs\nMCP2515\nDS20001801K-page 76 \uf0e3 2003-2021 Microchip Technology Inc.TABLE 13-5: CLKOUT PIN AC CHARACTERISTICS\nFIGURE 13-1: START-OF-FRAME PIN AC CHARACTERISTICSCLKOUT Pin AC/DC Characteristics VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\nthCLKOUT CLKOUT Pin High Time 15 — ns T OSC = 40 ns (Note 1 )\ntlCLKOUT CLKOUT Pin Low Time 15 — ns TOSC = 40 ns (Note 1 )\ntrCLKOUT CLKOUT Pin Rise Time — 5 ns Measured from 0.3 VDD to \n0.7 V DD (Note 1 )\ntfCLKOUT CLKOUT Pin Fall Time — 5 ns Measured from 0.7 VDD to \n0.3 VDD (Note 1 )\ntdCLKOUT CLKOUT Propagation Delay — 100 ns Note 1\n15 thSOF Start-of-Frame High Time — 2 TOSC ns Note 1\n16 tdSOF Start-of-Frame Propagation \nDelay—2 TOSC + 0.5 TQ ns Measured from CAN bit sample \npoint; device is a receiver, \nBRP[5:0] (CNF1[5:0]) = 0 \n(Note 2 )\nNote 1: All CLKOUT mode functionality and output frequency are tested at device frequency limits; however, \nthe CLKOUT prescaler is set to divide by one. This parameter is periodically sampled and not 100% tested.\n2:Design guidance only, not tested.\nRXCAN16\n15Sample Point\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 77MCP2515\nTABLE 13-6: SPI INTERFACE AC CHARACTERISTICS\nSPI Interface AC Characteristics VDD = 2.7V to 5.5VIndustrial (I): TAMB = -40°C to +85°C\nExtended (E): TAMB = -40°C to +125°C\nParam.\nNo.Sym. Characteristic Min. Max. Units Conditions\nFCLK Clock Frequency — 10 MHz\n1T CSS CS Setup Time 50 — ns\n2T CSH CS Hold Time 50 — ns\n3T CSD CS Disable Time 50 — ns\n4TSU Data Setup Time 10 — ns\n5THD Data Hold Time 10 — ns\n6T R Clock Rise Time — 2 µs Note 1\n7TF Clock Fall Time — 2 µs Note 1\n8THI Clock High Time 45 — ns\n9T LO Clock Low Time 45 — ns\n10 TCLD Clock Delay Time 50 — ns\n11 TCLE Clock Enable Time 50 — ns\n12 TV Output Valid from Clock Low — 45 ns\n13 THO Output Hold Time 0 — ns\n14 TDIS Output Disable Time — 100 ns\nNote 1: This parameter is not 100% tested.\nMCP2515\nDS20001801K-page 78 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 79MCP2515\n14.0 PACKAGING INFORMATION\n14.1 Package Marking Information\n18-Lead PDIP (300 mil)\n18-Lead SOIC (7.50 mm)\n20-Lead TSSOP (4.4 mm)\nXXXXXXXX\nXXXXXNNN\nYYWWXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXX\nYYWWNNNXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXX\nYYWWNNNExample:\nExample:\nExample:MCP2515\n1850256MCP2515-I/P^^\n1850256\nLegend: XX...X Customer-specific information\nY Year code (last digit of calendar year)\nYY Year code (last 2 digits of calendar year)WW Week code (week of January 1 is week ‘01’)\nNNN Alphanumeric traceability code\n  Pb-free JEDEC designator for Matte Tin (Sn)* This package is Pb-free. The Pb-free JEDEC designator (     )\ncan be found on the outer packaging for this package.\nNote : In the event the full Microchip part number cannot be marked on one line, it will\nbe carried over to the next line, thus limiting the number of available\ncharacters for customer-specific information.3e\n3eE/SO^^3e\n3e\n3e\n20-Lead QFN (4x4x0.9 mm)\nYWWNNNExample:\nXXXXXX 3eMCP2515-\nI/ST 256\n1850\nXXXXXX\n850256E/ML2515\nMCP2515\nDS20001801K-page 80 \uf0e3 2003-2021 Microchip Technology Inc./g20/g27/g16/g47/g72/g68/g71/g3/g51/g79/g68/g86/g87/g76/g70/g3/g39/g88/g68/g79/g3/g44/g81/g16/g47/g76/g81/g72/g3/g11/g51/g12/g3/g177/g3/g22/g19/g19/g3/g80/g76/g79/g3/g37/g82/g71/g92/g3/g62/g51/g39/g44/g51/g64\n/g3\n/g49/g82/g87/g72/g86/g29\n/g20/g17 /g51/g76/g81/g3/g20/g3/g89/g76/g86/g88/g68/g79/g3/g76/g81/g71/g72/g91/g3/g73/g72/g68/g87/g88/g85/g72/g3/g80/g68/g92/g3/g89/g68/g85/g92/g15/g3/g69/g88/g87/g3/g80/g88/g86/g87/g3/g69/g72/g3/g79/g82/g70/g68/g87/g72/g71/g3/g90/g76/g87/g75/g76/g81/g3/g87/g75/g72/g3/g75/g68/g87/g70/g75/g72/g71/g3/g68/g85/g72/g68/g17\n/g21/g17 /g134/g3/g54/g76/g74/g81/g76/g73/g76/g70/g68/g81/g87/g3/g38/g75/g68/g85/g68/g70/g87/g72/g85/g76/g86/g87/g76/g70/g17\n/g22/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g86/g3/g39/g3/g68/g81/g71/g3/g40/g20/g3/g71/g82/g3/g81/g82/g87/g3/g76/g81/g70/g79/g88/g71/g72/g3/g80/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g17/g3/g48/g82/g79/g71/g3/g73/g79/g68/g86/g75/g3/g82/g85/g3/g83/g85/g82/g87/g85/g88/g86/g76/g82/g81/g86/g3/g86/g75/g68/g79/g79/g3/g81/g82/g87/g3/g72/g91/g70/g72/g72/g71/g3/g17/g19/g20/g19/g5/g3/g83/g72/g85/g3/g86/g76/g71/g72/g17\n/g23/g17 /g39/g76/g80/g72/g81/g86/g76/g82/g81/g76/g81/g74/g3/g68/g81/g71/g3/g87/g82/g79/g72/g85/g68/g81/g70/g76/g81/g74/g3/g83/g72/g85/g3/g36/g54/g48/g40/g3/g60/g20/g23/g17/g24/g48/g17\n/g37/g54/g38/g29 /g37/g68/g86/g76/g70/g3/g39/g76/g80/g72/g81/g86/g76/g82/g81/g17/g3/g55/g75/g72/g82/g85/g72/g87/g76/g70/g68/g79/g79/g92/g3/g72/g91/g68/g70/g87/g3/g89/g68/g79/g88/g72/g3/g86/g75/g82/g90/g81/g3/g90/g76/g87/g75/g82/g88/g87/g3/g87/g82/g79/g72/g85/g68/g81/g70/g72/g86/g17/g49/g82/g87/g72/g29 /g41/g82/g85/g3/g87/g75/g72/g3/g80/g82/g86/g87/g3/g70/g88/g85/g85/g72/g81/g87/g3/g83/g68/g70/g78/g68/g74/g72/g3/g71/g85/g68/g90/g76/g81/g74/g86/g15/g3/g83/g79/g72/g68/g86/g72/g3/g86/g72/g72/g3/g87/g75/g72/g3/g48/g76/g70/g85/g82/g70/g75/g76/g83/g3/g51/g68/g70/g78/g68/g74/g76/g81/g74/g3/g54/g83/g72/g70/g76/g73/g76/g70/g68/g87/g76/g82/g81/g3/g79/g82/g70/g68/g87/g72/g71/g3/g68/g87/g3\n/g75/g87/g87/g83/g29/g18/g18/g90/g90/g90/g17/g80/g76/g70/g85/g82/g70/g75/g76/g83/g17/g70/g82/g80/g18/g83/g68/g70/g78/g68/g74/g76/g81/g74\n/g56/g81/g76/g87/g86 /g44/g49/g38/g43/g40/g54\n/g39/g76/g80/g72/g81/g86/g76/g82/g81/g3/g47/g76/g80/g76/g87/g86 /g48/g44/g49 /g49/g50/g48 /g48/g36/g59\n/g49/g88/g80/g69/g72/g85/g3/g82/g73/g3/g51/g76/g81/g86 /g49 /g20/g27\n/g51/g76/g87/g70/g75 /g72 /g17/g20/g19/g19/g3/g37/g54/g38\n/g55/g82/g83/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g36 /g177 /g177 /g17/g21/g20/g19\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g36/g21 /g17/g20/g20/g24 /g17/g20/g22/g19 /g17/g20/g28/g24/g37/g68/g86/g72/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g36/g20 /g17/g19/g20/g24 /g177 /g177\n/g54/g75/g82/g88/g79/g71/g72/g85/g3/g87/g82/g3/g54/g75/g82/g88/g79/g71/g72/g85/g3/g58/g76/g71/g87/g75 /g40 /g17/g22/g19/g19 /g17/g22/g20/g19 /g17/g22/g21/g24\n/g48/g82/g79/g71/g72/g71/g3/g51/g68/g70/g78/g68/g74/g72/g3/g58/g76/g71/g87/g75 /g40/g20 /g17/g21/g23/g19 /g17/g21/g24/g19 /g17/g21/g27/g19/g50/g89/g72/g85/g68/g79/g79/g3/g47/g72/g81/g74/g87/g75 /g39 /g17/g27/g27/g19 /g17/g28/g19/g19 /g17/g28/g21/g19\n/g55/g76/g83/g3/g87/g82/g3/g54/g72/g68/g87/g76/g81/g74/g3/g51/g79/g68/g81/g72 /g47 /g17/g20/g20/g24 /g17/g20/g22/g19 /g17/g20/g24/g19\n/g47/g72/g68/g71/g3/g55/g75/g76/g70/g78/g81/g72/g86/g86 /g70 /g17/g19/g19/g27 /g17/g19/g20/g19 /g17/g19/g20/g23\n/g56/g83/g83/g72/g85/g3/g47/g72/g68/g71/g3/g58/g76/g71/g87/g75 /g69/g20 /g17/g19/g23/g24 /g17/g19/g25/g19 /g17/g19/g26/g19\n/g47/g82/g90/g72/g85/g3/g47/g72/g68/g71/g3/g58/g76/g71/g87/g75 /g69 /g17/g19/g20/g23 /g17/g19/g20/g27 /g17/g19/g21/g21/g50/g89/g72/g85/g68/g79/g79/g3/g53/g82/g90/g3/g54/g83/g68/g70/g76/g81/g74/g3/g3/g134 /g72/g37 /g177 /g177 /g17/g23/g22/g19NOTE 1N\nE1\nD1 23\nA\nA1A2\nLE\neBc\neb1\nb\n/g48/g76/g70/g85/g82/g70/g75/g76/g83 /g55/g72/g70/g75/g81/g82/g79/g82/g74/g92 /g39/g85/g68/g90/g76/g81/g74 /g38/g19/g23/g16/g19/g19/g26/g37\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 81MCP2515\nBA0.20 CA\n0.33 CAB\n0.25 CAB(DATUM B)\n(DATUM A)\nC\nSEATING\nPLANE12N\n2X 18 TIPS\nTOP VIEW END VIEW\nSIDE VIEWNOTE 1\n0.10 C\n0.08 C\nMicrochip Technology Drawing  C04-051D Sheet 1 of 22X\n18XFor the most current package drawings, please see the Microchip Packaging S pecification located at\nhttp://www.microchip.com/packagingNote:18-Lead Plastic Small Outline (SO) - Wide, 7.50 mm (.300 In.) Body [SOIC]\nD\nE E1\ne 18X b\nAA2\nA10.10 CB2XDETAIL A\nMCP2515\nDS20001801K-page 82 \uf0e3 2003-2021 Microchip Technology Inc.18-Lead Plastic Small Outline (SO) - Wide, 7.50 mm (.300 In.) Body [SOIC]\nFor the most current package drawings, please see the Microchip Packaging Specification located at\nhttp://www.microchip.com/packagingNote:\nFoot Angle 0° - 8°\n15° - 5° Mold Draft Angle Bottom15° - 5° Mold Draft Angle Top0.51 - 0.31 b Lead Width0.33 - 0.20 c Lead Thickness1.27 - 0.40 L Foot Length0.75 - 0.25 h Chamfer (Optional)11.55 BSC D Overall Length7.50 BSC E1 Molded Package Width10.30 BSC E Overall Width0.30 - 0.10 A1 Standoff- - 2.05 A2 Molded Package Thickness2.65 - - A Overall Height1.27 BSC e Pitch18 N Number of PinsMAX NOM MIN Dimension LimitsMILLIMETERS Units\nFootprint 1.40 REF L1§\nMicrochip Technology Drawing No. C04-051D Sheet 2 of 2or protrusion, which shall not exceed 0.25 mm per side.3.\nREF: Reference Dimension, usually without tolerance, for information purposes only.BSC: Basic Dimension. Theoretically exact value shown without tolerances.1.\n2.\n4.Notes:\nDimension D does not include mold flash, protrusions or gate burrs, which shallPin 1 visual index feature may vary, but must be located within the hatched area.\n§ Significant Characteristic\nDimensioning and tolerancing per ASME Y14.5Mnot exceed 0.15 mm per end.  Dimension E1 does not include interlead flash\n5. Datums A & B to be determined at Datum H.Lead Angle 0° - -L\n(L1)\nDETAIL A\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 83MCP2515\nRECOMMENDED LAND PATTERN\nDimension LimitsUnits\nContact Pad SpacingContact PitchMILLIMETERS\n1.27 BSCMIN\nEMAX\nContact Pad Length (X18)Contact Pad Width (X18)\nYX\n1.900.60\nMicrochip Technology Drawing C04-2051ANOM18-Lead Plastic Small Outline (SO) - Wide, 7.50 mm (.300 In.) Body [SOIC]\n1218\nC Contact Pad Spacing 9.40\nBSC: Basic Dimension. Theoretically exact value shown without tolerances.Notes:\nDimensioning and tolerancing per ASME Y14.5M1.For the most current package drawings, please see the Microchip Packaging S pecification located at\nhttp://www.microchip.com/packagingNote:\nC\nXY\nESILK SCREEN\nMCP2515\nDS20001801K-page 84 \uf0e3 2003-2021 Microchip Technology Inc.\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 85MCP2515\nMCP2515\nDS20001801K-page 86 \uf0e3 2003-2021 Microchip Technology Inc.Note: For the most current package drawings, please see the Microchip Packaging Specification located at \nhttp://www.microchip.com/packaging\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 87MCP2515\n%$\n\x13\x11\x14\x18&\n\x13\x11\x14\x18&\n\x13\x11\x14\x13 &$%\n\x13\x11\x13\x18 &\x0b\'$780\x03%\x0c\n\x0b\'$780\x03$\x0c\n&\n6($7,1*\n3/$1(\n127(\x03\x141\n\x15;\n723\x039,(:\n6,\'(\x039,(:\n%27720\x039,(:127(\x03\x14\n\x14\x15\n1\x13\x11\x14\x13 &$%\n\x13\x11\x14\x13 &$%\x13\x11\x14\x13&\n\x13\x11\x13\x1b&\n0LFURFKLS\x037HFKQRORJ\\\x03\'UDZLQJ\x03\x03&\x13\x17\x10\x14\x15\x19\x035HY\x03&\x036KHHW\x03\x14\x03RI\x03\x15\'\n(\n$\n\x0b$\x16\x0c\n\x15\x13;\x03E\nH\x15;\n\'\x15\n(\x15\n.\n/\x15\x13;$\x14)RU\x03WKH\x03PRVW\x03FXUUHQW\x03SDFNDJH\x03GUDZLQJV\x0f\x03SOHDVH\x03VHH\x03WKH\x030LFURFKLS \x033DFNDJLQJ\x036SHFLILFDWLRQ\x03ORFDWHG\x03DW\nKWWS\x1d\x12\x12ZZZ\x11PLFURFKLS\x11FRP\x12SDFNDJLQJ1RWH\x1d\x15\x13\x10/HDG\x033ODVWLF\x034XDG\x03)ODW\x0f\x031R\x03 /HDG\x033DFNDJH\x03\x0b0/\x0c\x03\x10\x03\x17[\x17\x03PP\x03%RG\\\x03> 4)1@\n$OVR\x03FDOOHG\x0394)1\n\x14\n\x15\nMCP2515\nDS20001801K-page 88 \uf0e3 2003-2021 Microchip Technology Inc.0LFURFKLS\x037HFKQRORJ\\\x03\'UDZLQJ\x03\x03&\x13\x17\x10\x14\x15\x19\x035HY\x03&\x036KHHW\x03\x15\x03RI\x03\x151XPEHU\x03RI\x037HUPLQDOV\n2YHUDOO\x03+HLJKW\n7HUPLQDO\x03:LGWK2YHUDOO\x03:LGWK\n7HUPLQDO\x03/HQJWK([SRVHG\x033DG\x03:LGWK7HUPLQDO\x037KLFNQHVV3LWFK\n6WDQGRII8QLWV\n\'LPHQVLRQ\x03/LPLWV\n$\x14$\nE(\x15$\x16H\n/(1\n\x13\x11\x18\x13\x03%6&\n\x13\x11\x15\x13\x035()\n\x15\x11\x19\x13\n\x13\x11\x16\x13\x13\x11\x14\x1b\x13\x11\x1b\x13\n\x13\x11\x13\x13\n\x13\x11\x15\x18\n\x13\x11\x17\x13\x15\x11\x1a\x13\x13\x11\x1c\x13\n\x13\x11\x13\x15\n\x17\x11\x13\x13\x03%6&0,//,0(7(56\n0,1 120\n\x15\x13\n\x15\x11\x1b\x13\n\x13\x11\x18\x13\x13\x11\x16\x13\x14\x11\x13\x13\n\x13\x11\x13\x180$;\n.\x10\x13\x11\x15\x13 \x10\n5()\x1d\x035HIHUHQFH\x03\'LPHQVLRQ\x0f\x03XVXDOO\\\x03ZLWKRXW\x03WROHUDQFH\x0f\x03IRU\x03LQIRUP DWLRQ\x03SXUSRVHV\x03RQO\\\x11%6&\x1d\x03%DVLF\x03\'LPHQVLRQ\x11\x03 7KHRUHWLFDOO\\\x03H[DFW\x03 YDOXH\x03VKRZQ\x03ZLWKRXW\x03W ROHUDQFHV\x11\x14\x11\n\x15\x11\n\x16\x11Notes:\n3LQ\x03\x14\x03YLVXDO\x03LQGH[\x03IHDWXUH\x03PD\\\x03YDU\\\x0f\x03EXW\x03PXVW\x03EH\x03ORFDWHG\x03ZLWKLQ \x03WKH\x03KDWFKHG\x03DUHD\x11\n3DFNDJH\x03LV\x03VDZ\x03VLQJXODWHG\n\'LPHQVLRQLQJ\x03DQG\x03WROHUDQFLQJ\x03SHU\x03$60(\x03<\x14\x17\x11\x1807HUPLQDO\x10WR\x10([SRVHG\x103DG\x15\x13\x10/HDG\x033ODVWLF\x034XDG\x03)ODW\x0f\x031R\x03 /HDG\x033DFNDJH\x03\x0b0/\x0c\x03\x10\x03\x17[\x17\x03PP\x03%RG\\\x03> 4)1@\n)RU\x03WKH\x03PRVW\x03FXUUHQW\x03SDFNDJH\x03GUDZLQJV\x0f\x03SOHDVH\x03VHH\x03WKH\x030LFURFKLS \x033DFNDJLQJ\x036SHFLILFDWLRQ\x03ORFDWHG\x03DW\nKWWS\x1d\x12\x12ZZZ\x11PLFURFKLS\x11FRP\x12SDFNDJLQJ1RWH\x1d$OVR\x03FDOOHG\x0394)1\n2YHUDOO\x03/HQJWK\n([SRVHG\x033DG\x03/HQJWK\'\n\'\x15 \x15\x11\x19\x13\x17\x11\x13\x13\x03%6&\n\x15\x11\x1a\x13 \x15\x11\x1b\x13\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 89MCP2515\n5(&200(1\'(\'\x03/$1\'\x033$77(51\n\'LPHQVLRQ\x03/LPLWV8QLWV\n&\x152SWLRQDO\x03&HQWHU\x033DG\x03:LGWK\n&RQWDFW\x033DG\x036SDFLQJ2SWLRQDO\x03&HQWHU\x033DG\x03/HQJWK&RQWDFW\x033LWFK\n<\x15;\x15\n\x15\x11\x1b\x13\x15\x11\x1b\x130,//,0(7(56\n\x13\x11\x18\x13\x03%6&0,1\n(0$;\n\x17\x11\x13\x13\n&RQWDFW\x033DG\x03/HQJWK\x03\x0b;\x15\x13\x0c&RQWDFW\x033DG\x03:LGWK\x03\x0b;\x15\x13\x0c\n<\x14;\x14\n\x13\x11\x1b\x13\x13\x11\x16\x13\n0LFURFKLS\x037HFKQRORJ\\\x03\'UDZLQJ\x03&\x13\x17\x10\x15\x14\x15\x19\x035HY\x03%120\x15\x13\x10/HDG\x033ODVWLF\x034XDG\x03)ODW\x0f\x031R\x03 /HDG\x033DFNDJH\x03\x0b0/\x0c\x03\x10\x03\x17[\x17\x03PP\x03%RG\\\x03> 4)1@\n6,/.\x036&5((1\x14\n\x15\x15\x13&\x14\n&\x15\n(;\x14<\x14*\x14<\x15;\x15\n&\x14 &RQWDFW\x033DG\x036SDFLQJ \x17\x11\x13\x13\n&RQWDFW\x033DG\x03WR\x03&HQWHU\x033DG\x03\x0b;\x14\x19\x0c *\x14 \x13\x11\x15\x13\n7KHUPDO\x039LD\x03\'LDPHWHU 9\n7KHUPDO\x039LD\x033LWFK (9\x13\x11\x16\x13\n\x14\x11\x13\x13\x919\n(9(9\n%6&\x1d\x03%DVLF\x03\'LPHQVLRQ\x11\x037KHRUHWLFDOO\\\x03H[DFW\x03YDOXH\x03VKRZQ\x03ZLWKRXW\x03W ROHUDQFHV\x111RWHV\x1d\n\'LPHQVLRQLQJ\x03DQG\x03WROHUDQFLQJ\x03SHU\x03$60(\x03<\x14\x17\x11\x180\n)RU\x03EHVW\x03VROGHULQJ\x03UHVXOWV\x0f\x03WKHUPDO\x03YLDV\x0f\x03LI\x03XVHG\x0f\x03VKRXOG\x03EH\x03IL OOHG\x03RU\x03WHQWHG\x03WR\x03DYRLG\x03VROGHU\x03ORVV\x03GXULQJ\nUHIORZ\x03SURFHVV\x14\x11\n\x15\x11)RU\x03WKH\x03PRVW\x03FXUUHQW\x03SDFNDJH\x03GUDZLQJV\x0f\x03SOHDVH\x03VHH\x03WKH\x030LFURFKLS \x033DFNDJLQJ\x036SHFLILFDWLRQ\x03ORFDWHG\x03DW\nKWWS\x1d\x12\x12ZZZ\x11PLFURFKLS\x11FRP\x12SDFNDJLQJ1RWH\x1d$OVR\x03FDOOHG\x0394)1\nMCP2515\nDS20001801K-page 90 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 91MCP2515\nAPPENDIX A: REVISION HISTORY\nRevision K (April 2021)\nThe following is the list of modifications:\n1. Added AEC-Q100 Qualified in Features .\n2. Changed requirements from PS2 > SJW to\nPS2\uf0b3 SJW in Section 5.5 “Programming\nTime Segments” . \n3. Updated Figure 12-8 : TXREQ (TXB0CNTRL[3])\nto TXREQ (TXB0CTRL[3]).\n4. Added the AEC-Q100 Automotive Qualification\nidentification to the  “Product Identification\nSystem” .\n5. Several package drawings have been updated\nin Section 14.0 “Packaging Information” .\nRevision J (January 2019)\nThe following is the list of modifications:\n1. Added Exposed Thermal Pad description to\nTable 1-1 .\n2. Updated Section 8.1 “Oscillator Start-up\nTimer” .\n3. Updated Register 10-1 .\n4. Updated Table 11-2 .\n5. Updated Table 13-1  in Section 13.0 “Electrical\nCharacteristics” .\n6. Updated the Product Identification System\nsection.\nRevision H (November 2016)\nThe following is the list of modifications:\n1. Updated the voltage range, which was widened to\n2.7V to 5.5V for the E temperature device. There\nare two parameters that differ between the I and Etemperature devices: I\nDDS and FOSC (TOSC).\n2. Specified that the usage of the RXM[1:0] bit set-\ntings, ‘01’ and ‘10’ in the RXBnCTRL registers is\nnot recommended. \nRevision G (August 2012)\nThe following is the list of modifications:\n1. Updated content in Register 4-1 , Register 4-12 ,\nRegister 4-13 , Register 4-16 , Register 4-17 .\nRevision F (October 2010)\nThe following is the list of modifications:\n1. Added 20-lead QFN package (4x4) and related\ninformation.\n2. Updated Table 1-1 .\n3. Updated the Product Identification System\nsection.Revision E (November 2007)\n• Removed preliminary watermark.\n• Updated templates.\n• Updated register information.• Updated package outline drawings.\nRevision D (April 2005)\n• Added Table 8-1  and Table 8-2  in Section 8.0 \n“Oscillator” . Added note box following tables.\n• Changed address bits in column heading in \nTable 11-1 , Section 11.0 “Register Map” .\n• Modified Section 14.0 “Packaging Information”  \nto reflect pb free device markings.\n• Appendix A Revision History: Rearranged order of \nimportance.\nRevision C (November 2004)\n•Section 9.0 “Reset”  added.\n•Section 12.1 “Overview” : added notebox.\n•Section 12.6 “LOAD TX BUFFER Instruction” : \nChanged verbiage within paragraph.\n• Added Appendix A: Revision History.\nRevision B (September 2003)\n• Front page bullet: Standby current (typical) (Sleep \nmode) changed from 10 µA to 1 µA.\n• Added notebox for maximum frequency on \nCLKOUT in Section 8.2 “CLKOUT Pin” .\n•Section 12.0 “SPI Interface” , Table 12-1 :\n- Changed supply voltage minimum to 2.7V.- Internal Capacitance: Changed V\nDD condition \nto 0V.\n- Standby Current (Sleep mode): Split \nspecification into -40°C to +85°C and-40°C to +125°C.\nRevision A (May 2003)\n• Original Release of this Document.\nMCP2515\nDS20001801K-page 92 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 93MCP2515\nPRODUCT IDENTIFICATION SYSTEM \nTo order or obtain information, e. g., on pricing or delivery, refer to the factory or the listed sales office .\n   \nDevice: MCP2515: CAN Controller with SPI Interface\nMCP2515T: CAN Controller with SPI Interface\n(Tape and Reel)\nTape and Reel \nOption:T = Tape and Reel(1)\nTemperature \nRange:I= - 4 0 \uf0b0C to +85 \uf0b0C (Industrial)\nE= - 4 0 \uf0b0C to +125 \uf0b0C (Extended)\nPackage: P = Plastic DIP (300 mil Body), 18-Lead\nSO = Plastic SOIC (7.50 mm Body), 18-LeadST = Plastic TSSOP (4.4 mm Body), 20-Lead\nML = Plastic QFN (4x4x0.9 mm Body), 20-Lead\nQualification: Blank = Standard Qualification\nVAO    =   AEC-Q100 Automotive QualificationExamples:\na) MCP2515-E/P: Extended Temperature, \n18-Lead PDIP package.\nb) MCP2515-I/P: Industrial Temperature, \n18-Lead PDIP package.\nc) MCP2515-E/SO: Extended Temperature, \n18-Lead SOIC package.\nd) MCP2515-I/SO: Industrial Temperature,\n18-Lead SOIC package.\ne) MCP2515T-I/SO: Tape and Reel,\nIndustrial Temperature,18-Lead SOIC package.\nf) MCP2515-I/ST: Industrial Temperature,\n20-Lead TSSOP package.\ng) MCP2515T-I/ST: Tape and Reel,\nIndustrial Temperature,20-Lead TSSOP package.\nh) MCP2515-E/ML: Extended Temperature,\n20-Lead QFN package.\ni)\nMCP2515T-E/ML: Tape and Reel,\nExtended Temperature,\n20-Lead QFN package.\nj) MCP2515-I/ML: Industrial Temperature,\n20-Lead QFN package.\nk) MCP2515T-I/ML: Tape and Reel,\nIndustrial Temperature,\n20-Lead QFN package.\nl)MCP2515-E/SOVAO: Extended Temperature, 18-Lead SOIC package,Automotive Qualified.\nm)\nMCP2515-E/MLVAO: Extended Temperature,20-Lead QFN package,\nAutomotive Qualified.\nn)\nMCP2515-I/SOVAO: Industrial Temperature,18-Lead SOIC package,Automotive Qualified.\no)\nMCP2515-I/STVAO: Industrial Temperature,20-Lead TSSOP package,\nAutomotive Qualified.\np)\nMCP2515-I/MLVAO: Industrial Temperature,20-Lead QFN package,Automotive Qualified.\nq)\nMCP2515T-I/SOVAO: Tape and Reel,Industrial Temperature,\n18-Lead SOIC package,\nAutomotive Qualified.\nr)\nMCP2515T-I/STVAO: Tape and Reel,Industrial Temperature,20-Lead TSSOP package,Automotive Qualified.\ns)\nMCP2515T-E/MLVAO: Tape and Reel,\nExtended Temperature,20-Lead QFN package,Automotive Qualified.\nNote 1: Tape and Reel identifier only appears in\nthe catalog part number description. Thisidentifier is used for ordering purposesand is not printed on the device package.Check with your Microchip Sales Office\nfor package availability with the Tape\nand Reel option.-X\nTemperature\nRangePART NO. /XX\nPackage Device[X](1)\nTape and Reel\nOptionXXX\nQualification\nMCP2515\nDS20001801K-page 94 \uf0e3 2003-2021 Microchip Technology Inc.NOTES:\n\uf0e3 2003-2021 Microchip Technology Inc. DS20001801K-page 95Information contained in this publication is provided for the sole\npurpose of designing with and using Microchip products. Infor-mation regarding device applications and the like is provided\nonly for your convenience and may be superseded by updates.\nIt is your responsibility to ensure that your application meetswith your specifications. \nTHIS INFORMATION IS PROVID ED BY MICROCHIP "AS IS".\nMICROCHIP MAKES NO REPRESENTATIONS OR WAR-\nRANTIES OF ANY KIND WHETHER EXPRESS OR IMPLIED,WRITTEN OR ORAL, STATUTORY OR OTHERWISE,\nRELATED TO THE INFORMATION INCLUDING BUT NOT\nLIMITED TO ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A\nPARTICULAR PURPOSE OR WARRANTIES RELATED TO\nITS CONDITION, QUALITY, OR PERFORMANCE. \nIN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDI-\nRECT, SPECIAL, PUNITIVE, INCIDENTAL OR CONSEQUEN-\nTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KINDWHATSOEVER RELATED TO THE INFORMATION OR ITS\nUSE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS\nBEEN ADVISED OF THE POSSIBILITY OR THE DAMAGESARE FORESEEABLE. TO THE FULLEST EXTENT\nALLOWED BY LAW, MICROCHIP\'S TOTAL LIABILITY ON\nALL CLAIMS IN ANY WAY RELATED TO THE INFORMATIONOR ITS USE WILL NOT EXCEED THE AMOUNT OF FEES, IF\nANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP\nFOR THE INFORMATION. Use of Microchip devices in life sup-port and/or safety applications is entirely at the buyer\'s risk, and\nthe buyer agrees to defend, indemnify and hold harmless\nMicrochip from any and all damages, claims, suits, or expensesresulting from such use. No licenses are conveyed, implicitly or\notherwise, under any Microchip intellectual property rights\nunless otherwise stated.Trademarks\nThe Microchip name and logo, the Microchip logo, Adaptec, \nAnyRate, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, chipKIT, chipKIT logo, CryptoMemory, CryptoRF, dsPIC, FlashFlex, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, \nLinkMD, maXStylus, maXTouch, MediaLB, megaAVR, Microsemi, \nMicrosemi logo, MOST, MOST logo, MPLAB, OptoLyzer, PackeTime, PIC, picoPower, PICSTART, PIC32 logo, PolarFire, Prochip Designer, QTouch, SAM-BA, SenGenuity, SpyNIC, SST, \nSST Logo, SuperFlash, Symmetricom, SyncServer, Tachyon, \nTimeSource, tinyAVR, UNI/O, Vectron, and XMEGA are registered trademarks of Microchip Technology Incorporated in the U.S.A. and other countries.\nAgileSwitch, APT, ClockWorks, The Embedded Control Solutions \nCompany, EtherSynch, FlashTec, Hyper Speed Control, HyperLight \nLoad, IntelliMOS, Libero, motorBench, mTouch, Powermite 3, Precision Edge, ProASIC, ProASIC Plus, ProASIC Plus logo, Quiet-Wire, SmartFusion, SyncWorld, Temux, TimeCesium, TimeHub, \nTimePictra, TimeProvider, WinPath, and ZL are registered \ntrademarks of Microchip Technology Incorporated in the U.S.A.\nAdjacent Key Suppression, AKS, Analog-for-the-Digital Age, Any \nCapacitor, AnyIn, AnyOut, Augmented Switching, BlueSky, \nBodyCom, CodeGuard, CryptoAuthentication, CryptoAutomotive, \nCryptoCompanion, CryptoController, dsPICDEM, dsPICDEM.net, Dynamic Average Matching, DAM, ECAN, Espresso T1S, EtherGREEN, IdealBridge, In-Circuit Serial Programming, ICSP, \nINICnet, Intelligent Paralleling, Inter-Chip Connectivity, \nJitterBlocker, maxCrypto, maxView, memBrain, Mindi, MiWi, MPASM, MPF, MPLAB Certified logo, MPLIB, MPLINK, MultiTRAK, NetDetach, Omniscient Code Generation, PICDEM, PICDEM.net, \nPICkit, PICtail, PowerSmart, PureSilicon, QMatrix, REAL ICE, \nRipple Blocker, RTAX, RTG4, SAM-ICE, Serial Quad I/O, simpleMAP , SimpliPHY, SmartBuffer, SMART-I.S., storClad, SQI, SuperSwitcher, SuperSwitcher II, Switchtec, SynchroPHY, Total \nEndurance, TSHARC, USBCheck, VariSense, VectorBlox, VeriPHY, \nViewSpan, WiperLock, XpressConnect, and ZENA are trademarks of Microchip Technology Incorporated in the U.S.A. and other countries.\nSQTP is a service mark of Microchip Technology Incorporated in \nthe U.S.A.\nThe Adaptec logo, Frequency on Demand, Silicon Storage \nTechnology, and Symmcom are registered trademarks of Microchip Technology Inc. in other countries.\nGestIC is a registered trademark of Microchip Technology Germany \nII GmbH & Co. KG, a subsidiary of Microchip Technology Inc., in \nother countries. \nAll other trademarks mentioned herein are property of their \nrespective companies.\n© 2003-2021, Microchip Technology Incorporated, All Rights \nReserved.\nISBN: 978-1-5224-8130-0Note the following details of the code protection feature on Microchip devices:\n• Microchip products meet the specifications cont ained in their particular Microchip Data Sheet.\n• Microchip believes that its family of products is secu re when used in the intended manner and under normal conditions. \n• There are dishonest and possibly illegal methods being used in at tempts to breach the code protec tion features of the Microchi p \ndevices. We believe that these methods  require using the Micr ochip products in a manner outside  the operating specifications \ncontained in Microchip\'s Data Sheets. Attempts to breach thes e code protection features, most likely, cannot be accomplished \nwithout violating Microchip\'s intellectual property rights. \n• Microchip is willing to work with any customer  who is concerned about the integrity of its code.\n• Neither Microchip nor any other semiconduc tor manufacturer can guarantee the security of its code. Code protection does not \nmean that we are guaranteeing the product is "unbreakable." Code protection is const antly evolving. We at Microchip are \ncommitted to continuously improving the co de protection features of our  products. Attempts to break  Microchip\'s code protection  \nfeature may be a violation of the Digital Millennium Copyright Act.  If such acts allow unauthorized access to your software or \nother copyrighted work, you may have a right to sue for relief under that Act.\nFor information regarding Microchip’s Quality Management Systems, \nplease visit www.microchip.com/quality .\nDS20001801K-page 96 \uf0e3 2003-2021 Microchip Technology Inc.\nAMERICAS\nCorporate Office\n2365 West Chandler Blvd.\nChandler, AZ 85224-6199\nTel: 480-792-7200 \nFax: 480-792-7277Technical Support: \nhttp://www.microchip.com/\nsupportWeb Address: \nwww.microchip.com\nAtlanta\nDuluth, GA \nTel: 678-957-9614 \nFax: 678-957-1455\nAustin, TX\nTel: 512-257-3370 \nBoston\nWestborough, MA \nTel: 774-760-0087 Fax: 774-760-0088\nChicago\nItasca, IL \nTel: 630-285-0071 Fax: 630-285-0075\nDallas\nAddison, TX \nTel: 972-818-7423 Fax: 972-818-2924\nDetroit\nNovi, MI \nTel: 248-848-4000\nHouston, TX \nTel: 281-894-5983\nIndianapolis\nNoblesville, IN \nTel: 317-773-8323Fax: 317-773-5453\nTel: 317-536-2380\nLos Angeles\nMission Viejo, CA \nTel: 949-462-9523\nFax: 949-462-9608\nTel: 951-273-7800 \nRaleigh, NC \nTel: 919-844-7510\nNew York, NY \nTel: 631-436-6000\nSan Jose, CA \nTel: 408-736-9110\nTel: 408-436-4270\nCanada - Toronto\nTel: 905-695-1980 \nFax: 905-695-2078ASIA/PACIFIC\nAustralia - Sydney\nTel: 61-2-9868-6733\nChina - Beijing\nTel: 86-10-8569-7000 \nChina - Chengdu\nTel: 86-28-8665-5511\nChina - Chongqing\nTel: 86-23-8980-9588\nChina - Dongguan\nTel: 86-769-8702-9880 \nChina - Guangzhou\nTel: 86-20-8755-8029 \nChina - Hangzhou\nTel: 86-571-8792-8115 \nChina - Hong Kong SAR\nTel: 852-2943-5100 \nChina - Nanjing\nTel: 86-25-8473-2460\nChina - Qingdao\nTel: 86-532-8502-7365\nChina - Shanghai\nTel: 86-21-3326-8000 \nChina - Shenyang\nTel: 86-24-2334-2829\nChina - Shenzhen\nTel: 86-755-8864-2200 \nChina - Suzhou\nTel: 86-186-6233-1526 \nChina - Wuhan\nTel: 86-27-5980-5300\nChina - Xian\nTel: 86-29-8833-7252\nChina - Xiamen\nTel: 86-592-2388138 \nChina - Zhuhai\nTel: 86-756-3210040 ASIA/PACIFIC\nIndia - BangaloreTel: 91-80-3090-4444 \nIndia - New Delhi\nTel: 91-11-4160-8631\nIndia - Pune\nTel: 91-20-4121-0141\nJapan - Osaka\nTel: 81-6-6152-7160 \nJapan - Tokyo\nTel: 81-3-6880- 3770 \nKorea - Daegu\nTel: 82-53-744-4301\nKorea - Seoul\nTel: 82-2-554-7200\nMalaysia - Kuala Lumpur\nTel: 60-3-7651-7906\nMalaysia - Penang\nTel: 60-4-227-8870\nPhilippines - Manila\nTel: 63-2-634-9065\nSingapore\nTel: 65-6334-8870\nTaiwan - Hsin Chu\nTel: 886-3-577-8366\nTaiwan - Kaohsiung\nTel: 886-7-213-7830\nTaiwan - Taipei\nTel: 886-2-2508-8600 \nThailand - Bangkok\nTel: 66-2-694-1361\nVietnam - Ho Chi Minh\nTel: 84-28-5448-2100EUROPE\nAustria - WelsTel: 43-7242-2244-39\nFax: 43-7242-2244-393\nDenmark - Copenhagen\nTel: 45-4485-5910 \nFax: 45-4485-2829\nFinland - Espoo\nTel: 368-9-4520-820\nFrance - Paris\nTel: 33-1-69-53-63-20 \nFax: 33-1-69-30-90-79 \nGermany - Garching\nTel: 49-8931-9700\nGermany - Haan\nTel: 49-2129-3766400\nGermany - Heilbronn\nTel: 49-7131-72400\nGermany - Karlsruhe\nTel: 49-721-625370\nGermany - Munich\nTel: 49-89-627-144-0 \nFax: 49-89-627-144-44\nGermany - Rosenheim\nTel: 49-8031-364-560\nIsrael - Ra’anana \nTel: 972-9-744-7705\nItaly - Milan \nTel: 39-0331-742611 \nFax: 39-0331-466781\nItaly - Padova\nTel: 39-049-7625286 \nNetherlands - Drunen\nTel: 31-416-690399 \nFax: 31-416-690340\nNorway - Trondheim\nTel: 47-7288-4388\nPoland - Warsaw\nTel: 48-22-3325737 \nRomania - Bucharest\nTel: 40-21-407-87-50\nSpain - Madrid\nTel: 34-91-708-08-90\nFax: 34-91-708-08-91\nSweden - Gothenberg\nTel: 46-31-704-60-40\nSweden - Stockholm\nTel: 46-8-5090-4654\nUK - Wokingham\nTel: 44-118-921-5800\nFax: 44-118-921-5820Worldwide Sales and Service\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n \n \n Microchip:   \n\xa0 MCP2515T-I/ST\xa0 MCP2515T-I/SO\xa0 MCP2515-E/P\xa0 MCP2515-E/ST\xa0 MCP2515-E/SO\xa0 MCP2515-I/P\xa0 MCP2515-I/ST\xa0\nMCP2515-I/SO\xa0 MCP2515T-E/ST\xa0 MCP2515T-E/SO\xa0 MCP2515T-E/ML\xa0 MCP2515T-I/ML\xa0 MCP2515-I/ML\xa0 MCP2515-\nE/ML\xa0 MCP2515-I/SOVAO\xa0 MCP2515-I/STVAO\xa0 MCP2515T-E/MLVAO\xa0 MCP2515T-E/SOVAO\n'}]
!==============================================================================!
### MCP2515-I/ST Overview

**Description:**
The MCP2515 is a stand-alone Controller Area Network (CAN) controller developed by Microchip Technology. It implements the CAN V2.0B protocol and is designed to facilitate communication in automotive and industrial applications. The MCP2515 interfaces with microcontrollers via a high-speed Serial Peripheral Interface (SPI), allowing for efficient data transmission and reception.

### Key Specifications

- **Voltage Ratings:**
  - Operating Voltage: 2.7V to 5.5V

- **Current Ratings:**
  - Active Current: 5 mA (typical)
  - Standby Current (Sleep mode): 1 µA (typical)

- **Power Consumption:**
  - Power consumption is low due to its CMOS technology, making it suitable for battery-powered applications.

- **Operating Temperature Range:**
  - Industrial (I): -40°C to +85°C
  - Extended (E): -40°C to +125°C

- **Package Type:**
  - Available in multiple package types including:
    - 18-Lead PDIP
    - 18-Lead SOIC
    - 20-Lead TSSOP
    - 20-Lead QFN

- **Special Features:**
  - Implements CAN V2.0B at 1 Mb/s with support for standard and extended frames.
  - Two receive buffers with prioritized message storage and six 29-bit filters.
  - High-Speed SPI Interface (up to 10 MHz).
  - One-Shot mode for message transmission.
  - Programmable clock output pin.
  - Interrupt output pin with selectable enables.
  - Low-power operation with sleep mode.
  - AEC-Q100 qualified for automotive applications.

- **Moisture Sensitive Level (MSL):**
  - MSL according to JEDEC J-STD-020E is typically Level 1 for the MCP2515.

### Typical Applications
The MCP2515 is commonly used in:
- **Automotive Networks:** For communication between various electronic control units (ECUs) in vehicles.
- **Industrial Automation:** In systems requiring robust communication protocols for data exchange.
- **Embedded Systems:** Where CAN communication is needed for sensor data transmission and control signals.
- **Robotics:** For coordinating multiple components and systems in robotic applications.

### Summary
The MCP2515-I/ST is a versatile CAN controller that provides a reliable solution for implementing CAN communication in various applications. Its low power consumption, wide operating voltage range, and robust features make it suitable for both industrial and automotive environments. The device's ability to interface with microcontrollers via SPI simplifies integration into existing systems, making it a popular choice for engineers and developers.