[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of MAX31760AEE+ production of ANALOG DEVICES from the text:General Description\nThe MAX31760 integrates temperature sensing along \nwith precision PWM fan control. It accurately measures \nits local die temperature and the remote temperature of \na discrete diode-connected transistor, such as a 2N3906, \nor a thermal diode commonly found on CPUs, graphics \nprocessor units (GPUs), and other ASICs. Multiple tem -\nperature thresholds, such as local high/overtemperature \n(OT) and remote high/overtemperature, can be set by an \nI2C-compatible interface.\nFan speed is controlled based on the temperature reading \nas an index to a 48-byte lookup table (LUT) containing \nuser-programmed PWM values. The flexible LUT-based \narchitecture enables the user to program a smooth \nnonlinear fan speed vs. temperature transfer function to \nminimize acoustic fan noise. Two tachometer inputs allow \nmeasuring the speeds of two fans independently. The  \nFF/FS pin multiplexes an open-drain fan-failure output \nwith a full-speed fan-drive input. When the local or remote \nOT threshold is exceeded, the SHDN  pin is asserted low \nand can be used to shut down the system. A dedicated \nALERT  pin reports that either a local or remote high-\ntemperature threshold has been exceeded. ALERT  can \nbe programmed to work in either fault indicator mode or \ninterrupt mode. These features make the device a com -\npact and complete solution for a single-fan or two-fan \ncooling system.Features \n ●Operating Settings Stored in Nonvolatile Memory for \nAutomatic Operation at Power-On\n ●48-Step Nonvolatile LUT Maps Temperature to PWM \nDuty Cycle\n ●Smooth PWM Duty-Cycle Transitions Minimize \nAudibility of Fan Noise\n ●Two Tachometer Inputs for Measuring the RPM of \nTwo Fans Independently\n ●FF/FS  Pin Multiplexes Fan-Failure Output with Full-\nSpeed Fan-Drive Input\n ●Accurately Senses Remote and Local Temperature\n ●Programmable Thermal Diode Ideality Factor \nMinimizes Ideality Factor Mismatch\n ●Automatic Series Resistance Cancellation\n ●Dedicated ALERT  Pin for Temperature Faults\n ●SHDN  Pin Available for System Overtemperature \nShutdown\n ●3.0V to 3.6V Operating Voltage Range\n ●-40°C to +125°C Operating Temperature Range\nApplications\nTypical Application CircuitOrdering Information  appears at end of data sheet. ●Servers\n ●Networking Equipment\n ●STB/DVR\n ●NAS/DAS\n19-7395; Rev 1; 12/19MAX317604-WIRE F AN #1\nTACH\nPWMTACH1\nTACH2\nPWMALER T\nFF/FS\nSHDN\nSDA\nDXP\n2200pFSCLTO SYSTEM HOST\nREMODE\nDIODE CONNECTED\nTRANSIST OR\n(e.g., CPU, GPU, OR ASIC)DXNVDD+3.3V\nGND A2 A1 A0GNDVCCFAN VOLTAGE\n+5V OR +12V\n4-WIRE F AN #2\nTACH\nPWM\nGNDVCCFAN VOLTAGE\n+5V OR +12VClick here to ask an associate for production status of specific part numbers.\nPrecision Fan-Speed Controller  \nwith Nonvolatile Lookup TableMAX31760Evaluation Kit \nAvailable\nDesign  \nResources\nTools  \nand Models\nSupport\nOne Analog Way, Wilmington, MA 01887 U.S.A.  |   Tel: 781.329.4700   |   © 2019 Analog Devices, Inc. All rights reserved.© 2019 Analog Devices, Inc. All rights reserved. Trademarks and registered trademarks are the property of their respective owners.\nVDD to GND  ......................................................... -0.3V to +6.0V\nSCL, SDA, ALERT , FF/FS , SHDN , \nTACH1, TACH2 and PWM to GND  .................. -0.5V to +6.0V\nDXP, DXN, A0, A1, and A2 to GND  ......... -0.3V to (V DD + 0.3V),\nnot to exceed +6.0V\nSCL, SDA, ALERT , FF/FS , SHDN , PWM Current  ............... 8mA\nDXN Current  ...................................................................... 200µAContinuous Power Dissipation (T A = +70°C)  \nQSOP (derate 9.6mW/°C above +70°C)  ................. 771.5mW\nESD Protection (All Pins, Human Body Model)  ................. ±2kV\nOperating Temperature Range  ......................... -40°C to +125°C\nJunction Temperature  ...................................................... +150°C\nStorage Temperature Range  ........................... -65°C to +150°C\nLead Temperature (soldering, 10s)  ................................. +300°C\nSoldering Temperature (reflow)  ....................................... +260°C\nPackage Thermal Characteristics (Note 1)\nQSOP  \nJunction-to-Ambient Thermal Resistance (θ JA) .....103.7°C/W  \nJunction-to-Case Thermal Resistance (θ JC) ............... 37°C/W\nRecommended DC Operating Conditions\n(TA = -40 °C to +125 °C, unless otherwise noted.) (Note 2)\nElectrical Characteristics\n(3.0V ≤ V DD ≤ 3.6V, T A = -40 °C to +125 °C, unless otherwise noted.)\nPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nSupply CurrentIDD Normal operation 2.6 4 mA \nISTB Standby mode 2 3 mA\nInternal Temperature \nMeasurement ResolutionTA = -40°C to +125°C 0.125 °C\nExternal Temperature \nMeasurement ResolutionTA = -40°C to +125°C 0.125 °C\nConversion Time tCONV Both internal and external channels 150 msPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nVDD Voltage VDD (Note 2) 3.0 3.3 3.6 V\nInput Logic 0 (SDA, SCL)\nVIL-0.3 +0.8\nV\nInput Logic 0 (All Other Inputs) -0.3VDD x \n0.3\nInput Logic 1 (SDA, SCL)\nVIH2.1VDD + \n0.3\nV\nInput Logic 1 (All Other Inputs)VDD x \n0.3Absolute Maximum Ratings\nNote 1:  Package thermal resistances were obtained using the method described in JEDEC specification JESD51-7, using a four-layer \nboard. For detailed information on package thermal considerations, refer to  www.maximintegrated.com/thermal-tutorial .Stresses beyond those listed under “Absolute Maximum Ratings” may cause permanent damage to the device. These are stress ratings only, and functional operation \nof the device at these or any other conditions beyond those indicated in the operational sections of the specifications is not implied. Exposure to absolute maximum \nrating conditions for extended periods may affect device reliability.\nwww.analog.com\n Analog Devices  │ 2\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTemperature-Sensing Error\n(3.0V ≤ V DD ≤ 3.6V, unless otherwise noted.)Electrical Characteristics (continued)\n(3.0V ≤ V DD ≤ 3.6V, T A = -40 °C to +125 °C, unless otherwise noted.)\nPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nRemote Diode Source CurrentsHigh level Not production \ntested150\nµA\nLow level 10\nOpen-Drain Output Saturation \nVoltage ( ALERT , FF/FS , SHDN , \nPWM, SDA)VSAT IOUT = 4mA 0.4 V\nPWM Clock High Frequency fPWMH 6.4 MHz\nPWM Clock High Frequency \nAccuracy-7 +7 %\nPWM Clock Low Frequency fPWML 8.3 kHz\nPWM Clock Low Frequency \nAccuracy-7 +7 %\nPWM Output High Frequency 25 kHz\nPWM Output High Frequency \nAccuracy-7 +7 %\nPWM Output Low Frequency 33 Hz\nPWM Output Low Frequency \nAccuracy-7 +7 %\nFan Counter Clock Frequency fFANC 100 kHz\nFan Counter Clock Frequency \nAccuracy-7 +7 %\nFan Full-Scale Count NF 65,535\nTACH_ Pulse Counting Accuracy -7 +7 %\nEEPROM Write Time tW (Note 4) 550 ms\nEEPROM Write Cycles TA = +85°C (Note 5) 1000\nPARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nInternal Temperature Measure -\nment ErrorTA = 0° C to +70°C -2 +2 °C\nTA = -40°C to +85°C -3 +3 °C\nTA = -40°C to +125°C -4 +4 °C\nExternal Temperature Measure -\nment ErrorTA = 0°C to +85°C,\nTD = -40°C to +125°C-2 +2 °C\nTA = -40°C to +125° C,  \nTD = -40°C to +100°C-3 +3 °C\nTA = -40°C to +125°C,  \nTD = -40°C to +125°C-4 +4 °C\nwww.analog.com\n Analog Devices  │ 3\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nI2C AC ELECTRICAL CHARACTERISTICS\n(3.0V ≤ V DD ≤ 3.6V, T A = -40°C to +125°C, unless otherwise noted.) ( Figure 1 )\nNote 2:  Limits are 100% production tested at T A = +25°C and T A = +85°C. Limits over the operating temperature range and relevant \nsupply voltage range are guaranteed by design and characterization. Typical values are not guaranteed. .\nNote 3:  All voltages are referenced to GND.\nNote 4:  EEPROM write time, t W, applies to writing all 80 bytes of nonvolatile memory (00h through 4Fh). The time to write each \n16-byte block of data is typically 110ms. See the EEPROM LOAD/WRITE register (EEX), register 5Bh for memory block \nassignments. EEPROM writes begin after a STOP condition occurs.\nNote 5: Guaranteed by design.\nNote 6:  I2C interface timing shown is for fast mode (400kHz) operation. This device is also backward compatible with I 2C standard-\nmode timing.\nNote 7:  CB = total capacitance of one bus line in pF. The maximum bus capacitance allowable can vary from this value depending \non the actual operating voltage and frequency of the application.\nNote 8:  The timeout applies only when the MAX31760 is holding SDA low. Other devices can hold SDA low indefinitely and the \nMAX31760 does not reset the bus.PARAMETER SYMBOL CONDITIONS MIN TYP MAX UNITS\nSCL Clock Frequency fSCL (Note 6) 0.5 400 kHz\nBus Free Time Between STOP and \nSTART ConditionstBUF 1.3 µs\nHold Time (Repeated) START \nConditiontHD:STA 0.6 µs\nLow Period of SCL tLOW 1.3 µs\nHigh Period of SCL tHIGH 0.6 µs\nData Hold Time tHD:DAT 0 0.9 µs\nData Setup Time tSU:DAT 100 ns\nSTART Setup Time tSU:STA 0.6 µs\nSDA and SCL Rise Time tR (Note 7)20 + \n0.1C B300 ns\nSDA and SCL Fall Time tF (Note 7)20 + \n0.1C B300 ns\nSTOP Setup Time tSU:STO 0.6 µs\nSDA and SCL Capacitive Loading CB (Note 7) 400 pF\nPulse Width of Spike Suppressed tSP 50 ns\nInterface Reset Time tTIMEOUT SDA time low (Note 8) 25 45 ms\nwww.analog.com\n Analog Devices  │ 4\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTypical Operating Characteristics\n(3.0V ≤ V DD ≤ 3.6V , unless otherwise noted.)\n20002200240026002800300032003400\n-40 10 60 110ACTIVE CURRENT ( µA)\nTEMPERATURE ( °C)ACTIVE CURRENT vs. TEMPERATURE\ntoc01\n15001600170018001900200021002200230024002500\n-40 10 60 110STANDBY CURRENT ( µA)\nTEMPERATURE ( °C)STANDBY CURRENT vs. TEMPERATURE\ntoc02\n-4-3-2-101234\n-40 -15 10 35 60 85 110INTERNAL TEMPRATURE ERROR ( °C)\nTEMPERATURE ( °C)INTERNAL TEMPERATURE ERROR vs. \nTEMPERATURE\ntoc03\nVDD= 3.3VFigure 1. I 2C Timing DiagramSCL\nNOTE: TIMING IS REFERENCED TO VIL(MAX)  AND VIH(MIN) .SDA\nSTOP STAR TR EPEATED\nSTAR TtBUF\ntHD:STA\ntHD:DAT tSU:DATtSU:STOtHD:STAtSP\ntSU:STAtHIGH\ntRtF\ntLOW\nwww.analog.com\n Analog Devices  │ 5\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nPIN NAME FUNCTION\n1 DXP Analog Current Output/Voltage Input. Connect to the anode of the remote diode.\n2 DXN Analog Input. Connect to the cathode of the remote diode. Do not connect to ground.\n3 A0\nAddress Select Input. Determines I 2C slave address. Must be connected to V DD or GND. 4 A1\n5 A2\n6 PWM PWM Output. Open-drain output for fan drive. The power-on default for this pin is high impedance.\n7 TACH1 Tachometer Input 1. Logic input for measuring speed of fan 1.\n8 GND Ground Connection\n9 TACH2 Tachometer Input 2. Logic input for measuring speed of fan 2.\n10 N.C. No Connection. Not internally connected.\n11 SHDNActive-Low Shutdown Output. Open-drain output for system shutdown when overtemperature is detected. \nRequires a pullup resistor. High impedance when V DD = 0V.\n12 FF/FSActive-Low Fan-Failure Output and Full-Speed Input (Open Drain).The device pulls this output low if a fan \nfailure is detected. The fan is forced to run full speed if this pin is pulled low externally. A pullup resistor to \nVDD is recommended.\n13 ALERTActive-Low Alert Output. Open-drain fault output. ALERT  is triggered when a measured temperature ex -\nceeds its programmed high limit. A pullup resistor to V DD is recommended. \n14 SDA Serial Data Input/Output. Input/Output for I 2C data.\n15 SCL Serial Clock Input. Input for I 2C clock.\n16 VDD Power-Supply Input. 3.0V to 3.6V voltage supply. 16\n15\n14\n13\n12\n11\n10\n91\n2\n3\n4\n5\n6\n7\n8VDD\nSCL\nSDA\nALERT\nFF/FS\nSHDN\nN.C.\nTACH2TOP VIEW\nQSOPDXNDXP\nA0\nPWMA1\nA2\nTACH1\nGND+\nMAX31760Pin Configuration\nPin Description\nwww.analog.com\n Analog Devices  │ 6\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nDetailed Description\nThe MAX31760 is a precision lookup table (LUT)-based \nPWM fan controller. The device accurately measures its \ninternal die temperature and the temperature of an exter -\nnal diode-connected transistor, which can be a discrete \nsmall-signal device like a 2N3906 or a thermal diode on \nthe die of a CPU, graphics processor unit (GPU), or other \nASIC. Fan speed is controlled based on the temperature \nreading as an index to a 48-byte nonvolatile LUT contain -\ning user-programmed PWM values. The temperature read -\ning that is used as an index to the LUT can be either the \nlocal value, the remote value, or the greater of these two. \nThe PWM values selected from the LUT determine the \nduty cycle of the PWM, which can be used to drive 4-wire, \n3-wire, or 2-wire fans. The flexible LUT-based architecture \nenables the user to program a smooth nonlinear fan speed vs. temperature transfer function often desired to minimize \nacoustic fan noise. All fan-control profile and configuration \nsettings can be stored in nonvolatile memory that loads \ninto operating memory at power-up or on request, allowing \nautomatic, independent fan speed control.\nIn addition to using temperature measurements to deter -\nmine PWM duty cycle, the device also features multiple \ntemperature thresholds for thermal protection. The tem -\nperature thresholds include local high set point (LHS), \nlocal overtemperature set point (LOTS), remote high \nset point (RHS), and remote overtemperature set point \n(ROTS). These thresholds are programmable through the \nI2C-compatible interface. ALERT  is pulled low to indicate \na temperature fault state if the local temperature exceeds \nthe LHS or remote temperature exceeds the RHS.  I2C\nINTERFACE\nTEMP\nSENSORCONTROL\nLOGIC/\nREGISTERS\nLUT\nADDRESS\nREGISTER\nPWM GENERATORADCTACHOMETER\nDETECTION\nINTERNAL\nDIODEVDD\nGND\nSDA\nSCL\nDXP\nDXN\nPWMALERT\nMAX31760\nTACH2\nTACH1\n6.4MHz\nOSCILLATOR\n1/758; 1/167; \n1/17; 1/11/64\nMUXA0/A1/A2SHDN\nFF/FSVDDTEMPERATURE ALERT\nOVER-TEMPERATURE SHUTDOWN\nFULL SPEED INPUT\nFAN FAIL OUTPUT\n TEMP48 BYTE\nLOOKUP\nTABLE\n(LUT)\nEEPROM Block Diagram\nwww.analog.com\n Analog Devices  │ 7\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nIf LOTS or ROTS is surpassed, SHDN  is pulled low to \nshut down the system in order to avoid thermal damage.\nThe device has two TACH input pins, TACH1 and TACH2, \nthat can accept the tachometer outputs from two 4-wire or \n3-wire fans, thereby allowing them to monitor RPM and \ndetect faults for both fans. If the fans generate “locked rotor” \nor “rotation detector” (RD) signals rather than tachometer \npulses, TACH1 and TACH2 can be configured to read the \nRD signals and detect whether a fan has stopped rotat -\ning. Based on the inputs at the TACH pins, the device can \ndetect if a fan fault has occurred. If a fan fault is detected, \nFF/FS  is pulled low and the PWM duty cycle is forced to the \nvalue selected in the FFDC register (03h).\nTemperature Sensing\nAn internal temperature sensor measures the die (local) \ntemperature. The device also measures the temperature \nof a remote diode-connected transistor. The resolution is \n0.125°C for both local and remote temperature sensing. \nEach temperature reading is represented by an 11-bit, \ntwo’s complement word that contains 10 bits of magnitude \ndata and one sign bit. The value of the least significant \nbit (LSB), bit 5, is 0.125°C. The temperature data format \nis left-aligned with the sign at bit 15. Table 1  and Table 2  \nshows the temperature data register format.\nThe remote temperature reading is stored in the remote \ntemperature registers, with the MSB portion in the high \nRemote Temperature Reading register (RTH) and the LSB portion in the low Remote Temperature Reading \nregister (RTL). The local temperature reading is stored in \nthe local temperature registers, with the MSB portion in \nthe high Local Temperature Reading register (LTH) and \nthe LSB portion in the low Local Temperature Reading \nregister (LTL).\nTemperature-Sensing Diode Ideality Factor \nCorrection\nThe diode ideality factor, n d, plays an important role in \nthe measurement of temperature in an external diode-\nconnected transistor (or thermal diode). The value of \nnd is process-dependent and varies between devices. \nIf the temperature measurement algorithm assumes the \ntemperature-sensing diode’s ideality factor is n ASSUMED  \nbut the actual value is n REAL , an error is incurred by this \nideality factor mismatch:\nTERROR  = TMEASURED  - TREAL  = (n REAL /nASSUMED  - 1) \nx TREAL\nTo use an ideality factor close to the actual value, the \ndevice provides an ideality factor LUT. There are 64 pre -\nselected ideality factors in the table. Select the ideality \nfactor value to be used in temperature sensing by setting \nthe Ideality Factor register (IFR) to the value closest to \nthe actual ideality of the sensing diode to be used. Table 3  \nshows the IFR bitmap and Table 4  shows the ideality fac -\ntor LUT. The device’s factory-programmed default ideality \nfactor is 1.008 (position 18h).\nTable 1. Temperature Data Format\nTable 2. Temperature Reading ExamplesTEMPERATURE DATA FORMAT: REMOTE AND LOCAL ( °C)\nHIGH REGISTER BITS LOW REGISTER BITS\n15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0\nSign 64 32 16 8 4 2 1 0.5 0.25 0.125 0 0 0 0 0\nTEMPERATURE ( °C)REGISTER VALUES IN BINARY REGISTER VALUES IN HEX\nHIGH REGISTER LOW REGISTER HIGH REGISTER LOW REGISTER\n+125 0111 1101 0000 0000 7Dh 00h\n+85 0101 0101 0000 0000 55h 00h\n+25 0001 1001 0000 0000 19h 00h\n+1 0000 0001 0000 0000 01h 00h\n+0.125 0000 0000 0010 0000 00h 20h\n0 0000 0000 0000 0000 00h 00h\n-0.125 1111 1111 1110 0000 FFh E0h\n-1 1111 1111 0000 0000 FFh 00h\n-25 1110 0111 0000 0000 E7h 00h\n-55 1100 1001 0000 0000 C9h 00h\nwww.analog.com\n Analog Devices  │ 8\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTable 3. Ideality Factor Register (IFR)\nTable 4. Transistor Ideality Register\nTable 5. Temperature Threshold RegistersADDRESS BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\n05h 0 0 IF5 IF4 IF3 IF2 IF1 IF0\nSELECTION  \n(HEX)IDEALITY \nFACTORSELECTION  \n(HEX)IDEALITY \nFACTORSELECTION  \n(HEX)IDEALITY \nFACTOR\n0x00 0.9844 0x16 1.0060 0x2C 1.0286\n0x01 0.9853 0x17 1.0070 0x2D 1.0296\n0x02 0.9863 0x18 1.0080 0x2E 1.0307\n0x03 0.9873 0x19 1.0090 0x2F 1.0317\n0x04 0.9882 0x1A 1.0100 0x30 1.0328\n0x05 0.9892 0x1B 1.0110 0x31 1.0338\n0x06 0.9902 0x1C 1.0120 0x32 1.0349\n0x07 0.9911 0x1D 1.0130 0x33 1.0360\n0x08 0.9921 0x1E 1.0141 0x34 1.0370\n0x09 0.9931 0x1F 1.0151 0x35 1.0381\n0x0A 0.9941 0x20 1.0161 0x36 1.0392\n0x0B 0.9950 0x21 1.0171 0x37 1.0402\n0x0C 0.9960 0x22 1.0182 0x38 1.0413\n0x0D 0.9970 0x23 1.0192 0x39 1.0424\n0x0E 0.9980 0x24 1.0202 0x3A 1.0435\n0x0F 0.9990 0x25 1.0213 0x3B 1.0445\n0x10 1.0000 0x26 1.0223 0x3C 1.0456\n0x11 1.0010 0x27 1.0233 0x3D 1.0467\n0x12 1.0020 0x28 1.0244 0x3E 1.0478\n0x13 1.0030 0x29 1.0254 0x3F 1.0489\n0x14 1.0040 0x2A 1.0265 ≥0x40 Not Valid\n0x15 1.0050 0x2B 1.0275 — —\nTEMPERATURE THRESHOLDSREGISTERS\nHIGH BYTE (MSB) LOW BYTE (LSB)\nLocal High Set Point (LHS) LHSH (0Ch) LHSL (0Dh)\nRemote High Set Point (RHS) RHSH (06h) RHSL (07h)\nLocal Overtemperature Set Point (LOTS) LOTSH (08h) LOTSL (09h)\nRemote Overtemperature Set Point (ROTS) ROTSH (0Ah) ROTSL (0Bh)\nwww.analog.com\n Analog Devices  │ 9\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTemperature Thresholds\nThe device has four temperature thresholds: local high set \npoint (LHS), remote high set point (RHS), local overtem -\nperature set point (LOTS), and remote overtemperature \nset point (ROTS). These thresholds are programmable \nand their data format is the same as the temperature \nreadings shown in Table 1 . Table 5  shows the registers \nthat store the programmable temperature thresholds.  \nWhen the measured temperature is greater than the cor -\nresponding high set point, the open-drain ALERT  output \nasserts low. When the measured temperature is greater \nthan the corresponding overtemperature set point, the \nSHDN  output asserts low.\nFan-Speed Control\nPWM Fan-Speed Control\nThe device’s open-drain PWM output is used to control \nthe speed of one or two fans simultaneously. Furthermore, \nthe device can be used to control 3-wire or 4-wire fans, \nand controls fan speed by varying the PWM duty cycle.4-Wire Fan Control\nA 4-wire fan has an input that can accept the speed-\ncontrol signal from the PWM output. 25kHz, 1.5kHz, \nand 150Hz, PWM frequencies are available. The 25kHz \nfrequency should be used for 4-wire fans, unless the fan \nmanufacturer recommends otherwise. See Figure 2a . \n3-Wire Fan Control\nA 3-wire fan does not have an input for PWM control. \nExternal circuitry is needed to use the PWM output. \nThere are two common ways to drive a 3-wire fan: supply \nmodulation and variable DC drive. In the supply modulation \napproach, the fan supply voltage is modulated by the PWM \nsignal and the fan speed is controlled by the PWM duty \ncycle. The typical PWM frequency for this mode is 33Hz \n(see Figure 2b ). Another approach to 3-wire fan driving is \nto use the PWM signal to control a variable DC supply and \nthis DC supply drives the fan continuously to realize speed \ncontrol. The variable DC supply can be either a switching \nmode power supply (SMPS) or a low-cost LDO (such as \nthe PQ20RX05/PQ20RX11), whose feedback is controlled \nby the filtered PWM (see Figure 2c ).\nDirect PWM of the power supply has some important \ndrawbacks. First, each rising or falling edge of the power \nsupply waveform induces an audible noise transient from \nthe fan. Second, when the supply modulation technique \nis used to drive a 3-wire fan, the tachometer signal is also \nFigure 2a. Speed Control Using Fan’s PWM Input (4-Wire Fan)\nFigure 2b. PWM Supply Modulation (3-Wire Fan)Figure 2c. LDO Regulator Control (3-Wire Fan Driven by \nVariable Switching Mode Power Supply (SMPS) or LDO \nRegulator)MAX317604-WIRE FAN\nTACH\nPWMTACH1\nPWMRPU_T ACH RPU_PWMVDD+3.3VPWM FREQUENCY  25kHz, DR V = 11\nGND GNDVCCFAN VOLTAGE\nMAX317603-WIRE FAN\nTACH TACH1\nPWMRPU_T ACH RPU_PWMVDD+3.3VPWM FREQUENCY  33Hz, DR V = 00\nGNDG ND\nPWMVCCFAN VOLTAGE\nMAX317603-WIRE FAN\nTACH TACH1\nPWMRPU_T ACHVDDSMPS OR LD O\nREGULA TOR\n+3.3V\nGNDG NDVCCFBVOUT\nVINPWM FREQUENCY  25kHz, DR V = 11\nwww.analog.com\n Analog Devices  │ 10\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nmodulated by the PWM signal. During the “off” period of \nthe waveform, there is no TACH signal. If the “on” period \nis sufficiently long (relative to the TACH period) so that \nfour TACH periods are available, then fan speed can be \nmeasured and fan failure can be detected. If the “on” peri -\nod is too short, a full TACH period may not be available, \nwhich prevents the fan’s speed from being measured. \nOne approach to measuring fan speed when the nominal \n“on” period is too short (or the TACH periods are too long) \nis to insert a PWM pulse with extended on-time (pulse \nstretching) to measure four full tachometer periods. When \npulse stretching is enabled and PWM polarity is positive \n(as selected by CR1.2), PWM will remain high until four \nTACH pulses have been counted. Figure 3  illustrates the \nidea of pulse stretching. If a full count is reached before \ncounting four pulses, PWM will go low. (Note that if the \nPWM polarity is negative the stretched pulse will be low.) \nIf fewer than 4 TACH periods are available, the stretched \nPWM pulse will have a nominal width equal to a full count \nof (65535 x 4)/100kHz = 2.62s. \nNote that while pulse stretching is enabled, the fan fault \ndetection will take place during “normal” PWM pulses \n(between the stretched pulses) as well, but to avoid \ninvalid fault detections, a fault will be detected only when \n4 TACH periods have been counted. \nThe PSEN bit (pulse stretch enable: CR3.2) enables \npulse stretching. When enabled, a stretched pulse will \noccur approximately every 12s. Note that pulse stretching can be enabled only when the PWM frequency is 33Hz \n(DRV = 00) and when TACHFULL = 0. If DRV≠0 or if \nTACHFUL = 1, the PSEN bit is ignored and pulse stretch -\ning is disabled. \nIf DRV is 00 and PSEN is 0, there is no pulse stretching. \nUnder this condition, the TACH measurements are valid \nif PWM is sufficiently wide to allow 4 TACH pulses. This \nwill typically be the case only with higher speed fans (e.g. \n10,000RPM or greater). \nAnother alternative to pulse stretching is to use the \nTACHFULL bit. If TACHFULL (CR3.3) is set to 1, TACH \nmeasurements will be valid only when the PWM duty \ncycle is 100%; if the duty cycle is not 100 % fan fault \ndetection is disabled. Fan fault detection in this mode \nwill therefore be active only part of the time (when the \nduty cycle is 100%), so the detection of fan faults may be \nrelatively infrequent. \nWhen DRV is 00, TACHFULL is 0, and PSEN is 1, pulse \nstretching is enabled immediately after PSEN is set to 1. \nThe next pulse is stretched to allow the device to obtain \nan accurate tachometer reading and update the TACH \ncount register. Once the TACHx count register has been \nupdated, normal PWM pulse output resumes. If PSEN is \nkept as 1, a stretched pulse is inserted into PWM pulse \ntrain once every 12s to avoid excessive audible noise. If a \nsystem only needs a TACH reading infrequently, the host \ncan set PSEN to 1 when it needs the TACH update. After \nthat, the host can clear PSEN to 0 and thus disable the Figure 3. Pulse Stretching to Process TACH InformationPWM\nIDEAL\nTACH \nTACHPULSE\nwww.analog.com\n Analog Devices  │ 11\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\npulse stretching. Doing so helps to minimize the audible \nnoise introduced by pulse stretching. \nWhen the PWM frequency is 33Hz and the duty cycle is \n0% or decreasing toward 0%, then fan fault detection is \ndisabled. Also, when the PWM frequency is 33Hz, the \nFF_0 bit functionality (CR3.6) is not valid. \nVariable DC Control \nBecause pulse stretching can cause the fan to speed up \nin response to the longer pulse, this further increases the \naudible noise level associated with PWM of the power \nsupply. In contrast, the variable DC drive approach keeps \nthe fan continuously on, so the tachometer signal is not \naltered. One such approach, using either a linear or a \nswitching regulator, is shown in Figure 2c . \nPWM Polarity\nSet the active level of the PWM output using the PPS bit \n(PWM polarity: CR1.2). When PPS is 0, a 100% PWM \noutput is high. When PPS is 1, a 100% PWM output is low.\nAutomatic Fan-Speed Control Based on LUT\nThe device uses a 48-byte LUT to map the measured \ntemperature to a desired PWM duty cycle that controls fan \nspeed. The local temperature, the remote temperature, or \nthe larger of the two can be used as an index to the LUT. \nControl bits TIS (temperature index source: CR1.0) and \nMTI (maximum temperature as index: CR1.1) determine \nthe source of the index. Table 6  shows the control bit val -\nues and the corresponding temperature source.\nThe factory-programmed default value is 1 for the TIS bit \nand 0 for the MTI bit. The PWM duty-cycle values in the LUT are programmable through the I 2C-compatible inter -\nface. Table 7  shows the 48-byte LUT.\nLUT Hysteresis\nThe device provides a programmable hysteresis for the \nLUT to prevent the duty cycle from alternating between \ntwo values if the measured temperature falls on the \nboundary between two windows. Figure 4  illustrates the \nLUT hysteresis, and Table 8  shows the HYST (LUT hys -\nteresis: CR1.5) control bit function.\nSetting PWM Frequency and Duty Cycle\nIn most 4-wire fan applications, set the PWM frequency \nto 25kHz as recommended by most fan manufacturers  \n(150Hz and 1500Hz PWM frequencies are also available \nfor fans that require them.) An internal 6.4MHz PWM clock \ngenerates PWM pulses. The PWM duty-cycle resolution \nis 1/256, so any available duty cycle can be represented \nby an 8-bit value in either a PWM duty-cycle register in the \nLUT, or the Direct Duty-Cycle Control register (PWMR) in \nmemory location 50h.\nPWM_Resolution = 1/256\nPWM_Duty_Cycle = PWM_Resolution x  \nPWM_Register_Value x 100\nTable 9  shows a few examples of register values and the \ncorresponding duty cycles.\nFor 1500Hz, 150Hz, or 33Hz PWM, the PWM clock fre -\nquency is divided by 17, 167, or 758 to yield the correct \nPWM frequency while maintaining 8-bit duty cycle resolu -\ntion.  Table 10  summarizes common fan types and driving \napproaches.Table 7. 48-Step I 2C Programmable LUT MapTable 6. Temperature Index Source\nREGISTER NAME ADDRESS (HEX)\nLUT0 PWM value for T < +18°C 20h\nLUT1 PWM value for +18°C ≤ T < +20°C 21h\nLUT2 PWM value for +20°C ≤ T < +22°C 22h\n. . . . . . . . .\nLUT45 PWM value for +106°C ≤ T < +108°C 4Dh\nLUT46 PWM value for +108°C ≤ T < +110°C 4Eh\nLUT47 PWM value for T ≥ +110°C 4FhMTI (CR1.1) TIS (CR1.0) TEMPERATURE INDEX SOURCE\n0 0 Local temperature is used as the index.\n0 1 Remote temperature is used as the index (factory default setting).\n1 X The maximum of the local temperature and the remote temperature is used as the index.\nwww.analog.com\n Analog Devices  │ 12\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTable 8. HYST Bit Hysteresis\nFigure 4. LUT Hysteresis; HYST Bit (CR1.5) = 0Table 9. PWM Duty Cycle and Register \nValue (PWMR, Register 50h)HYST (CR1.5) HYSTERESIS ( °C)\n0 2\n1 4\nREGISTER VALUE (HEX) PWM DUTY CYCLE (%)\n00h 0.00\n01h 0.39\n02h 0.78\n. . . . . .\nFDh 98.83\nFEh 99.22\nFFh Forced to 100.00\nTable 10. Fan Type and Driving Modes\nFAN CONTROL \nMETHODPWM \nFREQUENCYPWM CLOCK \nFREQUENCYDUTY-CYCLE \nRESOLUTIONFAN \nSUPPLY \nVOLTAGETACHOMETER SIGNALCONTROL\nBITS\n4-wire fan25kHz, \n1.5kHz, 150Hz6.4MHz, \n376.47kHz, \n38.32kHz1/256Constant \nmagnitudeStandardDRV = 01, 10, \nor 11,  \nPSEN = don’t \ncare\nTACHFULL=0 \n3-wire fan \ndriven by \nvariable DC \nsupply25kHz 6.4MHz 1/256Variable \nmagnitudeStandard as long as \nthe fan supply voltage \nis greater than the \nminimum value for the \nfan’s internal circuitry.DRV =11,\nPSEN = don’t \ncare\nTACHFULL=0 \n3-wire fan \ndriven by supply \nmodulation \n(pulse stretching \nenabled)33Hz 8.3kHz 1/256Pulse-width \nmodulated  \n(can create \naudible \nnoise)Modulated by PWM. \nMeasured during \nperiodic stretched PWM \npulses. Stretched pulses \nmay cause audible \nartifacts with some fans .DRV = 00,\nPSEN = 1\nTACHFULL=0 \n3-wire fan \ndriven by supply \nmodulation \n(pulse stretching \ndisabled)33Hz 8.3kHz 1/256Pulse-width \nmodulatedModulated by PWM. \nMeasured only when \nduty cycle is 100%.DRV = 00,\nPSEN = 0\nTACHFULL=1 DECREASING\nTEMPERA TURE\nINCREASING\nTEMPERA TURE\n18LUT5\nLUT4\nLUT3\nLUT2\nLUT1\n22 26 30 34 38\nTEMPERA TURE (°C)MEMORY LOCA TION\nHYSTERESIS\nWINDOW\nwww.analog.com\n Analog Devices  │ 13\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nDirect (“Manual”) Fan-Speed Control\nIf desired, the LUT can be overridden and the master \ncan control the fan speed directly by writing a PWM duty-\ncycle value to PWMR (Register 50h). Table 9  shows the \nrelationship between the value written to PWMR and the \nPWM duty cycle.\nTo activate direct fan-speed control (thus disabling the \nLUT functionality), set control bit DFC (direct fan control, \nCR2.0) to 1. Then write the desired PWM duty-cycle value \nto the PWMR register. Clearing control bit DFC disables \ndirect fan-speed control, and the LUT is automatically \nselected to control the fan speed based on the measured \ntemperature value(s).\nPWM Duty-Cycle Ramp Rate\nTo ensure minimal audibility of fan-speed variations as \ntemperature and PWM duty cycles change, the device \nchanges the output PWM duty cycle at a selectable rate \n(determined by the RAMP0 and RAMP1 bits in Control \nRegister 3) to minimize the rate at which the fan’s acous -\ntic noise increases and decreases ( Table 11 ). This ramp \nrate applies for both LUT-based fan-speed control and \ndirect fan-speed control.\nThe PWM duty cycle always ramps toward the latest \ntarget value determined by the LUT. For example, if the \ntemperature rises to +30°C, the duty cycle begins ramp -\ning toward the value corresponding to +30°C in the LUT \n(D30). If the temperature drops to +24°C before duty \ncycle D30 has been reached, the target duty cycle is now \nD24, and the duty cycle begins moving toward D24 (the duty-cycle setting corresponding to the LUT register for \n+24°C).\nDuring the ramp-up process, the actual output PWM duty \ncycle is not same as the target value. The PWMV register \nstores the current value of the PWM duty-cycle setting.\nRead PWMV (Register 51h) to obtain the current PWM \nduty cycle.\nFan Spin-Up\nSome fans cannot reliably start spinning from a stopped \ncondition unless driven with close to 100% duty cycle (or \nsupply voltage, in the case of 3-wire fans). To overcome \nthis problem, an optional fan spin-up function can be \nenabled to start the fan reliably. Spin-up overcomes the \nfan’s inertia by providing it with 100% drive for a short \ntime. If spin-up is enabled, changing the selected duty \ncycle from zero to a nonzero value causes the PWM duty \ncycle to immediately go to 100% until one of the following \nconditions is met, whichever comes sooner:\n• A 2s timeout has passed, or\n• Two tachometer pulses are detected at each enabled \nTACH input\nAfter the spin-up period is over, the PWM duty cycle \nreverts to the value determined by the LUT or the value in \nthe PWMR register, depending on the status of the DFC \nbit (direct fan control: CR2.0). If spin-up is disabled, the \nPWM duty cycle is always determined by the output of \nthe LUT or the direct fan control register, depending on \nthe state of the DFC bit. Enable fan spin-up by setting the \nSPEN bit (spin-up enable: CR2.5) to 1.\nTable 11. PWM Duty-Cycle Ramp Rates\nRAMP1 RAMP0 PWM ADJUST RAMP RATE SELECTPWM DUTY-CYCLE CHANGE ALLOWED \nPER SECOND (%)\n0 0 Slow (default) 3.125\n0 1 Slow-Medium 6.25\n1 0 Medium-Fast 12.5\n1 1 Fast Immediate\nwww.analog.com\n Analog Devices  │ 14\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nTachometer Inputs\nThe device has two TACH input pins, TACH1 and TACH2, \nthat accept the tachometer signals from two fans inde -\npendently. Tachometer signals are typically open drain \nso external pullup resistors are needed for the TACH1 \nand TACH2 pins. TACH1, TACH2, or both can be dis -\nabled depending on the number of fans that need to be \nmonitored. The tachometer enable bits, TACH1E (CR3.0) \nand TACH2E (CR3.1), control the enabling/disabling \nof TACH1 and TACH2, respectively. To enable a fan-\nmonitoring input, set the enable/disable bit for that input \nto 1. Both TACH inputs are factory programmed to default \nenabled.\nThe speed of each fan can be determined using the con -\ntents of the TACH count registers. There is an internal \nfan-counter clock running at 100kHz. To cancel out the \neffect of the mechanical tolerance, the device counts the \nnumber of fan-counter clock periods over four tachometer \npulses. The resulting average tachometer pulse count is \nstored in a 2-byte TACH count register. Table 12  shows \nthe register definitions.\nIf the decimal value in TCxH is {TCxH} and the decimal \nvalue in TCxL is {TCxL}, where x = 1 or 2, the RPM of the \nfan can be calculated as:\nFan_RPM = 60 x 100,000/({TCxH} x 256 + {TCxL}/n\nwhere n is the number of pulses generated by the \ntachometer per revolution.\nTo detect fan failure, write a TACH count failure threshold \nvalue in the 2-byte TACH Count Threshold register (TCTH \nand TCTL). When the values in the TACH_ Count register \npairs are higher than the value in the threshold register \npair, or when overflow occurs, the fan is considered as \nrunning at a speed lower than the threshold and the fan-\nfault error is indicated in the Status register and (if not \nmasked) with the FF_FS  output. During the first 2s of fan \nstartup, fan-error detection is disabled, whether or not \nspin-up is enabled. After 2s, fan-error detection is enabled \nto ensure reliable fan monitoring. Fan-failure detection is \ndisabled when the PWM duty cycle is zero or decreasing \nto zero.Care must be taken when counting the tachometer output \nfrom a 3-wire fan driven by power-supply modulation. See \nthe PWM Fan-Speed Control  section for more information.\nSome 3-wire fans provide a “rotation detection” (RD) or \n“locked rotor” signal that indicates whether or not the fan \nis running. When the FSST bit (fan-sense signal type: \nCR2.1) is set to 1, TACH1 and TACH2 are configured to \naccept RD signals instead of TACH signals. The polarity \nof the RD signal is selectable. If the RDPS bit (rotation-\ndetection signal-polarity selection: CR2.2) is set to 1, the \ndevice interprets RD high, as indicating that the fan is \nspinning. If RDPS is cleared to 0, the device interprets RD \nlow, as indicating that the fan is spinning. If the RD signal \nat either TACH1 or TACH2 indicates the fan is stalled, a \nfan-fault error is detected, except when bit 6 of CR3 is set \nto 0 and the PWM duty cycle is zero or is ramping down \nto a target value of zero.\nWhen a fan-fault error is detected three times in a row \n(see the Fault Queue  section for more information),  \nFF/FS  is asserted low  and the PWM output duty cycle is \nforced to the value in register 03h. TACH signals are still \nmonitored as long as a TACH input is enabled, and if the \nfan speed returns to the correct value, normal operation \nresumes .\nTemperature Alert Output ( ALERT )\nThe device has an open-drain ALERT  output to indicate \nthat the measured temperature has extended beyond a \ntemperature threshold. This output can be used as either \na fault indicator or an interrupt output. In the fault indica -\ntor (comparator) mode, the ALERT  asserts low when \nthe local temperature exceeds LHS or the remote tem -\nperature exceeds RHS. When the temperature returns to \nthe normal range, ALERT  deasserts. A 1°C hysteresis is \nassociated with the Local High and Remote High Alarms.  \nTo set the fault-indicator mode, set control bit ALERTS \n(ALERT  functionality selection: CR2.6) to 1.\nThe ALERT  output can also be configured as an interrupt \noutput. In this mode, the output asserts low when the local \ntemperature exceeds LHS or the remote temperature \nexceeds RHS. The ALERT  output remains asserted until \nit is cleared, even if the error condition is no longer pres -\nent. In this mode, reading the Status register (SR, memo -\nTable 12. TACH Count Addresses\nREGISTER MSB ADDRESS LSB ADDRESS\nTACH1 Count (High/Low) TC1H 52h TC1L 53h\nTACH2 Count (High/Low) TC2H 54h TC2L 55h\nwww.analog.com\n Analog Devices  │ 15\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nry address 5Ah) sets the Alert Mask bit (ALTMSK - CR1.7) \nif LHA or RHA is set. This prevents further ALERT  trigger -\ning until the master clears the condition at the end of the \ninterrupt service routine by writing a 0 to the ALTMSK bit \n(CR1.7). LHA and RHA are cleared by a read command \nfrom the master, and are reasserted at the end of next \nconversion if the triggering condition persists. The control \nbit ALERTS (CR2.6) must be written to a 0 for ALERT  to \nbe used as an interrupt output. This is the default factory-\nprogrammed state. The following sequence describes the \nresponse of a system that uses the ALERT  output pin as \nan interrupt flag:\n1) Master senses ALERT  low.\n2) Master reads the device SR register to determine what \ncaused the ALERT .\n3) The device clears LHA, RHA, LOTA, and ROTA, resets \nthe ALERT  output pin back to high impedance, and \nsets the Alert Mask bit (CR1.7) to 1, masking new \nfaults from asserting ALERT .\n4) Master attends to conditions that caused ALERT  to \nbe triggered, for example, the fan is started, set point \nlimits are adjusted, etc.\n5) Master writes a 0 to the ALTMSK bit in CR1 to reset \nthe interrupt.\nOvertemperature Shutdown ( SHDN )\nThe SHDN  pin is pulled low if the local temperature \nexceeds LOTS or the remote temperature exceeds \nROTS. The LOTA bit (SR.4) is set to 1 if the local tem -\nperature exceeds LOTS. The ROTA bit (SR.2) is set to \n1 if the remote temperature exceeds ROTS. SHDN  can \nbe used to prevent thermal damage by shutting down \nthe system. A 10°C hysteresis is associated with the \novertemperature detection. The ROTA bit is reset and the \nSHDN  output deasserts (back to high impedance) when \nthe remote temperature drops to or less than the ROTS \nvalue minus 10°C. The same hysteresis applies to local \novertemperature detection. Reading the status register \nhas no effect on either the SHDN  output or the status bits \nROTA and LOTA.\nFan-Fail Output and Full-Speed Input ( FF/FS )\nFF/FS  is a combination of fan-fail open-drain output and \nfull-speed input. Two types of fan failure detection are \nsupported, depending on the type of output signal avail -\nable from the fan. If the fan has a tachometer output that \nproduces pulses (typically 2 per revolution) as the fan \nspins, failure is determined by determining the rate of \nthe TACH pulses. If the fan has a failure detection output \n(often called a “locked rotor” output), failure is determined by detecting the state of this output. The type of failure \ndetection is selected by the FSST bit (CR2.1). \nSelect FSST = 0 when the fan has a tachometer out -\nput. Most tachometer outputs provide two square-wave \npulses per revolution. Fan speed is determined by count -\ning the number of internal clock cycles that occur during \nfour tachometer periods. To detect fan failure, write a \nTACH count failure threshold value in 2-byte TACH count \nThreshold register (TCTH and TCTL). When the values in \nthe TACH_Count register pairs are higher than the value \nin the threshold register pair or when overflow occurs, the \nfan is considered as running at a speed lower than the \nthreshold and a fan-fault error is generated. Three con -\nsecutive detections will cause the FF/FS  output to assert. \nSelect FSST = 1 when the fan has a rotation detection \n(or “locked rotor”) output. If the fan’s rotation detection \noutput is high when the fan is running, set the RDPS bit \n(CR2.2) to 1. Fan failure will cause the output to go low, \ndriving the TACH input low and causing detection of a \nfan fault. Three consecutive detections of the low output \nwill cause the FF/FS  output to assert. If the fan’s rotation \ndetection output is low when the fan is running, set the \nRDPS bit to 0, which will cause a fan fault to be detected \nwhen the TACH input is driven high. \nFor the fault output to be asserted for either signal type, \nthe fault must occur for three consecutive times. \nIf the TACH alarms are not masked by bits 0:1 in \nAlert Mask registers, fan failure detection causes the  \nFF/FS  output to assert low. When a fan failure has been \ndetected, the PWM duty cycle is forced immediately to \nthe value in the FFDC register (03h). \nMany 4-wire fans stop spinning when the applied PWM \nduty cycle is zero. When such a fan is used, set bit \nFF_0 (CR3.6) to 0. This disables fan-failure detection \nwhen the PWM duty cycle is zero or ramping down to \nzero. This prevents detecting a fan failure when the fan \nis intended to be stopped. \nSome 4-wire fans are designed to continue spinning \nwhen the applied PWM duty cycle is zero. When such a \nfan is used, set bit FF_0 (CR3.6) to 1. This enables fan-\nfailure detection for all values of duty cycle. \nFor 3-wire fans operating from a PWM-modulated power \nsupply, fan operation stops when the duty cycle is zero. \nTherefore, when the PWM frequency is set to 33Hz, fan \nfault detection is disabled when PWM duty is zero or \ndecreasing to zero. \nThe FF Mode bit (CR2.4) selects whether the FF/FS \noutput operates in comparator mode or interrupt mode. \nwww.analog.com\n Analog Devices  │ 16\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nIn comparator mode, FF/FS  asserts upon detection of \nfailure and de-asserts if the fan subsequently begins to \nspin again. The status bits will remain set if the fan begins \nto spin again. Writing 1 to CLR_FAIL bit (CR3.7) clears \nthe fan fail status bits (TACH1A and TACH2A). These bits \nwill set again if a fan failure is subsequently detected. Bit \nCR3.7 self-clears to 0. In Interrupt mode, FF/FS  asserts \nupon detection of failure and remains asserted until the \nstatus bits are cleared by writing 1 to CLR_FAIL bit. In \neither mode, FF/FS  and fault status can be cleared by \ndisabling TACH inputs. \nIf FF/FS  is pulled low externally by another device, and \nif the FS_ENABLE bit (CR2.3) is set to 1, the PWM duty \ncycle is forced to be 100%. An application for this feature \nis two devices that have their FF/FS  pins connected \ntogether. If one device detects a fan failure and asserts its \nFF/FS  pin, the FF/FS  pin of the other device is also pulled \nlow and therefore its PWM duty cycle is forced to 100% \nto compensate for the loss of cooling from the failed fans.\nFault Queue\nThe device features a “fault queue” to avoid false alarms. \nFor a fault output ( ALERT , FF/FS , or SHDN ) to be trig -\ngered, the fault must occur three consecutive times. The \nfault sources include out-of-limit temperature readings \nand fan failures.\nStandby Mode\nThe device features a standby mode to conserve power. \nIn the standby mode, temperature sensing, tachometer pulse counting, and PWM output are stopped. The I 2C \ninterface remains active during the standby. Set the STBY \nbit (standby mode enable: CR2.7) to 1 to enable the \nstandby mode.\nI2C Serial Interface Description\nI2C Definitions\nThe following terminology is commonly used to describe \nI2C data transfers. See the I 2C timing diagram ( Figure 1 ) \nand the I2C AC Electrical Characteristics  table for addi -\ntional information.\nMaster Device:  The master device controls the slave \ndevices on the bus. The master device generates SCL \nclock pulses and START and STOP conditions.\nSlave Devices:  Slave devices send and receive data at \nthe master’s request.\nBus Idle or Not Busy:  Time between STOP and START \nconditions when both SDA and SCL are inactive and in \ntheir logic high states. A STOP condition is the proper \nmethod to return the bus to the idle state.\nSTART Condition:  A START condition is generated by \nthe master to initiate a new data transfer with a slave. \nTransitioning SDA from high to low while SCL remains \nhigh generates a START condition.\nSTOP Condition:  A STOP condition is generated by the \nmaster to end a data transfer with a slave. Transitioning \nSDA from low to high while SCL remains high generates \na STOP condition.\nRepeated START Condition:  The master can use a \nrepeated START condition at the end of one data trans -\nfer to indicate that it will immediately initiate a new data \ntransfer following the current one. Repeated STARTs are \ncommonly used during read operations to identify a spe -\ncific memory address to begin a data transfer. A repeated \nSTART condition is issued identically as a normal START \ncondition,\nBit Write:  Transitions of SDA must occur during the low \nstate of SCL. The data on SDA must remain valid and \nunchanged during the entire high pulse of SCL plus the \nsetup and hold time requirements. Data is shifted into the \ndevice during the rising edge of the SCL.\nBit Read:  At the end of a write operation, the master \nmust release the SDA bus line for the proper amount of \nsetup time before the next rising edge of SCL during a \nbit read. The device shifts out each bit of data on SDA at \nthe falling edge of the previous SCL pulse and the data \nbit is valid at the rising edge of the current SCL pulse.  \nFigure 5. I 2C Slave Address ByteTable 13. Available I 2C Addresses\nA2 A1 A0 SLAVE ADDRESS (HEX)\n0 0 0 A0h\n0 0 1 A2h\n0 1 0 A4h\n0 1 1 A6h\n1 0 0 A8h\n1 0 1 AAh\n1 1 0 ACh\n1 1 1 AEh\n10 0 1R /W A0 A1 A2MSB LSB\nSLAVE ADDRESS *\n*THE SL AVE ADDRESS IS DETERMINED BY  ADDRESS PINS A0, A1, AND A2.READ/WRITE BI T\nwww.analog.com\n Analog Devices  │ 17\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRemember that the master generates all SCL clock \npulses, including when it is reading bits from the slave.\nAcknowledgement (ACK and NACK):  An acknowledge -\nment (ACK) or not-acknowledge (NACK) is always the 9th \nbit transmitted during a byte transfer. The device receiving \ndata (the master during a read or the slave during a write \noperation) performs an ACK by transmitting a 0 during \nthe 9th bit. A device performs a NACK by transmitting a \n1 (done by releasing SDA) during the 9th bit. Timing for \nthe ACK and NACK is identical to all other bit writes (see \nFigure 1 ). An ACK is the acknowledgment that the device \nis properly receiving data. A NACK is used to terminate a \nread sequence or as an indication that the device is not \nreceiving data.\nByte Write:  A byte write consists of 8 bits of information \ntransferred from the master to the slave (MSB first) plus a \n1-bit acknowledgement from the slave to the master. The \n8 bits transmitted by the master are done according to the \nbit write definition and the acknowledgement is read using \nthe bit read definition.\nByte Read:  A byte read is an 8-bit information transfer \nfrom the slave to the master plus a 1 bit ACK or NACK \nfrom the master to the slave. The 8 bits of information that are transferred (MSB first) from the slave to the master \nare read by the master using the bit read definition previ -\nously described, and the master transmits an ACK using \nthe bit write definition to receive additional data bytes. The \nmaster must NACK the last byte read to terminate commu -\nnication so the slave returns control of SDA to the master.\nSlave Address Byte:  Each slave on the I 2C bus responds \nto a slave address byte sent immediately following a \nSTART condition. The slave address byte contains the \nslave address in the seven MSBs and the R/ W bit in the \nLSB.\nAs shown in Figure 5 , the state of the A0, A1, and A2 \naddress pins determine the device’s slave address. \nAddress pins connected to GND result in a 0 in the cor -\nresponding bit position in the slave address. Conversely, \naddress pins connected to V DD result in a 1 in the cor -\nresponding bit positions. Table 13  shows the eight select -\nable I 2C addresses.\nWhen the R/ W bit is 0 (such as in A0h), the master is \nindicating it will write data to the slave. If R/ W is set to a \n1 (in this case, A1h), the master is indicating it wants to \nread from the slave.\nFigure 6. I 2C Communication ExamplesSLAVE\nADDRESS *\nSTART 1 0 1 0 A2A1A0R/W\nSLAVE\nACKMSB LSB\nb7\nb6\nb5\n b4\nb3\nb2\n b1\nb0MSB LSB\nREAD /WRITE REGISTER ADDRESS\nSLAVE\nACK\nb7\n b6\nb5\nb4\n b3\nb2\nb1\nb0MSB LSB\nDATA\nSTOP\nSLAVE\nACK\nA)  SINGLE -BYTE WRITE\n-WRITE CONTROL REGISTER 1 \n(00h) TO 01h\nB)  SINGLE -BYTE READ\n-READ STATUS REGISTER (5Ah)\nC)  2-BYTE WRITE\n-WRITE LOCAL OVER -\nTEMPERATURE SETPOINT \nREGISTERS 08h (MSB ) AND 09h \n(LSB) TO 46h AND 00h (+70°C)TYPICAL I2C WRITE TRANSACTION\nSTART\nSLAVE\nACK\nSLAVE\nACK\nSTOP 10100000\n 00001000A0h 08h\nSTART\nSLAVE\nACK\nSLAVE\nACK\nREPEATED\nSTARTA1h\nSLAVE\nACK\nMASTER\nNACK\nSTOP 10100000\n 010110105Ah\n10100001\nSTART\nSLAVE\nACK\nSLAVE\nACK10100000\n 00000000A0h 00h\nSLAVE\nACK\nSTOP\nSTATUSDATA\n46hEXAMPLE I2C TRANSACTIONS (WHEN A 0, A1, AND A 2 ARE CONNECTED TO GND )*THE SLAVE ADDRESS IS DETERMINED BY ADDRESS PINS A 0, A1, AND A 2\n00000001\nA0h\nSLAVE\nACK\nSLAVE\nACK\nD)  2-BYTE READ\n-READ TACH 1 COUNT \nREGISTERS , 52h (MSB ) \nAND 53h (LSB) \nSTART\nSLAVE\nACK\nSTOP 10100000\n 01010010A0h 52h\nSLAVE\nACK\nREPEATED\nSTARTA1h\nSLAVE\nACK\nMASTER\nACK10100001\nDATA\nMASTER\nNACK\nDATA00h\n01000110 00000000\nTACH1 MSB TACH1 LSB01h\nwww.analog.com\n Analog Devices  │ 18\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nIf an incorrect (nonmatching) slave address is written, \nthe device assumes the master is communicating with \nanother I 2C device and ignores the communication until \nthe next START condition is sent.\nMemory Address:  During an I 2C write operation to the \ndevice, the master must transmit a memory address to \nidentify the memory location where the slave is to store \nthe data. The memory address is always the second byte \ntransmitted during a write operation following the slave \naddress byte.\nI2C Communication\nSee Figure 6  for I 2C communication examples.\nWriting a Single Byte to a Slave:  The master must \ngenerate a START condition, write the slave address byte \n(R/W = 0), write the memory address, write the byte of \ndata, and generate a STOP condition. The master must \nread the slave’s acknowledgement during all byte write \noperations.\nWriting Multiple Bytes to a Slave:  To write multiple \nbytes to a slave, the master generates a START condi -\ntion, writes the slave address byte (R/W = 0), writes the \nmemory address, writes up to 8 data bytes, and gener -\nates a STOP condition. The device writes 1 to 8 bytes \n(one page or row) with a single write transaction. This \nis internally controlled by an address counter that allows \ndata to be written to consecutive addresses without trans -\nmitting a memory address before each data byte is sent. \nThe address counter limits the write to one 8-byte page \n(one row of the memory map). Attempts to write to addi -\ntional pages of memory without sending a STOP condition \nbetween pages results in the address counter wrapping \naround to the beginning of the present row. \nFor example, a 3-byte write starts at address 06h and \nwrites 3 data bytes (11h, 22h, and 33h) to three “consecu -\ntive” addresses. The result is that addresses 06h and 07h \nwould contain 11h and 22h, respectively, and the third \ndata byte, 33h, would be written to address 00h.\nTo prevent address wrapping from occurring, the master \nmust send a STOP condition at the end of the page, then \nwait for the bus-free or EEPROM write time to elapse. \nThen the master can generate a new START condition \nand write the slave address byte (R/W = 0) and the first \nmemory address of the next memory row before continu -\ning to write data.\nAcknowledge Polling:  Any time a EEPROM byte is \nwritten, the device requires the EEPROM write time (t W) \nafter the STOP condition to write the contents of the byte to EEPROM. During the EEPROM write time, the device \ndoes not acknowledge its slave address because it is \nbusy. It is possible to take advantage of this phenomenon \nby repeatedly addressing the device, which allows com -\nmunication to continue as soon as the device is ready. \nThe alternative to acknowledge polling is to wait for a \nmaximum period of t W to elapse before attempting to \naccess the device.\nWriting to and Loading from EEPROM : The contents of \nthe EEPROM are loaded into the corresponding control \nregisters on POR, and on command. Initiate a load from \nEEPROM by writing 1 to bit 7 of the EEX register (5Bh) \nand also to the bits corresponding to the register ranges \nto be loaded. To write to EEPROM, write 0 to bit 7 and to \nthe bits corresponding to the register ranges to be written. \nEEX bits always auto-clear to 0. \nEEPROM Corruption and Recovery:  Using the EEX \nregister (5Bh), RAM can be written to EEPROM. If \nthe power to the MAX31760 is interrupted during the \nEEPROM write cycle, there is a possibility that the data \nbeing written to the EEPROM will become corrupted. The \nMAX31760 can detect if this corruption has occurred, \nand will set the Program Corrupt bit (bit 7 of the Status \nRegister; 5Ah) to a 1 to indicate that EEPROM corruption \nhas been detected.\nTo recover from this, make sure the RAM locations are \nfilled with the desired values, then execute an EEPROM \nwrite cycle using the EEX register (5Bh), making sure that \npower is stable for the duration of the write cycle. Once \ncomplete, either power cycle the MAX31760 or set the \nSoft POR bit (bit 6 of CR1; register 00h). Once the power \ncycle is complete, read the Program Corrupt bit to confirm \nthat it has returned a 0 value, indicating that the EEPROM \nhas been properly stored.\nReading a Single Byte from a Slave: Unlike the write \noperation that uses the specified memory address byte to \ndefine where the data is to be written, the read operation \noccurs at the present value of the memory address counter. \nTo read a single byte from the slave, the master generates \na START condition, writes the slave address byte with R/ W \n= 1, reads the data byte with a NACK to indicate the end \nof the transfer, and generates a STOP condition. However, \nbecause requiring the master to keep track of the memory \naddress counter is impractical, the next method should be \nused to perform reads from a specified memory location.\nManipulating the Address Counter for Reads:  A dummy \nwrite cycle can be used to force the address counter (or \npointer) to a  particular value. To do this, the master gen -\nwww.analog.com\n Analog Devices  │ 19\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nerates a START condition, writes the slave address byte \n(R/W = 0), writes the memory address where it desires \nto read, generates a repeated START condition, writes \nthe slave address byte (R/ W = 1), reads data with ACK or \nNACK as applicable, and generates a STOP condition. \nRecall that the master must NACK the last byte to inform \nthe slave that no additional bytes will be read.Reading Multiple Bytes from a Slave: The read opera -\ntion can be used to read multiple bytes with a single \ntransfer. When reading bytes from the slave, the master \nsimply ACKs the data byte if it desires to read another \nbyte before terminating the transaction. After the master \nreads the last byte it must NACK to indicate the end of the \ntransfer and generates a STOP condition.\nRegister Memory Map\nADDRESS READ/WRITE NAMELOADED FROM\nEEPROM AT POR?FACTORY \nDEFAULTFUNCTION\n00h Read/Write CR1 Yes 01h Control Register 1\n01h Read/Write CR2 Yes 10h Control Register 2\n02h Read/Write CR3 Yes 03h Control Register 3\n03h Read/Write FFDC Yes FFh Fan Fault Duty Cycle\n04h Read/Write MASK Yes C0h Alert Mask Register\n05h Read/Write IFR Yes 18h Ideality Factor Register\n06h Read/Write RHSH Yes 55h Remote High Set-point MSB\n07h Read/Write RHSL Yes 00h Remote High Set-point LSB\n08h Read/Write LOTSH Yes 55h Local Overtemperature Set-point MSB\n09h Read/Write LOTSL Yes 00h Local Overtemperature Set-point LSB\n0Ah Read/Write ROTSH Yes 6Eh Remote Overtemperature Set-point MSB\n0Bh Read/Write ROTSL Yes 00h Remote Overtemperature Set-point LSB\n0Ch Read/Write LHSH Yes 46h Local High Set-point MSB\n0Dh Read/Write LHSL Yes 00h Local High Set-point LSB\n0Eh Read/Write TCTH Yes FFh TACH Count Threshold Register, MSB\n0Fh Read/Write TCTL Yes FEh TACH Count Threshold Register, LSB\n10h–17h Read/Write USER Yes 00h 8 Bytes of General-Purpose User Memory\n20h–4Fh Read/Write LUT Yes FFh 48-Byte Lookup Table (LUT)\n50h Read/Write PWMR No 00h Direct Duty-Cycle Control Register\n51h Read Only PWMV No 00h Current PWM Duty-Cycle Register\n52h Read Only TC1H No 00h TACH1 Count Register, MSB\n53h Read Only TC1L No 00h TACH1 Count Register, LSB\n54h Read Only TC2H No 00h TACH2 Count Register, MSB\n55h Read Only TC2L No 00h TACH2 Count Register, LSB\n56h Read Only RTH No 00h Remote Temperature Reading Register, MSB\n57h Read Only RTL No 00h Remote Temperature Reading Register, LSB\n58h Read Only LTH No 00h Local Temperature Reading Register, MSB\n59h Read Only LTL No 00h Local Temperature Reading Register, LSB\n5Ah Read Only SR No 00h Status Register\n5Bh Write Only EEX No 00hLoad EEPROM to RAM; Write RAM to \nEEPROM\nwww.analog.com\n Analog Devices  │ 20\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 00h: Control Register 1 (CR1)\nFactory Default Value: 01h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n00h ALTMSK POR HYST DRV DRV PPS MTI TIS\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 ALTMSKAlert Mask\n0 = Temperature alerts are enabled. \n1 =Temperature alerts are masked.\n6 PORSoftware POR. Returns the MAX31760 to POR conditions. Loads EEPROM data into \nEEPROM-backed registers, returns all other registers to their default states. When set to 1, \nall other bits are ignored. Self-clears to 0.\n5 HYSTLookup Table Hysteresis\n0 = 2°C  (default)\n1 = 4 °C\n4:3 DRVPWM Frequency\n00 = 33Hz\n01 = 150Hz \n10 = 1500Hz \n11 = 25kHz \nDefault is 00.\n2 PPSPWM Polarity\n0 = Positive (100% setting is high) (default)\n1 = Negative (100% setting is low)\n1 MTIMaximum Temperature as Index\n0 = The temperature index is determined by TIS (CR1.0) (default).\n1 = The temperature index is the greater of the local and remote temperatures.\n0 TISTemperature Index Source\n0 = Local temperature is used as the index to the LUT.\n1 = Remote temperature is used as the index to the LUT (default).\nwww.analog.com\n Analog Devices  │ 21\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 01h: Control Register 2 (CR2)\nFactory Default Value: 10h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n01h STBY ALERTS SPEN FF Mode FS Enable RDPS FSST DFC\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 STBYStandby Mode Enable\n0 = Normal operating mode (default).\n1 = Standby mode.\n6 ALERTSALERT  Functionality Selection\n0 = ALERT  function as an interrupt (default).\n1 = ALERT  functions as a “comparator mode” fault indicator.\n5 SPENSpin-Up Enable\n0 = No spin-up when the fan starts up (default).\n1 = Spin-up enabled. The PWM duty cycle is 100% until the end criterion is met (default).\n4 FF ModeFF Functionality Selection\n0 = FF/FS  output functions as an interrupt.\n1 = FF/FS  output functions as a “comparator mode” fault indicator (default).\n3 FS EnableFS Input Enable\n0 = Externally driving FF/FS  has no effect on duty cycle. (default).\n1 = Externally driving FF/FS  low forces 100% duty cycle.\n2 RDPSRotation-Detection (RD) Signal-Polarity Selection. This bit becomes irrelevant when the  \nFSST = 0.\n0 = RD is at low level when the fan is running (default).\n1 = RD is at high level when the fan is running.\n1 FSSTFan-Sense Signal Type\n0 = Fan tachometer provides square-wave pulses (default).\n1 = Fan provides rotation detection (RD) signal.\n0 DFCDirect Fan Control (Manual Mode)\n0 = Direct fan control disabled (default).\n1 = Direct fan control enabled.\nwww.analog.com\n Analog Devices  │ 22\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 02h: Control Register 3 (CR3)\nFactory Default Value: 03h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n02h CLR_FAIL FF_0 RAMP1 RAMP0 TACHFULL PSEN TACH2E TACH1E\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 CLR_FAILClear Fan Fail Status Bits \n0 = Default; \n1 = Clears any fan fail status bits to 0. Bits will be set again if failure is subsequently detected.  \nClears FF/FS  output if FF interrupt mode is selected. This bit self-clears to 0.\n6 FF_00 Duty-Cycle Fan-Fail Detection \n0 = Fan-fail detection disabled when duty cycle = 0 or when ramping toward 0 (default value). \n1 = Fan-fail detection enabled for all duty-cycle values.\n5:4 RAMP[1:0]PWM Duty-Cycle Ramp Rate\nRAMP1 RAMP0PWM ADJUST RAMP RATE \nSELECTPWM DUTY-CYCLE CHANGE \nPER SECOND (%)\n0 0 Slow (default) 3.125 (default)\n0 1 Slow-Medium 6.25\n1 0 Medium-Fast 12.5\n1 1 Fast Immediate\n3 TACHFULL 1 = Detect fan failure only when duty cycle =100%.\n2 PSENPulse Stretch Enable. Applies only for 33Hz PWM.\n0 = Pulse stretch function is disabled (default).\n1 = Pulse stretch function is enabled.\n1 TACH2ETACH2 Enable\n0 = TACH2 monitoring function is disabled. Clears TACH2 fan fail status bit and FF/FS  output.\n1 = TACH2 monitoring function is enabled (default).\n0 TACH1ETACH1 Enable\n0 = TACH1 monitoring function is disabled. Clears TACH1 fan fail status bit and FF/FS  output.\n1 = TACH1 monitoring function is enabled (default).\nwww.analog.com\n Analog Devices  │ 23\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 03h: Fan Fault Duty Cycle (FFDC)\nFactory Default Value: FFh\nMemory Type:\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n03h FFDC 7 FFDC 6 FFDC 5 FFDC 4 FFDC 3 FFDC 2 FFDC 1 FFDC 0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 FFDC 7\nFFDC [7:0] select the PWM duty cycle after a fan failure is detected per Table 9 .6 FFDC 6\n5 FFDC 5\n4 FFDC 4\n3 FFDC 3\n2 FFDC 2\n1 FFDC 1\n0 FFDC 0\nwww.analog.com\n Analog Devices  │ 24\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 04h: Alert Mask Register (MASK)\nRegister 05h: Ideality Factor Register (IFR)Factory Default Value: C0h\nMemory Type: EEPROM, Nonvolatile\nMemory Access N/A N/A R/W R/W R/W R/W R/W R/W\n04h Reserved Reserved LHAM LOTAM RHAM ROTAM TACH2AM TACH1AM\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7:6 Reserved These bits should be set to 1.\n5 LHAMLocal Temperature High Alarm Mask\n0 = Local temperature high alarm causes ALERT  to assert (default).\n1 = Local temperature high alarm does not cause ALERT  to assert.\n4 LOTAMLocal Overtemperature Alarm Mask\n0 = Local overtemperature alarm causes SHDN  to assert (default).\n1 = Local overtemperature alarm does not cause SHDN  to assert.\n3 RHAMRemote High-Temperature Alarm Mask\n0 = Remote temperature high alarm causes ALERT  to assert (default).\n1 = Remote temperature high alarm does not cause ALERT  to assert.\n2 ROTAMRemote Overtemperature Alarm Mask:\n0 = Remote overtemperature alarm causes SHDN  to assert (default).\n1 = Remote overtemperature alarm does not cause SHDN  to assert.\n1 TACH2AMTACH2 Alarm Mask\n0 = TACH2A alarm event causes FF/FS  to assert (default).\n1 = TACH2A alarm event does not cause FF/FS  to assert. \n0 TACH1AMTACH1 Alarm Mask\n0 = TACH1A alarm event causes FF/FS  to assert (default).\n1 = TACH1A alarm event does not cause FF/FS  to assert. \nFactory Default Value: 18h\nMemory Type: EEPROM, Nonvolatile\nMemory Access N/A N/A R/W R/W R/W R/W R/W R/W\n05h Reserved Reserved IF5 IF4 IF3 IF2 IF1 IF0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7:6 Reserved These bits should be set to 0.\n5 IF5\nIF[5:0] determine the ideality factor used by the device. See Table 4  for details and settings. \nDefault setting is 18h, corresponding to an ideality factor of 1.0080.4 IF4\n3 IF3\n2 IF2\n1 IF1\n0 IF0\nwww.analog.com\n Analog Devices  │ 25\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 07h: Remote High Set-Point Register, LSB (RHSL)Register 06h: Remote High Set-Point Register, MSB (RHSH)\nRegister 09h: Local Overtemperature Set-Point Register, LSB (LOTSL)Register 08h: Local Overtemperature Set-Point Register, MSB (LOTSH)Factory Default Value: 00h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n07h RHS7 RHS6 RHS5 RHS4 RHS3 RHS2 RHS1 RHS0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 55h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n06h RHS15 RHS14 RHS13 RHS12 RHS11 RHS10 RHS9 RHS8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0\nFactory Default Value: 00h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n09h LOTS7 LOTS6 LOTS5 LOTS4 LOTS3 LOTS2 LOTS1 LOTS0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 55h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n08h LOTS15 LOTS14 LOTS13 LOTS12 LOTS11 LOTS10 LOTS9 LOTS8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0\nwww.analog.com\n Analog Devices  │ 26\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 0Bh: Remote Overtemperature Set-Point Register, LSB (ROTSL)Register 0Ah: Remote Overtemperature Set-Point Register, MSB (ROTSH)\nRegister 0Dh: Local High Set-Point Register, LSB (LHSL)Register 0Ch: Local High Set-Point Register, MSB (LHSH)Factory Default Value: 00h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Bh ROTS7 ROTS6 ROTS5 ROTS4 ROTS3 ROTS2 ROTS1 ROTS0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 6Eh\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Ah ROTS15 ROTS14 ROTS13 ROTS12 ROTS11 ROTS10 ROTS9 ROTS8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0\nFactory Default Value: 00h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Dh LHS7 LHS6 LHS5 LHS4 LHS3 LHS2 LHS1 LHS0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 46h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Ch LHS15 LHS14 LHS13 LHS12 LHS11 LHS10 LHS9 LHS8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0\nwww.analog.com\n Analog Devices  │ 27\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 0Fh: TACH Count Threshold Register, LSB (TCTL)Register 0Eh: TACH Count Threshold Register, MSB (TCTH)\nFactory Default Value: FEh\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Fh TCT_7 TCT_6 TCT_5 TCT_4 TCT_3 TCT_2 TCT_1 TCT_0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TCT_7\nTCT_[7:0] are the lower 8 bits of for the TACH pulse counting threshold in unsigned format.6 TCT_6\n5 TCT_5\n4 TCT_4\n3 TCT_3\n2 TCT_2\n1 TCT_1\n0 TCT_0Factory Default Value: FFh\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n0Eh TCT_15 TCT_14 TCT_13 TCT_12 TCT_11 TCT_10 TCT_9 TCT_8\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TCT_15\nTCT_[15:8] are the upper 8 bits of for the TACH pulse counting threshold in unsigned format.\nFan_RPM Threshold = 60 x 100,000/(TCTH_Value x 256 + TCTL_Value)/n\nwhere n is the number of pulses generated by the tachometer per revolution.6 TCT_14\n5 TCT_13\n4 TCT_12\n3 TCT_11\n2 TCT_10\n1 TCT_9\n0 TCT_8\nwww.analog.com\n Analog Devices  │ 28\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegisters 10h–17h: General-Purpose User EEPROM (USER)\nRegisters 20h–4Fh: 48-Byte Lookup Table (LUT)\nRegister 50h: Direct Duty-Cycle Control Register (PWMR)Factory Default Value: 00h\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n10h–17h\nBIT 7 BIT 0\nFactory Default Value: FFh\nMemory Type: EEPROM, Nonvolatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n20h–4Fh See Table 7\nBIT 7 BIT 0\nDefault Value: FFh\nMemory Type: SRAM, Volatile\nMemory Access R/W R/W R/W R/W R/W R/W R/W R/W\n50h PWMR7 PWMR6 PWMR5 PWMR4 PWMR3 PWMR2 PWMR1 PWMR 0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 PWMR7\nPWMR[7:0] determine the PWM duty cycle per Table 9  in direct control mode (DFC bit (CR2.0) \n= 1)6 PWMR6\n5 PWMR5\n4 PWMR4\n3 PWMR3\n2 PWMR2\n1 PWMR1\n0 PWMR0\nwww.analog.com\n Analog Devices  │ 29\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 51h: Current PWM Duty-Cycle Register (PWMV)\nRegister 52h: TACH1 Count Register, MSB (TC1H)Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n51h PWMV7 PWMV6 PWMV5 PWMV4 PWMV3 PWMV2 PWMV1 PWMV 0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 PWMV7\nPWMV[7:0] store the current PWM duty cycle at all times, including during fan failure.6 PWMV6\n5 PWMV5\n4 PWMV4\n3 PWMV3\n2 PWMV2\n1 PWMV1\n0 PWMV0\nDefault Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n52h TC1_15 TC1_14 TC1_13 TC1_12 TC1_11 TC1_10 TC1_9 TC1_8\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TC1_15\nTC1_[15:8] are the higher 8 bits for the TACH1 pulse counting in unsigned format.\nFan_RPM = 60 x 100,000/(TC1H_Value x 256 + TC1L_Value)/n\nwhere n is the number of pulses generated by the tachometer per revolution.6 TC1_14\n5 TC1_13\n4 TC1_12\n3 TC1_11\n2 TC1_10\n1 TC1_9\n0 TC1_8\nwww.analog.com\n Analog Devices  │ 30\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 53h: TACH1 Count Register, LSB (TC1L)\nRegister 54h: TACH2 Count Register, MSB (TC2H)Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n53h TC1_7 TC1_6 TC1_5 TC1_4 TC1_3 TC1_2 TC1_1 TC1_0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TC1_7\nTC1_[7:0] are the lower 8 bits for the TACH1 pulse counting in unsigned format.6 TC1_6\n5 TC1_5\n4 TC1_4\n3 TC1_3\n2 TC1_2\n1 TC1_1\n0 TC1_0\nDefault Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n54h TC2_15 TC2_14 TC2_13 TC2_12 TC2_11 TC2_10 TC2_9 TC2_8\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TC2_15\nTC2_[15:8] are the higher 8 bits for the TACH2 pulse counting in unsigned format.\nFan_RPM = 60 x 100,000/(TC12H_Value x 256 + TC2L_Value)/n\nwhere n is the number of pulses generated by the tachometer per revolution.6 TC2_14\n5 TC2_13\n4 TC2_12\n3 TC2_11\n2 TC2_10\n1 TC2_9\n0 TC2_8\nwww.analog.com\n Analog Devices  │ 31\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 57h: Remote Temperature Reading Register, LSB (RTL)Register 56h: Remote Temperature Reading Register, MSB (RTH)Register 55h: TACH2 Count Register, LSB (TC2L)\nFactory Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n57h RT7 RT6 RT5 RT4 RT3 RT2 RT1 RT0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n56h RT15 RT14 RT13 RT12 RT11 RT10 RT9 RT8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n55h TC2_7 TC2_6 TC2_5 TC2_4 TC2_3 TC2_2 TC2_1 TC2_0\nBIT 7 BIT 0\nBIT NAME DESCRIPTION\n7 TC2_7\nTC2_[7:0] are the lower 8 bits for the TACH2 pulse counting in unsigned format.6 TC2_6\n5 TC2_5\n4 TC2_4\n3 TC2_3\n2 TC2_2\n1 TC2_1\n0 TC2_0\nwww.analog.com\n Analog Devices  │ 32\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 59h: Local Temperature Reading Register, LSB (LTL)Register 58h: Local Temperature Reading Register, MSB (LTH)\nFactory Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n59h LT7 LT6 LT5 LT4 LT3 LT2 LT1 LT0\n°C 2-1 2-2 2-3 0 0 0 0 0\nBIT 7 BIT 0Factory Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n58h LT15 LT14 LT13 LT12 LT11 LT10 LT9 LT8\n°C Sign 26 25 24 23 22 21 20\nBIT 7 BIT 0\nRegister 5Ah: Status Register (SR)\nDefault Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R R R R R R R R\n5Ah PC bit RDFA LHA LOTA RHA ROTA TACH2A TACH1A\nBIT 7 BIT 0\nNote:  Alarm bits in the SR register are cleared upon reading. If a fault is detected again after clearing, it is set again.\nBIT NAME DESCRIPTION\n7 PC bitProgram Corrupt Bit\n0 = No EEPROM data corruption detected.\n1=  An error has occurred during EEPROM programming. A successful write to EEPROM \nmust occur followed by a POR or soft-POR before this bit will reset to 0 .\n6 RDFARemote Diode Fault Alarm\n0 = Remote diode functions properly (default).\n1 = Remote diode open-circuit or short-circuit fault detected. This fault does not trigger the \nALERT  output.\n5 LHALocal High Temperature Alarm\n0 = The temperature of the IC die is at or lower than the local high set point (default).\n1 = The temperature of the IC die is higher than the local high set point.\n4 LOTALocal Overtemperature Alarm\n0 = The local temperature is at or lower than the local overtemperature set point (default).\n1 = The local temperature is higher than the local overtemperature set point.\nwww.analog.com\n Analog Devices  │ 33\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRegister 5Bh: EEPROM LOAD/WRITE Register (EEX)Register 5Ah: Status Register (SR) (continued)\nFactory Default Value: 00h\nMemory Type: SRAM, Volatile\nMemory Access R/W N/A N/A R/W R/W R/W R/W R/W\n5Bh L/W Reserved Reserved 40h–4Fh 30h–3Fh 20h–2Fh 10h–1Fh 00h–0Fh\nBIT 7 Clears to 00h when read. BIT 0\nBIT NAME DESCRIPTION\n7 L/W0 = Write RAM to EEPROM\n1 =  Load EEPROM to RAM\n6 Reserved Reserved\n5 Reserved Reserved\n4 40h–4Fh 1 = Bytes 40h through 4Fh\n3 30h–3Fh 1 = Bytes 30h through 3Fh\n2 20h–2Fh 1 = Bytes 20h through 2Fh\n1 10h–1Fh 1 = Bytes 10h through 1Fh\n0 00h–0Fh 1 = Bytes 00h through 0FhBIT NAME DESCRIPTION\n3 RHARemote Temperature High Alarm\n0 = The temperature of the remote diode is at or lower than the remote high set point (default).\n1 = The temperature of the remote diode is higher than the remote high set point.\n2 ROTARemote Overtemperature Alarm\n0 = The temperature of the remote diode is at or lower than the overtemperature set point \n(default).\n1 = The temperature of the remote diode is higher than the overtemperature set point.\n1 TACH2ATACH2 Alarm\n0 = The fan sensed by TACH2 is running properly (default).\nIf tachometer pulses are provided to TACH2, this means the TACH2 count is lower than or \nequal to the value in TACH Count Threshold registers (the fan is running at an RPM higher \nthan the minimum acceptable value).\nIf RD signal is provided to TACH2, this means the fan is running.\n1 = The fan sensed by TACH2 is not running properly. This happens when the fan is running \nat an RPM lower than the minimum acceptable value, or the fan is not rotating at all, or an \noverflow occurred during counting.\n0 TACH1ATACH1 Alarm\n0 = The fan sensed by TACH1 is running properly.\nIf tachometer pulses are provided to TACH1, this means the TACH1 count is lower than or \nequal to the value in TACH Count Threshold registers (the fan is running at an RPM higher \nthan the minimum acceptable value).\nIf RD signal is provided to TACH1, this means the fan is running.\n1 = The fan sensed by TACH1 is not running properly. This happens when the fan is running \nat an RPM lower than the minimum acceptable value, or the fan is not rotating at all, or an \noverflow occurred during counting.\nwww.analog.com\n Analog Devices  │ 34\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nApplications Information\nADC Noise Filtering\nThe integrating ADC has inherently good noise rejection, \nespecially of low-frequency signals such as 60Hz/120Hz \npower-supply hum. However, micropower operation plac -\nes constraints on high-frequency noise rejection. Lay \nout the PCB carefully with proper external noise filtering \nfor high-accuracy remote measurements in electrically \nnoisy environments. Filter high-frequency electromag -\nnetic interference (EMI) at the DXP pin with an external \n2200pF capacitor connected between DXP and DXN. A \ncapacitance higher than 2200pF introduces errors due to \nthe rise time of the switched-current source.\nPower-Supply Decoupling \nTo achieve the best results when using the device, decou -\nple the V DD power supply with a 0.1μF capacitor. Use a \nhigh-quality, ceramic, surface-mount capacitor if possible. \nSurface-mount components minimize lead inductance, \nwhich improves performance, and ceramic capacitors \ntend to have adequate high-frequency response for \ndecoupling applications.\nTwisted Pairs and Shielded Cables\nFor remote-sensor distances longer than 8in, or in partic -\nularly noisy environments, a twisted pair is recommended. \nIts practical length is 6ft to 12ft (typ) before noise becomes \na problem, as tested in a noisy electronics laboratory.  \nFor longer distances, the best solution is a shielded \ntwisted pair like that used for audio microphones. For \nexample, Belden 8451 works well for distances up to \n100ft in a noisy environment. Connect the twisted pair to \nDXP and DXN and the shield to ground, and leave the \nshield’s remote end unterminated. Excess capacitance \nat DXP limits practical remote-sensor distances. For very \nlong cable runs, the cable’s parasitic capacitance often \nprovides noise filtering, so the recommended 2200pF \ncapacitor can often be removed or reduced in value. \nCable resistance also affects remote-sensor accuracy. A \n1Ω series resistance introduces about +1/2°C error.PCB Layout Checklist\n1) When possible, place the device as close as possible \nto the remote diode. In a noisy environment, such as a \ncomputer motherboard, this distance can be 4in to 8in \nor more, as long as the worst noise sources (such as \nCRTs, clock generators, memory buses, and ISA/PCI \nbuses) are avoided.\n2) Do not route the DXP lines next to the deflection coils \nof a CRT. Also, do not route the traces across a fast \nmemory bus, which can easily introduce +30°C error, \neven with good filtering. Otherwise, most noise sources \nare fairly benign.\n3) Route the DXP and DXN traces parallel and close to each \nother, away from any high-voltage traces such as +12V \nDC. Avoid leakage currents from PCB contamination.\n4) Route as few vias and crossunders as possible to \nminimize copper/solder thermocouple effects.\n5) When connecting a thermocouple, make sure that \nboth the DXP and the DXN paths have matching \nthermocouples leads. In general, PCB-induced ther -\nmocouples are not a serious problem. A copper solder \nthermocouple exhibits 3µV/°C, and it takes approxi -\nmately 200µV of voltage error at DXP/GND to cause \na +1°C measurement error, so most parasitic thermo -\ncouple errors are swamped out.\n6) Use wide traces. Narrow traces are more inductive and \ntend to pick up radiated noise. The 10-mil widths and \nspacings are recommended, but are not absolutely \nnecessary (as they offer only a minor improvement in \nleakage and noise), but use them where practical.\n7) Placing an electrically clean copper ground plane \nbetween the DXP and DXN traces and traces carrying \nhigh-frequency noise signals helps reduce EMI.\nwww.analog.com\n Analog Devices  │ 35\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\n+Denotes a lead(Pb)-free/RoHs-compliant package.PART TEMP RANGE PIN-PACKAGE\nMAX31760AEE+ -40°C to +125°C 16 QSOP \nMAX31760AEE+T -40°C to +125°C 16 QSOP Ordering Information\nPACKAGE \nTYPEPACKAGE \nCODEOUTLINE \nNO.LAND PAT -\nTERN NO.\n16 QSOP E16+1 21-0055 90-0167Package Information\nFor the latest package outline information and land patterns (foot -\nprints), go to www.maximintegrated.com/packages . Note that \na “+”, “#”, or “-” in the package code indicates RoHS status only. \nPackage drawings may show a different suffix character, but the \ndrawing pertains to the package regardless of RoHS status.\nwww.analog.com\n Analog Devices  │ 36\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nRevision History\nREVISION\nNUMBERREVISION\nDATEDESCRIPTIONPAGES\nCHANGED\n0 4/14 Initial release —\n1 12/19 Updated Typical Operating Characteristics 5\nMAX31760 Precision Fan-Speed Controller  \nwith Nonvolatile Lookup Table\nwww.analog.com Analog Devices  │ 37\nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no responsibility is \nassumed by Analog Devices for its use, nor for any infringements of patents or other rights of third parties that \nmay result from its use.Specifications subject to change without notice. No license is granted by implicationor \notherwise under any patent or patent rights of Analog Devices. Trademarks andregistered trademarks are the \nproperty of their respective owners.\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n\xa0 MAX31760AEE+T\xa0 MAX31760AEE+\n'}]
!==============================================================================!
### Component Summary: MAX31760AEE+

#### Key Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 3.0V to 3.6V
  - Absolute Maximum Ratings: VDD to GND: -0.3V to +6.0V
- **Current Ratings**: 
  - Supply Current (Normal Operation): 2.6 mA to 4 mA
  - Standby Current: 2 mA to 3 mA
  - Maximum Current for I2C Pins: 8 mA
  - DXP Current: 200 µA
- **Power Consumption**: 
  - Continuous Power Dissipation (T_A = +70°C): 771.5 mW (derating at 9.6 mW/°C above +70°C)
- **Operating Temperature Range**: 
  - -40°C to +125°C
- **Package Type**: 
  - 16-pin QSOP
- **Special Features**: 
  - Integrated temperature sensing with PWM fan control
  - Nonvolatile memory for operating settings
  - 48-step nonvolatile lookup table (LUT) for PWM duty cycle mapping
  - Programmable thermal diode ideality factor
  - Two tachometer inputs for independent fan speed measurement
  - ALERT pin for temperature fault indication
  - SHDN pin for system shutdown on overtemperature
- **Moisture Sensitive Level**: 
  - Level 1 (JEDEC J-STD-020E)

#### Description:
The **MAX31760AEE+** is a precision fan-speed controller that integrates temperature sensing with PWM (Pulse Width Modulation) fan control. It measures both local die temperature and the remote temperature of a diode-connected transistor, such as a thermal diode found in CPUs and GPUs. The device allows for programmable temperature thresholds and fan speed control based on a user-defined lookup table (LUT), enabling smooth transitions in fan speed to minimize noise.

#### Typical Applications:
- **Cooling Systems**: Used in servers, networking equipment, set-top boxes (STB), digital video recorders (DVR), and network-attached storage (NAS) systems.
- **Thermal Management**: Ideal for applications requiring precise temperature monitoring and fan control to prevent overheating.
- **Embedded Systems**: Suitable for integration into various electronic devices that require efficient thermal management solutions.

This component is particularly useful in environments where noise reduction is critical, as it allows for a nonlinear fan speed versus temperature transfer function, ensuring that fans operate quietly while maintaining optimal cooling performance.