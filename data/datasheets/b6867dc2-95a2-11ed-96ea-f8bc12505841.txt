[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADUC831BSZ production of ANALOG DEVICES from the text:REV. AADuC831\nFEATURES\nANALOG I/O\n8-Channel, 247 kSPS 12-Bit ADC\nDC Performance: /H115501 LSB INL\nAC Performance: 71 dB SNR\nDMA Controller for High Speed ADC-to-RAM Capture\n2 12-Bit (Monotonic) Voltage Output DACs\nDual Output PWM//H9018 -/H9004 DACs\nOn-Chip Temperature Sensor Function /H115503/H11543C\nOn-Chip Voltage Reference\nMemory\n62 kBytes On-Chip Flash/EE Program Memory\n4 kBytes On-Chip Flash/EE Data Memory\nFlash/EE, 100 Yr Retention, 100 kCycles Endurance2304 Bytes On-Chip Data RAM\n8051 Based Core\n8051 Compatible Instruction Set (16 MHz Max)12 Interrupt  Sources, 2 Priority Levels\nDual Data Pointer\nExtended 11-Bit Stack Pointer\nOn-Chip Peripherals\nTime Interval Counter (TIC)UART, I\n2C®,  and SPI® Serial I/O\nWatchdog Timer (WDT), Power Supply Monitor (PSM)\nPower\nSpecified for 3 V and 5 V OperationNormal, Idle, and Power-Down ModesPower-Down: 20 /H9262 A @ 3 V\nAPPLICATIONSOptical Networking—Laser Power ControlBase Station Systems\nPrecision Instrumentation, Smart Sensors\nTransient Capture SystemsDAS and Communications Systems\nPin compatible upgrade to existing ADuC812 systems\nthat require additional code or data memory. Runsfrom 1 MHz–16 MHz to external crystal.\nThe ADuC832 is also available. Functionally is the same\nas the ADuC831, except the ADuC832 runs from a 32 kHzexternal crystal with on-chip PLL.\nMicroConverter is a registered tr ademark and Qui ckStart is a trademark\nof Analog Devices, Inc.\nSPI is a registered trademark of Motorola, Inc.I\n2C is a registered trademark of Philips Corporation.GENERAL DESCRIPTION\nThe ADuC831 is a fully integrated 247 kSPS data acquisition\nsystem incorporating a high performance self-calibrating multi-channel 12-bit ADC, dual 12-bit DACs, and programmable\n8-bit MCU on a single chip.\nThe microcontroller core is an 8052, and therefore 8051-\ninstruction-set compatible with 12 core clock periods per machine\ncycle. 62 kBytes of nonvolatile Flash/EE program memory areprovided on-chip. Four kBytes of nonvolatile Flash/EE data\nmemory, 256 bytes RAM and 2 kBytes of extended RAM are\nalso integrated on-chip.\nThe ADuC831 also incorporates additional analog functionality\nwith two 12-bit DACs, power supply monitor, and a band gapreference. On-chip digital peripherals include two 16-bit Σ-∆\nDACs, dual output 16-bit PWM, watchdog timer, time intervalcounter, three timers/counters, Timer 3 for baud rate generationand serial I/O ports (I\n2C, SPI and UART).\nOn-chip factory firmware supports in-circuit serial download anddebug modes (via UART), as well as single-pin emulation mode\nvia the EA pin. The ADuC831 is supported by QuickStart™ and\nQuickStart Plus development systems featuring low cost softwareand hardware development tools. A functional block diagram of\nthe ADuC831 is shown above with a more detailed block diagram\nshown in Figure 1.\nThe part is specified for 3 V and 5 V operation over the extended\nindustrial temperature range, and is available in a 52-lead plasticquad flatpack package and in a 56-lead chip scale package.FUNCTIONAL BLOCK DIAGRAM\n62 kBYTES FLASH/EE PROGRAM MEMORY\n4 kBYTES FLASH/EE DATA MEMORY\n2304 BYTES USER RAM\n3 /H11547 16 BIT TIMERS\n1 /H11547 REAL TIME CLOCK\nPARALLEL\nPORTS8051-BASED MCU WITH ADDITIONAL\nPERIPHERALSADuC831\nXTAL2 XTAL1TEMP\nSENSOR\nVREFINTERNAL\nBAND GAP\nVREFADC0\nADC1\nADC5\nADC6\nADC7\nOSC12-BIT\nDACDAC\nPWM0T/H\nMUX12-BIT ADC\nHARDWARE\nCALIBRATONBUF\nDAC BUF\nPWM112-BIT\nDAC\n16-BIT\n/H9018-/H9004 DAC\n16-BIT\n/H9018-/H9004 DAC\n16-BIT\nPWM\n16-BIT\nPWM\nPOWER SUPPLY MON\nWATCHDOG TIMER\nUART, I2C, AND SPI\nSERIAL I/OMUXMicroConverter®, 12-Bit ADCs and DACs\nwith Embedded 62 kBytes Flash MCU\nRev. A  Document Feedback  \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change without notice. No license is granted by implication or otherwise under any patent or patent rights of Analog Devices. \nTrademarks and registered trademarks are the property of their respective owners.  One Technology Way, P.O. Box 9106,  Norwood, MA 02062- 9106, U.S.A.  \nTel: 781.329.4700  © 2002 –2016  Analog Devices, Inc. All rights reserved.  \nTechnical Support  www.analog.com   \n–2–ADuC831\nTABLE OF CONTENTS\nFEATURES  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\nGENERAL DESCRIPTION  . . . . . . . . . . . . . . . . . . . . . 1\nSPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\nABSOLUTE MAXIMUM RATINGS  . . . . . . . . . . . . . . . 7\nORDERING GUIDE  . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\nPIN CONFIGURATION  . . . . . . . . . . . . . . . . . . . . . . . . 8\nPIN FUNCTION DESCRIPTIONS  . . . . . . . . . . . . . . . . 9\nTERMINOLOGY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\nTYPICAL PERFORMANCE CHARACTERISTICS  . . 11\nMEMORY ORGANIZATION  . . . . . . . . . . . . . . . . . . . 14\nOVERVIEW OF MCU-RELATED SFRS  . . . . . . . . . . 15\nAccumulator SFR (ACC) . . . . . . . . . . . . . . . . . . . . . . . . . 15\nB SFR (B)  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\nStack Pointer SFR (SP AND SPH)  . . . . . . . . . . . . . . . . . 15\nData Pointer (DPTR)  . . . . . . . . . . . . . . . . . . . . . . . . . . . 16\nProgram Status Word SFR (PSW)  . . . . . . . . . . . . . . . . . . 16\nPower Control SFR (PCON)  . . . . . . . . . . . . . . . . . . . . . . 16\nSPECIAL FUNCTION REGISTERS  . . . . . . . . . . . . . . 17\nADC CIRCUIT INFORMATION  . . . . . . . . . . . . . . . . 18\nGeneral Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18ADC Transfer Function  . . . . . . . . . . . . . . . . . . . . . . . . . . 18Typical Operation  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18ADCCON1 – (ADC Control SFR #1)  . . . . . . . . . . . . . . 19\nADCCON2 – (ADC Control SFR #2)  . . . . . . . . . . . . . . 20\nADCCON3 – (ADC Control SFR #3)  . . . . . . . . . . . . . . 21Driving the A/D Converter . . . . . . . . . . . . . . . . . . . . . . . . 22\nVoltage Reference Connections  . . . . . . . . . . . . . . . . . . . . 23\nConfiguring the ADC . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24ADC DMA Mode  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24\nMicro Operation during ADC DMA Mode  . . . . . . . . . . . 25\nADC Offset and Gain Calibration Coefficients  . . . . . . . . 25\nCalibrating the ADC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\nNONVOLATILE FLASH MEMORY  . . . . . . . . . . . . . . 27\nFlash Memory Overview  . . . . . . . . . . . . . . . . . . . . . . . . . 27Flash/EE Memory and the ADuC831  . . . . . . . . . . . . . . . 27\nADuC831 Flash/EE Memory Reliability  . . . . . . . . . . . . . 27\nUsing the Flash/EE Program Memory  . . . . . . . . . . . . . . . 28\nULOAD Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28Flash/EE Program Memory Security  . . . . . . . . . . . . . . . . 28\nUsing the Flash/EE Data Memory  . . . . . . . . . . . . . . . . . . 29ECON—Flash/EE Memory Control SFR  . . . . . . . . . . . . 29\nFlash/EE Memory Timing  . . . . . . . . . . . . . . . . . . . . . . . . 30\nADuC831 CONFIGURATION REGISTER (CFG831)  . . 31\nUSER INTERFACE TO OTHER ON-CHIP\nADuC831 PERIPHERALS  . . . . . . . . . . . . . . . . . . . . . 32\nUsing the DAC  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\nPulsewidth Modulator (PWM) . . . . . . . . . . . . . . . . . . . . . 35\nSerial Peripheral Interface  . . . . . . . . . . . . . . . . . . . . . . . . 38I\n2C Compatible Interface  . . . . . . . . . . . . . . . . . . . . . . . . . 40\nDual Data Pointer  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42Power Supply Monitor  . . . . . . . . . . . . . . . . . . . . . . . . . . . 43Watchdog Timer  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44\nTimer Interval Counter  . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n8052 COMPATIBLE ON-CHIP PERIPHERALS  . . . . 47\nParallel I/O Ports 0–3  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47Timers/Counters  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50\nUART Serial Interface  . . . . . . . . . . . . . . . . . . . . . . . . . . . 55UART Serial Port Control Register  . . . . . . . . . . . . . . . . . 55\nUART Operating Modes  . . . . . . . . . . . . . . . . . . . . . . . . . 56\nUART Serial Port Baud Rate Generation  . . . . . . . . . . . . 56Timer 1 Generated Baud Rates  . . . . . . . . . . . . . . . . . . . . 57\nTimer 2 Generated Baud Rates  . . . . . . . . . . . . . . . . . . . . 57\nTimer 3 Generated Baud Rates  . . . . . . . . . . . . . . . . . . . . 58Interrupt System  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\nADuC831 HARDWARE DESIGN CONSIDERATIONS  60\nClock Oscillator  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60External Memory Interface  . . . . . . . . . . . . . . . . . . . . . . . 60Power Supplies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61\nPower Consumption  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62\nPower Saving Modes  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62Power-On Reset  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62\nGrounding and Board Layout Recommendations  . . . . . . 63\nOTHER HARDWARE CONSIDERATIONS . . . . . . . . 63\nIn-Circuit Serial Download Access  . . . . . . . . . . . . . . . . . 63Embedded Serial Port Debugger  . . . . . . . . . . . . . . . . . . . 64\nSingle-Pin Emulation Mode  . . . . . . . . . . . . . . . . . . . . . . . 64Typical System Configuration  . . . . . . . . . . . . . . . . . . . . . 64\nDEVELOPMENT TOOLS . . . . . . . . . . . . . . . . . . . . . . 65\nTIMING SPECIFICATIONS  . . . . . . . . . . . . . . . . . . . . 66\nOUTLINE DIMENSIONS  . . . . . . . . . . . . . . . . . . . . . . 76\nREV.  A\n–3–Parameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nADC CHANNEL SPECIFICATIONS\nDC ACCURACY2, 3fSAMPLE  = 147 kHz, see Page 11 for\nTypical Performance at other f SAMPLE\nResolution 12 12 Bits\nIntegral Nonlinearity ±1 ±1L SB max 2.5 V Internal Reference\n±0.3 ±0.3 LSB typ\nDifferential Nonlinearity ±0.9 ±0.9 LSB max 2.5 V Internal Reference\n±0.25 ±0.25 LSB typ\nIntegral Nonlinearity4±1.5 ±1.5 LSB max 1 V External Reference\nDifferential Nonlinearity4+1.5/-0.9 +1.5/–0.9 LSB max 1 V External Reference\nCode Distribution 1 1 LSB typ ADC Input is a DC Voltage\nCALIBRATED ENDPOINT ERRORS5, 6\nOffset Error ±4 ±4L S B  m a x\nOffset Error Match ±1 ±1L S B  typ\nGain Error ±2 ±3L S B  m a x\nGain Error Match –85 –85 dB typ\nDYNAMIC PERFORMANCE fIN = 10 kHz Sine Wave\nfSAMPLE  = 147 kHz\nSignal-to-Noise Ratio (SNR)771 71 dB typ\nTotal Harmonic Distortion (THD) –85 –85 dB typ\nPeak Harmonic or Spurious Noise –85 –85 dB typ\nChannel-to-Channel Crosstalk8–80 –80 dB typ\nANALOG INPUT\nInput Voltage Ranges 0 to V REF 0 to V REF V\nLeakage Current ±1 ±1 µA max\nInput Capacitance 32 32 pF typ\nTEMPERATURE SENSOR9\nVoltage Output at 25 °C 650 650 mV typ\nVoltage TC –2.0 –2.0 mV/ °C typ\nAccuracy ±3 ±3 °C typ Internal 2.5 V V REF\n±1.5 ±1.5 °C typ External 2.5 V V REF\nDAC CHANNEL SPECIFICATIONS DAC Load to AGND\nInternal Buffer Enabled RL = 10 k Ω,  CL = 100 pF\nDC ACCURACY10\nResolution 12 12 Bits\nRelative Accuracy ±3 ±3L SB typ\nDifferential Nonlinearity11–1 –1 LSB max Guaranteed 12-bit Monotonic\n±1/2 ±1/2 LSB typ\nOffset Error ±50 ±50 mV max V REF Range\nGain Error ±1 ±1%  m a x A V DD Range\n±1 ±1%  typ V REF Range\nGain Error  Mismatch 0.5 0.5 % typ % of Full Scale on DAC1\nANALOG OUTPUTS\nVoltage Range_0 0 to V REF 0 to V REF V typ DAC V REF = 2.5 V\nVoltage Range_1 0 to V DD 0 to V DD V typ DAC V REF = V DD\nOutput Impedance 0.5 0.5 Ω  typ\nDAC AC CHARACTERISTICS\nVoltage Output Settling Time 15 15 µs typ Full-Scale Settling Time to\nwithin 1/2 LSB of Final Value\nDigital-to-Analog Glitch Energy 10 10 nV sec typ 1 LSB Change at Major Carry(AV DD = DV DD = 2.7 V to 3.3 V or 4.5 V to 5.5 V. V REF = 2.5 V Internal Reference, MCLKIN = 16 MHz,\nall specifications T A = T MIN to T MAX, unless otherwise noted.) SPECIFICATIONS1ADuC831\nREV. A\n–4–ADuC831\nParameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nDAC CHANNEL SPECIFICATIONS12, 13\nInternal Buffer Disabled\nDC ACCURACY10\nResolution 12 12 Bits\nRelative Accuracy ±3 ±3L SB typ\nDifferential Nonlinearity11–1 –1 LSB max Guaranteed 12-bit Monotonic\n±1/2 ±1/2 LSB typ\nOffset Error ±5 ±5 mV max V REF Range\nGain Error –0.3 –0.3 % typ V REF Range\nGain Error Mismatch40.5 0.5 % max % of Full-Scale on DAC1\nANALOG OUTPUTS\nVoltage Range_0 0 to V REF 0 to V REF V typ DAC V REF = 2.5 V\nREFERENCE INPUT/OUTPUT\nREFERENCE OUTPUT14\nOutput Voltage (V REF) 2.5 2.5 V\nAccuracy ±2.5 ±2.5 % max Of V REF Measured at the C REF Pin\nPower Supply Rejection 47 57 dB typ\nReference Temperature Coefficient ±100 ±100 ppm/ ∞C typ\nInternal V REF Power-On Time 80 80 ms typ\nEXTERNAL REFERENCE INPUT15\nVoltage Range (V REF)40.1 0.1 V min VREF and C REF Pins Shorted\nVDD VDD V max\nInput Impedance 20 20 k W typ\nInput Leakage 1 1 mA max Internal Band Gap Deselected via\nADCCON1.6\nPOWER SUPPLY MONITOR (PSM)\nDV DD Trip Point Selection Range 2.63 V min Four Trip Points Selectable in\n4.37 V max This Range Programmed via\nTPD1–0 in PSMCON\nDV DD Power Supply Trip Point Accuracy ±3.5 % max\nWATCHDOG TIMER (WDT)4\nTime-out Period 0 0 ms min Nine Time-out Periods\n2000 2000 ms max Selectable in This Range\nFLASH/EE MEMORY RELIABILITYCHARACTERISTICS\n16\nEndurance17100,000 100,000 Cycles min\nData Retention18100 100 Years min\nDIGITAL INPUTS\nInput High Voltage (V INH)42.4 2 V min\nInput Low Voltage (V INL)40.8 0.4 V max\nInput Leakage Current (Port 0, EA) ±10 ±10 mA max V IN = 0 V or V DD\n±1 ±1 mA typ V IN = 0 V or V DD\nLogic 1 Input Current\n(All Digital Inputs) ±10 ±10 mA max V IN = V DD\n±1 ±1 mA typ V IN = V DD\nLogic 0 Input Current (Port 1, 2, 3) –75 –25 mA max\n–40 –15 mA typ VIL = 450 mV\nLogic 1-0 Transition Current (Port 2, 3) –660 –250 mA max V IL = 2 V\n–400 –140 mA typ V IL = 2 VSPECIFICATIONS  (continued)\nREV.  A\nADuC831\n–5–Parameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nSCLOCK and RESET Only4\n(Schmitt-Triggered Inputs)\nVT+ 1.3 0.95 V min\n3.0 2.5 V max\nVT– 0.8 0.4 V min\n1.4 1.1 V max\nVT+ – V T– 0.3 0.3 V min\n0.85 0.85 V max\nCRYSTAL OSCILLATOR\nLogic Inputs, XTAL1 Only\nVINL, Input Low Voltage 0.8 0.4 V typ\nVINH, Input High Voltage 3.5 2.5 V typ\nXTAL1 Input Capacitance 18 18 pF typ\nXTAL2 Output Capacitance 18 18 pF typ\nMCU CLOCK RATE 16 16 MHz max\nDIGITAL OUTPUTS\nOutput High Voltage (V OH) 2.4 V min V DD = 4.5 V to 5.5 V\n4.0 V typ I SOURCE  = 80 µA\n2.4 V min V DD = 2.7 V to 3.3 V\n2.6 V typ I SOURCE  = 20 µA\nOutput Low Voltage (V OL)\nALE, Ports 0 and  2 0.4 0.4 V max I SINK = 1.6 mA\n0.2 0.2 V typ I SINK = 1.6 mA\nPort 3 0.4 0.4 V max I SINK = 4 mA\nSCLOCK/SDATA 0.4 0.4 V max I SINK = 8 mA, I2C Enabled\nFloating State Leakage Current4±10 ±10 µA max\n±1 ±1 µA typ\nFloating State Output Capacitance 10 10 pF typ\nSTART UP TIME MCLKIN = 16 MHz\nAt Power-On 500 500 ms typ\nFrom Idle Mode 100 100 µs typ\nFrom Power-Down Mode\nWakeup with INT0  Interrupt 150 400 µs typ\nWakeup with SPI/I2C Interrupt 150 400 µs typ\nWakeup with External RESET 150 400 µs typ\nAfter External RESET in Normal Mode 30 30 ms typ\nAfter WDT Reset in Normal Mode 3 3 ms typ Controlled via WDCON SFR\nREV. A\n–6–ADuC831\nNOTES\n1Temperature Range –40ºC to +125ºC.\n2ADC linearity is guaranteed during normal Micro Converter core operation.\n3ADC LSB Size = V REF/212 i.e., for Internal V REF = 2.5 V, 1 LSB = 610 /H9262V and for External V REF =1 V, 1 LSB = 244 /H9262V.\n4These numbers are not production tested but are guaranteed by design and/or characterization data on production release.\n5Offset and Gain Error and Offset and Gain Error Match are measured after factory calibration.\n6Based on external ADC system components, the user may need to execute a system calibration to remove additional external channel errors and achieve\n these specifications.\n7SNR calculation includes distortion and noise components.\n8Channel-to-channel Crosstalk is measured on adjacent channels.\n9The Temperature Monitor will give a measure of the die temperature directly; air temperature can be inferred from this result.\n10DAC linearity is calculated using:\nReduced code range of 100 to 4095, 0 to V REF range.\nReduced code range of 100 to 3945, 0 to V DD range.\nDAC Output Load = 10 k Ω and 100 pF.\n11DAC differential nonlinearity specified on 0 to V REF  and 0 to V DD ranges\n12DAC specification for output impedance in the unbuffered case depends on DAC code.\n13DAC specifications for I SINK, voltage output settling time, and digital-to-analog glitch energy depend on external buffer implementation in unbuffered mode. DAC\n in unbuffered mode tested with OP270 external buffer, which has a low input leakage current.\n14Measured with V REF and C REF pins decoupled with 0.1 µF capacitors to ground. Power-up time for the internal reference will be determined by the value of the\n decoupling capacitor chosen for both the V REF and C REF pins.\n15When using an external reference device, the internal band gap reference input can be bypassed by setting the ADCCON1.6 bit. In  this mode the V REF and C REF\n pins need to be shorted together for correct operation.\n16Flash/EE Memory reliability characteristics apply to both the Flash/EE program memory and the Flash/EE data memory.\n17Endurance is qualified to 100,000 cycles as per JEDEC Std. 22 method A117 and measured at -40ºC, +25ºC, and +125ºC. Typical endurance at\n 25ºC is 700,000 cycles.\n18Retention lifetime equivalent at junction temperature (Tj) = 55ºC as per JEDEC Std. 22 method A117. Retention lifetime based on an activation energy of 0.6 eV\n will derate with junction temperature as shown in Figure 18 in the Flash/EE Memory description section of this data sheet.\n19Power supply current consumption is measured in Normal, Idle, and Power-Down Modes under the following conditions:\nNormal Mode: Reset = 0.4 V, Digital I/O pins = open circuit,  Core Executing internal software  loop.\nIdle Mode: Reset = 0.4 V, Digital I/O pins = open circuit,  Core Execution suspended in idle mode.\nPower-Down Mode: Reset = 0.4 V, All Port 0 pins = 0.4 V, All other digital I/O pins and Port 1 are open circuit, OSC off, TIC of f.\n20DV DD power supply current will increase typically by 3 mA (3 V operation) and 10 mA (5 V operation) during a Flash/EE memory program or erase cycle.\nSpecifications subject to change without notice.Parameter VDD = 5 V V DD = 3 V Unit Test Conditions/Comments\nPOWER REQUIREMENTS 19, 20\nPower Supply Voltages\nAVDD/DV DD to AGND 2.7 V min AV DD /DV DD = 3 V nom\n3.3 V max\n4.5 V min AV DD /DV DD = 5 V nom\n5.5 V max\nPower Supply Currents Normal Mode\nDV DD Current 6 3 mA typ MCLKIN = 1 MHz\nAVDD Current 1.7 1.7 mA max MCLKIN = 1 MHz\nDV DD Current 25 12 mA max MCLKIN = 16 MHz\n21 10 mA typ MCLKIN = 16 MHz\nAVDD Current 1.7 1.7 mA max MCLKIN = 16 MHz\nPower Supply Currents Idle Mode\nDV DD Current 5 1 mA typ MCLKIN = 1 MHz\nAVDD Current 0.14 0.14 mA typ MCLKIN = 1 MHz\nDV DD Current411 5 mA max MCLKIN = 16 MHz\n10 4 mA typ MCLKIN = 16 MHz\nAVDD Current 0.14 0.14 mA typ MCLKIN = 16 MHz\nPower Supply Currents Power Down Mode MCLKIN = 2 MHz or 16 MHz\nAVDD Current 3 2.5 /H9262A typ\nDV DD Current 35 20 /H9262A max TIMECON.1 = 0\n25 12 /H9262A typ\n160 125 /H9262A typ TIMECON.1 = 1\nTypical Additional Power Supply Currents AVDD = DV DD = 5 V\nPSM Peripheral 50 /H9262A typ\nADC 1.5 mA typ\nDAC 150 /H9262A typSPECIFICATIONS  (continued)\nREV. A\nADuC831\n–7–CAUTION\nESD (electrostatic discharge) sensitive device. Electrostatic charges as high as 4000 V readilyaccumulate on the human body and test equipment and can discharge without detection. Although the\nADuC831 features proprietary ESD protection circuitry, permanent damage may occur on devices\nsubjected to high energy electrostatic discharges. Therefore, proper ESD precautions are recommended\nto avoid performance degradation or loss of functionality.ABSOLUTE MAXIMUM RATINGS *\n(TA = 25° C unless otherwise noted.)\nAVDD to DV DD . . . . . . . . . . . . . . . . . . . . . . . –0.3 V to +0.3 V\nAGND to DGND  . . . . . . . . . . . . . . . . . . . .  –0.3 V to +0.3 V\nDV DD to DGND, AV DD to AGND  . . . . . . . . .  –0.3 V to +7 V\nDigital Input Voltage to DGND  . . . .  –0.3 V to DV DD + 0.3 V\nDigital Output Voltage to DGND  . . . –0.3 V to DV DD + 0.3 V\nVREF to AGND  . . . . . . . . . . . . . . . . .  –0.3 V to AV DD + 0.3 V\nAnalog Inputs to AGND  . . . . . . . . . .  –0.3 V to AV DD + 0.3 V\nOperating Temperature Range Industrial\nADuC831BS  . . . . . . . . . . . . . . . . . . . . . .  –40 °C to +125 °C\nOperating Temperature Range Industrial\nADuC831BCP  . . . . . . . . . . . . . . . . . . . . . .  –40 °C to +85 °C\nStorage Temperature Range  . . . . . . . . . . . .  –65 °C to +150 °C\nJunction Temperature  . . . . . . . . . . . . . . . . . . . . . . . . .  150 °C\nθJA Thermal Impedance (ADuC831BS)  . . . . . . . . . .  90 °C/W\nθJA Thermal Impedance (ADuC831BCP)  . . . . . . . . .  52 °C/W\nLead Temperature, Soldering\nVapor Phase (60 sec)  . . . . . . . . . . . . . . . . . . . . . . . .  215 °C\nInfrared (15 sec)  . . . . . . . . . . . . . . . . . . . . . . . . . . .  220 °C\n*Stresses above those listed under Absolute Maximum Ratings may cause perma-\nnent damage to the device. This is a stress rating only; functional operation of thedevice at these or any other conditions above those listed in the operationalsections of this specification is not implied. Exposure to absolute maximum ratingconditions for extended periods may affect device reliability.\nREV. AORDERING GUIDE  \nModel1 Temperature Range  Package Description  Package Option  \nS-52-2 ADuC831BS Z \nADUC831BSZ -REEL  −40°C to +125°C  \n−40°C to +125°C  52-Lead Metric Quad Flat Package [MQFP]  \n52-Lead Metric Quad Flat Package [MQFP]  S-52-2 \n−40°C to +85°C  CP-56-11  ADuC831BCPZ \nADUC831BCPZ -REEL  −40°C to +85°C  56-Lead  Lead Frame Chip Scale Package [LFCSP]  \n56-Lead  Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nEVAL -ADuC831QSZ  QuickStart Development System  \n1 Z = RoHS Compliant Part.  \n–8–ADuC831\nPIN CONFIGURATION\nWATCHDOG\nTIMER256 BYTES USER\nRAM\nPOWER SUPPLY\nMONITORTEMP\nSENSOR\nBAND GAP\nREFERENCEAVDD\nAGND\nDVDD\nDVDD\nDVDD\nDGND\nDGND\nDGND\nRESETPOR\nSDATA\\MOSI\nMISO\nSS\nXTAL1ADuC831\nADC\nCONTROL\nAND\nCALIBRATIONDAC1DAC\nCONTROL12-BIT\nVOLTAGE\nOUTPUT DAC\nT0\nT1\nT2EXT2\nINT0\nINT1EAPSENALE\nSINGLE-PIN\nEMULATORTxDRxD4 kBYTES DATA\nFLASH/EE62 kBYTES PROGRAM\nFLASH/EE INCLUDING\nUSER DOWNLOAD\nMODE\nASYNCHRONOUS\nSERIAL PORT\n(UART)8052\nMCU\nCORE\nDOWNLOADER\nDEBUGGER\nSYNCHRONOUS\nSERIAL INTERFACE\n(I2C AND SPI )16-BIT\nCOUNTER\nTIMERS\nTIME INTERVAL\nCOUNTER\n(WAKEUP CCT)\nXTAL2OSC2 kBYTES USER XRAM\n2 /H11547 DATA POINTERS\n11-BIT STACK POINTER12-BIT\nVOLTAGE\nOUTPUT DAC\nMUX...\n...12-BIT\nADCADC0\nADC1\nADC6\nADC7DAC0\nMUX16-BIT\n/H9018-/H9004 DAC\nPWM0\nPWM1\n16-BIT\nPWM16-BIT\nPWMPWM\nCONTROL16-BIT\n/H9018-/H9004 DACT/H\nVREF\nCREFBUF\nUART\nTIMER\nSCLOCK\nFigure 1. ADuC831 Block Diagram (Shaded areas are features not present on the ADuC812)52 51 50 49 48 43 42 41 40 47 46 45 44\n14 15 16 17 18 19 20 21 22 23 24 25 261\n2\n3\n4\n5\n6\n7\n89\n1011\n1312PIN 1\nIDENTIFIER\nTOP VIEW\n(Not to Scale)39\n3837\n36\n35\n3433323130292827ADuC831 52-LEAD PQFPP0.7/AD7\nP0.6/AD6P0.5/AD5P0.4/AD4\nDV\nDD\nDGND\nP0.3/AD3P0.2/AD2P0.1/AD1P0.0/AD0\nALE\nPSEN\nEAP1.7/ADC7\nRESET\nP3.0/RXD\nP3.1/TXD\nP3.2/INT0\nP3.3/INT1/MISO/PWM0\nDV\nDD\nP3.4/T0/PWMC/PWM1\nP3.5/T1/CONVST\nP3.6/WR\nP3.7/RD\nSCLOCKP1.0/ADC0/T2\nP1.1/ADC1/T2EX\nP1.2/ADC2\nP1.3/ADC3\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nP1.4/ADC4\nP1.5/ADC5/SS\nP1.6/ADC6P2.7/PWM1/A15/A23\nP2.6/PWM0/A14/A22\nP2.5/A13/A21P2.4/A12/A20\nDGND\nDV\nDD\nXTAL2XTAL1\nP2.3/A11/A19P2.2/A10/A18\nP2.1/A9/A17P2.0/A8/A16\nSDATA/MOSIDGND\nREV. A15\n16\n1718\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28P1.6/ADC6\nP.7/ADC7\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1/MISO/PWM1\nDV\nDD\nDGND\nP3.4/T0/PWMC/PWM0\nP3.5/T1/CONVST\nP3.6/WR\nP3.7/RD\nSCLOCK56\n55\n54\n53\n52\n51\n50\n49P1.0/ADC0/T2\nP0.7/AD7\nP0.6/AD6\nP0.5/AD5\nP0.4/AD4\nDVDD\nDGND\nP0.3/AD3\n48\n47\n46\n45P0.2/AD2\nP0.1/AD1\nP0.0/AD0\nALE\n4443PSENEA\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14P1.1/ADC1/T2EX\nP1.2/ADC2\nP1.3/ADC3\nAVDD\nAVDD\nAGND\nAGND\nAGND\nCREF\nVREF\nDAC0\nDAC1\nP1.4/ADC4\nP1.5/ADC5/SSP2.7/A15/A23\nP2.6/A14/A22P2.5/A13/A21\nP2.4/A12/A20\nDGNDDGND\nDV\nDD\nXTAL2\nXTAL1\nP2.3/A11/A19\nP2.2/A10/A18\nP2.1/A9/A17P2.0/A8/A16SDATA/MOSI42\n4140\n39\n3837\n36\n35\n34\n33\n32\n313029ADuC831 56-LEAD CSP\nTOP VIEW\n(Not to Scale)\nNOTES\n THE LFCSP HAS AN EXPOSED PAD THAT MUST BE 1.\nSOLDERED TO THE METAL PLATE ON THE PCB.\nADuC831\n–9–PIN FUNCTION DESCRIPTIONS\nMnemonic Type Function\nDV DD PD igital Positive Supply Voltage, 3 V or 5 V Nominal\nAVDD PA nalog Positive Supply Voltage, 3 V or 5 V Nominal\nCREF ID ecoupling Input for On-Chip Reference. Connect 0.1 µF between this pin and AGND.\nVREF I/O Reference Input/Output. This pin is connected to the internal reference through a series resistor and is the\nreference source for the analog-to-digital converter. The nominal internal reference voltage is 2.5 V and this\nappears at the pin. This pin can be overdriven by an external reference.\nAGND G Analog Ground. Ground reference point for the analog circuitry.\nP1.0–P1.7 I Port 1 is an 8-bit input port only. Unlike other ports, Port 1 defaults to Analog Input mode, to configure\nany of these Port Pins as a digital input, write a “0” to the port bit. Port 1 pins are multifunction and share\nthe following functionality.\nADC0–ADC7 I Analog Inputs. Eight single-ended analog inputs. Channel selection is via ADCCON2 SFR.\nT2 I Timer 2 Digital Input. Input to Timer/Counter 2. When enabled, Counter 2 is incremented in response to a\n1-to-0 transition of the T2 input.\nT2EX I Digital Input. Capture/Reload trigger for Counter 2 and also functions as an Up/Down control input for\nCounter 2.\nSS I Slave Select Input for the SPI Interface\nSDATA I/O User Selectable, I2C Compatible or SPI Data Input/Output Pin\nSCLOCK I/O Serial Clock Pin for I2C Compatible or SPI Serial Interface Clock\nMOSI I/O SPI Master Output/Slave Input Data I/O Pin for SPI InterfaceMISO I/O SPI Master Input/Slave Output Data I/O Pin for SPI Serial Interface\nDAC0 O Voltage Output from DAC0\nDAC1 O Voltage Output from DAC1RESET I Digital Input. A high level on this pin for 24 master clock cycles while the oscillator is running resets the device.\nP3.0–P3.7 I/O Port 3 is a bidirectional port with internal pull-up resistors. Port 3 pins that have 1s written to them are\npulled high by the internal pull-up resistors, and in that state they can be used as inputs. As inputs, Port 3\npins being pulled externally low will source current because of the internal pull-up resistors. Port 3 pins\nalso contain various secondary functions which are described below.\nPWMC I PWM Clock Input\nPWM0 O PWM0 Voltage Output. PWM outputs can be configured to use ports 2.6 and 2.7, or 3.4 and 3.3.\nPWM1 O PWM1 Voltage Output. See CFG831 Register for further information.RxD I/O Receiver Data Input (Asynchronous) or Data Input/Output (Synchronous) of Serial (UART) Port\nTxD O Transmitter Data Output (Asynchronous) or Clock Output (Synchronous) of Serial (UART) Port\nINT0 I Interrupt 0, programmable edge- or level-triggered Interrupt input, which can be programmed to one of two\npriority levels. This pin can also be used as a gate control input to Timer 0.\nINT1 I Interrupt 1, programmable edge- or level-triggered Interrupt input, which can be programmed to one of twopriority levels. This pin can also be used as a gate control input to Timer 1.\nT0 I Timer/Counter 0 Input\nT1 I Timer/Counter 1 Input\nCONVST I Active Low Convert Start Logic Input for the ADC Block when the External Convert Start Function is Enabled.\nA low-to-high transition on this input puts the track-and-hold into its hold mode and starts conversion.\nWR OW rite Control Signal, Logic Output. Latches the data byte from Port 0 into the external data memory.\nRD OR ead Control Signal, Logic Output. Enables the external data memory to Port 0.\nXTAL2 O Output of the Inverting Oscillator Amplifier\nXTAL1 I Input to the Inverting Oscillator Amplifier, and input to the internal clock generator circuits.\nDGND G Digital Ground. Ground reference point for the digital circuitry.P2.0–P2.7 I/O Port 2 is a bidirectional port with internal pull-up resistors. Port 2 pins that have 1s written to them are\n(A8–A15) pulled high by the internal pull-up resistors, and in that state they can be used as inputs. As inputs, Port 2(A16–A23) pins being pulled externally low will source current because of the internal pull-up resistors. Port 2 emits\nthe high order address bytes during fetches from external program memory and middle and high order\naddress bytes during accesses to the external 24-bit external data memory space.\nREV. A\n–10–ADuC831\nTERMINOLOGY\nADC SPECIFICATIONS\nIntegral Nonlinearity\nThis is the maximum deviation of any code from a straight line\npassing through the endpoints of the ADC transfer function.\nThe endpoints of the transfer function are zero scale, a point1/2 LSB below the first code transition and full scale, a point\n1/2 LSB above the last code transition.\nDifferential Nonlinearity\nThis is the difference between the measured and the ideal 1 LSB\nchange between any two adjacent codes in the ADC.\nOffset Error\nThis is the deviation of the first code transition (0000 . . . 000)\nto (0000 . . . 001) from the ideal, i.e., +1/2 LSB.\nGain Error\nThis is the deviation of the last code transition from the ideal\nAIN voltage (Full Scale – 1.5 LSB) after the offset error has\nbeen adjusted out.\nSignal to (Noise + Distortion) Ratio\nThis is the measured ratio of signal to (noise + distortion) at the\noutput of the ADC. The signal is the rms amplitude of the fun-\ndamental. Noise is the rms sum of all nonfundamental signals up\nto half the sampling frequency (f S/2), excluding dc. The ratio isdependent upon the number of quantization levels in the digiti-\nzation process; the more levels, the smaller the quantization\nnoise. The theoretical signal to (noise + distortion) ratio for anideal N-bit converter with a sine wave input is given by:\n  Signal to(Noise Distortion)=(6.02N +  1.76) dB +\nThus for a 12-bit converter, this is 74 dB.\nTotal Harmonic Distortion\nTotal Harmonic Distortion is the ratio of the rms sum of theharmonics to the fundamental.\nDAC SPECIFICATIONS\nRelative Accuracy\nRelative accuracy or endpoint linearity is a measure of the\nmaximum deviation from a straight line passing through the\nendp oints of the DAC transfer function. It is measured after\nadjusting for zero error and full-scale error.\nVoltage Output Settling Time\nThis is the amount of time it takes for the output to settle to a\nspecified level for a full-scale input change.\nDigital-to-Analog Glitch Impulse\nThis is the amount of charge injected into the analog output\nwhen the inputs change state. It is specified as the area of the\nglitch in nV sec.PIN FUNCTION DESCRIPTIONS (continued)\nMnemonic Type Function\nPSEN OP rogram Store Enable, Logic Output. This output is a control signal that enables the external program\nmemory to the bus during external fetch operations. It is active every six oscillator periods except during\nexternal data memory accesses. This pin remains high during internal program execution. PSEN  can also be\nused to enable serial download mode when pulled low through a resistor on power-up or RESET.\nALE\nO Address Latch Enable, Logic Output. This output is used to latch the low byte (and page byte for 24-bit\naddress space accesses) of the address into external memory during normal operation. It is activated every\nsix oscillator periods except during an external data memory access.\nEA IE xternal Access Enable, Logic Input. When held high, this input enables the device to fetch code from\ninternal program memory locations 0000H to 1FFFH. When held low this input enables the device to fetch\nall instructions from external program memory. This pin should not be left floating.\nP0.7–P0.0 I/O Port 0 is an 8-bit Open Drain Bidirectional I/O port. Port 0 pins that have 1s written to them float, and in(A0–A7) that state can be used as high impedance inputs. Port 0 is also the multiplexed low order address and data\nbus during accesses to external program or data memory. In this application it uses strong internal pull-ups\nwhen emitting 1s.\nREV. AEP Exposed Pad. The LFCSP has an exposed pad that must be soldered to the metal plate on the PCB.\nTypical Performance Characteristics–ADuC831\n–11–The typical performance plots presented in this section illustrate\ntypical performance of the ADuC831 under various operating\nconditions.\nTPC 1 and TPC 2 below show typical ADC Integral Nonlinearity\n(INL) errors from ADC code 0 to code 4095 at 5 V and 3 Vsupplies respectively. The ADC is using its internal reference\n(2.5 V) and operating at a sampling rate of 152 kHz and the\ntypically worst-case errors in both plots is just less than 0.3 LSBs.\nTPC 3 and TPC 4 below show the variation in Worst Case\nPositive (WCP) INL and Worst Case Negative (WCN) INL\nversus external reference input voltage.\nTPC 5 and TPC 6 show typical ADC differential nonlinearity\n(DNL) errors from ADC code 0 to code 4095 at 5 V and 3 V sup-plies, respectively. The ADC is using its internal reference (2. V) and\noperating at a sampling rate of 152 kHz and the typically worst case\nerrors in both plots is just less than 0.2 LSBs.\nTPC 7 and TPC 8 show the variation in worst case positive\n(WCP) DNL and worst-case negative (WCN) DNL versus\nexternal reference input voltage.\nTPC 9 shows a histogram plot of 10,000 ADC conversion\nresults on a dc input with V\nDD = 5 V. The plot illustrates an\nexcellent code distribution pointing to the low noise perfor-\nmance of the on-chip precision ADC.TPC 10 shows a histogram plot of 10,000 ADC conversion\nresults on a dc input for V DD = 3 V.  The plot again illustrates a\nvery tight code distribution of 1 LSB with the majority of codesappearing in one output bin.\nTPC 11 and TPC 12 show typical FFT plots for the ADuC831.\nThese plots were generated using an external clock input. The\nADC is using its internal reference (2.5 V) sampling a full-scale,\n10 kHz sine wave test tone input at a sampling rate of 149.79 kHz.The resultant FFTs shown at 5 V and 3 V supplies illustrate an\nexcellent 100 dB noise floor, 71 dB Signal-to-Noise Ratio (SNR)\nand THD greater than –80 dB.\nTPC 13 and TPC 14 show typical dynamic performance versus\nexternal reference voltages. Again excellent ac performance can\nbe observed in both plots with some roll-off being observed as\nV\nREF falls below 1 V.\nTPC 15 shows typical dynamic performance versus samplingfrequency. SNR levels of 71 dBs are obtained across the sam-\npling range of the ADuC831.\nTPC 16 shows the voltage output of the on-chip temperature\nsensor versus temperature. Although the initial voltage output at25ºC can vary from part to part, the resulting slope of\n–2 mV/ºC is constant across all parts.\nADC CODES–1.0\n0 511LSBs\n1023 2047 2559 3071–0.8\n1535 3583–0.6–0.4–0.200.20.40.60.81.0\nAVDD / DV DD = 5V\nfS = 152kHz\n4095\nTPC 1. Typical INL Error, V DD = 5 V\nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.6\n0.2\n–0.2–0.6–1.00.80.4\n0\n–0.4–0.8\n3071 3583 0 4095AVDD/DVDD = 3V\nfS = 152kHz\nTPC 2. Typical INL Error, V DD = 3 VEXTERNAL REFERENCE – V1.2WCP–INL – LSBs0.8\n0.4\n0\n–0.4\n–0.61.0\n0.6\n0.2\n–0.2AVDD/DVDD = 5V\nfS = 152kHz\n0.5 1.0 1.5 2.0 2.5 5.00.6\n0.4\n0\n–0.4\n–0.60.2\n–0.2\nWCN–INL – LSBs\nWCN INLWCP INL\n   TPC 3. Typical Worst Case INL Error vs. V REF, VDD = 5 V\nEXTERNAL REFERENCE – VWCP–INL – LSBs0.8\n0.4\n0\n–0.4\n–0.80.6\n0.2\n–0.2AVDD/DVDD = 3V\nfS = 152kHz\n0.5 1.5 2.5\nWCN–INL – LSBs\n–0.60.8\n0.4\n0\n–0.4\n–0.80.6\n0.2\n–0.2\n–0.6\n3.0 2.0 1.0WCN INLWCP INL\nTPC 4. Typical Worst Case INL Error vs. V REF, VDD = 3 V\nREV. A\n–12–ADuC831\nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.6\n0.2\n–0.2–0.6–1.00.80.4\n0\n–0.4–0.8\n3071 3583 0 4095AVDD/DVDD = 5V\nfS = 152kHz\nTPC 5. Typical DNL Error, V DD = 5 V\nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.60.2\n–0.2–0.6–1.00.80.4\n0\n–0.4–0.8\n3071 3583 0 4095AVDD/DVDD = 3V\nfS = 152kHz\nTPC 6. Typical DNL Error, V DD = 3 V\nEXTERNAL REFERENCE – V–0.6\n0.5WCP–DNL – LSBs\n1.0 2.0 2.5 5.0–0.4\n1.5–0.200.20.40.6\nWCN–DNL – LSBs\n–0.4\n–0.6–0.200.20.40.6\nAVDD / DV DD = 5V\nfS = 152kHz\nWCP DNL\nWCN DNL\nTPC 7. Typical Worst Case DNL Error vs. V REF, VDD = 5 VEXTERNAL REFERENCE – VWCP–DNL – LSBs0.7\n0.5\n0.1\n–0.5\n–0.70.3\n–0.3AVDD/DVDD = 3V\nfS = 152kHz\n0.5 1.0 1.5 2.0 2.5 3.0\nWCN–DNL – LSBsWCP DNL\nWCN DNL–0.10.7\n0.5\n0.1\n–0.5\n–0.70.3\n–0.3–0.1\nTPC 8. Typical Worst Case DNL Error vs. V REF, VDD = 3 V\nCODE817 818 819 820 82110000 OCCURRENCE8000\n600040002000\n0\nTPC 9. Code Histogram Plot, V DD = 5 V\nCODE10000\n817 818 819 820 821OCCURRENCE8000600040002000\n090007000500030001000\nTPC 10. Code Histogram Plot, V DD = 3 V\nREV. A\nREV.  AREV. A\nADuC831\n–13–FREQUENCY – kHz01 0dBs\n20 40 50 60–160\n30 70–140–120–100–80–60–40–20020\nAVDD / DVDD = 5V\nfS = 152kHz\nfIN = 9.910kHz\nSNR = 71.3dB\nTHD = –88.0dBENOB = 11.6\nTPC 11. Dynamic Performance at V DD = 5 V\nFREQUENCY – kHz01 0dBs\n20 40 50 60–160\n30 70–140–120–100–80–60–40–20020\nAVDD / DVDD = 3V\nfS = 149.79kHz\nfIN = 9.910kHz\nSNR = 71.0dBTHD = –83.0dBENOB = 11.5\nTPC 12. Dynamic Performance at V DD = 3 V\nEXTERNAL REFERENCE – V50\n0.5SNR – dBs\n1.0 2.0 2.5 5.055\n1.56065707580\nTHD – dBs\n–100–95–90–85–80–75–70\nAVDD / DVDD = 5V\nfS = 152kHz\nSNR\nTHD\nTPC 13. Typical Dynamic Performance vs. V REF, VDD = 5 VEXTERNAL REFERENCE – VSNR – dBs80\n75\n65\n5070\n55AVDD/DVDD = 3V\nfS = 152kHz\n0.5 1.5 2.5\nTHD – dBsSNR\nTHD\n60–70\n–75\n–85\n–100–80\n–95–90\n1.0 2.0 3.0\nTPC 14. Typical Dynamic Performance vs. V REF, VDD = 3 V\nFREQUENCY – kHz64\n92.262SNR – dBs\n119.05 172.62 199.41 226.1966\n145.836870727680\nAVDD / DVDD = 5V\n78\n74\n62\n60\n65.476\nTPC 15. Typical Dynamic Performance vs.\nSampling Frequency\nTEMPERATURE – /H11543C0.40\n–40VOLTAGE – V\n–200.450.500.550.600.700.80\n0.75\n0.65AVDD / DVDD = 3V\nSLOPE = /H115462mV//H11543C\n0 25 50 85\nTPC 16. Typical Temperature Sensor Output vs.\nTemperature\nREV.  AREV. A\n–14–ADuC831\nMEMORY ORGANIZATION\nThe ADuC831 contains four different memory blocks:\n•62 kBytes of On-Chip Flash/EE Program Memory\n•4 kBytes of On-Chip Flash/EE Data Memory\n•256 Bytes of General-Purpose RAM\n•2 kBytes of Internal XRAM\nFlash/EE Program Memory\nThe ADuC831 provides 62 kBytes of Flash/EE program memory\nto run user code. The user can choose to run code from thisinternal memory or run code from an external program memory.\nIf the user applies power or resets the device while the EA pin is\npulled low, the part will execute code from the external program\nspace, otherwise the part defaults to code execution from itsinternal 62 kBytes of Flash/EE program memory. Unlike the\nADuC812, where code execution can overflow from the internal\ncode space to external code space once the PC becomes greaterthan 1FFFH, the ADuC831 does not support the rollover from\nF7FFH in internal code space to F800H in external code space.\nInstead the 2048 bytes between F800H and FFFFH will appearas NOP instructions to user code.\nThis internal code space can be downloaded via the UART serial\nport while the device is in-circuit. 56 kBytes of the program\nmemory can be reprogrammed during runtime thus the codespace can be upgraded in the field using a user defined protocol\nor it can be used as a data memory. This will be discussed in\nmore detail in the Flash/EE Memory section.\nFlash/EE Data Memory\n4 kBytes of Flash/EE Data Memory are available to the user andcan be accessed indirectly via a group of control registers m apped\ninto the Special Function Register (SFR) area. Access to theFlash/EE data memory is discussed in detail later as part of theFlash/EE Memory section.\nGeneral-Purpose RAM\nThe general-purpose RAM is divided into two separate memories,namely the upper and the lower 128 bytes of RAM. The lower128 bytes of RAM can be accessed through direct or indirect\naddressing. The upper 128 bytes of RAM can only be accessed\nthrough indirect addressing as it shares the same address spaceas the SFR space, which can only be accessed through direct\naddressing.\nThe lower 128 bytes of internal data memory are mapped as\nshown in Figure 2. The lowest 32 bytes are grouped into fourbanks of eight registers addressed as R0 through R7. The next\n16 bytes (128 bits), locations 20H through 2FH above the register\nbanks, form a block of directly addressable bit locations at bitaddresses 00H through 7FH. The stack can be located anywhere\nin the internal memory address space, and the stack depth can\nbe expanded up to 2048 bytes.\nReset initializes the stack pointer to location 07H and increments\nit once before loading the stack to start from locations 08H which\nis also the first register (R0) of register bank 1. Thus, if one is\ngoing to use more than one register bank, the stack pointershould be initialized to an area of RAM not used for data storage.BIT-ADDRESSABLE\n(BIT ADDRESSES)\nFOUR BANKS OF EIGHTREGISTERSR0 R7BANKS\nSELECTED\nVIA\nBITS IN PSW\n11\n10\n01\n0007H0FH17H1FH2FH7FH\n00H08H10H18H20H\nRESET VALUE OF\nSTACK POINTER30HGENERAL-PURPOSEAREA\nFigure 2.  Lower 128 Bytes of Internal Data Memory\nThe ADuC831 contains 2048 bytes of internal XRAM,\n1792 bytes of which can be configured to be used as anextended 11-bit stack pointer.\nBy default, the stack will operate exactly like an 8052 in that it\nwill roll over from FFH to 00H in the general-purpose RAM. On\nthe ADuC831  however, it is possible (by setting CFG 831.7)\nto enable the 11-bit extended stack pointer. In this case, thestack will roll over from FFH in RAM to 0100H in XRAM.\nThe 11-bit stack pointer is visible in the SP and SPH SFRs.\nThe SP SFR is located at 81H as with a standard 8052. TheSPH SFR is located at B7H. The 3 LSBs of this SFR containthe three extra bits necessary to extend the 8-bit stack pointer\ninto an 11-bit stack pointer.\nUPPER 1792\nBYTES OF\nON-CHIP XRAM\n(DATA + STACK\nFOR EXSP = 1,\nDATA ONLY\nFOR EXSP = 0)\nLOWER 256\nBYTES OF\nON-CHIP XRAM\n(DATA ONLY)\n00H07FFH\n256 BYTES OF\nON-CHIP DATA\nRAM\n(DATA +\nSTACK)00HFFHCFG831.7 = 0 CFG831.7 = 1\n100H\nFigure 3. Extended Stack Pointer Operation\nREV.  AREV. A\nADuC831\n–15–External Data Memory (External XRAM)\nJust like a standard 8051 compatible core, the ADuC831 can\naccess external data memory using a MOVX instruction. The\nMOVX instruction automatically outputs the various control\nstrobes required to access the data memory.\nThe ADuC831, however, can access up to 16 MBytes of externaldata memory. This is an enhancement of the 64 kBytes external\ndata memory space available on a standard 8051 compatible core.\nThe external data memory is discussed in more detail in the\nADuC831 Hardware Design Considerations section.\nInternal XRAM2 kBytes of on-chip data memory exist on the ADuC831. This\nmemory, although on-chip, is also accessed via the MOVX\ninstruction. The 2 kBytes of internal XRAM are mapped into\nthe bottom 2 kBytes of the external address space if the\nCFG831 bit is set. Otherwise, access to the external data memory\nwill occur just like a standard 8051. When using the internal\nXRAM, ports 0 and 2 are free to be used as general-purpose I/O.\nEXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG831.0 = 0EXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG831.0 = 1 0007FFH000800H\n2 kBYTES\nON-CHIP\nXRAM\n      Figure 4. Internal and External XRAM\nSPECIAL FUNCTION REGISTERS (SFRS)\nThe SFR space is mapped into the upper 128 bytes of internaldata memory space and accessed by direct addressing only. It\nprovides an interface between the CPU and all on-chip periph-\nerals. A block diagram showing the programming model of theADuC831 via the SFR area is shown in Figure 5.\nAll registers, except the Program Counter (PC) and the four\ngeneral-purpose register banks, reside in the SFR area. The SFR\nregisters include control, configuration, and data registers thatprovide an interface between the CPU and all on-chip peripherals.128-BYTE\nSPECIAL\nFUNCTION\nREGISTER\nAREA62-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE PROGRAM\nMEMORY\n8051-\nCOMPATIBLE\nCORE\nOTHER ON-CHIP\nPERIPHERALS\nTEMPERATURE\nSENSOR\n2 /H11547 12-BIT DACs\nSERIAL I/O\nWDT\nPSM\nTIC8-CHANNEL\n12-BIT ADC4-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE DATA\nMEMORY\n2304 BYTES\nRAM\nFigure 5. Programming Model\nAccumulator SFR (ACC)\nACC is the Accumulator register and is used for math opera-tions including addition, subtraction, integer multiplication and\ndivision, and Boolean bit manipulations. The mnemonics for\naccumulator-specific instructions refer to the Accumulator as A.\nB SFR (B)\nThe B register is used with the ACC for multiplication anddivision operations. For other instructions it can be treated as a\ngeneral-purpose scratchpad register.\nStack Pointer (SP and SPH)\nThe SP SFR is the stack pointer and is used to hold an internal\nRAM address that is called the top of the stack . The SP register is\nincremented before data is stored during PUSH and CALLexecutions. While the Stack may reside anywhere in on-chipRAM, the SP register is initialized to 07H after a reset. This\ncauses the stack to begin at location 08H.\nAs mentioned earlier, the ADuC831 offers an extended 11-bit\nstack pointer. The three extra bits to make up the 11-bit stackpointer are the 3 LSBs of the SPH byte located at B7H.\nREV. A\n–16–ADuC831\nData Pointer (DPTR)\nThe Data Pointer is made up of thre e 8-bit registers, named\nDPP (page byte), DPH (high byte) and DPL (low byte). These\nare used to provide memory addresses for internal and external\ncode access and external data access. It may be m anipulated as\na 16-bit register (DPTR = DPH, DPL), although INC DPTR\ninstructions will automatically carry over to DPP, or as three\nindependent 8-bit registers (DPP, DPH, DPL).\nThe ADuC831 supports dual data pointers. Refer to the Dual\nData Pointer section.\nProgram Status Word (PSW)\nThe PSW SFR contains several bits reflecting the current statusof the CPU as detailed in Table I.\nSFR Address D0H\nPower-On Default Value 00H\nBit Addressable Yes\nTable I. PSW SFR Bit Designations\nBit Name Description\n7C YC arry Flag\n6A CA uxiliary Carry Flag\n5F 0G eneral-Purpose Flag\n4 RS1 Register Bank Select Bits\n3 RS0 RS1 RS0 Selected Bank\n000\n011\n102113\n2O VO verflow Flag\n1F 1G eneral-Purpose Flag\n0P Parity BitPower Control SFR (PCON)The PCON SFR contains bits for power-saving options andgeneral-purpose status flags as shown in Table II.\nSFR Address 87H\nPower-On Default Value 00H\nBit Addressable No\nTable II. PCON SFR Bit Designations\nBit Name Description\n7 SMOD Double UART Baud Rate\n6 SERIPD I2C/SPI Power-Down Interrupt Enable\n5 INT0PD INT0  Power-Down Interrupt Enable\n4 ALEOFF Disable ALE Output\n3 GF1 General-Purpose Flag Bit\n2 GF0 General-Purpose Flag Bit\n1P D Power-Down Mode Enable\n0 IDL Idle Mode Enable\nREV.  A\nADuC831\n–17–SPICON1\nF8H 04HDAC0L\nF9H 00HDAC0H\nFAH 00HDAC1L\nFBH 00HDAC1H\nFCH 00HDACCON\nFDH 04HRESERVED\nB1\nF0H 00HADCOFSL3\nF1H 00HADCOFSH3\nF2H 20HADCGA INL3\nF3H 00HADCGA INH3\nF4H 00HADCCON3\nF5H 00HRESERVED\nI2CCON1\nE8H 00HRESERVED\nACC1\nE0H 00HRESERVED\nADCCON21\nD8H 00HADCDATAL\nD9H 00HADCD ATAH\nDAH 00HRESERVED\nPSW1\nD0H 00HDMAL\nD2H 00HDMAH\nD3H 00HDMAP\nD4H 00HRESERVED\nT2CON1\nC8H 00HRCAP2L\nCAH 00HRCAP2H\nCBH 00HTL2\nCCH 00HTH2\nCDH 00HRESERVED\nWDCON1\nC0H 10H\nIP1\nB8H 00HECON\nB9H 00HEDATA1\nBCH 00HEDATA2\nBDH 00H\nIE1\nA8H 00HIEIP2\nA9H A0H\nP21\nA0H FFH\nSCON1\n98H 00HSBUF\n99H 00HI2CDAT\n9AH 00HNOT USED\nP11, 2\n90H FFHNOT USED\nTCON1\n88H 00HTMOD\n89H 00HTL0\n8AH 00HTL1\n8BH 00HTH0\n8CH 00HTH1\n8DH 00H\nP01\n80H FFHSP\n81H 07HDPL\n82H 00HDPH\n83H 00HDPP\n84H 00HRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED\nRESERVED\nRESERVED\nNOT USEDNOT USED NOT USEDP31\nB0H FFH\nNOT USED NOT USED NOT USED NOT USED NOT USEDSPIDAT\nF7H 00H\nADCCON1\nEFH 00H\nRESERVED\nPSMCON\nDFH DEH\nEDARL\nC6H 00H\nEDATA3\nBEH 00HEDATA4\nBFH 00H\nNOT USED\nPCON\n87H 00HISPI\nFFH 0WCOL\nFEH 0SPE\nFDH 0SPIM\nFCH 0CPOL\nFBH 0CPHA\nFAHSPR1\nF9H 0SPR0\nF8H 0BITS\nF7H 0F6H 0F5H 0F4H 0F3H 0F2H F1H 0F0H 0BITS\nMDO\nEFH 0EEH 0MCO\nEDH 0ECH 0EBH 0EAH E9H 0E8H 0BITS\nE7H 0E6H 0E5H 0E4H 0E3H 0E2H E1H 0E0H 0BITS\nADCI\nDFH 0DMA\nDEH 0CCONV\nDDH 0SCONV\nDCH 0CS3\nDBH 0CS2\nDAHCS1\nD9H 0CS0\nD8H 0BITS\nCY\nD7H 0AC\nD6H 0F0\nD5H 0RS1\nD4H 0RS0\nD3H 0OV\nD2HFI\nD1H 0P\nD0H 0BITS\nTF2\nCFH 0EXF2\nCEH 0RCLK\nCDH 0TCLK\nCCH 0EXEN2\nCBH 0TR2\nCAHCNT2\nC9H 0CAP2\nC8H 0BITS\nPRE3\nC7H 0PRE2\nC6H 0PRE1\nC5H 0C4H 1WDIR\nC3H 0WDS\nC2HWDE\nC1H 0WDWR\nC0H 0BITS\nPSI\nBFH 0PADC\nBEH 0PT2\nBDH 0PS\nBCH 0PT1\nBBH 0PX1\nBAHPT0\nB9H 0PX0\nB8H 0BITS\nRD\nB7H 1WR\nB6H 1T1\nB5H 1T0\nB4H 1INT1\nB3H 1INT0\nB2HTxD\nB1H 1RxD\nB0H 1BITS\nEA\nAFHEADC\nAEHET2\nADHES\nACH 0ET1\nABH 0EX1\nAAHET0\nA9H 0EX0\nA8H 0BITS\nA7H A6H A5H 1A4H 1A3H 1A2H A1H 1A0H 1BITS\nSM0\n9FH 0SM1\n9EH 0SM2\n9DH 0REN\n9CH 0TB8\n9BH 0RB8\n9AHTI\n99H 0RI\n98H 0BITS\n97H 196H 195H 194H 193H 192HT2EX\n91H 1T2\n90H 1BITS\nTF1\n8FH 0TR1\n8EH 0TF0\n8DH 0TR0\n8CH 0IE1\n8BH 0IT1\n8AHIE0\n89H 0IT0\n88H 0BITS\n87H 186H 185H 184H 183H 182H 81H 180H 1BITS1\n1\n0\n1\n0\n1\nIE0\n89H 0IT0\n88H 0TCON\n88H 00HMNEMONIC\nSFR ADDRESS\nDEFAULT VALUEMNEMONIC\nDEFAULT VALUE\nSFR ADDRESSTHESE BITS ARE CONTAINED IN THIS BYTE. SFR MAP KEY:\nNOTES:\n1SFRs WHOSE ADDRESS ENDS IN 0H OR 8H ARE BIT ADDRESSABLE.\n2THE PRIMARY FUNCTION OF PORT1 IS AS AN ANALOG INPUT PORT; THEREFORE, TO ENABLE THE DIGITAL SECONDARY FUNCTIONS ON THESE\n  PORT PINS, WRITE A \'0\' TO THE CORRESPONDING PORT 1 SFR BIT.\n3CALIBRATION COEFFICIENTS ARE PRECONFIGURED ON POWER-UP TO FACTORY CALIBRATED VALUES.\n4VALUE DEPENDS ON EXTERNAL CRYSTAL.1\nRESERVED RESERVEDRESERVED0\n0\n0\n0\n0\n0\n0\n0\n0 0 0 0\n11TIMECON HTHSEC SEC MIN HOUR INTVAL DPCON\nA1H A2H A3H A4H A5H A6H A7H 00H 00H 00H 00H 00H 00H 00HRESERVED RESERVED RESERVED RESERVEDRESERVED RESERVED\nPWMCON\nAEH 00HCFG8314\nAFH 10H\nRESERVED RESERVEDT3FD T3CON\n9DH 9EH 00H 00HPWM0L PWM0H PWM1L PWM1H SPH\n00H 00H 00H 00H 00H B1H B2H B3H B4H B7HRESERVED RESERVED RESERVEDCHIPID\nC2H 3XHEDARH\nC7H 00HMDE I2CMRESERVED\nPRE0MDI I2CRS I2CTX I2CI\nI2CADD\n9BH 55H\nFigure 6. Special Function Register Locations and Reset ValuesSPECIAL FUNCTION REGISTERS\nAll registers except the program counter and the four general-\npurpose register banks, reside in the special function register\n(SFR) area. The SFR registers include control, configuration,\nand data registers that provide an interface between the CPUand other on-chip peripherals.\nFigure 6 shows a full SFR memory map and SFR contents on\nReset. Unoccupied SFR locations are shown dark-shaded in thefigure below (NOT USED). Unoccupied locations in the SFR\naddress space are not implemented, i.e., no register exists at this\nlocation. If an unoccupied location is read, an unspecified value\nis returned. SFR locations reserved for on-chip testing are shown\nlighter shaded below (RESERVED) and should not be accessedby user software. Sixteen of the SFR locations are also bit\naddressable and denoted by \n\'1\' in the figure below, i.e., the bit\naddressable SFRs are those whose address ends in 0H or 8H.\nREV. A\n–18–ADuC831\nADC CIRCUIT INFORMATION\nGeneral Overview\nThe ADC conversion block incorporates a fast, 8-channel,\n12-bit, single supply ADC. This block provides the user with\nmultichannel mux, track/hold, on-chip reference, calibration\nfeatures, and ADC. All components in this block are easily\nconfigured via a 3-register SFR interface.\nThe ADC consists of a conventional successive-approximation\nconverter based around a capacitor DAC. The converter accepts\nan analog input range of 0 to V REF. A high precision, low drift,\nand factory calibrated 2.5 V reference is provided on-chip. An\nexternal reference can be connected as described later. This\nexternal reference can be in the range of 1 V to AV DD.\nSingle step or continuous conversion modes can be initiated in\nsoftware or alternatively by applying a convert signal to an exter-nal pin. Timer 2 can also be configured to generate a repetitive\ntrigger for ADC conversions. The ADC may be configured to\noperate in a DMA Mode whereby the ADC block continuously\nconverts and captures samples to an external RAM space without\nany interaction from the MCU core. This automatic capture facility\ncan extend through a 16 MByte external data memory space.\nThe ADuC831 is shipped with factory programmed calibration\ncoefficients that are automatically downloaded to the ADC on\npower-up ensuring optimum ADC performance. The ADC corecontains internal offset and gain calibration registers, that canbe hardware calibrated to minimize system errors.\nA voltage output from an on-chip band gap reference propor-\ntional to absolute temperature can also be routed through the\nfront end ADC multiplexor (effectively a ninth ADC channelinput) facilitating a temperature sensor implementation.ADC Transfer Function\nThe analog input range for the ADC is 0 V to V REF. For this\nrange, the designed code transitions occur midway between\nsuccessive integer LSB values (i.e., 1/2 LSB, 3/2 LSBs,5/2 LSBs, . . ., FS –3/2 LSBs). The output coding is straight\nbinary with 1 LSB = FS/4096 or  2.5 V/4096 = 0.61 mV when\nV\nREF = 2.5 V.  The ideal input/output transfer characteristic for\nthe 0 to V REF  range is shown in Figure 7.\nOUTPUT\nCODE\n111...111\n111...110\n111...101\n111...100\n000...011\n000...010\n000...001\n000...000\n0V1LSB+FS\n–1LSBVOLTAGE INPUT1LSB =FS\n4096\nFigure 7. ADC Transfer Function\nTypical Operation\nOnce configured via the ADCCON 1-3 SFRs the ADC will\nconvert the analog input and provide an ADC 12-bit result word in\nthe ADCDATAH/L SFRs. The top four bits of the ADCDATAHSFR will be written with the channel selection bits so as to identifythe channel result. The format of the ADC 12 bit result word is\nshown in Figure 8.\nCH–ID\nTOP 4 BITSHIGH 4 BITS OF\nADC RESULT WORD\nLOW 8 BITS OF THEADC RESULT WORDADCDATAH SFR\nADCDATAL SFR\nFigure 8. ADC Result Format\nREV. A\nADuC831\n–19–Table III. ADCCON1 SFR Bit Designations\nBit Name Description\nADCCON1.7 MD1 The Mode bit selects the active operating mode of the ADC.\nSet by the user to power up the ADC.\nCleared by the user to power down the ADC.\nADCCON1.6 EXT_REF Set by the user to select an external reference.\nCleared by the user to use the internal reference.\nADCCON1.5 CK1 The ADC clock divide bits (CK1, CK0) select the divide ratio for the master clock used to generate the\nADCCON1.4 CK0 ADC clock. To ensure correct ADC operation, the divider ratio must be chosen to reduce the ADC clock\nto 4.5 MHz and below. A typical ADC conversion will require 17 ADC clocks.The divider ratio is selected as follows:\nCK1 CK0 MCLK Divider\n00 1 601 2\n10 4\n11 8\nADCCON1.3 AQ1 The ADC acquisition select bits (AQ1, AQ0) select the time provided for the input track-and-hold amplifier\nADCCON1.2 AQ0 to acquire the input signal. An acquisition of three or more ADC clocks is recommended; clocks are\nselected as follows:\nAQ1 AQ0 #ADC Clks\n00 101 2\n10 3\n11 4\nADCCON1.1 T2C The Timer 2 conversion bit (T2C) is set by the user to enable the Timer 2 overflow bit be used as\nthe ADC convert start trigger input.\nADCCON1.0 EXC The external trigger enable bit (EXC) is set by the user to allow the external Pin P3.5 (CONVST) to\nbe used as the active low convert start input. This input should be an active low pulse (minimum\npulsewidth >100 ns) at the required sample rate.ADCCON1 – (ADC Control SFR #1)\nThe ADCCON1 register controls conversion and acquisitiontimes, hardware conversion modes and power-down modes as\ndetailed below.\nSFR Address: EFH\nSFR Power-On Default Value: 00H\nBit Addressable: NO\nREV.  AREV.  A\n–20–ADuC831\nTable IV. ADCCON2 SFR Bit Designations\nBit Name Description\nADCCON2.7 ADCI The ADC interrupt bit (ADCI) is set by hardware at the end of a single ADC conversion cycle or at\nthe end of a DMA block conversion. ADCI is cleared by hardware when the PC vectors to the ADC Inter-\nrupt Service Routine. Otherwise, the ADCI bit should be cleared by user code.\nADCCON2.6 DMA The DMA mode enable bit (DMA) is set by the user to enable a preconfigured ADC DMA mode opera-\ntion. A more detailed description of this mode is given in the ADC DMA Mode section. The DMA bit is\nautomatically set to “0” at the end of a DMA cycle. Setting this bit causes the ALE output to cease, it willstart again when DMA is started and will operate correctly after DMA is complete.\nADCCON2.5 CCONV The continuous conversion bit (CCONV) is set by the user to initiate the ADC into a continuous mode of\nconversion. In this mode, the ADC starts converting based on the timing and channel configurationalready set up in the A DCCON SFRs; the ADC automatically starts another conversion once a previ-\nous conversion has completed.\nADCCON2.4 SCONV The single conversion bit (SCONV) is set to initiate a single conversion cycle. The SCONV bit is\nautomatically reset to “0” on com pletion of the single conversion cycle.\nADCCON2.3 CS3 The channel selection bits (CS3-0) allow the user to program the ADC channel selection under\nADCCON2.2 CS2 software control. When a conversion is initiated, the channel converted will be the one pointed to by\nADCCON2.1 CS1 these channel selection bits. In DMA mode, the channel selection is derived from the channel ID\nADCCON2.0 CS0 written to the external memory.\nCS3 CS2 CS1 CS0 CH#\n00000\n0001100102\n00113\n0100401015\n01106\n011171000T emp Monitor Requires minimum of 1 /H9262s to acquire\n1001DAC0 Only use with Internal DAC o/p buffer on\n1010DAC1 Only use with Internal DAC o/p buffer on\n1011AGND\n1100VREF\n1111DMA STOP Place in XRAM location to finish DMA sequence,\nsee the ADC DMA Mode section.\nAll other combinations reservedADCCON2 – (ADC Control SFR #2)\nThe ADCCON2 register controls ADC channel selection andconversion modes as detailed below.\nSFR Address: D8H\nSFR Power-On Default Value: 00H\nBit Addressable: YES\nREV.  A\nADuC831\n–21–Table V. ADCCON3 SFR Bit Designations\nBit Name Description\nADCCON3.7 BUSY The ADC Busy Status Bit (BUSY) is a read-only status bit that is set during a valid ADC conversion or\ncalibration cycle. Busy is auto matically cleared by the core at the end of conversion or calibration.\nADCCON3.6 GNCLD Gain Calibration Disable Bit\nSet to “0” to Enable Gain Calibration.\nSet to “1” to Disable Gain Calibration.\nADCCON3.5 AVGS1 Number of Averages Selection Bits\nADCCON3.4 AVGS0 This bit selects the number of ADC readings averaged during a calibration cycle.\nAVGS1   AVGS0 Number of Averages0  0 1 50  1 1\n1  0 3 1\n1  1 6 3\nADCCON3.3 RSVD Reserved. This bit should always be written as “0.”\nADCCON3.2 RSVD This bit should always be written as “1” by the user when performing calibration.\nADCCON3.1 TYPICAL Calibration Type Select Bit.\nThis bit selects between Offset (zero-scale) and gain (full-scale) calibration.\nSet to 0 for Offset Calibration.\nSet to 1 for Gain Calibration.\nADCCON3.0 SCAL Start Calibration Cycle Bit.\nWhen set, this bit starts the selected calibration cycle. It is automatically cleared when the calibration\ncycle is completed.ADCCON3 – (ADC Control SFR #3)\nThe ADCCON3 register controls the operation of various calibra-tion modes as well as giving an indication of ADC busy status.\nSFR Address: F5H\nSFR Power-On Default Value: 00HBit Addressable: NO\nREV.  A\n–22–ADuC831\nDriving the A/D Converter\nThe ADC incorporates a successive approximation (SAR) archi-\ntecture involving a charge-sampled input stage. Figure 9 shows\nthe equivalent circuit of the analog input section. Each ADC\nconversion is divided into two distinct phases as defined by theposition of the switches in Figure 9. During the sampling phase\n(with SW1 and SW2 in the “track” position) a charge propor-\ntional to the voltage on the analog input is developed across theinput sampling capacitor. During the conversion phase (with\nboth switches in the “hold” position) the capacitor DAC is\nadjusted via internal SAR logic until the voltage on node A iszero, indicating that the sampled charge on the input capacitor is\nbalanced out by the charge being output by the capacitor DAC.\nThe digital value finally contained in the SAR is then latched outas the result of the ADC conversion. Control of the SAR, and\ntiming of acquisition and sampling modes, is handled a uto-\nmatically by built-in ADC control logic. Acquisition and\nconversion times are also fully configurable under user control.\nCAPACITOR\nDAC\nCOMPARATORVREF\nAGND\nDAC1DAC0TEMPERATURE MONITOR\nAIN7\nAIN0\n32pF\nAGNDADuC831\nNODE Asw1\nsw2TRACK\nTRACKHOLD\nHOLD200/H9024\n200/H9024\nFigure 9. Internal ADC Structure\nNote that whenever a new input channel is selected, a residual\ncharge from the 32 pF sampling capacitor places a transient onthe newly selected input. The signal source must be capable of\nrecovering from this transient before the sampling switches click\ninto “hold” mode. Delays can be inserted in software (betweenchannel selection and conversion request) to account for input\nstage settling, but a hardware solution will alleviate this burden\nfrom the software design task and will ultimately result in acleaner system implementation. One hardware solution would\nbe to choose a very fast settling op amp to drive each analog\ninput. Such an op amp would need to fully settle from a smallsignal transient in less than 300 ns in order to guarantee adequate\nsettling under all software configurations. A better solution, recom-mended for use with any amplifier, is shown in Figure 10.\nThough at first glance the circuit in Figure 10 may look like a\nsimple antialiasing filter, it actually serves no such purpose since its\ncorner frequency is well above the Nyquist frequency, even at a\n200 kHz sample rate.  Though the R/C does helps to reject someincoming high-frequency noise, its primary function is to ensurethat the transient demands of the ADC input stage are met. It\nAIN0ADuC831\n10/H9024\n0.1/H9262F\nFigure 10. Buffering Analog Inputs\ndoes so by providing a capacitive bank from which the 32 pF\nsampling capacitor can draw its charge. Its voltage will not\nchange by more than one count (1/4096) of the 12-bit trans-fer function when the 32 pF charge from a previous channel\nis dumped onto it. A larger capacitor can be used if desired,\nbut not a larger resistor (for reasons described below).\nThe Schottky diodes in Figure 10 may be necessary to limit thevoltage applied to the analog input pin as per the data sheet\nabsolute maximum ratings. They are not necessary if the op\namp is powered from the same supply as the ADuC831 sincein that case the op amp is unable to generate voltages above\nV\nDD or below ground. An op amp of some kind is necessary\nunless the signal source is very low impedance to begin with.\nDC leakage currents at the ADuC831’s analog inputs can\ncause measurable dc errors with external source impedances\nas little as 100 Ω or so. To ensure accurate ADC operation, keep\nthe total source impedance at each analog input less than 61 Ω.\nThe table below illustrates examples of how source impedancecan affect dc accuracy.\nSource Error from 1 µAE rror from 10 µA\nImpedance Leakage Current Leakage Current\n61 Ω 61 µV = 0.1 LSB 610 µV = 1 LSB\n610 Ω 610 µV = 1 LSB 6.1 mV = 10 LSB\nAlthough Figure 10 shows the op amp operating at a gain of 1,you can, of course, configure it for any gain needed. Also, youcan just as easily use an instrumentation amplifier in its place to\ncondition differential signals. Use any modern amplifier that is\ncapable of delivering the signal (0 to V\nREF) with minimal satura-\ntion. Some single-supply rail-to-rail op amps that are useful for\nthis purpose include, but are certainly not limited to, the ones\ngiven in Table VI. Check Analog Devices literature (CD ROMdata book, and so on) for details on these and other op amps\nand instrumentation amps.\nTable VI. Some Single-Supply Op Amps\nOp Amp Model Characteristics\nOP281/OP481 Micropower\nOP191/OP291/OP491 I/O Good up to V DD, Low Cost\nOP196/OP296/OP496 I/O to V DD, Micropower, Low Cost\nOP183/OP283 High Gain-Bandwidth Product\nOP162/OP262/OP462 High GBP, Micro PackageAD820/AD822/AD824 FET Input, Low Cost\nAD823 FET Input, High GBP\nREV.  A\nADuC831\n–23–Keep in mind that the ADC’s transfer function is 0 to V REF, and\nany signal range lost to amplifier saturation near ground will\nimpact dynamic range. Though the op amps in Table VI are\ncapable of delivering output signals very closely approaching\nground, no amplifier can deliver signals all the way to ground when\npowered by a single supply. Therefore, if a negative supply isavailable, you might consider using it to power the front end\namplifiers. If you do, however, be sure to include the Schottkydiodes shown in Figure 10 (or at least the lower of the two\ndiodes) to protect the analog input from undervoltage condi-tions.\n To summarize this section, use the circuit of Figure 10 to\ndrive the analog input pins of the ADuC831.\nVoltage Reference Connections\nThe on-chip 2.5 V band gap voltage reference can be used as the\nreference source for the ADC and DACs. To ensure the accu-racy of the voltage reference, you must decouple the V\nREF pin to\nground with a 0.1 µF capacitor and the C REF pin to ground with\na 0.1 µF capacitor as shown in Figure 11.\nBUFFER\nBUFFER 0.1/H9262F0.1/H9262F51/H9024\nVREF\nCREF2.5V\nBAND GAP\nREFERENCEADuC831\nFigure 11. Decoupling V REF and C REF\nIf the internal voltage reference is to be used as a reference forexternal circuitry, the C\nREF output should be used. However, a\nbuffer must be used in this case to ensure that no current is\ndrawn from the C REF pin itself.  The voltage on the C REF pin is\nthat of an internal node within the buffer block, and its voltage\nis critical to ADC and DAC accuracy. On the ADuC812 V REF\nwas the recommended output for the external reference; thiscan be used but it should be noted that there will be a gain errorbetween this reference and that of the ADC.\nThe ADuC831 powers up with its internal voltage reference in\nthe “on” state. This is available at the V\nREF pin, but as noted\nbefore there will be a gain error between this and that of the\nADC. The C REF output becomes available when the ADC is\npowered up.\nIf an external voltage reference is preferred, it should be\nconnected to the V REF and C REF pins as shown in Figure 12.\nBit 6 of the ADCCON1 SFR must be set to 1 to switch in the\nexternal reference voltage.To ensure accurate ADC operation, the voltage applied to V REF\nmust be between 1 V and AV DD.  In situations where analog\ninput signals are proportional to the power supply (such as somestrain gage applications) it may be desirable to connect the C\nREF\nand V REF pins directly to AV DD.\nOperation of the ADC or DACs with a reference voltage below\n1 V, however, may incur loss of accuracy eventually resulting in\nmissing codes or non-monotonicity.  For that reason, do not use\na reference voltage less than 1 V.\nBUFFER\n0.1/H9262F51/H9024\nVREF\nCREF"1" = "0" = INTERNAL\nEXTERNAL\n0.1/H9262F2.5V\nBAND GAP\nREFERENCEADuC831\nADCCON1.6VDD\nEXTERNAL\nVOLTAGE\nREFERENCE\nFigure 12. Using an External Voltage Reference\nTo maintain compatibility with the ADuC812, the externalreference can also be connected to the V\nREF pin as shown in\nFigure 13, to overdrive the internal reference. Note this intro-\nduces a gain error for the ADC that has to be calibrated out,\nthus the previous method is the recommended one for mostusers. For this method to work, ADCCON1.6 should be config-\nured to use the internal reference. The external reference will\nthen overdrive this.\nBUFFER\n0.1/H9262F0.1/H9262F51/H9024\nVREF\nCREF2.5V\nBAND GAP\nREFERENCEADuC831\nEXTERNAL\nVOLTAGE\nREFERENCEVDD\nFigure 13. Using an External Voltage Reference\nREV.  A\n–24–ADuC831\nConfiguring the ADC\nThe ADuC831’s successive approximation ADC is driven by a\ndivided down version of the master clock. To ensure adequate\nADC operation, this ADC clock must be between 400 kHz and\n6 MHz, and optimum performance is obtained with ADC clockbetween 400 kHz and 4.5 MHz. Frequencies within this range\ncan easily be achieved with master clock frequencies from\n400 kHz to well above 16 MHz with the four ADC clock divideratios to choose from. For example, with a 12 MHz master\nclock, set the ADC clock divide ratio to 4 (i.e., ADCCLK =\nMCLK/4 = 3 MHz) by setting the appropriate bits inADCCON1 (ADCCON1.5 = 1, ADCCON1.4 = 0).\nThe total ADC conversion time is 15 ADC clocks, plus 1 ADC\nclock for synchronization, plus the selected acquisition time\n(1, 2, 3, or 4 ADC clocks). For the example above, with threeclocks acquisition time, total conversion time is 19 ADC clocks\n(or 6.3 µs for a 3 MHz ADC clock).\nIn continuous conversion mode, a new conversion begins each\ntime the previous one finishes. The sample rate is then simplythe inverse of the total conversion time described above. In the\nexample above, the continuous conversion mode sample rate\nwould be 157.8 kHz.\nIf using the temperature sensor as the ADC input, the ADC\nshould be configured to use an ADCCLK of MCLK/16 and\nfour acquisition clocks.\nIncreasing the conversion time on the temperature monitor\nchannel improves the accuracy of the reading. To furtherimprove the accuracy, an external reference with low tempera-ture drift should also be used.\nADC DMA Mode\nThe on-chip ADC has been designed to run at a maximumconversion speed of 4 µs (247 kHz sampling rate). When con-\nverting at this rate, the ADuC831 MicroConverter has 4 µs to\nread the ADC result and store the result in memory for furtherpostprocessing, otherwise the next ADC sample could be lost.In an interrupt driven routine the MicroConverter would also\nhave to jump to the ADC Interrupt Service routine, which will\nalso increase the time required to store the ADC results. Inapplications where the ADuC831 cannot sustain the interrupt\nrate, an ADC DMA mode is provided.\nTo enable DMA mode, Bit 6 in ADCCON2 (DMA) must be\nset. This allows the ADC results to be written directly to a16 MByte external static memory SRAM (mapped into data\nmemory space) without any interaction from the ADuC831\ncore. This mode allows the ADuC831 to capture a contiguoussample stream at full ADC update rates (247 kHz).\nA Typical DMA Mode Configuration Example\nTo set the ADuC831 into DMA mode a number of steps must\nbe followed:\n1. The ADC must be powered down. This is done by ensuring\nMD1 and MD0 are both set to 0 in ADCCON1.\n2. The DMA address pointer must be set to the start address of\nwhere the ADC results are to be written. This is done by\nwriting to the DMA mode address pointers DMAL, DMAH,and DMAP. DMAL must be written to first, followed by\nDMAH, and then by DMAP.3.The external memory must be preconfigured. This consists\nof writing the required ADC channel IDs into the top four\nbits of every second memory location in the external SRAM\nstarting at the first address specified by the DMA address\npointer. As the ADC DMA mode operates independent fromthe ADuC831 core, it is necessary to provide it with a stop\ncommand. This is done by duplicating the last channel ID to\nbe converted followed by “1111” into the next channel selec-\ntion field. A typical preconfiguration of external memory is\nas follows.\n11 1 1\n00 1 100 1 1\n100 0\n010 1\n00 1 000000AH\n000000HSTOP COMMAND\nREPEAT LAST CHANNEL\nFOR A VALID STOPCONDITION\nCONVERT ADC CH#3\nCONVERT TEMP SENSOR\nCONVERT ADC CH#5\nCONVERT ADC CH#2\nFigure 14. Typical DMA External Memory Preconfiguration\n4. The DMA is initiated by writing to the ADC SFRs in the\nfollowing sequence:\na.ADCCON2 is written to enable the DMA mode, i.e.,\nMOV ADCCON2, #40H; DMA mode enabled.\nb.ADCCON1 is written to configure the conversion time\n and\npower-up of the ADC. It can also enable Timer 2 driven\nconversions or external triggered conversions if required.\nc.ADC conversions are initiated. This is done by starting\nsingle con versions, starting Timer 2 running for Timer 2\nconversions or by receiving an external trigger.\nWhen the DMA conversions are completed, the ADC interrupt\nbit ADCI, is set by hardware and the external SRAM containsthe new ADC conversion results as shown below. It should be\nnoted that no result is written to the last two memory locations.\nWhen the DMA mode logic is active, it takes the responsibility of\nstoring the ADC results away from both the user and ADuC831core logic. As it writes the results of the ADC conversions to\nexternal memory, it takes over the external memory interface\nfrom the core. Thus, any core instructions that access the externalmemory while DMA mode is enabled will not get access to it.\n The\ncore will execute the instructions and they will take the same timeto execute but they will not gain access to the external memory.\nNO CONVERSION\nRESULT WRITTEN HERE\nCONVERSION RESULTFOR ADC CH#3\nCONVERSION RESULT\nFOR TEMP SENSOR\nCONVERSION RESULT\nFOR ADC CH#5\nCONVERSION RESULTFOR ADC CH#21111\n00110011\n100 0\n010 1\n001000000AH\n000000HSTOP COMMAND\nFigure 15. Typical External Memory Configuration\nPost ADC DMA Operation\nREV.  A\nADuC831\n–25–The DMA logic operates from the ADC clock and uses\npipelining to perform the ADC conversions and access theexternal memory at the same time. The time it takes to perform\none ADC conversion is called a DMA cycle. The actions per-\nformed by the logic during a typical DMA cycle are shown inthe following diagram.\nWRITE ADC RESULT\nCONVERTED DURING\nPREVIOUS DMA CYCLEREAD CHANNEL ID\nTO BE CONVERTED DURING\nNEXT DMA CYCLECONVERT CHANNEL READ DURING PREVIOUS DMA CYCLE\nDMA CYCLE\nFigure 16. DMA Cycle\nFrom the previous diagram, it can be seen that during one DMA\ncycle the following actions are performed by the DMA logic:\n1. An ADC conversion is performed on the channel whose ID\nwas read during the previous cycle.\n2. The 12-bit result and the channel ID of the conversion per-\nformed in the previous cycle is written to the external memory.\n3. The ID of the next channel to be converted is read from\nexternal memory.\nFor the previous example, the complete flow of events is shownin Figure 16. Because the DMA logic uses pipelining, it takes\nthree cycles before the first correct result is written out.\nMicro Operation during ADC DMA Mode\nDuring ADC DMA mode the MicroConverter core is free to\ncontinue code execution, including general housekeeping andcommunication tasks. However, note that MCU core accessesto Ports 0 and 2 (which of course are being used by the DMAcontroller) are gated “OFF” during ADC DMA mode ofoperation. This means that even though the instruction thataccesses the external Ports 0 or 2 will appear to execute, no datawill be seen at these external ports as a result. Note that duringDMA the internally contained XRAM Ports 0 and 2 areavailable for use.\nThe only case in which the MCU will be able to access XRAM\nduring DMA, is when the internal XRAM is enabled and the\nsection of RAM to which the DMA ADC results are being writ-ten to lies in an external XRAM. Then the MCU will be able to\naccess the internal XRAM only. This is also the case for use of\nthe extended stack pointer.\nThe MicroConverter core can be configured with an interrupt to\nbe triggered by the DMA controller when it had finished filling\nthe requested block of RAM with ADC results, allowing theservice routine for this interrupt to postprocess data without anyreal-time timing constraints.ADC Offset and Gain Calibration Coefficients\nThe ADuC831 has two ADC calibration coefficients, one foroffset calibration and one for gain calibration. Both the offset and\ngain calibration coefficients are 14-bit words, and are each stored\nin two registers located in the Special Function Register (SFR)area. The offset calibration coefficient is divided into ADCOFSH\n(six bits) and ADCOFSL (eight bits) and the gain calibration\ncoefficient is divided into ADCGAINH (six bits) and ADCGAINL(eight bits).\nThe offset calibration coefficient compensates for dc offset errors\nin both the ADC and the input signal. Increasing the offset coeffi-\ncient com pensates for positive offset, and effectively pushes the\nADC transfer function down. Decreasing the offset coefficient\ncompensates for negative offset, and effectively pushes the ADC\ntransfer function up. The maximum offset that can be compensatedis typically ±5% of V\nREF, which equates to typically ±125 mV\nwith a 2.5 V reference.\nSimilarly, the gain calibration coefficient compensates for dc gain\nerrors in both the ADC and the input signal. Increasing the gaincoefficient compensates for a smaller analog input signal range\nand scales the ADC transfer function up, effectively increasing\nthe slope of the transfer function. Decreasing the gain coefficient,compensates for a larger analog input signal range and scales the\nADC transfer function down, effectively decreasing the slope of\nthe transfer function. The maximum analog input signal rangefor which the gain coefficient can compensate is 1.025 /H11003 V\nREF\nand the minimum input range is 0. 975 /H11003 VREF which equates\nto typically ±2.5% of the reference voltage.\nCALIBRATING THE ADC\nThere are two hardware calibration modes provided which canbe easily initiated by user software. The ADCCON3 SFR isused to calibrate the ADC. Bit 1 (TYPICAL) and the CS3 to\nCS0 (ADCCON2) set up the calibration modes.\nDevice calibration can be initiated to compensate for significant\nchanges in operating conditions frequency, analog input range,reference voltage and supply voltages. In this calibration mode,\noffset calibration uses internal AGND selected via ADCCON2\nregister bits CS3–CS0 (1011) and gain calibration uses internalV\nREF selected by CS3–CS0 (1100). Offset calibration should be\nexecuted first, followed by gain calibration.\nSystem calibration can be initiated to compensate for both inter-\nnal and external system errors. To perform system calibration\nusing an external reference, tie system ground and reference to\nany two of the six selectable inputs. Enable external reference\nmode (ADCCON1.6). Select the channel connected to AGNDvia CS3–CS0 and perform system offset calibration. Select the\nchannel connected to V\nREF via CS3–CS0 and perform system\ngain calibration.\nThe ADC should be configured to use settings for an ADCCLK\nof divide by 16 and 4 acquisition clocks.\nREV.  A\n–26–ADuC831\nINITIATING CALIBRATION IN CODE\nWhen calibrating the ADC, using ADCCON1 the ADC should\nbe set up into the configuration in which it will be used. The\nADCCON3 register can then be used to set the device up and\ncalibrate the ADC offset and gain.\nMOV ADCCON1,#08CH ;ADC on; ADCCLK set\n;to divide by 16, 4\n;acquisition clock\nTo calibrate device offset:\nMOV ADCCON2,#0BH ;select internal AGNDMOV ADCCON3,#25H ;select offset calibration,\n;31 averages per bit,\n;offset calibration\nTo calibrate device gain:\nMOV ADCCON2,#0CH ;select internal VREF\nMOV ADCCON3,#27H ;select offset calibration,\n;31 averages per bit,\n;offset calibration\nTo calibrate system offset:\nConnect system AGND to an ADC channel input (0).\nMOV ADCCON2,#00H ;select external AGND\nMOV ADCCON3,#25H ;select offset calibration,\n;31 averages per bitTo calibrate system gain:\nConnect system V REF to an ADC channel input (1).\nMOV ADCCON2,#01H ;select external VREF\nMOV ADCCON3,#27H ;select offset calibration,\n;31 averages per bit,;offset calibration\nThe calibration cycle time, T CAL, is calculated by the following\nequation assuming a 16 MHz crystal:\n    T ADCCLK NUMAV TCAL ACQ =× × × +14 16 ()\nFor an ADCCLK/F CORE divide ratio of 16, a T ACQ = 4 ADCCLK,\nNUMAV = 15, the calibration cycle time is:\n    T\nT m sCAL\nCAL=× × × +\n=14 1 1000000 15 16 4\n42(/ ) ( )\n.\nIn a calibration cycle the ADC busy flag (Bit 7), instead of\nframing an individual ADC conversion as in normal mode, willgo high at the start of calibration and only return to zero at the\nend of the calibration cycle. It can therefore be monitored in\ncode to indicate when the calibration cycle is completed. Thefollowing code can be used to monitor the BUSY signal during\na calibration cycle:\nWAIT:\nMOV A, ADCCON3   ;move ADCCON3 to A\nJB ACC.7, WAIT   ;If Bit 7 is set jump to\nWAIT else continue\nREV.  A\nADuC831\n–27–NONVOLATILE FLASH/EE MEMORY\nFlash/EE Memory Overview\nThe ADuC831 incorporates Flash/EE memory technology on-chip\nto provide the user with nonvolatile, in-circuit reprogrammable\ncode, and data memory space. Flash/EE mem ory is a relatively\nrecent type of nonvolatile memory technology and is based on a\nsingle transistor cell architecture.\nThis technology is basically an outgrowth of EPROM technology\nand was developed through the late 1980s. Flash/EE memorytakes the flexible in-circuit reprogrammable features of EEPROM\nand combines them with the space efficient/density features of\nEPROM (see Figure 17).\nBecause Flash/EE technology is based on a single transistor cell\narchitecture, a Flash memory array, like EPROM, can be imple-\nmented to achieve the space efficiencies or memory densities\nrequired by a given design. Like EEPROM, Flash memory canbe programmed in-system at a byte level, although it must first be\nerased; the erase being performed in page blocks. Thus, Flash\nmemory is often and more correctly referred to as Flash/EE memory.\nFLASH/EE MEMORY\nTECHNOLOGYSPACE EFFICIENT/\nDENSITYIN-CIRCUIT\nREPROGRAMMABLEEPROM\nTECHNOLOGYEEPROM\nTECHNOLOGY\nFigure 17. Flash/EE Memory Development\nOverall, Flash/EE memory represents a step closer to the ideal\nmemory device that includes nonvolatility, in-circuit programma-\nbility, high density and low cost. Incorporated in the ADuC831,\nFlash/EE memory technology allows the user to update program\ncode space in-circuit, without the need to replace onetime\nprogrammable (OTP) devices at remote operating nodes.\nFlash/EE Memory and the ADuC831\nThe ADuC831 provides two arrays of Flash/EE memory for user\napplications. 62 kBytes of Flash/EE program space are provided\non-chip to facilitate code execution without any external dis-\ncrete ROM device requirements. The program memory can beprogrammed in-circuit using the serial download mode provided,\nusing conventional third party memory programmers, or via a\nuser defined protocol that can configure it as data if required.\nA 4 kByte Flash/EE data memory space is also provided on- chip.\nThis may be used as a general-purpose nonvolatile scratchpad\narea. User access to this area is via a group of six SFRs. This\nspace can be programmed at a byte level, although it must firstbe erased in 4-byte pages.\nADuC831 Flash/EE Memory Reliability\nThe Flash/EE program and data memory arrays on the ADuC831are fully qualified for two key Flash/EE memory characteristics,namely Flash/EE Memory Cycling Endurance and Flash/EE\nMemory Data Retention.Endurance quantifies the ability of the Flash/EE memory to be\ncycled through many program, read, and erase cycles. In realterms, a single endurance cycle is composed of four indepen-\ndent, sequential events. These events are defined as:\na.Initial page erase sequence\nb. Read/verify sequence A single Flash/EE\nc. Byte program sequence Memoryd.Second read/verify sequence Endurance Cycle\nIn reliability qualification, every byte in both the program and\ndata Flash/EE memory is cycled from 00H to FFH until a firstfail is recorded, signifying the endurance limit of the on-chip\nFlash/EE memory.\nAs indicated in the specification pages of this data sheet, the\nADuC831 Flash/EE Memory Endurance qualification has beencarried out in accordance with JEDEC Specification A117 over\nthe industrial temperature range of –40 °C to +25 °C and +85 °C\nto +125° C. The results allow the specification of a minimum\nendurance figure over supply and temperature of 100,000cycles, with an endurance figure of 700,000 cycles being typical\nof operation at 25 °C.\nRetention quantifies the ability of the Flash/EE memory toretain its programmed data over time. Again, the ADuC831 has\nbeen qualified in accordance with the formal JEDEC Retention\nLifetime Specification (A117) at a specific junction temperature(T\nJ = 55 °C). As part of this qualification procedure, the Flash/EE\nmemory is cycled to its specified endurance limit described abovebefore data retention is characterized. This means that theFlash/EE memory is guaranteed to retain its data for its fullspecified retention lifetime every time the Flash/EE memory is\nreprogrammed. It should also be noted that retention lifetime,\nbased on an activation energy of 0.6 eV, will derate with T\nJ as\nshown in Figure 18.\n40 60 70 90\nTJ JUNCTION TEMPERATURE – CRETENTION – Years250\n200\n150\n100\n50\n0\n50 80 110300\n100ADI SPECIFICATION\n100 YEARS MIN.\nAT TJ = 55 C\nFigure 18. Flash/EE Memory Data Retention\nREV.  A\n–28–ADuC831\nUsing the Flash/EE Program Memory\nThe 62 kByte Flash/EE program memory array is mapped into the\nlower 62 kBytes of the 64 kBytes program space addressable by\nthe ADuC831, and is used to hold user code in typical applications.\nThe program memory Flash/EE memory arrays can be programmed\nin three ways:\n(1)  Serial Downloading (In-Circuit Programming)\nThe ADuC831 facilitates code download via the standard\nUART serial port. The ADuC831 will enter serial download\nmode after a reset or power cycle if the PSEN  pin is pulled low\nthrough an external 1 k /H9024 resistor. Once in serial download\nmode, the user can download code to the full 62 kBytes ofFlash/EE program memory while the device is in circuit in itstarget application hardware.\nA PC serial download executable is provided as part of the ADuC831\nQuickStart development system. The Serial Download protocol\nis detailed in a MicroConverter Applications Note uC004.\n(2)  Parallel Programming\nThe parallel programming mode is fully compatible with con-\nventional third party Flash or EEPROM device programmers.\nIn this mode Ports P0, P1, and P2 operate as the external dataand address bus interface, ALE operates as the Write Enable\nstrobe, and Port P3 is used as a general configuration port that\nconfigures the device for various program and erase operationsduring parallel programming. The high voltage (12 V) supply\nrequired for Flash programming is generated using on-chip charge\npumps to supply the high voltage program lines.\nThe complete parallel programming specification is available on the\nMicroConverter home page at www.analog.com/microconverter.\n(3) User Download Mode (ULOAD)\nIn Figure 19 we can see that it was possible to use the 62 kBytes\nof Flash/EE program memory available to the user as one single\nblock of memory. In this mode all of the Flash/EE memory isread-only to user code.\nHowever, the Flash/EE program memory can also be written to\nduring runtime simply by entering ULOAD mode. In ULOAD\nmode the lower 56 kBytes of program memory can be erasedand reprogrammed by user software as shown in Figure 19.\nULOAD mode can be used to upgrade your code in the field via\nany user defined download protocol. Configuring the SPI porton the ADuC831 as a slave, it is possible to completely repro-\ngram the 56 kBytes of Flash/EE program memory in only\n5 seconds (see uC007).\nAlternatively, ULOAD mode can be used to save data to the\n56 kBytes of Flash/EE memory. This can be extremely useful in\ndata logging applications where the ADuC831 can provide up\nto 60 kBytes of NV data memory on chip (4 kBytes of dedicatedFlash/EE data memory also exist).\nThe upper 6 kBytes of the 62 kBytes of Flash/EE program\nmemory is only programmable via serial download or parallel\nprogramming. This means that this space appears as read onlyto user code. Therefore, it cannot be accidentally erased or\nreprogrammed by erroneous code execution. This makes it very\nsuitable to use the 6 kBytes as a bootloader. A Bootload Enableoption exists in the serial downloader to “Always RUN from E000hafter Reset.” If using a bootloader, this option is recommendedto ensure that the bootloader always executes the correct codeafter reset.\nProgramming the Flash/EE program memory via ULOAD\nmode is described in more detail in the description of ECON\nand also in technical note uC007.\nFFFFH\nE000H\nDFFFH\n0000HUSER BOOTLOADER SPACE\nTHE USER BOOTLOADER SPACE\nCAN BE PROGRAMMED IN\nDOWNLOAD/DEBUG MODE VIA THE\nKERNEL BUT IS READ ONLY WHEN\nEXECUTING USER CODE6 kBYTEF800H\nF7FFH\nUSER DOWNLOAD SPACE\nEITHER THE DOWNLOAD/DEBUG\nKERNEL OR USER CODE (IN\nULOAD MODE) CAN PROGRAM\nTHIS SPACE.EMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n62 kBYTES OF ON-CHIP PROGRAM MEMORY. THE\nKERNEL PROGRAM APPEARS AS \'NOP\' INSTRUC-\nTIONS TO USER CODE.\n56 kBYTE2 kBYTE\n62 kBYTES\nOF USER\nCODE\nMEMORY\nFigure 19. Flash/EE Program Memory Map in\nULOAD Mode\nFlash/EE Program Memory Security\nThe ADuC831 facilitates three modes of Flash/EE program\nmemory security. These modes can be independently acti-\nvated, restricting access to the internal code space. Thesesecurity modes can be enabled as part of serial downloadprotocol as described in technical note uC004 or via parallel\nprogramming. The security modes available on the ADuC831\nare described as follows:\nLock Mode\nThis mode locks the code memory, disabling parallel program-\nming of the program memory. However, reading the memory in\nparallel mode and reading the memory via a MOVC commandfrom external memory is still allowed. This mode is deactivated\nby initiating a code-erase command in serial download or parallel\nprogramming modes.\nSecure Mode\nThis mode locks code in memory, disabling parallel programming\n(program and verify/read commands) as well as disabling the\nexecution of a ‘MOVC’ instruction from external memory, whichis attempting to read the op codes from internal memory. Read/\nWrite of internal data Flash/EE from external memory is also\ndisabled. This mode is deactivated by initiating a code-erasecommand in serial download or parallel programming modes.\nSerial Safe Mode\nThis mode disables serial download capability on the device. IfSerial Safe mode is activated and an attempt is made to resetthe part into serial download mode, i.e., RESET asserted and\nde-asserted with PSEN  low, the part will interpret the serial\ndownload reset as a normal reset only. It will therefore not enter\nserial download mode but only execute a normal reset sequence.\nSerial Safe mode can only be disabled by initiating a code-erase\ncommand in parallel programming mode.\nREV.  A\nADuC831\n–29–USING THE FLASH/EE DATA MEMORY\nThe 4 kBytes of Flash/EE data memory is configured as 1024\npages, each of four bytes. As with the other ADuC831 peripherals,\nthe interface to this memory space is via a group of registers mapped\nin the SFR space. A group of four data registers (EDATA1–4)are used to hold the four bytes of data at each page. The page is\naddressed via the two registers EADRH and EADRL. Finally,\nECON is an 8-bit control register that may be written with oneof nine Flash/EE memory access commands to trigger various\nread, write, erase, and verify functions.\nA block diagram of the SFR interface to the Flash/EE data\nmemory array is shown in Figure 20.\nECON—Flash/EE Memory Control SFR\nProgramming of either the Flash/EE data memory or the Flash/EE\nprogram memory is done through the Flash/EE memory control\nSFR (ECON). This SFR allows the user to read, write, erase, orverify the 4 kBytes of Flash/EE data memory or the 56 kBytes of\nFlash/EE program memory.BYTE 1\n(0000H)\nEDATA1 SFRBYTE 1\n(0004H)BYTE 1\n(0008H)BYTE 1\n(000CH)BYTE 1\n(0FF8H)BYTE 1\n(0FFCH)\nBYTE 2\n(0001H)\nEDATA2 SFRBYTE 2\n(0005H)BYTE 2\n(0009H)BYTE 2\n(000DH)BYTE 2\n(0FF9H)BYTE 2\n(0FFDH)\nBYTE 3\n(0002H)\nEDATA3 SFRBYTE 3\n(0006H)BYTE 3\n(000AH)BYTE 3\n(000EH)BYTE 3\n(0FFAH)BYTE 3\n(0FFEH)\nBYTE 4\n(0003H)\nEDATA4 SFRBYTE 4\n(0007H)BYTE 4\n(000BH)BYTE 4\n(000FH)BYTE 4\n(0FFBH)BYTE 4\n(0FFFH)\n01H\n00H02H03H3FEH3FFHPAGE ADDRESS\n(EADRH/L)\nBYTE\nADDRESSES\nARE GIVEN IN\nBRACKETS\nFigure 20. Fl ash/EE Data Memory Control and Configu ration\nTable VII. ECON—Flash/EE Memory Commands\nCOMMAND DESCRIPTION COMMAND DESCRIPTION\nECON VALUE (NORMAL MODE) (Power-On Default) (ULOAD MODE)\n01H Results in 4 bytes in the Flash/EE data memory, Not Implemented. Use the MOVC instruction.READ addressed by the page address EADRH/L, being read\ninto EDATA1–4.\n02H\nResults in four bytes in EDATA 1–4 being written to Results in bytes 0-255 of internal XRAM being written\nWRITE the Flash/EE data memory, at the page address given by to the 256 bytes of Flash/EE program memory at the\nEADRH/L (0 ≤ EADRH/L < 0400H. page address given by EADRH. (0 ≤ EADRH < E0H)\nNote: The four bytes in the page being addressed must N ote: The 256 bytes in the page being addressed must\nbe pre-erased. be pre-erased.\n03H Reserved Command Reserved Command\n04H Verifies if the data in EDATA1–4 is contained in the Not Implemented. Use the MOVC and MOVX\nVERIFY page address given by EADRH/L. A subsequent read instructions to verify the WRITE in software.\nof the ECON SFR will result in a 0 being read if the\nverification is valid, or a nonzero value being read toindicate an invalid verification.\n05H Results in the Erase of the 4-byte page of Flash/EE data R esults in the 64-byte page of Flash/EE program\nERASE PAGE mem ory addressed by the page address EADRH/L. memory, addressed by the byte address EADRH/L\nbeing erased. EADRL can equal any of 64 locations\nwithin the page. A new page starts whenever EADRL\nis equal to 00H, 40H, 80H, or C0H.\n06H Results in the erase of entire 4 kBytes of Flash/EE Results in the Erase of the entire 56 kBytes of ULOAD\nERASE ALL data memory. Flash/EE program memory.\n81H Results in the byte in the Flash/EE data memory, Not Implemented. Use the MOVC command.\nREADBYTE addressed by the byte address EADRH/L, being read\ninto EDATA1. (0 ≤ EADRH/L ≤ 0FFFH).\n82H Results in the byte in EDATA1 being written into Results in the byte in EDATA1 being written into\nWRITEBYTE Flash/EE data memory, at the byte address EADRH/L. Flash/EE program memory, at the byte address\nEADRH/L (0 ≤ EADRH/L ≤  DFFFH).\n0FH Leaves the ECON instructions to operate on the Enters NORMAL mode directing subsequent ECON\nEXULOAD Flash/EE data memory. instructions to operate on the Flash/EE data memory.\nF0H Enters ULOAD mode, directing subsequent ECON Leaves the ECON instructions to operate on the\nULOAD instructions to operate on the Flash/EE program memory. Flash/EE program memory.\nREV.  A\n–30–ADuC831\nExample: Programming the Flash/EE Data Memory\nA user wishes to program F3H into the second byte on Page\n03H of the Flash/EE data memory space while preserving the\nother three bytes already in this page.\nA typical program of the Flash/ EE Data array will involve:\n1) setting EADRH/L with the page address\n2) writing the data to be programmed to the EDATA1–4\n3)writing the ECON SFR with the appropriate command\nStep 1: Set Up the Page Address\nThe two address registers EADRH and EADRL hold the high\nbyte address and the low byte address of the page to beaddressed. The assembly language to set up the address may\nappear as:\nMOV EADRH,#0 ; Set Page Address Pointer\nMOV EADRL,#03H\nStep 2: Set Up the EDATA Registers\nWe must now write the four values to be written into the pageinto the four SFRs EDATA–14. Unfortunately, we do not knowthree of them. Thus, we must read the current page and over-\nwrite the second byte.\nMOV ECON,#1 ; Read Page into EDATA1-4\nMOV EDATA2,#0F3H ; Overwrite byte 2\nStep 3: Program Page\nA byte in the Flash/EE array can only be programmed if it has\npreviously been erased. To be more specific, a byte can only be\nprogrammed if it already holds the value FFH. Because of theFlash/EE architecture, this erase must happen at a page level;therefore, a minimum of four bytes (one page) will be erased\nwhen an erase command is initiated. Once the page is erased we\ncan program the four bytes in-page and then perform a verificationof the data.\nMOV ECON,#5 ; ERASE Page\nMOV ECON,#2 ; WRITE Page\nMOV ECON,#4 ; VERIFY Page\nMOV A,ECON ; Check if ECON=0 (OK!)JNZ ERROR\nAlthough the 4 kBytes of Flash/EE data memory are shipped\nfrom the factory pre-erased, i.e., byte locations set to FFH, it is\nnonethe less good programming practice to include an erase-all\nroutine as part of any configuration/setup code running on the\nADuC831. An “ERASE-ALL” command consists of writing\n“06H” to the ECON SFR, which initiates an erase of the\n4 kByte Flash/EE array. This command coded in 8051 assembly\nwould appear as:\nMOV ECON,#06H ; Erase all Command\n; 2ms DurationFlash/EE Memory Timing\nTypical program and erase times for the ADuC831 are asfollows:\nNORMAL MODE (operating on Flash/EE data memory)\nREADPAGE (4 bytes)\n– 5 machine cycles\nWRITEPAGE (4 bytes) –\n380 µs\nVERIFYPAGE (4 bytes) – 5 machine cycles\nERASEPAGE (4 bytes) –\n2 ms\nERASEALL (4 kBytes) –\n2 ms\nREADBYTE (1 byte) – 3 machine cycle\nWRITEBYTE (1 byte) –\n200 µs\nULOAD MODE (operating on Flash/EE program memory)\nWRITEPAGE (256 bytes) –\n15 ms\nERASEPAGE (64 bytes) – 2\nms\nERASEALL (56 kBytes) – 2\nms\nWRITEBYTE (1 byte) –\n200 µs\nIt should be noted that a given mode of operation is initiated as\nsoon as the command word is written to the ECON SFR. The\ncore microcontroller operation on the ADuC831 is idled until therequested Program/Read or Erase mode is completed.\nIn practice, this means that even though the Flash/EE memory\nmode of operation is typically initiated with a two-machine cycle\nMOV instruction (to write to the ECON SFR), the next instruc-\ntion will not be executed until the Flash/EE operation is  complete.\nThis means that the core will not respond to interrupt requests\nuntil the Flash/EE operation is complet e, although the core\nperipheral functions like counter/timers will continue to count\nand time as configured throughout this period.\nREV.  A\nADuC831\n–31–ADuC831 Configuration SFR (CFG831)\nThe CFG831 SFR contains the necessary bits to configure the\ninternal XRAM, EPROM controller, PWM output selection\nand frequency, DAC buffer,  and the extended SP. By default it\nconfigures the user into 8051 mode, i.e., extended SP is disabled,internal XRAM is disabled.\nCFG831 ADuC831 Config SFR\nSFR Address AFHPower-On Default Value 10* H\nBit Addressable No\nTable VIII. CFG831 SFR Bit Designations\nBit Name Description\n7 EXSP Extended SP Enable.\nWhen set to “1” by the user, the stack will rollover from SPH/SP = 00FFH to 0100H.\nWhen set to “0” by the user, the stack will roll over from SP = FFH to SP = 00H.\n6 PWPO PWM Pin Out Selection.\nSet to “1” by the user = PWM output pins selected as P3.4 and P3.3.Set to “0” by the user = PWM output pins selected as P2.6 and P2.7.\n5 DBUF DAC Output Buffer.\nSet to “1” by the user = DAC\n. Output Buffer Bypassed.\nSet to “0” by the user = DAC Output Buffer Enabled.\n4 EPM2 Flash/EE Controller and PWM Clock Frequency Configuration Bits.\n3 EPM1 Frequency should  be configured such that Fosc/Divide Factor = 32 kHz + 50%.\n2 EPM0 EPM2 EPM1 EPM0 Divide Factor\n00 0 3 2\n00 1 6 4\n01 0 128\n01 1 256\n10 0 512\n10 1 1024\n1 RSVD Reserved. This bit should always contain 0.\n0 XRAMEN XRAM Enable Bit.\nWhen set to “1” the internal XRAM will be mapped into the lower 2 kBytes of the external address space.\nWhen set to “0” the internal XRAM will not be accessible and the external data memory will be mapped\ninto the lower 2 kBytes of external data memory.\n*Note that the Flash/EE controller bits EPM2, EPM1, EPM0 are set to their\ncorrect values depending on the crystal frequency at power-up. The user should\nnot modify these bits so all instructions to the CFG831 register should use theORL, XRL, or ANL instructions. Value of 10H is for a 11.0592 MHz crystal.\nREV.  A\n–32–ADuC831\nUSER INTERFACE TO OTHER ON-CHIP ADuC831\nPERIPHERALS\nThe following section gives a brief overview of the various\nperipherals also available on-chip. A summary of the SFRs\nused to control and configure these peripherals is also given.\nDAC\nThe ADuC831 incorporates two 12-bit, voltage output DACs\non-chip. Each has a rail-to-rail voltage output buffer capable of\ndriving 10 kΩ /100 pF. Each has two selectable ranges, 0 V to\nVREF (the internal band gap 2.5 V reference) and 0 V to AV DD.\nEach can operate in 12-bit or 8-bit mode. Both DACs share acontrol register, DACCON, and four data registers, DAC1H/L,DAC0H/L. It should be noted that in 12-bit asynchronousmode, the DAC voltage output will be updated as soon as theDACL data SFR has been written; therefore, the DAC data\nregisters should be updated as DACH first, followed by DACL.\nNote: for correct DAC operation on the 0 to V\nREF range, the\nADC must be switched on. This results in the DAC using the\ncorrect reference value.\nDACCON DAC Control Register\nSFR Address FDH\nPower-On Default Value 04H\nBit Addressable No\nTable IX. DACCON SFR Bit Designations\nBit Name Description\n7 MODE The DAC MODE bit sets the overriding operating mode for both DACs.\nSet to “1” = 8-Bit Mode (Write 8 Bits to DACxL SFR).\nSet to “0”= 12-Bit Mode.\n6 RNG1 DAC1 Range Select Bit.\nSet to “1” = DAC1 Range 0–V DD.\nSet to “0” = DAC1 Range 0–V REF.\n5 RNG0 DAC0 Range Select Bit.\nSet to “1” = DAC0 Range 0–V DD.\nSet to “0” = DAC0 Range 0–V REF.\n4 CLR1 DAC1 Clear Bit.\nSet to “0” = DAC1 Output Forced to 0 V.Set to “1” = DAC1 Output Normal.\n3 CLR0 DAC0 Clear Bit.\nSet to “0” = DAC1 Output Forced to 0 V.\nSet to “1” = DAC1 Output Normal.\n2 SYNC DAC0/1 Update Synchronization Bit.\nWhen set to “1” the DAC outputs update as soon as DACxL SFRs are written. The user cansimultaneously update both DACs by first updating the DACxL/H SFRs while SYNC is “0.” Both\nDACs will then update simultaneously when the SYNC bit is set to “1.”\n1 PD1 DAC1 Power-Down Bit.\nSet to “1” = Power-On DAC1.\nSet to “0” = Power-Off DAC1.\n0 PD0 DAC0 Power-Down Bit.\nSet to “1” = Power-On DAC0.\nSet to “0” = Power-Off DAC0.\nDACxH/L DAC Data Registers\nFunction DAC Data Registers, written by user to update the DAC output.\nSFR Address DAC0L (DAC0 Data Low Byte)   F9H; DAC1L (DAC1 Data Low Byte)  FBH\nDAC0H (DAC0 Data High Byte)   FAH; DAC1H(DAC1 Data High Byte)   FCH\nPower-On Default Value 00H   All four Registers\nBit Addressable No   All four Registers\nThe 12-bit DAC data should be written into DACxH/L right-justified such that DACxL contains the lower eight bits, and the lower\nnibble of DACxH contains the upper four bits.\nREV. A\nADuC831\n–33–Using the DAC\nThe on-chip DAC architecture consists of a resistor string DAC\nfollowed by an output buffer amplifier, the functional equivalentof which is illustrated in Figure 21. Details of the actual DAC\narchitecture can be found in U.S. Patent Number 5969657\n(www.uspto.gov). Features of this architecture include inherentguaranteed monotonicity and excellent differential linearity.\nOUTPUT\nBUFFER\nHIGH Z\nDISABLE\n(FROM MCU)DAC0\nRR\nRR\nRADuC831AVDD\nVREF\nFigure 21. Resistor String DAC Functional Equivalent\nAs illustrated in Figure 21, the reference source for each DAC is\nuser selectable in software. It can be either AV DD or V REF.  In\n0-to-AV DD mode, the DAC output transfer function spans from\n0 V to the voltage at the AV DD pin. In 0-to-V REF mode, the\nDAC output transfer function spans from 0 V to the internal\nVREF, or if an external reference is applied, the voltage at the\nVREF pin. The DAC output buffer amplifier features a true rail-\nto-rail output stage implementation. This means that, unloaded,each output is capable of swinging to within less than 100 mV ofboth AV\nDD and ground. Moreover, the DAC’s linearity specifi-\ncation (when driving a 10 k Ω resistive load to ground) is\nguaranteed  through the full transfer function except codes 0 to100, and, in 0-to-AV\nDD mode only, codes 3945 to 4095. Linear-\nity degradation near ground and V DD is caused by saturation of\nthe output amplifier, and a general representation of its effects(neglecting offset and gain error) is illustrated in Figure 22. The\ndotted line in Figure 22 indicates the ideal transfer function,\nand the solid line represents what the transfer function mightlook like with endpoint nonlinearities due to saturation of the\noutput amplifier. Note that Figure 22 represents a transfer\nfunction in 0-to-V\nDD mode only. In 0-to-V REF mode (with V REF\n< V DD) the lower nonlinearity would be similar, but the upper\nportion of the transfer function would follow the “ideal” lineright to the end (V\nREF in this case, not V DD), showing no signs\nof endpoint linearity errors.VDD\nVDD –50mV\nVDD –100mV\n100mV\n50mV\n0mV\n000H FFFH\nFigure 22. Endpoint Nonlinearities Due to Amplifier\nSaturation\nThe end point nonlinearities conceptually illustrated in Figure22 get worse as a function of output loading. Most of the\nADuC831’s data sheet specifications assume a 10 k Ω resistive\nload to ground at the DAC output. As the output is forced to\nsource or sink more current, the nonlinear regions at the top or\nbottom (respectively) of Figure 22 become larger. With larger\ncurrent demands, this can significantly limit output voltageswing. Figure 23 and Figure 24 illustrate this behavior. It\nshould be noted that the upper trace in each of these figures is\nonly valid for an output range selection of 0-to-AV\nDD. In 0-to-\nVREF mode, DAC loading will not cause highside voltage drops\nas long as the reference voltage remains below the upper trace inthe corresponding figure. For example, if AV\nDD = 3 V and V REF\n= 2.5 V, the highside voltage will not be affected by loads lessthan 5 mA. But somewhere around 7 mA the upper curve in\nFigure 24 drops below 2.5 V (V\nREF) indicating that at these\nhigher currents the output will not be capable of reaching V REF.\nSOURCE/SINK CURRENT – mA5\n05 1 0 15OUTPUT VOLTAGE – V4\n3\n2\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\nFigure 23. Source and Sink Current Capability with\nVREF = V DD = 5 V\nREV.  A\n–34–ADuC831\nSOURCE/SINK CURRENT – mA3\n05 1 0 15OUTPUT VOLTAGE – V2\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\nFigure 24. Source and Sink Current Capability with\nVREF = V DD = 3 V\nTo reduce the effects of the saturation of the output amplifier at\nvalues close to ground and to give reduced offset and gain errors,\nthe internal buffer can be bypassed. This is done by setting theDBUF bit in the CFG831 register. This allows a full rail-to-railoutput from the DAC which should then be  buffered externallyusing a dual supply op-amp in order to get a rail-to-rail output.This external buffer should be located as near as physicallypossible to the DAC output pin on the PCB. Note the unbuffedmode only works in the 0 to V\nREF range.To drive significant loads with the DAC outputs, external buff-ering may be required  (even with the internal buffer enabled),as illustrated in Figure 25. A list of recommended op-amps is inTable VI.\nADuC831DAC0\nDAC1\nFigure 25. Buffering the DAC Outputs\nThe DAC output buffer also features a high-impedance disable\nfunction. In the chip’s default power-on state, both DACs aredisabled, and their outputs are in a high-impedance state (or\n“three-state”) where they remain inactive until enabled in software.\nThis means that if a zero output is desired during power-up or\npower-down transient conditions, then a pull-down resistor must\nbe added to each DAC output. Assuming this resistor is in place,\nthe DAC outputs will remain at ground potential whenever theDAC is disabled.\nREV.  A\nADuC831\n–35–Table X. PWMCON SFR Bit Designations\nBit Name Description\n7 SNGL Turns Off PWM output at P2.6 or P3.4 Leaving Port Pin Free for Digital I/O.\n6 MD2 PWM Mode Bits\n5 MD1 The MD2/1/0 bits choose the PWM mode as follows:\n4 MD0 MD2 MD1 MD0 Mode\n000M ode 0: PWM Disabled\n001M ode 1: Single variable resolution PWM on P2.7 or P3.3\n010M ode 2: Twin 8-bit PWM\n011M ode 3: Twin 16-bit PWM\n100M ode 4: Dual NRZ 16-bit Σ-∆ DAC\n101M ode 5: Dual 8-bit PWM\n110M ode 6: Dual RZ 16-bit Σ-∆ DAC\n111R eserved for future use\n3C DIV1 PWM Clock Divider\n2C DIV0 Scale the clock source for the PWM counter as shown below:\nCDIV1 CDIV0 Description\n00PWM Counter = Selected Clock/101PWM Counter = Selected Clock/4\n10PWM Counter = Selected Clock/16\n11PWM Counter = Selected Clock/64\n1 CSEL1 PWM Clock Divider\n0 CSEL0 Select the clock source for the PWM as shown below:\nCSEL1 CSEL0 Description00PWM Clock = f\nOCS/DIVIDE FACTOR /15 (see CFG831 register)\n01PWM Clock = f OCS/DIVIDE FACTOR  (see CFG831 register)\n10PWM Clock = External input at P3.4/T0\n11PWM Clock = f OSCPULSEWIDTH MODULATOR (PWM)\nThe PWM on the ADuC831 is highly flexible PWM offeringprogrammable resolution and input clock, and can be config-\nured for any one of six different modes of operation. Two of\nthese modes allow the PWM to be configured as a /H9018-/H9004 DAC\nwith up to 16 bits of resolution. A block diagram of the PWM is\nshown in Figure 26.\nCLOCK\nSELECTPROGRAMMABLE\nDIVIDER\nCOMPARE\nMODE PWM0H/L PWM1H/LfOSC\nT0/ EXTERNAL PWM CLOCK\nfOSC /DIVIDE FACTOR/15\nP2.6\nP2.716-BIT PWM COUNTERfOSC /DIVIDE FACTOR\nFigure 26. PWM Block DiagramThe PWM uses five SFRs: the control SFR (PWMCON),  and\nfour data SFRs (PWM0H, PWM0L, PWM1H, and PWM1L).PWMCON (as described below) controls the different modes of\noperation of the PWM as well as the PWM clock frequency.\nPWM0H/L and PWM1H/L are the data registers that determinethe duty cycles of the PWM outputs. The output pins that the\nPWM uses are determined by the CFG831 register and they can\nbe either P2.6 and P2.7 or P3.4 and P3.3. In this section of thedata sheet, it is assumed that P2.6 and P2.7 are selected as the\nPWM outputs.\nTo use the PWM user software, first write to PWMCON to select\nthe PWM mode of operation and the PWM input clock. Writingto PWMCON also resets the PWM counter. In any of the 16-bit\nmodes of operation (modes 1, 3, 4, 6), user software should\nwrite to the PWM0L or PWM1L SFRs first. This value is writtento a hidden SFR. Writing to the PWM0H or PWM1H SFRs\nupdates both the PWMxH and the PWMxL SFRs but does not\nchange the outputs until the end of the PWM cycle in progress.The values written to these 16-bit registers are then used in the\nnext PWM cycle.\nPWMCON PWM Control SFR\nSFR Address AEH\nPower-On Default Value 00H\nBit Addressable No\nREV. A\n–36–ADuC831\nPWM MODES OF OPERATION\nMODE 0: PWM Disabled\nThe PWM is disabled, allowing P2.6 and P2.7 to be used as\nnormal.\nMODE 1: Single Variable Resolution PWM\nIn Mode 1, both the pulse length and the cycle time (period) areprogrammable in user code, allowing the resolution of the PWMto be variable.\nPWM1H/L sets the period of the output waveform. Reducing\nPWM1H/L reduces the resolution of the PWM output but\nincreases the maximum output rate of the PWM.\n(For example, setting PWM1H/L to 65536 gives a 16-bit PWM\nwith a maximum output rate of 244 Hz (16 MHz/65536). Setting\nPWM1H/L to 4096 gives a 12-bit PWM with a maximum output\nrate of 3906 Hz (16 MHz/4096).)\nPWM0H/L sets the duty cycle of the PWM output waveform, as\nshown in the diagram below.\nP2.7PWM COUNTERPWM1H/L\n0PWM0H/L\nFigure 27.  ADuC831 PWM in Mode 1\nMODE 2: Twin 8-Bit PWM\nIn Mode 2, the duty cycle of the PWM outputs and the resolution\nof the PWM outputs are both programmable. The maximum\nresolution of the PWM output is eight bits.\nPWM1L sets the period for both PWM outputs. Typically, this\nwill be set to 255 (FFH) to give an 8-bit PWM, although it is\npossible to reduce this as necessary. A value of 100 could be\nloaded here to give a percentage PWM (i.e., the PWM isaccurate to 1%).\nThe outputs of the PWM at P2.6 and P2.7 are shown in the\ndiagram below. As can be seen, the output of PWM0 (P2.6) goes\nlow when the PWM counter equals PWM0L. The output ofPWM1 (P2.7) goes high when the PWM counter equals PWM1H,\nand goes low again when the PWM counter equals PWM0H.\nSetting PWM1H to 0 ensures that both PWM outputs startsimultaneously.P2.7P2.6PWM COUNTER\nPWM1H\n0PWM1L\nPWM0H\nPWM0L\nFigure 28.  PWM Mode 2\nMODE 3: Twin 16-Bit PWM\nIn Mode 3, the PWM counter is fixed to count from 0 to 65536giving a fixed 16-bit PWM. Operating from the 16 MHz core clock\nresults in a PWM output rate of 244 Hz. The duty cycle of the\nPWM outputs at P2.6 and P2.7 are independently programmable.\nAs shown in Figure 29, while the PWM counter is less than\nPWM0H/L, the output of PWM0 (P2.6) is high. Once the PWM\ncounter equals PWM0H/L, then PWM0 (P2.6) goes low and\nremains low until the PWM counter rolls over.\nSimilarly while the PWM counter is less than PWM1H/L, the\noutput of PWM1 (P2.7) is high. Once the PWM counter equals\nPWM1H/L, then PWM1 (P2.7) goes low and remains low until\nthe PWM counter rolls over.\nIn this mode, both PWM outputs are synchronized. Once the\nPWM counter rolls over to 0, both PWM0 (P2.6) and PWM1(P2.7) will go high.\nP2.7P2.6PWM COUNTER\nPWM1H/L\n065536\nPWM0H/L\nFigure 29. PWM Mode 3\nREV.  A\nADuC831\n–37–MODE 4: Dual NRZ 16-Bit /H9018-/H9004 DAC\nMode 4 provides a high speed PWM output similar to that of a\n/H9018-/H9004 DAC. Typically, this mode will be used with the PWM\nclock equal to 16 MHz.\nIn this mode P2.6 and P2.7 are updated every PWM clock\n(62 ns in the case of 16 MHz). Over any 65536 cycles (16 bitPWM) PWM0 (P2.6) is high for PWM0H/L cycles and low for\n(65536 - PWM0H/L) cycles. Similarly PWM1 (P2.7) is high for\nPWM1H/L cycles and low for (65536 - PWM1H/L) cycles.\nFor example, if PWM1H was set to 4010H (slightly above one\nquarter of FS) then typically P2.7 will be low for three clocks\nand high for one clock (each clock is approximately 80 ns). Over\nevery 65536 clocks the PWM will compensate for the fact thatthe output should be slightly above one quarter of full scale by\nhaving a high cycle followed by only two low cycles.\n16MHz16-BIT\n62/H9262s016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P2.6PWM0H/L = C000H\nPWM1H/L = 4000H00 1 000LATCH0111 11 0\n62/H9262s\nCARRY OUT AT P2.7\nFigure 30.  PWM Mode 4\nFor faster DAC outputs (at lower resolution) write 0s to the\nLSBs that are not required. If for example only 12-bit perfor-\nmance is required then write 0s to the 4LSBs. This means that a\n12-bit accurate Σ-∆ DAC output can occur at 3.906 kHz. Simi-\nlarly, writing 0s to the 8 LSBs gives an 8-bit accurate Σ-∆ DAC\noutput at 62 kHz.\nMODE 5: Dual 8-Bit PWM\nIn Mode 5, the duty cycle of the PWM outputs and the resolu-tion of the PWM outputs are individually programmable. The\nmaximum resolution of the PWM output is eight bits. The\noutput resolution is set by the PWM1L and PWM1H SFRs forthe P2.6 and P2.7 outputs, respectively. PWM0L and PWM0H\nsets the duty cycles of the PWM outputs at P2.6 and P2.7, respec-tively. Both PWMs have same clock source and clock divider.P2.7P2.6PWM COUNTERS\nPWM1H\n0PWM1L\nPWM0HPWM0L\nFigure 31.  PWM Mode 5\nMODE 6: Dual RZ 16-Bit /H9018-/H9004 DAC\nMode 6 provides a high speed PWM output similar to that of a/H9018-/H9004 DAC. Mode 6 operates very similarly to Mode 4. However,\nthe key difference is that Mode 6 provides return to zero (RZ)\n/H9018-/H9004 DAC output. Mode 4 provides non-return-to-zero /H9018-/H9004 DAC\noutputs. The RZ mode ensures that any difference in the rise\nand fall times will not effect the /H9018-/H9004 DAC INL. However, the\nRZ mode halves the dynamic range of the /H9018-/H9004 DAC outputs\nfrom 0–AV DD down to 0–AV DD/2. For best results, this mode\nshould be used with a PWM clock divider of four.\nIf PWM1H was set to 4010H (slightly above one quarter of\nFS), then typically P2.7 will be low for three full clocks (3 /H11003\n62 ns),  high for half a clock (31 ns) and then low again for half\na clock (31 ns) before repeating itself. Over every 65536 clocksthe PWM will compensate for the fact that the output should beslightly above one quarter of full scale by leaving the outputhigh for two half clocks in four every so often.\n4MHz16-BIT\n248/H9262s016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P2.6PWM0H/L = C000H\nPWM1H/L = 4000H00 1 000LATCH0111 11 0\n248/H9262s\nCARRY OUT AT P2.70, 3/4, 1/2, 1/4, 0\nFigure 32.  PWM Mode 6\nREV.  A\n–38–ADuC831\nSERIAL PERIPHERAL INTERFACE\nThe ADuC831 integrates a complete hardware Serial Peripheral\nInterface (SPI) on-chip. SPI is an industry standard syn chronous\nserial interface that allows eight bits of data to be synchronously\ntransmitted and received simultaneously, i.e., full duplex.\nIt should be noted that the SPI pins are shared with the I2C\ninterface pins. T herefore, the user can only enable one or the\nother interface at any given time (see SPE in Table XI b elow).\nThe SPI Port can be configured for Master or Slave op eration,\nand typically consists of four pins, namely:\nMISO (Master In, Slave Out Data I/O Pin)\nThe MISO (master in slave out) pin is configured as an inputline in master mode and an output line in slave mode. The MISO\nline on the master (data in) should be connected to the MISO\nline in the slave device (data out). The data is transferred asbyte wide (8-bit) serial data, MSB first.\nMOSI (Master Out, Slave In Pin)\nThe MOSI (master out slave in) pin is configured as an output line\nin master mode and an input line in slave mode. The MOSI\nline on the master (data out) should be connected to the MOSI\nline in the slave device (data in). The data is transferred as byte\nwide (8-bit) serial data, MSB first.\nSCLOCK (Serial Clock I/O Pin)\nThe master serial clock (SCLOCK) is used to synchronize the\ndata being transmitted and received through the MOSI and MISOdata lines. A single data bit is transmitted and received in each\nSCLOCK period. Therefore, a byte is transmitted/receivedafter eight SCLOCK periods. The SCLOCK pin is configured as\nan output in master mode and as an input in slave mode. In master\nmode the bit-rate, polarity and phase of the clock are controlled bythe CPOL, CPHA, SPR0, and SPR1 bits in the SPICON SFR\n(see Table XI). In slave mode the SPICON register will have to\nbe configured with the phase and polarity (CPHA and CPOL) of\nthe ex pected input clock. In both master and slave modes, the data\nis transm itted on one edge of the SCLOCK signal and sampled\non the other. It is important therefore, that the CPHA and CPOL\nare configured the same for the master and slave devices.\nSlave Select Input Pin ( SS)\nThe Slave Select ( SS) input pin is shared with the ADC5 input.\nIn order to configure this pin as a digital input, the bit must becleared, e.g., CLR P1.5.\nThis line is active low. Data is only received or transmitted in slave\nmode when the SS pin is low, allowing the ADuC831 to be used\nin single master, multislave SPI configurations. If CPHA = 1 then the\nSS input may be permanently pulled low. With CPHA = 0, the SS\ninput must be driven low before the first bit in a byte wide transmis-sion or reception and return high again after the last bit in that bytewide transmission or reception. In SPI slave mode, the logic level on\nthe external SS pin can be read via the SPR0 bit in the SPICON SFR.\nThe following SFR registers are used to control the SPI inter face.\nSPICON SPI Control Register\nSFR Address F8H\nPower-On Default Value OOH\nBit Addressable Yes\nTable XI. SPICON SFR Bit Designations\nBit Name Description\n7 ISPI SPI Interrupt Bit.\nSet by MicroConverter at the end of each SPI transfer.\nCleared directly by user code or indirectly by reading the SPIDAT SFR.\n6 WCOL Write Collision Error Bit.\nSet by MicroConverter if SPIDAT is written to while an SPI transfer is in progress.Cleared by user code.\n5 SPE SPI Interface Enable Bit.\nSet by user to enable the SPI interface.Cleared by user to enable the I\n2C interface.\n4 SPIM SPI Master/Slave Mode Select Bit.\nSet by user to enable Master Mode operation (SCLOCK is an output).Cleared by user to enable Slave Mode operation (SCLOCK is an input).\n3 CPOL Clock Polarity Select Bit.\nSet by user if SCLOCK idles high.Cleared by user if SCLOCK idles low.\n2 CPHA Clock Phase Select Bit.\nSet by user if leading SCLOCK edge is to transmit data.Cleared by user if trailing SCLOCK edge is to transmit data.\n1 SPR1 SPI Bit-Rate Select Bits.\n0 SPR0 These bits select the SCLOCK rate (bit-rate) in Master Mode as follows:\nSPR1 SPR0 Selected Bit Rate\n00f\nOSC/2\n01f OSC/4\n10f OSC/8\n11f OSC/16\nIn SPI S lave Mode, i.e., SPIM = 0, the logic level on the external SS pin can be read via the SPR0 bit.\nThe CPOL and CPHA bits should both contain the same values for master and slave devices.\nREV. A\nADuC831\n–39–SPIDAT SPI Data Register\nFunction The SPIDAT SFR is written by the user to transmit data over the SPI interface or read by user code to\nread data just received by the SPI interface.\nSFR Address F7HPower-On Default Value 00HBit Addressable No\nSPI Interface—Master Mode\nIn master mode, the SCLOCK pin is always an output and gener-\nates a burst of eight clocks whenever user code writes to the\nSPIDAT register. The S CLOCK bit rate is determined by\nSPR0 and SPR1 in SPICON. It should also be noted that the\nSS pin is not used in master mode. If the ADuC831 needs to\nassert the SS pin on an external slave device, a port digital output\npin should be used.\nIn master mode, a byte transmission or reception is initiatedby a write to SPIDAT. Eight clock periods are generated via the\nSCLOCK pin and the SPIDAT byte being transmitted via MOSI.\nWith each SCLOCK period a data bit is also sampled via MISO.\nAfter eight clocks, the transmitted byte will have been com pletely\ntransmitted and the input byte will be waiting in the input shift\nregister. The ISPI flag will be set automatically and an interrupt\nwill occur if enabled. The value in the shift register will be latched\ninto SPIDAT.\nSPI Interface—Slave Mode\nIn slave mode the SCLOCK is an input. The SS pin must\nalso be driven low externally during the byte communication.\nTransmission is also initiated by a write to SPIDAT. In slave\nmode, a data bit is transmitted via MISO and a data bit is re ceived\nvia MOSI through each input SCLOCK period. After eight clocks,\nthe transmitted byte will have been completely transmitted and the\ninput byte will be waiting in the input shift register. The ISPI flag\nwill be set automatically and an interrupt will occur if enabled.\nThe value in the shift register will be latched into SPIDAT only\nwhen the transmission/reception of a byte has been completed.\nThe end of transmission occurs after the eighth clock has beenreceived if CPHA = 1, or when SS returns high if CPHA = 0.Using the SPI Interface\nDepending on the configuration of the bits in the SPICON SFR\nshown in Table XI, the ADuC831 SPI interface will transmit or\nreceive data in a number of possible modes. Figure 33 shows allpossible ADuC831 SPI configurations and the timing relation-\nships and synchronization between the signals involved. Also\nshown in this figure is the SPI interrupt bit (ISPI) and how it istriggered at the end of each byte-wide communication.\nSCLOCK\n(CPOL = 1)\nSCLOCK\n(CPOL = 0)\n(CPHA = 1)\n(CPHA = 0)SAMPLE INPUTISPI FLAG\nDATA OUTPUT\nISPI FLAGSAMPLE INPUT\nDATA OUTPUT ?\nMSB BIT 6 BIT 5 ? BIT 4 BIT 3 BIT 2 BIT 1 LSBMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSBSS\nFigure 33. SPI Timing, All Modes\nREV.  A\n–40–ADuC831\nI2C COMPATIBLE INTERFACE\nThe ADuC831 supports a fully licensed* I2C serial interface. The\nI2C interface is implemented as a full hardware slave and software\nmaster. SDATA is the data I/O pin and SCLOCK is the serial\nclock. These two pins are shared with the MOSI and SCLOCK pinsof the on-chip SPI interface. Therefore, the user can only enableone or the other interface at any given time (see SPE in SPICONpreviously). Application Note uC001 describes the operation\nof this interface as implemented, and is available from the\nMicroConverter website at www.analog.com/microconverter.\nThree SFRs are used to control the I\n2C interface. These are described below:\nI2CCON I2C Control Register\nSFR Address E8HPower-On Default Value 00H\nBit Addressable Yes\nTable XII. I2CCON SFR Bit Designations\nBit Name Description\n7 MDO I2C Software Master Data Output Bit (Master Mode Only). This data bit is used to implement a\nmaster I2C transmitter interface in software. Data written to this bit will be output on the SDATA\npin if the data output enable (MDE) bit is set.\n6 MDE I2C Software Master Data Output Enable Bit (Master Mode Only). Set by user to enable the SDATA\npin as an output (Tx). Cleared by the user to enable SDATA pin as an input (Rx).\n5 MCO I2C Software Master Clock Output Bit (Master Mode Only). This data bit is used to implement a master\nI2C transmitter interface in software. Data written on this bit will be output on the SCLOCK pin.\n4 MDI I2C Software Master Data Input Bit (Master Mode Only). This data bit is used to implement a master\nI2C receiver interface in software. Data on the SDATA pin is latched into this bit on SCLOCK if\nthe Data Output Enable (MDE) bit is ‘0.’\n3 I2CM I2C Master/Slave Mode Bit. Set by user to enable I2C software master mode. Cleared by user to\nenable I2C hardware slave mode.\n2 I2CRS I2C Reset Bit (Slave Mode Only). Set by user to reset the I2C interface. Cleared by user code for\nnormal I2C operation.\n1I 2CTX I2C Direction Transfer Bit (Slave Mode Only). Set by the MicroConverter if the interface is\ntransmitting. Cleared by the MicroConverter if the interface is receiving.\n0 I2CI I2C Interrupt Bit (Slave Mode Only). Set by the MicroConverter after a byte has been transmitted\nor received. Cleared automatically when user code reads the I2CDAT SFR (see I2CDAT below).\nI2CADD I2C Address Register\nFunction Holds the I2C peripheral address for the part. It may be overwritten by user code. Technical Note uC001\nat www.analog.com/microconverter describes the format of the I2C standard 7-bit address in detail.\nSFR Address 9BHPower-On Default Value 55H\nBit Addressable No\nI2CDAT I2C Data Register\nFunction The I2CDAT SFR is written by the user to transmit data over the I2Cinterface or read by user code to\nread d ata just received by the I2C interface. Accessing I2CDAT automatically clears any pending I2C\ninterrupt and the I2CI bit in the I2C CON SFR. User software should only access I2CDAT once per\ninterrupt cycle.\nSFR Address 9AH\nPower-On Default Value 00HBit Addressable No\n*Purchase of licensed I2C components of Analog Devices or one of its sublicensed Associated Companies conveys a license for the purchaser under the Philips I2C\nPatent Rights to use the ADuC831 in an I2C system, provided that the system conforms to the I2C Standard Specification as defined by Philips.\nREV. A\nADuC831\n–41–The main features of the MicroConverter I2C interface are:\n•Only two bus lines are required; a serial data line (SDATA)\nand a serial clock line (SCLOCK).\n•An I2C master can communicate with multiple slave devices.\nBecause each slave device has a unique 7-bit address, single\nmaster/slave relationships can exist at all times even in\na multislave environment (Figure 34).\n•On-Chip filtering rejects <50 ns spikes on the SDATA andthe SCLOCK lines to preserve data integrity.\nDVDD\nI2C\nMASTERI2C\nSLAVE #1\nI2C\nSLAVE #2\nFigure 34. Typical I2C System\nSoftware Master Mode\nThe ADuC831 can be used as an I2C master device by configur-\ning the I2C peripheral in master mode and writing software to\noutput the data bit by bit. This is referred to as a software master.Master mode is enabled by setting the I2CM bit in the I2CCON\nregister.\nTo transmit data on the SDATA line, MDE must be set to\nenable the output driver on the SDATA pin. If MDE is set, thenthe SDATA pin will be pulled high or low depending onwhether the MDO bit is set or cleared. MCO controls the\nSCLOCK pin and is always configured as an output in master\nmode. In master mode the SCLOCK pin will be pulled high orlow depending on the whether MCO is set or cleared.\nTo receive data, MDE must be cleared to disable the output\ndriver on SDATA. Software must provide the clocks by toggling\nthe MCO bit and read the SDATA pin via the MDI bit. If MDEis cleared MDI can be used to read the SDATA pin. The value of\nthe SDATA pin is latched into MDI on a rising edge of SCLOCK.\nMDI is set if the SDATA pin was high on the last rising edge ofSCLOCK. MDI is cleared if the SDATA pin was low on the last\nrising edge of SCLOCK.\nSoftware must control MDO, MCO, and MDE appropriately to\ngenerate the START condition, slave address, acknowledge bits,data bytes, and STOP conditions appropriately. These functions\nare provided in technical note uC001.\nHardware Slave Mode\nAfter reset the ADuC831 defaults to hardware slave mode. The\nI2C interface is enabled by clearing the SPE bit in SPICON.\nSlave mode is enabled by clearing the I2CM bit in I2CCON.The ADuC831 has a full hardware slave. In slave mode the I\n2C\naddress is stored in the I2CADD register. Data received or to be\ntransmitted is stored in the I2CDAT register.Once enabled in I2C slave mode the slave controller waits for a\nSTART condition. If the ADuC831 detects a valid start condi-\ntion, followed by a valid address, followed by the R/ W bit, the\nI2CI interrupt bit will get set by the hardware automatically.\nThe I2C peripheral will only generate a core interrupt if the user\nhas preconfigured the I2C interrupt enable bit in the IEIP2 SFR\nas well as the global interrupt bit EA in the IE SFR.\n; Enabling I2C Interrupts for the ADuC831\nMOV  IEIP2,#01H     ; enable I2C interrupt\nSETB EA\nOn the ADuC831 an autoclear of the I2CI bit is implemented\nso this bit is cleared automatically on a read or write access tothe I2CDAT SFR.\nMOV     I2CDAT, A   ; I2CI auto cleared\nMOV     A, I2CDAT   ; I2CI auto cleared\nIf for any reason the user tries to clear the interrupt more than\nonce, i.e., access the data SFR more than once per interrupt\nthen the I2C controller will halt. The interface will then have to\nbe reset using the I2CRS bit.\nThe user can choose to poll the I2CI bit or enable the interrupt.\nIn the case of the interrupt, the PC counter will vector to\n003BH at the end of each complete byte. For the first byte\nwhen the user gets to the I2CI ISR, the 7-bit address and theR/W bit will appear in the I2CDAT SFR.\nThe I2CTX bit contains the R/ W bit sent from the master. If\nI2CTX is set then the master would like to receive a byte.Thus the slave will transmit data by writing to the I2CDATregister. If I2CTX is cleared, the master would like to transmita byte. Therefore, the slave will receive a serial byte. Software\ncan interrogate the state of I2CTX to determine whether it\nshould write to or read from I2CDAT.\nOnce the ADuC831 has received a valid address, hardware will\nhold SCLOCK low until the I2CI bit is cleared by software.\nThis allows the master to wait for the slave to be ready before\ntransmitting the clocks for the next byte.\nThe I2CI interrupt bit will be set every time a complete data\nbyte is received or transmitted, provided it is followed by a valid\nACK. If the byte is followed by a NACK an interrupt is NOT\ngenerated. The ADuC831 will continue to issue interrupts foreach complete data byte transferred until a STOP condition is\nreceived or the interface is reset.\nWhen a STOP condition is received, the interface will reset to a\nstate where it is waiting to be addressed (idle). Similarly, if theinterface receives a NACK at the end of a sequence it also returns\nto the default idle state. The I2CRS bit can be used to reset the\nI\n2C interface. This bit can be used to force the interface back to\nthe default idle state.\nIt should be noted that there is no way (in hardware) to distinguish\nbetween an interrupt generated by a received START + valid\naddress and an interrupt generated by a received data byte. User\nsoftware must be used to distinguish between these interrupts.\nREV.  A\n–42–ADuC831\nTable XIII. DPCON SFR Bit Designations\nBit Name Description\n7 ---- Reserved for Future Use.\n6 DPT Data Pointer Automatic Toggle Enable.\nCleared by user to disable auto swapping of the DPTR.\nSet in user software to enable automatic toggling of the DPTR after each MOVX or MOVC instruction.\n5D P1m1 Shadow Data Pointer Mode.\n4D P1m0 These two bits enable extra modes of the shadow data pointer operation, allowing for more compact\nand more efficient code size and execution.m1         m0          Behavior of the Shadow Data Pointer\n00 8052 Behavior\n01 DPTR is post-incremented after a MOVX or a MOVC instruction.\n10 DPTR is post-decremented after a MOVX or MOVC instruction.\n11 DPTR LSB is toggled after a MOVX or MOVC instruction.\n(This instruction can be useful for moving 8-bit blocks to/from 16-bit devices.)\n3D P0m1 Main Data Pointer Mode.\n2D P0m0 These two bits enable extra modes of the main data pointer operation, allowing for more compact and\nmore efficient code size and execution.m1 m0 Behavior of the Main Data Pointer\n00 8052 Behavior\n01 DPTR is post-incremented after a MOVX or a MOVC instruction.\n10 DPTR is post-decremented after a MOVX or MOVC instruction.\n11 DPTR LSB is toggled after a MOVX or MOVC instruction.(This instruction can be useful for moving 8-bit blocks to/from 16-bit devices.)\n1T his bit is not implemented to allow the INC DPCON instruction toggle the data pointer without\nincrementing the rest of the SFR.\n0 DPSEL Data Pointer Select.\nCleared by user to select the main data pointer. This means that the contents of this 24-bit register\nis placed into the three SFRs DPL, DPH, and DPP.\nSet by the user to select the shadow data pointer. This means that the contents of a separate 24-bit\nregister appears in the three SFRs DPL, DPH, and DPP.DUAL DATA POINTER\nThe ADuC831 incorporates two data pointers. The second data\npointer is a shadow data pointer and is selected via the data\npointer control SFR (DPCON). DPCON also includes some\nnice features such as automatic hardware post-increment andpost-decrement as well as automatic data pointer toggle.\nDPCON is described in Table XIII.DPCON Data Pointer Control SFR\nSFR Address A7H\nPower-On Default Value 00H\nBit Addressable No\nNote 1: This is the only place where the main and shadow data\npointers are distinguished. Everywhere else in this data sheet\nwherever the DPTR is mentioned, operation on the activeDPTR is implied.\nNote 2: Only MOVC/MOVX @DPTR instructions are relevant\nabove. MOVC/MOVX PC/@Ri instructions will not cause the\nDPTR to automatically post increment/decrement, and so on.\nTo illustrate the operation of DPCON, the following code will\ncopy 256 bytes of code memory at address D000H into XRAM\nstarting from address 0000H.\nThe following code uses 16 bytes and 2054 cycles. To perform\nthis on a standard 8051 requires approximately 33 bytes and7172 cycles (depending on how it is implemented).MOV DPTR,#0 ; Main DPTR = 0\nMOV DPCON,#55H ; Select shadow DPTR\n; DPTR1 increment mode,; DPTR0 increment mode; DPTR auto toggling ON\nMOV DPTR,#0D000H ; Shadow DPTR = D000H\nMOVELOOP:\nCLR AMOVC A,@A+DPTR ; Get data\n; Post Inc DPTR; Swap to Main DPTR (Data)\nMOVX @DPTR,A ; Put ACC in XRAM\n; Increment main DPTR; Swap Shadow DPTR (Code)\nMOV A, DPLJNZ MOVELOOP\nREV.  A\nADuC831\n–43–PSMCON Power Supply Monitor Control Register\nSFR Address DFH\nPower-On Default Value DEH\nBit Addressable No\nTable XIV. PSMCON SFR Bit Designations\nBit Name Description\n7 ---- Reserved.\n6 CMPD DV DD Comparator Bit.\nThis is a read-only bit and directly reflects the state of the DV DD comparator.\nRead “1” indicates the DV DD supply is above its selected trip point.\nRead “0” indicates the DV DD supply is below its selected trip point.\n5 PSMI Power Supply Monitor Interrupt Bit.\nThis bit will be set high by the MicroConverter if either CMPA or CMPD is low, indicating low analog\nor digital supply. The PSMI bit can be used to interrupt the processor. Once CMPD and /or CMPA\nreturn (and remain) high, a 250 ms counter is started. When this counter times out, the PSMI interrupt\nis cleared. PSMI can also be written by the user. However, if either com parator output is low, it is\nnot possible for the user to clear PSMI.\n4 TPD1 DV DD Trip Point Selection Bits.\n3 TPD0 These bits select the DV DD trip point voltage as follows:\nTPD1 TPD0 Selected DV DD Trip Point (V)\n00 4.37\n01 3.08\n10 2.93\n11 2.63\n2 ---- Reserved.\n1 ---- Reserved.\n0 PSMEN Power Supply Monitor Enable Bit.\nSet to “1” by the user to enable the Power Supply Monitor Circuit.\nCleared to “0” by the user to disable the Power Supply Monitor Circuit.POWER SUPPLY MONITOR\nAs its name suggests, the Power Supply Monitor, once enabled,monitors the DV\nDD supply on the ADuC831. It will indicate\nwhen any of the supply pins drops below one of four user-selectable voltage trip points, from 4.63 V to 4.39 V. Forcorrect operation of the Power Supply Monitor function, AV\nDD\nmust be equal to or greater than 2.7 V. Monitor function iscontrolled via the PSMCON SFR. If enabled via the IEIP2 SFR,the monitor will interrupt the core using the PSMI bit in thePSMCON SFR. This bit will not be cleared until the failing powersupply has returned above the trip point for at least 250 ms. This\nmonitor function allows the user to save working registers to\navoid possible data loss due to the low supply condition, and alsoensures that normal code execution will not resume until a safe\nsupply level has been well established. The supply monitor is also\nprotected against spurious glitches triggering the interrupt circuit.\nREV.  A\n–44–ADuC831\nWDCON Watchdog Timer Control Register\nSFR Address C0H\nPower-On Default Value 10H\nBit Addressable Yes\nTable XV. WDCON SFR Bit Designations\nBit Name Description\n7 PRE3 Watchdog Timer Prescale Bits.\n6 PRE2 The Watchdog timeout period is given by the equation: t WD = (2PRE /H11003 (29/fR/C OSC ))\n5 PRE1 (0 ≤  PRE ≤ 7; f R/C OSC  = 32 kHz /H1100610% at 25ºC)\n4 PRE0 PRE3 PRE2 PRE1 PRE0 Timeout Period (ms) Action\n000 0 15.6 Reset or Interrupt\n000 1 31.2 Reset or Interrupt\n001 0 62.5 Reset or Interrupt\n001 1 125 Reset or Interrupt\n010 0 250 Reset or Interrupt\n010 1 500 Reset or Interrupt\n011 0 1000 Reset or Interrupt\n011 1 2000 Reset or Interrupt\n100 0 0.0 Immediate Reset\nPRE3–0 > 1000 Reserved\n3 WDIR Watchdog Interrupt Response Enable Bit.\nIf this bit is set by the user, the watchdog will generate an interrupt response instead of a\nsystem reset when the watchdog timeout period has expired. This interrupt is not disabled by\nthe CLR EA instruction and it is also a fixed, high-priority interrupt. If the watchdog is not\nbeing used to monitor the system, it can alternatively be used as a timer. The prescaler is used\nto set the timeout period in which an interrupt will be generated.\n2 WDS Watchdog Status Bit.\nSet by the Watchdog Controller to indicate that a watchdog timeout has occurred.\nCleared by writing a “0” or by an external hardware reset. It is not cleared by a watchdog reset.\n1 WDE Watchdog Enable Bit.\nSet by the user to enable the watchdog and clear its counters. If this bit is not set by the userwithin the watch dog timeout period, the watchdog will generate a reset or interrupt, depending\non WDIR. Cleared under the following conditions, user writes “0,” Watchdog Reset (WDIR = “0”);\nHardware Reset; PSM Interrupt.\n0 WDWR Watchdog Write Enable Bit.\nTo write data into the WDCON SFR involves a double instruction sequence. The WDWR bit\nmust be set and the very next instruction must be a write instruction to the WDCON SFR.For example:\nCLREA ;disable interrupts while writing\n;to WDT\nSETB WDWR ;allow write to WDCON\nMOV WDCON, #72H ;enable WDT for 2.0s timeout\nSETB EA ;enable interrupts again (if rqd)WATCHDOG TIMER\nThe purpose of the watchdog timer is to generate a devicereset or interrupt within a reasonable amount of time if the\nADuC831 enters an erroneous state, possibly due to a program-ming error or electrical noise. The watchdog function can bedisabled by clearing the WDE (Watchdog Enable) bit in the\nWatchdog Control (WDCON) SFR. When enabled, the watch-\ndog circuit will generate a system reset or interrupt (WDS) ifthe user program fails to set the watchdog (WDE) bit within apredetermined amount of time (see PRE3–0 bits in WDCON).\nThe watchdog timer itself is a 16-bit counter that is clocked at\n32 kHz by the internal R/C oscillator. The watchdog time outinterval can be adjusted via the PRE3–0 bits in WDCON. Full\ncontrol and status of the watchdog timer function can be con-\ntrolled via the watchdog timer control SFR (WDCON). TheWDCON SFR can only be written by user software if the\ndouble write sequence described in WDWR below is initiated\non every write access to the WDCON SFR.\nREV.  A\nADuC831\n–45–TIME INTERVAL COUNTER (TIC)\nA time interval counter is provided on-chip for counting longer\nintervals than the standard 8051 compatible timers are capable\nof. The TIC is capable of timeout intervals ranging from 1/128\nsecond to 255 hours. Furthermore, this counter is clocked byan internal R/C oscillator rather than the external crystal and\nhas the ab ility to remain active in power-down mode and time\nlong power-down intervals. This has obvious applications for\nremote battery-powered sensors where regular widely spaced\nreadings are required. The R/C oscillator is accurate to \n+10% at\n25ºC. Note: Instructions to the TIC SFRs are also clocked at\n32 kHz, sufficient time must be allowed for in user code for\nthese instructions to execute.\nSix SFRs are associated with the time interval counter, TI MECON\nbeing its control register. Depending on the configuration of the\nIT0 and IT1 bits in TIMECON, the selected time counter regis-\nter overflow will clock the interval counter. When this counter is\nequal to the time interval value loaded in the INTVAL SFR, the\nTII bit (TIMECON.2) is set and generates an interrupt if enabled.\nIf the ADuC831 is in power-down mode, again with TIC inter-\nrupt enabled, the TII bit w ill wake up the device and resume\ncode execution by vectoring directly to the TIC interrupt service\nvector address at 0053H. The TIC-related SFRs are described\nbelow. Note also that the time-base SFRs can be written initially\nwith the current time, the TIC can then be controlled and\naccessed by user software. In effect, this facilitates the imple-\nmentation of a real-time clock. A block diagram of the TIC isshown in Figure 35.\nTIMECON TIC Control Register\nSFR Address A1H\nPower-On Default Value 00HBit Addressable No\n Table XVI. TIMECON SFR Bit Designations\nBit Name Description\n7 ---- Reserved for Future Use.\n6 TFH Twenty-Four Hour Select Bit.\nSet by the user to enable the Hour counter to count from 0 to 23.\nCleared by the user to enable the Hour counter to count from 0 to 255.\n5 ITS1 Interval Timebase Selection Bits.\n4 ITS0 Written by user to determine the interval counter update rate.\nITS1 ITS0 Interval Timebase\n00 1/128 Second\n01 Seconds\n10 Minutes\n11 Hours\n3 STI Single Time Interval Bit.\nSet by user to generate a single interval timeout. If set, a timeout will clear the TIEN bit.Cleared by user to allow the interval counter to be automatically reloaded and start countingagain at each interval timeout.\n2 TII TIC Interrupt Bit.\nSet when the 8-bit Interval Counter matches the value in the INTVAL SFR.Cleared by user software.\n1 TIEN Time Interval Enable Bit.\nSet by user to enable the 8-bit time interval counter.Cleared by user to disable the interval counter.\n0 TCEN Time Clock Enable Bit.\nSet by user to enable the time clock to the time interval counters.Cleared by user to disable the clock to the time interval counters and reset the time interval SFRs\nto the last value written to them by the user. The time registers (HTHSEC, SEC, MIN, and HOUR)\ncan be written while TCEN is low.8-BIT\nPRESCALER\nHUNDREDTHS COUNTER\nHTHSEC\nSECOND COUNTER\nSEC\nMINUTE COUNTER\nMIN\nHOUR COUNTER\nHOURTIEN\nINTERVAL TIMEOUT\nTIME INTERVAL COUNTER INTERRUPT8-BIT\nINTERVAL COUNTER\nTIME INTERVAL\nINTVALINTERVAL\nTIMEBASE\nSELECTION\nMUXTCEN 32kHz INTERNAL R/C OSC.\nITS0, 1\nCOMPARE\nCOUNT = INTVAL?\nFigure 35. TIC, Simplified Block Diagram\nREV.  A\n–46–ADuC831\nINTVAL User Time Interval Select Register\nFunction User code writes the required time interval to this register. When the 8-bit interval counter is\nequal to the time interval value loaded in the INTVAL SFR, the TII bit (TIMECON.2) is\nset and generates an interrupt if enabled.\nSFR Address A6HPower-On Default Value 00H\nBit Addressable No\nValid Value 0 to 255 decimal\nHTHSEC Hundredths Seconds Time Register\nFunction This register is incremented in 1/128 second intervals once TCEN in TIMECON is active. TheHTHSEC SFR counts from 0 to 127 before rolling over to increment the SEC time register.\nSFR Address A2H\nPower-On Default Value 00H\nBit Addressable NoValid Value 0 to 127 decimal\nSEC Seconds Time Register\nFunction This register is incremented in 1-second intervals once TCEN in TIMECON is active.The SEC SFR counts from 0 to 59 before rolling over to increment the MIN time register.\nSFR Address A3HPower-On Default Value 00HBit Addressable No\nValid Value 0 to 59 decimal\nMIN Minutes Time Register\nFunction This register is incremented in 1-minute intervals once TCEN in TIMECON is active.The MIN counts from 0 to 59 before rolling over to increment the HOUR time register.\nSFR Address A4H\nPower-On Default Value 00H\nBit Addressable No\nValid Value 0 to 59 decimal\nHOUR Hours Time Register\nFunction This register is incremented in 1-hour intervals once TCEN in TIMECON is active.The HOUR SFR counts from 0 to 23 before rolling over to 0.\nSFR Address A5H\nPower-On Default Value 00H\nBit Addressable No\nValid Value 0 to 23 decimal\nREV.  A\nADuC831\n–47–8052 COMPATIBLE ON-CHIP PERIPHERALS\nThis section gives a brief overview of the various secondary\nperipheral circuits that are also available to the user on-chip.\nThese remaining functions are mostly 8052 compatible (with a\nfew additional features) and are controlled via standard 8052SFR bit definitions.\nParallel I/O\nThe ADuC831 uses four input/output ports to exchange datawith external devices. In addition to performing general-purposeI/O, some ports are capable of external memory operations while\nothers are multiplexed with alternate functions for the peripheral\nfeatures on the device. In general, when a peripheral is enabled,that pin may not be used as a general-purpose I/O pin.\nPort 0\nPort 0 is an 8-bit, open-drain, bidirectional I/O port that is directlycontrolled via the Port 0 SFR. Port 0 is also the multiplexedlow-order address and data bus during accesses to external pro-\ngram or data memory.\nFigure 36 shows a typical bit latch and I/O buffer for a Port 0\nport pin. The bit latch (one bit in the port’s SFR) is representedas a Type D flip-flop, which will clock in a value from the inter-\nnal bus in response to a “write to latch” signal from the CPU.\nThe Q output of the flip-flop is placed on the internal bus inresponse to a “read latch” signal from the CPU. The level of the\nport pin itself is placed on the internal bus in response to a\n“read pin” signal from the CPU. Some instructions that read aport activate the “read latch” signal, and others activate the\n“read pin” signal. See the following Read-Modify-Write Instruc-\ntions section for more details.\nCONTROL\nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCHDVDD ADDR/DATA\nP0.x\nPIN\nFigure 36. Port 0 Bit Latch and I/O Buffer\nAs shown in Figure 36, the output drivers of Port 0 pins are\nswitchable to an internal ADDR and ADDR/DATA bus by an\ninternal CONTROL signal for use in external memory accesses.\nDuring external memory accesses the P0 SFR gets 1s written to it(i.e., all of its bit latches become 1). When accessing external\nmemory, the CONTROL signal in Figure 36 goes high, enabling\npush-pull operation of the output pin from the internal address ordata bus (ADDR/DATA line). Therefore, no external pull-ups are\nrequired on Port 0 in order for it to access external memory.In general-purpose I/O port mode, Port 0 pins that have 1s written\nto them via the Port 0 SFR will be configured as “open drain”and will therefore float. In this state, Port 0 pins can be used as\nhigh impedance inputs. This is represented in Figure 36 by the\nNAND gate whose output remains high as long as the CONTROLsignal is low, thereby disabling the top FET. External pull-up\nresistors are therefore required when Port 0 pins are used as\ngeneral-purpose outputs. Port 0 pins with 0s written to themwill drive a logic low output voltage (V\nOL) and will be capable of\nsinking 1.6 mA.\nPort 1\nPort 1 is also an 8-bit port directly controlled via the P1 SFR.Port 1 digital output capability is not supported on this device.\nPort 1 pins can be configured as digital inputs or analog inputs.\nBy (power-on) default these pins are configured as analog\ninputs, i.e., 1 written in the corresponding Port 1 register bit.To configure any of these pins as digital inputs, the user should\nwrite a 0 to these port bits to configure the corresponding pin as\na high impedance digital input.\nThese pins also have various secondary functions described in\nTable XVII.\nTable XVII. Port 1, Alternate Pin Functions\nPin Alternate Function\nP1.0 T2 (Timer/Counter 2 External Input)\nP1.1 T2EX (Timer/Counter 2 Capture/Reload Trigger)\nP1.5 SS (Slave Select for the SPI Interface)\nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCH\nP1.x\nPINTO ADC\nFigure 37. Port 1 Bit Latch and I/O Buffer\nPort 2\nPort 2 is a bidirectional port with internal pull-up resistors\ndirectly controlled via the P2 SFR. Port 2 also emits the high\norder address bytes during fetches from external program memory\nand middle and high order address bytes during accesses to the24-bit external data memory space.\nAs shown in Figure 38, the output drivers of Ports 2 are switchable\nto an internal ADDR and ADDR/DATA bus by an internal\nCONTROL signal for use in external memory accesses (as forPort 0). In external memory addressing mode (CONTROL = 1)\nthe port pins feature push-pull operation controlled by the inter-\nnal address bus (ADDR line). However, unlike the P0 SFR\nduring external memory accesses, the P2 SFR remains unchanged.\nREV.  A\n–48–ADuC831\nIn general-purpose I/O port mode, Port 2 pins that have 1s written\nto them are pulled high by the internal pull-ups (Figure 39) and,in that state, they can be used as inputs. As inputs, Port 2 pins\nbeing pulled externally low will source current because of the\ninternal pull-up resistors. Port 2 pins with 0s written to themwill drive a logic low output voltage (V\nOL) and will be capable of\nsinking 1.6 mA.\nP2.6 and P2.7 can also be used as PWM outputs. In the case that\nthey are selected as the PWM outputs via the CFG831 SFR, thePWM outputs will overwrite anything written to P2.6 or P2.7.\nCONTROLREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCHDVDDADDR\nP2.x\nPINDVDD\nINTERNAL\nPULL-UP*\n*SEE FIGURE 39 FOR\nDETAILS OF INTERNAL PULL-UP\nFigure 38. Port 2 Bit Latch and I/O Buffer\nQ\nFROM\nPORT\nLATCH2 CLK\nDELAYQ1DVDD\nQ2DVDD\nQ3DVDD\nPx.x\nPINQ4\nFigure 39. Internal Pull-Up Configuration\nPort 3\nPort 3 is a bidirectional port with internal pull-ups directly con-\ntrolled via the P3 SFR. Port 3 pins that have 1s written to them\nare pulled high by the internal pull-ups, and in that state, can beused as inputs. As inputs, Port 3 pins being pulled externally lowwill source current because of the internal pull-ups. Port 3 pins\nwith 0s written to them will drive a logic low output voltage (V\nOL)\nand will be capable of sinking 4 mA.\nPort 3 pins also have various secondary functions described in\nTable XVIII. The alternate functions of Port 3 pins can only be\nactivated if the corresponding bit latch in the P3 SFR contains a 1.\nOtherwise, the port pin is stuck at 0.\nTable XVIII. Port 3, Alternate Pin Functions\nPin Alternate Function\nP3.0 RxD (UART Input Pin) (or Serial Data I/O in Mode 0)\nP3.1 TxD (UART Output Pin)\n(or Serial Clock Output in Mode 0)\nP3.2 INT0  (External Interrupt 0)\nP3.3 INT1  (External Interrupt 1)/PWM 1/MISO\nP3.4 T0 (Timer/Counter 0 External Input)\nPWM External Clock/PWM 0\nP3.5 T1 (Timer/Counter 1 External Input)\nP3.6 WR (External Data Memory Write Strobe)\nP3.7 RD (External Data Memory Read Strobe)\nP3.4 and P2.3 can also be used as PWM outputs. In the case that\nthey are selected as the PWM outputs via the CFG831 SFR, the\nPWM outputs will overwrite anything written to P3.4 or P3.3.READ\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCHDVDD\nP3.x\nPININTERNAL\nPULL-UP*\n*SEE FIGURE 39\nFOR DETAILS OF\nINTERNAL PULL-UPALTERNATE\nOUTPUT\nFUNCTION\nALTERNATE\nINPUT\nFUNCTION\nFigure 40. Port 3 Bit Latch and I/O Buffer\nAdditional Digital I/O\nIn addition to the port pins, the dedicated SPI/I2C pins\n(SCLOCK and SDATA/MOSI) also feature both input and\noutput functions. Their equivalent I/O architectures are illus-\ntrated in Figure 41 and Figure 43, respectively, for SPI\noperation and in Figure 42 and Figure 44 for I2C operation.\nNotice that in I2C mode (SPE = 0) the strong pull-up FET\n(Q1) is disabled, leaving only a weak pull-up (Q2) present. By\ncontrast, in SPI mode (SPE = 1) the strong pull-up FET (Q1)\nis controlled directly by SPI hardware, giving the pin push/pullcapability.\nIn I\n2C mode (SPE = 0) two pull-down FETs (Q3 and Q4)\noperate in parallel in order to provide an extra 60% or 70% of\ncurrent sinking capability. In SPI mode (SPE = 1), however,only one of the pull-down FETs (Q3) operates on each pinresulting in sink capabilities identical to that of Port 0 and\nPort 2 pins.\nOn the input path of SCLOCK, notice that a Schmitt trigger\nconditions the signal going to the SPI hardware to prevent falsetriggers (double triggers) on slow incoming edges. For incoming\nsignals from the SCLOCK and SDATA pins going to I\n2C hard-\nware, a filter conditions the signals in order to reject glitches of\nup to 50 ns in duration.\nNotice also that direct access to the SCLOCK and SDATA/MOSI\npins is afforded through the SFR interface in I2C master mode.\nTherefore, if you are not using the SPI or I2C functions, you can\nuse these two pins to give additional high current digital outputs.\nHARDWARE SPI\n(MASTER/SLAVE)\nQ3SCHMITT\nTRIGGERQ1\nQ2 (OFF)DVDD\nSCLOCK\nPIN\nQ4 (OFF)SPE = 1 (SPI ENABLE)\nFigure 41. SCLOCK Pin I/O Functional Equivalent\nin SPI Mode\nREV.  A\nADuC831\n–49–MCO\nI2CMSFR\nBITS50ns GLITCH\nREJECTION FILTERHARDWARE I2C\n(SLAVE ONLY)\nQ3Q4SCLOCK\nPINQ2Q1\n(OFF)DVDDSPE = 0 (I2C ENABLE)\nFigure 42. SCLOCK Pin I/O Functional Equivalent\nin I2C Mode\nHARDWARE SPI\n(MASTER/SLAVE)\nQ3Q1\nQ2 (OFF)DVDD\nSDATA/\nMOSI\nPIN\nQ4 (OFF)SPE = 1 (SPI ENABLE)\nFigure 43. SDATA/MOSI Pin I/O Functional Equivalent\nin SPI Mode\nQ3Q4Q2Q1(OFF)DVDD\nMDI\nMDO\nMDE\nI2CMHARDWARE I2C\n(SLAVE ONLY)\n50ns GLITCH\nREJECTION FILTER\nSDATA/\nMOSI\nPINSFR\nBITSSPE = 0 (I2C ENABLE)\nFigure 44. SDATA/MOSI Pin I/O Functional Equivalent\nin I2C Mode\nMISO is shared with P3.3 and as such has the same configuration\nas shown in Figure 40.Read-Modify-Write Instructions\nSome 8051 instructions that read a port read the latch, and\nothers read the pin. The instructions that read the latch rather\nthan the pins are the ones that read a value, possibly change it,\nand then rewrite it to the latch. These are called “read-modify-write” instructions. Listed below are the read-modify-write\ninstructions. When the destination operand is a port, or a port\nbit, these instructions read the latch rather than the pin.\nANL (Logical AND, e.g., ANL P1, A)\nORL (Logical OR, e.g., ORL P2, A)XRL (Logical EX-OR, e.g., XRL P3, A)JBC (Jump if Bit = 1 and Clear Bit, e.g.,  JBC P1.1,\nLABEL)\nCPL (Complement Bit, e.g., CPL P3.0)INC (Increment, e.g., INC P2)DEC (Decrement, e.g., DEC P2)DJNZ (Decrement and Jump if Not Zero, e.g.,\nDJNZ P3, LABEL)\nMOV PX.Y, C *(Move Carry to Bit Y of Port X)\nCLR PX.Y * (Clear Bit Y of Port X)\nSETB PX.Y * (Set Bit Y of Port X)\nThe reason that read-modify-write instructions are directed to the\nlatch rather than the pin is to avoid a possible misinterpretation ofthe voltage level of a pin. For example, a port pin might be used to\ndrive the base of a transistor. When a 1 is written to the bit, the\ntransistor is turned on. If the CPU then reads the same port bit atthe pin rather than the latch, it will read the base voltage of thetransistor and interpret it as a logic 0. Reading the latch rather than\nthe pin will return the correct value of 1.\n*These instructions read the port byte (all 8 bits), modify the addressed bit, and\nthen write the new byte back to the latch.\nREV. A\n–50–ADuC831\nUser configuration and control of all Timer operating modes is achieved via three SFRs:\nTMOD, TCON  Control and configuration for Timers 0 and 1.\nT2CON  Control and configuration for Timer 2.\nTMOD Timer/Counter 0 and 1 Mode Register\nSFR Address 89H\nPower-On Default Value 00H\nBit Addressable No\nTable XIX. TMOD SFR Bit Designations\nBit Name Description\n7 Gate Timer 1 Gating Control.\nSet by software to enable timer/counter 1 only while INT1  pin is high and TR1 control bit is set.\nCleared by software to enable Timer 1 whenever TR1 control bit is set.\n6 C/T Timer 1 Timer or Counter Select Bit.\nSet by software to select counter operation (input from T1 pin).Cleared by software to select timer operation (input from internal system clock).\n5M 1T imer 1 Mode Select Bit 1 (Used with M0 Bit).\n4M 0T imer 1 Mode Select Bit 0.\nM1 M0\n00 TH1 operates as an 8-bit timer/counter. TL1 serves as 5-bit prescaler.\n01 16-Bit Timer/Counter. TH1 and TL1 are cascaded; there is no prescaler.\n10 8-Bit Auto-Reload Timer/Counter. TH1 holds a value which is to bereloaded into TL1 each time it overflows.\n11 Timer/Counter 1 Stopped.\n3 Gate Timer 0 Gating Control.\nSet by software to enable timer/counter 0 only while INT0  pin is high and TR0 control bit is set.\nCleared by software to enable Timer 0 whenever TR0 control bit is set.\n2 C/T Timer 0 Timer or Counter Select Bit.\nSet by software to select counter operation (input from T0 pin).\nCleared by software to select timer operation (input from internal system clock).\n1M 1T imer 0 Mode Select Bit 1.\n0M 0T imer 0 Mode Select Bit 0.\nM1 M0\n00 TH0 operates as an 8-bit timer/counter. TL0 serves as 5-bit prescaler.\n01 16-Bit Timer/Counter. TH0 and TL0 are cascaded; there is no prescaler.\n10 8-Bit Auto-Reload Timer/Counter. TH0 holds a value which is to\nbe reloaded into TL0 each time it overflows.\n11 TL0 is an 8-bit timer/counter controlled by the standard timer 0 control bits.\nTH0 is an 8-bit timer only, controlled by Timer 1 control bits.Timers/Counters\nThe ADuC831 has three 16-bit Timer/Counters: Timer 0,Timer 1, and Timer 2. The Timer/Counter hardware has been\nincluded on-chip to relieve the processor core of the overhead\ninherent in implementing Timer/Counter functionality in soft-ware. Each Timer/Counter consists of two 8-bit registers THx\nand TLx (x = 0, 1, and 2). All three can be configured to oper-\nate either as timers or event counters.\nIn “Timer” function, the TLx register is incremented every\nmachine cycle. Thus, one can think of it as counting machine\ncycles. Since a machine cycle consists of 12 core clock periods,\nthe maximum count rate is 1/12 of the core clock frequency.In “Counter” function, the TLx register is incremented by a 1-to-0transition at its corresponding external input pin, T0, T1, or T2.In this function, the external input is sampled during S5P2 of\nevery machine cycle. When the samples show a high in one\ncycle and a low in the next cycle, the count is incremented. Thenew count value appears in the register during S3P1 of the cycle\nfollowing the one in which the transition was detected. Since it\ntakes two machine cycles (24 core clock periods) to recognize a1-to-0 transition, the maximum count rate is 1/24 of the core\nclock frequency. There are no restrictions on the duty cycle of the\nexternal input signal, but to ensure that a given level is sampledat least once before it changes, it must be held for a minimum of\none full machine cycle.\nREV.  A\nADuC831\n–51–TCON Timer/Counter 0 and 1 Control Register\nSFR Address 88H\nPower-On Default Value 00H\nBit Addressable Yes\nTable XX. TCON SFR Bit Designations\nBit Name Description\n7 TF1 Timer 1 Overflow Flag.\nSet by hardware on a Timer/Counter 1 overflow.\nCleared by hardware when the Program Counter (PC) vectors to the interrupt service routine.\n6 TR1 Timer 1 Run Control Bit.\nSet by user to turn on Timer/Counter 1.Cleared by user to turn off Timer/Counter 1.\n5 TF0 Timer 0 Overflow Flag.\nSet by hardware on a Timer/Counter 0 overflow.Cleared by hardware when the PC vectors to the interrupt service routine.\n4 TR0 Timer 0 Run Control Bit.\nSet by user to turn on Timer/Counter 0.Cleared by user to turn off Timer/Counter 0.\n3 IE1* External Interrupt 1 ( INT1 ) Flag.\nSet by hardware by a falling edge or zero level being applied to external interrupt Pin INT1 ,\ndepending on bit IT1 state.\nCleared by hardware when the PC vectors to the interrupt service routine only if the interrupt was\ntransition-activated. If level-activated, the external requesting source controls the request flag,\nrather than the on-chip hardware.\n2 IT1* External Interrupt 1 (IE1) Trigger Type.Set by software to specify edge-sensitive detection (i.e., 1-to-0 transition).Cleared by software to specify level-sensitive detection (i.e., zero level).\n1 IE0* External Interrupt 0 ( INT0 ) Flag.\nSet by hardware by a falling edge or zero level being applied to external interrupt Pin INT0 ,\ndepending on bit IT0 state.\nCleared by hardware when the PC vectors to the interrupt service routine only if the interrupt\nwas transition-activated. If level-activated, the external requesting source controls the request\nflag, rather than the on-chip hardware.\n0 IT0* External Interrupt 0 (IE0) Trigger Type.Set by software to specify edge-sensitive detection (i.e., 1-to-0 transition).\nCleared by software to specify level-sensitive detection (i.e., zero level).\n*These bits are not used in the control of timer/counter 0 and 1, but are used instead in the control and monitoring of the exte rnal INT0  and INT1  interrupt pins.\nTimer/Counter 0 and 1 Data Registers\nEach timer consists of two 8-bit registers. These can be used asindependent registers or combined to be a single 16-bit register,depending on the timer mode configuration.\nTH0 and TL0\nTimer 0 high byte and low byte.SFR Address = 8CH, 8AH respectively.\nTH1 and TL1\nTimer 1 high byte and low byte.\nSFR Address = 8DH, 8BH respectively.\nREV.  A\n–52–ADuC831\nTIMER/COUNTER 0 AND 1 OPERATING MODES\nThe following paragraphs describe the operating modes for\nTimer/Counters 0 and 1. Unless otherwise noted, it should be\nassumed that these modes of operation are the same for Timer 0\nas for Timer 1.\nMode 0 (13-Bit Timer/Counter)\nMode 0 configures an 8-bit Timer/Counter with a divide-by-32\nprescaler. Figure 45 shows mode 0 operation.\n/H11548 12CORE\nCLK\nCONTROLP3.4/T0\nGATE\nP3.2/INT0TR0TF0TL0\n(5 BITS)TH0\n(8 BITS)INTERRUPTC/ T = 0\nC/ T = 1\nFigure 45.  Timer/Counter 0, Mode 0\nIn this mode, the timer register is configured as a 13-bit register.As the count rolls over from all 1s to all 0s, it sets the timer over-\nflow flag TF0. The overflow flag, TF0, can then be used to requestan interrupt. The counted input is enabled to the timer when\nTR0 = 1 and either Gate = 0 or INT0  = 1. Setting Gate = 1\nallows the timer to be controlled by external input INT0 , to\nfacilitate pulsewidth measurements. TR0 is a control bit in thespecial function register TCON; Gate is in TMOD. The 13-bit\nregister consists of all eight bits of TH0 and the lower five bits ofTL0. The upper three bits of TL0 are indeterminate and should\nbe ignored. Setting the run flag (TR0) does not clear the registers.\nMode 1 (16-Bit Timer/Counter)\nMode 1 is the same as Mode 0, except that the timer register is\nrunning with all 16 bits. Mode 1 is shown in Figure 46.\n/H11548 12CORE\nCLK\nCONTROLP3.4/T0\nGATE\nP3.2/INT0TR0TF0TL0\n(8 BITS)TH0\n(8 BITS)INTERRUPTC/ T = 0\nC/ T = 1\nFigure 46. Timer/Counter 0, Mode 1Mode 2 (8-Bit Timer/Counter with Autoreload)\nMode 2 configures the timer register as an 8-bit counter (TL0)with automatic reload, as shown in Figure 47. Overflow from\nTL0 not only sets TF0, but also reloads TL0 with the contents\nof TH0, which is preset by software. The reload leaves TH0unchanged.\nCONTROLTF0TL0\n(8 BITS)INTERRUPT\nRELOAD\nTH0\n(8 BITS)/H11548 12CORE\nCLK\nP3.4/T0\nGATE\nP3.2/INT0TR0C/ T = 0\nC/ T = 1\nFigure 47. Timer/Counter 0, Mode 2\nMode 3 (Two 8-Bit Timer/Counters)\nMode 3 has different effects on Timer 0 and Timer 1. Timer 1 inMode 3 simply holds its count. The effect is the same as settingTR1 = 0. Timer 0 in Mode 3 establishes TL0 and TH0 as two\nseparate counters. This configuration is shown in Figure 50.\nTL0 uses the Timer 0 control bits: C/T, Gate, TR0, INT0 , and\nTF0. TH0 is locked into a timer function (counting machine\ncycles) and takes over the use of TR1 and TF1 from Timer 1.\nThus, TH0 now controls the Timer 1 interrupt. Mode 3 isprovided for applications requiring an extra 8-bit timer or counter.\nWhen Timer 0 is in Mode 3, Timer 1 can be turned on and off\nby switching it out of, and into, its own Mode 3, or can still be\nused by the serial interface as a baud rate generator . In fact, it can\nbe used in any application not requiring an interrupt from\nTimer 1 itself.\nCONTROLTF0TL0\n(8 BITS)INTERRUPT/H11548 12CORE\nCLK\nP3.4/T0\nGATE\nP3.2/INT0TR0C/ T = 0\nC/ T = 1CORE\nCLK/12\nTF1TH0\n(8 BITS)INTERRUPTCORE\nCLK/12\nTR1\nFigure 48. Timer/Counter 0, Mode 3\nREV.  A\nADuC831\n–53–T2CON Timer/Counter 2 Control Register\nSFR Address C8H\nPower-On Default Value 00H\nBit Addressable Yes\nTable XXI. T2CON SFR Bit Designations\nBit Name Description\n 7 TF2 Timer 2 Overflow Flag.\nSet by hardware on a Timer 2 overflow. TF2 will not be set when either RCLK = 1 or TCLK = 1.\nCleared by user software.\n6 EXF2 Timer 2 External Flag.\nSet by hardware when either a capture or reload is caused by a negative transition on T2EX and EXEN2 = 1.Cleared by user software.\n5 RCLK Receive Clock Enable Bit.\nSet by user to enable the serial port to use Timer 2 overflow pulses for its receive clock in serial port\nModes 1 and 3.\nCleared by user to enable Timer 1 overflow to be used for the receive clock.\n4 TCLK Transmit Clock Enable Bit.\nSet by user to enable the serial port to use Timer 2 overflow pulses for its transmit clock in serial portModes 1 and 3.\nCleared by user to enable Timer 1 overflow to be used for the transmit clock.\n3 EXEN2 Timer 2 External Enable Flag.\nSet by user to enable a capture or reload to occur as a result of a negative transition on T2EX ifTimer 2 is not being used to clock the serial port.Cleared by user for Timer 2 to ignore events at T2EX.\n2 TR2 Timer 2 Start/Stop Control Bit.\nSet by user to start Timer 2.Cleared by user to stop Timer 2.\n1 CNT2 Timer 2 Timer or Counter Function Select Bit.\nSet by user to select counter function (input from external T2 pin).Cleared by user to select timer function (input from on-chip core clock).\n0 CAP2 Timer 2 Capture/Reload Select Bit.\nSet by user to enable captures on negative transitions at T2EX if EXEN2 = 1.Cleared by user to enable auto-reloads with Timer 2 overflows or negative transitions at T2EXwhen EXEN2 = 1. When either RCLK = 1 or TCLK = 1, this bit is ignored and the timer is forced to\nautoreload on Timer 2 overflow.\nTimer/Counter 2 Data Registers\nTimer/Counter 2 also has two pairs of 8-bit data registers\nassociated with it. These are used as both timer data registers\nand timer capture/reload registers.\nTH2 and TL2\nTimer 2, data high byte and low byte.\nSFR Address = CDH, CCH respectively.\nRCAP2H and RCAP2L\nTimer 2, Capture/Reload byte and low byte.\nSFR Address = CBH, CAH respectively.\nREV. A\n–54–ADuC831\nTimer/Counter Operation Modes\nThe following paragraphs describe the operating modes for\nTimer/ Counter 2. The operating modes are selected by bits in the\nT2CON SFR as shown in Table XXII.\nTable XXII. T2CON Operating Modes\nRCLK (or) TCLK CAP2 TR2 Mode\n00 1 16-Bit Autoreload\n01 1 16-Bit Capture\n1X 1B aud Rate\nXX 0 OFF\n16-Bit Autoreload Mode\nIn Autoreload mode, there are two options, which are selected\nby bit EXEN2 in T2CON. If EXEN2 = 0, then when Timer 2\nrolls over it not only sets TF2, but also causes the Timer 2 regis ters\nto be reloaded with the 16-bit value in registers RCAP2L and\nRCAP2H, which are preset by software. If EXEN2 = 1, then\nTimer 2 still performs the above, but with the added feature that\na 1-to-0 transition at external input T2EX will also trigger the16-bit reload and set EXF2. The Autoreload mode is illustrated\nin Figure 49.16-Bit Capture Mode\nIn the Capture mode, there are again two options, which areselected by bit EXEN2 in T2CON. If EXEN2 = 0, then Timer 2\nis a 16-bit timer or counter which, upon overflowing, sets bit TF2,the Timer 2 overflow bit, which can be used to generate an inter-\nrupt. If EXEN2 = 1, then Timer 2 still performs the above, but\na l-to-0 transition on external input T2EX causes the current value\nin the Timer 2 registers, TL2 and TH2, to be captured into regis-\nters RCAP2L and RCAP2H, respectively. In addition, thetransition at T2EX causes bit EXF2 in T2CON to be set, andEXF2, like TF2, can generate an interrupt. The Capture mode\nis illustrated in Figure 50.\nThe baud rate generator mode is selected by RCLK = 1 and/or\nTCLK = 1.\nIn either case, if Timer 2 is being used to generate the baud\nrate, the TF2 interrupt flag will not occur. Therefore, Timer 2\ninterrupts will not occur so they do not have to be disabled. In\nthis mode the EXF2 flag, however, can still cause interrupts andthis can be used as a third external interrupt.\nBaud rate generation will be described as part of the UART\nserial port operation in the following pages.\nCORE\nCLK12\nT2\nPINC/ T2 = 0\nC/ T2 = 1\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nTF2\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2H\nFigure 49. Timer/Counter 2, 16-Bit Autoreload Mode\nTF2CORE\nCLK12\nT2\nPIN\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nCAPTURE\nEXF2TIMERINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2HC/ T2 = 0\nC/ T2 = 1\nFigure 50. Timer/Counter 2, 16-Bit Capture Mode\nREV.  A\nADuC831\n–55–UART SERIAL INTERFACE\nThe serial port is full duplex, meaning it can transmit and receive\nsimultaneously. It is also receive-buffered, meaning it can com-\nmence reception of a second byte before a previously receivedbyte has been read from the receive register. However, if the first\nbyte still has not been read by the time reception of the second\nbyte is complete, the first byte will be lost. The physical interface tothe serial data network is via pins RXD(P3.0) and TXD(P3.1),while the SFR interface to the UART is comprised of SBUFand SCON, as described below.\nSBUF\nThe serial port receive and transmit registers are both accessed\nthrough the SBUF SFR (SFR address = 99H). Writing to SBUF\nloads the transmit register and reading SBUF accesses a physi-cally separate receive register.\nSCON UART Serial Port Control Register\nSFR Address 98H\nPower-On Default Value 00HBit Addressable Yes\nTable XXIII. SCON SFR Bit Designations\nBit Name Description\n7 SM0 UART Serial Mode Select Bits.\n6 SM1 These bits select the Serial Port operating mode as follows:\nSM0 SM1 Selected Operating Mode00 Mode 0: Shift Register, fixed baud rate (Core_Clk/2)\n01 Mode 1: 8-bit UART, variable baud rate\n10 Mode 2: 9-bit UART, fixed baud rate (Core_Clk/64) or (Core_Clk/32)\n11 Mode 3: 9-bit UART, variable baud rate\n5 SM2 Multiprocessor Communication Enable Bit.\nEnables multiprocessor communication in Modes 2 and 3. In Mode 0, SM2 should be cleared.In Mode 1, if SM2 is set, RI will not be activated if a valid stop bit was not received. If SM2 is set,cleared, RI will be set as soon as the byte of data has been received. In Modes 2 or 3, if SM2 is\nRI will not be activated if the received ninth data bit in RB8 is 0. If SM2 is cleared, RI will be set\nas soon as the byte of data has been received.\n4 REN Serial Port Receive Enable Bit.\nSet by user software to enable serial port reception.\nCleared by user software to disable serial port reception.\n3T B8 Serial Port Transmit (Bit 9).\nThe data loaded into TB8 will be the ninth data bit that will be transmitted in Modes 2 and 3.\n2 RB8 Serial Port Receiver Bit 9.\nThe ninth data bit received in Modes 2 and 3 is latched into RB8. For Mode 1 the stop bit is\nlatched into RB8.\n1T I Serial Port Transmit Interrupt Flag.Set by hardware at the end of the eighth bit in Mode 0, or at the beginning of the stop bit inModes 1, 2, and 3. TI must be cleared by user software.\n0R I Serial Port Receive Interrupt Flag.Set by hardware at the end of the eighth bit in mode 0, or halfway through the stop bit in\nModes 1, 2, and 3. RI must be cleared by software.\nREV.  A\n–56–ADuC831\nMode 0: 8-Bit Shift Register Mode\nMode 0 is selected by clearing both the SM0 and SM1 bits in\nthe SFR SCON. Serial data enters and exits through RxD.\nTxD outputs the shift clock. Eight data bits are transmitted or\nreceived. Transmission is initiated by any instruction that writesto SBUF. The data is shifted out of the RxD line. The eight bits\nare transmitted with the least-significant bit (LSB) first, as shown\nin Figure 51.\nCORE\nCLK\nALE\nRxD\n(DATA OUT)\nTxD\n(SHIFT CLOCK)DATA BIT 0 DATA BIT 1 DATA BIT 6 DATA BIT 7S6 S5 S4 S3 S2 S1 S6 S5 S4 S4 S3 S2 S1 S6 S5 S4 S3 S2 S1MACHINE\nCYCLE 8MACHINE\nCYCLE 7MACHINE\nCYCLE 2MACHINE\nCYCLE 1\nFigure  51. UART Serial Port Transmission, Mode 0\nReception is initiated when the receive enable bit (REN) is 1 and\nthe receive interrupt bit (RI) is 0. When RI is cleared the data is\nclocked into the RxD line and the clock pulses are output from\nthe TxD line.\nMode 1: 8-Bit UART, Variable Baud Rate\nMode 1 is selected by clearing SM0 and setting SM1. Each databyte (LSB first) is preceded by a start bit (0) and followed by astop bit (1). Therefore, 10 bits are transmitted on TxD or\nreceived on RxD. The baud rate is set by the Timer 1 or Timer 2\noverflow rate, or a combination of the two (one for transmissionand the other for reception).\nTransmission is initiated by writing to SBUF. The “write to\nSBUF” signal also loads a 1 (stop bit) into the ninth bit position\nof the transmit shift register. The data is output bit by bit until\nthe stop bit appears on TxD and the transmit interrupt flag (TI)is automatically set as shown in Figure 52.\nTxD\nTI\n(SCON.1)START\nBITD0 D1 D2 D3 D4 D5 D6 D7STOP BIT\nSET INTERRUPT\ni.e., READY FOR MORE DATA\nFigure  52. UART Serial Port Transmission, Mode 0\nReception is initiated when a 1-to-0 transition is detected on RxD.Assuming a valid start bit was detected, character reception\ncontinues. The start bit is skipped and the eight data bits are\nclocked into the serial port shift register. When all eight bits\nhave been clocked in, the following events occur:\nThe eight bits in the receive shift register are latched into SBUF.\nThe ninth bit (Stop bit) is clocked into RB8 in SCON.The Receiver Interrupt flag (RI) is set.\nThis will be the case if, and only if, the following conditions are\nmet at the time the final shift pulse is generated:\nRI = 0, and either SM2 = 0, or SM2 = 1 and the received\nstop bit = 1.\nIf either of these conditions is not met, the received frame is\nirretrievably lost, and RI is not set.Mode 2: 9-Bit UART with Fixed Baud Rate\nMode 2 is selected by setting SM0 and clearing SM1. In thismode the UART operates in 9-bit mode with a fixed baud rate.\nThe baud rate is fixed at Core_Clk/64 by default, although by\nsetting the SMOD bit in PCON, the frequency can be doubledto Core_Clk/32. Eleven bits are transmitted or received, a start\nbit (0), eight data bits, a programmable ninth bit, and a stop bit\n(1). The ninth bit is most often used as a parity bit, although itcan be used for anything, including a ninth data bit if required.\nTo transmit, the eight data bits must be written into SBUF.\nThe ninth bit must be written to TB8 in SCON. When trans-\nmission is initiated, the eight data bits (from SBUF) are loadedonto the transmit shift register (LSB first). The contents of TB8\nare loaded into the ninth bit position of the transmit shift regis-\nter. The transmission will start at the next valid baud rate clock.The TI flag is set as soon as the stop bit appears on TxD.\nReception for Mode 2 is similar to that of Mode 1. The eight\ndata bytes are input at RxD (LSB first) and loaded onto the\nreceive shift register. When all eight bits have been clocked in,the following events occur:\nThe eight bits in the receive shift register are latched into SBUF.\nThe ninth data bit is latched into RB8 in SCON.The Receiver Interrupt flag (RI) is set.\nThis will be the case if, and only if, the following conditions are\nmet at the time the final shift pulse is generated:\n RI = 0, and either SM2 = 0, or SM2 = 1 and the received stop\n   bit = 1.\nIf either of these conditions is not met, the received frame is\nirretrievably lost, and RI is not set.\nMode 3: 9-Bit UART with Variable Baud Rate\nMode 3 is selected by setting both SM0 and SM1. In this mode,\nthe 8051 UART serial port operates in 9-bit mode with a vari-\nable baud rate determined by either Timer 1 or Timer 2. Theoperation of the 9-bit UART is the same as for Mode 2 but the\nbaud rate can be varied as for Mode 1.\nIn all four modes, transmission is initiated by any instruction\nthat uses SBUF as a destination register. Reception is initiatedin Mode 0 by the condition RI = 0 and REN = 1. Reception is\ninitiated in the other modes by the incoming start bit if REN = 1.\nUART Serial Port Baud Rate Generation\nMode 0 Baud Rate Generation\nThe baud rate in Mode 0 is fixed:\n    Mode  Baud Rate =(Core Clock Frequency/ ) 01 2\nMode 2 Baud Rate Generation\nThe baud rate in Mode 2 depends on the value of the SMOD bit\nin the PCON SFR. If SMOD = 0, the baud rate is 1/64 of the core\nclock. If SMOD = 1, the baud rate is 1/32 of the core clock:\n    Mode  Baud Rate =( / ) Core Clock Frequency)SMOD22 6 4×(\nMode 1 and 3 Baud Rate Generation\nThe baud rates in Modes 1 and 3 are determined by the overflow\nrate in Timer 1 or Timer 2, or both (one for transmit and theother for receive).\nREV.  A\nADuC831\n–57–Timer 1 Generated Baud Rates\nWhen Timer 1 is used as the baud rate generator, the baud rates\nin Modes 1 and 3 are determined by the Timer 1 overflow rate\nand the value of SMOD as follows:\n    Modes  and  Baud Rate =\n(/ ) (Timer  Overflow Rate)SMOD13\n23 2 1 ×\nThe Timer 1 interrupt should be disabled in this application. The\nTimer itself can be configured for either timer or counter opera-tion, and in any of its three running modes. In the most typical\napplication, it is configured for timer operation in the Autoreload\nmode (high nibble of TMOD = 0010 binary). In that case, the baud\nrate is given by the formula:\n    Modes  and  Baud Rate =\n/ Core Clock / ( – THSMOD13\n() ( [ ])) 23 2 1 2 256 1 ××\nTable XXIV shows some commonly used baud rates and how they\nmight be calculated from a core clock frequency of 11.0592 MHz\nand 12 MHz. Generally speaking, a 5% error is tolerable usingasynchronous (start/stop) communications.\nTable XXIV. Commonly-Used Baud Rates, Timer 1\nCore\nIdeal CLK  SMOD TH1-Reload Actual %\nBaud (MHz)  Value Value Baud Error\n9600 12 1 –7 (F9H) 8929 7\n19200 11.0592 1 –3 (FDH) 19200 09600 11.0592 0 –3 (FDH) 9600 0\n2400 11.0592 0 –12 (F4H) 2400 0\nTimer 2 Generated Baud Rates\nBaud rates can also be generated using Timer 2. Using Timer 2 is\nsimilar to using Timer 1 in that the timer must overflow 16 times\nbefore a bit is transmitted/received. Because Timer 2 has a 16-bitAutoreload mode, a wider range of baud rates is possible usingTimer 2.\n    Modes  and  Baud Rate =( / ) (Timer  Overflow Rate) 13 11 6 2 ×\nTherefore, when Timer 2 is used to generate baud rates, the timer\nincrements every two clock cycles and not every core machine\ncycle as before. Thus, it increments six times faster than Timer 1,\nand therefore baud rates six times faster are possible. BecauseTimer 2 has 16-bit autoreload capability, very low baud rates are\nstill possible.\nTimer 2 is selected as the baud rate generator by setting the TCLK\nand/or RCLK in T2CON. The baud rates for transmit and receivecan be simultaneously different. Setting RCLK and/or TCLK puts\nTimer 2 into its baud rate generator mode as shown in Figure 53.\nIn this case, the baud rate is given by the formula:\n    Modes 1 and 3 Baud Rate =\n(Core Clk)/( – RCAP H, RCAP L 32 65536 2 2×[( )])\nTable XXV shows some commonly used baud rates and how they\nmight be calculated from a core clock frequency of 11.0592 MHz\nand 12 MHz.\nTable XXV. Commonly Used Baud Rates, Timer 2\nCore\nIdeal CLK RCAP2H RCAP2L Actual %\nBaud (MHz) Value Value Baud Error\n19200 12 –1 (FFH) –20 (ECH) 19661 2.4\n9600 12 –1 (FFH) –41 (D7H) 9591 0.12400 12 –1 (FFH) –164 (5CH) 2398 0.11200 12 –2 (FEH) –72 (B8H) 1199 0.1\n19200 11.0592 –1 (FFH) –18 (EEH) 19200 0\n9600 11.0592 –1 (FFH) –36 (DCH) 9600 02400 11.0592 –1 (FFH) –144 (70H) 2400 0\n1200 11.0592 –2 (FFH) –32 (E0H) 1200 0\nCORE\nCLK2\nT2\nPIN\nTR2CONTROL\nTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nEXEN2CONTROLT2EX\nPIN\nTRANSITION\nDETECTOREXF 2TIMER 2\nINTERRUPTNOTE: AVAILABILITY OF ADDITIONALEXTERNAL INTERRUPT\nRCAP2L RCAP2HTIMER 2\nOVERFLOW2\n16\n16RCLK\nTCLKRXCLOCK\nTX\nCLOCK0\n01\n11 0\nSMODTIMER 1\nOVERFLOW\nC/ T2 = 0\nC/ T2 = 1NOTE: OSC. FREQ. IS DIVIDED BY 2, NOT 12.\nFigure  53. Timer 2, UART Baud Rates\nREV. A\n–58–ADuC831\nTimer 3 Generated Baud Rates\nThe high integer dividers in a UART block mean that high speed\nbaud rates are not always possible using some particular crystals.\nFor example, using a 12 MHz crystal, a baud rate of 115200 is\nnot possible. To address this problem, the ADuC831 has addeda dedicated baud rate timer (Timer 3) specifically for generating\nhighly accurate baud rates.\nTimer 3 can be used instead of Timer 1 or Timer 2 for generating\nvery accurate high speed UART baud rates including 115200and 230400. Timer 3 also allows a much wider range of baud\nrates to be obtained. In fact, every desired bit rate from 12 bit/s\nto 393216 bit/s can be generated to within an error of ±0.8%.\nTimer 3 also frees up the other three timers, allowing them to\nbe used for different applications. A block diagram of Timer 3 is\nshown in Figure 54 below.\n (1 + T3FD/64)2\nT3 RX/TX\nCLOCKCORE\nCLK\nT3ENRX CLOCK\nTX CLOCKTIMER 1/TIMER 2\nRX CLOCK (FIG 53)FRACTIONAL\nDIVIDER\n0\n01\n1TIMER 1/TIMER 2\nTX CLOCK (FIG 53)\n162DIV\nFigure 54. Timer 3, UART Baud Rates\nTwo SFRs (T3CON and T3FD) are used to control Timer 3.\nT3CON is the baud rate control SFR, allowing Timer 3 to beused to set up the UART baud rate, and setting up the binary\ndivider (DIV).\nTable XXVI. T3CON SFR Bit Designations\nBit Name Description\n7 T3BAUDEN T3UARTBAUD Enable\nSet to enable Timer 3 to generate\nthe baud rate. When set, PCON.7,\nT2CON.4 and T2CON.5 are ignored.\nCleared to let the baud rate begenerated as per a standard 8052.\n6 –5 –4 –\n3 –\n2 DIV2 Binary Divider Factor.\n1 DIV1 DIV2 DIV1 DIV0 Bin Divider\n0 DIV0     0        0        0           1\n    0        0        1           1    0        1        0           1\n    0        1        1           1\n    1        0        0           1    1        0        1           1\n    1        1        0           1\n    1        1        1           1The appropriate value to write to the DIV2-1-0 bits can be calcu-\nlated using the following formula where f CORE is the crystal\nfrequency:\nNote: The DIV value must be rounded down.\nDIVf\n32 Baud RateCORE\n=×\uf8eb\n\uf8ed\uf8ec\uf8f6\n\uf8f8\uf8f7 log\nlog( ) 2\nT3FD is the fractional divider ratio required to achieve the\nrequired baud rate. We can calculate the appropriate value forT3FD using the following formula.\nNote: T3FD should be rounded to the nearest integer.\nTF Df\nBaud RateCORE\nDIV32\n2=×\n×  \nOnce the values for DIV and T3FD are calculated the actual\nbaud rate can be calculated using the following formula.\nActual Baud Rate =2f\n2  (T3FD+64)CORE\nDIV×\n×\nFor example, to get a baud rate of 115200 while operating at11.0592 MHz:\nDIV LOG LOG\nTF D H=× () () ==\n=×() ×() ==11059200 32 115200 2 1 58 1\n32 11059200 2 115200 64 32 201// .\n/–\nTherefore, the actual baud rate is 115200 bit/s.\nTable XXVII. Commonly Used Baud Rates Using Timer 3\nIdeal %\nBaud Crystal DIV T3CON T3FD Error\n230400 11.0592 0 80H 20H 0.0\n115200 11.0592 1 81H 20H 0.0\n57600 11.0592 2 82H 20H 0.038400 11.0592 3 83H 08H 0.0\n19200 11.0592 4 84H 08H 0.0\n9600 11.0592 5 85H 08H 0.0\n230400 12 0 80H 28H 0.16\n115200 12 1 81H 28H 0.1657600 12 2 82H 28H 0.16\n38400 12 3 83H 0EH 0.16\n19200 12 4 84H 0EH 0.16\n9600 12 5 85H 0EH 0.16\n230400 14 0 80H 3AH 0.39\n115200 14 1 81H 3AH 0.3957600 14 2 82H 3AH 0.39\n38400 14 3 83H 1BH 0.16\n19200 14 4 84H 1BH 0.16\n9600 14 5 85H 1BH 0.16\n230400 16 1 81H 05H 0.64\n115200 16 2 82H 05H 0.64\n57600 16 3 83H 05H 0.64\n38400 16 3 83H 28H 0.1619200 16 4 84H 28H 0.16\n9600 16 5 85H 28H 0.16\nREV. A\nADuC831\n–59–INTERRUPT SYSTEM\nThe ADuC831 provides a total of nine interrupt sources with\ntwo priority levels. The control and configuration of the interrupt\nsystem is carried out through three Interrupt-related SFRs.\nIE Interrupt Enable Register\nIP Interrupt Priority Register\nIEIP2 Secondary Interrupt Enable Register\nIE Interrupt Enable Register\nSFR Address A8H\nPower-On Default Value 00H\nBit Addressable Yes\nTable XXVIII. IE SFR Bit Designations\nBit Name Description\n7E AW ritten by User to Enable “1” or Disable “0” All Interrupt Sources\n6 EADC Written by User to Enable “1” or Disable “0” ADC Interrupt\n5 ET2 Written by User to Enable “1” or Disable “0” Timer 2 Interrupt\n4E SW ritten by User to Enable “1” or Disable “0” UART Serial Port Interrupt\n3 ET1 Written by User to Enable “1” or Disable “0” Timer 1 Interrupt\n2 EX1 Written by User to Enable “1” or Disable “0” External Interrupt 1\n1 ET0 Written by User to Enable “1” or Disable “0” Timer 0 Interrupt\n0 EX0 Written by User to Enable “1” or Disable “0” External Interrupt 0\nIP Interrupt Priority Register\nSFR Address B8H\nPower-On Default Value 00H\nBit Addressable Yes\nTable XXIX. IP SFR Bit Designations\nBit Name Description\n7 ---- Reserved for Future Use\n6 PADC Written by User to Select ADC Interrupt Priority (“1” = High; “0” = Low)\n5 PT2 Written by User to Select Timer 2 Interrupt Priority (“1” = High; “0” = Low)\n4P SW ritten by User to Select UART Serial Port Interrupt Priority (“1” = High; “0” = Low)\n3 PT1 Written by User to Select Timer 1 Interrupt Priority (“1” = High; “0” = Low)\n2 PX1 Written by User to Select External Interrupt 1 Priority (“1” = High; “0” = Low)\n1 PT0 Written by User to Select Timer 0 Interrupt Priority (“1” = High; “0” = Low)\n0 PX0 Written by User to Select External Interrupt 0 Priority (“1” = High; “0” = Low)\nIEIP2 Secondary Interrupt Enable Register\nSFR Address A9H\nPower-On Default Value A0H\nBit Addressable No\nTable XXX. IEIP2 SFR Bit Designations\nBit Name Description\n7 ---- Reserved for Future Use\n6P TI Priority for Time Interval Interrupt\n5 PPSM Priority for Power Supply Monitor Interrupt\n4P SI Priority for SPI/I2C  Interrupt\n3 ---- This Bit Must Contain Zero\n2 ETI Written by User to Enable “1” or Disable “0” Time Interval Counter Interrupt\n1 EPSMI Written by User to Enable “1” or Disable “0” Power Supply Monitor Interrupt\n0 ESI Written by User to Enable “1” or Disable “0” SPI/I2C Serial Port Interrupt\nREV.  A\n–60–ADuC831\nInterrupt Priority\nThe Interrupt Enable registers are written by the user to enable\nindividual interrupt sources, while the Interrupt Priority registers\nallow the user to select one of two priority levels for each interrupt.\nAn interrupt of a high priority may interrupt the service routineof a low priority interrupt, and if two interrupts of different\npriority occur at the same time, the higher level interrupt will be\nserviced first. An interrupt cannot be interrupted by anotherinterrupt of the same priority level. If two interrupts of the same\npriority level occur simultaneously, a polling sequence is observed\nas shown in Table XXXI.\nTable XXXI. Priority within an Interrupt Level\nSource Priority Description\nPSMI 1 (Highest) Power Supply Monitor Interrupt\nWDS 2 Watchdog Timer Interrupt\nIE0 2 External Interrupt 0\nADCI 3 ADC InterruptTF0 4 Timer/Counter 0 Interrupt\nIE1 5 External Interrupt 1\nTF1 6 Timer/Counter 1 InterruptI2CI + ISPI 7 SPI Interrupt\nRI + TI 8 Serial Interrupt\nTF2 + EXF2 9 (Lowest) Timer/Counter 2 Interrupt\nTII 11 (Lowest) Time Interval Counter Interrupt\nInterrupt Vectors\nWhen an interrupt occurs, the program counter is pushed ontothe stack and the corresponding interrupt vector address isloaded into the program counter. The Interrupt Vector Addresses\nare shown in Table XXXII.\nTable XXXII. Interrupt Vector Addresses\nSource  Vector Address\nIE0 0003H\nTF0 000BH\nIE1 0013H\nTF1 001BH\nRI + TI 0023H\nTF2 + EXF2 002BH\nADCI 0033H\nI2CI + ISPI 003BH\nPSMI 0043H\nTII 0053H\nWDS 005BHADuC831 HARDWARE DESIGN CONSIDERATIONS\nThis section outlines some of the key hardware design consider-ations that must be addressed when integrating the ADuC831\ninto any hardware system.\nClock Oscillator\nThe clock source for the ADuC831 can come either from an\nexternal source or from the internal clock oscillator. To use the\ninternal clock oscillator, connect a parallel resonant crystal between\nXTAL1 and XTAL2, and connect a capacitor from each pin toground as shown below.\nXTAL2XTAL1\nTO INTERNAL\nTIMNG CIRCUITSADuC831\nFigure 55. External Parallel Resonant Crystal Connections\nXTAL2XTAL1\nTO INTERNAL\nTIMNG CIRCUITSADuC831\nEXTERNAL\nCLOCK\nSOURCE\nFigure 56. Connecting an External Clock Source\nWhether using the internal oscillator or an external clock\nsource, the ADuC831’s specified operational clock speed range is\n400 kHz to 16 MHz. The core itself is static, and will function\nall the way down to dc. But at clock speeds slower that 400 kHz\nthe ADC will no longer function correctly. Therefore, to ensurespecified o peration, use a clock frequency of at least 400 kHz\nand no m ore than 16 MHz. Note: the Flash/EE memory may\nnot program correctly at a clock frequency of less than 2 MHz.\nExternal Memory Interface\nIn addition to its internal program and data memories, the ADuC831\ncan access up to 64 kBytes of external program memory (ROM/\nPROM/etc.) and up to 16 MBytes of external data memory (SRAM).\nTo select from which code space (internal or external program\nmemory) to begin executing instructions, tie the EA (external\naccess) pin high or low, respectively. When EA is high (pulled up\nto V DD), user program execution will start at address 0 of the\ninternal 62 kBytes Flash/EE code space. When EA is low (tied\nto ground) us er program execution will start at address 0 of the\nexternal code space.\nA second very important function of the EA pin is described\nin the Single Pin Emulation Mode section.\nExternal program memory (if used) must be connected to the\nADuC831 as illustrated in Figure 57. Note that 16 I/O lines\nREV.  A\nADuC831\n–61–(Ports 0 and 2) are dedicated to bus functions during external\nprogram memory fetches. Port 0 (P0) serves as a m ultiplexed\naddress/data bus. It emits the low byte of the program counter\n(PCL) as an address, and then goes into a float state awaiting\nthe arrival of the code byte from the program memory. Duringthe time that the low byte of the program counter is valid on P0,\nthe sign al ALE (Address Latch Enable) clocks this byte into an\naddress latch. Meanwhile, Port 2 (P2) emits the high byte of\nthe pro gram c ounter (PCH), then PSEN strobes the EPROM\nand the code byte is read into the ADuC831.\nLATCHEPROM\nOEA8–A15A0–A7D0–D7\n(INSTRUCTION)ADuC831\nPSENP2ALEP0\nFigure 57. External Program Memory Interface\nNote that program memory addresses are always 16 bits wide,\neven in cases where the actual amount of program memory used\nis less than 64 kBytes. External program execution sacrifices two\nof the 8-b it ports (P0 and P2) to the function of addressing the\nprogram memory. While executing from external program memory,Ports 0 a nd 2 can be used simultaneously for read/write access\nto external data memory, but not for general-purpose I/O.\nThough both external program memory and external data memoryare accessed by some of the same pins, the two are completelyindependent of each other from a software point of view. For\nexample, the chip can read/write external data memory while\nexecuting from external program memory.\nFigure 58 shows a hardware configuration for accessing up to\n64 kBytes of external RAM. This interface is standard to any 8051\ncompatible MCU.\nLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)ADuC831\nRDP2ALEP0\nWE WR\nFigure 58. External Data Memory Interface\n(64 K Address Space)\nIf access to more than 64 kBytes of RAM is desired, a feature\nunique to the ADuC831 allows addressing up to 16 MBytes\nof external RAM simply by adding an additional latch as illus trated\nin Figure 59.LATCHADuC831\nRDP2ALEP0\nWRLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)\nWEA16–A23\nFigure 59. External Data Memory Interface\n(16 MBytes Address Space)\nIn either implementation, Port 0 (P0) serves as a multiplexed\naddress/data bus. It emits the low byte of the data pointer (DPL)as an address, which is latched by a pulse of ALE prior to data\nbeing placed on the bus by the ADuC831 (write operation) or\nthe SRAM (read operation). Port 2 (P2) provides the data\npointer page byte (DPP) to be latched by ALE, followed by the\ndata pointer high byte (DPH). If no latch is connected to P2,DPP is ignored by the SRAM, and the 8051 standard of 64 kBytesexternal data memory access is maintained.\nPower Supplies\nThe ADuC831’s operational power supply voltage range is 2.7 Vto 5.25 V. Although the guaranteed data sheet specifications aregiven only for power supplies within 2.7 V to 3.6 V or ±10% of\nthe nominal 5 V level, the chip will function equally well at any\npower supply level between 2.7 V and 5.5 V.\nNote: Figures 60 and 61 refer to the PQFP package, for the CSP\npackage connect the extra DV\nDD, DG ND, AV DD, and AG ND in the\nsame manner. Note: for the CSP package, the bottom paddle\nshould be left unconnected.\nSeparate analog and digital power supply pins (AV DD and DV DD,\nrespectively) allow AV DD to be kept relatively free of noisy digital\nsignals often present on the system DV DD line. However, though\nyou can power AV DD and DV DD from two separate supplies if\ndesired, you must ensure that they remain within ±0.3 V of one\nanother at all times in order to avoid damaging the chip (as per the\nAbsolute Maximum Ratings section). Therefore, it is recommended\nthat unless AV DD and DV DD are connected directly together, you\nconnect back-to-back Schottky diodes between them as shown\nin Figure 60.\nDVDDADuC831\nAGNDAVDD–+\n0.1/H9262F10/H9262FANALOG SUPPLY\n10/H9262F\nDGND0.1/H9262FDIGITAL SUPPLY\n–+\nFigure 60. External Dual-Supply Connections\nREV.  A\n–62–ADuC831\nAs an alternative to providing two separate power supplies, the\nuser can help keep AV DD quiet by placing a small series resistor\nand/or ferrite bead between it and DV DD, and then decoupling\nAV DD separately to ground. An example of this configuration is\nshown in Figure 61. With this configuration other analog circuitry(such as op amps, voltage reference, and so on) can be powered\nfrom the AV\nDD supply line as well. The user will still want to\ninclude back-to-back Schottky diodes between AV DD and DV DD\nin order to protect from power-up and power-down transient con-ditions that could separate the two supply voltages momentarily.\nDVDDADuC831\nAGNDAVDD0.1/H9262F10/H9262F 10/H9262F\nDGND0.1/H9262FDIGITAL SUPPLY\n–+BEAD 1.6V\nFigure 61. External Single-Supply Connections\nNotice that in both Figure 60 and Figure 61, a large value (10 µF)\nreservoir capacitor sits on DV DD and a separate 10 µF capacitor\nsits on AV DD. Also, local small-value (0.1 µF) capacitors are located at\neach V DD pin of the chip. As per standard design practice, be sure\nto include all of these capacitors, and ensure the smaller capacitors\nare close to each AV DD pin with trace lengths as short as possible.\nConnect the ground terminal of each of these capacitors directly tothe underlying ground plane. Finally, it should also be noted that,at all times, the analog and digital ground pins on the ADuC831\nmust be referenced to the same system ground reference point.\nPower Consumption\nThe currents consumed by the various sections of the ADuC831\nare shown in Table XXXIII. The CORE values given represent\nthe current drawn by DV DD, while the rest (ADC, DAC, voltage\nref) are pulled by the AV DD pin and can be disabled in software\nwhen not in use. The other on-chip peripherals (watchdog timer,power supply monitor, and so on) consume negligible current\nand are therefore lumped in with the Core operating current here.Of course, the user must add any currents sourced by the parallel\nand serial I/O pins, and that sourced by the DAC, in order to\ndetermine the total current needed at the ADuC831’s supply pins.Also, current drawn from the DV\nDD supply will increase by\napproximately 10 mA during Flash/EE erase and program cycles.\nTable XXXIII. Typical I DD of Core and Peripherals\nVDD = 5 V VDD = 3 V\nCore:\n(Normal Mode) (1.6 nAs /H11003 MCLK) + (0.8 nAs /H11003 MCLK) +\n6 mA 3 mA\nCore:\n(Idle Mode) (0.75 nAs /H11003 MCLK) + (0.25 nAs /H11003 MCLK)+\n5 mA 3 mA\nADC: 1.3 mA 1.0 mA\nDAC (Each): 250 µA 200 µA\nVoltage Ref: 200 µA 150 µASince operating DV DD current is primarily a function of clock\nspeed, the expressions for CORE supply current in Table XXXIIIare given as functions of M\nCLK, the oscillator frequency. Plug in\na value for M CLK in hertz to determine the current consumed by\nthe core at that oscillator frequency. Since the ADC and DACscan be enabled or disabled in software, add only the currents\nfrom the peripherals you expect to use. And again, do not forget\nto include current sourced by I/O pins, serial port pins, DACoutputs, and so forth, plus the additional current drawn during\nFlash/EE erase and program cycles.\nA software switch allows the chip to be switched from normal\nmode into idle mode, and also into full power-down mode.Below are brief descriptions of power-down and idle modes.\nPower Saving Modes\nIn idle mode, the oscillator continues to run but is gated off to thecore only. The on-chip peripherals continue to receive the clock,and remain functional. Port pins and DAC output pins retain their\nstates in this mode. The chip will recover from idle mode upon\nreceiving any enabled interrupt, or on receiving a hardware reset.\nIn full power-down mode, the on-chip oscillator stops and all\non-chip peripherals are shut down. Port pins retain their logic\nlevels in this mode, but the DAC output goes to a high-impedance\nstate (three-state). During full power-down mode, the ADuC831\nconsumes a total of approximately 15 µA. There are five ways of\nterminating power-down mode:\nAsserting the RESET Pin (Pin 15)\nReturns to normal mode. All registers are set to their default\nstate a nd program execution starts at the reset vector once the\nReset pin is de-asserted.\nCycling Power\nAll registers are set to their default state and program executionstarts at the reset vector approximately 128 ms later.\nTime Interval Counter (TIC) Interrupt\nPower-down mode is terminated and the CPU services the TIC\ninterrupt. The RETI at the end of the TIC ISR w ill return the\ncore to the instruction after that which enabled power-down.\nI2C or  SPI Interrupt\nPower-down mode is terminated and the CPU services the I2C/SPI\ninterrupt. The RETI at the end of the ISR will return the core to\nthe instruction after that which enabled power-down. It should benoted that the I\n2C/SPI power down interrupt enable bit (SERIPD)\nin the PCON SFR must first be set to allow this mode of operation.\nINT0  Interrupt\nPower-down mode is terminated and the CPU services the INT0\ninterrupt. The RETI at the end of the ISR will return the core\nto the instruction after that which enabled power-down. It should\nbe noted that the INT0  power-down interrupt enable bit (INT0PD)\nin the PCON SFR must first be set to allow this mode of operation.\nPower-On Reset\nAn internal POR (Power-On Reset) is implemented on theADuC831. For DV\nDD below 2.45 V, the internal POR will hold\nthe ADuC831 in reset. As DV DD rises above 2.45 V an internal\ntimer will timeout for approximately 128 ms before the part isreleased from reset with a 16 MHz crystal. With other crystalvalues the timeout will increase. The user must ensure that the\npower supply has reached a stable 2.7 V minimum level by this\ntime. Likewise on power-down, the internal POR will hold theADuC831 in reset until the power supply has dropped below 1 V.\nFigure 62 illustrates the operation of the internal POR in detail.\nREV.  A\nADuC831\n–63–128ms TYP 1.0V TYP 128ms TYP2.45V TYP\n1.0V TYP\nINTERNAL\nCORE RESETDVDD\nFigure 62. Internal POR Operation\nGrounding and Board Layout Recommendations\nAs with all high resolution data converters, special attention must\nbe paid to grounding and PC board layout of ADuC831-baseddesigns in order to achieve optimum performance from the\nADC and DACs.\nAlthough the ADuC831 has separate pins for analog and digital\nground (AGND and DGND), the user must not tie these to twoseparate ground planes unless the two ground planes are con-\nnected together very close to the ADuC831, as illustrated in the\nsimplified example of Figure 63a. In systems where digital andanalog ground planes are connected together somewhere else\n(at the system’s power supply for example), they cannot be con-\nnected again near the ADuC831 since a ground loop would result.\nIn these cases, tie the ADuC831’s AGND and DGND pins all\nto the analog ground plane, as illustrated in Figure 63b. In systems\nwith only one ground plane, ensure that the digital and analog\ncomponents are physically separated onto separate halves of the\nboard such that digital return currents do not flow near analog\ncircuitry and vice versa. The ADuC831 can then be placed betweenthe digital and analog sections, as illustrated in Figure 63c.\nIn all of these scenarios, and in more complicated real-life applica-\ntions, keep in mind the flow of current from the supplies and back\nto ground. Make sure the return paths for all currents are as\nclose as possible to the paths the currents took to reach their desti-nations. For example, do not power components on the analog\nside of Figure 63b with DV\nDD since that would force return currents\nfrom DV DD to flow through AGND. Also, try to avoid digital\ncurrents flowing under analog circuitry, wh ich could happen if\nthe user placed a noisy digital chip on the left half of the board inFigure 63c. Whenever possible, avoid large discontinuities in theground plane(s) (such as are formed by a long trace on the same\nlayer), since they force return signals to travel a longer path. And\nof course, make all connections to the ground plane directly,with little or no trace separating the pin from its via to ground.\nNote that the bottom paddle of the CSP package should notbe connected to ground. It should be left unconnected.\nIf the user plans to connect fast logic signals (rise/fall time < 5 ns) to\nany of the ADuC831’s digital inputs, add a series resistor to each\nrelevant line to keep rise and fall times longer than 5 ns at the\nADuC831 input pins. A value of 100 Ω or 200 Ω is usually suffi-\ncient to prevent high speed signals from coupling capacitively into\nthe ADuC831 and affecting the accuracy of ADC conversions.DGND AGNDPLACE ANALOG\nCOMP ONENTS\nHEREPLACE DIGITAL\nCOMP ONENTS\nHERE\nGNDPLACE ANALOG\nCOMP ONENTS\nHEREPLACE DIGITAL\nCOMP ONENTS\nHEREDGNDa.\nAGNDPLACE ANALOG\nCOMP ONENTS\nHEREPLACE DIGITAL\nCOMP ONENTS\nHERE\nb.\nc.\nFigure 63. System Grounding Schemes\nOTHER HARDWARE CONSIDERATIONS\nTo facilitate in-circuit programming, plus in-circuit debug and\nemulation options, use rs will want to implement some simple\nconn ection points in their hardware that will allow easy access\nto download, debug, and emulation modes.\nIn-Circuit Serial Download Access\nNearly all ADuC831 designs will want to take advantage of the\nin-circuit reprogrammability of the chip. This is accomplished by\na connection to the ADuC831’s UART, which requires an exter-nal RS-232 chip for level translation if downloading code from\na PC. Basic configuration of an RS-232 connection is illustrated\nin Figure 66 with a simple ADM202-based circuit. If users wouldrather not design an RS-232 chip onto a board, refer to the\napplication note “uC006–A 4-Wire UART-to-PC Interface” * for\na simple (and zero-cost-per-board) method of gaining in-circuit\nserial download access to the ADuC831.\nIn addition to the basic UART connections, users will also need\na way to trigger the chip into download mode. This is accom-\nplished via a 1 k Ω  pull-down resistor that can be jumpered onto\nthe PSEN  pin, as shown in Figure 64. To get the ADuC831 into\ndownload mode, simply connect this jumper and power-cycle thedevice (or manually reset the device, if a manual reset button isavailable) and it will be ready to receive a new program serially.\nWith the jum per removed, the device will come up in normal\nmode (and run the program) whenever power is cycled or RESET\nis toggled.\n*Application Note uC006 is available at www.analog.com/microconverter\nREV.  A\n–64–ADuC831\nC1+\nV+\nC1–\nC2+\nC2–\nV–\nT2OUT\nR2INVCC\nGND\nT1OUT\nR1IN\nR1OUT\nT1IN\nT2IN\nR2OUTADM202\n1\n2\n3\n4\n5\n6\n78\n9DVDD\n9-PIN D-SUB\nFEMALEDVDD\n2734\n33\n31\n30\n29\n2839\n38\n37\n36\n35\n3240 47 46 44 43 42 41 52 51 50 49 48 45DVDD 1k/H9024 DVDD\n1k/H9024\n2-PIN HEADER FOR\nEMULATION ACCESS(NORMALLY OPEN)DOWNLOAD/DEBUG\nENABLE JUMPER\n(NORMALLY OPEN)\n11.0592MHz\nDVDDAVDD\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nDVDD\nDGND\nPSEN\nEA\nDGND\nDVDD\nXTAL2\nXTAL1RESET\nRXD\nTXD\nDVDD\nDGND\nNOT CONNECTED IN THIS EXAMPLEADuC831ADC0\nADC7ANALOG INPUT\nVREF OUTPUT\nDAC OUTPUT\nFigure 64. Example ADuC831 System  (PQFP Package)\nNote that PSEN  is normally an output (as described in the External\nMemory Interface section) and is sampled as an input only on the\nfalling edge of RESET (i.e., at power-up or upon an external\nmanual reset). Note also that if any external circuitry uninten-tionally pulls PSEN  low during power-up or reset events, it could\ncause the chip to enter download mode and therefore fail to beginuser code execution as it should. To prevent this, ensure that noexternal signals are capable of pulling the PSEN  pin low, except\nfor the external PSEN  jumper itself.\nEmbedded Serial Port Debugger\nFrom a hardware perspective, entry into serial port debug modeis identical to the serial download entry sequence described\nabove. In fact, both serial download and serial port debug modes\ncan be thought of as essentially one mode of operation used in\ntwo different ways.\nNote that the serial port debugger is fully contained on the ADuC831\ndevice, (unlike ROM monitor type debuggers) and therefore no\nexternal memory is needed to enable in-system debug sessions.Single-Pin Emulation Mode\nAlso built into the ADuC831 is a dedicated controller for\nsingle- pin in-circuit emulation (ICE) using standard production\nADuC831 devices. In this mode, emulation access is gained by\nconnection to a single pin, the EA pin. Normally, this pin is hard-\nwired either high or low to select execution from internal orexternal program memory space, as described earlier. To enablesingle-pin emulation mode, however, users will need to pull the\nEA pin high through a 1 k Ω  resistor as shown in Figure 64. The\nemulator will then connect to the 2-pin header also shown in\nFigure 64. To be compatible with the standard connector that\ncomes with the single-pin emulator available from Accutron Lim-\nited ( www.accutron.com), use a 2-pin 0.1-inch pitch “Friction\nLock” header from Molex (www.molex.com) such as their\npart num ber 22-27-2021. Be sure to observe the polarity of this\nheader. As represented in Figure 64, when the Friction Lock tabis at the right, the ground pin should be the lower of the two\npins (when viewed from the top).\nTypical System Configuration\nA typical ADuC831 configuration is shown in Figure 64. It sum-\nmarizes some of the hardware considerations discussed in the\nprevious paragraphs.\nREV.  A\nFigure 66.  Typical Debug Session  \nWindows is a registered trademark of Microsoft Corporation.  ADuC831\n–65–DEVELOPMENT TOOLS\nThere are two models of development tools available for the\nADuC831, namely:\nQuickStart—Entry-level development system\nQuickStart Plus—Comprehensive development system\nThese systems are described briefly below.\nQuickStart Development System\nThe QuickStart Development System is an entry-level, low cost\ndevelopment tool suite supporting the ADuC831. The system\nconsists of the following PC-based (Windows® compatible)\nhardware and software development tools.\nHardware: ADuC831 Evaluation Board and\nSerial Port P rogramming Cable.\nSoftware: ASPIRE Integrated Development\nEnvironment. Incorporates 8051\nassembler and serial port debugger.\nSerial Download Software.\nMiscellaneous: CD-ROM Documentation and\nPrototype Device.\nFigure 65 shows the typical components of a QuickStart\nDevel opment System. A brief description of some of the software\ntools components in the QuickStart Development System follows.\nFigure 65. Components of the QuickStar\nDevelopment System\nDownload—In-Circuit Serial Downloader\nThe Serial Downloader is a W indows application th at allows\nthe user to serially download an assembled program (Intel Hex\nformat file) to the on-chip program FLASH memory via the\nserial COM1 port on a standard PC. An Application Note\n(uC004) detailing this serial download protocol is available from\nwww.analog.com/microconverter.\nASPIRE—IDE\nThe ASPIRE Integrated Development Environment is a Windows\napplication that allows the user to compile, edit, and debug code\nin the same environment. The ASPIRE software allows users todebug code execution on silicon using the MicroConverter UART\nserial port. The debugger provides access to all on-chip periph erals\nduring a typical debug session as well as single-step, animate,and break-point code execution control.\nNote, the ASPIRE IDE software is also included as part of the\nQuickStart Plus System. As part of the QuickStart Plus System,\nthe ASPIRE IDE also supports mixed level and C source debug.\nThis is not available in the Q uickStart System, but there is an\nexample project that demonstrates this capability.\nQuickStart Plus Development System\nThe QuickStart Plus Development system offers users enhancednonintrusive debug and emulation tools. The System consists ofthe following PC based (Windows compatible) hardware and\nsoftware development tools.\nHardware: ADuC831 P rototype Board\nAccutron Nonintrusive Single Pin Emulator\nSoftware: ASPIRE Integrated Development\nEnvironment. Features full ‘C’ and\nassembly emulation using the Accutronsingle pin emulator.\nMiscellaneous: CD-ROM Documentation.\nFigure 67. Accutron Single Pin Emulator\nREV.  A\n–66–ADuC831\nTIMING SPECIFICATIONS1, 2, 3(AV DD = DV DD = 3.0 V or 5.0 V /H11550 10%. All specifications T A = T MIN to T MAX, unless otherwise noted.)\n     12 MHz        Variable Clock\nParameter Min Typ Max Min Typ Max Unit Figure\nCLOCK INPUT (External Clock Driven XTAL1)\ntCK XTAL1 Period 83.33 62.5 1000 ns 68\ntCKL XTAL1 Width Low 20 20 ns 68\ntCKH XTAL1 Width High 20 20 ns 68\ntCKR XTAL1 Rise Time 20 20 ns 68\ntCKF XTAL1 Fall Time 20 20 ns 68\ntCYC4ADuC831 Machine Cycle Time 1 12t CK µs\nNOTES\n1AC inputs during testing are driven at DV DD–0.5 V for a Logic 1 and 0.45 V for a Logic 0. Timing measurements are made at V IH min for a Logic 1 and V IL max for\na Logic 0.\n2For timing purposes, a port pin is no longer floating when a 100 mV change from load voltage occurs. A port pin begins to float  when a 100 mV change from the\nloaded V OH/VOL level occurs.\n3CLOAD for Port0, ALE, PSEN  outputs = 100 pF; C LOAD for all other outputs = 80 pF unless otherwise noted.\n4ADuC831 Machine Cycle Time is nominally defined as MCLKIN/12.\ntCKH\ntCKL\ntCKtCKFtCKR\nFigure 68. XTAL 1 Input\nDVDD – 0.5V\n0.45V0.2DVDD + 0.9V\nTEST POINTS\n0.2DVDD –  0.1VVLOAD – 0.1V\nVLOAD\nVLOAD + 0.1VTIMING\nREFERENCE\nPOINTSVLOAD – 0.1V\nVLOAD\nVLOAD – 0.1V\nFigure 69. Timing Waveform Characteristics\nREV.  A\nADuC831\n–67– 12 MHz     Variable Clock\nParameter Min Max Min Max Unit Figure\nEXTERNAL PROGRAM MEMORY READ CYCLE\ntLHLL ALE Pulsewidth 127 2tCK–4 0 n s 7 0\ntAVLL Address Valid to ALE Low 43 tCK–4 0 n s 7 0\ntLLAX Address Hold after ALE Low 53 tCK–3 0 n s 7 0\ntLLIV ALE Low to Valid Instruction In 234 4tCK–100 ns 70\ntLLPL ALE Low to PSEN  Low 53 t CK–3 0 n s 7 0\ntPLPH PSEN  Pulsewidth 205 3t CK–4 5 n s 7 0\ntPLIV PSEN  Low to Valid Instruction In 145 3t CK–105 ns 70\ntPXIX Input Instruction Hold after PSEN 00 n s 7 0\ntPXIZ Input Instruction Float after PSEN 59 tCK–2 5 n s 7 0\ntAVIV Address to Valid Instruction In 312 5tCK–105 ns 70\ntPLAZ PSEN  Low to Address Float 25 25 ns 70\ntPHAX Address Hold after PSEN  High 0 0 ns 70\ntLHLL\ntAVLL\nPCL\n(OUT)INSTRUCTION\n(IN)\nPCHMCLK\nALE (O)\nPSEN  (O)\nPORT 0 (I/O)\nPORT 2 (O)tLLPL\ntLLAXtPLAZ\ntPXIXtPXIZtPLIVtLLIVtPLPH\ntPHAXtAVIV\nFigure 70. External Program Memory Read Cycle\nREV.  A\n–68–ADuC831\n       12 MHz    Variable Clock\nParameter Min Max Min Max Unit Figure\nEXTERNAL DATA MEMORY READ CYCLE\ntRLRH RD Pulsewidth 400 6t CK–100 ns 71\ntAVLL Address Valid after ALE Low 43 tCK–4 0 n s 7 1\ntLLAX Address Hold after ALE Low 48 tCK–3 5 n s 7 1\ntRLDV RD Low to Valid Data In 252 5t CK–165 ns 71\ntRHDX Data and Address Hold after RD 00 n s 7 1\ntRHDZ Data Float after RD 97 2t CK–70 ns 71\ntLLDV ALE Low to Valid Data In 517 8tCK–150 ns 71\ntAVDV Address to Valid Data In 585 9tCK–165 ns 71\ntLLWL ALE Low to RD or WR Low 200 300 3t CK–5 0 3 t CK+5 0 n s 7 1\ntAVWL Address Valid to RD or WR Low 203 4t CK–130 ns 71\ntRLAZ RD Low to Address Float 0 0 ns 71\ntWHLH RD or WR High to ALE High 43 123 t CK–4 0 6 t CK–100 ns 71\ntLLAX\nDATA (IN)MCLK\nALE (O)\nPSEN  (O)\nPORT 0 (I/O)\nPORT 2 (O)RD (O )tLLDV\ntLLWL\ntAVWL\ntAVLL\ntAVDVtRLAZtRLDV\ntRHDXtRHDZtWHLH\nA0–A7\n(OUT)\nA16–A23 A8–A15tRLRH\nFigure 71. External Data Memory Read Cycle\nREV. A\nADuC831\n–69–      12 MHz   Variable Clock\nParameter Min Max Min Max Unit Figure\nEXTERNAL DATA MEMORY WRITE CYCLE\ntWLWH WR Pulsewidth 400 6tCK–100 ns 72\ntAVLL Address Valid after ALE Low 43 tCK–4 0 n s 7 2\ntLLAX Address Hold after ALE Low 48 tCK–3 5 n s 7 2\ntLLWL ALE Low to RD or WR Low 200 300 3t CK–5 0 3 t CK+5 0 n s 7 2\ntAVWL Address Valid to RD or WR Low 203 4t CK–130 ns 72\ntQVWX Data Valid to WR Transition 33 t CK–5 0 n s 7 2\ntQVWH Data Setup before WR 433 7t CK–150 ns 72\ntWHQX Data and Address Hold after WR 33 t CK–5 0 n s 7 2\ntWHLH RD or WR High to ALE High 43 123 t CK–4 0 6 t CK–100 ns 72\ntLLAX\nDATAMCLK\nALE (O)\nPSEN  (O)\nPORT 2 (O)tLLWL\ntAVWL\ntAVLLtQVWX tWHQXtWHLH\nA0–A7\nA16–A23 A8–A15tWLWH\ntQVWHWR (O)\nFigure 72. External Data Memory Write Cycle\nREV. A\n–70–ADuC831\n 12 MHz Variable Clock\nParameter Min Typ Max Min Typ Max Unit Figure\nUART TIMING (Shift Register Mode)\ntXLXL Serial Port Clock Cycle Time 1.0 12tCK µs7 3\ntQVXH Output Data Setup to Clock 700 10tCK – 133 ns 73\ntDVXH Input Data Setup to Clock 300 2tCK + 133 ns 73\ntXHDX Input Data Hold after Clock 0 0 ns 73\ntXHQX Output Data Hold after Clock 50 2tCK – 117 ns 73\nSET RI\nOR\nSET TI0\nBIT 1tXLXLALE (O)\nTxD\n(OUTPUT CLOCK)\nRxD\n(OUTPUT DATA)\nRxD\n(INPUT DATA)1\nBIT 6 MSB\nMSB BIT 6 BIT 1 LSBtXHQXtQVXH\ntDVXHtXHDX6 7\nLSB\nFigure 73. UART Timing in Shift Register Mode\nREV. A\nADuC831\n–71–Parameter Min Max Unit Figure\nI2C COMPATIBLE INTERFACE TIMING\ntL SCLOCK Low Pulsewidth 4.7 µs7 4\ntH SCLOCK High Pulsewidth 4.0 µs7 4\ntSHD Start Condition Hold Time 0.6 µs7 4\ntDSU Data Setup Time 100 µs7 4\ntDHD Data Hold Time 0.9 µs7 4\ntRSU Setup Time for Repeated Start 0.6 µs7 4\ntPSU Stop Condition Setup Time 0.6 µs7 4\ntBUF Bus Free Time Between a STOP 1.3 µs7 4\nCondition and a START Condition\ntR Rise Time of Both SCLOCK and SDATA 300 ns 74\ntF Fall Time of Both SCLOCK and SDATA 300 ns 74\ntSUP* Pulsewidth of Spike Suppressed 50 ns 74\n*Input filtering on both the SCLOCK and SDATA inputs suppresses noise spikes less than 50 ns.\nMSBtBUF\nSDATA (I/O)\nSCLK (I)\nSTOP\nCONDITIONSTART\nCONDITIONREPEATED\nSTARTLSB ACK MSB\n12 -7 8 9 1\nS(R) PStPSUtDSU\ntSHDtDHDtSUP\ntDSUtDHD\ntH\ntSUP tLtRSUtRtR\ntF\ntF\nFigure 74. I2C Compatible Interface Timing\nREV.  A\n–72–ADuC831\nParameter Min Typ Max Unit Figure\nSPI MASTER MODE TIMING (CPHA = 1)\ntSL SCLOCK Low Pulsewidth 330 ns 75\ntSH SCLOCK High Pulsewidth 330 ns 75\ntDAV Data Output Valid after SCLOCK Edge 50 ns 75\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns 75\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns 75\ntDF Data Output Fall Time 10 25 ns 75\ntDR Data Output Rise Time 10 25 ns 75\ntSR SCLOCK Rise Time 10 25 ns 75\ntSF SCLOCK Fall Time 10 25 ns 75\nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6–1BITS 6–1\ntDHDtDRtDAV tDFtSH tSL\ntSRtSF\nMSB IN\nFigure 75. SPI Master Mode Timing (CPHA = 1)\nREV.  A\nADuC831\n–73–Parameter Min Typ Max Unit Figure\nSPI MASTER MODE TIMING (CPHA = 0)\ntSL SCLOCK Low Pulsewidth 330 ns 76\ntSH SCLOCK High Pulsewidth 330 ns 76\ntDAV Data Output Valid after SCLOCK Edge 50 ns 76\ntDOSU Data Output Setup before SCLOCK Edge 150 ns 76\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns 76\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns 76\ntDF Data Output Fall Time 10 25 ns 76\ntDR Data Output Rise Time 10 25 ns 76\ntSR SCLOCK Rise Time 10 25 ns 76\ntSF SCLOCK Fall Time 10 25 ns 76\nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6–1BITS 6–1\ntDHDtDRtDAV\ntDFtDOSUtSH tSL\ntSRtSF\nMSB IN\nFigure 76. SPI Master Mode Timing (CPHA = 0)\nREV. A\n–74–ADuC831\nParameter Min Typ Max Unit Figure\nSPI SLAVE MODE TIMING (CPHA = 1)\ntSS SS to SCLOCK Edge 0 ns 77\ntSL SCLOCK Low Pulsewidth 330 ns 77\ntSH SCLOCK High Pulsewidth 330 ns 77\ntDAV Data Output Valid after SCLOCK Edge 50 ns 77\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns 77\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns 77\ntDF Data Output Fall Time 10 25 ns 77\ntDR Data Output Rise Time 10 25 ns 77\ntSR SCLOCK Rise Time 10 25 ns 77\ntSF SCLOCK Fall Time 10 25 ns 77\ntSFS SS High after SCLOCK Edge 0 ns 77\nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6–1 LSB\nBITS 6–1 LSB IN\ntDHDtDSUtDRtDFtDAVtSHtSL tSR tSFtSFS\nMSB INtSS\nFigure 77. SPI Slave Mode Timing (CPHA = 1)\nREV. A\nADuC831\n–75–Parameter Min Typ Max Unit Figure\nSPI SLAVE MODE TIMING (CPHA = 0)\ntSS SS to SCLOCK Edge 0 ns 78\ntSL SCLOCK Low Pulsewidth 330 ns 78\ntSH SCLOCK High Pulsewidth 330 ns 78\ntDAV Data Output Valid after SCLOCK Edge 50 ns 78\ntDSU Data Input Setup Time before SCLOCK Edge 100 ns 78\ntDHD Data Input Hold Time after SCLOCK Edge 100 ns 78\ntDF Data Output Fall Time 10 25 ns 78\ntDR Data Output Rise Time 10 25 ns 78\ntSR SCLOCK Rise Time 10 25 ns 78\ntSF SCLOCK Fall Time 10 25 ns 78\ntDOSS Data Output Valid after SS E dge 20 ns 78\ntSFS SS High after SCLOCK Edge 0 ns 78\nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6–1 LSB\nBITS 6–1 LSB IN\ntDHDtDSUtDRtDFtDAV\ntDOSStSHtSL\ntSRtSFtSFS\nMSB INtSS\nFigure 78. SPI Slave Mode Timing (CPHA = 0)\nREV.  A\nPRINTED IN U.S.A.\n–76–ADuC831\nREV. AOUTLINE DIMENSIONS \n52-Lead Metric Quad Flat Package [MQFP] \n(S-52-2) \nDimensions shown in millimeters \n56-Lead Lead Frame Chip Scale Package [LFCSP] \n 8 x 8 mm Body and 0.75 mm Package Height \n(CP-56-11) \nDimensions shown in millimeters COMPLIANT TO JEDEC STANDARDS MO-112-AC-214.15\n13.90  SQ\n13.652.45\nMAX1.03\n0.88\n0.73\n1452\n262740\n39\n132.10\n2.00\n1.95\n7°\n0°0.25\n0.15\n0.100.23\n0.1110.20\n10.00 SQ\n 9.80\n0.65 BSC\nLEAD PITCHLEAD WIDTH0.10\nCOPLANARITYSEATING\nPLANE1.95 REF 1\nVIEW A\nVIEW A\nROTATED 90° CCW\n06-10-20014-BTOP VIEW\n(PINS DOWN)\n0.38\n0.22\n0.50\nBSCPIN 1\nINDICATORPIN 1\nINDICATOR\n*6.25\n6.10 SQ\n5.95\n0.50\n0.40\n0.30\nSEATING\nPLANE0.80\n0.75\n0.700.05 MAX\n0.02 NOM\n0.20 REFCOPLANARITY\n0.080.300.230.18\n08-23-2013-A8.10\n8.00 SQ\n7.90\nFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TO\nTHE PIN CONFIGURATION AND\nFUNCTION DESCRIPTIONS\nSECTION OF THIS DATA SHEET.0.25 MIN\n6.50 REF\n*COMPLIANT TO JEDEC STANDARDS MO-220-WLLD-2\nWITH EXCEPTION TO EXPOSED PAD DIMENSION.156\n14\n1543\n42\n2829\nTOP VIEW BOTTOM VIEWEXPOSED\nPADPKG-004356\nData Sheet  ADuC831 \nREVISION HISTORY  \n5/16— Rev. 0 to Rev. A \nChanges to Ordering Guide  ............................................................. 7 \nChanges to 56 -Lead CSP Pin Configuration  ................................. 8 \nChanges to Pin Function Descriptions Table  .............................. 10 \nUpdated Outline Dimensions  ........................................................ 76 \n©2002 –2016  Analog Devices, Inc. All rights reserved. Trademarks and   \n registered trademarks are the property of their respective owners.  \nD02986-0- 5/16(A)  \n–77– REV.  A\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n \n \n Analog Devices Inc.:   \n\xa0 EVAL-ADUC831QSZ\xa0 ADUC831BCPZ\xa0 ADUC831BCPZ-REEL\xa0 ADUC831BSZ\xa0 ADUC831BSZ-REEL\n'}]
!==============================================================================!
### Component Summary: ADuC831BSZ

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 3 V to 5 V
- **Current Ratings**: 
  - Normal Mode: 6 mA (5 V), 3 mA (3 V)
  - Power-Down Mode: 15 µA
- **Power Consumption**: 
  - Core: 6 mA (5 V), 3 mA (3 V)
  - ADC: 1.3 mA (5 V), 1.0 mA (3 V)
  - DAC: 250 µA (5 V), 200 µA (3 V) per DAC
- **Operating Temperature Range**: 
  - Industrial: -40 °C to +125 °C
- **Package Type**: 
  - 52-Lead Metric Quad Flat Package (MQFP) or 56-Lead Lead Frame Chip Scale Package (LFCSP)
- **Special Features**: 
  - Integrated 12-bit ADC and DACs
  - On-chip temperature sensor and voltage reference
  - DMA controller for high-speed ADC-to-RAM capture
  - 62 kBytes Flash/EE program memory and 4 kBytes Flash/EE data memory
  - Supports UART, I2C, and SPI communication
- **Moisture Sensitive Level**: 
  - JEDEC J-STD-020E: Level 1

#### Description:
The **ADuC831** is a fully integrated data acquisition system that combines a high-performance, self-calibrating multi-channel 12-bit ADC, dual 12-bit DACs, and a programmable 8051-compatible microcontroller on a single chip. It is designed for precision applications requiring analog-to-digital and digital-to-analog conversions, making it suitable for various embedded systems.

#### Typical Applications:
- **Optical Networking**: Used for laser power control.
- **Base Station Systems**: Employed in communication systems for signal processing.
- **Precision Instrumentation**: Ideal for smart sensors and measurement devices.
- **Transient Capture Systems**: Useful in data acquisition systems and communications.
- **Data Acquisition Systems (DAS)**: Facilitates the collection and processing of data from various sensors.

The ADuC831 is particularly beneficial in applications where high accuracy and low power consumption are critical, such as in battery-operated devices and remote sensing applications. Its integrated features reduce the need for external components, simplifying design and reducing overall system costs.