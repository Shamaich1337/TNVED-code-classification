[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': "Give me information about the component of ADUC842BSZ62-5 production of ANALOG DEVICES from the text: \n MicroConverter 12 -Bit ADCs and DACs with  \nEmbedded High Speed 62  kB Flash MCU  \nData Sheet  ADuC841 /ADuC842 /ADuC843  \n \n Rev.  B Document Feedback  \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other rights of third parties that may result from its use. Specifications subject to change without notice. No \nlicense is granted by implication or otherwise under any patent or patent rights of Analog Devices. \nTrademarks and registered trademarks are the property of their respective owners.    \n \nOne Technology Way, P.O. Box 9106,  Norwood, MA 02062 -9106, U.S.A.  \nTel: 781.329.4700  ©2003 –2017  Analog Devices, Inc. All rights reserved.  \nTechnical Support  www.analog.com   FEATURES  \nPin compatible  upgrade of ADuC812/ ADuC831 /ADuC832  \nIncreased performance  \nSingle -cycle 20 MIPS 8052 core \nHigh speed 420 kSPS 12- bit ADC  \nIncreased memory  \nUp to 62 kBytes on -chip Flash/EE program memory  \n4 kBytes on -chip Flash/EE data memory  \nIn-circuit reprogrammable  \nFlash/EE, 100 year retention, 100 kCycle endurance  \n2304 bytes on -chip data RAM  \nSmaller package  \n8 mm × 8 mm chip scale package  \n52-lead PQFP— pin-compatible  upgrade  \nAnalog I/O  \n8-channel, 420 kSPS high accuracy, 12- bit ADC  \nOn-chip, 15 ppm/°C voltage reference  \nDMA controller, high speed ADC -to-RAM capture  \nTwo 12 -bit voltage output DACs1 \nDual output PWM ∑ -∆ DACs  \nOn-chip temperature  monitor function  \n8052 based core  \n8051 compatible instruction set (20 MHz max)  \nHigh performance single -cycle core  \n32 kHz external cr ystal, on -chip programmable PLL  \n12 interrupt sources, 2 priority levels  \nDual data pointers, exte nded 11- bit stack pointer  \nOn-chip peripherals  \nTime interval counter (TIC)  \nUART, I2C®, and SPI® Serial I/O  \nWatchdog timer (WDT)  \nPower supply monitor (PSM)  \nPower  \nNormal: 4.5 mA @ 3 V (core CLK = 2.098 MHz)  \nPower -down: 10 µ A @ 3 V2 \nDevelopment tools  \nLow cost,  comprehensive development system \nincorporating nonintrusive single -pin emulation,  \nIDE based assembly and C source debugging  \nAPPLICATIONS  \nOptical networking —laser power control  \nBase station systems \nPrecision instrumentation, smart sensors  \nTransient capture systems  \nDAS and communications systems \n \n1 ADuC841/ ADuC842 only.  \n2 ADuC842/ ADuC843 only, ADuC8 41 driven directly by external crystal.  FUNCTIONAL  BLOCK  DIAGRAM  \n62kBYTES FLASH/EE PROGRAM MEMORY\n4kBYTES FLASH/EE DATA MEMORY\n2304 BYTES USER RAM\n3×16 BIT TIMERS\n1×REALTIMECLOCK\n4× PARALLEL\nPORTS20 MIPS 8052 BASED MCU WITH ADDITIONAL\nPERIPHERALSADuC841/ADuC842/ADuC843\nXTAL2 XTAL1TEMP\nSENSOR\nCREFINTERNAL\nBAND GAP\nVREFADC0\nADC1\nADC5\nADC6\nADC7\nOSC12-BIT\nDACDAC1\nPWM0T/H\nMUX12-BIT ADC\nHARDWARE\nCALIBRATONBUF\nDAC1BUF\nPWM112-BIT\nDAC\n16-BIT\nΣ-∆DAC\n16-BIT\nPWM\n16-BIT\nPWM\nPOWER SUPPLY MON\nWATCHDOG TIMER\nUART,I2C, AND SPI\nSERIAL I/OMUX16-BIT\nΣ-∆DAC\n03260-0-001PLL2\nFigure 1. \nGENERAL  DESCRIPTION  \nThe ADuC841/ ADuC842/ ADuC8431 are complete smart \ntransducer front ends, that inte grates a high performance self -\ncalibrating multicha nnel ADC, a dual DAC, and an optimized \nsingle -cycle 20 MHz 8 -bit MCU (8051 instruction set compatible) \non a  single chip.  \nThe ADuC841 and ADuC842 are identical with the exception \nof the clock oscillator circuit; the A DuC841 is clocked directly \nfrom an external crystal up to 20 MHz whereas the ADuC842 \nuses a 32 kHz crystal with an on -chip PLL generating a \nprogrammable core clock up to 16.78 MHz.  \nThe ADuC843 is identical to the ADuC842 except that the \nADuC843 has no analog DAC outputs.  \nThe micr ocontroller is an optimized 8052 core offering up to \n20 MIPS peak performance. Three different memory options \nare available offering up to 62 kBytes of no nvolatile Flash/EE \nprogram memory. Four kBy tes of nonvolatile Flash/EE data \nmemory, 256 bytes RAM, and 2  kBytes of extended RAM are \nalso int egrated on -chip.  \n \n1 Protected by U.S. Patent N o. 5,969,657.  \n                   ( continued on page 23)  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 2 of 95 TABLE OF CONTENTS  \nFeatures  .............................................................................................. 1 \nApplications  ....................................................................................... 1 \nFunctional Block Diagram  .............................................................. 1 \nGeneral Description  ......................................................................... 1 \nRevision History  ............................................................................... 2 \nSpecifications  ..................................................................................... 3 \nAbsolute Maximum Ratings  ............................................................ 8 \nESD Caution  .................................................................................. 8 \nPin Configurations and Function Descriptions  ........................... 9 \nTerminology  .................................................................................... 19 \nADC Specifications  .................................................................... 19 \nDAC Specifications ..................................................................... 19 \nTypical Performance Characteristics  ........................................... 20 \nFunctional Description  .................................................................. 24 \n8052 Instruction Set  ................................................................... 24 \nOther Single -Cycle Core Features  ............................................ 26 \nMemory Organization  ............................................................... 27 \nSpecial Function Regi sters (SFRs)  ............................................ 28 \nAccumulator SFR (ACC)  ........................................................... 29 \nSpecial Function Register Banks  .............................................. 30 \nADC Circuit Information .......................................................... 31 \nCalibrating the ADC  .................................................................. 38 \nNonvolatile Flash/EE Memory  ................................................. 39 \nUsing Flash/EE Data Memory  .................................................. 42 User Interface to On -Chip Peripherals .................................... 46 \nOn-Chip PLL .............................................................................. 49 \nPulse -Width Modulator (PWM)  .............................................. 50 \nSerial Peripheral Interface (SPI)  ............................................... 53 \nI2C Compa tible Interface  ........................................................... 56 \nDual Data Pointer  ....................................................................... 59 \nPower Supply Monitor  ............................................................... 60 \nWatchdog Timer  ......................................................................... 61 \nTime Interval Counter (TIC)  .................................................... 62 \n8052 Compatible On -Chip Peripherals  ................................... 65 \nTimer/Counter 0 and 1 Operating Modes  .............................. 70 \nTimer/Counter Operating Modes  ............................................ 72 \nUART Serial Interface  ................................................................ 73 \nSBUF  ............................................................................................ 73 \nInterrupt System  ......................................................................... 78 \nHardware Design Considerations  ............................................ 80 \nOther Hardware Considerations  .............................................. 84 \nDevelopment Tools  .................................................................... 85 \nQuickStart Develo pment System  ............................................. 85 \nTiming Specifications, ,  .................................................................. 86 \nOutline Dimensions  ....................................................................... 94 \nOrdering Guide  .......................................................................... 95 \n \n \nREVISION  HISTORY  \n6/2017—Rev. A to Rev. B  \nChange to Notes, Figure 4  ............................................................. 14 \nChanges to Figure 96  ...................................................................... 95 \n \n4/2016—Rev. 0 to Rev. A  \nAdded Patent Note, Note 1  .............................................................. 1 \nChanges to Figure 3  and Table 3  ..................................................... 9 Changes to Figure 4  ........................................................................ 14 \nAdded Table 4 ; Renumbered Sequentially  .................................. 14 \nChanges to Using the DAC Section  ............................................. 47 \nUpdated Outline Dimensions  ....................................................... 94 \nChanges to Ordering Guide  .......................................................... 95 \n 11/2003— Revision 0: Initial Version  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 3  of 95 SPECIFICATIONS1 \nTable 1. AV DD = DV DD = 2.7 V to 3.6 V or 4.75 V to 5.25 V; V REF = 2.5 V internal reference, f CORE  = 16.78 MHz @ 5 V 8.38 MHz @ 3 V; \nall specifications T A = T MIN to T MAX, unless ot herwise noted  \nParameter  VDD = 5 V  VDD = 3 V  Unit  Test Conditions/Comments  \nADC CHANNEL SPECIFICATIONS      \nDC ACC URACY2, 3    fSAMPLE  = 120 kHz, see the Typical \nPerformance Characteristics  for typical \nperformance at other values of f SAMPLE \nResolution  12 12 Bits  \nIntegral Nonlinearity  ±1 ±1 LSB max  2.5 V internal reference  \n ±0.3 ±0.3 LSB typ   \nDifferential Nonlinearity  +1/–0.9 +1/–0.9 LSB max  2.5 V internal reference  \n ±0.3  ±0.3  LSB typ   \nIntegral Nonlinearity4 ±2 ±1.5 LSB max  1 V external reference  \nDifferential Nonlinearity4 +1.5/ –0.9 +1.5/ –0.9 LSB max  1 V external reference  \nCode Distribution  1 1 LSB typ  ADC input is a dc voltage  \nCALIBRATED ENDPOINT ERRORS5, 6     \nOffset Error  ±3 ±2 LSB max   \nOffset Error Match  ±1 ±1 LSB typ   \nGain Error  ±3 ±2 LSB max   \nGain Error Match  ±1 ±1 LSB typ   \nDYNAMIC PERFORMANCE     fIN = 10 kHz sine wave  \n    fSAMPLE  = 120 kHz  \nSignal -to-Noise Ratio (SNR)7 71 71 dB typ   \nTotal Harmonic Distortion (THD)  –85 –85 dB typ   \nPeak Harmonic or Spurious Noise –85 –85 dB typ   \nChannel -to-Channel Crosstalk8 –80 –80 dB typ   \nANALOG INPUT      \nInput Voltage Range  0 to V REF 0 to V REF V  \nLeakage Current  ±1 ±1 µA max   \nInput Capacitance  32 32 pF typ   \nTEMPERATURE SENSOR9     \nVoltage Output at 25°C  700 700 mV typ   \nVoltage TC  –1.4 –1.4 mV/°C typ   \nAccuracy  ±1.5  ±1.5  °C typ  Internal/External 2.5 V V REF \n     \nDAC CHANNEL SPECIFICATIONS     DAC load to AGND  \nInternal Buffer Enabled  \nADuC841/ ADuC842  Only     RL = 10 kΩ, C L = 100 pF  \nDC ACCURACY10     \nResolution  12 12 Bits  \nRelative Accuracy  ±3 ±3 LSB typ   \nDifferential Nonlinearity11 –1 –1 LSB max  Guaranteed 12 -bit monotonic  \n ±1/2  ±1/2  LSB typ   \nOffset Error  ±50  ±50  mV max  VREF range  \nGain Error  ±1 ±1 % max  AV DD range  \n ±1 ±1 % typ  VREF range  \nGain Error Mismatch  0.5 0.5 % typ  % of full -scale on DAC1  \nANALOG O UTPUTS      \nVoltage Range_0  0 to V REF 0 to V REF V typ  DAC V REF = 2.5 V  \nVoltage Range_1  0 to V DD 0 to V DD V typ  DAC V REF = V DD \nOutput Impedance  0.5 0.5 Ω typ   \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 4 of 95 Parameter  VDD = 5 V  VDD = 3 V  Unit  Test Conditions/Comments  \nDAC AC CHARACTERISTICS      \nVoltage Output Settling Time  15 15 µs typ  Full-scale settling time to within \n½ LSB of final value  \nDigital -to-Analog Glitch Energy  10 10 nV-sec typ  1 LSB change at major carry  \nDAC CHANNEL SPECIFICATIONS12, 13     \nInternal Buffer Disabled  ADuC841 /ADuC842  Only      \nDC ACCURACY10     \nResolution  12 12 Bits  \nRelative Accuracy  ±3 ±3 LSB typ   \nDifferential N onlinearity11 –1 –1 LSB max  Guaranteed 12 -bit monotonic  \n ±1/2  ±1/2  LSB typ   \nOffset Error  ±5 ±5 mV max  VREF range  \nGain Error  ±0.5 ±0.5 % typ  VREF range  \nGain Error Mismatch4 0.5 0.5 % typ  % of full -scale on DAC1  \nANALOG OUTPUTS      \nVoltage Range_0  0 to V REF 0 to V REF V typ  DAC V REF = 2.5 V  \nREFERENCE INPUT/OUTPUT REFERENCE OUTPUT14     \nOutput Voltage (V REF) 2.5 2.5 V  \nAccuracy  ±10  ±10  mV Max  Of V REF measured at th e C REF pin  \nTA = 25°C  \nPower Supply Rejection  65 67 dB typ   \nReference Temperature Coefficient  ±15  ±15  ppm/°C typ   \nInternal V REF Power -On Time 2 2 ms typ   \nEXTERNAL REFERENCE INPUT15     \nVoltage Range (V REF) 4 1 1 V min   \n VDD VDD V max   \nInput Impedance  20 20 kΩ typ   \nInput Leakage  1 1 µA max  Internal band gap deselected via \nADCCON1.6  \nPOWER SUPPLY MONITOR (PSM)      \nDV DD Trip Point Selection Range   2.93  V min  Two trip points selectable in this \nrange programmed via TPD1 –0 in \nPSMCON, 3 V part only    3.08  V max  \nDV DD Power Supply Trip Point Accuracy   ±2.5 % max   \nWATCHDOG TIMER (WDT) 4     \nTimeout Period  0 0 ms min  Nine timeout periods selectable in \nthis range   2000  2000  ms max  \nFLASH/EE MEMORY RELIABILITY CHARACT ERISTICS16     \nEndurance17 100,000  100,000  Cycles min   \nData Retention18 100 100 Years min   \nDIGITAL INPUTS      \nInput Leakage Current (Port 0, EA) ±10  ±10  µA max  VIN = 0 V or V DD \n ±1 ±1 µA typ  VIN = 0 V or V DD \nLogic 1 Input Current      \n(All Digital Inputs), SDATA, SCLOCK  ±10  ±10  µA max  VIN = V DD \n ±1 ±1 µA typ  VIN = V DD \nLogic 0 Input Current (Ports 1, 2, 3) SDATA, SCLOCK  –75 –25 µA max   \n –40 –15 µA typ  VIL = 450 mV  \nLogic 1 to Logic 0 Transition Current (Ports 2 and 3)  –660 –250 µA ma x VIL = 2 V  \n –400 –140 µA typ  VIL = 2 V  \nRESET  ±10  ±10  µA max  VIN = 0 V  \n 10 5 µA min  VIN = 5 V, 3 V Internal Pull Down  \n 105 35 µA max  VIN = 5 V, 3 V Internal Pull Down  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 5  of 95 Parameter  VDD = 5 V  VDD = 3 V  Unit  Test Conditions/Comments  \nLOGIC INPUTS4     \nINPU T VOLTAGES      \nAll Inputs Except SCLOCK, SDATA, RESET, and \nXTAL1      \nVINL, Input Low Voltage  0.8 0.4 V max   \nVINH, Input High Voltage  2.0 2.0 V min   \nSDATA     \nVINL, Input Low Voltage  0.8 0.8 V max   \nVINH, Input High Voltage  2.0 2.0 V min   \nSCLOCK and R ESET ONLY4 \n(Schmitt -Triggered Inputs)      \nVT+ 1.3 0.95  V min   \n 3.0 0.25  V max   \nVT– 0.8 0.4 V min   \n 1.4 1.1 V max   \nVT+ – VT– 0.3 0.3 V min   \n 0.85  0.85  V max   \nCRYSTAL OSCILLATOR      \nLogic Inputs, XTAL1 Only      \nVINL, Input Low Voltage  0.8 0.4 V typ  \nVINH, Input High Voltage  3.5 2.5 V typ   \nXTAL1 Input Capacitance  18 18 pF typ   \nXTAL2 Output Capacitance  18 18 pF typ   \nMCU CLOCK RATE  16.78  8.38  MHz max  ADuC842/ ADuC843  Only  \n 20 8.38  MHz max  ADuC841 Only  \nDIGITAL OUTPUTS      \nOutput High Voltage (V OH) 2.4  V min  VDD = 4.5 V to 5.5 V  \n 4  V typ  ISOURCE  = 80 µA  \n  2.4 V min  VDD = 2.7 V to 3.3 V  \n  2.6 V typ ISOURCE  = 20 µA  \nOutput Low Voltage (V OL)     \nALE, Ports 0 and 2  0.4 0.4 V max  ISINK = 1.6 mA  \n 0.2 0.2 V typ  ISINK = 1.6 mA  \nPort 3  0.4 0.4 V max  ISINK = 4 mA  \nSCLOCK/SDATA  0.4 0.4 V max  ISINK = 8 mA, I2C Enabled  \nFloating State Leakage Current4 ±10  ±10  µA max   \n ±1 ±1 µA typ   \nSTARTUP TIME     At any core CLK  \nAt Power -On 500 500 ms typ   \nFrom Idle Mode  100 100 µs typ   \nFrom Power-Down Mode      \nWake -up with INT0  Interrupt  150 400 µs typ   \nWake -up with SPI/I2C Interrupt  150 400 µs typ   \nWake -up with External RESET  150 400 µs typ   \nAfter External RESET in Normal Mode 30 30 ms typ   \nAfter WDT Reset in Normal Mode 3 3 ms typ  Controlled via WDCON SFR  \n     \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 6 of 95  \nParameter  VDD = 5 V  VDD = 3 V  Unit  Test Conditions/Comments  \nPOWER REQUIREMENTS19, 20     \nPower Supply Voltages      \nAV DD/DV DD – AGND   2.7 V min  AV DD/DV DD = 3 V nom  \n  3.6 V max   \n 4.75   V min  AV DD/DV DD = 5 V nom  \n 5.25   V max   \nPower Supply Currents Normal  Mode21      \nDV DD Current4 10 4.5 mA typ  Core CLK = 2.097 MHz  \nAV DD Current  1.7 1.7 mA max  Core CLK = 2.097 MHz  \nDV DD Current  38 12 mA max  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \n 33 10 mA typ  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \nAV DD Current  1.7 1.7 mA max  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \nDV DD Current4 45 N/A  mA max  Core CLK = 20MHz ADuC841  Only  \nPower Supply Currents Idle  Mode21     \nDV DD Current  4.5 2.2 mA typ  Core CLK = 2.097 MHz  \nAV DD Current  3 2 µA typ  Core CLK = 2.097 MHz  \nDV DD Current4 12 5 mA max  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \n 10 3.5 mA typ  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \nAV DD Current  3 2 µA typ  Core CLK = 16.78 MHz/8.38 MHz 5 V/3 V  \nPower Supply Currents Power -Down  Mode21    Core CLK = any frequency  \nDV DD Current  28 18 µA max  Oscillator Off / TIMEC ON.1 = 0  \n 20 10 µA typ   \nAV DD Current  2 1 µA typ  Core CLK = any frequency , ADuC841 \nOnly  \nDV DD Current4 3 1 mA max  TIMECON.1 = 1  \nDV DD Current4 50 22 µA max  Core CLK = any frequency  \n 40 15 µA typ  ADuC842 /ADuC843  Only, oscillator on  \nTypical Additional Power Supply Curren ts     \nPSM Peripheral  15 10 µA typ  AV DD = DV DD \nADC4 1.0 1.0 mA min  MCLK Divider = 32  \n 2.8 1.8 mA max  MCLK Divider = 2  \nDAC  150 130 µA typ   \nSee footnotes on the next page.  \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 7  of 95                                                                     \n1 Temperature Range – 40°C to +85°C.  \n2 ADC linearity is guaranteed during normal MicroConverter core operation.  \n3 ADC LSB size = V REF/212, that is, for internal V REF = 2.5 V, 1 LSB = 610 µV, and for external V REF = 1 V, 1 LSB = 244 µV.  \n4 These numbers are not production tested but are supported by design and/or characterization data on production release.  \n5 Offset and gain error and offset and gain error match are measured after  factory calibration.  \n6 Based on external ADC system components, the user may need to execute a system calibration to remove additional external chan nel errors to achieve these \nspecif ications.  \n7 SNR calculation includes distortion and noise components.  \n8 Channel -to-channel crosstalk is measured on adjacent channels.  \n9 The temperature monitor gives a measure of the die temperature directly; air temperature can be inferred from this result.  \n10 DAC linearity is calculated using:  \n      Reduced code range of 100 to 4095, 0 V to V REF range.  \n      Reduced code range of 100 to 3945, 0 V to V DD range.  \n      DAC output load = 10 kΩ  and 100 pF.  \n11 DAC differential nonlinearity specified on 0 V to V REF and 0 V to V DD ranges.  \n12 DAC specification for output impedance in the  unbuffered case depends on DAC code.  \n13 DAC specifications for I SINK, voltage output settling time, and digital- to-analog glitch energy depend on external buffer implementation in unbuffered mode. DAC in \nunbuffered mode tested with OP270 external buffer, w hich has a low input leakage current.  \n14 Measured with C REF pin decoupled with 0.47 µF capacitor to ground. Power -up time for the internal reference is determined by the value of the d ecoupling capacitor \nchosen for the C REF pin. \n15 When using an external ref erence device, the internal band gap reference input can be bypassed by setting the ADCCON1.6 bit.  \n16 Flash/EE memory reliability characteristics apply to both the Flash/EE program memory and the Flash/EE data memory.  \n17 Endurance is qualified to 100,000 cy cles as per JEDEC Std. 22 method A117 and measured at – 40°C, +25°C, and +85°C. Typical endurance at 25°C is 700,000 cycles.  \n18 Retention lifetime equivalent at junction temperature (T J) = 55°C as per JEDEC Std. 22 method A117. Retention lifetime based on an  activation energy of 0.6 eV derates \nwith junction temperature as shown in Figure 38 in the Flash/EE Memory Reliability  section.  \n19 Power supply current consumption is measured in normal, idle, and power -down modes under the following conditions:  \nNormal Mode:  Reset = 0.4 V, digital I/O pins = open circuit, Core Clk changed via CD bits in PLLCON ( ADuC842 /ADuC843), core executing internal \nsoftware loop.  \nIdle Mode:  Reset = 0.4 V, digital I/O pins = open circuit, Core Clk changed via CD bits in PLLCON ( ADuC842 /ADuC843), PCON.0 = 1, core execution \nsuspended in idle mode.  \nPower -Down Mode:  Reset = 0.4 V, all Port 0 pins = 0.4 V, All other digital I/O and Port 1 pins are open circuit , Core Clk changed via CD bits in PLLCON \n(ADuC842/ ADuC843 ), PCON.0 = 1, core execution suspended in power -down mode, OSC turned on or off via OSC_PD bit (PLLCON.7) in \nPLLCON SFR ( ADuC842/ ADuC843).  \n20 DV DD power supply current  increases typically by 3 mA (3 V operation) and 10 mA (5 V operation) during a Flash/EE memory program or erase cycle.  \n21 Power supply currents are production tested at 5.25 V and 3.3 V for a 5 V and 3 V part, respectively.  \n \n \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 8 of 95 ABSOL UTE MAXIMUM RATINGS  \nTable 2. T A = 25°C, unless otherwise noted  \nParameter  Rating  \nAV DD to DV DD –0.3 V to +0.3 V  \nAGND to DGND  –0.3 V to +0.3 V  \nDV DD to DGND, AV DD to AGND  –0.3 V to +7 V  \nDigital Input Voltage to DGND –0.3 V to DV DD + 0.3 V  \nDigital Output Voltage to DGND  –0.3 V to DV DD + 0.3 V  \nVREF to AGND  –0.3 V to AV DD + 0.3 V  \nAnalog Inputs to AGND –0.3 V to AV DD + 0.3 V  \nOperating Temperature Range, \nIndustrial  \nADuC841BS , ADuC842BS , ADuC843BS , \nADuC841BCP , ADuC842BCP , \nADuC843BCP   \n–40°C to +85° C \nStorage Temperature Range  –65°C to +150° C \nJunction Temperature  150° C \nθJA Thermal Impedance (ADuC84xBS)  90°C/W  \nθJA Thermal Impedance (ADuC84xBCP)  52°C/W  \nLead Temperature, Soldering  \nVapor Phase (60 sec)  \nInfrared (15 sec)   \n215° C \n220° C \n Stresses at or above those listed under Absolute Maximum \nRatings may cause permanent damage to the product. This is a stress rating only; functional operation of the product at these \nor any other conditions above those indicated in the operational \nsection of this specification is not implied. Operation beyond the maximum operating conditio ns for extended periods may \naffect product reliability.  \nESD CAUTION  \n \n \n \n \nWATCHDOG\nTIMER256 BYTES USER\nRAM\nPOWER SUPPLY\nMONITORTEMP\nSENSOR\nBAND GAP\nREFERENCEAVDD\nAGND\nDVDD\nDVDD\nDVDD\nDGND\nDGND\nDGND\nRESETPOR\nSDATA\\MOSI\nMISO\nSS\nXTAL1ADuC841/ADuC842/ADuC843\nADC\nCONTROL\nAND\nCALIBRATIONDAC1DAC\nCONTROL12-BIT\nVOLTAGE\nOUTPUT DAC\nT0\nT1\nT2EXT2\nINT0\nINT1EAPSENALE\nSINGLE-PIN\nEMULATORTxDRxD4 kBYTES DATA\nFLASH/EE62 kBYTES PROGRAM\nFLASH/EE INCLUDING\nUSER DOWNLOAD\nMODE\nASYNCHRONOUS\nSERIAL PORT\n(UART)8052\nMCU\nCORE\nDOWNLOADER\nDEBUGGER\nSYNCHRONOUS\nSERIAL INTERFACE\n(I2C AND SPI )16-BIT\nCOUNTER\nTIMERS\nTIME INTERVAL\nCOUNTER\n(WAKE-UP CCT)\nXTAL2OSC2 kBYTES USER XRAM\n2× DATA POINTERS\n11-BIT STACK POINTER12-BIT\nVOLTAGE\nOUTPUT DAC\nMUX...\n...12-BIT\nADCADC0\nADC1\nADC6\nADC7DAC0\nMUX16-BIT\nΣ-∆DAC\nPWM0\nPWM1\n16-BIT\nPWM16-BIT\nPWMPWM\nCONTROL16-BIT\nΣ-∆DACT/H\nCREFBUF\nUART\nTIMER\nSCLOCK\n03260-0-002PLL\n \nFigure 2. ADuC 841 /ADuC842/ ADuC843  Block Diagram (Shaded Areas are Features Not Pr esent on the ADuC812 ), \nNo DACs on ADuC84 3, PLL on ADuC842 /ADuC843  Only.  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 9  of 95 PIN CONFIGURATIONS AND FUNCTION  DESCRIPTIONS \n5251504948 43424140 47464544\n141516171819202122232425261\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n1312PIN 1\nIDENTIFIER39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29\n28\n27P0.7/A7\nP0.6/A6\nP0.5/A5\nP0.4/A4\nDVDD\nDGND\nP0.3/A3\nP0.2/A2\nP0.1/A1\nP0.0/A0\nALE\nPSEN\nEAP1.7/ADC7\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1/MISO/PWM1\nDVDD\nP3.4/T0/PWMC/PWM0/EXTCLK*\nP3.5/T1/CONVST\nP3.6/WR\nP3.7/RD\nSCLOCKP1.0/ADC0/T2\nP1.1/ADC1/T2EX\nP1.2/ADC2\nP1.3/ADC3\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nP1.4/ADC4\nP1.5/ADC5/SS\nP1.6/ADC6P2.7/PWM1/A15/A23\nP2.6/PWM0/A14/A22\nP2.5/A13/A21\nP2.4/A12/A20\nDGND\nDVDD\nXTAL2\nXTAL1\nP2.3/A11/A19\nP2.2/A10/A18\nP2.1/A9/A17\nP2.0/A8/A16\nSDATA/MOSIDGNDADuC841/ADuC842/ADuC843\n52-LEAD MQFP\nTOP VIEW\n(Not to Scale)\n*EXTCLK NOT PRESENT ON THE ADuC841.\n03260-003 \nFigure 3. 52 -Lead MQF P Pin Configuration  \nTable 3. 52-Lead MQFP Pin Function Descriptions  \nPin No.  Mnemonic  Type1 Description  \n1 P1.0/ADC0/T2 I Input Port 1 (P1.0). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Inp ut (ADC0). Channel selection is via ADCCON2 SFR. \n   Timer 2 Digital Input (T2). Input to Timer/Counter 2. When enabled, Counter 2 is \nincremented in response to a 1  to 0 transition of the T2 input.  \n2 P1.1/ADC1/T2EX  I Input Port  1 (P1.1). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Input 1 (ADC1). Channel selection is via ADCCON2 SFR.  \n   Capture/Reload Trig ger for Counter 2 (T2EX). T2EX is a d igital input. This pin also \nfunctions as an up/down control input for Counter 2.  \n3 P1.2/ADC2  I Input Port  1 (P1.2). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To c onfigure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Input (ADC2). Channel selection is via ADCCON2 SFR. \n4 P1.3/ADC3  I Input Port 1 (P1.3). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefault s to analog input mode. To configure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Input (ADC3). Channel selection is via ADCCON2 SFR. \n5 AV DD P Analog Positive Supply Voltage. 3 V or 5 V nominal.  \n6 AGND  G Analog Ground. AGND is the g round reference point for the analog circuitry.  \n7 CREF I/O Decoupling Input for On -Chip Reference. Connect a 0.47 µF capacitor between this \npin and AGND.  \n8 VREF NC Not Connected . This was a reference out put on the ADuC812 ; use the C REF pin \ninstead.  \n9 DAC0  O Voltage Output from DAC0. This pin is a no connect on the ADuC843.  \n10 DAC1  O Voltage Output from DAC1. This pin is a no connect on the ADuC843.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 10 of 95 Pin No.  Mnemonic  Type1 Description  \n11 P1.4/ADC4  Input Port 1 (P1.4). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Input 4 (ADC4). Channel selec tion is via ADCCON2 SFR.  \n12 P1.5/ADC5/ SS I Input Port 1 (P1.5 ). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a 0 to the port bit.  \n   Single -Ended Analog Input 5 (ADC5). Channel selection is via ADCCON2 SFR.  \n   Slave Select Input for the SPI Interface ( SS). \n13 P1.6/ADC6  I Input Port  1 (P1.6). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaul ts to analog input mode. To configure this port pin as a digital input, write a \n0 to the port bit.  \n   Single -Ended Analog Input 6 (ADC6). Channel selection is via ADCCON2 SFR.  \n14 P1.7/ADC7  I Input Port 1 (P1.7). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a 0 to the port bit.  \n   Single -Ended Analog Input 7 (ADC7). Channel selection is via ADCCON2 SFR.  \n15 RESET  I Reset. Digital Input. A high level on  this pin for 24 master clock cycles while the \noscillator is running resets the device.  \n16 P3.0/R xD I/O Input/Output Port 3 (P3.0). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high b y the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull-up \nresistors.  \n   Receiver Data Input (Asynchronous) or Data Input/Output (Synchronous) of the \nSerial (UART) Port (R xD). \n17 P3.1/T xD I/O Input/Output Port 3 (P3.1). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state c an be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull-up resistors.  \n   Transmitter Data Output (Asynchronous) or Clock Output (Synchronous) of the \nSerial (UART) Port (T xD). \n18 P3.2/ INT0  I/O Input/Output Port 3 (P3.2). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Po rt 3 pins \nbeing pulled externally low source current because of the internal pull-up resistors.  \n   Interrupt 0  (INT0 ). Programmable edge or level triggered interrupt input; can be \nprogrammed to one of two priority levels. This pin can a lso be used as a gate \ncontrol input to Timer 0.  \n19 P3.3/ INT1 /MISO/PWM1  I/O Input/Output Port 3 (P3.3). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the intern al \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull-up \nresistors.  \n   Interrupt 1  (INT1 ). Programmable edge or level triggered inte rrupt input; can be \nprogrammed to one of two priority levels. This pin can also be used as a gate \ncontrol input to Timer 1.  \n   SPI Master Input/Slave Output Data I/O Pin for SPI Serial Interface (MISO).  \n   PWM  1 Voltage Output (PWM1) . See the CFG841/CFG8 42 register for further \ninformation.  \n20, 34,  48 DV DD P Digital Positive Supply Voltage. 3 V or 5 V nominal.  \n21, 35, 47  DGND  G Digital Ground. DGND is the ground reference point for the digital circuitry.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 11 of 95 Pin No.  Mnemonic  Type1 Description  \n22 P3.4/T0/PWMC/PWM0/EXTCLK  I/O Input/Output Port  3 (P3.4). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally l ow source current because of the internal pull -up resistors.  \n   Timer/Counter 0 Input (T0).  \n   PWM Clock Input (PWMC).  \n   PWM 0 Voltage Output (PWM0). PWM outputs can be configured to use Port 2.6 \nand Port 2.7 or Port 3.4 and Port 3.3. \n   Input for Ext ernal Clock Signal (EXTCLK). This pin function must be enabled via the \nCFG842 register.  \n23 P3.5/T1/ CONVST  I/O Input/Output Port 3 (P3.5). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to  them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Timer/Counter 1 Input (T1).  \n   Active Low Co nvert Start Logic Input for the ADC Block When the External Convert \nStart Function is Enabled ( CONVST ). A low  to high transition on this input puts the \ntrack-and -hold into hold mode and starts the conversion.  \n24 P3.6/ WR I/O Input/Output Port 3 (P3.6). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Write Control Signal, Logic Output ( WR). Latches the data byte from Port 0 into the \nexternal data memory.  \n25 P3.7/ RD I/O Input/Output Port 3 (P3.7). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled exter nally low source current because of the internal pull -up resistors.  \n   Read Control Signal, Logic Output  (RD). Enables the external data memory to Port 0.  \n26 SCLOCK  I/O Serial Clock Pin for I2C-Compatible Clock or for SPI Serial Interf ace Clock.  \n27 SDATA/MOSI I/O User Selectable, I2C Compatible, or SPI Data Input/Output Pin  (SDATA).  \n   SPI Master Output/Slave Input Data I/O Pin for SPI Interface  (MOSI).  \n28 P2.0/A8/A16  I/O Input/Output Port 2 (P2.0). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pu ll-up resistors.  \n   External Memory Addresses (A8). Port 2 emits the middle order address byte  \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A16). Port 2 emits the high order address byte during \naccesse s to the external 24 -bit external data memory space.  \n29 P2.1/A9/A17  I/O Input/Output Port 2 (P2.1). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal pull-up resistors,  and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.   \n   External Memory Addresses (A9). Port 2 emits the middle order address byte  \nduring accesses to the ex ternal 24 -bit external data memory space.  \n   External Memory Addresses (A17). Port 2 emits the high  order address byte during \naccesses to the external 24 -bit external data memory space.  \n30 P2.2/A10/A18  I/O Input/Output Port 2 (P2.2). Port 2 is a bidirect ional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal pull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of th e internal pull -up resistors.  \n   External Memory Addresses (A10). Port 2 emits the middle order address byte  \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A18).  Port 2 emits the high  order address byte during \naccesses to the external 24 -bit external data memory space.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 12 of 95 Pin No.  Mnemonic  Type1 Description  \n31 P2.3/A11/A19  I/O Input/Output Port 2 (P2.3). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A11). Port 2 emits the middle  order address byte \nduring ac cesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A19). Port 2 emits the high  order address byte during \naccesses to the external 24 -bit external data memory space.  \n32 XTAL1  I Input to the Inverting Oscillator Amplifi er. \n33 XTAL2  O Output of the Inverting Oscillator Amplifier.  \n36 P2.4/A12/A20  I/O Input/Output Port 2 (P2.4). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A12).  Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A20). Port 2 emits the high  order address byte during \naccesses to the external 24 -bit external data memory space.  \n37 P2.5/A13/A21  I/O Input/Output Port 2 (P2.5). Port 2 is  a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A13). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A21). Port 2 emits the high  order ad dress byte  during \naccesses to the external 24 -bit external data memory space.  \n38 P2.6/PWM0/A14/A22  I/O Input/Output Port 2 (P2.6). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   PWM 0 Voltage Output (PWM0). PWM outputs can be configured to use Por t 2.6 \nand Port 2.7 or Port 3.4 and Port 3.3.  \n   External Memory Addresses (A14). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A22). Port 2 emits the high  order address byte during \naccesses to the external 24 -bit external data memory space.  \n39 P2.7/PWM1/A15/A23  I/O Input/Output Port 2 (P2.7). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull-up \nresistors.  \n   PWM 1 Voltage Output  (PWM1) . See the CFG841/CFG842 register for fu rther \ninformation.  \n   External Memory Addresses (A15).  Port 2 emits the middle -order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A23). Port 2 emits the high -order address bytes \nduring acce sses to the external 24 -bit external data memory space.  \n40 EA I External Access Enable, Logic Input. When held high, this input enables the device \nto fetch code from internal program memory locations. The devices  do not \nsupport external code memory. Do not leave t his pin floating.  \n41 PSEN  O Program Store Enable, Logic Output. This pin remains low during internal program \nexecution. PSEN  enable s serial download mode when pulled low through a \nresistor on power -up or reset. On reset , this pin momentarily becomes  an input \nand the status of the pin is sampled. If there is no pull -down resistor in place , the \npin go es momentarily high and then user code execute s. If a pull- down resistor is \nin place, the embedded serial download/debug kernel executes . \n42 ALE O Address Latch Ena ble, Logic Output. This output  latch es the low byte and page \nbyte for 24 -bit address space accesses of the address into external data memory.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 13 of 95 Pin No.  Mnemonic  Type1 Description  \n43 P0.0/A0 I/O Input/Output Port 0 (P0.0). Po rt 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high \nimpedance inputs.  \n   External Memory Address (A0). Port 0 is also the multiplexed low order address \nand data bus duri ng accesses to external data memory. In this application, it uses \nstrong internal pull-up  resistors when emitting 1s.  \n44 P0.1/A1 I/O Input/Output Port 0 (P0.1). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high \nimpedance inputs.  \n   External Memory Address (A1). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up re sistors when emitting 1s.  \n45 P0.2/A2 I/O Input/Output Port 0 (P0.2). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high impedance inputs.  \n   External Memory Address (A2). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n46 P0.3/A3 I/O Input/Output Port 0 (P0.3). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high \nimpedance inputs.  \n   External Memory Address (A3). Port 0 is also the multiplexed low order address \nand data bus during accesses to extern al data memory. In this application, it uses \nstrong internal pull-up resistors when emitting 1s.  \n49 P0.4/A4 I/O Input/Output Port 0 (P0.4). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that s tate can be used as high \nimpedance inputs.  \n   External Memory Address (A4). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting  1s. \n50 P0.5/A5 I/O Input/Output Port 0 (P0.5). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high impedance inputs.  \n   External Memory Address (A5). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n51 P0.6/A6 I/O Input/Output Port 0 (P0.6). Port 0 is an 8 -bit open -drain bidirectional  I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high \nimpedance inputs.  \n   External Memory Address (A6). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In t his application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n52 P0.7/A7 I/O Input/Output Port 0 (P0.7). Port 0 is an 8 -bit open -drain bidirectional I/O port. Port \n0 pins that have 1s written to them float, and in that state can be used as high \nimpedance inputs.  \n   External Memory Address (A7). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n                                                                    \n1 P = power, G = ground, I= in put, O = output., NC = no connect.  \n \n  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 14 of 95 \n03260-004P1.1/ADC1/T2EX\nP1.2/ADC2\nP1.3/ADC3\nAVDDAVDD\nAGND\nAGND\nAGND\nCREF\nVREF\nDAC0\nDAC1\nP1.4/ADC4\nP1.5/ADC5/SS\nP1.6/ADC6\nP.7/ADC7\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1/MISO/PWM1\nDVDD\nDGND\nP3.4/T0/PWMC/PWM0/EXTCLK*\nP3.5/T1/CONVST\nP3.6/WR\nP3.7/RD\nSCLOCK15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n2856\n55\n54\n53\n52\n51\n50\n49\n48\n47\n46\n45\n44\n43\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n1442\n41\n40\n39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29TOP VIEW\n(Not to Scale)ADuC841/ADuC842/ADuC843\n56-LEAD LFCSPP2.7/A15/A23\nP2.6/A14/A22\nP2.5/A13/A21\nP2.4/A12/A20\nDGND\nDGND\nDVDD\nXTAL1\nP2.3/A 11/A19\nP2.2/A10/A18\nP2.1/A9/A17\nP2.0/A8/A16\nSDATA/MOSIXTAL2P1.0/ADC0/T2\nP0.7/A7\nP0.6/A6\nP0.5/A5\nP0.4/A4\nDVDD\nDGND\nP0.3/A3\nP0.2/A2\nP0.1/A1\nP0.0/A0\nALE\nPSEN\nEA\n*EXTCLK NOT PRESENT ON THE ADuC841\nNOTES\n1. THIS LFCS P HAS AN EXPOSED PAD TH AT MUST BE SOLDERED TO THE\nMETAL PLATE ON THE PRINTED CIRCUIT BOARD (PCB) FOR MECHANICA L\nREASONS. THIS ME TAL PLATE MUST NOT BE CONNECTED TO GROUND. \nFigure 4. 56 -Lead LFCSP  Pin Configuration  \n \nTable 4. 56-Lead LFCSP Pin Function Descriptions  \nPin No.  Mnemonic  Type1 Description  \n1 P1.1/ADC1/T2EX  I Input Port 1 (P1.1). Port 1 is an 8- bit input port only. Unlike th e other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Input 1 (ADC1). Channel selection is via ADCCON2 SFR.  \n   Capture/Reload Trigger for Counter 2 (T2EX). Digital Input. This pin also functions \nas an up/down control input for Counter 2.  \n2 P1.2/ADC2  I Input Port 1 (P1.2). Port 1 is an 8- bit input port only. Unlike  the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital in put, write \na 0 to the port bit.  \n   Single -Ended Analog Input (ADC2). Channel selection is via ADCCON2 SFR. \n3 P1.3/ADC3  I Input Port 1 (P1.3). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure t his port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Input (ADC3). Channel selection is via ADCCON2 SFR. \n4, 5 AV DD P Analog Positive Supply Voltage. 3 V or 5 V nominal.  \n6, 7, 8 AGND  G Analog Ground. AGND is the g round reference point for the analog circuitry.  \n9 CREF I/O Decoupling Input for On -Chip Reference. Connect a 0.47 µF capacitor between \nthis pin and AGND.  \n10 VREF NC Not Connected. This was a reference output on the ADuC812 ; use the C REF pin \ninstead.  \n11 DAC0  O Voltage Output from DAC0. This pin is a no connect on the A DuC843.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 15 of 95 Pin No.  Mnemonic  Type1 Description  \n12 DAC1  O Voltage Output from DAC1. This pin is a no connect on the ADuC843.  \n13 P1.4/ADC4   Input Port 1 (P1. 0). Port 1 is an 8- bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Input 4 (ADC4). Channel selection is via ADCCON2 SFR.  \n14 P1.5/ADC5/ SS I Input Port 1 (P1. 5). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Inpu t 5 (ADC5). Channel selection is via ADCCON2 SFR.  \n   Slave Select Input for the SPI Interface ( SS). \n15 P1.3/ADC6  I Input Port 1 (P1. 3). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Input 6 (ADC6). Channel selection is via ADCCON2 SFR.  \n16 P1.7/ADC7  I Input Port 1(P1. 7). Port 1 is an 8 -bit input port only. Unlike the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write \na 0 to the port bit.  \n   Single -Ended Analog Input 7 (ADC7). Channel selection is via ADCCON2 SFR.  \n17 RESET  I Reset. Digital Input. A high level on this pin for 24 master clo ck cycles while the \noscillator is running resets the device.  \n18 P3.0/R xD I/O Input/Output Port 3 (P3.0). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resi stors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Receiver Data Input (Asynchronous) or Data Input/Output (Synchronous) of the \nSerial (UART) Port (R xD). \n19 P3.1/T xD I/O Input/Output Port 3 (P3.1). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As in puts, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Transmitter Data Output (Asynchronous) or Clock Output (Synchronous) of the \nSerial (UART) Port (T xD). \n20 P3.2/ INT0  I/O Input/Out put Port 3 (P3.2). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal pull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled exte rnally low source current because of the internal pull -up resistors.  \n   Interrupt 0 ( INT0 ). Programmable edge or level triggered interrupt input; can be \nprogrammed to one of two priority levels. This pin can also be used as a gate \ncontr ol input to Timer 0.  \n21 P3.3/ INT1 /MISO/PWM1  I/O Input/Output Port 3 (P3.3). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and i n that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Interrupt 1 ( INT1 ). Programmable edge or level triggered interrupt input; can be \nprogram med to one of two priority levels. This pin can also be used as a gate \ncontrol input to Timer 1.  \n   SPI Master Input/Slave Output Data I/O Pin for SPI Serial Interface (MISO).  \n   PWM 1 Voltage Output (PWM1). See the CFG841/CFG842 register for further information.  \n22, 36, 51 DV DD P Digital Positive Supply Voltage. 3 V or 5 V nominal.  \n23, 37, 38, \n50 DGND  G Digital Ground. DGND is the ground reference point for the digital circuitry.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 16 of 95 Pin No.  Mnemonic  Type1 Description  \n24 P3.4/T0/PWMC/PWM0/EXTCLK  I/O Input/Output Port 3 (P3.4). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current becau se of the internal pull -up resistors.  \n   Timer/Counter 0 Input (T0).  \n   PWM Clock Input (PWMC).  \n   PWM 0 Voltage Output (PWM0). PWM outputs can be configured to use Port 2.6 \nand Port 2.7 or Port 3.4 and Port 3.3. \n   Input for External Clock Signal (EXT CLK). This pin function must be enabled via \nthe CFG842 register.  \n25 P3.5/T1/ CONVST  I/O Input/Output Port 3 (P3.5). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high b y the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   Timer/Counter 1 Input (T1).  \n   Active Low Convert Start Logic Input  for the ADC Block when the External \nConvert Start Function is Enabled ( CONVST ). A low  to high transition on this input \nputs the track -and -hold into hold mode and starts the conversion.  \n26 P3.6/ WR I/O Input/Output Port 3 (P3.6). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally lo w source current because of the internal pull -up resistors.  \n   Write Control Signal, Logic Output ( WR). Latches the data byte from Port 0 into \nthe external data memory.  \n27 P3.7/ RD I/O Input/Output Port 3 (P3.7). Port 3 is a bidirectional port with internal pull -up \nresistors. Port 3 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 3 pins \nbeing pulled externally low source curren t because of the internal pull -up resistors.  \n   Read Control Signal, Logic Output ( RD). Enables the external data memory to Port 0.  \n28 SCLOCK  I/O Serial Clock Pin for I2C-Compatible  Clock  or for SPI Serial Interface Clock.  \n29 SDATA/MO SI I/O User Selectable, I2C Compatible, or SPI Data Input/Output Pin (SDATA).  \n   SPI Master Output/Slave Input Data I/O Pin for SPI Interface (MOSI).  \n30 P2.0/A8/A16  I/O Input/Output Port 2 (P2.0). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A8). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A16). Port 2 emits the high order address byte \nduring accesses to the external 24 -bit external data memory space.  \n31 P2.1/A9/A17  I/O Input/Output Port 2 (P2.1). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal pull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.   \n   External Memory Addresses (A9). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A17). Port 2 emits the high  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n32 P2.2/A10/A18  I/O Input/Output Port 2 (P2.2). Port 2 is a bidirectional port with interna l pull-up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal pull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resi stors.  \n   External Memory Addresses (A10). Port 2 emits the middle address byte during \naccesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A18).  Port 2 emits the high -order address byte \nduring accesses to the extern al 24-bit external data memory space.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 17 of 95 Pin No.  Mnemonic  Type1 Description  \n33 P2.3/A11/A19  I/O Input/Output Port 2 (P2.3). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that s tate can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A11). Port 2 emits the middle  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A19). Port 2 emits the high  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n34 XTAL1  I Input to the Inverting Oscillator Amplifier.  \n35 XTAL2  O Output of the  Inverting Oscillator Amplifier.  \n39 P2.4/A12/A20  I/O Input/Output Port 2 (P2.4). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A12). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit exte rnal data memory space.  \n   External Memory Addresses (A20). Port 2 emits the high  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n40 P2.5/A13/A21  I/O Input/Output Port 2 (P2.5). Port 2 is a bidirectional port with in ternal pull-up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A13). Port 2 emits the middle order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A21). Port 2 emits the high  order address byte \nduring accesses to  the external 24 -bit external data memory space.  \n41 P2.6/A14/A22  I/O Input/Output Port 2 (P2.6). Port 2 is a bidirectional port with internal pull -up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, an d in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A14). Port 2 emits the middle order address byte \nduring accesses to the exte rnal 24 -bit external data memory space.  \n   External Memory Addresses (A22).  Port 2 emits the high  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n42 P2.7/A15/A23  I/O Input/Output Port 2 (P2.7). Port 2 is a bidirectio nal port with internal pull-up \nresistors. Port 2 pins that have 1s written to them are pulled high by the internal \npull-up resistors, and in that state can be used as inputs. As inputs, Port 2 pins \nbeing pulled externally low source current because of the internal pull -up resistors.  \n   External Memory Addresses (A15). Port 2 emits the middle  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n   External Memory Addresses (A23). Port 2 emits the high  order address byte \nduring accesses to the external 24 -bit external data memory space.  \n43 EA I External Access Enable, Logic Input. When held high, this input enables the \ndevice to fetch code from internal program memory locations. The devices  do \nnot support external code memory. Do not leave t his pin floating.  \n44 PSEN  O Program Store Enable, Logic Output. This pin remains low during internal \nprogram execution. PSEN  enable s serial download mode when pulled low \nthrough a res istor on power -up or reset. On reset , this pin momentarily become s \nan input and the status of the pin is sampled. If there is no pull -down resistor in \nplace , the pin go es momentaril y high and then user code execute s. If a pull -down \nresistor is in place, th e embedded serial download/debug kernel executes . \n45 ALE O Address Latch Enable, Logic Output. This output latch es the low byte and page \nbyte for 24 -bit address space accesses of the address into external data memory.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 18 of 95 Pin No.  Mnemonic  Type1 Description  \n46 P0.0/A0 I/O Input/Output Port 0 ( P0.0). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as \nhigh impedance inputs.  \n   External Memory Address (A0). Port 0 is also the multiplexed low order address \nand data  bus during accesses to external data memory. In this application, it uses \nstrong internal pull-ups when emitting 1s.  \n47 P0.1/A1 I/O Input/Output Port 0 (P0.1). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as \nhigh impedance inputs.  \n   External Memory Address (A1). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up re sistors when emitting 1s.  \n48 P0.2/A2 I/O Input/Output Port 0 (P0.2). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as high impedance inputs.  \n   External Memory Address (A2). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors when emitting 1s.  \n49 P0.3/A3 I/O Input/Output Port 0 (P0.3). Port 0 is an 8 -bit ope n-drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as \nhigh impedance inputs.  \n   External Memory Address (A3). Port 0 is also the multiplexed low order address \nand data bus during accesses to exter nal data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n52 P0.4/A4 I/O Input/Output Port 0 (P0.4). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as high impedance inputs.  \n   External Memory Address (A4). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emittin g 1s.  \n53 P0.5/A5 I/O Input/Output Port 0 (P0.5). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as high impedance inputs.  \n   External Memory Address (A5). Port 0 is also  the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n54 P0.6/A6 I/O Input/Output Port 0 (P0.6). Port 0 is an 8 -bit open -drain bidirectiona l I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as \nhigh impedance inputs.  \n   External Memory Address (A6). Port 0 is also the multiplexed low order address \nand data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n55 P0.7/A7 I/O Input/Output Port 0 (P0.7). Port 0 is an 8 -bit open -drain bidirectional I/O port. \nPort 0 pins that have 1s written to them float, and in that state can be used as  \nhigh impedance inputs.  \n   External Memory Address (A7). Port 0 is also the multiplexed low order address and data bus during accesses to external data memory. In this application, it uses \nstrong internal pull-up resistors  when emitting 1s.  \n56 P1.0/ADC0/ T2 I Input Port 1 (P1.0). Port 1 is an 8- bit input port only. Unlike  the other ports, Port 1 \ndefaults to analog input mode. To configure this port pin as a digital input, write a 0 to the port bit.  \n   Single -Ended Analog Input (ADC0). Channel selection i s via ADCCON2 SFR.  \n   Timer 2 Digital Input (T2). Input to Timer/Counter 2. When enabled, Counter 2 is \nincremented in response to a 1 -to-0 transition of the T2 input.  \n EPAD  Exposed Pad. The LFCSP has an exposed pad that must be soldered to the metal \nplate on the printed circuit board ( PCB ) for mechanical reasons. This metal plate \nmust not be connected to GND.  \n                                                                    \n1 P = power, G = ground, I = input, O = output, and NC = no connect.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 19 of 95 TERMINOLOGY  \nADC SPECIFICATIONS  \nIntegral Nonlinearity  \nThe maximum deviation of any code from a straight line \npassing through the endpoints of the  ADC transfer function. \nThe endpoints of the transfer function are zero scale, a point \n½ LSB below the first code transition, and full scale, a point \n½ LSB above the last code transition.  \nDifferential Nonlinearity  \nThe difference between the measured and th e ideal 1 LSB \nchange between any two adjacent codes in the ADC.  \nOffset Error  \nThe deviation of the first code transition (0000 . . . 000) to  \n(0000 . . . 001) from the ideal, that is , +½  LSB.  \nGain Error  \nThe deviation of the last code transition from the ide al AIN \nvoltage (Full Scale –  ½ LSB) after the offset error has been \nadjusted out.  \nSignal -to-(Noise + Distortion) Ratio  \nThe measured ratio of signal to (noise + distortion) at the output of the ADC. The signal is the rms amplitude of the \nfund amental. Noise is the rms sum of all nonfundamental \nsignals up to half the sampling frequency (f\nS/2), excluding dc. \nThe ratio depends on the number of quantization levels in the digitization process; the more levels, the smaller the quantiza tion \nnoise. The theoretical si gnal -to-(noise + distortion) ratio for an \nideal N -bit converter with a sine wave input is given by  \nSignal -to-(Noise + Distortion)  = (6.02 N + 1.76) dB \nThus for a 12- bit converter, this is 74 dB.  \nTotal Harmonic Distortion (THD)  \nThe ratio of the rms sum of th e harmonics to the fundamental.  DAC SPECIFICATIONS  \nRelative Accuracy  \nRelative accuracy or endpoint linearity is a measure of the \nmaximum deviation from a straight line passing through the \nendpoints of the DAC transfer function. It is measured after adjust ing for zero error and full -scale error.  \nVoltage Output Settling Time  \nThe amount of time it takes for the output to settle to a spec ified level for a full -scale input change.  \nDigital -to-Analog Glitch Impulse  \nThe amount of charge injected into the analog ou tput when the \ninputs change state. It is specified as the area of the glitch in nV -sec.\n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 20 of 95 TYPICAL PERFORMANCE CHARACTERISTICS \nThe typical performance plots presented in this section \nillustrate typical performance of the ADuC841/ ADuC842/  \nADuC843 under various operating cond itions.  \nFigure 5 and Figure 6 show typical ADC integral nonlinearity \n(INL) errors from ADC Code 0 to Code 4095 at 5 V and 3 V supplies, respectively. The ADC is using its internal reference \n(2.5 V) and is operating at a sampling rate of 152 kHz; the \ntypical worst -case errors in both plots are just less than 0.3  LSB. \nFigure 7 and Figure 8 also show ADC INL at a higher sampling \nrate of 400 kHz. F igure 9 and Figure 10 show the variation in \nworst -case positive (WCP) INL and worst -case negative (WCN) \nINL versus exte rnal reference input voltage.  \nFigure 11 and Figure 12 show typical ADC differential \nnonlinea rity (DNL) errors from ADC Code 0 to Code 4095 at \n5 V and 3 V supplies, respectively. The ADC is using its internal \nreference (2.5 V) and is operating at a sampling rate of 152  kHz; \nthe typical worst- case errors in both plots are just less than \n0.2 LSB. Figure 13 and Figure 14 show the variation in worst -\ncase pos itive (WCP) DNL and worst -case negat ive (WCN) DNL \nversus e xternal reference input voltage.  \nFigure 15 shows a histogram plot of 10,000 ADC conversion \nresults on a dc input with V\nDD = 5 V . The plot illustrates an \nexcellent code distribution pointing to the low noise \nperform ance of the on -chip precision ADC.  Figure 16 shows a histogram plot of 10,000 ADC conversion \nresults on a dc input for V DD = 3 V . The plot again illustrates a \nvery tight code distribution of 1 L SB with the majority of codes \nappearing in one output pin.  \nFigure 17 and Figure 18 show typical FFT plots for the parts. \nThese plots were generated using an external clock in put. The \nADC is using its internal reference (2.5 V), sampling a full-\nscale, 10 kHz sine wave test tone input at a sampling rate of \n149.79 kHz.  The resulting FFTs shown at 5 V and 3 V su pplies \nillustrate an excellent 100 dB noise floor, 71 dB signal- to-noise \nratio (SNR), and THD greater than – 80 dB.  \nFigure 19 and Figure 20 show typical dynamic performance \nversus external reference voltages. Again, excellent ac perfor m-\nance can  be observed in both plots with some roll -off b eing \nobserved as V REF falls below 1 V .  \nFigure 21 shows typical dynamic performance versus sampling \nfrequency. SNR levels of 71 dB are obtained across the sa mpling \nrange  of the parts.  \nFigure 22 shows the voltage output of the on -chip temperature \nsensor versus temperature. Al though the initial voltage output \nat 25°C can vary from part to part, the resulting slope of \n−1. 4 mV/°C  is constant across all parts.  \n \nADC CODES–1.0\n0 511LSBs\n1023 2047 2559 3071–0.8\n1535 3583–0.6–0.4–0.200.20.40.60.81.0\nAVDD / DV DD = 5V\nfS = 152kHz\n4095\n03260-0-005 \nFigure 5. Typical INL Error, V DD = 5 V, f s = 152 kHz  \n \nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.6\n0.2\n–0.2\n–0.6\n–1.00.8\n0.4\n0\n–0.4\n–0.8\n3071 3583 0 4095AVDD/DVDD = 3V\nfS = 152kHz\n03260-0-006 \nFigure 6. Typical INL Error, V DD = 3 V, f s = 152 kHz  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 21 of 95 \nADC CODES–1.0\n0 511LSBs\n1023 2047 2559 3071–0.8\n1535 3583–0.6–0.4–0.200.20.40.60.81.0\nAVDD/DVDD = 5V\nfS = 400kHz\nCD = 4\n4095\n03260-0-098 \nFigure 7. Typical INL Error, V DD = 5 V, f S = 400 kHz  \n \nADC CODES–1.0\n0 511LSBs\n1023 2047 2559 3071–0.8\n1535 3583–0.6–0.4–0.200.20.40.60.81.0\nAVDD/DVDD = 3V\nfS = 400kHz\nCD = 4\n4095\n03260-0-099 \nFigure 8. Typical INL Error, V DD = 3 V, f S = 400 kHz  \n \nEXTERNAL REFERENCE (V)1.2WCP –INL (LSBs)0.8\n0.4\n0\n–0.4\n–0.61.0\n0.6\n0.2\n–0.2AVDD/DVDD = 5V\nfS = 152kHz\n0.5 1.0 1.5 2.0 2.5 5.00.6\n0.4\n0\n–0.4\n–0.60.2\n–0.2\nWCN –INL (LSBs)\nWCN INLWCP INL\n03260-0-007 \nFigure 9. Typical Worst -Case INL Error vs. V REF, V DD = 5 V  \n EXTERNAL REFERENCE (V)WCP –INL (LSBs)0.8\n0.4\n0\n–0.4\n–0.80.6\n0.2\n–0.2AVDD/DVDD = 3V\nfS = 152kHz\n0.5 1.5 2.5\nWCN –INL (LSBs)\n–0.60.8\n0.4\n0\n–0.4\n–0.80.6\n0.2\n–0.2\n–0.6\n3.0 2.0 1.0WCN INLWCP INL\n03260-0-008\n \nFigure 10. Typical Worst -Case IN L Error vs. V REF, V DD = 3 V  \n \nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.6\n0.2\n–0.2\n–0.6\n–1.00.8\n0.4\n0\n–0.4\n–0.8\n3071 3583 0 4095AVDD/DVDD = 5V\nfS = 152kHz\n03260-0-009\n \nFigure 11. Typical DNL Error, V DD = 5 V  \n \nADC CODES1.0\n511 1023 1535 2047 2559LSBs0.6\n0.2\n–0.2\n–0.6\n–1.00.8\n0.4\n0\n–0.4\n–0.8\n3071 3583 0 4095AVDD/DVDD = 3V\nfS = 152kHz\n03260-0-010 \nFigure 12. Typical DNL Error, V DD = 3 V  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 22 of 95 EXTERNAL REFERENCE (V)–0.6\n0.5WCP –DNL (LSBs)\n1.0 2.0 2.5 5.0–0.4\n1.5–0.200.20.40.6\nWCN –DNL (LSBs)\n–0.4\n–0.6–0.200.20.40.6\nAVDD /DV DD = 5V\nfS = 152kHz\nWCP DNL\nWCN DNL\n03260-0-011 \nFigure 13. Typical Worst -Case DNL Error vs. V REF, V DD = 5 V  \n \nEXTERNAL REFERENCE (V)WCP –DNL (LSBs)0.7\n0.5\n0.1\n–0.5\n–0.70.3\n–0.3AVDD/DVDD= 3V\nfS = 152kHz\n0.5 1.0 1.5 2.0 2.5 3.0\nWCN –DNL (LSBs)WCP DNL\nWCN DNL–0.10.7\n0.5\n0.1\n–0.5\n–0.70.3\n–0.3–0.1\n03260-0-012 \nFigure 14. Typical Worst -Case DNL Error vs. V REF, V DD = 3 V  \n \nCODE817 818 819 820 82110000 OCCURRENCE8000\n6000\n4000\n2000\n0\n03260-0-013\n \nFigure 15. Code Histogram Plot, V DD = 5 V  \n CODE10000\n817 818 819 820 821OCCURRENCE8000\n6000\n4000\n2000\n09000\n7000\n5000\n3000\n1000\n03260-0-014\n \nFigure 16. Code Histogram Plot, V DD = 3 V  \n \n20\n0\n–20\n–40\n–60\n–80\n–100\n–120\n–140\n–160dBs\n20\nFREQUENCY (kHz)10 0 70 60 50 40 30AVDD/DVDD = 5V\nfS = 152kHz\nfIN = 9.910kHz\nSNR = 71.3dB\nTHD = –88.0dB\nENOB = 11.6\n03260-0-015 \nFigure 17. Dynamic Performance at V DD = 5 V  \n \n20\n0\n–20\n–40\n–60\n–80\n–100\n–120\n–140\n–160dBs\n20\nFREQUENCY (kHz)10 0 70 60 50 40 30AVDD/DVDD = 3V\nfS = 149.79kHz\nfIN = 9.910kHz\nSNR = 71.0dB\nTHD = –83.0dB\nENOB = 11.5\n03260-0-016 \nFigure 18. Dynamic Performance at V DD = 3 V  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 23 of 95 EXTERNAL REFERENCE (V)50\n0.5SNR (dBs)\n1.0 2.0 2.5 5.055\n1.56065707580\nTHD (dBs)\n–100–95–90–85–80–75–70\nAVDD/DVDD = 5V\nfS = 152kHz\nSNR\nTHD\n03260-0-017\n \nFigure 19. Typical Dynamic Performance vs. V REF, V DD = 5 V  \n \nEXTERNAL REFERENCE ( V)SNR (dBs)80\n75\n65\n5070\n55AVDD/DVDD = 3V\nfS = 152kHz\n0.5 1.5 2.5\nTHD (dBs)SNR\nTHD\n60–70\n–75\n–85\n–100–80\n–95–90\n1.0 2.0 3.0\n03260-0-018\n \nFigure 20. Typical Dynamic Performance vs. V REF, V DD = 3 V  FREQUENCY (kHz)64\n92.262SNR (dBs)\n119.050\n172.620\n199.410\n226.19066\n145.8306870727680\n78\n74\n62\n60\n65.476\n03260-0-019300.000\n350.000\n400.000AVDD /DVDD = 5V\n \nFigure 21. Typical Dynamic Performance vs. Sampling Frequency  \n \nTEMPERATURE ( °C)\n03260-0-1000.20.30.40.50.60.70.80.9\n–40 25 85VOLTAGEAVDD/DVDD = 3V\nSLOPE = –1.4mV/°C\n \nFigure 22. Typical Temperature Sensor Output vs. Temperature  \n \n \n \nGENERAL DESCRIPTIO N (continued ) \nThe parts also incorporate addi tional analog functionality with \ntwo 12 -bit DACs, power supply monitor, and a band gap \nreference. On -chip digital peripherals include two 16 -bit ∑-∆. \nDACs, a dual output 16 -bit PWM, a watchdog timer, a time \ninterval counter, three timers/counters, and three serial I/O \nports (SPI, I2C, and UART).  \nOn the ADuC812 and the ADuC832, the I2C and SPI interfaces \nshare some of the same pins. For backwards compatibility, this \nis also the case for the ADuC841/ ADuC842/ ADuC843. However, there is also the option to allow SPI operate separately on P3.3, P3.4, and P3.5, while I\n2C us es the standard pins. The \nI2C interface has also been en hanced to offer repeated start, \ngeneral call, and quad addres sing.  \nOn-chip factory firmware supports in -circuit serial download \nand debug modes (via UART) as well as single -pin emulation \nmode via the EA pin. A functional block di agram of the parts is \nshown on the first page.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 24 of 95 FUNCTIONAL DESCRIPTI ON \n8052 INSTRUCTION SET  \nTable 5 documents the number of clock cycles required for each \ninstru ction.  Most instructions are executed in one or two clock \ncycles, resulting in a 16 MIPS peak performance when opera ting \nat PLLCON = 00H on the ADuC842/ ADuC843. On the \nADuC841, 20 MIPS peak performance is possible with a \n20 MHz external crystal.   \n  \n \n  \nTable 5. Instructions  \nMnemonic  Description  Bytes  Cycles  \nArithmetic     \nADD A,Rn  Add regist er to A  1 1 \nADD A,@Ri  Add indirect memory to A  1 2 \nADD A,dir  Add direct byte to A  2 2 \nADD A,#data  Add immediate to A  2 2 \nADDC A,Rn  Add register to A with carry  1 1 \nADDC A,@Ri  Add indirect memory to A with carry  1 2 \nADDC A,dir  Add direct byte to A wit h carry  2 2 \nADD A,#data  Add immediate to A with carry  2 2 \nSUBB A,Rn  Subtract register from A with borrow  1 1 \nSUBB A,@Ri  Subtract indirect memory from A with borrow  1 2 \nSUBB A,dir  Subtract direct from A with borrow  2 2 \nSUBB A,#data  Subtract immediate f rom A with borrow  2 2 \nINC A  Increment A  1 1 \nINC Rn  Increment register  1 1 \nINC @Ri  Increment indirect memory  1 2 \nINC dir  Increment direct byte  2 2 \nINC DPTR  Increment data pointer  1 3 \nDEC A  Decrement A  1 1 \nDEC Rn  Decrement register  1 1 \nDEC @Ri  Decrem ent indirect memory  1 2 \nDEC dir  Decrement direct byte  2 2 \nMUL AB  Multiply A by B  1 9 \nDIV AB  Divide A by B  1 9 \nDA A Decimal adjust A  1 2 \nLogic     \nANL A,Rn  AND register to A  1 1 \nANL A,@Ri  AND indirect memory to A  1 2 \nANL A,dir  AND direct byte to A  2 2 \nANL A,#data  AND immediate to A  2 2 \nANL dir,A  AND A to direct byte  2 2 \nANL dir,#data  AND immediate data to direct byte 3 3 \nORL A,Rn  OR register to A  1 1 \nORL A,@Ri  OR indirect memory to A  1 2 \nORL A,dir  OR direct byte to A  2 2 \nORL A,#data  OR immedia te to A  2 2 \nORL dir,A  OR A to direct byte  2 2 \nORL dir,#data  OR immediate data to direct byte 3 3 \nXRL A,Rn  Exclusive -OR register to A  1 1 \nXRL A,@Ri  Exclusive -OR indirect memory to A  2 2 \nXRL A,#data  Exclusive -OR immediate to A  2 2 \nXRL dir,A  Exclusive -OR A to direct byte  2 2 \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 25 of 95 Mnemonic  Description  Bytes  Cycles  \nXRL A,dir  Exclusive -OR indirect memory to A  2 2 \nXRL dir,#data  Exclusive -OR immediate data to direct  3 3 \nCLR A  Clear A  1 1 \nCPL A  Complement A  1 1 \nSWAP A  Swap nibbles of A  1 1 \nRL A  Rotate A left  1 1 \nRLC A  Rotate A left through c arry  1 1 \nRR A  Rotate A right  1 1 \nRRC A  Rotate A right through carry  1 1 \nData Transfer     \nMOV A,Rn  Move register to A  1 1 \nMOV A,@Ri  Move indirect memory to A  1 2 \nMOV Rn,A  Move A to register  1 1 \nMOV @Ri,A  Move A to indirect memory  1 2 \nMOV A,dir  Move  direct byte to A  2 2 \nMOV A,#data  Move immediate to A  2 2 \nMOV Rn,#data  Move register to immediate  2 2 \nMOV dir,A  Move A to direct byte  2 2 \nMOV Rn, dir  Move register to direct byte  2 2 \nMOV dir, Rn  Move direct to register  2 2 \nMOV @Ri,#data  Move immediat e to indirect memory  2 2 \nMOV dir,@Ri  Move indirect to direct memory  2 2 \nMOV @Ri,dir  Move direct to indirect memory  2 2 \nMOV dir,dir  Move direct byte to direct byte  3 3 \nMOV dir,#data  Move immediate to direct byte  3 3 \nMOV DPTR,#data  Move immediate to dat a pointer  3 3 \nMOVC A,@A+DPTR  Move code byte relative DPTR to A  1 4 \nMOVC A,@A+PC  Move code byte relative PC to A  1 4 \nMOVX A,@Ri  Move external (A8) data to A  1 4 \nMOVX A,@DPTR  Move external (A16) data to A  1 4 \nMOVX @Ri,A  Move A to external data (A8)  1 4 \nMOVX @DPTR,A  Move A to external data (A16)  1 4 \nPUSH dir  Push direct byte onto stack  2 2 \nPOP dir  Pop direct byte from stack  2 2 \nXCH A,Rn  Exchange A and register  1 1 \nXCH A,@Ri  Exchange A and indirect memory  1 2 \nXCHD A,@Ri  Exchange A and indirect memory  nibble  1 2 \nXCH A,dir  Exchange A and direct byte  2 2 \nBoolean     \nCLR C  Clear carry  1 1 \nCLR bit  Clear direct bit  2 2 \nSETB C  Set carry  1 1 \nSETB bit  Set direct bit  2 2 \nCPL C  Complement carry  1 1 \nCPL bit  Complement direct bit  2 2 \nANL C,bit  AND direct bit and carry  2 2 \nANL C,/bit  AND direct bit inverse to carry  2 2 \nORL C,bit  OR direct bit and carry  2 2 \nORL C,/bit  OR direct bit inverse to carry  2 2 \nMOV C,bit  Move direct bit to carry  2 2 \nMOV bit,C  Move carry to direct bit  2 2 \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 26 of 95 Mnemonic  Description  Bytes  Cycles  \nBranching     \nJMP @A+D PTR Jump indirect relative to DPTR  1 3 \nRET Return from subroutine  1 4 \nRETI  Return from interrupt  1 4 \nACALL addr11  Absolute jump to subroutine  2 3 \nAJMP addr11  Absolute jump unconditional  2 3 \nSJMP rel  Short jump (relative address)  2 3 \nJC rel  Jump on carry equal to 1  2 3 \nJNC rel  Jump on carry equal to 0  2 3 \nJZ rel  Jump on accumulator = 0  2 3 \nJNZ rel  Jump on accumulator not equal to 0  2 3 \nDJNZ Rn,rel  Decrement register, JNZ relative  2 3 \nLJMP  Long jump unconditional  3 4 \nLCALL addr16  Long jump to s ubroutine  3 4 \nJB bit,rel  Jump on direct bit = 1  3 4 \nJNB bit,rel  Jump on direct bit = 0  3 4 \nJBC bit,rel  Jump on direct bit = 1 and clear  3 4 \nCJNE A,dir,rel  Compare A, direct JNE relative  3 4 \nCJNE A,#data,rel  Compare A, immediate JNE relative  3 4 \nCJNE Rn,#data,rel  Compare register, immediate JNE relative  3 4 \nCJNE @Ri,#data,rel  Compare indirect, immediate JNE relative  3 4 \nDJNZ dir,rel  Decrement direct byte, JNZ relative  3 4 \nMiscellaneous     \nNOP  No operation  1 1 \n \n1. One cycle is one clock.  \n2. Cycles of MOVX instructions are four cycles when they have 0 wait state. C ycles of MOVX instructions are 4 + n cycles when they have n wait states.  \n3. Cycles of LCALL instruction are three cycles when the LCALL instruction comes from interrupt.  \n \n \nOTHER SINGLE -CYCLE CORE FEATURES  \nTimer Operation  \nTimers on a standard 8052 increment by 1 with each machine \ncycle. On the ADuC841/ ADuC842/ ADuC843, one machine \ncycle is equal to one clock cycle; ther efore the timers increment \nat the same rate as the core clock.  \nALE  \nThe output on the ALE pin on a standard 8052 part is a clock at 1/6th of the core operating frequency. On the ADuC841/  \nADuC842/ ADuC843 the ALE pin operates as follows. For a \nsingle machine cycle instruction, ALE  is high for the first half of \nthe m achine cycle and low for the second half. The ALE output \nis at the core operating frequency. For a two or more machine cycle i nstruction, ALE is high for the first half of the first \nmachine cycle and low for the rest of the ma chine c ycles.  External Memory Access  \nThere is no support for external program memory access on the parts. When accessing external RAM, the EW AIT re gister may \nneed to be programmed to give extra machine cycles to MOVX commands. This is to account for differ ing e xternal RAM access \nspeeds. \nEWAIT SFR  \nSFR Address  9FH  \nPower -On Default  00H  \nBit Addressable  No \n \nThis special function register (SFR) is programmed with the \nnumber of wait states for a MOVX instruction. This value can \nrange from 0H to 7H.  \n \n   \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 27 of 95 MEMOR Y ORGANIZATION  \nThe ADuC841/ ADuC842/ ADuC843 each contain four different \nmemory blocks:  \n• Up to 62 kBytes of on-chip Flash/EE program memory  \n• 4 kBytes of on -chip Flash/EE data memory  \n• 256 bytes of general -purpose RAM  \n• 2 kBytes of internal XRAM  \nFlash/EE Program Memory  \nThe parts provide up to 62 kBytes of Flash/EE program me m-\nory to run user code. The user can run cod e from this internal \nmemory only. Unlike the ADuC812, where code execution can \noverflow from the internal code space to external code space \nonce the PC becomes greater than 1FFFH, the parts do not \nsupport the roll -over from F7FFH in internal code space to \nF800H in external code space. Instead, the 2048 bytes between \nF800H and FFFFH appear as NOP instru ctions to user code.  \nThis internal code space can be downloaded via the UART serial port while the device is in -circuit. 56 kBytes of the \nprogram memory can b e reprogrammed during run time; thus \nthe code space can be upgraded in the field by using a user defined pr otocol, or it can be used as a data memory. This is \ndiscussed in more detail in the Flash/EE Memory section.  \nFor the 32 kBytes memory model, the top 8 kBytes function as the ULOAD space; this is explained in the Flash/EE Memory \nsection.  \nFlash/EE Data Memory  \n4 kBytes of Flash/EE data memory are available to the user and can be accessed indirectly via a group of control registers mapped into the special function register (SFR) area. Access to \nthe Flash/EE data memory is discussed in detail in the Flash/EE \nMemory se ction.  \nGeneral -Purpose RAM  \nThe general -purpose RAM is divided into two separate \nmemo ries: the upper and the lower 128 bytes of RAM. The \nlower 1 28 bytes of RAM can be accessed through direct or \nindirect addressing. The upper 128 bytes of RAM can be accessed only through indirect addressing because it shares the \nsame a ddress space as the SFR space, which can be accessed \nonly through direct addressi ng. The lower 128 bytes of internal data memory are mapped as shown in Figure 23. The lowest 32 bytes are grouped into four \nbanks of eight registers addressed as R0 to R7. The next 16 bytes \n(128 bits), locations 20H to 2FH above the regi ster banks, form \na block of directly addressable bit locations at Bit Addresses 00H to 7FH. The stack can be located an ywhere in the internal \nmemory address space, and the stack depth can be expanded up to 2048 bytes.  \nReset initializ es the stack pointer to location 07H and incr e-\nments it once before loading the stack to start from location 08H, which is also the first register (R0) of register bank 1. \nThus, if the user needs to use more than one register bank, the stack pointer should  be initia lized to an area of RAM not used \nfor data storage.  \n11\n10\n01\n0007H0FH17H1FH2FH7FH\n00H08H10H18H20H\nRESET VALUE OF\nSTACK POINTER30H\nFOUR BANKS OF EIGHT\nREGISTERS\nR0 TO R7BIT-ADDRESSABLE\n(BIT ADDRESSES)GENERAL-PURPOSE\nAREA\nBANKS\nSELECTED\nVIA\nBITS IN PSW\n03260-0-021 \nFigure 23. Lower 128 Bytes of Internal Data Memory  \nThe parts contain 2048 bytes of internal XRAM, 1792 bytes of which can be configured to an extended 11 -bit stack poin ter. \nBy default, the stack operates exactly like an 8052 in that it rolls \nover from FFH to 00H in the general -purpose RAM. On the \nparts, however, it is possible (by setting CFG841.7 or CFG842.7) \nto enable the 11 -bit extended stack pointer. In this case, th e \nstack rolls over from FFH in RAM to 0100H in XRAM.  \nThe 11 -bit stack pointer is visible in the SP and SPH SFRs. The \nSP SFR is located at 81H  as with a standard 8052. The SPH SFR \nis located at B7H. The 3 LSBs of this SFR contain the 3 e xtra bits \nnecessary  to extend the 8 -bit stack pointer into an 11 -bit stack \npointer.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 28 of 95 UPPER 1792\nBYTES OF\nON-CHIP XRAM\n(DATA + STACK\nFOR EXSP = 1,\nDATA ONLY\nFOR EXSP = 0)\n256 BYTES OF\nON-CHIP DATA\nRAM\n(DATA +\nSTACK)LOWER 256\nBYTES OF\nON-CHIP XRAM\n(DATA ONLY)\n00HFFH\n00H07FFH\nCFG841.7 = 0\nCFG842.7 = 0\n100H\n03260-0-022CFG841.7 = 1CFG842.7 = 1\n \nFigure 24. Extended Stack Pointer Operation  \n \nExternal Data Memory (External XRAM)  \nJust like a standard 8051 compatible core, the ADuC841/  \nADuC842/ ADuC843 can access external data memory by using \na MOVX instruction. The MOVX instruction aut omatically \noutputs the various control strobes required to access the data \nmemory.  \nThe parts, however, can access up to 16 MBytes of exte rnal data \nmemory. This is an enhancement of the 64 kBytes of ex ternal \ndata memory space available on a standard 8051 compat ible core. \nThe external dat a memory is discussed in more detail in the \nHardware Design Considerations section.  \nInternal XRAM  \nThe parts contain 2 kBytes of on -chip data memory. This \nmemory, although on -chip, is also accessed via the MOVX \ninstru ction. The 2 kBytes of internal XRAM are  mapped into \nthe bo ttom 2 kBytes of the external address space if the \nCFG841/CFG842 bit is set. Otherwise, access to the external \ndata me mory occurs just like a standard 8051. When using the \ninternal XRAM, Ports  0 and 2 are free to be used as gen eral-\npurpo se I/O.  \n EXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG841.0 = 0\nCFG842.0 = 0EXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG841.0 = 1\nCFG842.0 = 00007FFH000800H\n2 kBYTES\nON-CHIP\nXRAM\n03260-0-023\n \nFigure 25. Internal and External XRAM  \n \nSPECIAL FUNCTION REG ISTERS (SFRS)  \nThe SFR space is mapped into the upper 128 bytes of internal data memory space and is accessed by direct addressing only. It \nprovides an interface between the CPU and all on -chip perip h-\nerals. A block diagram showing the programming model of the \nparts via the SFR area is shown in Figure 26. \nAll registers, except the program counter (PC) and the four \ngeneral -purpose register banks, reside in the SFR area. The SFR \nregisters i nclude control, configuration, and data registers, which \nprovide an interface between the CPU and all on -chip perip herals.  \n128-BYTE\nSPECIAL\nFUNCTION\nREGISTER\nAREA62-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE PROGRAM\nMEMORY\n8051\nCOMPATIBLE\nCORE\nOTHER ON-CHIP\nPERIPHERALS\nTEMPERATURE\nSENSOR\n2×12-BIT DACs\nSERIAL I/O\nWDT\nPSM\nTIC\nPWM8-CHANNEL\n12-BIT ADC4-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE DATA\nMEMORY\n2304 BYTES\nRAM\n03260-0-024 \nFigure 26. Programming Model  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 29 of 95 ACCUMULATOR  SFR (ACC)  \nACC is the accumulator register and is used for math oper a-\ntions including addition, subtraction, integer multiplication and \ndivision, and Boolean bit manipulations. The mnemonics for \naccumulator -specific instructions refer to the accumulator as  A. \nB SFR (B)  \nThe B register is used with the ACC for multiplication and division operations. For other instructions, it can be treated as a \ngeneral -purpose scratchpad register.  \nStack Pointer (SP and SPH)  \nThe SP SFR is the stack pointer and is used to hold  an internal \nRAM address that is called the top of the stack. The SP register is incr emented before data is stored during PUSH and CALL \nexecutions. While the stack may reside anywhere in on -chip \nRAM, the SP register is initialized to 07H after a reset, whi ch \ncauses the stack to begin at location 08H.  \nAs mentioned earlier, the parts offer an extended 11 -bit stack \npointer. The 3 extra bits used to make up the 11 -bit stack \npointer are the 3 LSBs of the SPH byte located at B7H.  \nData Pointer (DPTR)  \nThe data poin ter is made up of three 8 -bit registers named DPP \n(page byte), DPH (high byte), and DPL (low byte). These are used to pr ovide memory addresses for internal and external \ncode access and for external data access. They may be manip u-\nlated as a 16 -bit register  (DPTR = DPH, DPL), although INC \nDPTR instructions automatically carry over to DPP , or as three independent 8 -bit registers (DPP , DPH, DPL). The parts su pport \ndual data pointers. Refer to the Dual Data Pointer se ction.  Program Status Word (PSW)  \nThe PSW SF R contains several bits reflecting the current status \nof the CPU, as detailed in Table 6. \nSFR Address  D0H  \nPower -On Default  00H  \nBit Addressable  Ye s \n Table 6. PSW SFR Bit Designations  \nBit Name  Description  \n7 CY Carry Flag.  \n6 AC Auxiliary Carry Flag.  \n5 F0 General -Purpose Flag.  \n4 RS1 Register Bank Select Bits.  \n3 RS0 RS1 \n0 \n0 \n1 \n1 RS0 \n0 \n1 \n0 \n1 Selected Bank  \n0 \n1 \n2 \n3 \n2 OV Overflow Flag.  \n1 F1 General -Purpose Flag.  \n0 P Parity Bit.  \n \nPower Cont rol SFR (PCON)  \nThe PCON SFR contains bits for power -saving options and \ngeneral -purpose status flags, as shown in Table 7. \nSFR Address  87H  \nPower -On Default  00H  \nBit Addressable  No \n Table 7. PCON SFR Bit Designations  \nBit No.  Name  Description  \n7 SMOD  Double UART Baud Rate.  \n6 SERIPD I2C/SPI Power -Down Interrupt Enable.  \n5 INT0PD  INT0  Power -Down Interrupt Enable.  \n4 ALEOFF  Disable ALE Output.  \n3 GF1 General -Purpose Flag Bit.  \n2 GF0 General -Purpose Flag Bit.  \n1 PD Power -Down Mode Enable.  \n0 IDL Idle Mode Enable.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 30 of 95 SPECIAL FUNCTION REG ISTER BANKS  \nAll registers except the program counter and the four general -\npurpose register banks reside in the special function register \n(SFR) a rea. The SFR registers include control, configuration, \nand data registers, which provide an interface between the CPU \nand other on -chip perip herals. Figure  27 shows a full SFR \nmemory map and SFR contents on reset. U noccupied SFR \nlocations are shown dark -shaded in the figure (NOT USED). \nUno ccupied locations in the SFR address space are not implemented, that is , no register exists at this loc ation. If an \nunoccupied location is read, an unspecified value is r eturned. \nSFR locations reserved for on -chip testing are shown lighter \nshaded (RESERVED) and should not be accessed by user software. Sixteen of the SFR locations are also bit a ddressable \nand denoted by 1 in Figure  27, that is , the bit addres sable SFRs \nare those whose address ends in 0H or 8H.  \n \nSPICON1\nF8H 04HDAC0L\nF9H 00HDAC0H\nFAH 00HDAC1L\nFBH 00HDAC1H\nFCH 00HDACCON\nFDH 04HRESERVED\nB1\nF0H 00HADCOFSL3\nF1H 00HADCOFSH3\nF2H 20HADCGAINL3\nF3H 00HADCGAINH3\nF4H 00HADCCON3\nF5H 00HRESERVED\nI2CCON1\nE8H 00HRESERVED\nACC1\nE0H 00HRESERVED\nADCCON21\nD8H 00HADCDATAL\nD9H 00HADCDATAH\nDAH 00HRESERVED\nPSW1\nD0H 00HDMAL\nD2H 00HDMAH\nD3H 00HDMAP\nD4H 00HRESERVED\nT2CON1\nC8H 00HRCAP2L\nCAH 00HRCAP2H\nCBH 00HTL2\nCCH 00HTH2\nCDH 00HRESERVED\nWDCON1\nC0H 10H\nIP1\nB8H 00HECON\nB9H 00HEDATA1\nBCH 00HEDATA2\nBDH 00H\nIE1\nA8H 00HIEIP2\nA9H A0H\nP21\nA0H FFH\nSCON1\n98H 00HSBUF\n99H 00HI2CDAT\n9AH 00HNOT USED\nP11, 2\n90H FFHNOT USED\nTCON1\n88H 00HTMOD\n89H 00HTL0\n8AH 00HTL1\n8BH 00HTH0\n8CH 00HTH1\n8DH 00H\nP01\n80H FFHSP\n81H 07HDPL\n82H 00HDPH\n83H 00HDPP\n84H 00HRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED RESERVED RESERVED\nRESERVED RESERVED RESERVED\nRESERVED RESERVED\nRESERVED\nRESERVED\nNOT USEDNOT USED NOT USEDP31\nB0H FFH\nNOT USED NOT USEDSPIDAT\nF7H 00H\nADCCON1\nEFH 40H\nRESERVED\nPSMCON\nDFH DEH\nEDARL\nC6H 00H\nEDATA3\nBEH 00HEDATA4\nBFH 00H\nNOT USED\nPCON\n87H 00HISPI\nFFH 0WCOL\nFEH 0SPE\nFDH 0SPIM\nFCH 0CPOL\nFBH 0CPHA\nFAHSPR1\nF9H 0SPR0\nF8H 0BITS\nF7H 0F6H 0F5H 0F4H 0F3H 0F2H F1H 0F0H 0BITS\nI2CSI/MDO\nEFH 0EEH 0I2C1O1MCO\nEDH 0ECH 0EBH 0EAH E9H 0E8H 0BITS\nE7H 0E6H 0E5H 0E4H 0E3H 0E2H E1H 0E0H 0BITS\nADCI\nDFH 0DMA\nDEH 0CCONV\nDDH 0SCONV\nDCH 0CS3\nDBH 0CS2\nDAHCS1\nD9H 0CS0\nD8H 0BITS\nCY\nD7H 0AC\nD6H 0F0\nD5H 0RS1\nD4H 0RS0\nD3H 0OV\nD2HFI\nD1H 0P\nD0H 0BITS\nTF2\nCFH 0EXF2\nCEH 0RCLK\nCDH 0TCLK\nCCH 0EXEN2\nCBH 0TR2\nCAHCNT2\nC9H 0CAP2\nC8H 0BITS\nPRE3\nC7H 0PRE2\nC6H 0PRE1\nC5H 0C4H 1WDIR\nC3H 0WDS\nC2HWDE\nC1H 0WDWR\nC0H 0BITS\nPSI\nBFH 0PADC\nBEH 0PT2\nBDH 0PS\nBCH 0PT1\nBBH 0PX1\nBAHPT0\nB9H 0PX0\nB8H 0BITS\nRD\nB7H 1WR\nB6H 1T1\nB5H 1T0\nB4H 1INT1\nB3H 1INT0\nB2HTxD\nB1H 1RxD\nB0H 1BITS\nEA\nAFHEADC\nAEHET2\nADHES\nACH 0ET1\nABH 0EX1\nAAHET0\nA9H 0EX0\nA8H 0BITS\nA7H A6H A5H 1A4H 1A3H 1A2H A1H 1A0H 1BITS\nSM0\n9FH 0SM1\n9EH 0SM2\n9DH 0REN\n9CH 0TB8\n9BH 0RB8\n9AHTI\n99H 0RI\n98H 0BITS\n97H 196H 195H 194H 193H 192HT2EX\n91H 1T2\n90H 1BITS\nTF1\n8FH 0TR1\n8EH 0TF0\n8DH 0TR0\n8CH 0IE1\n8BH 0IT1\n8AHIE0\n89H 0IT0\n88H 0BITS\n87H 186H 185H 184H 183H 182H 81H 180H 1BITS1\n1\n0\n1\n0\n1\nIE0\n89H 0IT0\n88H 0TCON\n88H 00HMNEMONIC\nSFR ADDRESS\nDEFAULT VALUEMNEMONIC\nDEFAULT VALUE\nSFR ADDRESSTHESE BITS ARE CONTAINED IN THIS BYTE. SFR MAP KEY:\nNOTES\n1SFRs WHOSE ADDRESS ENDS IN 0H OR 8H ARE BIT ADDRESSABLE.\n2THE PRIMARY FUNCTION OF PORT1 IS AS AN ANALOG INPUT PORT; THEREFORE, TO ENABLE THE DIGITAL SECONDARY FUNCTIONS ON THESE\n  PORT PINS, WRITE A 0 TO THE CORRESPONDING PORT 1 SFR BIT.\n3CALIBRATION COEFFICIENTS ARE PRECONFIGURED ON POWER-UP TO FACTORY CALIBRATED VALUES.1\nRESERVED RESERVEDRESERVED0\n0\n0\n0\n0\n0\n0\n0\n0 0 0 0\n1 1TIMECONHTHSEC SEC MIN HOUR INTVAL DPCON\nA1H A2H A3H A4H A5H A6H A7H 00H 00H 00H 00H 00H 00H 00HRESERVED RESERVED RESERVED RESERVEDRESERVED RESERVED\nPWMCON\nAEH 00HCFG841/\nCFG842\nAFH 00H\nRESERVED RESERVEDT3FD T3CON\n9DH 9EH 00H 00HPWM0L PWM0H PWM1L PWM1H SPH\n00H 00H 00H 00H 00H B1H B2H B3H B4H B7HRESERVED RESERVED RESERVEDCHIPID\nC2H XXHEDARH\nC7H 00HI2CGC/MDE I2CMRESERVED\nPRE0PLLCON\nD7H 53HI2C1O0/MDI I2CRS I2CTX I2CI\nI2CADD\n9BH 55H\n03260-0-025I2CADD1\n91H 7FHI2CADD2\n92H 7FHI2CADD3\n93H 7FH\n \nFigure 27. Special Function Register Locations and Reset Values  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 31 of 95 ADC CIRCUIT INFORMAT ION  \nGeneral Overview  \nThe ADC conversion block incorporates a fast, 8 -chann el,  \n12-bit, single -supply ADC. This block provides the user with \nmultichannel mux, track -and-hold, on -chip reference, calibr a-\ntion features, and ADC. All components in this block are easily \nconfigured via a 3 -register SFR interface.  \nThe ADC converter cons ists of a conventional successive \napproximation converter based around a capacitor DAC. The converter accepts an analog input range of 0 V to V\nREF. A high \nprec ision, 15 ppm, low drift, factory calibrated 2.5 V reference is \nprovided on -chip. An external ref erence can be connected as \ndescribed in the Voltage Reference Connections section. This \nexternal reference can be in the range 1 V to AV DD. \nSingle -step or continuous conversion modes can be initiated in \nsoftware or alternatively by applying a convert signa l to an \nexternal pin. Timer 2 can also be configured to generate a repetitive trigger for ADC conversions. The ADC may be confi gured to operate in a DMA mode whereby the ADC block \ncontinu ously converts and captures samples to an external \nRAM space without  any interaction from the MCU core. This \nautomatic capture facility can extend through a 16 MByte \nexternal data memory space.  \nThe ADuC841/ ADuC842/ ADuC843 are shipped with factory \nprogrammed calibration coefficients that are automatically \ndownloaded to the ADC on power -up, ensuring optimum ADC \nperformance. The ADC core contains internal offset and gain \ncalibrat ion registers that can be hardware calibrated to \nminimize system errors. \nA voltage output from an on -chip band gap reference propo r-\ntional to absolute temperature can also be routed through the front end ADC multiplexer (effectively a 9th ADC channel input ), facilitating a temperature sensor implementation.  ADC Transfer Function  \nThe analog input range for the ADC is 0 V to V REF. For this \nrange, the designed code transitions occur midway between successive int eger LSB values, that is , 0.5 LSB, 1.5 LSB, 2.5 LSB . \n. . FS – 1.5 LSB. The output coding is straight binary with 1 LSB \n= FS/4096 or 2.5 V/4096 = 0.61 mV when V\nREF = 2.5 V . The \nideal input/output transfer characteristic for the 0 V to V REF \nrange is shown in Figure 28. \nOUTPUT\nCODE\n111...111\n111...110\n111...101\n111...100\n000...011\n000...010\n000...001\n000...000\n0V1LSB+FS1LSB =FS\n4096\n03260-0-026 \nFigure 28. ADC Transfer Function  \n \nTypical Operation  \nOnce configured via the ADCCON 1 –3 SFRs, the ADC \nconverts the analog input and provides an ADC 12 -bit result \nword in the ADCDATAH/L SFRs. The top 4 bits of the ADCDATAH SFR  are written with the channel selection bits to \nidentify the channel  result. The format of the ADC 12 -bit result \nword is shown in Figure 29. \nCH–ID\nTOP 4 BITSHIGH 4 BITS OF\nADC RESULT WORD\nLOW 8 BITS OF THE\nADC RESULT WORDADCDATAH SFR\nADCDATAL SFR\n03260-0-027 \nFigure 29. ADC Result Word Format  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 32 of 95 ADCCON1 —(ADC Control SFR 1)  \nThe ADCCON1 register controls conversion and acquisition \ntimes, hardware conversion modes, and power -down modes as \ndetailed b elow.  \nSFR Address  EFH  \nSFR Power -On Default  40H  \nBit Addressable  No     \n \n  \n Table 8. ADC CON1 SFR Bit Designations  \nBit No.  Name  Description  \n7 MD1  The mode bit selects the active operating mode of the ADC.  \nSet by the user to power up the ADC.  \nCleared by the user to power down the ADC.  \n6 EXT_REF  Set by the user to select an external reference.  \nCleared by the user to use the internal reference.  \n5 \n4  CK1  \nCK0  The ADC clock divide bits (CK1, CK0) select the divide ratio for the PLL master clock ( ADuC842/ ADuC843 ) or the \nexternal crystal ( ADuC841) used to generate the ADC clock. To ensure correct ADC operation, the divider ratio \nmust be chosen to reduce the ADC clock to 8.38 MHz or lower. A typical ADC conversion requires 16 ADC clocks \nplus the selected acquisition time.  \nThe divider ratio is selected as follows:  \nCK1  \n0 \n0 \n1 \n1 CK0  \n0 \n1 \n0 \n1 MCLK Divider  \n32 \n4 (Do not use with a CD setting of 0)  \n8 \n2 \n3 \n2 AQ1  \nAQ0  The ADC acquisition select bits (AQ1, AQ0) sel ect the time provided for the input track -and -hold amplifier to \nacquire the input signal. An acquisition of three or more ADC clocks is recommended; clocks are as follows:  \nAQ1  \n0 \n0 \n1 \n1 AQ0  \n0 \n1 \n0 \n1 No. ADC Clks  \n1 \n2 \n3 \n4 \n1 T2C The Timer 2 conversion bit (T 2C) is set by the user to enable the Timer 2 overflow bit to be used as the ADC \nconversion start trigger input.  \n0 EXC  The external trigger enable bit (EXC) is set by the user to allow the external Pin P3.5 ( CONVST ) to be used as the \nactive low convert start input. This input should be an active low pulse (minimum pulse width >100 ns) at the \nrequired sample rate.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 33 of 95 ADCCON2 —(ADC Control SFR 2)  \nThe ADCCON2 register controls ADC channel selection and  \nconversion modes as detailed b elow. \nSFR Ad dress  D8H  \nSFR Power -On Default  00H  \nBit Addressable  Ye s \n Table 9. ADCCON2 SFR Bit Designations  \nBit No.  Name  Description  \n7 ADCI  ADC Interrupt Bit.  \nSet by hardware at the end of a single ADC conversion cycle or at the end of a DM A block conversion.  \nCleared by hardware when the PC vectors to the ADC interrupt service routine. Otherwise, the ADCI bit is cleared \nby user code.  \n6 DMA  DMA Mode Enable Bit.  \nSet by the user to enable a preconfigured ADC DMA mode operation. A more detail ed description of this mode is \ngiven in the ADC DMA Mode section. The DMA bit is automatically set to 0 at the end of a DMA cycle. Setting this bit causes the ALE output to cease; it start s again when DMA is started and operate s correctly after DMA is \ncomp lete.  \n5 CCONV  Continuous Conversion Bit.  \nSet by the user to initiate the ADC into a continuous mode of conver sion. In this mode, the ADC starts converting \nbased on the timing and channel configuration already set up in the ADCCON SFRs; the ADC automatica lly starts \nanother conversion once a previous conversion has co mpleted.  \n4 SCONV  Single Conversion Bit.  \nSet to initiate a single conversion cycle. The SCONV bit is automatically reset to 0 on completion of the single \nconversion cycle.  \n3 \n2 \n1 \n0 CS3 \nCS2 \nCS1 \nCS0  Channel Selection Bits.  \nAllow the user to program the ADC channel selection under software control. When a conversion is initiated, the \nconverted channel is the one pointed to by these channel selection bits. In DMA mode, the channel selection is \nderived from the channel ID written to the external memory.  \n  CS3 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n1 \n1 \n1 \n1 \n1 \n1 CS2 \n0 \n0 \n0 \n0 \n1 \n1 \n1 \n1 \n0 \n0 \n0 \n0 \n1 \n1 CS1 \n0 \n0 \n1 \n1 \n0 \n0 \n1 \n1 \n0 \n0 \n1 \n1 \n0 \n1 CS0 \n0 \n1 \n0 \n1 \n0 \n1 \n0 \n1 \n0 \n1 \n0 \n1 \n0 \n1 CH#  \n0 \n1 \n2 \n3 \n4 \n5 \n6 \n7 \nTemp Monitor  \nDAC0  \nDAC1  \nAGND  \nVREF \nDMA STOP   \n \n \n \n \n \n \n \n Requires minimum of 1 µs to acquire.  \nOnly use with internal DAC output buffer on.  \nOnly use with internal DAC output buffer on.  \n  \nPlace in XRAM location to finish DMA sequence; refer to \nthe ADC DMA Mode section.  \nAll other combinations reserved.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 34 of 95 ADCCON3 —(ADC Control SFR 3)  \nThe ADCCON3 register controls the operation of various  \ncalibration modes and also indicates the ADC busy status.  \nSFR Address  F5H  \nSFR Power -On Default  00H  \nBit Addressable  No \n Table 10. ADCCON3 SFR Bit De signations  \nBit No.  Name  Description  \n7 BUSY  ADC Busy Status Bit.  \nA read -only status bit that is set during a valid ADC conversion or during a calibration cycle.  \nBusy is automatically cleared by the core at the end of conversion or calibration.  \n6 RSVD  Reserved. This bit should always be written as 0.  \n5 AVGS1  Number of Average Selection Bits.  \n4 AVGS0  This bit selects the number of ADC readings that are averaged during a calibration cycle.  \nAVGS1 \n0 \n0 \n1 \n1 AVGS0 0 \n1 \n0 \n1 Number of Averages  \n15 \n1 \n31 63 \n3 RSVD Reserved. This bit should always be written as 0.  \n2 RSVD  This bit should always be written as 1  by the user when performing calibration.  \n1 TYPICAL  Calibration Type Select Bit. \nThis bit selects between offset (zero -scale) and gain (full -scale) calibrat ion. \nSet to 0  for offset calibration.  \nSet to 1  for gain calibration.  \n0 SCAL  Start Calibration Cycle Bit. When set, this bit starts the selected calibration cycle.  \nIt is automatically cleared when the calibration cycle is completed. \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 35 of 95 The ADC incorporat es a successive approximation arch itecture \n(SAR) involving a charge- sampled input stage. Figure 30 shows \nthe equiva lent circuit of the analog input section. Each ADC \nconversion is divided into two distinct phases, a s defined by the \nposition of the switches in Figure 30. During the sa mpling \nphase (with SW1 and SW2 in the track position), a charge \nproportional to the voltage on the analog i nput is developed \nacross the input samp ling capacitor. During the conversion \nphase (with both switches in the hold position), the capacitor DAC is a djusted via internal SAR logic until the voltage on \nNode A is 0, indicating that the sampled charge on the input capacitor is balanced out by the charge being output by the capacitor DAC. The final digital value contained in the SAR is then latched out as the result of the ADC conversion. Control of \nthe SAR and timing of acquisition and sampling modes is \nhandled automatically by built -in ADC control logic. \nAcquis ition and conversion times are also fully configurable \nunder user control.  \nCAPACITOR\nDAC\nCOMPARATORVREF\nAGND\nDAC1\nDAC0\nTEMPERATURE MONITOR\nAIN7\nAIN0\n32pF\nAGNDADuC841/ADuC842/ADuC843\nNODE Asw1\nsw2TRACK\nTRACKHOLD\nHOLD200Ω\n200Ω\n03260-0-028 \nFigure 30. Internal ADC Structure  \nNote that whenever a new input channel is selected, a residual charge from the 32 pF sampling capacitor pla ces a transient on \nthe newly selected input. The signal source must be capable of recovering from this transient before the sampling switches go \ninto hold mode. Delays can be inserted in software (b etween \nchannel selection and conversion request) to accoun t for input \nstage settling, but a hardware solution alleviates this burden \nfrom the software design task and ultimately results in a cleaner system implementation. One har dware solution is to choose a \nvery fast settling op amp to drive each analog input. S uch an op \namp would need to fully settle from a small signal transient in less than 300 ns in order to guarantee adequate settling under all software configurations. A better solution, re commended for \nuse with any amplifier, is shown in Figure 31. Though at first \nglance the circuit in Figure 31 may look like a simple antialia s-\ning filter, it actually serves no such purpose since its corner frequency is well above the Nyquist f requency, even at a 200 kHz sample rate. Though the R/C does help to reject some \nincoming high frequency noise, its primary function is to ensure  \nthat the transient demands of the ADC input stage are met.  \nAIN0ADuC841/\nADuC842/\nADuC843\n10Ω\n0.1µF\n03260-0-029 \nFigure 31. Buffering An alog Inputs  \nIt does so by providing a capacitive bank from which the 32 pF \nsampling capacitor can draw its charge. Its voltage does not \nchange by more than one count (1/4096) of the 12- bit transfer \nfunction when the 32 pF charge from a previous channel is dumped onto it. A larger capac itor can be used if desired, but \nnot a larger resistor (for reasons described below). The Scho ttky \ndiodes in Figure 31 may be necessary to limit the voltage \napplied to the analog input pin per the Absolute Maximum \nRatings. They are not necessary if the op amp is po wered from \nthe same supply as the part since in that case the op amp is unable to generate voltages above V\nDD or below ground. An op \namp of some kind is necessary unless the si gnal source is very \nlow impedance to begin with. DC leakage cu rrents at the parts’ \nanalog inputs can cause measurable dc errors with external source i mpedances as low as 100 Ω  or so. To ensure accurate \nADC operation, keep the total source i mpedance at each analog \ninput less than 61 Ω. The Table 11 illustrates examples of how \nsource impedance can affect dc a ccuracy . \nTable 11. Source Impedance and DC Accuracy  \nSource  \nImpedance Ω  Error from 1 µA \nLeakage Current  Error from 10 µA  \nLeakage Current  \n61  61 µV = 0.1 LSB  610 µV = 1 LSB  \n610  610 µV = 1 LSB  6.1 mV = 10 LSB  \n \nAlthough Figure 31 shows the op amp operating at a gain of 1, \none can, of course, configure it for any gain needed. Also, one \ncan just as easily use an instrumentation amplifier in its place to \ncondition differential signals. Use an a mplifier  that is capable of \ndelivering the signal (0 V to V REF) with minimal satur ation. \nSome single -supply rail -to-rail op amps that are useful for this \npurpose are described in Table 12. Check An alog Devices website  \nwww.analog.com  for details on these and other op amps and \ninstr umentation amps.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 36 of 95 Table 12. Some Single -Supply Op Amps \nOp Amp Model  Characteristics \nOP281/OP481  Micropower  \nOP191/OP291/OP491  I/O Good up to V DD, Low Cost  \nOP196/OP296/OP496  I/O to V DD, Micropower, Low Cost  \nOP183/OP283  High Gain -Bandwidth Product  \nOP162/OP262/OP462  High GBP, Micro Package  \nAD820/AD822/AD824  FET Input, Low Cost  \nAD823  FET Input, High GBP  \n \nKeep in mind that the ADC transf er function is 0 V to V REF, and \nthat any signal range lost to amplifier saturation near ground \nimpact s dynamic range. Though the op amps in Table 12 are \ncapable of delivering output signals that very closely a pproac h \nground, no amplifier can deliver signals all the way to ground when powered by a single supply. Therefore, if a negative supply \nis available, you might consider u sing it to power the front end \nampl ifiers. If you do, however, be sure to include the Schott ky \ndiodes shown in Figure 31 (or at least the lower of the two diodes) \nto protect the analog input from undervoltage conditions. To \nsummarize this section, use the cir cuit in Figure 31 to drive the \nanalog input pins of the parts.  \nVoltage Reference Connections  \nThe on -chip 2.5 V band gap voltage reference can be used as the \nreference source for the ADC and DACs. To ensure the  accuracy \nof the voltage reference, you must decouple the C REF pin to \nground with a 0.47 µF capacitor, as shown in Figure 32. Note \nthat this is different from the ADuC812/ ADuC831/ ADuC832.  \nBUFFER\nBUFFER0.47µF51Ω\nVREF = NC\nCREF2.5V\nBAND GAP\nREFERENCEADuC841/ADuC842/ADuC843\n03260-0-030 \nFigure 32. Decoupling V REF and C REF \nIf the internal voltage reference is to be used as a reference for \nexternal circuitry, the C REF output should be used. However, a \nbuffer must be used in this case to ensure that no current is \ndrawn from the C REF pin itself. The voltage on the C REF pin is \nthat of an internal node within the buffer block, and its voltage is critical for ADC and DAC accuracy. The parts power up with \ntheir internal voltage reference in the off state.  If an external voltage reference is preferred, it should be connected to the C\nREF pin as shown in Figure  33. Bit 6 of the \nADCCON1 SFR must be set to 1 to switch in the external \nreference voltage.  \nTo ensure accurate ADC operation, the voltage applied to C REF \nmust be between 1 V and AV DD. In situations where analog \ninput signals are proportional to the power supply (such as in \nsome strain gage applications), it may be desirable to connect \nthe C REF pin directly to AV DD. Op eration of the ADC or DACs \nwith a reference voltage below 1 V , however, may incur loss of accuracy, eventually resulting in missing codes or non -\nmonotonicity. For that reason, do not use a reference voltage l o w e r  t h a n  1  V.  \nBUFFER51Ω\nCREFEXTERNAL\nVOLTAGE\nREFERENCE\n 1 = EXTERNAL 0 = INTERNAL\n0.1µF2.5V\nBAND GAP\nREFERENCEADuC841/ADuC842/ADuC843\nADCCON1.6VDD\n03260-0-031VREF = NC\n \nFigure 33. Using an External Voltage Reference  \n \nConfiguring the ADC \nThe parts’ successive approximation ADC is driven by a divided down version of the master clock. To ensure adequate ADC oper ation, this ADC clock must be between 400 kHz and \n8.38 MHz. Frequencies within this range can be achieved easily \nwith master clock frequencies from 400  kHz to well above \n16 MHz, with the four ADC clock divide r atios to choose from. \nFor example, set the ADC clock divide ratio to 8 ( that is , ADCCLK \n= 16.777216 MHz/8 = 2 MHz) by se tting the appropriate bits in \nADCCON1 (ADCCON1.5 = 1, ADCCON1.4 = 0). The total ADC conversion time is 15 ADC clocks, plus 1 ADC clock fo r \nsynchronization, plus the selected acquisition time (1, 2, 3, or 4 ADC clocks). For the preceding example, with a 3 -clock \nacquis ition time, total conversion time is 19 ADC clocks (or \n9.05 µs for a 2 MHz ADC clock).  \nIn continuous conversion mode, a new co nversion begins each \ntime the previous one finishes. The sample rate is then simply the inverse of the total conversion time described previously. In the preceding example, the continuous conversion mode sample rate is 110.3 kHz.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 37 of 95 If using the temperature s ensor as the ADC input, the ADC \nshould be configured to use an ADCCLK of MCLK/32 and four \nacquisition clocks.  \nIncreasing the conversion time on the temperature monitor channel improves the accuracy of the reading. To further improve the acc uracy, an extern al reference with low tempera -\nture drift should also be used.  \nADC DMA Mode  \nThe on -chip ADC has been designed to run at a maximum \nconversion speed of 2.38 µs (420 kHz sampling rate). When converting at this rate, the ADuC841/ ADuC842/ ADuC843 \nMicroCo nverter ® has 2 µs to read the ADC result and to store \nthe result in memory for further pos tprocessing; otherwise th e \nnext ADC sample could be lost. In an interrupt driven routine, the MicroConverter would also have to jump to the ADC \ninterrupt se rvice routine, which also increases the time required \nto store the ADC results. In applications where the parts cannot \nsustain the interrupt rate, an ADC DMA mode is provided.  \nTo enable DMA mode, Bit 6 in ADCCON2 (DMA) must be set, \nwhich allows the ADC results to be written directly to a 16  MByte  \nexternal static memory SRAM (mapped into data me mory \nspace) without any interaction  from the core of the part. This \nmode allows the part to capture a contiguous sample stream at \nfull ADC update rates (420 kHz).  \nTypical DMA Mode Configuration Example  \nSetting the parts to DMA mode consists of the following steps: \n1. The ADC must be powered d own. This is done by ensu ring \nthat MD1 and MD0 are both set to 0 in ADCCON1.  \n2. The DMA address pointer must be set to the start a ddress \nof where the ADC results are to be written. This is done by \nwriting to the DMA mode address pointers DMAL, DMAH,  \na n d  D M A P.  DMAL must be written to first, fo llowed by \nDMAH, and then by DMAP .  \n3. The external memory must be preconfigured. This consists of writing the required ADC channel IDs into the top four \nbits of every second memory location in the external SRAM, starting at th e first address spec ified by the DMA \naddress pointer. Because the ADC DMA mode operates independently from the ADuC841/ ADuC842/ ADuC843 \ncore, it is necessary to provide it with a stop command. This is done by duplicating the last channel ID to be \nconverted followed by 1111 into the next channel selection \nfield. A typical preconfiguration of exte rnal memory is \nshown in Figure  34. 1 1 1 1\n0 0 1 1\n0 0 1 1\n1 0 0 0\n0 1 0 1\n0 0 1 000000AH\n000000H CONVERT ADC CH 2CONVERT ADC CH 5CONVERT ADC CH 3\nCONVERT TEMP SENSORSTOP COMMAND\nREPEAT LAST CHANNEL\nFOR A VALID STOP\nCONDITION\n03260-0-033\n \nFigure 34. Typical DMA External Memory Preconfiguration  \n4. The DMA is initiated by writing to the ADC SFRs in the \nfollowing sequence:  \na. ADCCON2 is writ ten to enable the DMA m ode, that \nis, MOV ADCCON2, # 40H ; DMA mode e nabled.  \nb. ADCCON1 is written to configure the conversion time and power -up of the ADC. It can also enable \nTimer 2 driven conversions or external triggered \nconversions if required.  \nc. ADC conversions are initiated. This  is done by \nstarting single conversions, starting Timer 2, ru nning \nfor Timer 2 conversions, or receiving an external \ntrigger. \nWhen the DMA conversions are complete, the ADC interrupt bit, ADCI, is set by hardware, and the external SRAM contains the new ADC  conversion results as shown in Figure 35. Note \nthat no result is written to the last two memory loc ations.  \nWhen the DMA mode logic is active, it takes the responsibility of storing the ADC results away from both th e user and the core \nlogic of the part. As the DMA interface writes the results of the ADC conve rsions to external memory, it takes over the external \nmemory interface from the core. Thus, any core instructions \nthat access the exte rnal memory while DMA mode  is enabled \ndoes not get access to the external memory. The core executes the in structions, and they take the same time to execute, but \nthey cannot access the exte rnal memory.  \n1 1 1 1\n0 0 1 1\n0 0 1 1\n1 0 0 0\n0 1 0 1\n0 0 1 000000AH\n000000HCONVERSION RESULT\nFOR ADC CH 2CONVERSION RESULT\nFOR ADC CH 5CONVERSION RESULT\nFOR ADC CH 3\nCONVERSION RESULT\nFOR TEMP SENSORSTOP COMMAND\nNO CONVERSION\nRESULT WRITTEN HERE\n03260-0-034 \nFigure 35. Typical External Memory Configuration Post  ADC DMA Operation  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 38 of 95 The DMA logic operates from the ADC clock and uses pipeli n-\ning to perform the ADC conversions and to access the external \nmemory at the same time. The time it takes to perform one ADC \nconversion is called a DMA cycle. The actions performe d by the \nlogic during a typical DMA cycle are shown in Figure 36. \nWRITE ADC RESULT\nCONVERTED DURING\nPREVIOUS DMA CYCLEREAD CHANNEL ID\nTO BE CONVERTED DURING\nNEXT DMA CYCLECONVERT CHANNEL READ DURING PREVIOUS DMA CYCLE\nDMA CYCLE\n03260-0-035\n \nFigure 36. DMA Cycle  \nFigure 36 shows that during one DMA cycle, the following \nactions are performed by the DMA logic:  \n1. An ADC conversion is performed on the channel whose \nID was read during the previous cycle.  \n2. The 12 -bit result and the channel ID of the conversion \nperformed in the previous cycle is written to the ex ternal \nmemory.  \n3. The ID  of the next channel to be converted is read from \nexternal memory.  \nFor the previous example, the complete flow of events is shown in Figure 36. Because the DMA logic uses pipelining, it takes \nthree cycles before the first correct result is written out.  \nMicro Operation during ADC DMA Mode  \nDuring ADC DMA mode, the MicroConverter core is free to \ncontinue code execution, including general housekeeping and \ncommunic ation tasks. However, note that MCU core accesses to \nPorts  0 and 2 (which of course are being used by the DMA con -\ntroller) are gated off during the ADC DMA mode of operation. This means that even though the instruction that accesses the external Ports 0 or 2 appears to execute, no data is seen at these external p orts as a result. Note that during DMA to the inte r-\nnally contained XRAM, Ports 0 and 2 are available for use.  \nThe only case in which the MCU can access XRAM during DMA is when the internal XRAM is enabled and the section of RAM to which the DMA ADC result s are being wri tten to lies \nin an external XRAM. Then the MCU can access the internal XRAM only. This is also the case for use of the extended stack pointer.  \nThe MicroConverter core can be configured with an interrupt \nto be triggered by the DMA controller when it has finished \nfilling the r equested block of RAM with ADC results, allowing \nthe service routine for this interrupt to postprocess data without any real -time timing constraints.  ADC Offset and Gain Calibration Coefficients  \nThe ADuC841/ ADu C842/ ADuC843 have two ADC calibration \ncoefficients, one for offset calibration and one for gain calibra -\ntion. Both the  offset and gain cal ibration coefficients are 14 -bit \nwords, and are each stored in two registers located in the special \nfunction register (SFR) area. The offset calibration coefficient is \ndivided into ADCOFSH (six bits) and ADCOFSL (8 bits), and the gain c alibration coefficient is divided into ADCGAINH  \n(6 bits) and ADCGAINL (8 bits).  \nThe offset calibration coefficient compensates for dc offset \nerrors in both the ADC and the input signal. Increasing the \noffset coefficient compensates for positive offset, an d effectively \npushes the ADC transfer function down. Decreasing the offset coefficient compensates for negative offset, and effectively pushes the ADC transfer function up. The maximum offset that can be compensated is typically ±5% of V\nREF, which equates to \ntypically ±125 mV with a 2.5 V reference.  \nSimilarly, the gain calibration coefficient compensates for dc gain errors in both the ADC and the input signal. Increasing the gain coeff icient compensates for a smaller analog input signal \nrange and scales the  ADC transfer function up, effectively \nincreasing the slope of the transfer function. Decreasing the \ngain coefficient compensates for a larger analog input signal \nrange and scales the ADC transfer function down, effectively \ndecrea sing the slope of the tran sfer function. The maximum \nanalog input signal range for which the gain coefficient can \ncompe nsate is 1.025 × V\nREF, and the minimum input range is \n0.975 × V REF, which equates to typically ±2.5% of the reference \nvoltage.  \nCALIBRATING THE ADC  \nTwo hardware cal ibration modes are provided, which can be \neasily initiated by user software. The ADCCON3 SFR is used to \ncalibrate the ADC. Bit 1 (typical) and CS3 to CS0 (ADCCON2)  set \nup the calibration modes.  \nDevice calibration can be initiated to compensate for signif icant \nchanges in operating condition frequency, analog input range, reference voltage, and supply voltages. In this calibr ation mode, \noffset calibration uses internal AGND selected via ADCCON2 register Bits CS3 to CS0 (1011), and gain calibration uses inter -\nnal V\nREF selected by Bits CS3 to CS0 (1100). Offset calibr ation \nshould be executed first, followed by gain calibration. System calibr ation can be initiated to compensate for both internal and \nexternal system errors. To perform system calibration by using an external reference, tie the system ground and reference to \nany two of the six selectable inputs. Enable external reference mode (ADCCON1.6). Select the channel connected to AGND \nvia Bits CS3 to CS0 and pe rform system offset calibration. \nSelect the channel connected to V\nREF via Bits CS3 to CS0 and \nperform system gain cal ibration.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 39 of 95 Initiating the Calibration in Code  \nWhen calibrating the ADC using ADCCON1, the ADC must \nbe set up into the configuration in which it is  used. The \nADCCON3 register can then be used to set up the device and to calibrate the ADC offset and gain.  \nMOV ADCCON1,#08CH ; ADC on; ADCCLK set  \n;to divide by 32,4 \n;acquisition clock  \n \nTo calibrate device offset:  \nMOV ADCCON2,#0BH  ;select internal AGND  \nMOV ADCCON3,#25H  ;select offset calibr ation, \n;31 averages per bit, \n;offset calibration  \n \nTo calibrate device gain:  \nMOV ADCCON2,#0CH  ;select internal V REF \nMOV ADCCON3,#27H  ;select offset calibr ation, \n;31 averages per bit, \n;offset calibration  \n \nTo calibrate system offset, connect system AGND to an A DC \nchannel input (0).  \nMOV ADCCON2,#00H  ;select external AGND  \nMOV ADCCON3,#25H  ;select offset calibr ation, \n;31 averages per bit  \n \nTo calibrate system gain, connect system V REF to an ADC \nchannel input (1).  \nMOV ADCCON2,#01H  ;select external V REF \nMOV ADCCON3 ,#27H  ;select offset calibr ation, \n;31 averages per bit, \n;offset calibration  \n \nThe calibration cycle time T CAL is calculated by the following \nequation:  \n()ACQ CAL T NUMAV ADCCLK T +× × ×= 16 14  \nFor an ADCCLK/FCORE divide ratio of 32, T ACQ = 4 ADCCLK, \nand NUMAV = 15, the cali bration cycle time is  \n()()\nms TT\nCALCAL\n84 16 15 524288/1 14\n=+×× ×=\n \nIn a calibration cycle, the ADC busy flag (Bit 7), instead of \nframing an individual ADC conversion as in normal mode, \ngoes high at the start of calibration and returns to zero only at the end of the calibration  cycle. It can therefore be monitored in \ncode to indicate when the calibration cycle is completed. The following code can be used to monitor the BUSY signal during a calibration cycle:  \nWAIT:  \nMOV A, ADCCON3  ;move ADCCON3 to A  \nJB ACC.7, WAIT  ;If Bit 7 is set jump to  \nWAIT else continue  \n NONVOLATILE FLASH/EE  MEMORY  \nThe ADuC841/ ADuC842/ ADuC843 incorporate Flash /EE \nmemory technology on -chip to provide the user with nonvol a-\ntile, in -circuit, repro grammable code and data memory space. \nFlash/EE memory is a relatively recent type of nonvolatile memory technology, which is based on a single transistor cell architecture. Flash/EE memory combines the flex ible in -circuit \nreprogrammable features of EEPROM with the space eff icient/  \ndensity features of EPROM as shown in Figure 37. \nBecause Flash/EE technology is based on a single trans istor cell \narchitecture, a flash memory array, such as EPROM, can be implemented to achieve the space efficiencies or memory de nsities  \nrequired by a given design. Like EEPROM, flash memory can be programmed in -system at a byte level; it must first be erase d, \nthe erase being performed in page blocks. Thus, flash memory \nis often and more correctly referred to as Flash/EE memory.  \nEEPROM\nTECHNOLOGYEPROM\nTECHNOLOGY\nFLASH/EEMEMORY\nTECHNOLOGYIN-CIRCUIT\nREPROGRAMMABLESPACE EFFICIENT/\nDENSITY\n03260-0-036 \nFigure 37. Flash/EE Memory Development  \nOverall, Flash/EE memory represents a step closer to the ideal \nmemory device that includes nonvolatility, in -circuit progra m-\nmability, high density, and low cost. Incorporated in the parts, Flash/EE memory technology allows the user to update pr ogram  \ncode space in -circuit, without the need to replace one -time \nprogrammabl e (OTP) devices at remote opera ting nodes. \nFlash/EE Memory and the ADuC841/ ADuC842/ ADuC843  \nThe parts provi de two arrays of Flash/EE memory for user \napplications. Up to 62 kBytes of Flash/EE program space are provided on -chip to facilitate code execution without any \nexternal di screte ROM device requirements. The program \nmemory can be programmed in -circuit by us ing the serial \ndownload mode provided, by using conventional third party memory progra mmers, or via a user defined protocol that can \nconfigure it as data if r equired.  \nNote that the following sections use the 62 kByte program space \nas an example when referr ing to ULOAD mode. For the other \nmemory models (32 kByte and 8 kByte), the ULOAD space \nmoves to the top 8 kBytes of the on -chip pro gram memory, that  is, \nfor 32 kBytes, the ULOAD space is from 24 kBytes to 32 kBytes, \nthe kernel still resides in a protected space from 60 kBytes to 62 kBytes. There is no ULOAD space present on the 8 kBtye part.  \n \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 40 of 95 A 4 kByte Flash/EE data memory space is also provided on -\nchip. This may be used as a general -purpose nonvolatile \nscratchpad area. User access to this area is via a gr oup of six \nSFRs. This space can be programmed at a byte level, although it \nmust first be erased in 4 -byte pages.  \nFlash/EE Memory Reliability  \nThe Flash/EE program and data memory arrays on the parts are fully qualified for two key Flash/EE memory characteri stics: \nFlash/EE memory cycling e ndurance and Flash/EE memory \ndata retention.  \nEndurance quantifies the ability of the Flash/EE memory to be \ncycled through many program, read, and erase cycles. In real \nterms, a single endurance cycle is composed of four inde pend-\nent, sequential events, defined as  \n1. Initial page erase sequence.  \n2. Read/verify sequence a single Flash/EE.  \n3. Byte program sequence memory.  \n4. Second read/verify sequence endurance cycle.  \nIn reliability qualification, every byte in both the program and data Fl ash/EE memory is cycled from 00H to FFH until a first \nfail is r ecorded, signifying the endurance limit of the on -chip \nFlash/EE memory.  \nAs indicated in the Specifications table, the parts’ Flash/EE memory endurance qualification has been carried out in \nacco rdance with JEDEC Retention Lifetime Specification A117 \nover the industrial te mperature range of – 40°C to +25°C and \n+25°C to +85°C. The results allow the spec ification of a mini -\nmum endurance figure over supply and over temperature of 100,000 cycles, with  an endurance figure of 700,000 cycles being \ntypical of o peration at 25°C.  \nRetention quantifies the ability of the Flash/EE memory to \nretain its pr ogrammed data over time. Again, the parts have \nbeen qualified in accordance with the formal JEDEC Retention \nLifetime Specification (A117) at a specific junction temper ature \n(T\nJ = 55°C). As part of this qualification procedure, the \nFlash/EE memory is cycled to its specified endurance limit, described previously, before data retention is cha racterized. \nThis means that the Flash/EE memory is guara nteed to retain \nits data for its fully specified retention lifetime every time the \nFlash/EE me mory is reprogrammed. Also note that retention \nlifetime, based on an activation energy of 0.6 eV , derates with T\nJ \nas shown in Figure 38. 40 60 70 90\nTJ JUNCTION TEMPERATURE ( °C)RETENTION (Years)250\n200\n150\n100\n50\n0\n50 80 110300\n100ADI SPECIFICATION\n100 YEARS MIN.\nAT T J = 55°C\n03260-0-037\n \nFigure 38. Flash/EE Memory Data Retention  \n \nUsing the Flash/EE Program Memory  \nThe 62 kByte Flash/EE program memory array is mapped into \nthe lower 62 kBytes of the 64 kByte program s pace addressable \nby the parts, and is used to hold user code in typical applic a-\ntions. The program Flash/EE memory array can be programmed in three ways:  \nSerial Downloading (In -Circuit Programming)  \nThe parts facilitate code download via the standard UART serial \nport. The parts enter serial download mode after a reset or \npower cycle if the \nPSEN  pin is pulled low through an external \n1 kΩ resistor. Once in serial download mode, the user can \ndownload code to the full 62 kBytes of Flash/EE pro gram \nmemory while the device is in -circuit in its target application \nhardware.  \nA PC serial download executable is provided as part of the \nADuC841/ ADuC842 QuickStart development system. The \nserial download protocol is detailed in MicroConverte r \nApplic ation Note uC004.  \nParallel Programming  \nParallel programming mode is fully compatible with conve n-\ntional third party flash or EEPROM device programmers. In this mode, Ports P0, P1, and P2 operate as the external data and address bus interface, ALE o perates as the write enable strobe, \nand Port P3 is used as a general configuration port, which confi gures the device for various program and erase operations \nduring parallel programming. The high voltage (12 V) supply \nrequired for flash programming is gene rated using on -chip \ncharge pumps to supply the high voltage program lines. The \ncomplete parallel programming specification is available on the Micr oConverter home page at www.analog.com/microconverter.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 41 of 95 User Download Mode (ULOAD)  \nFigure 39 shows that it is possible to use the 62 kBytes of \nFlash/EE pr ogram memory available to the user as a single \nblock of me mory. In this mode, all of the Flash/EE memory is \nread -only to user code.  \nHowever, the Flash/EE program memory ca n also be written to \nduring ru ntime simply by entering ULOAD mode. In ULOAD \nmode, the lower 56 kBytes of program memory can be erased \nand repr ogrammed by user software as shown in Figure 39. \nULOAD mode can be used t o upgrade your code in the field via \nany user defined download protocol. By configuring the SPI port on the part as a slave, it is possible to completely  reprogram \nthe 56  kBytes of Flash/EE program memory in only 5 seconds \n(refer to Appl ication Note uC007) . \nAlternatively, ULOAD mode can be used to save data to the 56 kBytes of Flash/EE memory. This can be extremely useful in \ndata logging applications where the part can provide up to 60 kBytes of NV data memory on chip (4 kBytes of dedi cated \nFlash/EE data me mory also exist).  \nThe upper 6 kBytes of the 62 kBytes of Flash/EE program memory are programmable only via serial download or parallel \nprogramming. This means that this space appears as read -only \nto user code. Therefore, it cannot be accidentally erased o r \nreprogrammed by erroneous code exec ution, which makes it \nvery suitable to use the 6 kBytes as a bootloader.  \nA bootload enable option exists in the serial downloader to \n“always run from E000H after reset. ” If using a bootloader, this \noption is recommende d to ensure that the boo tloader always \nexecutes correct code after reset. Progra mming the Flash/EE \nprogram memory via ULOAD mode is described in more detail in the description of ECON and in Applic ation Note uC007.  \n�EMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED  FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n62 kBYTES OF ON-CHIP PROGRAM MEMORY.\nTHE KERNEL PROGRAM APPEARS AS 'NOP'\nINSTRUCTIONS TO USER CODE\nUSER BOOTLOADER SPACE\nTHE USER BOO TLOADER\nSPACE CAN BE PROGRAMMED IN\nDOWNLOAD/DEBUG MODE VIA THE\nKERNEL BUT IS READ ONLY WHEN\nEXECUTING USER CODE\nUSER DOWNLOADER SPACE\nEITHER THE DO WNLOAD/DEBUG\nKERNEL OR USER CODE (IN\nULOAD MODE) CAN PROGRAM\nTHIS SPACEFFFFH\n2kBYTE\nF800H\nF7FFH\n6kBYTE\nE000H\ndFFFH\n56kBYTE\n0000H\n03260-0-03862 kBYTES\nOF USER\nCODE\nMEMORY\n \nFigure 39. Fla sh/EE Program Memory Map in ULOAD Mode  \n(62 kByte Part)  \n �EMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED  FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n32 kBYTES OF ON-CHIP PROGRAM MEMORY.\nTHE KERNEL PROGRAM APPEARS AS 'NOP'\nINSTRUCTIONS TO USER CODE\nUSER BOOTLOADER SPACE\nTHE USER BOO TLOADER\nSPACE CAN BE PROGRAMMED IN\nDOWNLOAD/DEBUG MODE VIA THE\nKERNEL BUT IS READ ONLY WHEN\nEXECUTING USER CODE\nUSER DOWNLOADER SPACE\nEITHER THE DO WNLOAD/DEBUG\nKERNEL OR USER CODE (IN\nULOAD MODE) CAN PROGRAM\nTHIS SPACEFFFFH\n2kBYTE\nF800H\nF7FFH\nNOP'S\n8000H\n5FFFH\n26kBYTE\n0000H\n03260-0-0397FFFH\n8kBYTE\n6000H\n32 kBYTES\nOF USER\nCODE\nMEMORY\n \nFigure 40. Flash/EE Program Memory Map in ULOAD Mode  \n(32 kByte Part)  \n \nFlash/EE Program Memory Security  \nThe ADuC841/ ADuC842/ ADuC843 facilitate three modes of \nFlash/EE program memory security. These modes can be independently activated, restricting access to the internal code \nspace. These security modes can be enabled as part of serial \ndownload protocol as described in Application Note uC004 or via parallel programming. The security modes available on the \nparts are as follows:  \nLock Mode \nThis mode locks the code memory, disabling parallel progra m-\nming of the program memory. However, reading the memory in \nparallel mode and reading the memory via a MOVC command from external memory is still allowed. This mode is deactivated by initiating a code -erase command in serial download or \nparallel programming modes.  \nSecure Mode  \nThis mode locks code in memory, disabling parallel progra m-\nming (program and verify/read commands) as well as disabling the exec ution of a MOVC instruction from external memory, \nwhich is attempting to read the op codes from internal memory. Read/write of inte rnal data Flash/EE from external memory is \nalso disabled. This mode is deactivated by initiating a code -erase  \ncommand in serial download or parallel programming modes.  \nSerial Safe Mode  \nThis mode disables serial downl oad capability on the device. If \nserial safe mode is activated and an attempt is made to reset the \npart into serial download mode, that is , \nRESET  asserted and de -\nasserted with PSEN  low, the part interprets the serial dow nload \nreset as a normal reset only. It therefore cannot en ter serial \ndownload mode but can only execute as a normal reset \nsequence. Serial safe mode can be disabled only by initiating a \ncode -erase command in parallel programming mode.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 42 of 95 USING FLASH/EE DATA MEMORY  \nThe 4 kBytes of Flash/EE data memory are configured as 1024 \npages, each of 4 bytes. As with the other ADuC841/ ADuC842/  \nADuC843 peripherals, the inte rface to this memory space is via \na group of registers mapped in the SFR space. A group of four \ndata regi sters (EDATA1 –4) is used to hold the four bytes of data \nat each page. The page is addressed via the t wo registers, EADRH  \nand EADRL. Finally, ECON is an 8 -bit co ntrol register that may \nbe written with one of nine Flash/EE memory access commands  \nto trigger various read, write, erase, and verify fun ctions. A \nblock diagram of the SFR interface to the Flash/EE  data memory  \narray is shown in Figure 41. \nECON —Flash/EE Memory Control SFR  \nProgramming of either Flash/EE data memory or Flash/ EE program memory is done through the Flash/EE memory control SFR (ECON). This SFR allo ws the user to read, write, \nerase, or verify the 4 kBytes of Flash/EE data memory or the 56 kBytes of Flash/EE pr ogram memory.  BYTE 1\n(0000H)\nEDATA1 SFRBYTE 1\n(0004H)BYTE 1\n(0008H)BYTE 1\n(000CH)BYTE 1\n(0FF8H)BYTE 1\n(0FFCH)\nBYTE 2\n(0001H)\nEDATA2 SFRBYTE 2\n(0005H)BYTE 2\n(0009H)BYTE 2\n(000DH)BYTE 2\n(0FF9H)BYTE 2\n(0FFDH)\nBYTE 3\n(0002H)\nEDATA3 SFRBYTE 3\n(0006H)BYTE 3\n(000AH)BYTE 3\n(000EH)BYTE 3\n(0FFAH)BYTE 3\n(0FFEH)\nBYTE 4\n(0003H)\nEDATA4 SFRBYTE 4\n(0007H)BYTE 4\n(000BH)BYTE 4\n(000FH)BYTE 4\n(0FFBH)(0FFFH)\n01H\n00H02H03H3FEH3FFHPAGE ADDRESS\n(EADRH/L)\nBYTE\nADDRESSES\nAREGIVEN IN\nBRACKETS\n03260-0-040BYTE 4\n \nFigure 41. Flash/EE Data Memory Control and Configuration  \n \n Table 13. ECON —Flash/EE Memory Commands  \n \nECON VALUE  Command Description (Normal Mode)  (Power -On Default)   Command Description (ULOAD Mode)  \n01H  \nREAD Results in 4 bytes in the Flash/EE data memory, addressed \nby the page address EADRH/L, being read into EDATA1 –4. Not implem ented. Use the MOVC instruction.  \n02H  \nWRITE  Results in 4 bytes in EDATA1 –4 being written to the \nFlash/EE data memory at the page address given by \nEADRH/L (0 –  EADRH/L < 0400H).  \nNote that the 4 bytes in the page being addressed must \nbe pre-erased.  Results i n bytes 0 –255 of internal XRAM being written to \nthe 256 bytes of Flash/EE program memory at the page \naddress given by EADRH (0 –  EADRH < E0H).  \nNote that the 256 bytes in the page being a ddressed must \nbe pre-erased.  \n03H  Reserved.  Reserved.  \n04H  \nVERIFY  Veri fies that the data in EDATA1 –4 is contained in the \npage address given by EADRH/L. A subsequent read of the \nECON SFR results in 0 being read if the verification is valid, or a nonzero value being read to indicate an invalid \nverification.  Not implemented. Us e the MOVC and MOVX instructions \nto verify the write in software.  \n05H  \nERASE PAGE Results in erasing the 4 -byte page of Flash/EE data \nmemory addressed by the page address EADRH/L.  Results in the 64 byte page of Flash/EE pr ogram memory, \naddressed by the byt e address EADRH/L, being erased. \nEADRL can equal any of 64 locations within the page. A \nnew page starts whenever EADRL is equal to 00H, 40H, \n80H, or C0H.  \n06H  \nERASE ALL  Results in erasing the entire 4 kBytes of Flash/EE data \nmemory.  Results in erasing the entire 56 kBytes of ULOAD Flash/EE \nprogram memory.  \n81H  \nREADBYTE Results in the byte in the Flash/EE data memory, \naddressed by the byte address EADRH/L, being read into \nEDATA1 (0 –  EADRH / L –  0FFFH).  Not implemented. Use the MOVC command.  \n82H  \nWRITEBYTE  Results in the byte in EDATA1 being written into Flash/EE \ndata memory at the byte address EADRH/L  Results in the byte in EDATA1 being written into Flash/EE \nprogram memory at the byte address EADRH/L (0 –  \nEADRH/L – DFFFH).  \n0FH  \nEXULOAD  Leaves the ECON instru ctions to operate on the Flash/EE \ndata memory.  Enters normal mode directing subsequent ECON \ninstructions to operate on the Flash/EE data memory.  \nF0H  \nULOAD  Enters ULOAD mode, directing subsequent ECON \ninstructions to operate on the Flash/EE program memory.  Leaves the ECON instructions to operate on the Flash/EE \nprogram memory.  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 43 of 95 Example: Programming the Flash/EE Data Memory  \nA user wants to program F3H into the second byte on Page 03H \nof the Flash/EE data memory space while preserving the other 3 bytes alr eady in this page. A typical program of the Flash/EE \ndata array involves  \n1. Setting EADRH/L with the page address.  \n2. Writing the data to be programmed to the EDATA1 –4. \n3. Writing the ECON SFR with the appropriate co mmand.  \nStep 1: Set Up the Page Address  \nAddress re gisters EADRH and EADRL hold the high byte \naddress and the low byte address of the page to be ad dressed. \nThe assembly language to set up the address may a ppear as  \nMOV EADRH,#0  ; Set Page Address Pointer  \nMOV EADRL,#03H   \n \nStep 2: Set Up the EDATA Registers  \nWrite the four values to be written into the page into the four SFRs, EDATA1 –4. Unfortunately, the user does not know three \nof them. Thus, the user must read the current page and over -\nwrite the second byte.  \nMOV ECON,#1  ; Read Page into EDATA1 -4 \nMOV EDATA 2,#0F3H ; Overwrite byte 2  \n \nStep 3: Program Page  \nA byte in the Flash/EE array can be programmed only if it has previously been erased. To be more specific, a byte can be \nprogrammed only if it already holds the value FFH. Because of \nthe Flash/EE architectu re, this erase must happen at a page \nlevel; therefore, a minimum of 4 bytes (1 page) are erased when \nan erase command is initiated. Once the page is erase, the user \ncan program the 4 bytes in -page and then perform a \nverific ation of the data.  \nMOV ECON,#5  ; ERASE Page  \nMOV ECON,#2  ; WRITE Page  \nMOV ECON,#4  ; VERIFY Page  \nMOV A,ECON  ; Check if ECON=0 (OK!)  \nJNZ ERROR   \nAlthough the 4 kBytes of Flash/EE data memory are shipped from the factory pre -erased, that is , byte locations set to FFH, it \nis nonetheless go od programming practice to include an \nERASEALL  routine as part of any configuration/setup code \nrunning on the parts. An ERASEALL command consists of \nwriting 06H to the ECON SFR, which initiates an erase of the  \n4-kByte Flash/EE array. This command coded in  8051 assembly \nwould appear as  \nMOV ECON,#06H  ; Erase all Command  \n ; 2 ms Duration  \n Flash/EE Memory Timing  \nTypical program and erase times for the parts are as fo llows:  \nNormal Mode (operating on Flash/EE data memory)  \nREADPAGE (4 bytes)  22 machine cycle s \nWRITEPAGE (4 bytes)  380 µs  \nVERIFYPAGE (4 bytes)  22 machine cycles  \nERASEPAGE (4 bytes)  2 ms  \nERASEALL (4 kBytes)  2 ms  \nREADBYTE (1 byte)  9 machine cycles  \nWRITEBYTE (1 byte)  200 µs  \n \nULOAD Mode (operating on Flash/EE program memory)  \nWRITEPAGE (256 byt es)  16.5 ms  \nERASEPAGE (64 bytes)  2 ms  \nERASEALL (56 kBytes)  2 ms  \nWRITEBYTE (1 byte)  200 µs  \n \nNote that a given mode of operation is initiated as soon as the \ncommand word is written to the ECON SFR. The core micr o-\ncontrol ler operation on the parts is id led until the requested \nprogram/read or erase mode is completed. In practice, this \nmeans that even though the Flash/EE memory mode of oper ation \nis typically initiated with a two machine cycle MOV in struction \n(to write to the ECON SFR), the next instru ction is not \nexecuted until the Flash/EE operation is complete. This means \nthat the core cannot respond to interrupt requests until the Flash/EE operation is complete, although the core perip heral \nfunctions like counter/timers continue to count and time as conf igured throughout this period.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 44 of 95 ADuC842/ ADuC843 Configuration SFR (CFG842)   \nThe CFG842 SFR contains the necessary bits to configure the \ninternal XRAM, external clock select, PWM output selection, \nDAC buffer, and the extended SP for both the ADuC842 and \nthe ADuC843. By default, it configures the user into 8051 \nmode, that is , extended SP is disabled and internal XRAM is \ndisabled. On the ADuC841, this register is the CFG841 register and is described on the next page.  CFG842  ADuC842/ ADuC843  Config SFR  \nSFR Address  AFH  \nPower -On Default  00H  \nBit Addressable  No \n \n Table 14. CFG842 SFR Bit Designations  \nBit No.  Name  Description  \n7 EXSP  Extended SP Enable.  \nWhen set to 1  by the user, the stack rolls over from SPH/SP = 00FFH to 0100H.  \nWhen set to 0  by the user, the stack rolls over from SP = FFH to SP = 00H. \n6 PWPO  PWM Pin Out Selection. \nSet to 1  by the user to select P3.4 and P3.3 as the PWM output pins.  \nSet to 0  by the user to select P2.6 and P2.7 as the PWM output pins.  \n5 DBUF  DAC Output Buffer.  \nSet to 1  by the user to bypass the DAC output buffer.  \nSet to 0  by the user to enable the DAC output buffer.  \n4 EXTCLK  Set by the user to 1  to select an external clock input on P3.4.  \nSet by the user to 0  to use the internal PLL clock.  \n3 RSVD  Reserved. This bit should always contain 0.  \n2 RSVD  Reserved. This bit shoul d always contain 0.  \n1 MSPI  Set to 1  by the user  to move the  SPI functionality of MISO, MOSI, and SCLOCK to P3.3, P3.4, and P3.5, \nrespectively.  \nSet to 0  by the user to leave the SPI functionality as usual on MISO, MOSI, and SCLOCK pins.  \n0 XRAMEN  XRAM Ena ble Bit.  \nWhen set to 1  by the user, the internal XRAM is mapped into the lower 2 kBytes of the external address \nspace.  \nWhen set to 0 by the user, the internal XRAM is not accessible, and the external data memory is \nmapped into the lower 2 kBytes of externa l data memory.  \n \n  \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \n   \n \n   \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 45 of 95 CFG841  ADuC841 Config SFR  \nSFR Address  AFH  \nPower -On Default  10H1 \nBit Addr essable  No \n  \n \n \n \nTable 15. CFG841 SFR Bit Designations  \nBit No.  Name  Description  \n7 EXSP  Extended SP Enable.  \nWhen set to 1  by the user, the stack rolls over from SPH/SP = 00FFH to 0100H.  \nWhen set to 0  by the user, the stack rolls over from SP = FFH to SP = 00H. \n6 PWPO  PWM Pin Out Selection. \nSet to 1  by the user to select P3.4 and P3.3 as the PWM output pins.  \nSet to 0  by the user to select P2.6 and P2.7 as the PWM output pins.  \n5 DBUF  DAC Output Buffer.  \nSet to 1  by the user to byp ass the DAC output buffer.  \nSet to 0  by the user to enable the DAC output buffer.  \n4 EPM2  Flash/EE Controller and PWM Clock Frequency Configuration Bits.  \nFrequency should be configured such that F OSC/Divide Factor = 32 kHz + 50%.  \n3 \n2 EPM1  \nEPM0  EPM2  EPM1  EPM0  Divide Factor  \n0               0               0              32 \n0                0                1           64 \n0                1                 0               128 \n0               1                1               256 \n1         0                0               512 \n1                0              1             1024  \n1 MSPI  Set to 1  by the user  to move the  SPI functionality of MISO, MOSI, and SCLOCK to P3.3, P3.4, and P3.5, \nrespectively.  \nSet to 0  by the user to leave the SPI functionality as usual o n MISO, MOSI, and SCLOCK pins.  \n0 XRAMEN  XRAM Enable Bit.  \nWhen set to 1  by the user, the internal XRAM is mapped into the lower two kBytes of the external address \nspace.  \nWhen set to 0 by the user, the internal XRAM is not accessible, and the external data memory is mapped into \nthe lower two kBytes of external data memory.  \n1 Note that the Flash/EE controller bits EPM2, EPM1, EPM0 are set to their correct values depending on the crystal frequency at  power -up. The user should not modify  \n  these bits so all i nstructions to the CFG841 register should use the ORL, XRL, or ANL instructions. Value of 10H is for 11.0592 MHz crystal.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 46 of 95 USER INTERFACE TO ON -CHIP PERIPHERALS  \nThis section gives a brief overview of the various p eripherals \nalso available on -chip. A summar y of the SFRs used to control \nand configure these peripherals is also given.  \nDAC  \nThe ADuC841/ ADuC842 incorporate two 12 -bit voltage output \nDACs on -chip. Each has a rail -to-rail voltage output buffer \ncapable of driving 10 kΩ/100 pF. Each has two selectable ranges, \n0 V to V REF (the internal band gap 2.5 V reference) and 0 V to \nAV DD. Each can operate in 12 -bit or 8 -bit mode.  Both DACs share a control register, DACCON, and four data \nregisters, DAC1H/L, DAC 0/L. Note that in 12 -bit asynchr onous \nmode, the DAC voltage output is updated as soon as the DACL \ndata SFR has been written; therefore, the DAC data registers \nshould be updated as DACH first, followed by DACL. Note that for correct DAC operation on the 0 V  to V\nREF range, the ADC \nmust be switched on. This results in the DAC using the correct reference value.  \nDACCON  DAC Control Re gister  \nSFR Address  FDH  \nPower -On Default  04H  \nBit Addressable  No \n \nTable 16. DACCON SFR Bit Designat ions  \nBit No.  Name  Description  \n7 MODE  The DAC MODE bit sets the overriding operating mode for both DACs.  \nSet to 1 by the user to select 8 -bit mode (write 8 bits to DACxL SFR). \nSet to 0 by the user to select 12 -bit mode.  \n6 RNG1  DAC1 Range Select Bit.  \nSet to 1 by the user to select the range for DAC1 as 0 V to V DD. \nSet to 0 by the user to select the range for  DAC1 as 0 V to V REF. \n5 RNG0  DAC0 Range Select Bit.  \nSet to 1 by the user to select the range for  DAC0 as 0 V to V DD. \nSet to 0 by the user to select the range for DAC0 as 0 V to V REF. \n4 CLR1  DAC1 Clear Bit. \nSet to 1 by the user to leave the  output of  DAC1 at its normal level.  \nSet to 0  by the user to force the output of DAC1 to 0 V.  \n3 CLR0  DAC0 Clear Bit. \nSet to 1 by the user to leave the  output of  DAC 0 at its normal level.  \nSet to 0  by the user to force the output of DAC0 to 0 V.  \n2 SYNC  DAC0/1 Update Synchronization Bit.  \nWhen set to 1, the DAC outputs update as soon as DACxL SFRs are written. The user can simultaneously update \nboth DACs by first updati ng the DACxL/H SFRs while SYNC is 0. Both DACs then update simultaneously when the \nSYNC bit is set to 1.  \n1 PD1  DAC1 Power -Down Bit.  \nSet to 1 by the user to power on DAC1.  \nSet to 0 by the user to power off DAC1.  \n0 PD0  DAC0 Power -Down Bit.  \nSet to 1 by the user to power on DAC0.  \nSet to 0 by the user to power off DAC0.  \n \nDACxH/L  DAC Data Registers  \nFunction  DAC data registers, written by the user to update the DAC output.  \nSFR Address  DAC0L (DAC0 Data Low Byte) -> F9H; DAC1L (DAC1 Data Low Byte) - > FBH  \nDAC H (DAC0 Data High Byte) -> FAH; DAC1H (DAC1 Data High Byte) - > FCH  \nPower -On Default  00H  All Four Registers. \nBit Addressable  No   All Four Registers. \nThe 12 -bit DAC data should be written into DACxH/L right -justified such that DACxL contains the lower 8 bits, and the lower ni bble of \nDACxH contains the upper 4 bits.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 47 of 95 Using the DAC  \nThe on -chip DAC architecture consists of a resistor string DAC \nfollowed by an output buffer amplifier, the functional equiv alent \nof which is illustrated in Figure 42. Features of this architecture \ninclude inherent guaranteed monotonicity and excellent \ndifferential linearity.  \nOUTPUT\nBUFFER\nHIGH Z\nDISABLE\n(FROM MCU)DAC0\nRR\nR\nR\nRADuC841/ADuC842\nAVDD\nVREF\n03260-0-041 \nFigure 42. Resistor String DAC Functional Equivalent  \nAs shown in Figure 42, the reference source for each DAC is \nuser selectable in software. It can be either AV DD or V REF. In  \n0 V-to-AV DD mode, the DAC output transfer function spans \nfrom 0  V to the voltage at the AV DD pin. In 0 V -to-VREF mode, \nthe DA C ou tput transfer function spans from 0 V to the internal \nVREF or, if an external reference is applied, the voltage at the C REF \npin. The DAC output buffer amplifier features a true rail -to-rail \noutput stage implementation. This means that unloaded, each \noutput is capable of swinging to within less than 100 mV of \nboth AV DD and ground. Moreover, the DAC’s linearity specific a-\ntion (when driving a 10 kΩ  resistive load to ground) is guara nteed \nthrough the full transfer function except Codes 0 to 100, and, in 0 V-to-AVDD mode only, Codes 3995 to 4095. Linea rity degrada -\ntion near ground and V\nDD is caused by saturation of the output \namplifier, and a general  representation of its effects (n eglecting \noffset and gain error) is illustrated in Figure  43. The dotted line \nin Figure  43 indicates the ideal trans fer function, and the so lid \nline repr esents what the transfer function might look like with \nendpoint nonlinearities due to saturation of the output amplifier. Note that Figure  43 represents a transfer fun ction in 0 V -to-V\nDD \nmode only. In 0  V-to-VREF mode (with V REF < V DD), the lower \nnonlinearity would be similar, but the u pper portion of the \ntransfer function would follow the ideal line right to the end (V\nREF in this case, not V DD), showing no signs of en dpoint \nlinearity e rrors.  VDD\nVDD–50mV\nVDD–100mV\n100mV\n50mV\n0mV\n000H FFFH\n03260-0-042\n \nFigure 43. Endpoint Nonlinearities Due to Amplifier Saturation  \n \nSOURCE/SINK CURRENT (mA)5\n0 5 10 15OUTPUT VOLTAGE (V)4\n3\n2\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\n03260-0-043 \nFigure 44. Source and Sink Current Capability with V REF = V DD = 5 V  \n \nSOURCE/SINK CURRENT (mA)4\n0 5 10 15OUTPUT VOLTAGE (V)3\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\n03260-0-044 \nFigure 45. Source and Sink Current Capability with V REF = V DD = 3 V  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 48 of 95 The endpoint nonlinearities illustrated in Figure  43 become \nworse as a function of output loading. Most of the part’s \nspecif ications assume a 10 kΩ resistive load to ground at the \nDAC output. As the o utput is forced to source or sink more \ncurrent, the nonlinear regions at the top or bottom (respe ctively)  \nof Figure  43 become larger. Larger current demands can sig-\nnificantly limit output voltage swing. Figure  44 and Figure  45 \nillustrate this behavior. Note that the upper trace in each of \nthese figures is valid only for an ou tput range selection of  \n0 V-to-AV DD. In 0 V -to-VREF mode, DA C loading does not cause \nhigh- side voltage drops as long as the reference voltage remains \nbelow the upper trace in the co rresponding figure. For example, \nif AV DD = 3 V and V REF = 2.5  V , the high- side voltage is not be \naffected by loads less than 5  mA. But som ewhere around 7 mA, \nthe upper curve in Figure  45 drops below 2.5 V (V REF), indica ting \nthat at these higher cu rrents the output is not capable of \nreaching V REF. \nTo reduce the effects of the saturation of the outpu t amplifier at \nvalues close to ground and to give reduced offset and gain e rrors, \nthe in ternal buffer can be bypassed. This is done by setting the \nDBUF bit in the CFG841/CFG842 register. This allows a full rail-to-rail output from the DAC, which should the n be buffered  \nexternally using a dual- supply op amp in order to get a rail -to-\nrail output. This external buffer should be located as close as phys ically possible to the DAC output pin on the PCB. Note \nthat the unbuffered mode works only in the 0 V to V\nREF range.  To drive significant loads with the DAC outputs, external buffering may be required (even with the internal buffer \nenabled), as illustrated in Figure  46. Table 12 lists some \nrecommended op amps.  \nADuC841/\nADuC842DAC0\nDAC1\n03260-0-045 \nFigure 46. Buffering the DAC Outputs  \nThe DAC output buffer also features a high impedance disable function. In the chip’s default power -on state, both DACs are \ndisabled, and their outputs are in a hig h impedance state (or \nthree -state) where they remain inactive until enabled in \nsoftware. This means that if a zero output is desired during \npower -up or power -down transient conditions, then a pull -\ndown resistor must be added to each DAC output. A ssuming \nthis resistor is in place, the DAC outputs remain at ground \npotential whenever the DAC is disabled.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 49 of 95 ON-CHIP PLL  \nThe ADuC842  and ADuC843 are intended for use with a \n32.768 kHz watch crystal. A PLL locks onto a multiple (512) of \nthis to provide a stable 16.78 MHz clock for the system. The \nADuC841 operates directly from an external crystal. The core \ncan operate at this frequency or at binary submultiples of it to allow power saving in cases where maximum core performance is not r equired. The default core clock is the PLL clock divided \nby 8 or 2.0 97152 MHz. The ADC clocks are also derived from \nthe PLL clock, with the modulator rate being the same as the crystal oscillator frequency. The preceding choice of frequencies ensures that the modulators and the core are synchronous, regardless of the core clock rate. The PLL control register is \nPLLCON.  At 5 V the core clock can be set to a maximum of 16.78 MHz, \nwhile at 3 V the maximum core clock setting is 8.38 MHz. The \nCD bits should not be set to 0 on a 3 V part.  \nNote that on the ADuC841, changing the CD bits in PLLCON \ncauses the core speed to change. The core speed is crystal freq/ \n2\nCD. The other bits in PLLCON are reserv ed in the case of the \nADuC841 and should be written with 0.  \nPLLCON PLL  Control Register  \nSFR Address  D7H  \nPower -On Defau lt 53H  \nBit Addressable  No \n \n \nTable 17. PLLCON SFR Bit Designations  \nBit No.  Name  Description  \n7 OSC_PD  Oscillator Power -Down Bit.  \nSet by the user to halt the 32 kHz oscillator in power -down mode.  \nCleared by the user to enable the 32 kHz oscillator in power -down mode.  \nThis feature allows the TIC to continue counting even in power- down mode.  \n6 LOCK  PLL Lock Bit.  \nThis is a read -only bit.  \nSet automatically at power -on to indicate that the PLL loop is correctly tracking the crystal cl ock. If the external \ncrystal subsequently becomes disconnected, the PLL rail s. \nCleared automatically at power -on to indicate that the PLL is not correctly tracking the crystal clock. This may be due \nto the absence of a cry stal clock or an external crystal at power -on. In this mode, the PLL output can be 16.78 MHz \n±20%.  \n5 ---- Reserved. Should be written with 0. \n4 ---- Reserved. Should be written with 0. \n3 FINT  Fast Interrupt Response Bit.  \nSet by the user enabling the response to any inter rupt to be exec uted at the fastest core clock frequency, regardless \nof the configuration of the CD2 –0 bits (see below). Once user code has returned from an interrupt, the core re sumes \ncode execution at the core clock selected by the CD2 –0 bits.  \nCleared by the user to dis able the fast interrupt r esponse feature.  \n2 CD2  CPU (Core Clock) Divider Bits.  \n1 CD1  This number determines the frequency at which the microcontroller core operates.  \n0 CD0  CD2  \n0 \n0 \n0 \n0 \n1 \n1 \n1 \n1 CD1  \n0 \n0 \n1 \n1 \n0 \n0 \n1 \n1 CD0  \n0 \n1 \n0 \n1 \n0 \n1 \n0 \n1 Core Clock Frequency (MHz) \n16.777216  \n8.388608 \n4.194304 \n2.097152 (Default Core Clock Frequency)  \n1.048576 0.524288 \n0.262144 \n0.131072  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 50 of 95 PULSE -WIDTH MODULATOR (PWM ) \nThe PWM on the ADuC841/ ADuC842/ ADuC843 is a highly \nflexible PWM offering programmable resolution and an input \nclock, and can be co nfigured for any one of six different modes \nof operation. Two of these modes allow the PWM  to be confi g-\nured as a Σ -Δ DAC with up to 16 bits of res olution. A block \ndiagram of the PWM is shown in Figure 47. Note the PWM \nclock’s sources are different for the ADuC841, and are given in \nTable 18. \nCLOCK\nSELECTPROGRAMMABLE\nDIVIDER\nCOMPARE\nMODE PWM0H/L PWM1H/LfVCO\nTO/EXTERNAL PWM CLOCK\nfXTAL /15\nfXTAL\nP2.6\nP2.716-BIT PWM COUNTER\n03260-0-046 \nFigure 47. PWM Block Diagram  \nThe PWM uses five SFRs: the control S FR (PWMCON) and \nfour data SFRs (PWM0H, PWM0L, PWM1H, and PWM1L).  PWMCON, as described in the following sections, controls the \ndifferent modes of operation of the PWM as well as the PWM \nclock frequency.  \nPWM0H/L and PWM1H/L are the data registers that dete r-\nmine the duty cycles of the PWM outputs. The output pins that \nthe PWM uses are determined by the CFG841/CFG842 register, and can be either P2.6 and P2.7 or P3.4 and P3.3. In this section of the data sheet, it is assumed that P2.6 and P2.7 are selected as the PWM outputs.  \nTo use the PWM user software, first write to PWMCON to select the PWM mode of operation and the PWM input clock. \nWriting to PWMCON also resets the PWM counter. In any of the 16 -bit modes of operation (Modes 1, 3, 4, 6), user software \nshoul d write to the PWM0L or PWM1L SFRs first. This value is \nwritten to a hidden SFR. Writing to the PWM0H or PWM1H SFRs updates both the PWMxH and the PWMxL SFRs but does \nnot change the outputs until the end of the PWM cycle in \nprogress. The values written to these 16 -bit registers are then \nused in the next PWM cycle.  \nPWMCON PWM  Control SFR  \nSFR Address  AEH  \nPower -On Default  00H  \nBit Addressable  No \n \nTable 18. PWMCON SFR Bit Designations  \nBit No.  Name  Description  \n7 SNGL  Turns off PMW  output at P2.6 or P3.4, leaving the port pin free for digital I/O.  \n6 MD2  PWM Mode Bits.  \n5 MD1  The MD2/1/0 bits choose the PWM mode as follows:  \n4 MD0  MD2  MD1  MD0  Mode  \n0 0 0 Mode 0: PWM Disabled  \n0 0 1 Mode 1: Single variable resolution PWM on P2.7 or P3.3  \n0 1 0 Mode 2: Twin 8 -bit PWM  \n0 1 1 Mode 3: Twin 16 -bit PWM  \n1 0 0 Mode 4: Dual NRZ 16 -bit ∑-∆ DAC  \n1 0 1 Mode 5: Dual 8 -bit PWM  \n1 1 0 Mode 6: Dual RZ 16 -bit ∑-∆ DAC  \n1 1 1  Reserved  \n3 CDIV1  PWM Clock Divider.  \n2 CDIV0  Scale the clock source for the PWM counter as follows:  \nCDIV1  CDIV0  Description  \n0 0 PWM Counter = Selected Clock/1  \n0 1 PWM Counter = Selected Clock/4  \n1 0 PWM Counter = Selected Clock/16  \n1 1 PWM Counter = Selected Clock/64  \n1 CSEL1  PWM Clock Divider.  \n0 CSEL0  Select the clock source for the PWM as follows:  \nCSEL1  CSEL0  Description  \n0 0 PWM Clock = f XTAL/15, ADuC841  = fOCS/DIVIDE FACTOR /15 (see the CFG841 register)  \n0 1 PWM Clock = f XTAL, ADuC841  = fOCS/DIVIDE FACTOR (see the CFG841 register)  \n1 0 PWM Clock = External input at P3.4/T0  \n1 1 PWM Clock = f VCO = 16.777216 MHz, ADuC841  = fOSC \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 51 of 95 PWM Modes of Operation  \nMode 0: PWM Disabled  \nThe PWM is disabled allowing P2.6 and P2.7 to be used as \nnormal.  \nMode 1: Single Variable Resolution PWM  \nIn Mode 1, both the pulse length and th e cycle time (period) are \nprogrammable in user code, allowing the resolution of the PWM to be variable.  \nPWM1H/L sets the period of the output waveform. Reducing PWM1H/L reduces the resolution of the PWM output but increases the maximum output rate of the P WM. For example, \nsetting PWM1H/L to 65536 gives a 16- bit PWM with a max i-\nmum ou tput rate of 266 Hz (16.777 MHz/65536). Setting \nPWM1H/L to 4096 gives a 12- bit PWM with a maximum \noutput rate of 4096 Hz (16.777 MHz/4096).  \nPWM0H/L sets the duty cycle of the PW M output waveform, as \nshown in Figure  48. \nP2.7PWM COUNTERPWM1H/L\n0PWM0H/L\n03260-0-047\n \nFigure 48. PWM in Mode 1  \nMode 2: Twin 8-Bit PWM  \nIn Mode 2, the duty cycle of the PWM outputs and the resol u-\ntion of the PWM outputs are both progr ammable. The max imum  \nresolution of the PWM output is 8 bits.  \nPWM1L sets the period for both PWM outputs. Typically, this is set to 255 (FFH) to give an 8 -bit PWM, although it is possible \nto reduce this as necessary. A value of 100 could be loaded here to give a percentage PWM, that is , the PWM is acc urate to 1%.  \nThe outputs of the PWM at P2.6 and P2.7 are shown in \nFigure  49. As can be seen, the output of PWM0 (P2.6) goes low \nwhen the PWM counter equals PWM0L. The ou tput of PWM1 \n(P2.7) goes high when the PWM counter equals PWM1H and \ngoes low again when the PWM counter equals PWM0H. Setting \nPWM1H to 0 ensures that both PWM outputs start simultan eously.  P2.7P2.6PWM COUNTER\nPWM1H\n0PWM1L\nPWM0H\nPWM0L\n03260-0-048 \nFigure 49. PWM Mode 2  \nMode 3: Twin 16- Bit PWM  \nIn Mode 3, the PWM counter is fixed to count from 0 to 65536, \ngiving a fixed 16 -bit PWM. Operating from the 16.777 MHz \ncore clock results in a PWM output rate of 256 Hz. The duty \ncycle of the PWM outputs at P2.6 and P2.7 is independently programmable . \nAs shown in Figure  50, while the PWM counter is less than \nPWM0H/L, the output of PWM0 (P2.6) is high. Once the PWM counter equals PWM0H/L, PWM0 (P2.6) goes low and \nremains low until the PWM counter rolls over.  \nSimilarly, while the PWM counter is less than PWM1H/L, the \noutput of PWM1 (P2.7) is high. Once the PWM counter equals \nPWM1H/L, PWM1 (P2.7) goes low and remains low until the PWM counter rolls over.  \nIn this mode, both PWM outputs are synchronized, that is , onc e \nthe PWM counter rolls over to 0, both PWM0 (P2.6) and PWM1 go high.  \nP2.7P2.6PWM COUNTER\nPWM1H/L\n065536\nPWM0H/L\n03260-0-049 \nFigure 50. PWM Mode 3  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 52 of 95 Mode 4: Dual NRZ 16- Bit ∑ -∆ DAC  \nMode 4 provides a high speed PWM output similar to that of a \n∑-∆ DAC. Typically, this mode is used with the PWM clock \nequal to 16.777216 MHz. In this mode, P2.6 and P2.7 are \nupdated every PWM clock (60 ns in the case of 16 MHz). Over \nany 65536 cycles (16- bit PWM) PWM0 (P2.6) is high for \nPWM0H/L cycles and low for (65536 –  PWM0H/L) cycles. \nSimilarly, PWM1 (P2.7) is high for PWM1H/L cycles and low for (65536 –  PWM1H/L) cycles.  \nFor example, if PWM1H is set to 4010H (slightly abo ve one \nquarter of FS), then P2.7 is  typically low for three clocks and \nhigh for one clock (each clock is approximately 60 ns). Over every 65536 clocks, the PWM compensates for the fact that the \noutput should be slightly above one quarter of full scale by \nhaving a high cycle followed by only two low cycles.  \n16.777MHz16-BIT\n60µs\n016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P1.0\nCARRY OUT AT P2.7PWM0H/L = C000H\nPWM1H/L = 4000H001000LATCH0111 110\n03260-0-050 60µs\n \nFigure 51. PWM Mode 4  \nFor faster DAC outputs (at lower resolution), write 0s to the LSBs that are not required. If, for example, only 12 -bit perfor m-\nance is required, write 0s t o the four LSBs. This means that a 12 -bit \naccurate \n∑-∆ DAC output can occur at 4.096 kHz. Sim ilarly \nwriting 0s to the 8 LSBs gives an 8 -bit accurate ∑-∆ DAC output \nat 65 kHz.  \nMode 5: Dual 8-Bit PWM  \nIn Mode 5, the duty cycle of the PWM outputs and the resol u-\ntion of the PWM outputs are individually programmable. The \nmaximum resolution of the PWM output is 8 bits. The ou tput \nresolution is set by the PWM1L and PWM1H SFRs for the P2.6 and P2.7 outputs, respectively. PWM0L and PWM0H sets the duty cycles of the PWM outputs at P2.6 and P2.7, respe ctively. \nBoth PWM s have the same clock source and clock divider.  P2.7P2.6PWM COUNTERS\nPWM1H\n0PWM1L\nPWM0HPWM0L\n03260-0-051\n \nFigure 52. PWM Mode 5  \nMode  6: Dual RZ 16 -Bit ∑ -∆ DAC  \nMode 6 provides a high speed PWM output similar to that of a \n∑-∆ DAC. Mode 6 operates very similarly to Mode 4. Ho wever, \nthe key difference is that Mode 6 provides return -to-zero (RZ) \n∑-∆ DAC output. Mode 4 provides non -return -to-zero ∑-∆ \nDAC outputs. The RZ mode ensures that any difference in the rise and fall times do  not affect the \n∑-∆ DAC INL. Ho wever, the \nRZ mode halves the dynamic range of the ∑-∆ DAC outputs \nfrom 0 V –AV DD down to 0 V –AV DD/2. For best results, this \nmode shou ld be used with a PWM clock divider of 4.  \nIf PWM1H is set to 4010H (slightly above one quarter of FS), \nP2.7 is typically low for three full clocks (3 × 60 ns), high for \nhalf a clock (30 ns), and then low again for half a clock (30  ns) \nbefore re peating its elf. Over every 65536 clocks, the PWM \ncompensate s for the fact that the output should be slightly \nabove one quarter of full scale by leaving the output high for \ntwo half clocks in four. The rate at which this happens depends \non the value and degree of comp ensation required.  \n \n4MHz16-BIT\n240µs016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P2.6\nCARRY OUT AT P2.7PWM0H/L = C000H\nPWM1H/L = 4000H001 000LATCH0111 11 0\n240µs\n0, 3/4, 1/2, 1/4, 0\n03260-0-052 \nFigure 53. PWM Mode 6  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 53 of 95 SERIAL PERIPHERAL IN TERFACE (SPI)  \nThe ADuC841/ ADuC842/ ADuC843 integrate a complete hard -\nware serial peripheral interface on -chip. SPI is an industry -\nstandard synchr onous serial interface that allows 8 bits of data \nto be synchr onously transmitted and received simultaneously, \nthat is , full duplex. Note that the SPI pins are shared with the \nI2C pins. Therefore, the user can enable only one inter face or \nthe other on these pins at any given time (see SPE in Table 19). \nSPI can be operated at the same time as the I2C interface if the \nMSPI bit in CFG841/CFG8842 is set. This moves the SPI \noutputs (MISO, MOSI, and SCLOCK) to P3.3, P3.4, and P3.5, \nrespec tively). The SPI port can be configured for master or slave \noperation and typically consists of four pins, descr ibed in the \nfollowing sections.  \nMISO (Master In, Slave Out Data I/O Pin)  \nThe MISO pin is configured as an input line in master mode and as an output line in slave mode. The MISO line on the master (data in) should be connected to the MISO line in the \nslave device (data out). The data is transferred as byte -wide  \n(8-bit) serial data, MSB first.  \nMOSI (Master Out, Slave In Pin)  \nThe MOSI pin is configured as an output line in master mode and as an input line in slave mode. The MOSI line on the master (data ou t) should be connected to the MOSI line in the \nslave device (data in). The data is transferred as byte -wide (8 -\nbit) serial data, MSB first.  \n \n \n SCLOCK (Serial Clock I/O Pin)  \nThe master serial clock (SCLOCK) is used to synchronize the \ndata being transmitted and received through the MOSI and \nMISO data lines. A single data bit is transmitted and received in each SCLOCK period. Therefore, a byte is transmitted/received \nafter eight SCLOCK periods. The SCLOCK pin is configured as \nan output in master mode and as a n input in slave mode. In \nmaster mode, the bit rate, polarity, and phase of the clock are controlled by the CPOL, CPHA, SPR0, and SPR1 bits in the SPICON SFR (see Table 19). In slave mode, the SPICON \nregister must b e configured with the phase and polarity (CPHA \nand CPOL) of the expected input clock. In both master and slave modes, the data is transmitted on one edge of the SCLOCK signal and sampled on the other. It is important, therefore, that CPHA and CPOL are conf igured the same for \nthe master and slave devices.  \nSS (Slave Select Input Pin)  \nThe SS pin is shared with the ADC5 input. To configure this pin \nas a digital input, the bit must be cleared, for example , CLR \nP1.5. This line is active low. Data is received or transmitted in \nslave mode only when the SS pin is low, allowing the parts to be \nused in single -master, mult islave SPI configurations. If CPHA = \n1, the SS input may be perm anently pulled  low. If CPHA = 0, \nthe SS input must be driven low before the first bit in a byte -\nwide transmis sion or reception and return high again after the \nlast bit in that byte -wide transmi ssion or reception. In SPI slave \nmode, the logic level on the e xternal SS pin can be read via the \nSPR0 bit in the SPICON SFR. The SFR registers, described in \nthe following tables, are used to control the SPI inte rface.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 54 of 95 SPICON SPI Control Register  \nSFR Address  F8H  \nPower -On Default  04H  \nBit Addres sable  Ye s \n  \n \n   \nTable 19. SPICON SFR Bit Designations  \nBit No.  Name  Description  \n7 ISPI SPI Interrupt Bit.  \nSet by the MicroConverter at the end of each SPI transfer.  \nCleared directly by user code or indirectly by reading the SPIDA T SFR.  \n6 WCOL  Write Collision Error Bit. \nSet by the MicroConverter if SPIDAT is written to while an SPI transfer is in progress.  \nCleared by user code.  \n5 SPE SPI Interface Enable Bit.  \nSet by the user to enable the SPI interface.  \nCleared by the user to ena ble the I2C pins, this is not requiredto enable the I2C interface if the MSPI bit is set in \nCFG841/CFG842. In this case, the I2C interface is automatically enabled.  \n4 SPIM  SPI Master/Slave Mode Select Bit. \nSet by the user to enable master mode operation ( SCLOCK is an output).  \nCleared by the user to enable slave mode operation (SCLOCK is an input).  \n3 CPOL1 Clock Polarity Select Bit.  \nSet by the user if SCLOCK idles high.  \nCleared by the user if SCLOCK idles low.  \n2 CPHA1 Clock Phase Select Bit.  \nSet by the us er if leading SCLOCK edge is to transmit data.  \nCleared by the user if trailing SCLOCK edge is to transmit data.  \n1 SPR1  SPI Bit Rate Select Bits.  \n0 SPR0  These bits select the SCLOCK rate (bit rate) in master mode as follows: \n  SPR1  SPR0  Selected Bit Rate  \n  0 0 fOSC/2 \n  0 1 fOSC/4 \n  1 0 fOSC/8 \n  1 1 fOSC/16 \n  In SPI slave mode, that is , SPIM = 0, the logic level on the external SS pin can be read via the SPR0 bit. \n \n1The CPOL and CPHA bits should both contain the same values for mast er and slave devices.  \n \n \nSPIDAT  SPI Data Register  \nFunction  SPIDAT SFR is written by the user to transmit data over the SPI interface or read by user code to \nread data just received by the SPI interface.  \nSFR Address  F7H  \nPower -On Default  00H  \nBit Addressa ble  No \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 55 of 95 Using the SPI Interface  \nDepending on the configuration of the bits in the SPICON SFR \nshown in Table 19, the ADuC841/ ADuC842/ ADuC843 SPI \ninterface transmits or receives data in a number of possible modes. Figure 54 shows all possi ble SPI configurations for the \nparts, and  the timing relationships and synchr onization \nbetween the signals involved. Also shown in this figure is the SPI interrupt bit (ISPI) and how it is triggered at the end of each byte-wide commun ication.  \nSCLOCK\n(CPOL = 1)\nSCLOCK\n(CPOL = 0)\n(CPHA = 1)\n(CPHA = 0)SAMPLE INPUTISPI FLAG\nDATA OUTPUT\nISPI FLAGSAMPLE INPUT\nDATA OUTPUT ?\nMSB BIT 6 BIT 5 ? BIT 4 BIT 3 BIT 2 BIT 1 LSBMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSBSS\n03260-0-053\n \nFigure 54. SPI Timing, All Modes  \nSPI Interface —Master Mode  \nIn master mode, the SCLOCK pin is always an output and generates a burst of eight clocks whenever user code writes to \nthe SPIDAT re gister. The SCLOCK bit rate is determined by \nSPR0 and SPR1 in SPICON. Also note that the \nSS pin is not \nused in master mode. If the parts need to assert the SS pin on an \nexternal slave device, a port digital output pin should be used.  In master mode, a byte transmission or reception is initiated by a write to SP IDAT. Eight clock periods are generated via the \nSCLOCK pin and the SPIDAT byte being transmitted via MOSI. With each SCLOCK period, a data bit is also sampled via MISO. \nAfter eight clocks, the transmitted byte is  completely \ntransmitted, and the input byte wait s in the input shift register. \nThe ISPI flag is  set automat ically, and an interrupt occur s if \nenabled. The value in the shift register is latched into SPIDAT.  \nSPI Interface —Slave Mode  \nIn slave mode, SCLOCK is an input. The SS pin must  also be \ndriven low externally during the byte communication. Tran s-\nmission is also initiated by a write to SPIDAT. In slave mode, a \ndata bit is transmitted via MISO, and a data bit is r eceived via \nMOSI through each input SCLOCK period. After eight clocks,  \nthe transmitted byte is  completely t ransmitted, and the input \nbyte waits in the input shift register. The ISPI flag is  set \nautomatically, and an interrupt occur s if enabled. The value in \nthe shift register is  latched into SPIDAT only when the \ntransmission /reception of a byte has been co mpleted. The end \nof transmission occurs after the eighth clock has been r eceived \nif CPHA = 1, or when SS returns high if CPHA = 0.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 56 of 95 I2C COMPATIBLE INTERFA CE \nThe ADuC841/ ADuC842/ ADuC843 support a fully licensed \nI2C serial interface. The I2C interface is implemented as a full \nhardware slave and software master.  SDATA is the data I/O pin, \nand SCLOCK is the serial clock. These two pins are shared with \nthe MOSI and SCLOCK pins of the on -chip SPI interface. To \nenable the I2C interface, the SPI interface must be turned off \n(see SPE in Table 19) or the SPI interface must be moved to \nP3.3, P3.4, and P3.5 via the CFG841.1/CFG842.1 bit. Applic ation \nNote uC001 describes the operation of this interface as impl e-\nmented  and is available from the MicroConverter website at \nwww.analog.com/microconverter . Three SFRs are used to control the I2C interface and are \ndescribed in the following tables. \nI2CCON  I2C Control Register  \nSFR Address  E8H  \nPower -On Default  00H  \nBit Addressable  Ye s \n \n Table 20. I2CCON SFR Bit Designations, Master Mode  \nBit No.  Name  Description  \n7 MDO  I2C Software Master Data Output Bit (Master Mode Only).  \nThis data bit is used to implement a master I2C transmitter interface in software. Data written to this bit is output on \nthe SDATA pin if the data output enable (MDE) bit is set.  \n6 MDE  I2C Software Master Data Output Enable Bit (Master Mode Only).  \nSet by the user to enable the SDATA pin as an output (Tx).  \nCleared by the user to enable the SDATA  pin as an input (Rx).  \n5 MCO  I2C Software Master Clock Output Bit (Master Mode Only).  \nThis data bit is used to implement a master I2C transmitter interface in software. Data written to this bit is output on \nthe SCLOCK pin.  \n4 MDI  I2C Software Master Data Input Bit (Master Mode Only).  \nThis data bit is used to implement a master I2C receiver interface in software. Data on the SDATA pin is latched into \nthis bit on SCLOCK if the data output enable (MDE) bit is 0.  \n3 I2CM  I2C Master/Slave Mode Bit. \nSet by the u ser to enable I2C software master mode.  \nCleared by the user to enable I2C hardware slave mode.  \n2 ---- Reserved.  \n1 ---- Reserved.  \n0 ---- Reserved.  \n \nTable 21. I2CCON SFR Bit Designations, Slave Mode  \nBit No.  Name  Description  \n7 I2CSI I2C Stop Interrupt Enable Bit.  \nSet by the user to enable I2C stop interrupts. If set, a stop bit that follows a valid start condition generates an \ninterrupt. \nCleared by the user to disable I2C stop interrupts.  \n6 I2CGC  I2C General Call Status Bit.  \nSet by hardware after receiving a general call address.  \nCleared by the user.  \n5 I2CID1  I2C Interrupt Decode Bits.  \n4 I2CID0  Set by hardware to indicate the source of an I2C interrupt.  \n00  Start and Matching Address.  \n01  Repeated Start and Matching Address.  \n10  User Data.  \n11  Stop after a Start and Matching Address.  \n3 I2CM  I2C Master/Slave Mode Bit. \nSet by the user to enable I2C software master mode.  \nCleared by the user to enable I2C hardware slave mode.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 57 of 95 Bit No.  Name  Description  \n2 I2CRS  I2C Reset Bit (Slave Mode Only).  \nSet by the user  to reset the I2C interface.  \nCleared by the user code for normal I2C operation.  \n1 I2CTX  I2C Direction Transfer Bit (Slave Mode Only).  \nSet by the MicroConverter if the interface is transmitting.  \nCleared by the MicroConverter if the interface is receiving.  \n0 I2CI I2C Interrupt Bit (Slave Mode Only).  \nSet by the MicroConverter after a byte has been transmitted or received.  \nCleared automatically when user code reads the I2CDAT SFR (see I2CDAT below).  \n \nI2CADD  I2C Address Register  \nFunction  Holds the first I2C peripheral address for the part. It may be ove rwritten by user code. Application Note \nuC001 at www.analog.com/microconverter describes the format of the I2C standard 7 -bit a ddress in \ndetail.  \nSFR Address  9BH  \nPower -On Default  55H  \nBit Addressable  No \nI2CADD1  I2C Address Register  \nFunction  Holds the second I2C perip heral address for the part. It may be overwritten by user code.  \nSFR Address  91H  \nPower -On Default  7FH  \nBit Addressable  No \nI2CADD2  I2C Address Register  \nFunction  Holds the third I2C periphera l address for the part. It may be overwritten by user code.  \nSFR Address  92H  \nPower -On Default  7FH  \nBit Addressable  No \nI2CADD3  I2C Address Register  \nFunction  Holds the fourth I2C perip heral address for the part. It may be overwritten by user code.  \nSFR Address  93H  \nPower -On Default  7FH  \nBit Addressable  No \nI2CDAT  I2C Data Register  \nFunction  Written by the user to transmit data over the I2C interface or read by user code to read data just \nreceived by the I2C interface. Accessing I2CDAT automat ically cle ars any pending I2C interrupt and \nthe I2CI bit in the I2CCON SFR. User sof tware should access I2CDAT only once per interrupt cycle.  \nSFR Address  9AH  \nPower -On Default  00H  \nBit Addressable  No \n \nThe main features of the MicroConverter I2C interface are  \n• Only two bus lines are required: a serial data line (SDATA) \nand a serial clock line (SCLOCK).  \n• An I2C master can communicate with multiple slave \ndevices. Because each slave device has a unique 7 -bit address, single ma ster/slave relationships can exist at all \ntimes even in a multislave environment.  \n• Ability to respond to four separate addresses when opera ting in slave mode.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 58 of 95 • An I2C slave can respond to repeated start conditions \nwithout a stop bit in between. This allows a master to \nchange direction of tran sfer w ithout giving up the bus. \nNote that the repeated start is detected only when a slave \nhas prev iously been configured as a receiver.  \n• On-chip filtering rejects <50 ns spikes on the SDATA and \nthe SCLOCK lines to preserve data integrity.  \nDVDD\nI2C\nMASTERI2C\nSLAVE 1\nI2C\nSLAVE 2\n03260-0-054 \nFigure 55. Typical I2C System  \nSoftware Master Mode  \nThe ADuC841/ ADuC842/ ADuC843 can be used as I2C mast er \ndevices by configu ring the I2C peripheral in master mode and \nwriting software to output the data bit by bit. This is referred to as a software mas ter. Master mode is enabled by setting the I2CM  \nbit in the I2CCON register.  \nTo transmit data on the SDATA l ine, MDE must be set to e nable \nthe output driver on the SDATA pin. If MDE is set, the SDATA pin is pulled high or low depending on whether the MDO bit is set or cleared. MCO controls the SCLOCK pin and is always configured as an output in master mode. In ma ster mode, the \nSCLOCK pin is pulled high or low depen ding on the whether \nMCO is set or cleared. \nTo receive data, MDE must be cleared to disable the output \ndriver on SDATA. Software must provide the clocks by to ggling \nthe MCO bit and reading the SDATA pin via the MDI bit. If MDE is cleared, MDI can be used to read the SDATA pin. The value of the SDATA pin is latched into MDI on a rising edge of SCLOCK. MDI is set if the SDATA pin was high on the last rising edge of SCLOCK. MDI is clear if the SDATA pin was low \non the last rising edge of SCLOCK. \nSoftware must control MDO, MCO, and MDE appropriately to \ngenerate the start condition, slave address, acknowledge bits, \ndata bytes, and stop conditions. These functions are described \nin Application Note uC001.  \nHardwar e Slave Mode  \nAfter reset, the ADuC841/ ADuC842/ ADuC843 default to \nhardware slave mode. The I2C interface is  enabled by clearing \nthe SPE bit in SPICON (this is not necessary if the MSPI bit is \nset). Slave mode is enabled by clearing the I2CM bit in I2CCON.  \nThe parts have a full hardware slave. In slave mode, the I2C \naddress is stored in the I2CADD register. Data  received or to be \ntransmitted is stored in the I2CDAT register.  Once enabled in I2C slave mode, the slave controller waits for a \nstart condition. If the part detects a valid start condition, fo l-\nlowed by a valid address, followed by the R/ W bit, the I2CI \ninterrupt bit is automatically set by hardware. The I2C peripheral  \ngenerates a core interrupt only if the user has pre- configured \nthe I2C interrupt enable bit in the IEIP2 SFR as well as the \nglobal interrupt bit, EA, in the IE SFR. That is,  \n;Enabling I2C Interrupts for the  ADuC842 \nMOV IEIP2,#01h  ; enable I2C inte rrupt  \nSETB EA  \nAn autoclear of the I2CI bit is implemented on the parts so that this bit is cleared automatically on a read or write access to the \nI2CDAT SFR.  \nMOV I2CDAT, A  ; I2CI auto -cleared  \nMOV A, I2CDAT  ; I2CI auto -cleared  \nIf for any reason the user tries to clear the interrupt more than once,  that is , access the data SFR more than once p er interrupt, \nthen the I\n2C controller halt s. The interface then must  be reset \nusing the I2CRS bit.  \nThe user can choose to poll the I2CI bit or to enable the inter -\nrupt. In the case of the interrupt, the PC counter vectors to \n003BH at the end of each comple te byte. For the first byte, when \nthe user gets to the I2CI ISR, the 7 -bit address and the R/ W bit \nappear in the I2CDAT SFR.  \nThe I2CTX bit contains the R/ W bit sent from the master. If \nI2CTX is set, the master is ready t o receive a byte. Ther efore the \nslave transmit s data by writing to the I2CDAT regi ster. If I2CTX \nis cleared, the master is ready to transmit a byte. There fore the \nslave receives a serial byte. Software can interr ogate the state of \nI2CTX to determine wheth er it must  write to or read from \nI2CDAT.  \nOnce the part has received a valid address, hardware holds \nSCLOCK low until the I2CI bit is cleared by software. This allows the master to wait for the slave to be ready before \ntransmi tting the clocks for the next b yte. \nThe I2CI interrupt bit is set every time a complete data byte  is \nreceived or transmitted, provided it is followed by a valid ACK. \nIf the byte is followed by a NACK, an interrupt is not ge nerated.  \nThe part continues to issue interrupts for each co mplete data \nbyte transferred until a stop condition is received or the inter -\nface is reset.  \nWhen a stop condition is received, the interface resets to a state \nin which it is waiting to be addressed (idle). Similarly, if the interface receives a NACK at the end of a sequence, it also \nreturns to the default idle state. The I2CRS bit can be used to \nreset the I\n2C interface. This bit can be used to force the inter face \nback to the default idle state.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 59 of 95 DUAL DATA POINTER  \nThe ADuC841/ ADuC842/ ADuC843 incorporate two data \npointers. The second data pointer is a shadow data pointer and \nis selected via the data pointer co ntrol S FR (DPCON). DPCON \nalso includes some useful features such as automatic hardware \npost -increment and post -decrement as well as automatic data \npointer toggle. DPCON is described in Table 22. DPCON  Data Pointer Control  SFR  \nSFR Address  A7H  \nPower -On Default  00H  \nBit Addressable  No \n \n \nTable 22. DPCON SFR Bit Designations  \nBit No.  Name  Description  \n7  ---- Reserved.  \n6 DPT  Data Pointer Automatic Toggle Enable.  \nCleared by the user to disable auto swapping of the DPTR.  \nSet in user software to enable automatic toggling of the DPTR after each each MOVX or MOVC instruction.  \n5 DP1m1  Shadow Data Pointer Mode.  \n4 DP1m0  These two bits enable extra modes of the shadow data pointer’s operation, allowing for more compact and more \nefficient code size and execution. \nm1 m0 Behavior of the shadow data pointer.  \n0 0 8052 behavior.  \n0 1 DPTR is post -incremented after a MOVX or a MOVC instruction.  \n1 0 DPTR is post -decremented after a MOVX or MOVC instr uction.  \n1 1 DPTR LSB is toggled after a MOVX or MOVC instruction. (This instruction can be useful for moving \n8-bit blocks to/from 16 -bit devices.)  \n3 DP0m1  Main Data Pointer Mode.  \n2 DP0m0  These two bits enable extra modes of the main data pointer opera tion, allowing for more compact and more efficient \ncode size and execution.  \nm1 m0 Behavior of the main data pointer.  \n0 0 8052 behavior.  \n0 1 DPTR is post -incremented after a MOVX or a MOVC instruction.  \n1 0 DPTR is post -decremented after a MO VX or MOVC instruction.  \n1 1 DPTR LSB is toggled after a MOVX or MOVC instruction.  \n  (This instruction can be useful for moving 8 -bit blocks to/from 16 -bit devices.)  \n1  ---- This bit is not implemented to allow the INC DPCON instruction toggle the da ta pointer without incrementing the rest \nof the SFR.  \n0 DPSEL  Data Pointer Select.  \nCleared by the user to select the main data pointer. This means that the contents of this 24 -bit register are placed into \nthe three SFRs: DPL, DPH, and DPP.  \nSet by the user  to select the shadow data pointer. This means that the contents of a separate 24 -bit register appears in \nthe three SFRs: DPL, DPH, and DPP.  \n \nNote 1: This is the only place where the main and shadow data pointers are distinguished. Everywhere else in thi s data sheet \nwherever the DPTR is mentioned, operation on the active DPTR is implied.  \nNote 2: Only MOVC/MOVX @DPTR instructions are relevant above. MOVC/MOVX PC/@Ri instructions do not cause the \nDPTR to automatically post increment/decrement, and so on.  \nTo illustrate the operation of DPCON, the following code copies \n256 bytes of code memory at address D000H into XRAM \nstarting from Address 0000H.  \n \nMOV DPTR,#0   ; Main DPTR = 0 MOV DPCON,#55H  ; Select shadow DPTR \n; DPTR1 increment mode, \n; DPTR0 increment mode  \n; DPTR auto toggling ON \nMOV DPTR,#0D000H  ; Shadow DPTR = D000H \nMOVELOOP: \nCLR A \nMOVC A,@A+DPTR  ; Get data \n; Post Inc DPTR \n; Swap to Main DPTR (Data) \nMOVX @DPTR,A   ; Put ACC in XRAM ; Increment main DPTR \n; Swap Shadow DPTR (Code) \nMOV A, DPL JNZ MOVELOOP  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 60 of 95 POWER SUPPLY MONITOR  \nAs its name suggests, the power supply monitor, once enabled, \nmonitors the DV DD supply on the ADuC8 41/ADuC842/ \nADuC843. It indicates when any of the supply pins drops below \none of two user selec table voltage trip points, 2.93 V and 3.08 V . \nFor correct operation of the power supply monitor fun ction, \nAV DD must be equal to or greater than  2.7 V . Monitor fun ction \nis co ntrolled via the PSMCON SFR. If enabled via the IEIP2 \nSFR, the mon itor interrupts the core using the PSMI bit in the \nPSMCON SFR. This bit is not cleared until the failing power supply has r eturned above the trip point for at l east 250 ms. \nThis mon itor function allows the user to save working registers \nto avoid possible data loss due to the low supply cond ition, and \nalso ensures that normal code execution does not r esume until a \nsafe supply level has been well established. The supply monitor is also protected against spurious glitches tri ggering the \ninterrupt circuit.  \nNote that the 5 V part has an internal POR trip level of 4.5 V , which means that there are no usable PSM levels on the 5 V \npart. The 3  V part has a POR trip level o f 2.45 V , allo wing all \nPSM trip points to be used.  \n \nPSMCON  Power Supply Monitor  \nControl Register  \nSFR Address  DFH  \nPower -On Default  DEH  \nBit Addressable  No \n \n \nTable 23. PSMCON SFR Bit Designations  \nBit No.  Name  Description  \n7 ---- Reserved.  \n6 CMPD  DV DD Comparator Bit. \nThis is a read -only bit that directly reflects the state of the DV DD comparator.  \nRead 1 indicates that the DV DD supply is above its selected trip point.  \nRead 0 indicates that the DV DD supply is below its selected tri p point.  \n5 PSMI  Power Supply Monitor Interrupt Bit.  \nThis bit is set high by the MicroConverter if either CMPA or CMPD is low, indicating low analog or digital supply. The \nPSMI bit can be used to interrupt the processor. Once CMPD and/or CMPA return (and remain) high, a 250 ms \ncounter is started. When this counter times out, the PSMI interrupt is cleared. PSMI can also be written by the user. \nHowever, if either comparator output is low, it is not possible for the user to clear PSMI.  \n4 TPD1  DV DD Trip Point Selection Bits.  \n3 TPD0  These bits select the DV DD trip point voltage as follows:  \nTPD1  TPD0  Selected DV DD Trip Point (V)  \n0 0 Reserved  \n0 1 3.08  \n1 0 2.93  \n1 1 Reserved  \n2 ---- Reserved.  \n1 ---- Reserved.  \n0 PSMEN  Power Supply Monitor Enable Bit . \nSet to 1 by the user to enable the power supply monitor circuit.  \nCleared to 0 by the user to disable the power supply monitor circuit.  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 61 of 95 WATCHDOG TIMER  \nThe purpose of the watchdog timer is to generate a device reset \nor interrupt within a reasonable amou nt of time if the ADuC841/  \nADuC842/ ADuC843 enter an erroneous state, possibly due to a \nprogramming error or electrical noise. The watchdog function \ncan be disabled by clearing the WDE (watchdog enable) bit in \nthe watchdog control (WDCON) SFR. When enabled, the watchdog circuit generates a system reset or i nterrupt (WDS) if \nthe user program fails to set the watchdog (WDE) bit within a predetermined amount of time (see PRE3 -0 bits in Table 24. \nThe watchdog timer is clocked directly from the 32 kHz external crystal on the ADuC842/ ADuC843. On the ADuC841, the watchdog timer is clocked by an internal R/C oscillator at 32 kHz ±10%. The WDCON SFR can be written only by user \nsoftwar e if the double write sequence described in WDWR \nbelow is initiated on every write access to the WDCON SFR.  \nWDCON Watchdog Timer  Control Register  \nSFR Address  C0H  \nPower -On Default  10H  \nBit Addressable  Ye s \n \n \nTable 24. WDCON SFR Bit Designations  \nBit No.  Name  Description  \n7 PRE3  Watchdog Timer Prescale Bits.  \n6 PRE2  The watchdog timeout period is given by the equation  \n     t WD = (2PRE × (29/fXTAL)) \n5 PRE1  (0 – PRE – 7; f XTAL = 32.768 kHz ( ADuC842/ ADuC843 ), or 32kHz  ± 10%  (ADuC841 )) \n4 PRE0  PRE3  PRE2  PRE1  PRE0  Timeout Period (ms)  Action  \n0 0 0 0 15.6  Reset or Interrupt  \n0 0 0 1 31.2 Reset or Interrupt  \n0 0 1 0 62.5  Reset or Interrupt  \n0 0 1 1 125 Reset or Interrupt  \n0 1 0 0 250 Reset or Interrupt  \n0 1 0 1 500 Reset or Interrupt  \n0 1 1 0 1000  Reset or Interrupt  \n0 1 1 1 2000  Reset or Interrupt  \n1 0 0 0 0.0 Immediate Res et \nPRE3 –0 > 1000  Reserved  \n3 WDIR  Watchdog Interrupt Response Enable Bit.  \nIf this bit is set by the user, the watchdog generates an interrupt response instead of a system reset when the \nwatchdog timeout period has expired. This interrupt is not disabled  by the CLR EA instruction, and it is also a fixed, \nhigh priority interrupt. If the watchdog is not being used to monitor the system, it can be used alternatively as a \ntimer. The prescaler is used to set the timeout period in which an int errupt is generated.  \n2 WDS  Watchdog Status Bit.  \nSet by the watchdog controller to indicate that a watchdog timeout has occurred.  \nCleared by writing a 0 or by an external hardware reset. It is not cleared by a watchdog reset.  \n1  WDE  Watchdog Enable Bit.  \nSet by the user to enable the watchdog and clear its counters. If this bit is not set by the user within the watchdog \ntimeout period, the watchdog generates a reset or interrupt, depending on WDIR.  \nCleared under the following conditions: user writes 0, wat chdog reset (WDIR = 0); hardware reset; PSM interrupt.  \n0  WDWR  Watchdog Write Enable Bit.  \nTo write data to the WDCON SFR involves a double instruction sequence. The WDWR bit must be set and the very \nnext instruction must be a write instruction to the WDCO N SFR.  \nFor example:  \nCLR EA ;disable interrupts while writing  \n  ;to WDT \nSETB WDWR ;allow write to WDCON  \nMOV WDCON,#72H  ;enable WDT for 2.0s timeout  \nSETB EA ;enable interrupts again (if rqd)  \n \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 62 of 95 TIME INTERVAL COUNTE R (TIC)  \nA TIC is provided on -chip for counting longer intervals than \nthe standard 8051 compatible timers are capable of. The TIC is \ncapable of timeout intervals ranging from 1/128 second to 255 \nhours. Furthermore, this counter is clocked by the external 32.768 kHz c rystal rather than by the core clock, and it has the \nability to remain active in power -down mode and time long \npower -down intervals. This has obvious applications for remote \nbattery-powered sensors where regular widely spaced readings \nare required.  \nSix SF Rs are associated with the time interval counter, \nTIMECON  being its control register. Depending on the \nconfiguration of the IT0 and IT1 bits in TIMECON, the \nselected time counter regis ter overflow clocks the interval \ncounter. When this counter is equal to  the time interval value \nloaded in the INT V AL SFR, the TII bit (TIMECON.2) is set and \ngenerates an interrupt if e nabled . If the part is in power -down \nmode, again with TIC inte rrupt enabled, the TII bit wakes up \nthe device and resumes code execution by vect oring d irectly to \nthe TIC interrupt service vector address at 0053H. The TIC -\nrelated SFRs are described in Table 25. Note also that the time \nbased SFRs can be written in itially with the current time; the \nTIC can the n be controlled and accessed by user software. In \neffect, this facilitates the impl ementation of a real -time clock. A \nblock di agram of the TIC is shown in Figure 56. \nThe TIC is clocked directly from a 32 kHz extern al crystal on \nthe ADuC842/ ADuC843 and by the internal 32 kHz ±10% R/C \noscillator on the ADuC841. Due to th is, instructions that access \nthe TIC registers are also  clocked at this speed. The user should \nensure that there is sufficient time between instructions to these \nregisters to allow them to execute correctly.  \n \n \n 8-BIT\nPRESCALER\nHUNDREDTHS COUNTER\nHTHSEC\nSECOND COUNTER\nSEC\nMINUTE COUNTER\nMIN\nHOUR COUNTER\nHOURTIEN\nINTERVAL TIMEOUT\nTIME INTERVAL COUNTER INTERRUPT8-BIT\nINTERVAL COUNTER\nTIMER INTVAL\nINTVALINTERVAL\nTIMEBASE\nSELECTION\nMUXTCEN 32.768kHz EXTERNAL CRYSTAL\nITS0, 1\nCOMPARE\nCOUNT = INTVAL\n03260-0-055\n \nFigure 56. TIC, Si mplified Block Diagram  \n \n \n     \n \n \n \n \n   \n \n \n \n \n     \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 63 of 95  \n \n \n \n Table 25. TIMECON SFR Bit Designations  \nBit No.  Name  Description  \n7 ---- Reserved.  \n6 TFH  Twenty-Four Hour Select Bit. \nSet by the user to enable the hour counter to count from 0 to 23. \nCleared by the user to enable the hour counter to count from 0 to 255.   \n  \n5 ITS1  Interval Timebase Selection Bits.  \n4 ITS0  Written by user to determine th e interval counter update rate.  \n  ITS1  ITS0  Interval Timebase  \n  0 0 1/128 Second  \n  0 1 Seconds  \n  1 0 Minutes  \n  1 1 Hours  \n3 STI Single Time Interval Bit. \nSet by the user to generate a single interval timeout. If set, a timeout clears the TIEN bit.  \nCleared by the user to allow the interval counter to be automatically reloaded and start counting again at each \ninterval timeout.    \n  \n2 TII TIC Interrupt Bit.  \nSet when the 8 -bit interval counter matches the value in the INTVAL SFR.  \nCleared by user softwa re.   \n  \n1 TIEN  Time Interval Enable Bit. \nSet by the user to enable the 8 -bit time interval counter.  \nCleared by the user to disable the interval counter.    \n  \n0 TCEN  Time Clock Enable Bit.  \nSet by the user to enable the time clock to the time interv al counters.  \nCleared by the user to disable the clock to the time interval counters and reset the time interval SFRs to the last \nvalue writ ten to them by the user. The time registers (HTHSEC, SEC, MIN, and HOUR) can be written while TCEN  \nis low.    \n  \n \n \n \n   \n \n   \n TIMECON  TIC Control Re gister  \nSFR Address  A1H  \nPower -On Default  00H  \nBit Addressable  No \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 64 of 95 I N T VA L  User Time Interval Select Re gister  \nFunction  User code writes the required time interval to this register. When the 8 -bit interval counter is equal to the \ntime interval value loaded in the INTV AL SFR, the TII bit (TIMECON.2) is set and g enerates an \ninterrupt if enabled.  \nSFR Address  A6H  \nPower -On Default  00H  \nBit Addressable  No \nValid Value  0 to 255 decimal  \n \nHTHSEC  Hundredths Seconds Time Register  \nFunction  This register is incremented in 1/128 second i ntervals once TCEN in TIMECON is active. The HTHSEC \nSFR counts from 0 to 127 before rolling over to increment the SEC time register.  \nSFR Address  A2H  \nPower -On Default  00H  \nBit Addressable  No \nValid Value  0 to 127 decimal  \n \nSEC  Seconds Time Register  \nFunction  This register is incremen ted in 1 -second intervals once TCEN in TIMECON is active. The SEC SFR \ncounts from 0 to 59 before rolling over to i ncrement the MIN time register.  \nSFR Address  A3H  \nPower -On Default  00H  \nBit Addressable  No \nValid Value  0 to 59 decimal  \n \nMIN  Minutes Time Register  \nFunction  This register is incremented in 1 -minute intervals once TCEN in TIMECON is active. The MIN SFR \ncounts from 0 to 59 before rolling over to incr ement the HOUR time register.  \nSFR Address  A4H  \nPower -On Default  00H  \nBit Addressable  No \nValid Value  0 to 59 decimal  \n \nHOUR  Hours Time Register  \nFunction  This register is in cremented in 1 -hour intervals once TCEN in TIMECON is active. The HOUR SFR \ncounts from 0 to 23 before rolling over to 0.  \nSFR Address  A5H  \nPower -On Default  00H  \nBit Addres sable  No \nValid Value  0 to 23 decimal  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 65 of 95 8052 COMPATIBLE ON -CHIP PERIPHERALS  \nThis section gives a brief overview of the various secondary \nperipheral circuits that are also available to the user on -chip. \nThese remaining functions are mostly 8052 compatible (with a \nfew additional features) and are controlled via standard 8052 SFR bit definitions.  \nParallel I/O  \nThe ADuC841/ ADuC842/ ADuC843 use four input/output \nports to exchange data with external devices. In addition to performing general -purpose I/O, some ports are capable of \nexternal memory oper ations while others are multiplexed with \nalternate functions for the peripheral features on the device. In general, when a perip heral is enabled, that pin may not be used \nas a general -purpose I/O pin.  \nPort 0  \nPort 0 is an 8 -bit open -drain bidirectional I/O port that is \ndirectly controlled via the Port 0 SFR. Port 0 is also t he \nmult iplexed low order address and data bus during accesses to \nexternal program or data memory.  \nFigure 57 shows a typical bit latch and I/O buffer for a Port 0 \nport pin. The bit latch (one bit in the port’s SFR) i s represented \nas a Type D flip -flop, which clocks in a value from the inte rnal \nbus in response to a write to latch signal from the CPU. The Q output of the flip -flop is placed on the internal bus in r esponse \nto a read latch signal from the CPU. The level o f the port pin \nitself is placed on the internal bus in response to a read pin signal from the CPU. Some instructions that read a port activate \nthe read latch signal, and others activate the read pin signal. See \nthe Read -Modify -Write Instructions section fo r details. \nCONTROL\nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCHDVDD ADDR/DATA\nP0.x\nPIN\n03260-0-056\n \nFigure 57. Port 0 Bit Latch and I/O Buffer  \nAs shown in Figure 57, the output drivers of Port 0 pins are \nswitchable to an internal ADDR and ADDR/DATA bus by an \ninternal co ntrol s ignal for use in external memory accesses. \nDuring external memory accesses, the P0 SFR has 1s written to \nit, that is , all of its bit latches become 1. When accessing \nexternal memory, the control signal in Figure 57 goes high, \nenabling push -pull operation of the output pin from the \ninternal address or data bus (ADDR/DATA line). Therefore, no \nexternal pull -ups are required on Port 0 for it to access external \nmemory.  In general -purpose I/O port mode, Port 0 pins that h ave 1s wri t-\nten to them via the Port 0 SFR are configured as open -drain and \ntherefore float. In this state, Port 0 pins can be used as high impedance inputs. This is represented in Figure 57 by the NAND  \ngate whose o utput remains high as long as the control signal is \nlow, thereby disabling the top FET. Exte rnal pull- up resistors are \ntherefore re quired when Port 0 pins are used as general -purpose \noutputs. Port 0 pins with 0s written to them drive a logic low output vol tage (V\nOL) and are c apable of sinking 1.6 mA. \nPort 1  \nPort 1 is also an 8 -bit port directly controlled via the P1 SFR. \nPort 1 digital output capability is not supported on this device. Port 1 pins can be configured as digital inputs or analog inputs. By (po wer-on) default, these pins are configured as analog \ninputs, that is , 1 written in the corresponding Port 1 register bit. \nTo configure any of these pins as digital inputs, the user should write a 0 to these port bits to configure the corresponding pin as a high impedance digital input. These pins also have various \nsecondary functions as described in Table 26. \nTable 26. Port 1 Alternate Pin Functions  \nPin No.  Alternate Function  \nP1.0 T2 (Timer/C ounter 2 External Input)  \nP1.1  T2EX (Timer/Counter 2 Capture/Reload Trigger)  \nP1.5 SS (Slave Select for the SPI Interface)  \n \nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCH\nP1.x\nPINTO ADC\n03260-0-057 \nFigure 58. Port 1 Bit Latch and I/O Buffer  \nPort 2  \nPort 2 is a bidirectional port with internal pull- up resistors \ndirectly controlled via the P2 SFR. Port 2 also emits the high -\norder address bytes during fetches from external program memory, and middle and high order address bytes during accesses to the 24 -bit external data memory space.  \nAs shown in Figure  59, the output drivers of Port 2 are switch -\nable to an internal ADDR and ADDR/DATA bus by an internal control signal for use in external memory accesses (as for Port  0). In external memory addressing  mode (CO NTROL = 1), \nthe port pins feature push -pull operation controlled by the \ninternal address bus (ADDR line). However, unlike the P0 SFR \nduring external memory accesses, the P2 SFR remains u nchanged.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 66 of 95 In general -purpose I/O port mode, Port 2 pins that have 1s \nwritten to them are pulled high by the internal pull -ups \n(Figure  60) and, in that state, can be used as inputs. As inputs, \nPort 2 pins being pulled externally low source current b ecause \nof the internal pull -up resistors. Port 2 pins with 0s wri tten to \nthem drive a logic low output voltage (V OL) and are capable of \nsinking 1.6 mA.  \nP2.6 and P2.7 can also be used as PWM outputs. When they are \nselected as the PWM outputs via the CFG841/CFG842 SFR, the \nPWM outputs overwrite anything written to P2.6 or P2.7.  \nCONTROLREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nLATCHDVDDADDR\nP2.x\nPINDVDD\nINTERNAL\nPULL-UP *\n*SEE FOLLOWING FIGURE FOR\nDETAILS OF INTERNAL PULL-UPQ\n03260-0-058\n \nFigure 59. Port 2 Bit Latch and I/O Buffer  \n \nFROM\nPORT\nLATCH2 CLK\nDELAYQ1DVDD\nQ2DVDD\nQ3DVDD\nPx.x\nPINQ4Q\n03260-0-059 \nFigure 60. Internal Pull- Up Configuration  \nPort 3  \nPort 3 is a bidirectional port with internal pull -ups directly \ncontrolled via the P3 SFR. Port 3 pins that have 1s written to \nthem are pulled high by the internal pull -ups and, in that state, \ncan be used as inputs. As inputs, Port 3 pins being pulled externally low source current because of the internal pull -ups. \nPort 3  pins with 0s written to them drive a logic low output \nvoltage (V\nOL) and are capable of sinking 4 mA. Port 3 pins also \nhave various secondary functions as described in Table 27. The \nalternate functions of Port 3 pin s can be activated only if the \ncorresponding bit latch in the P3 SFR contains a 1. Othe rwise, \nthe port pin is stuck at 0.  \nTable 27. Port 3 Alternate Pin Functions  \nPin No.  Alternate Function  \nP3.0  RxD (UART Input Pin) (or Serial Data  I/O in Mode 0)  \nP3.1 TxD (UART Output Pin) (or Serial Clock Output in Mode 0)  \nP3.2  INT0  (External Interrupt 0)  \nP3.3 INT1  (External Interrupt 1)/PWM 1/MISO  \nP3.4  T0 (Timer/Counter 0 External Input)  \nPWM External Clock/P WM 0  \nP3.5 T1 (Timer/Counter 1 External Input)  \nP3.6  WR (External Data Memory Write Strobe)  \nP3.7 RD (External Data Memory Read Strobe)  P3.3 and P3.4 can also be used as PWM outputs. When they are \nselected as the PWM ou tputs via the CFG841/CFG842 SFR, the \nPWM outputs overwrite anything written to P3.4 or P3.3.  \nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nLATCHDVDD\nP3.x\nPININTERNAL\nPULL-UP *\n*SEE PREVIOUS FIGURE\nFOR DETAILS OF\nINTERNAL PULL-UPALTERNATE\nOUTPUT\nFUNCTION\nALTERNATE\nINPUT\nFUNCTIONQ\n03260-0-060\n \nFigure 61. Port 3 Bit Latch and I/O Buffer  \n \nAdditional Digital I/O  \nIn addition to the port pins, the dedicated SPI/I2C pins (SCLOCK  \nand SDATA/MOSI) also feature both input and ou tput func -\ntions. Their equivalent I/O architectures are illustrated in Figure  62 and Figure  64, respectively, for SPI operation and in \nFigure  63 and Figure 65 for I\n2C operation. Notice that in I2C \nmode (SPE = 0), the strong pull -up FET (Q1) is disabled, \nleaving only a weak pull -up (Q2) present. By contras t, in SPI \nmode (SPE = 1) the strong pull -up FET (Q1) is controlled \ndirectly by SPI hardware, giving the pin push- pull capability.  \nIn I2C mode (SPE = 0), two pull -down FETs (Q3 and Q4) \noperate in parallel to provide an extra 60% or 70% of cu rrent \nsinking ca pability. In SPI mode (SPE = 1), however, only one of \nthe pull -down FETs (Q3) operates on each pin, resulting in sink \ncapabilities ident ical to that of Port 0 and Port 2 pins. On the \ninput path of SCLOCK, notice that a Schmitt trigger conditions \nthe signal  going to the SPI hardware to prevent false triggers \n(double triggers) on slow incoming edges. For inco ming signals \nfrom the SCLOCK and SDATA pins going to I2C hardware, a \nfilter cond itions the signals to reject glitches of up to 50 ns in \nduration.  \nNotice also that direct access to the SCLOCK and SDATA/  \nMOSI pins is afforded through the SFR interface in I2C master \nmode. Ther efore, if you are not using the SPI or I2C functions, \nyou can use these two pins to give additional high current \ndigital outputs.  \nQ3SCHMITT\nTRIGGERQ1\nQ2(OFF)DVDD\nQ4 (OFF)SCLOCK\nPINSPE = 1 (SPI ENABLE)\nHARDWARE SPI\n(MASTER/SLAVE)\n03260-0-061 \nFigure 62. SCLOCK Pin I/O Functional Equivalent in SPI Mode \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 67 of 95 MOSI is shared with P3.3 and, as such, has the same \nconfigur ation as the one shown in Figure  61. \nMCO\nI2CMQ3Q4SCLOCK\nPINQ2Q1\n(OFF)DVDD\n50ns GLITCH\nREJECTION FILTERSPE = 0 (I 2C ENABLE)\nHARDWARE I 2C\n(SLAVE ONLY)\nSFR\nBITS\n03260-0-062 \nFigure 63. SCLOCK Pin I/O Functional Equivalent in I2C Mode  \n \nQ3Q1\nQ2(OFF)DVDD\nQ4 (OFF)SDATA/\nMOSI\nPINSPE = 1 (SPI ENABLE)\nHARDWARE SPI\n(MASTER/SLAVE)\n03260-0-097 \nFigure 64. SDATA/MOSI Pin I/O Functional Equivalent in SPI Mode \n \nQ3Q4Q2Q1DVDD\nMCOSDATA/\nMOSI\nPIN(OFF)\n50ns GLITCH\nREJECTION FILTERSPE = 0 (I 2C ENABLE)\nHARDWARE I 2C\n(SLAVE ONLY)SFR\nBITS\nMCI\nMDE\nI2CM\n03260-0-063\n \nFigure 65. SDATA/MOSI Pin I/O Functional Equivalent in I2C Mode  \n Read -Modify -Write I nstructions  \nSome 8051 instructions that read a port read the latch while \nothers read the pin. The instructions that read the latch rather than the pins are the ones that read a value, possibly change it, and then rewrite it to the latch. These are called r ead- modify -\nwrite instructions, which are listed below. When the destination operand is a port or a port bit, these instructions read the latch rather than the pin.  \nTable 28. Read -Write -Modify Instructions  \nInstruction  Description  \nANL  Logical AND, for example , ANL P1, A  \nORL  (Logical OR,  for example,  ORL P2, A  \nXRL  (Logical EX -OR, for example , XRL P3, A  \nJBC  Jump if Bit = 1 and clear bit, for example, JBC \nP1.1, LABEL  \nCPL  Complement bit, for example , CPL P3.0  \nINC  Increment, for example , INC P2  \nDEC  Decrement, for example , DEC P2  \nDJNZ  Decrement and Jump if Not Zero, for example , \nDJNZ P3, L ABEL \nMOV PX.Y, C1 Move Carry to Bit Y of Port X  \nCLR PX.Y1  Clear Bit Y of Port X  \nSETB PX.Y1  Set Bit Y of Port X  \n \n1 These instructions r ead the port byte (all 8 bits), modify the a ddressed bit,  \n  and then write the new byte back to the latch.  \n \nRead -modify -write instructions are directed to the latch rather \nthan to the pin to avoid a possible misinterpret ation of the \nvoltage level of a pin . For example, a port pin might be used to \ndrive the base of a transistor. When 1 is written to the bit, the \ntransistor is turned on. If the CPU then reads the same port bit at the pin rather than the latch, it reads the base voltage of the transistor and interprets it as a Logic 0. Rea ding the latch rather \nthan the pin returns the correct value of  1. \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 68 of 95 Timers/Counters  \nThe ADuC841 /ADuC842/ ADuC843 have three 16 -bit timer/ \ncounters: Timer 0, Timer  1, and Timer 2. The timer/counter \nhardware is included on -chip to relieve the processor core of the \noverhead inherent in implementing timer/counter functionality \nin sof tware. Each timer/counter consists of two 8 -bit registers: \nTHx and TLx (x = 0, 1, and 2). All three can be configured to \noperate either as ti mers or as event counters.  \nIn timer function, the TLx register is incremented every \nmachine cycle. Thus, one can thin k of it as counting machine \ncycles. Since a m achine cycle on a single -cycle core consists of \none core clock period, the maximum count rate is the core clock \nfrequency.  \nIn counter function, the TLx register is incremented by a 1 -to-0 \ntransition at its corre sponding external input pin: T0, T1, or T2. \nWhen the samples show a high in one cycle and a low in the next cycle, the count is incremented. Since it takes two machine cycles (two core clock periods) to recognize a 1 -to-0 transition, \nthe maximum count rate  is half the core clock fr equency.  There are no restrictions on the duty cycle of the external input signal, but to ensure that a given level is sampled at least once before it changes, it must be held for a minimum of one full machine cycle. User configur ation and control of all timer \noperating modes is achieved via three SFRs:  \nTMOD, TCON  Control and configuration for \nTimers 0 and 1.  \nT2CON  Control and configuration for \nTimer 2.  \nTMOD  Timer/Counter 0 and 1 Mode Register  \nSFR Address  89H  \nPower -On Defau lt  00H  \nBit Addressable  No \n \n \n \n \nTable 29. TMOD SFR Bit Designations  \n Bit No.  Name  Description  \n7 Gate  Timer 1 Gating Control. \nSet by software to enable Timer/Counter 1 only while the INT1  pin is high and the TR1 control bit is set.  \nCleared by software to enable Timer 1 whenever the TR1 control bit is set.  \n6 C/T Timer 1 Timer or Counter Select Bit.  \nSet by software to select counter operation (input from T1 pin).  \nCleared by software to select timer operation (input  from internal system clock).  \n5 M1 Timer 1 Mode Select Bit 1 (Used with M0 Bit).  \n4 \n  \n  M0 Timer 1 Mode Select Bit 0.  \nM1 M0  \n0 0 TH1 operates as an 8 -bit timer/counter. TL1 serves as 5 -bit prescaler.  \n0 1 16-Bit Timer/Counter. TH1 and TL1 are casc aded; there is no prescaler.  \n1 0 8-Bit Autoreload Timer/Counter. TH1 holds a value that is to be reloaded into TL1 each time it \noverflows.  \n1 1 Timer/Counter 1 Stopped.  \n3 Gate  Timer 0 Gating Control.  \nSet by software to enable Timer/Counter 0 only whi le the INT0  pin is high and the TR0 control bit is set.  \nCleared by software to enable Timer 0 whenever the TR0 control bit is set.  \n2 C/T Timer 0 Timer or Counter Select Bit.  \nSet by software to select counter operation (input from T0 pin) . \nCleared by software to select timer operation (input from internal system clock).  \n1 M1 Timer 0 Mode Select Bit 1.  \n0  M0  Timer 0 Mode Select Bit 0.  \nM1 M0  \n0 0 TH0 operates as an 8 -bit timer/counter. TL0 serves as a 5 -bit prescaler.  \n0 1 16-Bit Timer/Counter. TH0 and TL0 are cascaded; there is no prescaler.  \n1 0 8-Bit Autoreload Timer/Counter. TH0 holds a value that is to be reloaded into TL0 each time it \noverflows.  \n1 1 TL0 is an 8-bit timer/counter controlled by the standard Timer 0 control  bits.  \nTH0 is an 8-bit timer only, controlled by Timer 1 control bits.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 69 of 95  \nTCON  Timer/Counter 0 and 1  \nControl Re gister  \nSFR Address  88H  \nPower -On Default  00H  \nBit Addressable  Ye s \n \nTable 30. TCON SFR Bit Designations  \nBit No.  Name  Description  \n7 TF1 Timer 1 Overflow Flag.  \nSet by hardware on a Timer/Counter 1 overflow.  \nCleared by hardware when the program counter (PC) vectors to the interrupt service routine.  \n6  TR1 Timer 1 Run Control Bit. \nSet by the user to turn on Timer/ Counter 1. \nCleared by the user to turn off Timer/Counter 1.  \n5 TF0 Timer 0 Overflow Flag. \nSet by hardware on a Timer/Counter 0 overflow.  \nCleared by hardware when the PC vectors to the interrupt service routine.  \n4 TR0 Timer 0 Run Control Bi t. \nSet by the user to turn on Timer/Counter 0.  \nCleared by the user to turn off Timer/Counter 0.  \n3 IE11 External Interrupt 1 ( INT1 ) Flag.  \nSet by hardware by a falling edge or by a zero level being applied to the external interrupt pin, INT1 , depending on \nthe state of Bit IT1.  \nCleared by hardware when the PC vectors to the interrupt service routine only if the interrupt was transition -\nactivated. If level -activated, the external requesting source controls the request flag , rather than the on -chip \nhardware.  \n2 IT11 External Interrupt 1 (IE1) Trigger Type.  \nSet by software to specify edge- sensitive detection, that is , 1-to-0 transition.  \nCleared by software to specify level -sensitive detection, that is , zero level.  \n1 IE01 External Interrupt 0 ( INT0 ) Flag.  \nSet by hardware by a falling edge or by a zero level being applied to external interrupt pin INT0 , depending on the \nstate of Bit IT0.  \nCleared by hardware when the PC vectors to th e interrupt service routine only if the interrupt was transition -\nactivated. If level -activated, the external requesting source controls the request flag, rather than the on -chip \nhardware.  \n0 IT01 External Interrupt 0 (IE0) Trigger Type.  \nSet by software to  specify edge- sensitive detection, that is ,1-to-0 transition.  \nCleared by software to spec ify level -sensitive detection, that is , zero level.  \n \n1These bits are not used in the control of Timer/Counter 0 and 1, but are used instead in the control and monito ring of the external INT0  and INT1  interrupt pins.  \n \n \nTimer/Counter 0 and 1 Data Registers  \nEach timer consists of two 8 -bit registers. These can be used as \nindependent registers or combined into a single 16 -bit register  \ndepen ding on the timer mode configuration.  \n \n TH0 and TL0  \nTimer 0 high byte and low byte.  \nSFR Address = 8CH 8AH, respectively.  \nTH1 and TL1  \nTimer 1 high byte and low byte.  \nSFR Address = 8DH, 8BH, respe ctively.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 70 of 95 TIMER/COUNTER 0 AND 1 OPERATING MODES  \nThe foll owing sections describe the operating modes for \nTimer/Counters 0 and 1. Unless otherwise noted, assume that \nthese modes of operation are the same for both Timer 0 and \nTimer 1.  \nMode 0 (13 -Bit Timer/Counter)  \nMode 0 configures an 8 -bit timer/counter. Figure 66 shows \nMode 0 operation. Note that the divide -by-12 prescaler is not \npresent on the single- cycle core.  \nCORE\nCLK\nP3.4/T0\nP3.2/INT0TR0TF0TH0\n(8 BITS)INTERRUPTTl0\n(5 BITS)\nCONTROL\nGATEC/T = 1C/T = 0\n03260-0-064 \nFigure 66. Timer/Counter 0, Mode 0  \nIn this mode, the timer register is configured as  a 13- bit regi ster. \nAs the count rolls over from all 1s to all 0s, it sets the timer overflow flag, TF0. TF0 can then be used to request an interrupt.  \nThe counted input is enabled to the timer when TR0  = 1 and \neither Gate = 0 or \nINT0  = 1. Setting Gate = 1 allows the timer to \nbe controlled by external input INT0  to facilitate pulse -width \nmeasurements. TR0 is a control bit in the special function register TCON; Gate is in TMOD. The 13 -bit register consists of \nall 8 bits of TH0 and the lower five bits of TL0. The upper 3 bits of TL0 are indeterminate and should be ignored. Setting the run flag (TR0) does not clear the registers.  \nMode 1 (16 -Bit Timer/Counter)  \nMode 1 is the same as Mode 0, except that the Mode 1 timer register is running with all 16 bits. Mode 1 is shown in \nFigure  67. \nCORE\nCLK\nCONTROLP3.4/T0\nGATETR0TF0TL0\n(8 BITS)TH0\n(8 BITS)INTERRUPT\nP3.2/ INT0C/T = 0\nC/T = 1\n03260-0-066 \nFigure 67. Timer/Counter 0, Mode 1  \n Mode 2 (8 -Bit Timer/Counter with Autoreload)  \nMode 2 configures the timer register as an 8 -bit counter (TL0) \nwith automatic reload, as shown in Figure 68. Overflow from TL0  \nnot only sets TF0, but also reloads TL0 with the contents of TH0,  \nwhich is preset by software. The reload leaves TH0 u nchanged.  \nCONTROLTF0TL0\n(8 BITS)INTERRUPT\nRELOAD\nTH0\n(8 BITS)CORE\nCLK\nP3.4/T0\nGATETR0\nP3.2/ INT0C/T = 0\nC/T = 1\n03260-0-067\n \nFigure 68. Timer/Counter 0, Mode 2  \n \nMode 3 (Two 8 -Bit Timer/Counters)  \nMode 3 has different effects on Timer 0 and Timer 1. Timer 1 in \nMode 3 simply holds its count. The effect is the same as setting \nTR1 = 0. Timer 0 in Mode 3 establishes  TL0 and TH0 as two \nseparate counters. This configuration is shown in Figure  69. \nTL0 uses the Timer 0 control bits: C/ T, Gate, TR0, INT0 , and \nTF0. TH0 is locked into a timer funct ion (counting m achine \ncycles) and takes over the use of TR1 and TF1 from Timer 1. Thus, TH0 now controls the Timer 1 inte rrupt. Mode 3 is \nprovided for applications requiring an extra 8 -bit timer or \ncounter.  \nWhen Timer 0 is in Mode 3, Timer 1 can be turned  on and off \nby switching it out of and into its own Mode 3, or it can still be used by the serial interface as a baud rate generator. In fact, it can be used in any application not requiring an interrupt from Timer 1 itself.  \nCONTROLTF0TL0\n(8 BITS)INTERRUPTCORE\nCLK\nP3.4/T0\nGATETR0\nTF1TH0\n(8 BITS)INTERRUPTCORE\nCLK/12\nTR1P3.2/ INT0C/T = 0\nC/T = 1\n03260-0-068\n \nFigure 69. Timer/Counter 0, Mode 3  \n \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 71 of 95   \n  \n \n \nTable 31. T2CON SFR Bit Designations  \nBit No.  Name  Description  \n7 TF2 Timer 2 Overflow Fla g. \nSet by hardware on a Timer 2 overflow. TF2 cannot be set when either RCLK = 1 or TCLK = 1.  \nCleared by user software.  \n6 EXF2  Timer 2 External Flag. \nSet by hardware when either a capture or reload is caused by a negative transition on T2EX and EXEN2 = 1. \nCleared by user software.  \n5 RCLK  Receive Clock Enable Bit. \nSet by the user to enable the serial port to use Timer 2 overflow pulses for its receive clock in serial port Modes 1 and 3.  \nCleared by the user to enable Timer 1 overflow to be used for the rece ive clock.  \n4 TCLK  Transmit Clock Enable Bit.  \nSet by the user to enable the serial port to use Timer 2 overflow  pulses for its transmit clock in serial port Modes 1 and 3.  \nCleared by the user to enable Timer 1 overflow to be used for the transmit clock.  \n3  EXEN2  Timer 2 External Enable Flag. Set by the user to enable a capture or reload to occur as a result of a negative transition on T2EX if Timer 2 is not being \nused to clock the serial port. \nCleared by the user for Timer 2 to ignore events at T2EX.  \n2  TR2 Timer 2 Start/Stop Control Bit. \nSet by the user to start Timer 2. \nCleared by the user to stop Timer 2.  \n1  CNT2  Timer 2 Timer or Counter Function Select Bit.  \nSet by the user to select counter function (input from external T2 pin).  \nCleared by the user to  select timer function (input from on -chip core clock).  \n0  CAP2  Timer 2 Capture/Reload Select Bit.  \nSet by the user to enable captures on negative transitions at T2EX if EXEN2 = 1.  \nCleared by the user to enable autoreloads with Timer 2 overflows or negativ e transitions at T2EX when EXEN2 = 1. \nWhen either RCLK = 1 or TCLK = 1, this bit is ignored and the timer is forced to autoreload on Timer 2 overflow.  \n \nTimer/Counter 2 Data Registers  \nTimer/Counter 2 also has two pairs of 8 -bit data registers \nassociated w ith it. These are used as both timer data registers \nand as timer ca pture/reload registers.  \nTH2 and TL2  \nTimer 2, data high byte and low byte.  \nSFR Address = CDH, CCH, respectively.  \nRCAP2H and RCAP2L  \nTimer 2, capture/reload byte and low byte.  \nSFR Address = CB H, CAH, respectively.  T2CON  Timer/Counter 2 Control Regi ster \nSFR Address  C8H  \nPower -On Default  00H  \nBit Addressable  Ye s \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 72 of 95 TIMER/COUNTER OPERATING MODES  \nThe following sections describe the operating modes for \nTimer/Counter 2. The operating modes are selected by bits in \nthe T2CON SFR, as shown in Table 32. \nTable 32. T2CON Operating Modes  \nRCLK (or) TCLK  CAP2  TR2  Mode  \n0 0 1 16-Bit Autoreload  \n0 1 1 16-Bit Capture  \n1 X 1 Baud Rate  \nX X 0 OFF  \n \n16- Bit Autoreload Mode  \nAutoreload mode has two options that are selected by Bit EXEN2  \nin T2CON. If EXEN 2 = 0, then when Timer 2 rolls over, it not \nonly sets TF2 but also causes the Timer 2 reg isters to be  reloaded \nwith the 16 -bit value in registers RCAP2L and RCAP2H, which \nare pre set by software. If EXEN2 = 1, then Timer 2 still  performs \nthe above, but with  the added fe ature that a 1 -to-0 transition at \nexternal input T2EX also trigger s the 16 -bit reload and set \nEXF2.  Autoreload mode is illustrated in Figure 70. 16- Bit Capture Mode  \nCapture mode also has two options tha t are selected by bit \nEXEN2 in T2CON. If EXEN2 = 0, then Timer 2 is a 16 -bit \ntimer or counter that, upon overflowing, sets Bit TF2, the Timer \n2 overflow bit, which can be used to generate an i nterrupt. If \nEXEN2 = 1, then Timer 2 still performs the above, b ut a l -to-0 \ntransition on external input T2EX causes the cu rrent value in \nthe Timer 2 registers, TL2 and TH2, to be captured into registers RCAP2L and RCAP2H, respectively. In addition, the \ntrans ition at T2EX causes Bit EXF2 in T2CON to be set, and \nEXF2, like TF2, can generate an interrupt. Capture mode is \nillustrated in Figure 71. The baud rate generator mode is \nselected by RCLK = 1 and/or TCLK = 1.  \nIn either case, if Timer 2 is being used to generate the baud rate,  \nthe TF2 interrupt flag does not occur. Therefore, Timer 2 \ninterrupts does  not occur, so they do not have to be disabled. In \nthis mode, the EXF2 flag, however, can still cause interrupts, \nwhich can be used as a third external interrupt. Baud rate generatio n is described as part of the UART serial port \noperation in the fo llowing section.  \nCORE\nCLK*\nT2\nPINC/T2 = 0\nC/T2 = 1\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nTF2\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2H\n*CORE CLK IS DEFINED BY THE CD BITS IN PLLCON\n03260-0-069\n \nFigure 70. Timer/Counter 2, 16 -Bit Autoreload Mode  \n \nTF2CORE\nCLK *\nT2\nPIN\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nCAPTURE\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2HC/T2 = 0\nC/T2 = 1\n*CORE CLK IS DEFINED BY THE CD BITS IN PLLCON\n03260-0-070 \nFigure 71. Timer/Counter 2, 16 -Bit Capture Mode  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 73 of 95 UART SERIAL INTER FACE  \nThe serial port is full -duplex, meaning it can transmit and \nreceive simultaneously. It is also receive -buffered, meaning it \ncan begin receiving a second byte before a previously r eceived \nbyte has been read from the receive register. However, if the fi rst \nbyte still has not been read by the time reception of the second \nbyte is complete, the first byte is lost. The physical inte rface to \nthe serial data network is via Pins RxD(P3.0) and TxD(P3.1), while the SFR interface to the UART is comprised of SBUF a nd \nSCON, as described below.  \n SBUF  \nBoth the serial port receive and transmit registers are accessed \nthrough the SBUF SFR (SFR address = 99H). Writing to SBUF \nloads the transmit register, and reading SBUF accesses a \nphys ically separate receive register.  \nSCO N UART  Serial Port Control Register  \nSFR Address  98H  \nPower -On Default   00H  \nBit Addressable  Ye s \n \nTable 33. SCON SFR Bit Designations  \nBit No.  Name  Description  \n7 SM0  UART Serial Mode Select Bits.  \n6 SM1  These bits select the s erial port operating mode as follows:  \nSM0  SM1  Selected Operating Mode.  \n0 0 Mode 0: Shift Register, fixed baud rate (Core_Clk/2).  \n0 1 Mode 1: 8 -bit UART, variable baud rate.  \n1 0 Mode 2: 9 -bit UART, fixed baud rate (Core_Clk/32) or (Core_Clk/16).  \n1 1 Mode 3: 9 -bit UART, variable baud rate.  \n5 SM2  Multiprocessor Communication Enable Bit.  \nEnables multiprocessor communication in Modes 2 and 3.  \nIn Mode 0, SM2 must be cleared.  \nIn Mode 1, if SM2 is set, RI is not activated if a valid stop bit was no t received. If SM2 is cleared, RI is set as soon as the \nbyte of data has been received.  \nIn Modes 2 or 3, if SM2 is set, RI is not activated if the received 9th data bit in RB8 is 0.  \nIf SM2 is cleared, RI is set as soon as the byte of data has been receiv ed. \n4 REN  Serial Port Receive Enable Bit. \nSet by user software to enable serial port reception.  \nCleared by user software to disable serial port reception.  \n3 TB8 Serial Port Transmit (Bit 9). \nThe data loaded into TB8 is the 9th data bit transmitted in Mod es 2 and 3.  \n2 RB8 Serial Port Receiver Bit 9. The 9th data bit received in Modes 2 and 3 is latched into RB8. For Mode 1, the stop bit is latched into RB8. \n1 TI Serial Port Transmit Interrupt Flag.  \nSet by hardware at the end of the 8th bit in Mode 0, or at the beginning of the stop bit in Modes 1, 2, and 3.  \nTI must be cleared by user software.  \n0 RI Serial Port Receive Interrupt Flag. \nSet by hardware at the end of the 8th bit in Mode 0, or halfway through the stop bit in Modes 1, 2, and 3.  \nRI must be cleared by software.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 74 of 95 Mode 0: 8 -Bit Shift Register Mode  \nMode 0 is selected by clearing both the SM0 and SM1 bits in the \nSFR SCON. Serial data enters and exits through RxD. TxD ou t-\nputs the shift clock. Eight data bits are transmitted or r eceived . \nTransmi ssion is initiated by any instruction that writes to SBUF. \nThe data is shifted out of the RxD line. The 8 bits are tran smitted  \nwith the least significant bit (LSB) first.  \nReception is initiated when the receive enable bit (REN) is 1 \nand the receive interru pt bit (RI) is 0. When RI is cleared, the \ndata is clocked into the RxD line, and the clock pulses are \noutput from the TxD line.  \nMode 1: 8 -Bit UART, Variable Baud Rate  \nMode 1 is selected by clearing SM0 and setting SM1. Each data byte (LSB first) is precede d by a start bit (0) and followed by a \nstop bit (1). Therefore, 10 bits are transmitted on TxD or are received on RxD. The baud rate is set by the Timer 1 or Timer 2 \noverflow rate, or a combination of the two (one for transmi ssion \nand the other for recepti on). \nTransmission is initiated by writing to SBUF. The write to SBUF \nsignal also loads a 1 (stop bit) into the 9th bit position of the \ntransmit shift register. The data is output bit by bit until the stop bit appears on TxD and the transmit interrupt flag (TI) is \nautomatically set, as shown in Figure 72. \nTxD\nTI\n(SCON.1)START\nBITD0 D1 D2 D3 D4 D5 D6 D7STOP BIT\nSET INTERRUPT\nI.E., READY FOR MORE DATA\n03260-0-072\n \nFigure 72. UART Serial Port Transmission, Mode 1 \nReception is initiated when a 1 -to-0 transition is detected on \nRxD. Assuming a valid star t bit is detected, character rece ption \ncontinues. The start bit is skipped and the 8 data bits are \nclocked into the serial port shift register. When all 8 bits have been clocked in, the following events occur:  \n• The 8 bits in the receive shift register are l atched into SBUF.  \n• The 9th bit (stop bit) is clocked into RB8 in SCON.  \n• The receiver interrupt flag (RI) is set.  This is the case if, and only if, all of the following conditions are met at the time the final shift pulse is generated:  \n• RI = 0  \n• Either SM2 = 0 or SM2 = 1  \n• The r eceived stop bit = 1  \nIf any of these conditions is not met, the received frame is \nirretrievably lost, and RI is not set.  \nMode 2: 9 -Bit UART with Fixed Baud Rate  \nMode 2 is selected by setting SM0 and clearing SM1. In this \nmode, the UART oper ates in 9 -bit mode with a fixed baud rate. \nThe baud rate is fixed at Core_Clk/32 by default, although by \nsetting the SMOD bit in PCON, the frequency can be doubled to Core_Clk/16. Eleven bits are transmitted or received: a start \nbit (0), 8 data bits, a programmable 9th bit, and a stop bit (1). \nThe 9th bit is most often used as a parity bit, although it can be used for anything, including a 9th data bit if required.  \nTo transmit, the 8 data bits must be written into SBUF. The 9th bit must be written to TB8 in  SCON. When transmission is \ninitiated, the 8 data bits (from SBUF) are loaded onto the transmit shift register (LSB first). The contents of TB8 are loaded  \ninto the 9th bit position of the transmit shift register. The transmission starts at the next valid b aud rate clock. The TI flag \nis set as soon as the stop bit appears on TxD.  \nReception for Mode 2 is similar to that of Mode 1. The 8 data \nbytes are input at RxD (LSB first) and loaded onto the r eceive \nshift register. When all 8 bits have been clocked in, th e \nfollowing events occur:  \n• The 8 bits in the receive shift register are latched into SBUF .  \n• The 9th data bit is latched into RB8 in SCON.  \n• The receiver interrupt flag (RI) is set.  \nThis is the case if, and only if, all of the following conditions are \nmet at th e time the final shift pulse is generated:  \n• RI = 0  \n• Either SM2 = 0 or SM2 = 1  \n• The received stop bit = 1  \nIf any of these conditions is not met, the received frame is \nirretrievably lost, and RI is not set.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 75 of 95 Mode 3: 9 -Bit UART with Variable Baud Rate  \nMode 3 is  selected by setting both SM0 and SM1. In this mode, \nthe 8051 UART serial port operates in 9 -bit mode with a var i-\nable baud rate determined by either Timer 1 or Timer 2. The \noperation of the 9 -bit UART is the same as for Mode 2, but the \nbaud rate can be va ried as for Mode 1.  \nIn all four modes, transmission is initiated by any instruction that uses SBUF as a destination register. Reception is initiated in \nMode 0 by the condition RI = 0 and REN = 1. Reception is \ninitiated in the other modes by the incoming st art bit if REN =  1. \nUART Serial Port Baud Rate Generation  \n \nMode 0 Baud Rate Generation  \nThe baud rate in Mode 0 is fixed.  \nMode 0 Baud Rate  = (Core Clock Frequency /12) \nMode 2 Baud Rate Generation  \nThe baud rate in Mode 2 depends on the value of the SMOD bit \nin the PCON SFR. If SMOD = 0, the baud rate is 1/32 of the \ncore clock. If SMOD = 1, the baud rate is 1/16 of the core clock:  \nMode 2 Baud Rate  = (2SMOD/32 × [ Core Clock Frequency ]) \nModes 1 and 3 Baud Rate Generation  \nThe baud rates in Modes 1 and 3 are determ ined by the ove r-\nflow rate in Timer 1 or Timer 2, or in both (one for transmit \nand the other for receive).  \nTimer 1 Generated Baud Rates  \nWhen Timer 1 is used as the baud rate generator, the baud rates \nin Modes 1 and 3 are determined by the Timer 1 overflow rate \nand the value of SMOD as follows: \nModes  1 and 3  Baud Rate  = (2SMOD/32 × ( Timer 1 Overflow Rate ) The Timer 1 interrupt should be disabled in this application. \nThe timer itself can be configured for either timer or counter \noperation, and in any of its t hree running modes. In the most \ntypical application, it is configured for timer operation in the \nautoreload mode (high ni bble of TMOD = 0010 binary). In that \ncase, the baud rate is given by the formula  \nModes 1 and 3  Baud Rate  =  \n(2SMOD/32) × ( Core Clock/ [ 256 − TH1 ]) \nTimer 2 Generated Baud Rates  \nBaud rates can also be generated using Timer 2. Using Timer 2 \nis similar to using Timer 1 in that the timer must overflow 16 \ntimes before a bit is transmitted/received. Because Timer 2 has a 16-bit autoreload mode, a wi der range of baud rates is poss ible \nusing Timer 2.  \nModes 1 and 2  Baud Rate  = (1/16) × ( Timer  2 Overflow Rate ) \nTher efore, when Timer 2 is used to generate baud rates, the \ntimer increments every two clock cycles rather than every core machine cycle as befor e. Thus, it increments six times faster \nthan Timer 1, and therefore baud rates six times faster are po ssi-\nble. Because Timer 2 has 16 -bit autor eload capability, very low \nbaud rates are still possible.  \nTimer 2 is selected as the baud rate generator by sett ing the \nTCLK and/or RCLK in T2CON. The baud rates for transmit \nand receive can be simultaneously di fferent. Setting RCLK and/ \nor TCLK puts Timer 2 into its baud rate generator mode as shown in Figure 73. \nIn this cas e, the baud rate is given by the formula  \nModes 1 and 3 Baud Rate  =  \n(Core Clock)/(16 × [65536 −  (RCAP 2H, RCAP 2L )]) \n \nCORE\nCLK*\nT2\nPIN\nTR2CONTROL\nTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nEXEN2CONTROLT2EX\nPIN\nTRANSITION\nDETECTOREXF 2TIMER 2\nINTERRUPTNOTE: AVAILABILITY OF ADDITIONAL\nEXTERNAL INTERRUPT\nRCAP2L RCAP2HTIMER 2\nOVERFLOW2\n16\n16RCLK\nTCLKRX\nCLOCK\nTX\nCLOCK0\n01\n11 0\nSMODTIMER 1\nOVERFLOW\nC/T2 = 0\nC/T2 = 1\n*CORE CLK IS DEFINED BY THE CD BITS IN PLLCON\n03260-0-073\n \nFigure 73. Timer 2, UART Baud Rates  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 76 of 95 Timer 3 Generated Baud Rates  \nThe high integer dividers in a UART block mean that high \nspeed baud rates are not always possible using some particular crystals. For exam ple, using a 12 MHz crystal, a baud rate of \n115200 is not possible. To address this problem, the part has \nadded a dedicated baud rate timer (Timer 3) specifically for \ngenerating highly accurate baud rates. Timer 3 can be used instead of Timer 1 or Timer 2 for genera ting very accurate high \nspeed UART baud rates including 115200 and 230400. Timer 3 also allows a much wider range of baud rates to be obtained. In fact, every desired bit rate from 12 bit/s to 393216 bit/s can be \ngenerated to within an error of ± 0.8%. Timer 3 also frees up the \nother three timers, allowing them to be used for different \napplications. A block diagram of Timer 3 is shown in Figure 74. \n(1 + T3FD/64)2\nT3 RX/TX\nCLOCKCORE\nCLK\nT3ENRX CLOCK\nTX CLOCKTIMER 1/TIMER 2\nRX CLOCKFRACTIONAL\nDIVIDER\n0\n01\n1TIMER 1/TIMER 2\nTX CLOCK\n162DIV\n03260-0-074 \nFigure 74. Timer 3, UART Baud Rat es \nTwo SFRs (T3CON and T3FD) are used to control Timer 3. T3CON is the baud rate control SFR, allowing Timer 3 to be used to set up the UART baud rate, and setting up the binary divider (DIV).  The appropriate value to write to the DIV2 -1-0 bits can be \ncalculated using the following formula where f\nCORE is defined in \nPLLCON SFR. Note that the DIV value must be rounded down.  \n()2log16log\uf8f7\uf8f7\n\uf8f8\uf8f6\n\uf8ec\uf8ec\n\uf8ed\uf8eb\n×=Rate Baudf\nDIVCORE\n \nT3FD is the fractional divider ratio required to achieve the required baud rate. The appropriate value for T3FD c an be \ncalculated with the following fo rmula:  \n64\n2231−\n××=−Rate BaudfFDTDIVCORE  \nNote that T3FD should be rounded to the nearest integer. Once \nthe values for DIV  and T3FD are calculated, the actual baud rate \ncan be calc ulated with the following formula:  \n( )64 3 22\n1+××=−FDTfRate Baud ActualDIVCORE  \nFor example, to get a baud rate of 115200 while operating at \n16.7 MHz, that is , CD = 0  \n( ) ( )\n( )() H FDTDIV\n099 64 1152002/ 167772162 33 18.32log/ 11520016/ 16777216log\n2==−× ×=== × = \nTherefore, the actual baud rate is 114912 bit/s.  \n \nTable 34. T3CON SFR Bit Designations  \nBit No.  Name  Descript ion \n7 T3BAUDEN  T3UARTBAUD Enable.  \n  Set to enable Timer 3 to generate the baud rate. When set, PCON.7, T2CON.4, and T2CON.5 are ignored.  \nCleared to let the baud rate be generated as per a standard 8052. \n6  Reserved.  \n5  Reserved.  \n4  Reserved.  \n3  Reserved.  \n2 DIV2  Binary Divider Factor.  \n1 DIV1  DIV2  DIV1  DIV0  Bin Divider  \n0 DIV0  0 0 0 1 \n0 0 1 1 \n0 1 0 1 \n0 1 1 1 \n1 0 0 1 \n1 0 1 1 \n1 1 0 1 \n1 1 1 1 \n \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 77 of 95 Table 35. Commonly Used Baud Rates Using Timer 3 with the 16.777 216 MHz PLL Clock  \nIdeal Baud  CD DIV  T3CON  T3FD  % Error  \n230400  0 2 82H  09H  0.25  \n      \n115200  0 3 83H  09H  0.25  \n115200  1 2 82H  09H  0.25  \n115200  2 1 81H  09H  0.25  \n      \n57600  0 4 84H  09H  0.25  \n57600  1 3 83H  09H  0.25  \n57600  2 2 82H  09H  0.25  \n57600  3 1 81H  09H  0.25  \n      \n38400  0 4 84H  2DH  0.2 \n38400  1 3 83H  2DH  0.2 \n38400  2 2 82H  2DH  0.2 \n38400  3 1 81H  2DH  0.2 \n      \n19200  0 5 85H  2DH  0.2 \n19200  1 4 84H  2DH  0.2 \n19200  2 3 83H  2DH  0.2 \n19200  3 2 82H  2DH  0.2 \n19200  4 1 81H  2DH  0.2 \n      \n9600  0 6 86H  2DH  0.2 \n9600  1 5 85H  2DH  0.2 \n9600  2 4 84H  2DH  0.2 \n9600  3 3 83H  2DH  0.2 \n9600  4 2 82H  2DH  0.2 \n9600  5 1 81H  2DH  0.2 \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 78 of 95 INTERRUPT SYSTEM  \nThe ADuC841/ ADuC842/ ADuC843 provide a total of nine \ninterrupt sources with two priority levels. The control and \nconfiguration of the inte rrupt system is carried out through \nthree interrupt -related SFRs:  \nIE  Interrupt Enable Regis ter \nIP Interrupt Priority Register  \nIEIP2  Secondary Interrupt Enable Register  \n \nIE Interrupt Enable Register  \nSFR Address  A8H  \nPower -On Default  00H  \nBit Addressable  Ye s \n  \n \n \n \n   \n \n \n \nTable 36. IE SFR Bit Designations  \nBit No.  Name  Description  \n7 EA Set by the user to enable, or cleared to disable all interrupt sources.  \n6 EADC  Set by the user to enable, or cleared to disable ADC interrupts.  \n5 ET2 Set by the user to enable, or cleared to disable Timer 2 interrupts.  \n4 ES Set by the  user to enable, or cleared to disable UART serial port interrupts.  \n3 ET1 Set by the user to enable, or cleared to disable 0 Timer 1 interrupts.  \n2 EX1 Set by the user to enable, or cleared to disable External Interrupt 1. \n1 ET0 Set by the user to enable , or cleared to disable Timer 0 interrupts.  \n0 EX0 Set by the user to enable, or cleared to disable External Interrupt 0 . \n \n \nIP  Interrupt Priority Register  \nSFR Address  B8H  \nPower -On Default  00H  \nBit Addressable  Ye s \n \nTable 37. IP SFR Bit Designations  \nBit No.  Name  Description  \n7 ---- Reserved.  \n6 PADC  Written by the user to select the ADC interrupt priority (1 = High; 0 = Low).  \n5 PT2 Written by the user to select the Timer 2 interrupt priority (1 = High; 0 = Low). \n4 PS Written  by the user to select the UART serial port interrupt priority (1 = High; 0 = Low). \n3 PT1 Written by the user to select the Timer 1 interrupt priority (1 = High; 0 = Low). \n2 PX1  Written by the user to select External Interrupt 1 priority (1 = High; 0 = Low).  \n1 PT0 Written by the user to select the Timer 0 interrupt priority (1 = High; 0 = Low). \n0 PX0  Written by the user to select External Interrupt 0 priority (1 = High; 0 = Low). \n \n  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 79 of 95 IEIP2  Secondary Interrupt Enable Regi ster \nSFR Address  A9H  \nPower -On Default  A0H  \nBit Addressable  No \n \nTable 38. IEIP2 SFR Bit Designations  \nBit No.  Name  Description  \n7 ---- Reserved.  \n6 PTI Priority for time interval interrupt.  \n5 PPSM  Priority for power supply monitor interrupt.  \n4 PSI Priority fo r SPI/I2C interrupt.  \n3 ---- This bit must contain zero.  \n2 ETI Set by the user to enable, or cleared to disable time interval counter interrupts.  \n1 EPSMI Set by the user to enable, or cleared to disable power supply monitor interrupts.  \n0 ESI Set by the user to enable, or cleared to disable SPI or I2C serial port interrupts.  \n \nInterrupt Priority  \nThe interrupt enable registers are written by the user to enable \nindividual interrupt sources, while the interrupt priority regi s-\nters allow the user to select o ne of two priority levels for each \ninterrupt. An interrupt of a high priority may interrupt the \nservice routine of a low prio rity interrupt, and if two interrupts \nof different priority occur at the same time, the higher level interrupt is serviced first. A n interrupt cannot be interrupted by \nanother interrupt of the same priority level. If two interrupts of \nthe same priority level occur simultaneously, a polling s equence \nis observed as shown in Table 39. \nTable 39. Priority within an Interrupt Level  \nSource  Priority  Description  \nPSMI  1 (Highest)  Power Supply Monitor Interrupt.  \nWDS  2 Watchdog Timer Interrupt.  \nIE0 2 External Interrupt 0.  \nADCI  3 ADC Interrupt.  \nTF0 4 Timer/Counter 0 Interrupt.  \nIE1 5 External Interrupt 1.  \nTF1 6 Timer/Counter 1 Interrupt.  \nISPI/I2CI  7 SPI Interrupt/I2C Interrupt.  \nRI + TI  8 Serial Interrupt.  \nTF2 + EXF2  9  Timer/Counter 2 Interrupt.  \nTII 11(Lowest)  Time Interval Counter Interrupt.  \n Interrupt Vectors  \nWhen an in terrupt occurs, the program counter is pushed onto \nthe stack, and the corresponding interrupt vector address is \nloaded into the program counter. The interrupt vector addresses are shown in Table 40. \nTable 40. Interrupt Vector Addresses \nSource  Vector Address  \nIE0 0003H  \nTF0  000BH  \nIE1 0013H  \nTF1 001BH  \nRI + TI  0023H  \nTF2 + EXF2  002BH  \nADCI  0033H  \nISPI/I2CI  003BH  \nPSMI  0043H  \nTII 0053H  \nWDS  005BH  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 80 of 95 HARDWARE DESIGN CONS IDERATIONS  \nThis section outlines some of the key hardware design \nconsi derations that must be addressed when integrating the \nADuC841/ ADuC842/ ADuC843 into any hardware system.  \nClock Oscillator  \nThe clock source for the parts can be generated by the internal \nPLL or by an external clock input. To use the internal PLL, co n-\nnect a 32.768 kHz parallel resonant crystal between XTAL1 and \nXTAL2 , and connect a capacitor from each pin to ground as \nshown in Figure 75. The parts contain an inte rnal capacitance of \n18 pF on the XTAL1 and XTAL2 pins, which is sufficient for \nmost watch crystals. This crystal allo ws the PLL to lock correctly  \nto give an f VCO of 16.777216 MHz. If no crystal is pr esent, the \nPLL free run s, giving an fVCO of 16.7 MHz ±20%. In this mode,  \nthe CD bits are limited to CD = 1, giving a max core clock of 8.38 MHz. This is useful if an external  clock input is r equired. \nThe part powers up and the PLL free run s; the user then writes \nto the CFG842 SFR in software to enable the external clock input \non P3.4. Note that double the required clock must be pr ovided  \nexternally since the part runs at CD = 1. A better solution is to use \nthe ADuC841 with the external clock.  \nFor the ADuC841, connect the crystal in the same manner; \nexternal capacitors should be connected as per the crystal manufacturer’s recommendations.  A minimum capacitance of 20 \npF is recom mended on XTAL1 and XTAL2. The ADuC841 does  \nnot operate if no crystal is present.  \nAn external clock may be connected as shown in Figure 76 and \nFigure 77. \nXTAL2XTAL1\nTO INTERNAL\nTIMING CIRCUITSADuC841/ADuC842/ADuC843\n03260-0-076 \nFigure 75. External Parallel Resonant Crystal Connections \n \nXTAL2XTAL1\nTO INTERNAL\nTIMING CIRCUITSADuC841\n03260-0-075EXTERNAL\nCLOCK\nSOURCE\n \nFigure 76. Connect ing an External Clock Source ( ADuC841 ) \n P3.4TO INTERNAL\nTIMING CIRCUITSADuC842/ADuC843\n03260-0-077EXTERNAL\nCLOCK\nSOURCE\n \nFigure 77. Connecting an External Clock Source ( ADuC842 /ADuC843 ) \nWhether using the internal PLL or an external clock source, the \nspecified operational clock speed range  of the devices  is 400 kHz to \n16.777216 MHz, (20 MHz, ADuC841). The core itself is static, \nand functions all the way down to dc. But at clock speeds slower \nthat 400 kHz, the ADC can no longer function correctly. Ther e-\nfore, to ensure specified opera tion, use a clock frequency of at \nleast 400 kHz and no more than 20 MHz.  \nExternal Memory Interface  \nIn addition to its internal program and data memories, the parts \ncan access up to 16 MBytes of external data memory (SRAM). \nNote that the parts cannot access  external pr ogram memory.  \nFigure 78 shows a hardware configuration for accessing up to \n64 kBytes of external RAM. This interface is standard to any \n8051 compat ible MCU.  \nLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)ADuC841/\nADuC842/\nADuC843\nRDP2ALEP0\nWE WR\n03260-0-078 \nFigure 78. External Data Memory Interface (64 kBytes Address Space)  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 81 of 95 If access to more than 64 kBytes of RAM is desired, a feature \nunique to the ADuC841/ ADuC842/ ADuC843 allows address-\ning up to 16 MBytes of external RAM simply by adding an \nadditional latch as illu strated in Figure 79. \nLATCH\nP2ALEP0\nLATCHSRAM\nA8–A15A0–A7D0–D7\n(DATA)\nA16–A23\nOE RD\nWE WRADuC841/\nADuC842/ADuC843\n03260-0-079 \nFigure 79. External Data Me mory Interface (16 MBytes Address Space) \nIn either implementation, Port 0 (P0) serves as a multiplexed address/data bus. It emits the low byte of the data pointer (DPL) \nas an a ddress, which is latched by a pulse of ALE prior to data \nbeing placed on the bus  by the ADuC841/ ADuC842/ ADuC843 \n(write opera tion) or by the SRAM (read operation). Port 2 (P2) \nprovides th e data pointer page byte (DPP) to be latched by ALE, \nfollowed by the data pointer high byte (DPH). If no latch is \nconnected to P2, DPP is ignored by the SRAM, and the 8051 \nstandard of 64  kBytes external data memory access is maintained.  \nPower Supplies  \nThe operational power supply voltage of the parts depends on \nwhether the part is the 3 V version or the 5 V version. The specifications are given for power supplies within 2.7 V to 3.6 V or ±5% of the nominal 5 V level.  \nNote that Figure 80 and Figure 81 refer to the PQFP package. \nFor the CSP package, connect the extra DV\nDD, DGND, AV DD, \nand AGND in the same manner. Also, the paddle on the bottom \nof the package should be soldered to  a metal plate to provide \nmechanical stability. This metal plate should not be connected \nto ground.  \nSeparate analog and digital power supply pins (AV DD and DV DD, \nrespectively) allow AV DD to be kept relatively free of the noisy \ndigital signals that are ofte n present on the system DV DD line. \nHowever, though you can power AV DD and DV DD from two \nseparate su pplies if desired, you must ensure that they remain \nwithin ±0.3 V of one another at all times to avoid da maging the \nchip (as per the Absolute Maximum Ratings  section). \nTherefore, it is recommended that unless AV DD and DV DD are connected d irectly together, back -to-back Schottky diodes \nshould be con nected  between them, as shown in Figure 80. \nDVDD\nAGNDAVDD–+\n0.1µF10µFANALOG SUPPLY\n10µF\nDGND0.1µFDIGITAL SUPPLY\n–+\nADuC841/\nADuC842/\nADuC843\n03260-0-080 \nFigure 80. External Dual- Supply Connections  \nAs an alternative to providing two separate power supplies, the user can help keep AV\nDD quiet by placing a small series resistor \nand/or ferrite bead between it and DV DD, and then decouplin g \nAV DD separately to ground. An example of this configuration is \nshown in Figure 81. With this configuration, other analog \ncircuitry (such as op amps and voltage reference) can be powered  \nfrom the AV DD supply line a s well. The user still needs  to \ninclude back -to-back Schottky diodes between AV DD and DV DD \nto protect them from power -up and power -down transient \nconditions that could momenta rily separate the two supply voltages.  \nDVDD\nAGNDAVDD\nDGNDDIGITAL SUPPLY\n–+BEAD1.6Ω\n0.1µF\n0.1µF10µF 10µF\nADuC841/\nADuC842/\nADuC843\n03260-0-081 \nFigure 81. Exte rnal Single- Supply Connections  \nNotice that in both Figure 80 and Figure 81, a large value \n(10 µF) reservoir capacitor sits on DV DD and a separate 10 µF \ncapacitor sits on AV DD. Also, local small- value (0.1 µF) capac i-\ntors are l ocated at each V DD pin of the chip. As per standard \ndesign practice, be sure to i nclude all of these capacitors, and \nensure the smaller capacitors are close to each AV DD pin with \ntrace lengths as short as possible. Connect the ground terminal \nof each of these capacitors directly to the underlying ground plane. Finally, note that at all times, the ana log and digital ground  \npins on the part must be refe renced to the same system ground \nreference point.  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 82 of 95 Power  Consumption  \nThe currents consumed by the various sections of the part are \nshown in Table 41. The core values given represent the cu rrent \ndrawn by DV DD, while the rest (ADC, DAC, voltage ref) are \npulled by the AV DD pin and can be disabled in software when \nnot in use. The other on -chip peripherals (such as the watc hdog \ntimer and the power supply monitor) consume negligible current, and are therefore lumped in with the core operating current here. Of course, the user must add any currents sourced \nby the para llel and serial I/O pins, and sourced by the DAC, in \norder to determine the total current needed at the supply pins. \nAlso, current drawn from the DV\nDD supply increases by \napproxi mately 10 mA during Flash/EE erase a nd program c ycles. \nTable 41. Typical I DD of Core and Peripherals  \n VDD = 5 V  VDD = 3 V  \nCore (Normal Mode)  (2.2 nA × MCLK)  (1.4 nA × MCLK)  \nADC  1.7 mA  1.7 mA  \nDAC (Each)  250 µA  200 µA  \nVoltage Ref  200 µA  150 µA  \n \nSince operating DV DD current is primarily a function of clock \nspeed, the expressions for core supply current in Table 41 are \ngiven as functions of M CLK, the core clock fr equency. Plug in a \nvalue for M CLK in hertz to determine the cur rent co nsumed by \nthe core at that oscillator frequency. Since the ADC and DACs \ncan be enabled or disabled in software, add only the currents from the peripherals you expect to use. And again, do not forget \nto include current sourced by I/O pins, serial por t pins, DAC \noutputs, and so forth, plus the add itional current drawn during \nFlash/EE erase and program cycles. A software switch allows \nthe chip to be switched from normal mode into idle mode, and also into full power -down mode. Brief descriptions of idle and \npower -down modes follow.  \nPower Saving Modes  \nIn idle mode, the oscillator continues to run, but the core clock \ngenerated from the PLL is halted. The on -chip peripherals \ncontinue to receive the clock, and remain functional. The CPU \nstatus is preserved wi th the stack pointer and program counter, \nand all other internal registers maintain their data during idle \nmode. Port pins and DAC output pins retain their states in this \nmode. The chip recovers from idle mode upon receiving any enabled interrupt, or upon receiving a hardware reset.  \nIn full power -down mode, both the PLL and the clock to the \ncore are stopped. The on -chip oscillator can be halted or can \ncontinue to oscillate, depending on the state of the oscillator power -down bit in the PLLCON SFR. The TIC, being driven \ndirectly from the oscillator, can also be enabled during power -\ndown. All other on -chip peripherals are, however, shut down. \nPort pins retain their logic levels in this mode, but the DAC \noutput goes to a high impedance state (three -state). Duri ng full power -down mode, the part consumes a total of approx imately \n20 µA. There are five ways of terminating power -down mode:  \nAsserting the RESET Pin (Pin 15)  \nReturns to normal mode. All registers are set to their default \nstate and program execution starts at the reset vector once the \nRESET pin is de -asserted.  \nCycling Power  \nAll registers are set to their default state and program execution \nstarts at the reset vector approximately 128 ms later.  \nTime Inte rval Counter (TIC) Interrupt  \nPower -down mode is terminated, and the CPU services the TIC \ninterrupt. The RETI at the end of the TIC ISR returns the core \nto the instruction after the one that enabled power -down.  \nI\n2C or SPI Interrupt  \nPower -down mode is terminated, and the CPU services the \nI2C/SPI interrupt. Th e RETI at the end of the ISR returns the \ncore to the instruction after the one that enabled power -down. \nNote that the I2C/SPI power -down interrupt e nable bit (SERIPD)  \nin the PCON SFR must be set to a llow this mode of operation.  \nINT0  Inter rupt  \nPower -down mode is terminated, and the CPU services the \nINT0  interrupt. The RETI at the end of the ISR returns the core \nto the i nstruction after the one that enabled power -down. The \nINT0  pin must not be driven low d uring or within two m achine \ncycles of the instruction that initiates power -down mode. Note \nthat the INT0  power -down interrupt enable bit (INT0PD) in \nthe PCON SFR must be set to allow this mode of operation.  \nPower -On Reset (POR)  \nAn interna l POR is implemented on the ADuC841/ ADuC842/  \nADuC843.  \n3 V Part  \nFor DV DD below 2.45 V , the internal POR ho lds the part in reset. \nAs DV DD rises above 2.45 V , an internal timer times out for \napproximately 128  ms before the part is re leased from reset. The \nuser must ensure that the power supply has reached a stable 2.7 V minimum level by this time. Lik ewise on power -down, \nthe internal POR holds the part in reset until the power supply has dropped below 1 V . Figure 82 illustrates the oper ation of the \ninternal POR in detail.  \n128ms TYP 1.0V TYP 128ms TYP2.45V TYP\n1.0V TYP\nINTERNAL\nCORE RESETDVDD\n03260-0-082 \nFigure 82. Internal POR Operation  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 83 of 95 5 V Part  \nFor DV DD below 4.5 V , the internal POR holds the part in reset. \nAs DV DD rises above 4.5 V , an internal timer times out for \napproximately 128 ms before the part is released from reset. The \nuser must ensure that the power supply has reached a stable \n4.75 V minimum level by this time. Lik ewise on power -down, \nthe internal POR holds the part in reset until the power supply \nhas dropped below 1 V . Figure 83 illustrates the oper ation of the \ninternal POR in  detail.  \n128ms1.0V\n128ms4.75V\n1.0V TYP\nINTERNAL\nCORE RESETDVDD\n03260-0-096 \nFigure 83. Internal POR Operation  \n \nGrounding and Board Layout Recommendations  \nAs with all high resolution data converters, special attention must be paid to grounding and PC board layout of ADuC841/  \nADuC842/ ADuC843 based designs to achieve opt imum \nperformance from the ADC and the DACs. Although the parts have separate pins f or analog and digital ground (AGND and \nDGND), the user must not tie these to two separate ground planes unless the two ground planes are connected t ogether \nvery close to the part, as illustrated in the simplified example of \nFigure 84a. In systems where digital and analog ground planes \nare connected together somewhere else (for ex ample, at the \nsystem’s power supply), they cannot be connected again near \nthe part since a ground loop would result. In these cases, tie all the part’s AGND and DGND pins to the analog ground plane, as illu strated in Figure 84b. In systems with only one ground \nplane, ensure that the digital and analog components are \nphysically separated onto sep arate ha lves of the board such that \ndigital return currents do not flow near analog ci rcuitry and \nvice versa. The part can then be placed between the digital and \nanalog sections, as illu strated in Figure 84c. \nIn all of thes e scenarios, and in more complicated real -life \napplic ations, keep in mind the flow of current from the supplies \nand back to ground. Make sure the return paths for all currents \nare as close as possible to the paths that the currents took to reach their dest inations. For example, do not power components \non the analog side of Figure 84b with DV\nDD since that would \nforce return currents from DV DD to flow through AGND. Also, \ntry to avoid digital currents flowing under analog circuitry, which could ha ppen if the user places a noisy digital chip on the \nleft half of the board in Figure 84c. Whe never possible, avoid \nlarge discontinuities in the ground plane(s) (like those formed \nby a lon g trace on the same layer), since they force return \nsignals to travel a longer path. And of course, make all connec -\ntions to the ground plane d irectly, with little or no trace  separating \nthe pin from its via to ground.  \nIf the user plans to connect fast log ic signals (rise/fall time < \n5 ns) to any of the part’s digital inputs, a series resi stor should \nbe added to each relevant line to keep rise and fall times longer \nthan 5  ns at the part’s input pins. A value of 100 Ω or 200 Ω is \nusually sufficient to preven t high speed signals from coupling \ncapacitively into the part and from affecting the acc uracy of \nADC conversions.  \nDGND AGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHERE\nGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHEREDGNDa.\nAGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHERE\nb.\nc.\n03260-0-083 \nFigure 84. System Grounding Schemes  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 84 of 95 C1+\nV+\nC1–\nC2+\nC2–\nV–\nT2OUT\nR2INVCC\nGND\nT1OUT\nR1IN\nR1OUT\nT1IN\nT2IN\nR2OUTADM202\n1\n2\n3\n4\n5\n6\n7\n8\n9DVDD\n9-PIN D-SUB\nFEMALEDVDD\n2734\n33\n31\n30\n29\n2839\n38\n37\n36\n35\n3240 47 46 44 43 42 41 52 51 50 49 48 45DVDD1kΩDVDD\n1kΩ\n2-PIN HEADER FOR\nEMULATION ACCESS\n(NORMALLY OPEN)DOWNLOAD/DEBUG\nENABLE JUMPER\n(NORMALLY OPEN)\n11.0592MHz (ADuC841)\n32.768kHz (ADuC842/ADuC843)\nDVDDAVDD\nAVDD\nAGND\nCREF\nVREF\nDAC0\nDAC1\nDVDD\nDGND\nPSEN\nEA\nDGND\nDVDD\nXTAL2\nXTAL1RESET\nRXD\nTXD\nDVDD\nDGND\nNOT CONNECTED IN THIS EXAMPLEADuC841/ADuC842/ADuC843ADC0\nADC7ANALOG INPUT\nVREF OUTPUT\nDAC OUTPUT\n03260-0-084\n \nFigure 85. Example System (PQFP Package), DACs Not Present on ADuC843  \n \nOTHER HARDWARE CONSI DERATIONS  \nTo facilitate in -circuit programming, plus in -circuit debug and \nemul ation options, users need to  implement some simple \nconnection points in their hardware to allow easy access to \ndownload, debug, and emulation modes.  \nIn-Circuit Serial Download Access  \nNearly all ADuC841/ ADuC842/ ADuC843 designs want to take \nadvantage of the in -circuit reprogrammability of the chip. This \nis accomplished by a connection to the ADuC841/ ADuC842/  \nADuC843’s UART, which requires an e xternal RS -232 chip for \nlevel translation if downloading code from a PC. B asic configura -\ntion of an RS -232 connection is illu strated in Figure  85 with a \nsimple ADM202 based circuit. If users would rather not design \nan RS -232 chip onto a board, refer to Application Note uC006, A \n4-Wire UAR T-to-PC Interface , (at www.analog.com/microconverter ) for a simple (and zero- cost-per-board) method of gai ning in -\ncircuit serial download access to the part.  \nIn addition to the basic UART connections, u sers also need a \nway to trigger the chip into download mode. This is acco m-\nplished via a 1 kΩ pull -down resistor that can be jumpered onto \nthe PSEN  pin, as shown in Figure  85. To get the part into download \nmode, simply connect this jumper and power -cycle the device \n(or m anually reset the device, if a manual reset bu tton is available),  \nand it is then  ready to serially receive a new program. With the \njumper removed, the device comes up in normal mode (and \nruns the program) whenever power is cycled or RESET is toggled.  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 85 of 95 Note that PSEN  is normally an output (as described in the \nExternal Memory Interface section) and is sampled as an input \nonly on the falling edge of RESET, that is , at power -up or upon \nan external manual reset. Note also that if any external ci rcuitry \nunintentionally pulls PSEN  low during power -up or reset \nevents, it could cause the chip to enter download mode and \ntherefore fail to begin user code execution as it should. To pr e-\nvent this, ensure that no e xternal signals are cap able of pulling \nthe PSEN  pin low, except for the external PSEN  jumper itself.  \nEmbedded Serial Port Debugger  \nFrom a hardware perspective, entry into serial port debug mode \nis identical to the serial download entry sequenc e described in \nthe preceding section. In fact, both serial download and serial \nport debug modes can be thought of as essentially one mode of operation used in two different ways. Note that the serial port debugger is fully contained on the part (unlike ROM  monitor \ntype debuggers), and therefore no external mem ory is needed to \nenable in -system debug sessions. \nSingle -Pin Emulation Mode  \nAlso built into the part is a dedicated controller for si ngle-pin \nin-circuit emulation (ICE) using standard production ADuC841/  \nADuC842/ ADuC843 devices. In this mode, emula tion access is \ngained by connection to a single pin, the EA pin. Normally, this \npin is hardwired either high or low to select ex ecution from \ninternal or external program memory space, as described earlier. To enable single -pin emulation mode, ho wever, users \nneed to pull the \nEA pin high through a 1 kΩ  resistor, as shown \nin Figure  85. The emulator then connects to the 2 -pin header \nalso shown in Figure  85. To be compatible with the sta ndard \nconnector that comes with the si ngle-pin emulator avai lable \nfrom A ccutron Limited (www.accutron.com), use a 2 -pin \n0.1 inch pitch friction lock header from Molex (www.molex.com)  \nsuch as their part nu mber 22 -27-2021. Be sure to observe the \npolarity of this header. As represented in Figure  85, when the \nfriction lock tab is at the right, the ground pin should be the \nlower of the two pins (when viewed from the top).  \nTypical System Configuration  \nThe typical configuration shown in Figure  85 summarizes some \nof the hardware considerations that were discussed in previous \nsections.  \nDEVELOPMENT TOOLS  \nThere are two models of development tools available for the ADuC841/ ADuC842/ ADuC843: \n• QuickStart ™—Entry -level development system  \n• QuickStart Plus —Comprehensive development sy stem  \nThese systems are described briefly in the followin g sections.  QUICKSTART DEVELOPME NT SYSTEM  \nThe QuickStart Development System is an entry -level, low cost \ndevelopment tool suite supporting the parts. The system \nconsists of the following PC based (Windows® compatible) \nhardware and software development tool s.  \nHardware  Evaluation board and serial port progra mming cable. \nSoftware  Serial download software.  \nMiscellaneous  CD-ROM documentation and prototype \ndevice.  \nA brief description of some of the software tools and components in the QuickStart Development S ystem fo llows.  \nDownload —In- Circuit Serial Downloader  \nThe serial downloader is a Windows application that allows the \nuser to serially download an assembled program (Intel® hexadeci -\nmal fo rmat file) to the on -chip program flash memory via the \nserial COM1 por t on a standard PC. Application Note uC004 \ndetails this serial download protocol and is available from \nwww.analog.com/microconverter. \nASPIRE —IDE  \nThe ASPIRE integrated development environment is a \nWindows application that allows the user to compile, edit, a nd \ndebug code in the same environment. The ASPIRE software \nallows users to debug code execution on silicon using the \nMicroConverter UART serial port. The debugger provides access to all on -chip peripherals during a typical debug session \nas well as single step, animate, and break -point code execution \ncontrol.  \nNote that the ASPIRE IDE is also included as part of the Quic kStart Plus System. As part of the QuickStart Plus System, \nthe ASPIRE IDE also supports mixed level and C source d ebug. \nThis is not available  in the QuickStart System, but there is an \nexample pr oject that demonstrates this capability.  \nQuickStart Plus Development System  \nThe QuickStart Plus Development System offers users en hanced \nnonintrusive debug and emulation tools. The system consists of the following PC based (Windows compatible) hardware and \nsoftware development tools.  \nHardware  Prototype Board. Accutron Nonintr usive \nSingle -Pin Emulator.  \nSoftware  ASPIRE Integrated Development \nEnviro nment. Features full C and assembly \nemul ation using the Ac cutron single pin \nemulator.  \nMiscellaneous  CD-ROM documentation.  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 86 of 95 TIMING SPECIFICATIONS1, 2, 3 \nTable 42. AV DD =2.7 V to 3.6 V or 4.75 V to 5.25 V, DV DD = 2.7 V to 3.6 V or 4.75 V to 5.25 V; all specifications T MIN to T MAX,  \nunles s otherwise noted  \n \nParameter  32.768 kHz External Crystal   \nADuC842 /ADuC843  CLOCK INPUT (External Clock Driven XTAL1)  Min  Typ  Max  Unit  \ntCK XTAL1 Period   30.52   µs \ntCKL XTAL1 Width Low   6.26   µs \ntCKH XTAL1 Width High   6.26   µs \ntCKR XTAL1 Rise Time   9  ns \ntCKF XTAL1 Fall Time   9  ns \n1/t CORE ADuC842/ ADuC843  Core Clock Frequency4 0.131   16.78  MHz  \ntCORE ADuC842/ ADuC843  Core Clock Period5  0.476   µs \ntCYC ADuC842/ ADuC843  Machine Cycle Time6 0.059  0.476  7.63  µs \n                                                                    \n1 AC inputs during testing are driven at DV DD – 0.5 V for a Logic 1 and 0.45 V for Logic 0. Timing measurements are made at V IH min for Logic 1 and V IL max for Logic 0, as \nshown in Figure 87. \n2 For timing purposes, a port pin is no longer floating when a 100 mV change from load voltage occurs. A port pin begins to float when a 100 mV change from the \nloaded V OH/VOL level occurs, as  shown in Figure 87. \n3 CLOAD for all outputs = 80 pF, unless otherwise noted.  \n4 ADuC842/ADuC843 internal PLL locks onto a multiple (512 times) of the 32.768 kHz external crystal frequency to provide a stab le 16.78 MHz internal cloc k for the \nsystem. The core can operate at this frequency or at a binary submultiple called Core_Clk, selected via the PLLCON SFR.  \n5 This number is measured at the default Core_Clk operating frequency of 2.09 MHz.  \n6 ADuC842/ADuC843 machine cycle time is nominal ly defined as 1/Core_CLK.  \n \n \nParameter  Variable External Crystal   \nADuC841 CLOCK INPUT (External Clock Driven XTAL1)  Min  Typ  Max  Unit  \ntCK XTAL1 Period  62.5   1000  ns \ntCKL XTAL1 Width Low  20   ns \ntCKH XTAL1 Width High  20   ns \ntCKR XTAL1 Rise Time    20 ns \ntCKF XTAL1 Fall Time    20 ns \n1/t CORE ADuC841 Core Clock Frequency  0.131   20 MHz  \ntCORE ADuC841 Core Clock Period   0.476   µs \ntCYC ADuC841 Machine Cycle Time  0.05  0.476  7.63  µs \n \ntCKH\ntCKL\ntCKtCKFtCKR\n03260-0-085\n \nFigure 86. XTAL1 Input  \n \nDVDD– 0.5V\n0.45V0.2DVDD+ 0.9V\nTEST POINTS\n0.2DVDD– 0.1VVLOAD– 0.1V\nVLOAD\nVLOAD + 0.1VTIMING\nREFERENCE\nPOINTSVLOAD– 0.1V\nVLOAD\nVLOAD– 0.1V\n03260-0-086 \nFigur e 87. Timing Waveform Characteristics  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 87 of 95  \nParameter  16 MHz Core Clk  8 MHz Core Clock   \nEXTERNAL DATA MEMORY READ CYCLE  Min  Max  Min  Max  Unit  \ntRLRH RD Pulse Width  60  125  ns \ntAVLL Address Valid after ALE Low  60  120  ns \ntLLAX Address Hold after ALE Low  145  290  ns \ntRLDV RD Low to Valid Data In   48  100 Ns \ntRHDX Data and Address Hold after RD 0  0  ns \ntRHDZ Data Float after RD  150  625 ns \ntLLDV ALE Low to V alid Data In   170  350 ns \ntAVDV Address to Valid Data In   230  470 ns \ntLLWL ALE Low to RD or WR Low  130  255  ns \ntAVWL Address Valid to RD or WR Low  190  375  ns \ntRLAZ RD Low to Address Float   15  35 ns \ntWHLH  RD or WR High to ALE High  60  120  ns \n \n \n \n03260-0-087ALE (O)\nPORT 0 (I/O)\nPORT 2 (O)tWHLH\ntLLDV\ntLLWL tRLRH\ntAVWL\ntLLAXtAVLL\ntRLAZtRHDXtRHDZ\ntAVDVA0�A7 (OUT ) DATA(IN)\nA16�A23 A8A15tRLDVPSEN (O)\nRD (O)\n \nFigure 88. External Data Memory Read Cycle  \n \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 88 of 95  \nParameter  16 MHz Core Clk  8 MHz Core Clock   \nEXTERNAL DATA MEMORY WRITE CYCLE  Min  Max  Min  Max  Unit  \ntWLWH  WR Pulse Width  65  130  ns \ntAVLL Address Valid after ALE Low  60  120  ns \ntLLAX Address Hold after ALE Low  65  135  ns \ntLLWL ALE Low to RD or WR Low   130  260 ns \ntAVWL Address Valid to RD or WR Low  190  375  ns \ntQVWX  Data Valid to WR Transition  60  120  ns \ntQVWH  Data Setup before WR 120  250  ns \ntWHQX  Data and Address Hold after WR  380  755  ns \ntWHLH  RD or WR High to ALE High  60  125  ns \n \n \n03260-0-088ALE (O)\nPORT 2 (O)tWHL H\ntWLWH tLLWL\ntAVWL\ntLLAXtAVLLtQVWX\ntQVWHtWHQX\nA0�A7 DATA\nA16�A23 V8A15PSEN (O)\nWR (O)\n \nFigure 89. External Data Memory Write Cycle  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 89 of 95  \nParameter     \nI2C COMPATIBLE INTERFACE TIMING  Min  Max  Unit  \ntL SCLOCK Low Pulse Width  1.3  µs \ntH SCLOCK High Pulse Width  0.6  µs \ntSHD Start Condition Hold Time  0.6  µs \ntDSU Data Setup Time  100  µs \ntDHD Data Hold Time   0.9 µs \ntRSU Setup Time for Repeated Start  0.6  µs \ntPSU Stop Condition Setup Time  0.6  µs \ntBUF Bus Free Time between a Stop Conditionand a Start Condition  1.3  µs \ntR Rise Time of Both SCLOCK and SDATA   300 ns \ntF Fall Time of Both SCLOCK and SDATA   300 ns \ntSUP1 Pulse Width of Spike Suppressed   50 ns \n1Input filtering on both the SCLOCK and SDATA inp uts suppresses noise spikes less than 50 ns.  \n \n \nMSBtBUF\nSDATA (I/O)\nSCLK (I)\nSTOP\nCONDITIONSTART\nCONDITIONREPEA TED\nSTARTLSB ACK MSB\n1 2-7 8 9 1\nS(R) PStPSUtDSU\ntSHDtDHDtSUP\ntDSUtDHD\ntH\ntSUP tLtRSUtRtR\ntF\ntF\n03260-0-091 \nFigure 90. I2C Compatible Interface Timing  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 90 of 95  \nParameter      \nSPI MASTER MODE TIMING (CPHA = 1)  Min  Typ  Max  Unit  \ntSL SCLOCK Low Pulse Width1  476  ns \ntSH SCLOCK High Pulse Width1  476  ns \ntDAV Data Output Valid after SCLOCK Edge    50 ns \ntDSU Data Input Setup Time before SCLOCK Edge  100   ns \ntDHD Data Input Hold Time after SCLOCK Edge  100   ns \ntDF Data Output Fall Time   10 25 ns \ntDR Data Output Rise Time   10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time   10 25 ns \n1 Characterized under the following conditions:  \na. Core clock divider bits CD2, CD1, and CD0 bits in PLLCON SFR set to 0, 1, and 1, respectively,  that is , core clock frequency = 2.09 MHz.  \nb. SPI bit -rate sel ection bits SPR1 and SPR0 in SPICON SFR set to 0 and 0, respectively.  \n \n \nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6 –1BITS 6 –1\ntDHDtDRtDAV tDFtSH tSL\ntSRtSF\nMSB IN\n03260-0-092 \nFigure 91. SPI Master Mode Timing (CPHA = 1)  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 91 of 95  \nParameter      \nSPI MASTER MODE TIMING (CPHA = 0)  Min  Typ  Max  Unit  \ntSL SCLOCK Low Pulse Width1  476  ns \ntSH SCLOCK High Pulse Width1  476  ns \ntDAV Data Output Valid after SCLOCK Edge    50 ns \ntDOSU Data Output Setup before SCLOCK Edge    150 ns \ntDSU Data Input Setup Time before SCLOCK Edge  100   ns \ntDHD Data Input Hold Time after SCLOCK Edge  100   ns \ntDF Data O utput Fall Time   10 25 ns \ntDR Data Output Rise Time   10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time   10 25 ns \n \n1 Characterized under the following conditions:  \n  a. Core clock divider bits CD2, CD1, and CD0 bits in PLLCON SFR set to 0, 1,  and 1, respectively, that is , core clock frequency = 2.09 MHz.  \n  b. SPI bit -rate selection bits SPR1 and SPR0 in SPICON SFR set to 0 and 0, respectively.  \n \n \nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6–1BITS 6–1\ntDHDtDRtDAV\ntDFtDOSUtSH tSL\ntSRtSF\nMSB IN\n03260-0-093 \nFigure 92. SPI Master Mode Timing (CPHA = 0)  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 92 of 95  \nParameter      \nSPI SLAVE M ODE TIMING (CPHA = 1)  Min  Typ  Max  Unit  \ntSS SS to SCLOCK Edge  0   ns \ntSL SCLOCK Low Pulse Width   330  ns \ntSH SCLOCK High Pulse Width   330  ns \ntDAV Data Output Valid after SCLOCK Edge    50 ns \ntDSU Data Input Setup Time before SCLOCK E dge  100   ns \ntDHD Data Input Hold Time after SCLOCK Edge  100   ns \ntDF Data Output Fall Time   10 25 ns \ntDR Data Output Rise Time   10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time   10 25 ns \ntSFS SS High after SCLOCK Edge  0   ns \n \n \n \nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6 –1 LSB\nBITS 6 –1 LSB IN\ntDHDtDSUtDRtDFtDAVtSHtSL tSR tSFtSFS\nMSB INtSS\n03260-0-094\n \nFigure 93. SPI Slave Mode Timing (CPHA = 1)  \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 93 of 95  \nParameter      \nSPI SLAVE MODE TIMING (CPHA = 0)  Min  Typ  Max  Unit  \ntSS SS to SCLOCK Edge  0   ns \ntSL SCLOCK Low Pulse Width   330  ns \ntSH SCLOCK High Pulse  Width   330  ns \ntDAV Data Output Valid after SCLOCK Edge    50 ns \ntDSU Data Input Setup Time before SCLOCK Edge  100   ns \ntDHD Data Input Hold Time after SCLOCK Edge  100   ns \ntDF Data Output Fall Time   10 25 ns \ntDR Data Output Rise Time   10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time   10 25 ns \ntDOSS Data Output Valid after SS Edge    20 ns \ntSFS SS High after SCLOCK Edge     ns \n \n \n \nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6–1 LSB\nBITS 6–1 LSB IN\ntDHDtDSUtDRtDFtDAV\ntDOSStSHtSL\ntSRtSFtSFS\nMSB INtSS\n03260-0-095\n \nFigure 94. SPI Slave Mode Timing (CPHA = 0)  \nADuC841/ADuC842/ADuC843  Data Sheet  \n \nRev. B | Page 94 of 95 OUTLINE DIMENSIONS \nCOMPLIANT TO JEDEC S TANDARDS MO- 112-AC-214.15\n13.90  SQ13.652.45\nMAX1.030.88\n0.73\n1452\n262740\n39\n132.10\n2.00\n1.95\n7°\n0°0.25\n0.150.100.23\n0.1110.20\n10.00 SQ\n 9.80\n0.65 BSC\nLEAD PITCHLEAD WIDTH0.10\nCOPLANARITYSEATING\nPLANE1.95 REF 1\nVIEW  A\nVIEW  A\nROTATED 90 ° CCW\n06-10-20014-BTOP VIEW\n(PINS DOWN)\n0.380.22\n \nFigure 95. 52 -Lead Plastic Quad Flat Package [MQFP]  \n(S-52-2) \nDimensions shown in millimeters  \n \n0.50\nBSCPIN 1\nINDIC ATORPIN 1\nINDIC ATOR\n*6.25\n6.10 SQ\n5.95\n0.500.40\n0.30\nSEATING\nPLANE0.80\n0.75\n0.700.05 MAX\n0.02 NOM\n0.20 REFCOPLANARITY\n0.080.300.230.18\n08-23-2013- A8.10\n8.00 SQ\n7.90\nFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TO\nTHE PIN CONFIGURATION AND\nFUNCTION DESCRIPTIONSSECTION OF THIS DATA SHEET.0.25 MIN\n6.50 REF\n*COMPLIANT TO JEDEC STANDARDS MO-220-WLLD-2\nWITH EXCEPTION TO EXPOSED PAD DIMENSION.156\n14\n1543\n42\n2829\nTOP VIEW BOTTOM VIEWEXPOSED\nPADPKG-004356 \nFigure 96. 56 -Lead Frame Chip Scale Package [LFCSP]  \n8 mm × 8 mm and 0.75 mm Package Heigh t \n(CP- 56-11) \nDimensions shown in millimeters  \n \n \n \n  \n \nData Sheet  ADuC841/ADuC842/ADuC843  \n \nRev. B | Page 95 of 95 ORDERING GUIDE  \nModel1 Supply \nVoltage V DD User Program \nCode Space  Temperature \nRange  Package Description  Package \nOption  \nADuC841BS Z62-5  5 62 –40°C to +85°C  52-Lead Plastic Quad Flat Package [MQFP]  S-52-2  \nADuC841BS Z62-3  3 62 –40°C to +85°C  52-Lead Plastic Quad Flat Package [MQFP]  S-52-2  \nADuC841BCP Z62-5  5 62 –40°C to +85°C  56-Lead  Lead Frame Chip Scale Package  [LFCSP]  CP-56-11  \nADuC841BCP Z62-3  3 62 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFC SP] CP-56-11  \nADuC841BCP Z8-5  5 8 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC841BCP Z8-3  3 8 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BS Z62-5  5 62 –40°C to +85°C  52-Lead Plastic Quad Fla t Package [MQFP]  S-52-2  \nADuC842BS Z62-3  3 62 –40°C to +85°C  52-Lead Plastic Quad Flat Package [MQFP]  S-52-2  \nADuC842BCP Z62-5  5 62 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BCP Z62-3  3 62 –40°C to +85°C  56-Lead Lead Fra me Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BCP Z32-5  5 32 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BCP Z32-3  3 32 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BCP Z8-5  5 8 –40°C to + 85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC842BCP Z8-3  3 8 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADUC843BSZ62- 5 5 62 –40°C to +85°C  52-Lead Plastic Quad Flat Package [MQFP]  S-52-2  \nADuC843BS Z62-3  3 62 –40°C to +85°C  52-Lead Plastic Quad Flat Package [MQFP]  S-52-2  \nADuC843BCP62 Z-5  5 62 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11 \nADuC843BCP Z62-3  3 62 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC8 43BCP32 Z-5  5 32 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC843BCP Z32-3  3 32 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nADuC843BCP Z8-5  5 8 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [L FCSP]  CP-56-11  \nADuC843BCP Z8-3  3 8 –40°C to +85°C  56-Lead Lead Frame Chip Scale Package [LFCSP]  CP-56-11  \nEVAL -ADuC841QSZ  5   QuickStart Development System for the ADuC841   \nEVAL -ADuC841QSPZ  5   QuickStart Plus Development System   \nEVAL -ADuC842QSZ  5   QuickStart Development System for the \nADuC842 and ADuC843   \nEVAL -ADuC842QSPZ  5   QuickStart Plus Development System   \nUSB -EA-CONVZ     USB to EA Emulator   \n                                                                    \n1 The only difference between the ADuC842 and ADuC843devices is the voltage output DACs on t he ADuC842; thus, the evaluation system for the ADuC842 is also \nsuitable for the ADuC843.  \n \n \n \n \n \n \n \n \n \n \nI2C refers to a communications protocol originally developed by Philips Semiconductors (no w NXP Semiconductors).  \n \n©2003 –2017  Analog Devices, Inc. All rights reserved. Trademarks and   \n registered trademarks are the property of their respective owners.  \n  D03260 -06/17(B)  \n \n"}]
!==============================================================================!
### Component Summary: ADuC842BSZ62-5

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 2.7 V to 5.25 V
- **Current Ratings**: 
  - Normal Mode: 4.5 mA @ 3 V (core clock = 2.098 MHz)
  - Power-Down Mode: 10 µA @ 3 V
- **Power Consumption**: 
  - Core: 4.5 mA (typical at 3 V)
  - ADC: 1.7 mA
  - Each DAC: 250 µA
  - Voltage Reference: 200 µA
- **Operating Temperature Range**: 
  - -40°C to +85°C
- **Package Type**: 
  - 52-Lead Plastic Quad Flat Package (MQFP)
- **Special Features**: 
  - Integrated 12-bit ADC and DAC
  - 62 kB Flash/EE program memory
  - 4 kB Flash/EE data memory
  - On-chip temperature monitor
  - Multiple serial interfaces (UART, I2C, SPI)
  - Watchdog timer and power supply monitor
- **Moisture Sensitive Level**: 
  - JEDEC J-STD-020E: Level 1

#### Description:
The **ADuC842** is a high-performance MicroConverter from Analog Devices that integrates a 12-bit Analog-to-Digital Converter (ADC), two 12-bit Digital-to-Analog Converters (DACs), and a high-speed 8052-compatible microcontroller core with embedded Flash memory. It is designed for applications requiring precise analog signal processing and control, making it suitable for various embedded systems.

#### Typical Applications:
- **Optical Networking**: Used for laser power control.
- **Base Station Systems**: Employed in communication systems for signal processing.
- **Precision Instrumentation**: Ideal for smart sensors and measurement devices.
- **Transient Capture Systems**: Useful in data acquisition systems.
- **Data Acquisition Systems (DAS)**: Facilitates communication systems requiring high accuracy and speed.

This component is particularly beneficial in applications where both analog and digital processing are required on a single chip, reducing the need for multiple discrete components and simplifying design complexity.