[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of NB25Q40ATIGT production of ZETTA from the text:NB25Q40A\n1NBSPINORFLASH\n1.GENERALDESCRIPTIONS\nTheNB25Q40A(4M-bit)SerialFlashmemoryprovidesastoragesolutionforsystemswith\nlimitedspace,pinsandpower.TheNB25Q40Aseriesoffersflexibilityandperformancewell\nbeyondordinarySerialFlashdevices.TheyareidealforcodeshadowingtoRAM,executing\ncodedirectlyfromDual/QuadSPIandstoringvoice,textanddata.Thedevice\noperatesonasingle2.3Vto3.6Vpowersupplywithcurrentconsumptionaslowas4mA\nactiveand1µAforpower-down.Alldevicesareofferedinspace-savingpackages.\nTheNB25Q40AsupportthestandardSerialPeripheralInterface(SPI),aswellasDual/Quad\nI/OSPI:SerialClock,ChipSelect,SerialDataI/O0(DI),I/O1(DO),I/O2(/WP),andI/O3\n(/HOLD).SPIclockfrequenciesofupto83MHzaresupportedallowingequivalentclock\nratesof133MHzforDualI/OandThesetransferratescanoutperformstandardAsynchronous\n8and16-bitParallelFlashmemories.AHoldpin,WriteProtectpinandprogrammablewrite\nprotection,withtoporbottomarraycontrol,providefurthercontrolflexibility\n2.FEATURES\nblepage\uf0b7SPIFlashMemories\n–StandardSPI:SCLK,/CS,SI,SO\n–DualSPI:SCLK,/CS,IO0,IO1\n\uf0b7HighestPerformanceSerialFlash\n–83MHzforfastread\n–DualI/ODatatransferupto133Mbits/s\n–Minimum100,000Program/EraseCycles\n–Morethan20-yeardataretention\n\uf0b7LowPowerConsumption\n–Single2.3Vto3.6Vsupply\n–1μAstandbycurrent\n–0.2μAdeeppowerdowncurrent\n–3.5mAactivereadcurrentat33MHz\n–4.5mAactiveprogramorerasecurrent\uf0b7FlexibleArchitecture\n–Uniform256-bytePageErase\n–Uniform4K-byteSectorErase\n–Uniform32/64K-byteBlockErase\n–Program1to256byteperprogramma\n\uf0b7FastProgramandEraseSpeed\n–1.6mspageprogramtime\n–8mspageerasetime\n–8ms4K-bytesectorerasetime\n–8ms32K/64K-byteblockerasetime\n\uf0b7AdvancedSecurityFeatures\n–128-BitUniqueIDforeachdevice\n–3*256-ByteSecurityRegisterswithOTPLocks\n–Discoverableparameters(SFDP)register\n\uf0b7PackageInformation\n–SOP8\n–USON8/DFN8(3x2mm)\n–TSSOP8\n–KGD\nNB25Q40A\n2NBSPINORFLASH\n3.PINDEFINITION\n3.1PINCONFIGURATION\nCS#\nSO/\nIO1\nWP#/\nIO2\nVSS\n8-LEADVSOP/SOPVCC\nHOLD#/\nIO3\nSCLK\nSI/\nIO0CS#\nSO/\nIO1\nWP#/\nIO2\nVSS\n8-LEADWSON/USONVCC\nHOLD#/\nIO3\nSCLK\nSI/\nIO0 5 46 3TopView7 28 1\n\nNB25Q40A\n3NBSPINORFLASH\n3.2PINDESCRIPTION\nTable-1.PinDefinition\nPinNo.PinNameI/ODescription\n1 CS# IChipSelectInput\n2 SO(IO1)I/ODataOutput(DataInputOutput1)\n3 WP#(IO2)I/OWriteProtectInput(DataInputOutput2)\n4 VSS Ground\n5 SI(IO0)I/ODataInput(DataInputOutput0)\n6 SCLK ISerialClockInput\n7HOLD#(IO3)I/OHoldInput(DataInputOutput3)\n8 VCC PowerSupply\n4.BLOCKDIAGRAM\n\nNB25Q40A\n4NBSPINORFLASH\n5.MEMORYORGANIZATION\nTable-2.0NB25Q40AArrayOrganization\nEachdevicehasEachblockhasEachsectorhasEachpagehas\n512K 64/32K 4K 256 Bytes\n2K 256/128 16 - Pages\n128 16/8 - - Sectors\n8/16 - - - Blocks\nTable-3.0NB25Q40AUniformBlockSectorArchitecture\nBlock(64K-byte)Block(32K-byte)Sector(4K-byte) AddressRange\n7 14~15127 07F000H 07FFFFH\n…… …… ……\n112 070000H 070FFFH\n6 12~13111 06F000H 06FFFFH\n…… …… ……\n96 060000H 060FFFH\n…… ………… …… ……\n…… …… ……\n…… …… ……\n12~331 01F000H 01FFFFH\n…… …… ……\n16 010000H 010FFFH\n0 0~115 00F000H 00FFFFH\n…… …… ……\n0 000000H 000FFFH\nNB25Q40A\n5NBSPINORFLASH\n6.DEVICEOPERATION\n1.Beforeacommandisissued,thestatusregistershouldbecheckedtoensurethedeviceisreadyforthe\nintendedoperation.\n2.Whenanincorrectcommandisinput,thedeviceentersstandbymodeandremainsinstandbymodeuntil\nthenextCS#fallingedge.Instandbymode,theSOpinofthedeviceisinHigh-Z.\n3.Whenthecorrectcommandisinput,thedeviceentersactivemodeandremainsinactivemodeuntilthe\nnextrisingedgeofCS#.\n4.Forstandardsingledatarateserialmode,inputdataislatchedontherisingedgeofSerialClock(SCLK)\nanddataisshiftedoutonthefallingedgeofSCLK.ThedifferencebetweenSerialmode0andmode3is\nshowninFigure-1.\nFigure-1.SerialModesSupported(forNormalSerialMode)\nStandardSPI\nTheNB25Q40Afeaturesaserialperipheralinterfaceon4signals:SerialClock(SCLK),ChipSelect\n(CS#),SerialDataInput(SI)andSerialDataOutput(SO).BothSPIbusmode0and3aresupported.Input\ndataislatchedontherisingedgeofSCLKandisdatashiftedoutonthefallingedgeofSCLK.\nDualSPI\nTheNB25Q40AsupportsDualSPIoperationwhenusingthe“DualOutputFastRead”(3BH),“Dual\nI/OFastRead”(BBH),“DualI/OReadManufactureID&DeviceID”(92H)and“DualInputPage\nProgram”(A2H)commands.Thesecommandsallowdatatobetransferredtoorfromthedeviceattwice\ntherateofthestandardSPI.WhenusingtheDualSPIcommand,theSIandSOpinsbecome\nbidirectionalI/Opins:IO0andIO1.\nNB25Q40A\n6NBSPINORFLASH\nHold\nDrivingtheHOLD#pinlowwillpauseanyserialcommunicationswiththedevice.TheHOLDfeaturewill\nnotstopthefollowingoperationsifalreadyinprogresswhentheHOLD#pingoeslow:statusregisterwrite,\nprogram,orerase.\nTheoperationofHOLDrequiresChipSelect(CS#)toremainlowandbeginsonthefallingedgeof\nHOLD#pinsignalwhiletheSerialClock(SCLK)signalislow(iftheSerialClocksignalisnotlow,theHOLD\noperationwillnotstartuntiltheSerialClocksignalislow).TheHOLDconditionendsontherisingedgeof\nHOLD#pinsignalwhiletheSerialClock(SCLK)signalislow(iftheSerialClocksignalisnotlow,theHOLD\noperationwillnotenduntiltheSerialClockislow).\nFigure-2.HoldCondition\nCS#\nSCLK\nHOLD#\nHOLD HOLD\nDuringtheHOLDoperation,theSerialDataOutput(SO)isinahighimpedancestatewhentheHOLD#\npingoeslowandwillremaininahighimpedancestateuntiltheHOLD#pingoeshigh.TheSerialDataInput\n(SI)isignored(don\'tcare)ifboththeSerialClock(SCLK)andHOLD#pingolowandwillremaininthisstate\nuntiltheSCLKgoeslowandtheHOLD#pingoeshigh.IfChipSelect(CS#)isdrivenhighduringtheHOLD\noperation,itwillresettheinternallogicofthedevice.Tore-startcommunicationwithchip,theHOLD#mustbe\ndrivenhighandCS#mustbeatalogiclow.\nNote:TheHOLDfeatureisdisabledinQuadI/Omode.\n7.STATUSREGISTER\nTable-4.StatusRegister\nS15 S14 S13 S12 S11 S10 S9 S8\nSUS1CMPLB3LB2LB1SUS2QESRP1\nRead-onlyNon-volatile Non-volatileOTP Read-onlyNon-volatileNon-volatile\nS7 S6 S5 S4 S3 S2 S1 S0\nSRP0BP4BP3BP2BP1BP0WELWIP\nNon-volatile Non-volatile Read-onlyRead-only\nNB25Q40A\n7NBSPINORFLASH\nThestatusandcontrolbitsoftheStatusRegisterareasfollows:\nWIPbit\nTheWriteinProgress(WIP)bitindicateswhetherthedeviceisbusyexecutingaprogram/erase/write\nstatusregisteroperation.WhentheWriteinProgress(WIP)bitissetto1,aprogram/erase/writestatusregister\noperationisinprogress.WhentheWriteinProgress(WIP)bitissetto0,thedevicedoesnothavea\nprogram/erase/writestatusregisteroperationinprogress.\nWELbit\nTheWriteEnableLatch(WEL)bitindicatesthestatusoftheinternalWriteEnableLatch.Whensetto1,\ntheinternalWriteEnableLatchisset,whensetto0theinternalWriteEnableLatchisreset,andnoWrite\nStatusRegister,ProgramorErasecommandisaccepted.\nBP4,BP3,BP2,BP1,BP0bits\nTheBlockProtect(BP4,BP3,BP2,BP1,andBP0)bitsarenon-volatile.Theydefinethesizeofthearea\nsoftwareprotectedagainstProgramandErasecommands.ThesebitsarewrittenwiththeWriteStatusRegister\n(01H)command.WhentheBlockProtect(BP4,BP3,BP2,BP1,BP0)bitsaresettothetargetvalue,the\nrelevantmemoryarea(asdefinedinTable-6.X)becomesprotectedagainstPageProgram(02H),PageErase\n(81H),SectorErase(20H),HalfBlockErase(52H)andBlockErase(D8H)commands.TheChipErase(60H\norC7H)commandisexecuted,onlyiftheBlockProtectbitsaresetto“Noneprotected”.TheBlockProtectbits\ncanbewritteniftheHardwareProtectionModehasnotbeenset.\nSRP1,SRP0bits\nTheStatusRegisterProtect(SRP1andSRP0)bitsarenon-volatileRead/Writebitsinthestatusregister.\nTheSRPbitscontrolthemethodofwriteprotection:softwareprotection,hardwareprotection,powersupply\nlock-downorone-timeprogrammableprotection.\nTable-5.StatusRegisterProtectionBits\nSRP1SRP0#WPStatusRegisterDescription\n0 0XSoftwareProtectedTheStatusRegistercanbewrittentoafteraWriteEnable\ncommand,WEL=1.(Default)\n0 1 0HardwareProtectedWP#=0,theStatusRegisterislockedandcannotbewritten\nto.\n0 1 1HardwareUnprotectedWP#=1,theStatusRegisterisunlockedandcanbewritten\ntoafteraWriteEnablecommand,WEL=1.\n1 0XPowerSupply\nLock-Down(1)StatusRegisterisprotectedandcannotbewrittentoagain\nuntilthenextPower-Down,Power-Upcycle.\n1 1XOneTimeProgram(2)StatusRegisterispermanentlyprotectedandcannotbe\nwrittento.\nNotes:\n1.WhenSRP1,SRP0=(1,0),aPower-Down,Power-UpcyclewillchangeSRP1,SRP0to(0,0)state.\n2.Thisfeatureisavailableonspecialorder.PleasecontactNBfordetails.\nQEbit\nTheQuadEnable(QE)bitisanon-volatileRead/WritebitintheStatusRegisterthatallowsQuadoperation.\nWhentheQEbitissetto0(Default)thedeviceissettoStandardSPIoperationandbothWP#andHOLD#\nNB25Q40A\n8NBSPINORFLASH\npinsareenabled.WhentheQEbitissetto1,theQuadIO2andIO3pinsareenabledandtheWP#pinfunction\nisnotavailablesincethispinisusedforIO2.(SettheQEbitto0toavoidshortissueiftheWP#orHOLD#pin\nistieddirectlytothepowersupplyorground.)\nLB3,LB2,LB1bits\nTheLB3,LB2,LB1bitsarenon-volatileOneTimeProgram(OTP)bitsinStatusRegister(S13-S11)that\nprovidethewriteprotectcontrolandstatusfortheSecurityRegisters.ThedefaultstateofLB3-LB1is0,with\nthesecurityregistersunprotected.TheLB3-LB1bitscanbesetto1individuallyusingtheWriteRegister(01H)\ncommand.TheLB3-LB1bitsareOneTimeProgrammable,oncesettingto1,thecorrespondingSecurity\nRegisterswillbecomeread-onlypermanently.\nCMPbit\nTheCMPbitisanon-volatileRead/WritebitintheStatusRegister(S14).Itisusedinconjunctionwiththe\nBP4-BP0bitstoprovidemoreflexibilityforthememoryarrayprotection.PleaseseetheTable-6.Xforprotect\nareadetails.ThedefaultsettingisCMP=0.\nSUS1,SUS2bit\nTheSUS1andSUS2bitsarereadonlybitsinthestatusregister(S15andS10)thataresetto1after\nexecutingaProgram/EraseSuspend(75HorB0H)command.(TheEraseSuspendwillsettheSUS1to1,and\ntheProgramSuspendwillsettheSUS2to1).TheSUS1andSUS2bitsareclearedto0bytheProgram/Erase\nResume(7AHor30H)command,theSoftwareReset(66H+99H)commandaswellasapower-down,power-\nupcycle.\n8.DATAPROTECTION\nDuringpowertransition,theremaybesomefalsesystemlevelsignalswhichresultininadvertenterasure\norprogramming.Thedeviceisdesignedtoprotectitselffromtheseaccidentalwritecycles.\nThestatemachinewillberesettostandbymodeautomaticallyduringpowerup.Inaddition,thecontrol\nregisterarchitectureofthedeviceensuresthatthememorycontentscanonlybechangedafterspecific\ncommandsequenceshavecompletedsuccessfully.\nInthefollowing,thereareseveralfeaturestoprotectthesystemfromtheaccidentalwritecyclesduring\nVCCpower-upandpower-downorfromsystemnoise.\n\uf06cValidcommandlengthchecking:Thecommandlengthwillbecheckedwhetheritisatbytebaseand\ncompletedonbyteboundary.\n\uf06cWriteEnable(06H)command:WRENcommandisrequiredtosettheWriteEnableLatchbit(WEL)before\nissuingothercommandstochangedata.\n\uf06cSoftwareProtectionMode:TheBlockProtect(BP4,BP3,BP2,BP1,andBP0)bitsdefinethesectionof\nthememoryarraythatcanbereadbutnotchanged.\n\uf06cHardwareProtectionMode:WP#goinglowtoprotecttheCMP,BP0~BP4bitsandSRP0~1bits.\n\uf06cDeepPower-DownMode:Byenteringdeeppowerdownmode,theflashdeviceisignoresallcommands\nuntiltheReleasefromDeepPower-DownMode(B9H)command.\nNB25Q40A\n9NBSPINORFLASH\nTable-6.0NB25Q40AProtectedAreaSize(CMP=0)\nStatusRegisterContent MemoryContent\nBP4BP3BP2BP1BP0Blocks Addresses DensityPortion\nxx000NONE NONE NONE NONE\n00001 7 070000H-07FFFFH64KB Upper1/8\n000106and7060000H-07FFFFH128KBUpper1/4\n000114to7040000H-07FFFFH256KBUpper1/2\n01001 0 000000H-00FFFFH64KB Lower1/8\n010100and1000000H-01FFFFH128KBLower1/4\n010110to3000000H-03FFFFH256KBLower1/2\n0x1xX0to7000000H-07FFFFH512KB ALL\n10001 7 07F000H-07FFFFH4KBUpper1/128\n10010 7 07E000H-07FFFFH8KB Upper1/64\n10011 7 07C000H-07FFFFH16KBUpper1/32\n1010X 7 078000H-07FFFFH32KBUpper1/16\n10110 7 078000H-07FFFFH32KBUpper1/16\n11001 0 000000H-000FFFH4KBLower1/128\n11010 0 000000H-001FFFH8KB Lower1/64\n11011 0 000000H-003FFFH16KBLower1/32\n1110X 0 000000H-007FFFH32KBLower1/16\n11110 0 000000H-007FFFH32KBLower1/16\n1x1110to7000000H-07FFFFH512KB ALL\nNB25Q40A\n10NBSPINORFLASH\nTable-6.1NB25Q40AProtectedAreaSize(CMP=1)\nStatusRegisterContent MemoryContent\nBP4BP3BP2BP1BP0Blocks Addresses DensityPortion\nxx0000to7000000H-07FFFFH512KB ALL\n000010to6000000H-06FFFFH448KBLower7/8\n000100to5000000H-05FFFFH384KBLower3/4\n000110to3000000H-03FFFFH256KBLower1/2\n010011to7010000H-07FFFFH448KBUpper7/8\n010102to7020000H-07FFFFH384KBUpper3/4\n010114to7040000H-07FFFFH256KBUpper1/2\n0x1xxNONE NONE NONE NONE\n100010to7000000H-07EFFFH508KBLower127/128\n100100to7000000H-07DFFFH504KBLower63/64\n100110to7000000H-07BFFFH496KBLower31/32\n1010x0to7000000H-077FFFH480KBLower15/16\n101100to7000000H-077FFFH480KBLower15/16\n110010to7 001000-07FFFFH508KBUpper127/128\n110100to7 002000-07FFFFH504KBUpper63/64\n110110to7 004000-07FFFFH496KBUpper31/32\n1110x0to7 008000-07FFFFH480KBUpper15/16\n111100to7 008000-07FFFFH480KBUpper15/16\n1x111NONE NONE NONE NONE\nNotes:\n1.X=don’tcare\n2.Ifanyeraseorprogramcommandspecifiesamemorythatcontainsprotecteddataportion,thiscommand\nwillbeignored.\nNB25Q40A\n11NBSPINORFLASH\n9.COMMANDDESCRIPTION\nAllcommands,addressesanddataareshiftedinandoutofthedevice,beginningwiththemostsignificant\nbitonthefirstrisingedgeofSCLKafterCS#isdrivenlow.Then,theone-bytecommandcodemustbeshifted\nintothedevicestartingwiththemostsignificantbitonSI.EachbitislatchedontherisingedgeofSCLK.\nThecommandssupportedbyNB25Q40AarelistedinTable-7.Everycommandsequencestartswitha\none-bytecommandcode.Dependingonthecommand,thismightbefollowedbyaddressordatabytes,by\nbothornone.CS#mustbedrivenhighafterthelastbitofthecommandsequencehasbeencompleted.For\nthecommandsofRead,FastRead,ReadStatusRegister,ReleasefromDeepPower-Down,andReadDevice\nID,theshifted-incommandsequenceisfollowedbyadata-outsequence.Allreadcommandscanbecompleted\nafteranybitofthedata-outsequenceisshiftedout,andthenCS#mustbedrivenhightoreturntodeselected\nstatus.\nForthePageProgram(02H),SectorErase(20H),HalfBlockErase(52H),BlockErase(D8H),ChipErase\n(C7Hor60H),WriteStatusRegister(01H),WriteEnable(06H),WriteDisable(04H)orDeepPower-Down\n(B9H)commands,CS#mustbedrivenhighexactlyatabyteboundary,otherwisethecommandisrejected,\nandisnotexecuted.ThatmeansCS#mustbedrivenhighwhenthenumberofclockpulsesafterCS#being\ndrivenlowisanexactmultipleofeight.ForPageProgram,ifCS#isdrivenhighatanytimetheinputbyteis\nnotafullbyte,nothingwillhappenandWELwillnotbereset.\nNB25Q40A\n12NBSPINORFLASH\nTable-7.Commands(Standard/Dual/QuadSPI)\nCommandName Byte1Byte2Byte3Byte4Byte5Byte6n-Bytes\nWriteEnable 06H\nWriteDisable 04H\nWriteEnableforVolatileStatusRegister50H\nReadStatusRegister-1 05H(S7-S0) (continuous)\nReadStatusRegister-2 35H(S15-S8) (continuous)\nActiveStatusInterrupt 25H\nWriteStatusRegister 01HS7-S0S15-S8\nReadDataBytes 03HA23-A16A15-A8 A7-A0(D7-D0)(Nextbyte)(continuous)\nReadDataBytesatHigherSpeed 0BHA23-A16A15-A8 A7-A0dummy(D7-D0)(continuous)\nDualOutputFastRead 3BHA23-A16A15-A8 A7-A0dummy(D7-D0)(1)(continuous)\nDualI/OFastRead BBHA23-A8(2)A7-A0\nM7-M0(2)(D7-D0)(1)(Nextbyte)(Nextbyte)(continuous)\nQuadOutputFastRead 6BHA23-A16A15-A8 A7-A0dummy(D7-D0)(3)(continuous)\nQuadI/OFastRead EBHA23-A0\nM7-M0(4)dummy(5)(D7-D0)(3)(Nextbyte)(Nextbyte)(continuous)\nSetBurstwithWrap 77Hdummy\nW7-W0(7)\nPageErase 81HA23-A16A15-A8 A7-A0\nSectorErase 20HA23-A16A15-A8 A7-A0\nHalfBlockErase 52HA23-A16A15-A8 A7-A0\nBlockErase D8HA23-A16A15-A8 A7-A0\nChipErase C7/60H\nPageProgram 02HA23-A16A15-A8 A7-A0 D7-D0Nextbytecontinuous\nDualInputPageProgram A2HA23-A16A15-A8 A7-A0 D7-D0Nextbytecontinuous\nQuadInputPageProgram 32HA23-A16A15-A8 A7-A0 D7-D0Nextbytecontinuous\nEraseSecurityRegister(6)44HA23-A16A15-A8 A7-A0\nProgramSecurityRegister(6)42HA23-A16A15-A8 A7-A0 D7-D0D7-D0continuous\nReadSecurityRegister(6)48HA23-A16A15-A8 A7-A0dummy(D7-D0)(continuous)\nDeepPower-Down B9H\nReleasefromDeepPower-Down ABH\nReleasefromDeepPower-Down,\nReadElectronicSignatureABHdummydummydummy(DID7-DID0) (continuous)\nReadElectronicManufacturerID\n&DeviceID90Hdummydummy 00H(MID7-\nMID0)(DID7-\nDID0)(continuous)\nNB25Q40A\n13NBSPINORFLASH\nCommandName Byte1Byte2Byte3Byte4Byte5Byte6n-Bytes\nDualI/OReadElectronicManufacturerID\n&DeviceID92HdummyA7-A0,M7-M0(MID7-MID0)\n(DID7-DID0)(continuous)\nQuadI/OReadElectronic\nManufacturerID&DeviceID94HA23-A0,\nM7-M0dummy\n(MID7-MID0)\n(DID7-DID0)\n(8)(continuous)\nReadIdentification 9FH(MID7-\nMID0)(JDID15-\nJDID8)(JDID7-\nJDID0)(continuous)\nProgram/EraseSuspend 75/B0H\nProgram/EraseResume 7A/30H\nResetEnable 66H\nReset 99H\nReadUniqueID 4BH 00H 00H 00H dummy(UID7-UID0)(continuous)\nReadSFDPMode 5AHA23-A16A15-A8 A7-A0dummy(D7-D0)(continuous)\nContinuousReadModeReset FFH\nNotes:\n1.DualOutputdata\nIO0=(D6,D4,D2,D0)\nIO1=(D7,D5,D3,D1)\n2.DualInputAddress\nIO0=A22,A20,A18,A16,A14,A12,A10,A8,A6,A4,A2,A0,M6,M4,M2,M0\nIO1=A23,A21,A19,A17,A15,A13,A11,A9,A7,A5,A3,A1,M7,M5,M3,M1\n3.QuadOutputData\nIO0=(D4,D0,…..)\nIO1=(D5,D1,…..)\nIO2=(D6,D2,…..)\nIO3=(D7,D3,…..)\n4.QuadInputAddress\nIO0=A20,A16,A12,A8,A4,A0,M4,M0\nIO1=A21,A17,A13,A9,A5,A1,M5,M1\nIO2=A22,A18,A14,A10,A6,A2,M6,M2\nIO3=A23,A19,A15,A11,A7,A3,M7,M3\n5.FastReadQuadI/ODummyBitsandData\nIO0=(x,x,x,x,D4,D0,…)\nIO1=(x,x,x,x,D5,D1,…)\nIO2=(x,x,x,x,D6,D2,…)\nIO3=(x,x,x,x,D7,D3,…)\nNB25Q40A\n14NBSPINORFLASH\n6.SecurityRegistersAddress:\nSecurityRegister1:A23-A16=00H,A15-A8=10H,A7-A0=ByteAddress;\nSecurityRegister2:A23-A16=00H,A15-A8=20H,A7-A0=ByteAddress;\nSecurityRegister3:A23-A16=00H,A15-A8=30H,A7-A0=ByteAddress;\n7.DummybitsandWrapBits\nIO0=(x,x,x,x,x,x,W4,x)\nIO1=(x,x,x,x,x,x,W5,x)\nIO2=(x,x,x,x,x,x,W6,x)\nIO3=(x,x,x,x,x,x,x,x)\n8.Address,ContinuousReadModebits,Dummybits,ManufactureIDandDeviceID\nIO0=(A20,A16,A12,A8,A4,A0,M4,M0,x,x,x,x,MID4,MID0,DID4,DID0,…)\nIO1=(A21,A17,A13,A9,A5,A1,M5,M1,x,x,x,x,MID5,MID1,DID5,DID1,…)\nIO2=(A22,A18,A14,A10,A6,A2,M6,M2,x,x,x,x,MID6,MID2,DID6,DID2,…)\nIO3=(A23,A19,A15,A11,A7,A3,M7,M3,x,x,x,x,MID7,MID3,DID7,DID3,…)\nTablesofIDDefinition:\nTable-8.0NB25Q40AIDDefinition\nOperationCodeMID7-MID0 ID15-ID8 ID7-ID0\n9FH 40 13\n90H/92H/94H 12\nABH 12\nNB25Q40A\n15NBSPINORFLASH\n9.1WriteEnable(WREN)(06H)\nTheWriteEnable(06H)commandsetstheWriteEnableLatch(WEL)bit.TheWELbitmustbesetprior\ntoeveryPageProgram,PageErase,SectorErase,HalfBlockErase,BlockErase,ChipErase,WriteStatus\nRegisterandErase/ProgramSecurityRegistercommand.TheWRENcommandisenteredbydrivingChip\nSelect(CS#)Low,sendingthecommandcode,andthendrivingCS#High.\nFigure-3.WriteEnableSequenceDiagram\n9.2WriteDisable(WRDI)(04H)\nTheWriteDisable(04H)commandresetstheWriteEnableLatch(WEL)bitintheStatusRegisterto0.\nTheWRDIcommandisenteredbydrivingChipSelect(CS#)low,shiftingthecommandcode“04h”intotheSI\npinandthendrivingCS#high.NotethattheWELbitisautomaticallyresetafterPower-upanduponcompletion\noftheWriteStatusRegister,PageProgram,PageErase,SectorErase,HalfBlockErase,BlockErase,Chip\nErase,Erase/ProgramSecurityRegisterandResetcommands.\nFigure-4.WriteDisableSequenceDiagram\n9.3WriteEnableforVolatileStatusRegister(50H)\nThenon-volatileStatusRegisterbitscanalsobewrittentoasvolatilebits.Duringpowerupreset,thenon-\nvolatileStatusRegisterbitsarecopiedtoavolatileversionoftheStatusRegisterthatisusedduringdevice\noperation.Thisprovidesmoreflexibilitytochangethesystemconfigurationandmemoryprotectionschemes\nquicklywithoutwaitingforthetypicalnon-volatilebitwritecyclesoraffectingtheenduranceoftheStatus\nRegisternon-volatilebits.\nTowritethevolatileversionoftheStatusRegisterbits,theWriteEnableforVolatileStatusRegister(50H)\ncommandmustbeissuedandimmediatelyfollowedbytheWriteStatusRegister(01H)command.WriteEnable\nforVolatileStatusRegistercommand(Figure-5)willnotsettheWriteEnableLatch(WEL)bit,itisonlyvalidfor\nthenextWriteStatusRegistercommand,tochangethevolatileStatusRegisterbitvalues.\nNB25Q40A\n16NBSPINORFLASH\nFigure-5.WriteEnableforVolatileStatusRegisterSequenceDiagram\n9.4ReadStatusRegister(RDSR)(05Hor35H)\nTheReadStatusRegister(05Hor35H)commandallowstheStatusRegistertoberead.TheStatus\nRegistermaybereadatanytime,evenwhileaProgram,EraseorWriteStatusRegistercycleisinprogress.\nWhenoneofthesecyclesisinprogress,itisrecommendedtochecktheWriteInProgress(WIP)bitbefore\nsendinganewcommandtothedevice.ItisalsopossibletoreadtheStatusRegistercontinuously.For\ncommandcode“05H”,theSOwilloutputStatusRegisterbitsS7~S0.Andforcommandcode“35H”,theSO\nwilloutputStatusRegisterbitsS15~S8.\nFigure-6.ReadStatusRegisterSequenceDiagram\n9.5ActiveStatusInterrupt(ASI)(25H)\nTheActiveStatusInterrupt(25h)commandprovidesanalternativemethodtoreadtheWriteInProgress\n(WIP)bit.TheSOpinoutputstheWIPbitcontinuouslywiththeASIcommand.TheSOpincanbeconnected\ntoaninterruptlineofthehostcontroller,andthehostcontrollerremainsinsleepmodeuntiltheSOpinindicates\nthatthedeviceisreadyforthenextcommand.\nTheWIPbitcanbereadatanytime,includingwhileaninternallyself-timedprogramoreraseoperationis\ninprogress.ToenabletheASIcommand,theCS#pinmustfirstbeassertedandtheopcodeof25hmustbe\nclockedintothedevice.\nThevalueofWIPisthenoutputontheSOpinandiscontinuouslyupdatedbythedeviceforaslongas\ntheCS#pinremainsasserted.AdditionalclocksontheSCLKpinarenotrequired.IftheWIPbitchangesfrom\n1to0whiletheCS#pinisasserted,theSOpinwillchangefrom1to0whentheprogram/eraseoperationis\ncompleted.(TheWIPbitcannotchangefrom0to1duringanoperation,soiftheSOpinalreadyis0,itwillnot\nchange.)\nDesertingtheCS#pinwillterminatetheASIoperationandputtheSOpinintoahigh-impedancestate.\nTheCS#pincanbedesertedatanytimeanddoesnotrequirethatafullbyteofdataberead.\nThesequenceofissuingASIcommandis:CS#goeslow->sendActiveStatusInterrupt(25H)command\nNB25Q40A\n17NBSPINORFLASH\ncode->WriteInProgress(WIP)dataoutonSO.\nFigure-7.ActiveStatusInterruptSequenceDiagram\n9.6WriteStatusRegister(WRSR)(01H)\nTheWriteStatusRegister(01H)commandallowsnewvaluestobewrittentotheStatusRegister.Before\nitcanbeaccepted,aWriteEnable(06H)commandmustpreviouslyhavebeenexecuted.AftertheWrite\nEnablecommandhasbeendecodedandexecuted,thedevicesetstheWriteEnableLatch(WEL).\nTheWRSRcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcodeand\nthedatabyteonDataInput(SI).\nTheWRSRcommandhasnoeffectonS15,S10,S1andS0oftheStatusRegister.CS#mustbedriven\nhighafterthesixteenthbitofthedatabytehasbeenlatchedin.Ifnot,theWRSRcommandisnotexecuted.\nAssoonasCS#isdrivenHigh,theself-timedWriteStatusRegistercycle(whosedurationistW)isinitiated.\nWhiletheWriteStatusRegistercycleisinprogress,theStatusRegistermaystillbereadtocheckthevalue\noftheWriteInProgress(WIP)bit.TheWIPbitis1duringtheself-timedWriteStatusRegistercycleandis0\nwhenitiscompleted.Whenthecycleiscompleted,theWELbitisreset.\nTheWRSRcommandallowstheusertochangethevaluesoftheBlockProtect(BP4,BP3,BP2,BP1,\nBP0)bits.TheWRSRcommandalsoallowstheusertosetorresettheStatusRegisterProtect(SRP1and\nSRP0)bitsinaccordancewiththeWriteProtect(WP#)signal.TheStatusRegisterProtect(SRP1andSRP0)\nbitsandWP#signalallowthedevicetobeputintheHardwareProtectionMode.TheWRSRcommandisnot\nexecutedoncetheHardwareProtectionModeisentered.\nCS#mustgohighexactlyatthe16bitdataboundary;otherwisethecommandwillberejectedandnot\nexecuted.Theself-timedWriteStatusRegistercycletime(tW)isinitiatedassoonasCS#goeshigh.The\nWIPbitstillcanbecheckedduringtheWriteStatusRegistercycleisinprogress.TheWIPissetto1during\ntWandisresetto0alongwiththeWELbitwhenWriteStatusRegisterCycleiscompleted.\nFigure-8.WriteStatusRegisterSequenceDiagram\n\nNB25Q40A\n18NBSPINORFLASH\n9.7ReadDataBytes(READ)(03H)\nThedeviceisfirstselectedbydrivingChipSelect(CS#)Low.ThecommandcodefortheReadData\nBytes(03H)commandisfollowedbya3-byteaddress(A23-A0),witheachbitlatched-inontherisingedgeof\nSerialClock(SCLK).Thenthememorycontents,atthataddress,isshiftedoutonDataOutput(SO),with\neachbitshiftedoutatamaximumfrequencyfRonthefallingedgeofSCLK.\nThecommandsequenceisshowninFigure-9.Thefirstbyteaddressedcanbeatanylocation.The\naddressisautomaticallyincrementedtothenexthigheraddressaftereachbyteofdataisshiftedout.The\nwholememorycan,therefore,bereadwithasingleREADcommand.Whenthehighestaddressisreached,\ntheaddresscounterrollsoverto000000h,allowingthereadsequencetobecontinuedindefinitely.\nTheREADcommandisterminatedbydrivingCS#High.CS#canbedrivenHighatanytimeduringdata\noutput.AnyREADcommandtothememoryarray,whileanErase,ProgramorWritecycleisinprogress,is\nrejectedwithouthavinganyeffectsonthecyclethatisinprogress.\nFigure-9.ReadDataBytesSequenceDiagram\n9.8ReadDataBytesatHigherSpeed(FAST_READ)(0BH)\nThedeviceisfirstselectedbydrivingChipSelect(CS#)Low.ThecommandcodefortheReadData\nBytesatHigherSpeed(0BH)commandisfollowedbya3-byteaddress(A23-A0)andadummybyte,each\nbitbeinglatched-inontherisingedgeofSerialClock(SCLK).Thenthememorycontents,atthataddress,is\nshiftedoutonDataOutput(SO),witheachbitshiftedoutatamaximumfrequencyfConthefallingedgeof\nSCLK.\nThecommandsequenceisshowninFigure-10.Thefirstbyteaddressedcanbeatanylocation.The\naddressisautomaticallyincrementedtothenexthigheraddressaftereachbyteofdataisshiftedout.The\nwholememorycan,therefore,bereadwithasingleFAST_READcommand.Whenthehighestaddressis\nreached,theaddresscounterrollsoverto000000h,allowingthereadsequencetobecontinuedindefinitely.\nTheFAST_READcommandisterminatedbydrivingCS#High.CS#canbedrivenHighatanytime\nduringdataoutput.AnyFAST_READcommand,whileanErase,ProgramorWritecycleisinprogress,is\nrejectedwithouthavinganyeffectsonthecyclethatisinprogress.\nNB25Q40A\n19NBSPINORFLASH\nFigure-10.ReadDataBytesatHigherSpeedSequenceDiagram\n9.9DualOutputFastRead(DREAD)(3BH)\nTheDualOutputFastRead(3BH)issimilartothestandardFastRead(0BH)commandexceptthatdata\nisoutputontwopins,SI(IO0)andSO(IO1),insteadofjustSO.Thisallowsdatatobetransferredfromthe\nNB25Q40AattwicetherateofstandardSPIdevices.TheDREADcommandisidealforquicklydownloading\ncodefromtheflashtoRAMuponpower-uporforapplicationsthatcachecode-segmentstoRAMfor\nexecution.\nLiketheFastReadcommand,theDREADcommandcanoperateatthehighestpossiblefrequencyoffT.\nThisisaccomplishedbyaddingeight“dummyclocksafterthe24-bitaddressasshowninFigure-11.The\ndummyclocksallowthedevice’sinternalcircuitsthetimerequiredforsettinguptheinitialaddress.Theinput\ndataduringthedummyclockis“don’tcare”.However,theSIpinshouldbeinahigh-impedancestatepriorto\nthefallingedgeofSLCKforthefirstdataout.\nFigure-11.DualOutputFastReadSequenceDiagram\n\nNB25Q40A\n20NBSPINORFLASH\n9.10DualI/OFastRead(2READ)(BBH)\nTheDualI/OFastRead(BBH)commandallowsforimprovedrandomaccesswhilemaintainingtwoIO\npins,SI(IO0)andSO(IO1).ItissimilartotheDualOutputFastRead(3BH)commandbutwiththeabilityto\ninputtheaddressbits(A23-0)twobitsperclock.Thisreducedcommandoverheadmayallowforcode\nexecution(XIP)directlyfromtheDualSPIinsomeapplications.\nThe2READcommandenablesdoublethroughputofSerialFlashinreadmode.Theaddressislatched\nonrisingedgeofSCLK,andtwobitsofdata(interleave2I/Opins)areshiftedoutonthefallingedgeof\nSCLKatamaximumfrequencyfT.Thefirstaddresscanbeatanylocation.Theaddressisautomatically\nincreasedtothenexthigheraddressaftereachbytedataisshiftedout,sothewholememorycanberead\noutwithasingle2READcommand.Theaddresscounterrollsoverto0whenthehighestaddresshasbeen\nreached.The2READcommandisshowninFigure-12.\nFigure-12.DualI/OFastReadSequenceDiagram(M5-4≠(1,0))\n9.11DualI/OFastReadwith“ContinuousReadMode”(BBH)\nTheDualI/OFastRead(BBH)commandsupportsDualI/OFastReadwith“ContinuousReadMode”\nwhichcanfurtherreducecommandoverheadbysettingthe“ContinuousReadMode”bits(M7-0)afterthe\ninput3-byteaddress(A23-A0).Ifthe“ContinuousReadMode”bits(M5-4)=(1,0),thenthenextDualI/O\nFastReadcommand(afterCS#israisedandthenlowered)doesnotrequiretheBBHcommandcode.\nIfthe“ContinuousReadMode”bits(M5-4)donotequal(1,0),thenextcommandrequiresthefirstBBH\ncommandcode,thusreturningtonormaloperation.A“ContinuousReadMode”Resetcommandcanbeused\ntoreset(M5-4)beforeissuinganormalcommand.\nNB25Q40A\n21NBSPINORFLASH\nFigure-13.DualI/OFastReadwith“ContinuousReadMode”SequenceDiagram(M5-4=(1,0))\nNote:DualI/OFastReadwith“ContinuousReadMode”,if(M5-4)=(1,0).Ifnotusing“ContinuousRead\nMode”recommendsetting(M5-4)≠(1,0).\n9.12QuadOutputFastRead(QREAD)(6BH)\nTheQuadOutputFastRead(6BH)commandissimilartotheDualOutputFastRead(3BH)command\nexceptthatdataisoutputonfourpins,IO0,IO1,IO2,andIO3.AQuadEnable(QE)ofStatusRegister-2\nmustbeexecutedbeforethedevicewillaccepttheQREADCommand.(TheQEbitmustequal“1”).The\nQREADCommandallowsdatatobetransferredatfourtimestherateofstandardSPIdevices.\nTheQREADcommandcanoperateatahigherfrequencythanthetraditionalReadDatacommand.This\nisaccomplishedbyaddingeight“dummy”clocksafterthe24-bitaddressasshowninFigure-14.Thedummy\nclocksallowthedevice\'sinternalcircuitsthetimerequiredforsettinguptheinitialaddress.Theinputdata\nduringthedummyclocksis“don’tcare.”However,theIOpinsshouldbeinahigh-impedancestatepriorto\nthefallingedgeofSCLKforthefirstdataout.\nNB25Q40A\n22NBSPINORFLASH\nFigure-14.QuadOutputFastReadSequenceDiagram\n9.13QuadI/OFastRead(4READ)(EBH)\nTheQuadI/OFastRead(EBH)commandissimilartotheDualI/OFastRead(BBH)commandexcept\nthataddressanddatabitsareinputandoutputthroughfourpins,SI(IO0),SO(IO1),WP(IO2)andHOLD\n(IO3).Sixdummyclocksarerequiredpriortothedataoutput.AQuadEnable(QE)ofStatusRegister-2must\nbeexecutedbeforethedevicewillacceptthe4READCommand.(TheQEbitmustequal“1”).TheQuadI/O\ndramaticallyreducescommandoverheadallowingfasterrandomaccessforcodeexecution(XIP)directly\nfromtheQuadSPI.\nThe4READcommandenablesquadthroughputofSerialFlashinreadmode.Theaddressislatchedon\nrisingedgeofSCLK,anddatafourbitsofdata(interleaveon4I/Opins)shiftoutonthefallingedgeofSCLK\natamaximumfrequencyfQ.Thefirstaddresscanbeanylocation.Theaddressisautomaticallyincreasedto\nthenexthigheraddressaftereachbytedataisshiftedout,sothewholememorycanbereadoutwitha\nsingle4READcommand.Theaddresscounterrollsoverto0whenthehighestaddresshasbeenreached.\nOncewriting4READcommand,thefollowingaddress/dummy/dataoutwilltransfer4-bitsperclockcycle\ninsteadoftheprevious1-bit.\nThesequenceofissuing4READcommandis:CS#goeslow->sendQuadI/OFastRead(EBH)\ncommand->24-bitaddressinterleaveonIO3,IO2,IO1andIO0->2+4dummycycles->dataoutinterleave\nonIO3,IO2,IO1andIO0->end4READoperationbydrivingCS#highatanytimeduringdataout,asshown\ninFigure-15.\nAnothersequenceofissuing4READcommandespeciallyusefulinrandomaccessis:CS#goeslow->\nsendQuadI/OFastRead(EBH)command->24-bitaddressinterleaveonIO3,IO2,IO1andIO0->\n“ContinuousReadMode”byteM[7:0]->4dummycycles->dataoutuntilCS#goeshigh->CS#goeslow\n(reduce4READcommand)->24-bitrandomaccessaddress.\nIntheContinuousReadMode,the“ContinuousReadMode”bitsM[5:4]=(1,0)canmakethismode\ncontinueandreducethenext4READcommand.OnceM[5:4]≠(1,0)andafterCS#israisedandthen\nlowered,thesystemthenwillescapefromtheenhancedperformancemodeandreturntonormaloperation.\nA“ContinuousReadMode”Resetcommandcanbeusedtoreset(M5-4)beforeissuingnormalcommands.\nNB25Q40A\n23NBSPINORFLASH\n4\n5\n6WhileProgram/Erase/WriteStatusRegistercycleisinprogress,the4READcommandisrejectedwithoutany\nimpactontheProgram/Erase/WriteStatusRegisteroperation.\nFigure-15.QuadI/OFastReadSequenceDiagram(M5-4≠(1,0))\n9.14QuadI/OFastReadwith“ContinuousReadMode”(EBH)\nTheQuadI/OFastRead(EBH)commandsupportsQuadI/OFastReadwith“ContinuousReadMode”\nwhichcanfurtherreducecommandoverheadbysettingthe“ContinuousReadMode”bits(M7-0)afterthe\ninput3-byteaddress(A23-A0).Ifthe“ContinuousReadMode”bits(M5-4)=(1,0),thenthenextQuadI/O\nFastRead(EBH)command(afterCS#israisedandthenlowered)doesnotrequiretheEBHcommandcode.\nIfthe“ContinuousReadMode”bits(M5-4)donotequal(1,0),thenextcommandrequiresthefirstEBH\ncommandcode,thusreturningtonormaloperation.A“ContinuousReadMode”Resetcommandcanbeused\ntoreset(M5-4)beforeissuinganormalcommand.\nNB25Q40A\n24NBSPINORFLASH\n4\n5\n6\n4\n5Figure-16.QuadI/OFastReadwith“ContinuousReadMode”SequenceDiagram(M5-4=(1,0))\nNote:QuadI/OFastReadwith“ContinuousReadMode”,if(M5-4)=(1,0).Ifnotusing“ContinuousRead\nMode”recommendsetting(M5-4)≠(1,0).\n9.15SetBurstwithWrap(77H)\nTheSetBurstwithWrap(77h)commandisusedinconjunctionwithQuadI/OFastRead(EBH)command\ntoaccessafixedlengthof8/16/32/64-bytesectionwithina256-bytepage,instandardSPImode.\nTheSetBurstwithWrapcommandsequence:CS#goeslow->SendSetBurstwithWrap(77h)command\n->Send24dummybits->Send8bits“Wrapbits”->CS#goeshigh.\nIftheW6-W4bitsaresetbytheSetBurstwithWrapcommand,allthefollowingQuadI/OFastRead\ncommandswillusetheW6-W4settingtoaccessthe8/16/32/64-bytesectionwithinanypage.Toexitthe“Wrap\nAround”functionandreturntonormalreadoperation,anotherSetBurstwithWrapcommandshouldbeissued\ntosetW4=1.\nNB25Q40A\n25NBSPINORFLASH\nTable-9.BurstLengthandWrap\nW6,W5W4=0 W4=1(default)\nWrap\nAroundWrap\nLengthWrap\nAroundWrap\nLength\n0,0 Yes 8-byte No N/A\n0,1 Yes 16-byte No N/A\n1,0 Yes 32-byte No N/A\n1,1 Yes 64-byte No N/A\nFigure-17.SetBurstwithWrapSequenceDiagram\n9.16PageErase(PE)(81H)\nThePageErase(81H)commandsetsallbitsto1(FFh)insidethechosenpage.Beforeitcanbeaccepted,\naWriteEnable(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnablecommandhas\nbeendecoded,thedevicesetstheWriteEnableLatch(WEL).\nThePEcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcode,andthree\naddressbytesonDataInput(SI).AnyaddressinsidethepageisavalidaddressforthePEcommand.CS#\nmustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-18.TheCS#mustgohighexactlyatthebyteboundary(after\ntheleastsignificantbitofthethirdaddressbyteislatched-in);otherwise,thecommandwillberejectedandnot\nexecuted.AssoonasCS#isdrivenHigh,theself-timedPageErasecycle(withdurationtPE)isinitiated.While\nthePageErasecycleisinprogress,theStatusRegistermaybereadtocheckthevalueoftheWriteInProgress\n(WIP)bit.TheWIPbitis1duringtheself-timedPageErasecycleandis0whenitiscompleted.Atsome\nunspecifiedtimebeforethecycleiscompleted,theWELbitisreset.\nAPEcommandmaybeappliedonlytoapagewhichisnotprotectedbytheBlockProtect(BP4,BP3,BP2,\nBP1,BP0)bits.\nNB25Q40A\n26NBSPINORFLASH\nFigure-18.PageEraseSequenceDiagram\n9.17SectorErase(SE)(20H)\nTheSectorErase(20H)commandsetsallbitsto1(FFh)insidethechosensector.Beforeitcanbe\naccepted,aWriteEnable(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnable\ncommandhasbeendecoded,thedevicesetstheWriteEnableLatch(WEL).\nTheSEcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcode,andthree\naddressbytesonDataInput(SI).AnyaddressinsidethesectorisavalidaddressfortheSEcommand.CS#\nmustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-19.TheCS#mustgohighexactlyatthebyteboundary(after\ntheleastsignificantbitofthethirdaddressbyteislatched-in);otherwise,thecommandwillberejectedandnot\nexecuted.AssoonasCS#isdrivenHigh,theself-timedSectorErasecycle(withdurationtSE)isinitiated.\nWhiletheSectorErasecycleisinprogress,theStatusRegistermaybereadtocheckthevalueoftheWriteIn\nProgress(WIP)bit.TheWIPbitis1duringtheself-timedSectorErasecycleandis0whenitiscompleted.At\nsomeunspecifiedtimebeforethecycleiscompleted,theWELbitisreset.\nASEcommandmaybeappliedonlytoasectorwhichisnotprotectedbytheBlockProtect(BP4,BP3,\nBP2,BP1,BP0)bits.\nFigure-19.SectorEraseSequenceDiagram\n9.18HalfBlockErase(HBE)(52H)\nTheHalfBlockErase(52H)commandsetsallbitsto1(FFh)insidethechosenblock.Beforeitcanbe\naccepted,aWriteEnable(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnable\ncommandhasbeendecoded,thedevicesetstheWriteEnableLatch(WEL).\nTheHBEcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcode,and\nthreeaddressbytesonDataInput(SI).AnyaddressinsidetheblockisavalidaddressfortheHBEcommand.\nCS#mustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-20.TheCS#mustgohighexactlyatthebyteboundary(after\ntheleastsignificantbitofthethirdaddressbyteislatched-in);otherwise,thecommandwillberejectedandnot\nexecuted.AssoonasCS#isdrivenHigh,theself-timedHalfBlockErasecycle(withdurationtBE1)isinitiated.\nWhiletheHalfBlockErasecycleisinprogress,theStatusRegistermaybereadtocheckthevalueoftheWrite\nInProgress(WIP)bit.TheWIPbitis1duringtheself-timedBlockErasecycleandis0whenitiscompleted.\nNB25Q40A\n27NBSPINORFLASH\nAtsomeunspecifiedtimebeforethecycleiscompleted,theWELbitisreset.\nAHBEcommandmaybeappliedonlytoahalfblockwhichisnotprotectedbytheBlockProtect(BP4,\nBP3,BP2,BP1,BP0)bits.\nFigure-20.HalfBlockEraseSequenceDiagram\n9.19BlockErase(BE)(D8H)\nTheBlockErase(D8H)commandsetsallbitsto1(FFh)insidethechosenblock.Beforeitcanbeaccepted,\naWriteEnable(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnable06Hcommand\nhasbeendecoded,thedevicesetstheWriteEnableLatch(WEL).\nTheBEcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcode,andthree\naddressbytesonDataInput(SI).AnyaddressinsidetheblockisavalidaddressfortheBEcommand.CS#\nmustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-21.CS#mustbedrivenHighaftertheleastsignificantbitof\nthethirdaddressbyteislatchedin,otherwisetheBEcommandisnotexecuted.AssoonasCS#isdrivenHigh,\ntheself-timedBlockErasecycle(whosedurationistBE2)isinitiated.WhiletheBlockErasecycleisinprogress,\ntheStatusRegistermaybereadtocheckthevalueoftheWriteInProgress(WIP)bit.TheWIPbitis1during\ntheself-timedBlockErasecycleandis0whenitiscompleted.Atsomeunspecifiedtimebeforethecycleis\ncompleted,theWELbitisreset.\nABEcommandmaybeappliedonlytoablockwhichisnotprotectedbytheBlockProtect(BP4,BP3,\nBP2,BP1,BP0)bits.\nFigure-21.BlockEraseSequenceDiagram\n9.20ChipErase(CE)(60HorC7H)\nTheChipErase(60HorC7H)commandsetsallbitsto1(FFh).Beforeitcanbeaccepted,aWriteEnable\n(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnablecommandhasbeendecoded,\nthedevicesetstheWriteEnableLatch(WEL).\nTheCEcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcodeonData\nInput(SI).CS#mustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-22.CS#mustbedrivenHighaftertheeighthbitofthe\ncommandcodeislatchedin,otherwisetheCEcommandisnotexecuted.AssoonasCS#isdrivenHigh,the\nself-timedChipErasecycle(withdurationtCE)isinitiated.WhiletheChipErasecycleisinprogress,theStatus\nNB25Q40A\n28NBSPINORFLASH\nRegistermaybereadtocheckthevalueoftheWriteInProgress(WIP)bit.TheWIPbitis1duringtheself-\ntimedChipErasecycleandis0whenitiscompleted.Atsomeunspecifiedtimebeforethecycleiscompleted,\ntheWELbitisreset.\nTheCEcommandisexecutedonlyifallBlockProtect(BP4,BP3,BP2,BP1,BP0)bitsare0.TheCE\ncommandisignoredifone,ormoreblocksareprotected.\nFigure-22.ChipEraseSequenceDiagram\n9.21PageProgram(PP)(02H)\nThePageProgram(02H)commandallowsbytestobeprogrammedinthememory.Beforeitcanbe\naccepted,aWriteEnable(06H)commandmusthavepreviouslybeenexecuted.AftertheWriteEnable\ncommandhasbeendecoded,thedevicesetstheWriteEnableLatch(WEL).\nThePPcommandisenteredbydrivingChipSelect(CS#)Low,followedbythecommandcode,three\naddressbytesandatleastonedatabyteonDataInput(SI).Ifthe8leastsignificantaddressbits(A7-A0)are\nnotallzero,alltransmitteddatathatgoesbeyondtheendofthecurrentpageareprogrammedfromthestarting\naddressofthesamepage(fromtheaddresswhose8leastsignificantbits(A7-A0)areallzero).CS#mustbe\ndrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-23.Ifmorethan256bytesaresenttothedevice,previously\nlatcheddataarediscarded,andthelast256databytesareguaranteedtobeprogrammedcorrectlywithinthe\nsamepage.Iflessthan256Databytesaresenttodevice,theyarecorrectlyprogrammedattherequested\naddresseswithouthavinganyeffectsontheotherbytesofthesamepage.\nCS#mustbedrivenHighaftertheeighthbitofthelastdatabytehasbeenlatchedin,otherwisethePP\ncommandisnotexecuted.\nAssoonasCS#isdrivenHigh,theself-timedPageProgramcycle(withdurationtPP)isinitiated.While\nthePageProgramcycleisinprogress,theStatusRegistermaybereadtocheckthevalueoftheWIPbit.The\nWIPbitis1duringtheself-timedPageProgramcycleandis0whenitiscompleted.Atsomeunspecifiedtime\nbeforethecycleiscompleted,theWELbitisreset.\nAPPcommandmaybeappliedonlytoapagewhichisnotprotectedbytheBlockProtect(BP4,BP3,BP2,\nBP1,BP0)bits.\nNB25Q40A\n29NBSPINORFLASH\nFigure-23.PageProgramSequenceDiagram\n9.22DualInputPageProgram(DPP)(A2H)\nTheDualInputPageProgram(A2H)commandissimilartothestandardPageProgramcommandand\ncanbeusedtoprogramanywherefromasinglebyteofdataupto256bytesofdataintopreviouslyerased\nmemorylocations.TheDPPcommandallowstwobitsofdatatobeclockedintothedeviceoneveryclockcycle\nratherthanjustone.\nAWriteEnable(06H)commandmustbeexecutedtosettheWriteEnableLatch(WEL)bitbeforesending\ntheDPPcommand.TheDualInputPageProgrammingtakestwopins:IO0,IO1asdatainput,whichcan\nimproveprogrammeraswellasin-systemapplicationperformance.Theotherfunctiondescriptionsareas\nsameasthestandardpageprogram.\nThesequenceofissuingDPPcommandis:CS#goeslow->sendDualInputPageProgram(A2H)\ncommandcode->3-byteaddressonSI->atleast1-byteondataonIO[1:0]->CS#goeshigh.\nADPPcommandmaybeappliedonlytoapagewhichisnotprotectedbytheBlockProtect(BP4,BP3,\nBP2,BP1,BP0)bits.\nNB25Q40A\n30NBSPINORFLASH\nFigure-24.DualInputPageProgramDiagram\n9.23QuadInputPageProgram(QPP)(32H)\nTheQuadInputPageProgram(32H)commandisforprogrammingthememorytobe"0".AWriteEnable\ncommandmustbeexecutedtosettheWriteEnableLatch(WEL)bitandQuadEnable(QE)bitto"1"before\nsendingtheQPPcommand.TheQuadInputPageProgrammingusesfourpins:IO0,IO1,IO2,andIO3as\ndatainput,whichcanimproveprogrammeraswellasin-systemapplicationperformance.TheQPPoperation\nsupportsfrequenciesasfastasfQPP.Theotherfunctiondescriptionsareassameasstandardpageprogram.\nThesequenceofissuingQPPcommandis:CS#goeslow->sendQuadInputPageProgram(32H)\ncommandcode->3-byteaddressonIO0->atleast1-byteondataonIO[3:0]->CS#goeshigh.\nAQPPcommandmaybeappliedonlytoapagewhichisnotprotectedbytheBlockProtect(BP4,BP3,\nBP2,BP1,BP0)bits.\nNB25Q40A\n31NBSPINORFLASH\nFigure-25.QuadInputPageProgramSequenceDiagram\n\nNB25Q40A\n32NBSPINORFLASH\n9.24EraseSecurityRegister(ERSCUR)(44H)\nTherearethree256-byteSecurityRegisterswhichcanbeerasedandprogrammedindividually.These\nregistersmaybeusedbysystemmanufacturerstostoresecurityandotherimportantinformationseparately\nfromthemainmemoryarray.\nTheEraseSecurityRegister(44H)commandisliketheSectorErase(20H)command.AWriteEnable\ncommandmustbeexecutedbeforethedevicewillaccepttheERSCURCommand(StatusRegisterbitWEL\nmustequal1).ThecommandisinitiatedbydrivingtheCS#pinlowandshiftingthecommandcode“44H”\nfollowedbya24-bitaddress(A23-A0)toeraseoneofthesecurityregisters.\nTheERSCURcommandsequenceisshowninFigure-26.TheCS#pinmustbedrivenhighaftertheeighth\nbitofthelastaddressbyteislatched.Ifthisisnotdone,thecommandwillnotbeexecuted.AfterCS#isdriven\nhigh,theself-timedERSCURoperationwillcommenceforatimedurationoftSE.\nWhiletheEraseSecurityRegistercycleisinprogress,theReadStatusRegistercommand(05H)maystill\nbeaccessedforcheckingthevalueoftheWriteinProgress(WIP)bit.TheWIPbitisa1duringtheerasecycle\nandbecomesa0whenthecycleisfinishedandthedeviceisreadytoacceptothercommandsagain.Afterthe\nEraseSecurityRegistercyclehasfinished,theWELbitintheStatusRegisterisclearedto0.TheSecurity\nRegisterLockBits(LB3-1)intheStatusRegisterareOTPandcanbeusedtoprotectthesecurityregisters.\nOncetheLBbitissetto1,thecorrespondingsecurityregisterwillbepermanentlylocked,andanERSCUR\ncommandtothatregisterwillbeignored.\nTable-10.0EraseSecurityRegisterAddress\nADDRESS A23-16 A15-12 A11-8 A7-0\nSecurityRegister#1 00h 0001 0000Don’tcare\nSecurityRegister#2 00h 0010 0000Don’tcare\nSecurityRegister#3 00h 0011 0000Don’tcare\nFigure-26.EraseSecurityRegisterSequenceDiagram\n9.25ProgramSecurityRegister(PRSCUR)(42H)\nTheProgramSecurityRegister(42H)commandissimilartothePageProgram(02H)command.Itallows\nfromonebyteto256bytesofsecurityregisterdatatobeprogrammedatpreviouslyerased(FFh)memory\nlocations.AWriteEnable(06H)commandmustbeexecutedbeforethedevicewillacceptthePRSCUR\nCommand(StatusRegisterbitWEL=1).ThecommandisinitiatedbydrivingtheCS#pinlowthenshiftingthe\ncommandcode“42H”followedbya24-bitaddress(A23-A0)andatleastonedatabyte,intotheSIpin.The\nCS#pinmustbeheldlowfortheentirelengthofthecommandwhiledataisbeingsenttothedevice.\nThePRSCURcommandsequenceisshowninFigure-27.TheSecurityRegisterLockBits(LB3-1)inthe\nStatusRegisterareOTPcanbeusedtoprotectthesecurityregisters.OnceSecurityRegisterLockBit(LB3-\n1)issetto1,thecorrespondingsecurityregisterwillbepermanentlylocked,andaPRSCURcommandtothat\nregisterwillbeignored.\nNB25Q40A\n33NBSPINORFLASH\nTable-10.1ProgramSecurityRegisterAddress\nADDRESS A23-16 A15-12 A11-8 A7-0\nSecurityRegister#1 00h 0001 0000ByteAddress\nSecurityRegister#2 00h 0010 0000ByteAddress\nSecurityRegister#3 00h 0011 0000ByteAddress\nFigure-27.ProgramSecurityRegisterSequenceDiagram\n9.26ReadSecurityRegister(RDSCUR)(48H)\nTheReadSecurityRegister(48H)commandissimilartotheFastRead(0BH)commandandallowsone\normoredatabytestobesequentiallyreadfromoneofthethreesecurityregisters.Thecommandisinitiated\nbydrivingtheCS#pinlowandthenshiftingthecommandcode“48H”followedbya24-bitaddress(A23-A0)\nandeight“dummy”clocksintotheSIpin.ThecodeandaddressbitsarelatchedontherisingedgeoftheSCLK\npin.Aftertheaddressisreceived,andfollowingtheeightdummycycles,thedatabyteoftheaddressedmemory\nlocationwillbeshiftedoutontheSOpinonthefallingedgeofSCLKwiththemostsignificantbit(MSB)first.\nThefirstbyteaddressedcanbeatanylocation.Thebyteaddressisautomaticallyincrementedtothenextbyte\naddressaftereachbyteofdataisshiftedout.Oncethebyteaddressreachesthelastbyteoftheregister(byte\nFFh),itwillresetto00h,thefirstbyteoftheregister,andcontinuetoincrement.Thecommandiscompleted\nbydrivingCS#high.\nTheRDSCURcommandsequenceisshowninFigure-28.IfaRDSCURcommandisissuedwhilean\nErase,Program,orWritecycleisinprocess(WriteinProgress(WIP)=1),thecommandisignoredandwillnot\nhaveanyeffectonthecurrentcycle.TheRDSCURcommandallowseachbitbeingshiftedoutonSOpinata\nMaxfrequencyfC,onthefallingedgeofSCLK.\nTable-10.2ReadSecurityRegisterAddress\nADDRESS A23-16 A15-12 A11-8 A7-0\nSecurityRegister#1 00h 0001 0000ByteAddress\nSecurityRegister#2 00h 0010 0000ByteAddress\nSecurityRegister#3 00h 0011 0000ByteAddress\nNB25Q40A\n34NBSPINORFLASH\nFigure-28.ReadSecurityRegisterSequenceDiagram\n9.27DeepPower-Down(DP)(B9H)\nExecutingtheDeepPower-Down(B9H)commandistheonlywaytoplacethedeviceinthelowestpower\nconsumptionmode(theDeepPower-Downmode).Itcanalsobeusedasanextrasoftwareprotection\nmechanismsthedeviceisnotinactiveuse,allWrite,ProgramandErasecommandsareignored.\nDrivingChipSelect(CS#)HighdeselectsthedeviceandputsthedeviceintheStandbymode(ifthere\nisnointernalcyclecurrentlyinprogress).However,StandbymodeisnottheDeepPower-Downmode.The\nDeepPower-DownmodecanonlybeenteredbyexecutingtheDPcommand,toreducethestandbycurrent\n(fromISB1toISB2).\nOncethedevicehasenteredtheDeepPower-Downmode,allcommandsareignoredexcepttheRelease\nfromDeepPower-Down,ReadElectronicSignature(ABH)command.Thiscommandreleasesthedevicefrom\nthismodeandalsooutputstheDeviceIDonDataOutput(SO).\nTheDeepPower-DownmodeautomaticallystopsatPower-Down,andthedevicealwaysPowers-upin\ntheStandbymode.TheDPcommandisenteredbydrivingCS#Low,followedbythecommandcodeonData\nInput(SI).CS#mustbedrivenLowfortheentiredurationofthesequence.\nThecommandsequenceisshowninFigure-29.CS#mustbedrivenHighaftertheeighthbitofthe\ncommandcodehasbeenlatchedin,otherwisetheDeepPower-Down(B9H)commandisnotexecuted.As\nsoonasCS#isdrivenHigh,adelayoftDPoccursbeforethesupplycurrentisreducedtoISB2andtheDeep\nPower-Downmodeisentered.\nAnyDPcommand,whileanErase,ProgramorWritecycleisinprogress,isrejectedwithouthavingany\neffectsonthecyclethatisinprogress.\nNB25Q40A\n35NBSPINORFLASH\nFigure-29.DeepPower-DownSequenceDiagram\n9.28ReleaseformDeepPower-Down(RDP),ReadElectronicSignature(RES)(ABH)\nOncethedevicehasenteredtheDeepPower-Downmode,allcommandsareignoredexcepttheRelease\nfromDeepPower-Down,ReadElectronicSignature(ABH)command.Executingthiscommandtakesthe\ndeviceoutoftheDeepPower-Downmode.\nPleasenotethatthisisnotthesameasorevenasubsetof,theJEDEC16-bitElectronicSignaturethatis\nreadbytheReadIdentification(9FH)command.Theold-styleElectronicSignatureissupportedforreasonsof\nbackwardcompatibility,only,andshouldnotbeusedfornewdesigns.Newdesignsshould,instead,makeuse\noftheJEDEC16-bitElectronicSignature,andtheReadIdentificationcommand.\nWhenusedonlytoreleasethedevicefromthepower-downstate,thecommandisissuedbydrivingthe\nChipSelect(CS#)pinlow,shiftingthecommandcode“ABH”anddrivingCS#highasshowninFigure-30.After\nthetimedurationoftRES1thedevicewillresumenormaloperationandothercommandswillbeaccepted.The\nCS#pinmustremainhighduringthetRES1timeduration.\nWhenusedonlytoobtaintheDeviceIDwhilenotinthepower-downstate,thecommandisinitiatedby\ndrivingtheCS#pinlowandshiftingthecommandcode“ABH”followedby3-dummybytes.TheDeviceIDbits\narethenshiftedoutonthefallingedgeofSCLKwiththemostsignificantbit(MSB)firstasshowninFigure-31.\nTheDeviceIDvaluesarelistedin"TablesofIDDefinition"(Table-8.X).TheDeviceIDcanbereadcontinuously.\nThecommandiscompletedbydrivingCS#high.\nWhenCS#isdrivenHigh,thedeviceisputintheStand-byPowermode.Ifthedevicewasnotpreviously\nintheDeepPower-Downmode,thetransitiontotheStand-byPowermodeisimmediate.Ifthedevicewas\npreviouslyintheDeepPower-Downmode,though,thetransitiontotheStand-byPowermodeisdelayedby\ntRES2,andCS#mustremainHighforatleasttRES2(max).OnceintheStand-byPowermode,thedevice\nwaitstobeselected,sothatitcanreceive,decodeandexecutecommands.\nExceptwhileanErase,ProgramorWriteStatusRegistercycleisinprogress,theRDP,REScommand\nalwaysprovidesaccesstothe8-bitDeviceIDofthedeviceandcanbeappliedeveniftheDeepPower-Down\nmodehasnotbeenentered.\nAnyRDP,REScommandissuedtothedevicewhileanErase,ProgramorWriteStatusRegistercycleis\ninprogress,isnotdecoded,andhasnoeffectonthecyclethatisinprogress.\nNB25Q40A\n36NBSPINORFLASH\nFigure-30.ReleasefromDeepPower-Down(RDP)SequenceDiagram\nFigure-31.ReadElectronicSignature(RES)SequenceDiagram\n9.29ReadElectronicManufacturerID&DeviceID(REMS)(90H)\nTheReadElectronicManufacturer&DeviceID(90H)commandprovidesboththeJEDECassigned\nManufacturerIDandthespecificDeviceID.\nTheREMScommandisinitiatedbydrivingtheCS#pinlowandshiftingthecommandcode“90H”followed\nbytwodummybytesandoneaddressbyte(A7~A0).Afterwhich,theManufacturerIDforNBandtheDevice\nIDareshiftedoutonthefallingedgeofSCLKwiththemostsignificantbit(MSB)firstasshowninFigure-32.\nTheDeviceIDvaluesarelistedin"TablesofIDDefinition"(Table-8.X).Iftheaddressbyteis00h,the\nmanufacturerIDwillbeoutputfirst,followedbythedeviceID.Iftheaddressbyteis01h,thenthedeviceID\nwillbeoutputfirst,followedbythemanufacturerID.WhileCS#islow,theManufacturerandDeviceIDscanbe\nreadcontinuously,alternatingfromonetotheother.ThecommandiscompletedbydrivingCS#high.\nNB25Q40A\n37NBSPINORFLASH\nFigure-32.ReadElectronicManufacturerID&DeviceIDSequenceDiagram\n9.30DualI/OReadElectronicManufacturerID&DeviceID(DREMS)(92H)\nTheDualI/OReadElectronicManufacturerID&DeviceID(92H)commandissimilartotheRead\nElectronicManufacturer&DeviceID(90H)commandandreturnstheJEDECassignedManufacturerIDwhich\nusestwopins:IO0,IO1asaddressinputandIDoutputI/O.\nTheDREMScommandisinitiatedbydrivingtheCS#pinlowandshiftingtheDREMScommandcode\n"92h"followedbytwodummybytes,oneaddressbyte(A7~A0)andonebyteof‘ContinuousReadMode’Bits.\nAfterwhich,theManufacturerIDforNBandtheDeviceIDareshiftedoutonthefallingedgeofSCLKwiththe\nmostsignificantbit(MSB)first.Iftheone-byteaddressisinitiallysetto01h,thenthedeviceIDwillberead\nfirstandfollowedbytheManufacturerID.TheManufacturerandDeviceIDscanbereadcontinuously,\nalternatingfromonetotheother.TheDREMScommandiscompletedbydrivingCS#high.\nNB25Q40A\n38NBSPINORFLASH\nFigure-33.DualI/OReadElectronicManufacturerID&DeviceIDSequenceDiagram\nNote:The“ContinuousReadMode”bits(M5-4)mustbesetto(1,0)tobecompatiblewithDualI/OFastRead\ncommand.\n9.31QuadI/OReadElectronicManufacturerID&DeviceID(QREMS)(94H)\nTheQuadI/OReadElectronicManufacturerID&DeviceID(94H)commandissimilartotheRead\nElectronicManufacturer&DeviceID(90H)commandandreturnstheJEDECassignedManufacturerIDwhich\nusesfourpins:IO0,IO1,IO2,IO3asaddressinputandIDoutputI/O.AQuadEnable(QE)ofStatusRegister-\n2mustbeexecutedbeforethedevicewillaccepttheQREMSCommand(TheQEbitmustequal“1”).\nTheQREMScommandisinitiatedbydrivingtheCS#pinlowandshiftingtheQREMScommandcode\n"94h"followedbytwodummybytes,oneaddress(A7~A0)byte,onebyteof‘ContinuousReadMode’Bitsand\ntwodummybytes.Afterwhich,theManufacturerIDforNBandtheDeviceIDareshiftedoutonthefalling\nedgeofSCLKwiththemostsignificantbit(MSB)first.Iftheone-byteaddressisinitiallysetto01h,thenthe\ndeviceIDwillbereadfirstandthenfollowedbytheManufacturerID.TheManufacturerandDeviceIDscanbe\nreadcontinuously,alternatingfromonetotheother.TheQREMScommandiscompletedbydrivingCS#high.\nNB25Q40A\n39NBSPINORFLASH\n4\n5Figure-34.QuadI/OReadElectronicManufacturerID&DeviceIDSequenceDiagram\nNote:The“ContinuousReadMode”bits(M5-4)mustbesetto(1,0)tobecompatiblewithQuadI/OFast\nReadcommand.\n9.32ReadIdentification(RDID)(9FH)\nTheReadIdentification(9FH)commandallowsthe8-bitManufacturerIDtoberead,followedbytwobytes\nofDeviceID.TheDeviceIDindicatesthememorytypeinthefirstbyte,andthememorycapacityofthedevice\ninthesecondbyte.TheNBManufacturerIDandDeviceIDarelistas"TablesofIDDefinition"(Table-8.X).\nAnyRDIDcommandissuedwhileanEraseorProgramcycleisinprogress,isnotdecoded,andhasno\neffectonthecyclethatisinprogress.TheRDIDcommandshouldnotbeissuedwhilethedeviceisinDeep\nPowerdownmode.\nThedeviceisfirstselectedbydrivingtheCS#Low.Thenthe8-bitcommandcodeforthecommandis\nshiftedin.Thisisfollowedbythe24-bitdeviceidentificationstoredinthememory,shiftedoutontheSOpinon\nthefallingedgeofSCLK.ThecommandsequenceisshowninFigure-35.TheRDIDcommandisterminated\nbydrivingCS#Highatanytimeduringdataoutput.\nWhenCS#isdrivenHigh,thedeviceisplacedinthestandbymode.Onceinthestandbystage,thedevice\nwaitstobeselected,sothatitcanreceive,decodeandexecutecommands.\nNB25Q40A\n40NBSPINORFLASH\nFigure-35.ReadIdentificationSequenceDiagram\n9.33Program/EraseSuspend/Resume\nTheSuspend(75HorB0H)commandinterruptsaPageProgram,PageErase,SectorErase,HalfBlock\nEraseorBlockEraseoperationtoallowaccesstothememoryarray.Aftertheprogramoreraseoperationhas\nenteredthesuspendedstate,thememoryarraycanbereadexceptforthepagebeingprogrammedorthe\npage,sectororblockbeingerased.\nTable-11.0ReadableAreaofMemoryWhileaProgramorEraseOperationisSuspended\nSuspendedOperation ReadableRegionofMemoryArray\nPageProgram AllbutthePagebeingprogrammed\nPageErase AllbutthePagebeingerased\nSectorErase(4KB) Allbutthe4KBSectorbeingerased\nHalfBlockErase(32KB) Allbutthe32KBBlockbeingerased\nBlockErase(64KB) Allbutthe64KBBlockbeingerased\nWhentheSerialNORFlashreceivestheSuspendcommand,thereisalatencyoftPSLortESLbeforethe\nWriteEnableLatch(WEL)bitclearsto“0”andtheSUS2orSUS1setsto“1”.Afterwards,thedeviceisready\ntoacceptoneofthecommandslistedinTable-11.1"AcceptableCommandsDuringProgram/EraseSuspend\naftertPSL/tESL"(e.g.ReadDataBytesatHigherSpeed(0BH)command).Referto"ACCHARACTERISTICS"\nfortPSLandtESLtimings.Table-11.2"AcceptableCommandsDuringSuspend(tPSL/tESLnotrequired)"lists\nthecommandsforwhichthetPSLandtESLlatenciesdonotapply.Forexample,ReadStatusRegister,Read\nSecurityRegisters,ResetEnableandResetcanbeissuedatanytimeaftertheSuspendcommand.\nStatusRegisterbit15(SUS2)andbit10(SUS1)canbereadtocheckthesuspendstatus.TheSUS2\n(ProgramSuspendBit)setsto“1”whenaprogramoperationissuspended.TheSUS1(EraseSuspendBit)\nsetsto“1”whenaneraseoperationissuspended.TheSUS2orSUS1clearsto“0”whentheprogramorerase\nNB25Q40A\n41NBSPINORFLASH\ntPRS:ProgramResumetoanotherSuspend\ntERS:EraseResumetoanotherSuspendCS#SuspendCommand ResumeCommandtPRS/tERSoperationisresumed.\nTable-11.1AcceptableCommandsDuringProgram/EraseSuspendaftertPSL/tESL\nCommandnameCommandCodeSuspendType\nProgramSuspendEraseSuspend\nREAD 03H • •\nFASTREAD 0BH • •\nDREAD 3BH • •\nQREAD 6BH • •\n2READ BBH • •\n4READ EBH • •\nRDSFDP 5AH • •\nRDID 9FH • •\nREMS 90H • •\nDREMS 92H • •\nQREMS 94H • •\nRDSCUR 48H • •\nSBL 77H • •\nWREN 06H •\nRESUME 7AHOR30H • •\nPP 02H •\nDPP A2H •\nQPP 32H •\nTable-11.2AcceptableCommandsDuringSuspend（tPSL/tESLnotrequired）\nCommandnameCommandCodeSuspendType\nProgramSuspendEraseSuspend\nWRDI 04H • •\nRDSR 05H • •\nRDSR2 35H • •\nASI 25H • •\nRSTEN 66H • •\nRST 99H • •\nNOP 00H • •\nFigure-36.ResumetoSuspendLatency\nNB25Q40A\n42NBSPINORFLASH\ntPSL:ProgramSuspendLatency\ntESL:EraseSuspendLatencyRead/Program\nCommandCS#SuspendCommandtPSL/tESL\nCS#ReadCommand ResumeCommandtSE/tBE/tPP9.34EraseSuspendtoProgram\nThe“EraseSuspendtoProgram”featureallowsPageProgrammingwhileaneraseoperationis\nsuspended.PageProgrammingispermittedinanyunprotectedmemoryexceptwithinthesectorofa\nsuspendedSectorEraseoperationorwithintheblockofasuspendedBlockEraseoperation.TheWriteEnable\n(06H)commandmustbeissuedbeforeanyPageProgram(02H)command.\nAPageProgramoperationinitiatedwithinasuspendederasecannotitselfbesuspendedandmustbe\nallowedtofinishbeforethesuspendederasecanberesumed.TheStatusRegistercanbepolledtodetermine\nthestatusofthePageProgramoperation.TheWriteEnableLatch(WEL)andWriteinProgress(WIP)bitsof\ntheStatusRegisterwillremain“1”whilethePageProgramoperationisinprogressandwillbothclearto“0”\nwhenthePageProgramoperationcompletes.\nFigure-37.SuspendtoRead/ProgramLatency\n9.35ProgramResumeandEraseResume\nTheResume(7AHor30H)commandresumesasuspendedPageProgram,PageErase,SectorErase,\nHalfBlockEraseorBlockEraseoperation.BeforeissuingtheResumecommandtorestartasuspendederase\noperation,makesurethatthereisnoPageProgramoperationinprogress.\nImmediatelyaftertheSerialNORFlashreceivestheResumecommand,theWriteEnableLatch(WEL)\nandWriteinProgress(WIP)bitsaresetto“1”andtheSUS2orSUS1isclearedto“0”.Theprogramorerase\noperationwillcontinueuntilfinished("ResumetoReadLatency")oruntilanotherSuspend(75HorB0H)\ncommandisreceived.Aresume-to-suspendlatencyoftPRSortERSmustbeobservedbeforeissuinganother\nSuspendcommand("ResumetoSuspendLatency").\nFigure-38.ProgramResumeandEraseResumeSequenceDiagram\n9.36NoOperation(NOP)\nTheNoOperation(00H)commandisonlyabletoterminatetheResetEnable(66H)commandandwillnot\naffectanyothercommand.\nTheIO[3:1]aredon\'tcare.\n\nNB25Q40A\n43NBSPINORFLASH\n9.37ResetEnable(RSTEN)(66H)andReset(RST)(99H)\nTheSoftwareResetoperationcombinestwocommands:ResetEnable(66H)commandandReset(99H)\ncommand.Itreturnsthedevicetostandbymode.Allthevolatilebitsandsettingswillbeclearedwhichreturns\nthedevicetothesamedefaultstatusaspoweron.TheResetcommandimmediatelyfollowingaResetEnable\ncommand,initiatestheSoftwareResetprocess.AnycommandotherthanResetfollowingtheResetEnable\ncommand,willcleartheresetenableconditionandpreventalaterResetcommandfrombeingrecognized.\nIftheResetcommandisexecutedduringaprogramoreraseoperation,theoperationwillbedisabledand\nthedataunderprocessingcouldbedamagedorlost.\nFigure-39.ResetEnableandResetSequenceDiagram\n9.38ReadUniqueID(RUID)(4BH)\nTheReadUniqueID(4BH)commandaccessesafactory-setread-only128-bitnumberthatisuniqueto\neachNB25Q40Adevice.TheIDnumbercanbeusedinconjunctionwithusersoftwaremethodstohelpprevent\ncopyingorcloningofasystem.\nTheRUIDcommandisinitiatedbydrivingtheCS#pinlowandshiftingthecommandcode“4BH”followed\nbyfourdummybytes.Then,the128-bitIDisshiftedoutonthefallingedgeofSCLKasshowninFigure-40.\nNB25Q40A\n44NBSPINORFLASH\nFigure-40.ReadUniqueIDSequenceDiagram\n9.39ReadSFDPMode(RDSFDP)(5AH)\nTheSerialFlashDiscoverableParameter(SFDP)standardprovidesaconsistentmethodofdescribingthe\nfunctionalandfeaturecapabilitiesofserialflashdevicesinastandardsetofinternalparametertables.These\nparametertablescanbequeriedbyhostsystemsoftwaretoenableadjustmentsneededtoaccommodate\ndivergentfeaturesfrommultiplevendors.TheconceptissimilartotheonefoundintheIntroductionofJEDEC\nStandard,JESD68onCFI.SFDPisaJEDECStandard,JESD216B.\nNB25Q40AfeaturestheReadSFDPMode(5AH)command.Thehostsystemcanretrievetheoperating\ncharacteristics,structureandvendorspecifiedinformationsuchasidentifyinginformation,memorysize,\noperatingvoltageandtiminginformationofthisdevicebySFDPmode.\nThedeviceisfirstselectedbydrivingChipSelect(CS#)Low.ThecommandcodefortheRDSFDPis\nfollowedbya3-byteaddress(A23~A0)andadummybyte,witheachbitlatched-inontherisingedgeofSerial\nClock(SCLK).Thenthememorycontents,atthespecifiedaddress,isshiftedoutonDataOutput(SO)ata\nmaximumfrequencyfConthefallingedgeofSCLK.\nThecommandsequenceisshowninFigure-41.Thefirstbyteaddressedcanbeatanylocation.The\naddressisautomaticallyincrementedtothenexthigheraddressaftereachbyteofdataisshiftedout.The\nentireSFDPtablecan,therefore,bereadwithasingleRDSFDPcommand.Whenthehighestaddressis\nreached,theaddresscounterrollsoverto0x00h,allowingthereadsequencetobecontinuedindefinitely.The\nRDSFDPcommandisterminatedbydrivingCS#High.CS#canbedrivenHighatanytimeduringdataoutput.\nAnyRDSFDPcommandsissued,whileanErase,ProgramorWritecycleisinprogress,isrejectedwithout\nhavinganyeffectsonthecyclethatisinprogress.\nNB25Q40A\n45NBSPINORFLASH\nFigure-41.ReadSerialFlashDiscoverableParameterSequenceDiagram\nTable-12.SerialFlashDiscoverableParameter(SFDP)Table\nDescription CommentAdd(H)\n(Byte)DWAdd\n(Bit)DataData\nSFDPSignature Fixed:50444653H00H07:00 53H 53H\n01H15:08 46H 46H\n02H23:16 44H 44H\n03H31:24 50H 50H\nSFDPMinorRevisionNumber Startfrom00H 04H07:00 00H 00H\nSFDPMajorRevisionNumber Startfrom01H 05H15:08 01H 01H\nNumberofParametersHeaders Startfrom00H 06H23:16 01H 01H\nUnusedContains0xFFHand\ncanneverbechanged07H31:24 FFH FFH\nIDnumber(JEDEC)00H:ItindicatesaJEDEC\nspecifiedheader08H07:00 00H 00H\nParameterTableMinor\nRevisionNumberStartfrom0x00H 09H15:08 00H 00H\nParameterTableMajor\nRevisionNumberStartfrom0x01H 0AH23:16 01H 01H\nParameterTableLength\n(indoubleword)HowmanyDWORDs\nintheParametertable0BH31:24 09H 09H\nFirstaddressofJEDEC 0CH07:00 30H 30H\nNB25Q40A\n46NBSPINORFLASH\nDescription CommentAdd(H)\n(Byte)DWAdd\n(Bit)DataData\nParameterTablePointer(PTP)FlashParametertable 0DH15:08 00H 00H\n0EH23:16 00H 00H\nUnusedContains0xFFHandcan\nneverbechanged0FH31:24 FFH FFH\nIDNumber\n(NBDeviceManufacturerID)ItisindicatesNBmanufacturerID10H07:00\nParameterTable\nMinorRevisionNumberStartfrom0x00H 11H15:08 00H 00H\nParameterTable\nMajorRevisionNumberStartfrom0x01H 12H23:16 01H 01H\nParameterTableLength\n(indoubleword)HowmanyDWORDsinthe\nParametertable13H31:24 03H 03H\nParameterTablePointer(PTP)FirstaddressofNB\nFlashParametertable14H07:00 60H 60H\n15H15:08 00H 00H\n16H23:16 00H 00H\nUnusedContains0xFFHandcan\nneverbechanged17H31:24 FFH FFH\nBlock/SectorEraseSize00:Reserved;01:4KBerase;\n10:Reserved;11:notsupport4KB\nerase\n30H01:00 01b\nE5HWriteGranularity 0:1Byte,1:64Byteorlarger 02 1b\nWriteEnableInstruction\nRequestedforWritingtoVolatile\nStatusRegisters0:Nonvolatilestatusbit\n1:Volatilestatusbit\n(BPstatusregisterbit)03 0b\nWriteEnableOpcodeSelectfor\nWritingtoVolatileStatusRegisters0:Use50HOpcode,\n1:Use06HOpcode,\nNote:Iftargetflashstatusregisteris\nNonvolatile,thenbits3and4must\nbesetto00b.04 0b\nUnusedContains111bandcan\nneverbechanged07:05 111b\n4KBEraseOpcode 31H15:08 20H 20H\n(1-1-2)FastRead 0=Notsupport,1=Support\n32H16 1b\nF1HAddressBytesNumberusedin\naddressingflasharray00:3Byteonly,01:3or4Byte,\n10:4Byteonly,11:Reserved18:17 00b\nDoubleTransferRate(DTR)clocking0=Notsupport,1=Support 19 0b\n(1-2-2)FastRead 0=Notsupport,1=Support 20 1b\n(1-4-4)FastRead 0=Notsupport,1=Support 21 1b\nNB25Q40A\n47NBSPINORFLASH\nDescription CommentAdd(H)\n(Byte)DWAdd\n(Bit)DataData\n(1-1-4)FastRead 0=Notsupport,1=Support 22 1b\nUnused 23 1b\nUnused 33H31:24 FFH FFH\nFlashMemoryDensity 37H:34H31:00003FFFFFH/\n001FFFFFH/\n000FFFFFH/\n0007FFFFH/\n(1-4-4)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport\n38H04:0000100b\n44H\n(1-4-4)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 07:05 010b\n(1-4-4)FastReadOpcode 39H15:08 EBH EBH\n(1-1-4)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport\n3AH20:1601000b\n08H\n(1-1-4)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 23:21 000b\n(1-1-4)FastReadOpcode 3BH31:24 6BH 6BH\n(1-1-2)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport\n3CH04:0001000b\n08H\n(1-1-2)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 07:05 000b\n(1-1-2)FastReadOpcode 3DH15:08 3BH 3BH\n(1-2-2)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport\n3EH20:1600000b\n80H\n(1-2-2)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 23:21 100b\n(1-2-2)FastReadOpcode 3FH31:24 BBH BBH\n(2-2-2)FastRead 0=notsupport1=support\n40H00 0b\nEEHUnused 03:01 111b\n(4-4-4)FastRead 0=notsupport1=support 04 0b\nUnused 07:05 111b\nUnused 43H:41H31:08 FFH FFH\nUnused 45H:44H15:00 FFH FFH\n(2-2-2)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport\n46H20:1600000b\n00H\n(2-2-2)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 23:21 000b\n(2-2-2)FastReadOpcode 47H31:24 FFH FFH\nUnused 49H:48H15:00 FFH FFH\nNB25Q40A\n48NBSPINORFLASH\nDescription CommentAdd(H)\n(Byte)DWAdd\n(Bit)DataData\n(4-4-4)FastReadNumberofWait\nstates00000b:Waitstates\n(DummyClocks)notsupport4AH20:1600000b00H\n(4-4-4)FastReadNumberofMode\nBits000b:ModeBitsnotsupport 23:21 000b\n(4-4-4)FastReadOpcode 4BH31:24 FFH FFH\nSectorType1SizeSector/blocksize=2^Nbytes\n0x00b:thissectortypedoesn’texist4CH07:00 0CH 0CH\nSectorType1eraseOpcode 4DH15:08 20H 20H\nSectorType2SizeSector/blocksize=2^Nbytes\n0x00b:thissectortypedoesn’texist4EH23:16 0FH 0FH\nSectorType2eraseOpcode 4FH31:24 52H 52H\nSectorType3SizeSector/blocksize=2^Nbytes\n0x00b:thissectortypedoesn’texist50H07:00 10H 10H\nSectorType3eraseOpcode 51H15:08 D8H D8H\nSectorType4SizeSector/blocksize=2^Nbytes\n0x00b:thissectortypedoesn’texist52H23:16 08H 08H\nSectorType4eraseOpcode 53H31:24 81H 81H\nVccSupplyMaximumVoltage2000H=2.000V\n2700H=2.700V\n3600H=3.600V61H:60H15:003600H3600H\nVccSupplyMinimumVoltage1650H=1.650V\n2250H=2.250V\n2350H=2.350V\n2700H=2.700V63H:62H31:162300H2300H\nHWReset#pin 0=notsupport1=support\n65H:64H00 0b\nF99EHHWHold#pin 0=notsupport1=support 01 1b\nDeepPowerDownMode 0=notsupport1=support 02 1b\nSWReset 0=notsupport1=support 03 1b\nSWResetOpcodeShouldbeissueResetEnable(66H)\nbeforeResetcmd.11:0410011001b\n(99H)\nProgramSuspend/Resume 0=notsupport1=support 12 1b\nEraseSuspend/Resume 0=notsupport1=support 13 1b\nUnused 14 1b\nWrap-AroundReadmode 0=notsupport1=support 15 1b\nWrap-AroundReadmodeOpcode 66H23:16 77H 77H\nWrap-AroundReaddatalength08H:support8BWrap-Aroundread\n16H:8B&16B\n32H:8B&16B&32B\n64H:8B&16B&32B&64B67H31:24 64H 64H\nNB25Q40A\n49NBSPINORFLASH\nDescription CommentAdd(H)\n(Byte)DWAdd\n(Bit)DataData\nIndividualblocklock 0=notsupport1=support\n6BH:68H00 0b\nCBFCHIndividualblocklockbit\n(Volatile/Nonvolatile)0=Volatile1=Nonvolatile 01 0b\nIndividualblocklockOpcode 09:02 FFH\nIndividualblocklockVolatile\nprotectbitdefaultprotectstatus0=protect1=unprotect 10 0b\nSecuredOTP 0=notsupport1=support 11 1b\nReadLock 0=notsupport1=support 12 0b\nPermanentLock 0=notsupport1=support 13 0b\nUnused 15:14 11b\nUnused 31:16FFFFHFFFFH\n9.40ContinuousReadModeReset(CRMR)(FFH)\nThe“ContinuousReadMode”bitsareusedinconjunctionwithDualI/OFastRead(BBH)andQuadI/O\nFastRead(EBH)commandstoprovidethehighestrandomFlashmemoryaccessratewithminimumSPI\ncommandoverhead,thusallowingmoreefficientXIP(executeinplace)withthisdevicefamily.Adevicethatis\ninacontinuoushighperformancereadmodemaynotrecognizeanynormalSPIcommandortheSoftware\nReset(66H,99H)command.ItisrecommendedtousetheContinuousReadModeReset(FFH)command\nafterasystemPoweronResetor,beforesendingaSoftwareReset,toensurethedeviceisreleasedfrom\n“ContinuousReadMode”.\nThe“ContinuousReadMode”bitsM7-0aresetbytheDual/QuadI/OFastRead(BBhorEBh)commands.\nM5-4areusedtocontrolwhetherthe8-bitSPIcommandcode(BBhorEBh)isneededornotforthenext\ncommand.WhenM5-4=(1,0),thenextcommandwillbetreatedthesameasthecurrentDual/QuadI/OFast\nReadcommandwithoutrequiringthe8-bitcommandcode;whenM5-4donotequal(1,0),thedevicereturns\ntonormalSPIcommandmode,inwhichallcommandscanbeaccepted.M7-6andM3-0arereservedbitsfor\nfutureuse,either0or1valuescanbeused.\nBecausetheNB25Q40Ahasnohardwareresetpin,ifContinuousReadModebitsaresetto(1,0),the\nNB25Q40AwillnotrecognizeanystandardSPIcommands.TheContinuousReadModeReset(FFH)will\nreleasethe“ContinuousReadMode”andreturntonormalSPIoperation.Thecommandsequenceisshown\ninFigure-42.\nNB25Q40A\n50NBSPINORFLASH\nFigure-42.ContinuousReadModeResetSequenceDiagram\n10.ELECTRICALSPECIFICATIONS\n10.1POWER-ONTIMING\nFigure-43.Power-OnTimingSequenceDiagram\nTable-13Power-UpTimingandWriteInhibitThreshold\nSym. Parameter Min.Max.Unit\ntVSLVCC(min.)todeviceoperation 0.3 ms\nVWIWriteInhibitVoltage 11.55V\nVPWDVCCvoltageneededtobelowVPWDforensuringinitializtionwilloccur 0.5V\ntPWDTheminimumdurationforensuringinitializationwilloccur 300 us\n10.2INITIALDELIVERYSTATE\nThedeviceisdeliveredwiththememoryarrayerased:allbitsaresetto1(eachbytecontainsFFH).The\nStatusRegistercontains00H(allStatusRegisterbitsare0).\nNB25Q40A\n51NBSPINORFLASH\n10.3ABSOLUTEMAXIMUMRATINGS\nTable-14AbsoluteMaximumRatings\nParameter Value Unit\nAmbientOperatingTemperature -40to85 °C\nStorageTemperature -65to150 °C\nAppliedInput/OutputVoltage -0.6toVCC+0.4 V\nTransientInput/OutputVoltage(note:overshoot) -2.0toVCC+2.0 V\nVCC -0.6to4.2 V\nFigure-44.MaximumNegative/positiveOvershootDiagram\nMaximumNegativeOvershootWaveform\nMaximumPositiveOvershootWaveform\n10.4ACMEASUREMENTCONDITIONS\nTable-15.ACMeasurementConditions\nSym. Parameter Min.Typ.MaxUnitConditions\nCIN InputCapacitance 6pFVIN=0V\nCOUT OutputCapacitance 8pFVOUT=0V\nCL LoadCapacitance 30 pF\nInput 5ns\nInputPulseVoltage 0.1VCCto0.8VCCV\nInputTimingReferenceVoltage 0.2VCCto0.7VCCV\nOutputTimingReferenceVoltage 0.5VCC\n10.5DCCHARACTERISTICS\nTable-16.DCParameters\nSym. Parameter Conditions2.3Vto3.6V\nUnit\nMin.Typ.Max.\nIDPDDeeppowerdowncurrentCS#=VCC,\nVIN=VCCorVSS0.22uA\nISB StandbycurrentCS#=VCC,\nVIN=VCCorVSS0.21uA\nICC1Lowpowerreadcurrent(03h)f=1MHz;IOUT=0mA 2.03.0mA\nf=33MHz;IOUT=0mA 3.55.0mA\nICC2 Readcurrent(0Bh)f=66MHz;IOUT=0mA 4.57.0mA\nf=85MHz;IOUT=0mA 5.07.5mA\nICC3 ProgramcurrentCS#=Vcc 4.57.0mA\nICC4 Erasecurrent CS#=Vcc 4.57.0mA\nILI InputloadcurrentAllinputsatCMOSlevel 1.0uAVcc+2.0V\nVcc\n20ns20ns\n20nsVss\nVss-2.0V20ns\n20ns20ns\nNB25Q40A\n52NBSPINORFLASH\nILO Outputleakage AllinputsatCMOSlevel 1.0uA\nVIL Inputlowvoltage 0.3VccV\nVIH Inputhighvoltage 0.7Vcc V\nVOL OutputlowvoltageIOL=100uA 0.2V\nVOH OutputhighvoltageIOH=-100uA Vcc-0.2 V\nNote:Typicalvaluesmeasuredat3.0V@25°Cforthe2.3Vto3.6Vrange.\n10.6ACCHARACTERISTICS\nTable-17.ACParameters\nSymbolAlt. Parameter2.3V~3.6V\nUnit\nMin.Typ.Max.\nfSCLKfCClockFrequencyforthefollowingcommands:\nFAST_READ,RDSFDP,PP,SE,BE32K,BE,CE,\nDP,RES,WREN,WRDI,RDID,RDSR,WRSR(7)83MHz\nfRSCLKfRClockFrequencyforREADcommand 40MHz\nfTSCLKfTClockFrequencyforDREADcommand 66MHz\nClockFrequencyfor2READcommand 50MHz\nfQClockFrequencyforQREADcommand XMHz\nClockFrequencyfor4READcommand XMHz\nfQPP ClockFrequencyforQPP(Quadpageprogram) XMHz\ntCH(1)tCLHClockHighTime 6 ns\ntCL(1)tCLLClockLowTime(fSCLK)45%x(1fSCLK) 6 ns\ntCLCH(7)ClockRiseTime(peaktopeak) 0.1 v/ns\ntCHCL(7)ClockFallTime(peaktopeak) 0.1 v/ns\ntSLCHtCSSCS#ActiveSetupTime(relativetoSCLK) 5 ns\ntCHSL CS#NotActiveHoldTime(relativetoSCLK) 5 ns\ntDVCHtDSUDataInSetupTime 2 ns\ntCHDXtDHDataInHoldTime 3 ns\ntCHSH CS#ActiveHoldTime(relativetoSCLK) 5 ns\ntSHCH CS#NotActiveSetupTime(relativetoSCLK) 5 ns\ntSHSLtCSHCS#DeselectTimeFromReadtonextRead 15 ns\nCS#DeselectTimeFromWrite,Erase,Programto\nRead\nStatusRegister30 ns\nVolatileStatusRegisterWriteTime 40 ns\ntSHQZ(7)tDISOutputDisableTime 12ns\ntCLQVtVClockLowtoOutputValidLoading30pF 12ns\nNB25Q40A\n53NBSPINORFLASH\nClockLowtoOutputValidLoading15pF 12ns\ntCLQXtHOOutputHoldTime 0 ns\ntHLCH HOLD#ActiveSetupTime(relativetoSCLK) 5 ns\ntCHHH HOLD#ActiveHoldTime(relativetoSCLK) 5 ns\ntHHCH HOLD#NotActiveSetupTime(relativetoSCLK) 5 ns\ntCHHL HOLD#NotActiveHoldTime(relativetoSCLK) 5 ns\ntHHQXtLZHOLD#toOutputLow-Z 6ns\ntHLQZtHZHOLD#toOutputHigh-Z 6ns\ntWHSL(3)WriteProtectSetupTime 20 ns\ntSHWL(3)WriteProtectHoldTime 100 ns\ntDP CS#HightoDeepPower-DownMode 3us\ntRES1CS#HighToStandbyModeWithoutElectronic\nSignatureRead8us\ntRES2CS#HighToStandbyModeWithElectronicSignature\nRead8us\ntW WriteStatusRegisterCycleTime 912ms\ntReadyResetrecoverytime(forerase/programoperation\nexceptWRSR)30 us\nResetrecoverytime(forWRSRoperation) 812ms\nTable-18.ACParametersforProgramandErase\nSym. Parameter2.3Vto3.6V\nUnit\nMin.Typ.Max.TESL(6)EraseSuspendLatency 30us\nTPSL(6)ProgramSuspendLatency 30us\nTPRS(4)LatencybetweenProgramResumeandnextSuspend0.3 us\nTERS(5)LatencybetweenEraseResumeandnextSuspend0.3 us\ntPPPageprogramtime(upto256bytes) 1.62.5ms\ntPEPageerasetime 8 12ms\ntSESectorerasetime 8 12ms\ntBE1Blockerasetimefor32Kbytes 8 12ms\ntBE2Blockerasetimefor64Kbytes 8 12ms\ntCEChiperasetime 8 12ms\nNotes:\n1.tCH+tCLmustbegreaterthanorequalto1/Frequency.\n2.TypicalvaluesgivenforTA=25°C.Not100%tested.\n3.OnlyapplicableasaconstraintforaWRSRcommand.\n4.Programoperationmaybeinterruptedasoftenassystemrequest.TheminimumtimingoftPRSmust\nNB25Q40A\n54NBSPINORFLASH\nbeobservedbeforeissuingthenextprogramsuspendcommand.However,foraProgramoperationto\nmakeprogress,tPRS≥100usmustbeincludedinresume-to-suspendloop(s).Not100%tested.\n5.Eraseoperationmaybeinterruptedasoftenassystemrequest.TheminimumtimingoftERSmustbe\nobservedbeforeissuingthenexterasesuspendcommand.However,inorderforanEraseoperationto\nmakeprogress,tERS≥200usmustbeincludedinresume-to-suspendloop(s).Notes.Not100%tested.\n6.LatencytimeisrequiredtocompleteErase/ProgramSuspendoperation.\n7.Thevalueguaranteedbycharacterization,not100%testedinproduction.\nFigure-45.SerialInputTiming\nFigure-46.OutputTiming\nFigure-47.HoldTiming\n\nNB25Q40A\n55NBSPINORFLASH\nFigure-48.WPTiming\n\nNB25Q40A\n56NBSPINORFLASH\n11.ORDERINGINFORMATION\nPackagingType\nT:Tube\nR:Tape&Reel\nY:Tray\nGreenCode\nG:Low-halogen,Lead(Pb)-free\nP:Lead(Pb)-free\nTemperatureRange\nE:Extended(-25℃~85℃)\nI:Industrial(-40℃~85℃)\nPackageType\nT:150milSOP8\nO:173milTSSOP8\nU:USON8(3*2mm,0.45mm)\nK:USON6(1.2*1.2mm,0.40mm)\nVersion\nA:AVersion\nB:BVersion\nC:CVersion\nDeviceDensity\n40:4Mbit\nBasePartNumber\n25Q:2.3V-3.6VDualSPINorFlashNB25XXXXXXXX\nManufacturer\nNB25Q40A\n57NBSPINORFLASH\nD\n8 5\nE1 E\n1 412.PACKAGEINFORMATION\n12.1PackageSOP8150MIL\nh\n“A” Ɵ\nA A2\nebA1\nDimensionsb\nBaseMetal\nc\nDetail“A”\nSymbol\nAA1A2bcDEE1eLL1hθ Unit\nmmMin1.350.051.350.380.174.805.803.80\n1.270.50\n1.040.300°\nNom1.550.101.40--4.906.003.90 0.60 0.40-\nMax1.650.151.500.510.255.006.204.00 0.80 0.508°\nNote:\n1.BoththepackagelengthandwidthdonotincludethemoldFLASH.\n2.Seatingplane:Max.0.25mm.\nLL1\nNB25Q40A\n58NBSPINORFLASH\n8 5\nE1 E\nLL112.2PackageTSSOP8\nD\nh\n1 “A” 4 Ɵ\nBaseMetal\nc\nDetail“A”\nDimensions\nSymbol\nAA1A2bcDEE1eLL1hθUnit\nmmMin 0.050.80.190.092.906.204.30\n0.650.45\n1.000°\nNom 1.00--3.006.404.40 0.60 -\nMax1.20.151.050.300.203.106.604.50 0.75 8°\nNote:\n1.BoththepackagelengthandwidthdonotincludethemoldFLASH.\n2.Seatingplane:Max.0.25mm.A A2\nebA1b\nNB25Q40A\n59NBSPINORFLASH\nD\n12.3PackageUSON8/DFN8(3x2x0.55mm)\nb\ne\nD2\nh\n1 2\nTOPVIEWEXPOSEDTHERMAL\nPADZONENd\nBOTTOMVIEW\nSIDEVIEW\nDimensions\nSymbolUnitAA1bcDD2e NdEE2LL1h\nmmMin0.500.20.11.91.5\n0.50BSC1.50BSC2.90.10.30.050.05\nNom0.550.020.250.1521.6 30.20.350.10.15\nMax0.60.050.30.22.11.7 3.10.30.40.150.25\nL\nh\nE2\nEA\nA1\nc\nNB25Q40A\n60NBSPINORFLASH\n13.REVISIONHISTORY\nVersionNo Description Date\n1.0InitialRelease 2021-10-22\n1.1AddPackageinformation 2022-08-18\n'}]
!==============================================================================!
### Component Summary: NB25Q40ATIGT (NB25Q40A)

#### Key Specifications:
- **Voltage Ratings**: 2.3V to 3.6V
- **Current Ratings**:
  - Active Read Current: 3.5mA (at 33MHz), 4.5mA (program/erase)
  - Standby Current: 1µA
  - Deep Power-Down Current: 0.2µA
- **Power Consumption**: 
  - Active: 4mA (typical)
  - Power-down: 1µA
- **Operating Temperature Range**: -40°C to 85°C
- **Package Type**: SOP8, TSSOP8, USON8 (3x2mm)
- **Moisture Sensitive Level**: MSL 3 (according to JEDEC J-STD-020E)
- **Special Features**:
  - Supports Dual/Quad SPI
  - High-speed operation with clock frequencies up to 83MHz
  - 128-bit unique ID for each device
  - More than 20 years of data retention
  - Minimum 100,000 program/erase cycles

#### Description:
The **NB25Q40A** is a 4M-bit Serial Flash memory device designed for applications requiring compact storage solutions with low power consumption. It operates on a single power supply voltage ranging from 2.3V to 3.6V and features a Serial Peripheral Interface (SPI) that supports standard, Dual, and Quad I/O modes. The device is optimized for code shadowing to RAM, executing code directly from memory, and storing various types of data such as voice and text.

#### Typical Applications:
- **Embedded Systems**: Used in microcontrollers and other embedded applications for firmware storage.
- **Consumer Electronics**: Ideal for devices requiring low power memory solutions, such as wearables and portable devices.
- **Automotive**: Suitable for automotive applications where reliability and data retention are critical.
- **Industrial Control**: Used in industrial automation systems for storing configuration data and firmware.
- **IoT Devices**: Commonly found in Internet of Things (IoT) applications for data logging and firmware updates.

This component is particularly advantageous in scenarios where space, power efficiency, and performance are paramount, making it a versatile choice for a wide range of electronic applications.