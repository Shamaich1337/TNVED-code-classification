[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADP5585ACPZ-00-R7 production of ANALOG DEVICES from the text: Keypad Decoder and I/O Expansion  \nData Sheet  ADP5585  \n \n Rev.  C Document Feedback  \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may res ult from its use. Specifications subject to change without notice. No \nlicense is granted by implication or otherwise under any patent or patent rights of Analog Devices. \nTrademarks and registered trademarks are the property of their respective owners.    \n \nOne Technology Way, P.O. Box 9106,  Norwood, MA 02062- 9106, U.S.A.  \nTel: 781.329.4700  ©2011 –2013  Analog Devices, Inc. All rights reserved.  \nTechnical Support  www.analog.com   FEATURE S \n16-element FIFO for event recording  \n10 configurable I/Os allowing functions such as  \nKey pad decoding for a matrix of up to 5  × 5 \n11 GPIO s (5 × 6) with ADP5585ACxZ -01-R7 models  \nKey press/release interrupts  \nGPIO functions  \nGPI with selectable interru pt level  \n100 kΩ or 300  kΩ pull -up resistors \n300 kΩ pull -down  resistors \nGPO with push -pull or open -drain  \nProgrammable  logic bl ock  \nPWM generator  \nInternal PWM g eneration  \nExternal PWM with internal PWM AND function   \nReset generator s \nI2C interface with f ast mode plus (Fm+) s upport of up to  1 MHz  \nOpen -drain interrupt output  \n16-ball WLCSP , 1.59  mm × 1.59 mm  \n16-lead LFCSP , 3  mm × 3  mm \n \nAPPLICATIONS  \nKeypad  entrie s and input/output expansion capabilities  \nSmart  phones, remote controls, and cameras \nHealthcare, industrial, and instru mentation  FUNCTIONAL BLOCK DIA GRAM  \nSDA\nGPI SCAN\nAND\nDECODEUVLO\nPOR\nI2C INTERFACEOSCILLATOR\nREGISTERSKEY SCAN\nAND\nDECODE\nLOGICI/O\nCONFIGINTRST/R5\nPWMSCLVDD\nADP5585GND\nRESET1\nGEN\nRESET2\nGEN\n09841-001R0\nR3R1\nR2\nR4\nC0\nC1\nC2\nC3\nC4\n \nFigure 1. \nGENERAL DESCRIPTION  \nThe ADP5585 is a 10 input/output  port expander with a built  in \nkeyp ad matrix decoder, programmable logic, reset generator, and \nPWM generator. I nput/output  expand er ICs are used in portable \ndevices (phones, remote controls, and cameras) and non portable \napplications (healthcare, industrial, and instrumentation). I/O \nexpanders can be used to increase the number of I/Os available \nto a proces sor or to reduce the number  of I/Os required through \ninterface connectors for front panel designs.  \nThe ADP5585 handles all key scanning and decoding and can flag the main processor via an interrupt line that new key events have occurred.  GPI changes and logic changes can also be  tracked as events via the FIFO, eliminating the need to monitor different  \nregisters for event changes. The ADP5585 is equipped with a FIFO to store up to 16 events. Events can be read back by the processor via an I\n2C-compatible interface.  \nThe ADP5585 frees up  the main processor from having to \nmonitor the keypad, thereby reducing power consumption \nand/or increasing processor bandwidth for performing other \nfunctions.  \nThe programmable logic functions allow common logic require -\nments t o be integrated as part of th e GPIO expander , thus saving \nboard area and cost.  \n \nADP5585  Data Sheet  \n \nRev. C | Page 2  of 40 TABLE OF CONTENTS  \nFeatures  .............................................................................................. 1 \nApplications  ....................................................................................... 1 \nFunctional Block Diagram  .............................................................. 1 \nGeneral Description  ......................................................................... 1 \nRevision History  ............................................................................... 2 \nSpecifications  ..................................................................................... 3 \nTiming Diagram  ........................................................................... 4 \nAbsolute Maximum Ratings  ............................................................ 5 \nThermal Resistance  ...................................................................... 5 \nESD Caution  .................................................................................. 5 \nPin Configurations and Function Descriptions  ........................... 6 \nTheory of Operation  ........................................................................ 7 \nDevice Enable  ................................................................................ 8 \nDevice Overview  .......................................................................... 8 Functional Description  .....................................................................9  \nEvent FIFO  .....................................................................................9  \nKey Scan Control  ...........................................................................9  \nGPI Input  ..................................................................................... 12 \nGPO Output  ................................................................................ 12 \nLogic Blocks  ................................................................................ 12 \nPWM Block  ................................................................................. 13 \nReset Blocks  ................................................................................ 14 \nRegister Interface  ............................................................................ 15 \nRegister Map  ................................................................................... 17 \nDetailed Register Descriptions  ................................................. 19 \nApplications Diagram  .................................................................... 36 \nOutline Dimensions  ....................................................................... 37 \nOrdering Guide  .......................................................................... 38 \nREVISION HISTORY  \n1/13—Rev. B to Rev. C  \nChanges to Detailed Register Description Section  .................... 19 \nChanges to Table 31  and Table 32  ................................................ 24 \nChanges to Table 33, Table 34, and Table 35  ............................... 25 \nChanges to Table 37  ........................................................................ 26 \nChanges to Table 39  ........................................................................ 27 \nChanges to Table 41 and Table 43  ................................................ 28 \nChanges to Table 45  ........................................................................ 29 \nChanges to Table 47  ........................................................................ 30 \nChanges to Table 64  ........................................................................ 34 \nChanges to Figure 27  ...................................................................... 36 \n \n7/12— Rev. A to Rev B  \nChanges to Table 5  ............................................................................ 8 \nUpdated Outline Dimensions  ....................................................... 36 \nChanges to Ordering Guide  .......................................................... 37 \n 10/11— Rev. Sp0 to Rev. A  \nAdded 16 -Lead LFCSP_WQ Package  .............................. Universal  \nChanges to Features Section  ............................................................ 1 \nAdded Figure 4; Renumbered Sequentially  ................................... 6 \nChanges to Table 4  ............................................................................. 6 \nChanges to Device Enable Section and Table 5  ............................. 8 \nChange to General Section  ............................................................ 11 \nChanges to Logic Blocks Section  .................................................. 12 \nChanges to PWM Block Section  .................................................. 13 \nChanges to Interrupts Section  ...................................................... 14 \nChanges to Register Interface Section  ......................................... 15 \nChanges to Figure 27  ...................................................................... 35 \nUpdated Outline Dimensions  ....................................................... 36 \nChanges to Ordering Guide  .......................................................... 38 \n 5/11— Revision Sp0: Initial Version  \n \n \n \nData Sheet  ADP5585  \n \nRev. C | Page 3  of 40 SPECIFICATIONS \nVDD = 1.8 V to 3.3 V , T A = T J = −40°C to + 85°C, unless otherwise noted1.  \nTable 1.  \nParameter  Symbol  Test Conditions/Comments  Min  Typ  Max  Unit  \nSUPPLY VOLTAGE       \nVDD Input Voltage Range  VDD  1.65   3.6 V \nUndervoltage Lockout Threshold  UVLO VDD UVLO active, VDD falling  1.2 1.3  V \n  UVLO inactive, VDD rising   1.4 1.6 V \nSUPPLY CURRENT        \nStandby Current  ISTNBY  VDD = 1.65 V   1 4 μA \n  VDD = 3.3 V   1 10 µA \nOperating Current ( One  Key Press)  ISCAN 1 Scan  = 10 ms, CORE_FREQ = 50  kHz, \nscan active, 300  kΩ pull-up, VDD  = 1.65 V  30 40 µA \n ISCAN2  Scan = 10 ms, CORE_FREQ = 50  kHz, \nscan active, 100  kΩ pull-up, VDD  = 1.65 V  35 45 µA \n ISCAN3  Scan  = 10 ms, CORE_FREQ = 50  kHz, \nscan active , 300 kΩ pull-up, VDD  = 3.3 V  75 85 μA \n ISCAN4  Scan  = 10 ms, CORE_FREQ = 50  kHz, \nscan active , 100 kΩ pull-up, VDD  = 3.3 V  80 90 μA \nPULL -UP , PULL -DOWN RESISTANCE       \nPull-Up       \nOption 1    50 100 150 kΩ \nOption 2    150 300 450 kΩ \nPull-Down    150 300 450 kΩ \nINPUT LOGIC LEVEL ( RST, SCL, SDA, R0, R1, R2, \nR3, R4, R5, C0, C1, C2, C3, C4)       \nInput Voltage        \nLogic Low  VIL    0.3 VDD V \nLogic High  VIH  0.7 VDD   V \nInput Leakage Current (Per Pin)  VI-Leak   0.1 1 µA \nPUSH -PULL OUTPUT LOGIC LEVEL (R0, R1, R2, R3, \nR4, R5, C0, C1, C2, C3, C4)       \nOutput V oltage        \nLogic Low  VOL1 Sink current = 10 mA , maximum of five \nGPIOs active simultaneously    0.4 V \n VOL2 Sink current = 10 mA , all GPIOs active \nsimultaneously    0.5 V \nLogic High  VOH Source current = 5 mA  0.7 VDD    V \nLogic High Leakage Current (Per Pin) VOH-Leak   0.1 1 µA \nOPEN -DRAIN OUTPUT  LOGIC  LEVEL  (INT, SDA)        \nOutput Voltage        \nLogic Low        \nINT VOL3 ISINK = 10 mA    0.4 V \nSDA  VOL4 ISINK = 20 mA    0.4 V \nLogic High Leakage Current (Per Pin) VOH-Leak   0.1 1 µA \nLogic Propagation Delay     125 300 ns \nFF Hold Time2    0  ns \nFF Setup Time2    175  ns \nGPIO Debounce2     70 µs \nInternal Oscillator Fr equency3 OSC FREQ  900 1000  1100  kHz \nADP5585 Data Sheet\n \nRev. C | Page 4 of 40 Parameter Symbol Test Conditions/Comments Min Typ Max Unit \nI2C TIMING SPECIFICATIONS       \nDelay from UVLO/Reset Inactive to I2C Access     60 μs \nSCL Clock Frequency fSCL  0  1000 kHz \nSCL High Time tHIGH  0.26   μs \nSCL Low Time tLOW  0.5   μs \nData Setup Time tSU; DAT   50   ns \nData Hold Time tHD; DAT   0   μs \nSetup Time for Repeated Start tSU; STA   0.26   μs \nHold Time for Start/Repeated Start tHD; STA   0.26   μs \nBus Free Time for Stop and Start Condition t BUF  0.5   μs \nSetup Time for Stop Condition tSU; STO   0.26   μs \nData Valid Time tVD; DAT     0.45 μs \nData Valid Acknowledge tVD; ACK     0.45 μs \nRise Time for SCL and SDA tR    120 ns \nFall Time for SCL and SDA tF    120 ns \nPulse Width of Suppressed Spike tSP  0  50 ns \nCapacitive Load for Each Bus Line CB4    550 pF \n \n1 All limits at temperature extremes are gua ranteed via correlation using standard stat istical quality control (SQC). Typical values are at T A = 25°C, VDD = 1.8 V. \n2 Guaranteed by design. \n3 All timers are referenced from the base oscillator and have the same ±10% accuracy. \n4 CB is the total capacitance of one bus line in picofarads. \n \nTIMING DIAGRAM \nSDA\nSCL\nSDA\nSCLS\nSr PSFIRST CLOCK CYCLENINTH CLOCK\nNINTH CLOCK1/fSCL70%\n30%70%\n30%\n70%\n30%\n70%\n30%70%\n30%70%\n30%70%\n30%tF\ntFtR\ntRtHIGHtVD; DATtSU; DAT\ntSU; STAtHD; DAT\ntHD; STAtVD; ACKtSP tSU; STOtBUFtLOWtHD; STA\nVIL = 0.3VDD\nVIH = 0.7VDD\n09841-002 \nFigure 2. I2C Interface Timing Diagram \n \nData Sheet  ADP5585  \n \nRev. C | Page 5  of 40 ABSOLUTE MAXIMUM RAT INGS  \nTable 2.  \nParameter  Rating  \nVDD to GND −0.3 V to +4 V \nSCL, SDA, RST, INT, R0, R1, R2, R3, R4, \nC0, C1, C2, C3, C4 to GND  −0.3 V to (VDD + 0.3 V) \nTemperature Range   \nOperating (Ambient)   −40°C to +85° C1 \nOperating (Junction)   −40°C to +125° C \nStorag e  −65°C to +150° C \n1 In applications where high power dissipation and poor thermal resistance \nare present, the maximum ambient temperature may need  to be derated. \nMaximum ambient temperature (T A (MAX)) is dependent on the maximum \noperating junction temper ature (T J (MAXOP)  = 125° C), the maximum power \ndissipation of the device (P D (MAX)), and the junction- to-ambient thermal \nresistance of the device /package in the application (θ JA), using the following \nequation: T A (MAX) = T J (MAXOP)  − (θJA × PD (MAX)).  Stresses above those listed under Absolute Maximum Ratings \nmay cause permanent damage to the device. This is a stress \nrating only; functional operation of the device at these or any \nother conditions above those indicated in the operational \nsection of this spe cification is not implied. Exposure to absolute \nmaximum rating conditions for extended periods may affect device reliability.  \nAbsolute maximum ratings apply individually only, not in combination. Unless otherwise specified, all other voltages are referenc ed to GND.  \nTHERMAL RESISTANCE  \nθJA is specified for the worst -case conditions, that is, a device \nsoldered in a printed circuit board (PCB) for surface -mount \npackages.  \nTable 3.  \nThermal Resistance  θJA Unit  \n16-Ball WLCSP  62 °C/W  \nMax imum Power Dissipation  70 mW  \n16-Lead LFCSP  67.154  °C/W  \nMaximum Power Dissipation  70 mW  \nESD CAUTION  \n \n \n \n \n \n \nADP5585 Data Sheet\n \nRev. C | Page 6 of 40 PIN CONFIGURATIONS AND FUNCTION DESCRIPTIONS \n \nINT RST/R5\n09841-0031\nA\nB\nC\nD234\nC1 R2VDD\nC2SDA\nR4 C3R1SCL\nC4R0GND\nC0\nR3BALL A1\nCORNER\nTOP VIEW\n(BALL SIDE DOWN)\nNot to Scale \n09841-02712\n11\n101\n3\n4VDD\nRST(R5)\nC4\n9C3R4\nR22R3\nR16C0\n5R0\n7C1\n8C2\n16\nINT15\nSCL14\nSDA13\nGND\nTOP VIEW\nNot to Scale\nNOTES\n1. THE EXPOSED PAD IS NOT CONNECTED.\nIT IS RECOMMENDED TO CONNECT THE\nEXPOSED PAD TO GROUND FOR THERMAL\nDISSIPATION.\nFigure 3. WLCSP Pin Configuration Figure 4. LFCSP Pin Configuration \nTable 4. Pin Function Descriptions \nPin No.   \nWLCSP LFCSP Mnemonic Description \nD1 1 R4 GPIO 5 (GPIO Alternate Function: RESET1). Th is pin functions as Row 4 when used as a keypad. \nD2 2 R3 GPIO 4 (GPIO Alternate Function: Logic Block Input LC, PWM_OUT). This pin functions as Row 3 \nwhen used as a keypad. \nC1 3 R2 GPIO 3 (GPIO Alternate Function: Logic Block Input LB ). This pin functions as Row 2 when used as a \nkeypad. \nC2 4 R1 GPIO 2 (GPIO Alternate Function: Logic Block Input LA). This pin functions as Row 1 when used as a keypad. \nB1 5 R0 GPIO 1 (GPIO Alternate Function: Logic Block Output LY ). This pin functions as Row 0 when used as a \nkeypad. \nB4 6 C0 GPIO 7. This pin functions as Column 0 when used as a keypad. \nC3 7 C1 GPIO 8. This pin functions as Column 1 when used as a keypad. \nC4 8 C2 GPIO 9. This pin functions as Column 2 when used as a keypad. \nD3 9 C3 GPIO 10 (GPIO Alternate Function: PWM_IN). This  pin functions as Column 3 when used as a keypad. \nD4 10 C4 GPIO 11 (GPIO Alternate Function: RESET2). This pin functions as Column 4 when used as a keypad. \nB3 11 RST/R5 Input Reset Signal. To expand the keypad matrix, select the ADP5585ACBZ-01-R7 or the \nADP5585ACPZ-01-R7 device model for this pin to function as GPIO 6/Row 5. \nA1 12 VDD Supply Voltage Input. \nA4 13 GND Ground. \nA2 14 SDA I2C Data Input/Output. \nA3 15 SCL I2C Clock Input. \nB2 16 INT Open-Drain Interrupt Output. \n EP EP Exposed Pad. The exposed pad is not connected. It is recommended to connect the exposed pad to ground for thermal dissipation. \n \n \nData Sheet ADP5585\n \nRev. C | Page 7 of 40 THEORY OF OPERATION \nROW 0SDA\nI2C INTERFACE\nI2C BUSY?OSCILLATOR\nREGISTERS\nLOGICI/O\nCONFIGURATIONINTRST/R5\nROW 1\nROW 2\nROW 3ROW 4ROW 5\nCOL 1COL 0\nCOL 2\nCOL 3\nCOL 4(R0)\n(R1)\n(R2)\n(R3)\n(R4)\n(RST/R5)\n(C0)\n(C1)\n(C2)\n(C3)\n(C4)\n(R0)\n(R1)\n(R2)\n(R3)\n(R1)\n(R2)\n(R3)\n(R0)(R4)\n(RST/R5)\n(C0)\n(C1)\n(C2)(C3)(C4)GPIO 1\nLAGPIO 2GPIO 3GPIO 4GPIO 5GPIO 6\nGPIO 7\nGPIO 8\nGPIO 9\nGPIO 10\nGPIO 11\nLB\nLC\nLY\nPWM (R3)(C3) PWM_IN\nPWM_OUT\n(R4) RESET1\n(C4) RESET2KEY EVENT\nGPI EVENT\nLOGIC EVENTSCLVDD\nADP5585GND\nR0\nR3R1\nR2\nR4\nC0\nC1\nC2\nC3\nC4\nRST (R5)\n09841-004RESET2\nGENRESET1\nGENGPI SCAN\nAND\nDECODEKEY SCAN\nAND\nDECODEFIFO\nUPDATEUVLO\nPOR\n \nFigure 5. Internal Block Diagram \n \nADP5585  Data Sheet  \n \nRev. C | Page 8  of 40 DEVICE ENABLE  \nWhen sufficient voltage is applied to VDD and the RST  pin is \ndriven with a logic high level, the ADP5585 starts up in standby \nmode with all settings at default. The user can  configure the \ndevice via the I2C interface. When  the RST  pin is low, the \nADP5585 enters  a reset state and  all settings return to default. \nThe RST  pin features a debounce  filter.  \nIf using the ADP5585ACBZ -01-R7 or ADP5585ACPZ -01-R7 \ndevice model , the  RST  pin acts as an extra row pin. Without a \nreset pin, t he only method  to reset the device is by bringing \nVDD below the UVLO threshold.  \nDEVICE OVERVIEW  \nThe ADP5585 contains 10  multi configurable input/output  pins. \nEach pin  can be programmed to enable the device to carry out \nits various functions , as follow s: \n• Keypad matrix decoding ( five-column by five -row matrix \nmax imum ). \n• General -purpose  I/O expansion (up to 10  input s/outputs ). \n• PWM generation . \n• Logic function building blocks (up to three  inputs  and one  \noutput) . \n• Two reset generators . \nAll 10  input/output  pins have an I /O structure as shown in \nFigure 6. \nI/OVDD\n100kΩ\nDEBOUNCE300kΩ\n300kΩ\n09841-005I/O\nDRIVE\n \nFigure 6. I/O S tructure Each I/O can be pulled up with a 100 kΩ or 300 kΩ resistor or \npulled down with a 300 kΩ resistor. For logic  output driv e, each \nI/O has  a 5 mA PMOS source and a 10  mA NMOS sink for a push -\npull type output. For open -drain output situations, the 5  mA \nPMOS source is not enabled. For logic input applications, e ach \nI/O can be sampled directly  or, alternatively, s ampled through a  \ndebounce  filter.  \nThe I/O structure shown in Figure 6 allows for all GPI and GPO \nfunctions , as well as PWM and clock divide functions. For  key \nmatrix scan and decode, the scanning circuit uses the 100  kΩ or \n300 kΩ resistor  for pulling up keypad row pins and the  10 mA \nNMOS sinks for grounding keypad column pins (see  the Key \nScan Control  section  for details about  key decoding).  \nConfiguration of the device is carrie d out by programming an \narray of internal registers via the I2C interface. Feedback of \ndevice status and pending interrupts can be flagged to an \nexternal processor by using  the INT  pin. \nThe ADP5585 is offered with three  feature sets . Table 5 lists the \noptions that are available for each model of the ADP5585.   \nTable 5. Matrix Options by Device Model  \nModel  Description  \nADP5585ACBZ -00-R7  GPIO pull up (default option)  \n 5-row × 5 -column matrix  \nADP5585ACBZ -01-R7  Row 5 added to GPIOs  \n 6-row × 5 -column matrix  \nADP5585ACBZ -02-R7  No pull-up resistors to special function \npins1 \n 5-row × 5 -column matrix  \nADP5585ACBZ -04-R7  Pull-down resistors to all GPIO pins on \nstart -up \n 5-row ×  5-column matrix  \nADP5585ACPZ -00-R7  GPIO pull up (default option)  \n 5-row × 5 -column matrix  \nADP5585ACPZ -01-R7  Row 5 added to GPIOs  \n 6-row × 5 -column matrix  \nADP5585AC PZ-03-R7  Alternate I2C address  (0x30)  \n 5-row × 5 -column matrix  \n \n1 Special function pins are defined as R0, R3, R4, and C4.  See Table 4 for \ndetails.  \n \nData Sheet  ADP5585  \n \nRev. C | Page 9  of 40 FUNCTIONAL  DESCRIPTION \nEVENT FIFO  \nBefore going into detail on the various ADP5585 blocks, it is \nimportant to understand the function of the event FIFO . The \nADP5585 features an event FIFO that  can record as many as  16 \nevents. By default, the FIFO primarily records key eve nts, such as \nkey press  and key release . However , it is possible to configure \nthe general -purpose input (GPI)  and logic activity to generate \nevent information on the FIFO  as well. An event count, EC[4:0] , \nis composed of  five bits and works in tandem with the FIF O so \nthat the user knows how much of the FIFO must  be read back at \nany given time.  \nThe FIFO is comp osed of 16 eight -bit sections that the user \naccesses by readin g the FIFO_x registers. The actual FIFO is \nnot in user accessible registers until a read occurs. The FIFO \ncan be thought of as a “ first in first out ” buffer that is used to \nfill Regis ter 0x03 to Register 0x12.  \nThe event FIFO is made up of 16 eight -bit registers. In each \nregister, Bits[ 6:0] hold the event identifier, and Bit 7 holds the \nevent state.  With seven bits, 127 different events can be identified.  \nSee Table 11 for event decoding.  \nEVENT1[7:0]\nEVENT8_IDENTIFIER[6:0]EVENT2[7:0]\nEVENT3[7:0]\nEVENT4[7:0]\nEVENT13[7:0]\nEVENT14[7:0]\nEVENT15[7:0]\nEVENT16[7:0]EVENT5[7:0]\nEVENT6[7:0]\nEVENT7[7:0]\nEVENT8[7:0]\nEVENT9[7:0]\nEVENT10[7:0]\nEVENT 11[7:0]\nEVENT12[7:0]7\nEVENT8_STATEGPI EVENTS EC[4:0]OVRFLOW_INT\nKEY EVENTS\nLOGIC EVENTS\n6543210\n09841-006FIFO\nUPD ATE\n \nFigure 7. Breakdown of Eventx[7:0] Bits  \nWhen events are available on the FIFO, the user should f irst \nread  back the event count, EC[4:0], to determine how many \nevents must  be read  back. Events can be read from the top of \nthe FIFO  only. When an event is read  back, all remaining events \nin the FIFO are  shifted up one location , and the EC[4:0] count  \nis de cremented.  KEY 3 PRESSED\nKEY 3 RELEASED\nGPI 7 ACTIVEEC = 3\nKEY 3 RELEASED\nGPI 7 ACTIVEEC = 2\nGPI 7 ACTIVEEC = 1\nEC = 0\n09841-007THIRD\nREADSECOND\nREADFIRST\nREAD\n \nFigure 8. FIFO Operation  \nThe FIFO registers (0x03 to 0x12) always  point to the top of the \nFIFO (that is, the location of EVENT1[7:0]). If the user tries to \nread  back from any location in a  FIFO, data is always obtaine d \nfrom the top of th at FIFO . This ensures that events can only be \nread  back in the order  in which they occurred , thus ensuring \nthe integrity of the FIFO system.  \nAs stated above, some of the onboard functions of ADP5585 \ncan be programmed to generate events on the FIFO. A FIFO \nupdate control block manages updates to the FIFO. If an I2C \ntransaction is accessing any of the FIFO address locations, \nupdates are paused until the I2C transaction has completed.  \nA FIFO overflow event  occurs  when  more than 16 events ar e \ngenerated prior to an external processor reading a FIFO and \nclear ing it. \nIf an overflow condition occurs, the overflow status bit is set. \nAn interrupt is generated if overflow interrupt is enabled, \nsignaling to the processor that more than 16 events have  \noccurred.  \nKEY SCAN CONTROL  \nGeneral  \nThe 10 input/output  pins can be configured to decode a keypad \nmatrix up to a maximum s ize of 25 switches (5  × 5 matrix). Smaller \nmatrices can also be configured, freeing up the unused row and column pins for other I/O fu nctions.  \nThe R0 through R4 I/O pins comprise  the rows of the keypad \nmatrix. The C0 through C4 I/O pins comprise  the columns of \nthe keyp ad matrix. Pins used as rows are pulled up via the internal \n300 kΩ (or 100  kΩ) resistors. Pins used as columns are driven \nlow via the internal NMOS current sink.  \nADP5585 Data Sheet\n \nRev. C | Page 10 of 40 1 23\n4 56\n7 89VDD\nR0 R1 R2 C2 C0 C1\n3 × 3 KEYPAD MATRIX\n09841-008KEY\nSCAN\nCONTROL\n \nFigure 9. Simplified Key Scan Block \nFigure 9 shows a simplified representation of the key scan block \nusing three row and three column pins connected to a small 3 × 3, nine-switch keypad matrix. When the key scanner is idle, the \nrow pins are pulled high and the column pins are driven low. \nThe key scanner operates by checking the row pins to see if they \nare low.  \nIf Switch 6 in the matrix is pressed, R1 connects to C2. The key \nscan circuit senses that one of the row pins has been pulled low, and a key scan cycle begins. Key scanning involves driving all column pins high, then driving each column pin, one at a time, low and sensing whether a row pin is low or not. All row/column pairs are scanned; therefore, if multiple keys are pressed, they \nare detected.  \nTo prevent glitches or narrow press times being registered as a \nvalid key press, the key scanner requires the key be pressed for two scan cycles. The key scanner has a wait time between each \nscan cycle; therefore, the key must be pressed and held for at \nleast this wait time to register as being pressed. If the key is continuously pressed, the key scanner continues to scan, wait, \nscan, wait, and so forth. \nIf Switch 6 is released, the connection between R1 and C2 \nbreaks, and R1 is pulled up high. The key scanner requires that the key be released for two scan cycles because the release of a \nkey is not necessarily in sync with the key scanner, it may take \nup to two full wait/scan cycles for a key to register as released. When the key is registered as released, and no other keys are \npressed, the key scanner returns to idle mode. \nFor the remainder of this document, the press/release status of a \nkey is represented as simply a logic signal in the figures. A logic high level represents the key status as pressed, and a logic low \nrepresents released. This eliminates the need to draw individual \nrow/column signals when describing key events. \nKEY x KEY RELEASED KEY RELEASEDKEY PRESSED\n09841-009 \nFigure 10. Logic Low: Released, Logic High: Pressed \nFigure 11 shows a detailed representation of the key scan block \nand its associated control and status signals. When all row and \ncolumn pins are used, a matrix of 25 unique keys can be \nscanned. \nLOGIC EVENT\n5 4 3 2 1\n10 9 8 7 6\n15 14 13 12 11\n20 19 18 17 16\n25 24 23 22 21\n30 29 28 27 26I/O CONFIGURATIONKEY EVENT\nGPI EVENTI2C BUSY?\nR0 R3 R1 R2 R4 R5 C0 C1 C2 C3 C4PIN_CONFIG_A[7:0]\nPIN_CONFIG_B[7:0]\nFIFOPIN_CONFIG_C[7:0]\nEVENT_INT\nOVRFLOW_INT\nEC[4:0]RESET_TRIG_TIME[2:0]\nRESET1_EVENT_A[7:0]\nRESET1_EVENT_B[7:0]\nRESET1_EVENT_C[7:0]\n31\n33\n3632\n3534RESET2_EVENT_A[7:0]\nRESET2_EVENT_B[7:0]RESET 1_INITIATE\nRESET 2_INITIATE\n09841-010FIFO\nUPDATEKEY SCAN\nCONTROL\nCOLUMN\nSINK ON/OFFROW\nSENSE\n \nFigure 11. Detailed Key Scan Block \nData Sheet ADP5585\n \nRev. C | Page 11 of 40 Use Registers PIN_CONFIG_A[7:0] and PIN_CONFIG_B[7:0] \nto configure I/Os for keypad decoding. The number label on each key switch represents the event identifier that is recorded if that switch was pressed. If all row/column pins are config-\nured, it is possible to observe all 25 key identifiers on the \nFIFO. A larger 6 × 5 matrix can be configured by using the \nADP5585ACBZ-01-R7 or the ADP5585ACPZ-01-R7. \nIf a smaller 2 × 2 matrix is configured, for example, by using the \nC2 and C3 column pins and the R1 and R2 row pins, only the four event identifiers (8, 9, 13, and 14) can possibly be observed \non the FIFO, as shown in Figure 11.  \nBy default, ADP5585 records key presses and releases on the \nFIFO. Figure 12 illustrates what happens when a single key is \npressed and released. Initially, the key scanner is idle. When  \nKey 3 is pressed, the scanner begins scanning through all configured row/column pairs. After the scan wait time, the scanner again scans through all configured row/column pairs and detects that Key 3 has remained pressed, which sets the \nEVENT_INT interrupt. The event counter, EC[4:0], is incre-\nmented to 1, EVENT1_IDENTIFIER[6:0] of the FIFO is updated with its event identifier set to 3, and its \nEVENT1_STATE bit is set to 1, indicating a press. \nKEY 3\nKEY 3 PRESS\nKEY 3 RELEASEKEY SCAN\nEVENT_INT\nEC[4:0]\nFIFO1 2\n1\n0\n0\n033\n0\n0\n09841-011 \nFigure 12. Press and Release Event \nThe key scanner continues the scan/wait cycles while the key \nremains pressed. If the scanner detects that the key has been released for two consecutive scan cycles, the event counter, EC[4:0], is incremented to 2, and EVENT2_IDENTIFIER[6:0] of the FIFO is updated with its event identifier set to 3. Its \nEVENT2_STATE bit is set to 0, indicating a release. The key \nscanner returns to idle mode because no other keys are pressed. \nThe EVENT_INT interrupt can be triggered by both press and \nrelease key events. As shown in Figure 14, if Key 3 is pressed, EVENT_INT is asserted, EC[4:0] is updated, and the FIFO is updated. During the time that the key remains pressed, it is possible for the FIFO to be read, the event counter decremented \nto 0, and EVENT_INT cleared. When the key is finally released, \nEVENT_INT is asserted, the event counter is incremented, and \nthe FIFO is updated with the release event information. KEY 3\nKEY 3 PRESS KEY 32 RELEASEKEY SCAN\nEVENT_INTEVENT_INT CLEARED\nEC[4:0]\nFIFO\nFIFO\nREAD0\n00\n00\n00\n0FIFO\n1\n00\n03\n00\n0FIFO101\n0\n00\n03\n00\n0\n09841-012 \nFigure 13. Asserting the EVENT_INT Interrupt Key Pad Extension \nAs shown in Figure 11, the keypad can be extended if each row \nis connected directly to ground by a switch. If the switch placed between R0 and ground is pressed, the entire row is grounded. \nWhen the key scanner completes scanning, it normally detects \nKey 1 to Key 5 as being pressed; however, this unique condition is decoded by the ADP5585, and Key Event 31 is assigned to it. Up to eight more key event assignments are possible, allowing the keypad size to extend up to 30. However, if one of the extended \nkeys is pressed, none of the keys on that row is detectable. \nActivation of a ground key causes all other keys sharing that \nrow to be undetectable.  \nGhosting \nGhosting is an occurrence where, given certain key press com-\nbinations on a keypad matrix, a false positive reading of an \nadditional key is detected. Ghosting is created when three or \nmore keys are pressed simultaneously on multiple rows or columns (see Figure 14). Key combinations that form a right \nangle on the keypad matrix can cause ghosting.  \nThe solution to ghosting is to select a keypad matrix layout that \ntakes into account three key combinations that are most likely to be pressed together. Multiple keys pressed across one row or \nacross one column do not cause ghosting. Staggering keys so that \nthey do not share a column also avoids ghosting. The most common practice is to place keys that are likely to be pressed together in the same row or column. Some examples of keys \nthat are likely to be pressed together are as follows: \n\uf0b7 The navigation keys in combination with Select. \n\uf0b7 The navigation keys in combination with the space bar. \n\uf0b7 The reset combination keys, such as CTRL + ALT + DEL. \nCOL0\nROW0\nROW1\nROW2\nROW3PRESS\nGHOSTPRESS\nPRESSCOL1 COL2\n09841-013 \nFigure 14. COL0: ROW3 is a Ghost Key Due to a Short Among ROW0, COL0, \nCOL2, and ROW3 During Key Press \nADP5585  Data Sheet  \n \nRev. C | Page 12 of 40 GPI INPUT \nEach of the 10  input/output lines can be configured as a \ngeneral -purpose l ogic input line. Figure 15 shows a detailed \nrepresentation of the GPI scan and detect block and its \nassociated control and status signals. \nPIN_CONFIG_A[7:0]\nPIN_CONFIG_B[7:0]\nGPI_INT\nGPIO 1\nGPIO 2\nGPIO 3\nGPIO 4\nGPIO 5\nGPIO 6\nGPIO 7\nGPIO 8\nGPIO 9(R0)\n(R1)\n(R2)\n(R3)\n(R4)\nRST/(R5)\n(C0)\n(C1)\n(C2)\nGPIO 10\nGPIO 11(C3)\n(C4)GPI EVENTKEY EVENTOVRFLOW_INT\nLOGIC EVENTGPI_INT_LEVEL_A[7:0]\nGPI_INT_LEVEL_B[7:0]\nGPI_INTERRUPT_EN_A[7:0]GPIO_DIRECTION_A[7:0]\nGPI_S TATUS_A[5:0]\nGPI_S TATUS_B[4:0]GPI_INT_S TAT_A[5:0]\nGPI_EVENT_EN_A[7:0]GPIO_DIRECTION_B[7:0]\nGPI_INTERRUPT_EN_B[7:0]\nGPI_EVENT_EN_B[7:0]EVENT_INT\nGPI_INT_S TAT_B[4:0]\nRESET_TRIG_TIME[2:0]\nRESET1_EVENT_A[7:0]\nRESET1_EVENT_B[7:0]\nRESET1_EVENT_C[7:0]\nRESET2_EVENT_A[7:0]\nRESET2_EVENT_B[7:0]\nFIFO1:FIFO16EC[4:0]\n09841-014FIFO\nUPD ATEGPI SCAN\nCONTRO L\nI2C BUSY\n \nFigure 15. GPI Scan and Detect Block  \nThe current input state of each GPI can be r ead back using the \nGPI_STATUS_x registers. Each GPI can be programmed to generate an interrupt via the GPI_INTERRUPT_EN_x  registers. \nThe interrupt status is stored in the GPI_INT_STAT_x registers. GPI interrupts can be programmed to trigger on the positive  or \nnegative edge by configuring  the GPI_INT_LEVEL_x registers. \nIf any of the GPI interrupts is triggered, the master GPI_INT interrupt is also triggered. Figure 16 show s a single GPI and \nhow it affects its corresponding status an d interrupt status bits.  \nGPI 3\nGPI_S TATUS_A[3]GPI_INTERRUPT_EN_A[3]\nGPI_INT_S TAT_A[3]\nGPI_INTGPI_INT_LEVEL_A[3]\n09841-015CLEARED\nBY READ\nCLEARED\nBY WRITE ‘1 ’ \nFigure 16. Single GPI  Example  \nGPIs can be programmed to generate FIFO events via the GPI_EVENT_EN_x registers. GPIs in this mode do not generate GPI_INT interrupts and instead generate EVENT_INT interrupt s. \nFigure 17 shows several GPI lines and their effect s on the FIFO  \nand event count , EC[4:0] . GPI 2\nGPI SCAN\nEVENT_INT\nEC[4:0]\n1 6\nGPI 2 ACTIVEGPI 4GPI 7\n2 3 4 5\nGPI 7 ACTIVE\nGPI 4 ACTIVE\nGPI 4 INACTIVE\nGPI 7 INACTIVE\nGPI 2 INACTIVEFIFO\n1\n1\n1\n0\n0\n038\n3843\n4340\n40\n09841-016 \nFigure 17. Multiple GPI Example \nThe GPI scanner is idle until it detects a level transition. I t scans \nthe GPI inputs and updates accordingly. It then returns to idle immediately, it does not  scan/wait, like the key scanner. As \nsuch, the GPI s canner can detect narrow pulses  once they get \npast the 50  μs input debounce  filter . \nGPO OUTPUT  \nEach of the 10 input/output  lines can be configured as a general -\npurpose output (GPO) line. Figure 6 shows a detailed diagram \nof the I/O structure. See the Detailed Register Descriptions  \nsection for GPO configuration and usage.  \nLOGIC BLOCKS  \nSeveral of the ADP5585 input/output  lines can be used as inputs \nand outputs for implementing some common logic functions.  \nThe R1, R2, and R3 input/o utput  pins can be used as inputs, \nand the R0 input/output  pin can be used as an output for the \nlogic b lock.   \nThe outputs from the logic blocks can be configured to generate interrupts. They can also be configured to generate events on the FIFO . \nFigure 19 shows a detailed diagram of the internal make -up of \nthe logic block, illustrating the possible logic functions that can be implemented.  \n \nData Sheet  ADP5585  \n \nRev. C | Page 13 of 40 GPI EVENTKEY EVENT\nLOGIC EVENT(R1) LA\nLCLB\nLA_INV\nD\nCLRQSETLB_INV\nLC_INV\nFF_SET\nFF_CLR\nR3_EXTEND_CFG[1:0]LOGIC_SEL[2:0]LY_INV(R2)\n(R3)LOGIC BLOCK\nLY (R0)\nLOGIC_INTLOGIC_INT_LEVE L\nLOGIC_EVENT_ENOVRFLOW_INT\nEVENT_INTRESET_TRIG_TIME[2:0]\nRESET1_EVENT_A[7:0]\nRESET1_EVENT_B[7:0]\nRESET1_EVENT_C[7:0]\nRESET2_EVENT_A[7:0]\nRESET2_EVENT_B[7:0]FIFOEC[4:0]\n09841-017LOGIC\nEVENT/INT\nGENER ATORI2C BUSY\nFIFO\nUPD ATE\n \nFigure 18. Logic Block Overview  PWM BLOCK  \nThe ADP55 85 features a PWM generator whose output can be \nconfigured to drive out on the R3 I/O pin . PWM on/off times \nare programmed via four 8 -bit registers (see Figure 20). Each  \nbit of the on or off time represents 1  µs. The highest frequency \nobtainable from the PWM is performed by setting the least \nsignificant bit of both the on and off time bit patterns, resulting \nin a 500 kHz signal with a 50% duty cycle.  \nThe PWM block provides support for continuous PWM mode as well as a one -shot mode (see Table 59). Additionally, an \nexternal signal can be AND’ ed with the internal PWM signal. This option can be selected by writing a 1 to PWM_IN_AND (PWM_CFG[2] ). The input to the external AND is the C3 I/O \npin. C3 should be set to GPI. Note that the debounce for C3 result s in a delay of the AND’ing, and can be turned on or off \nusing Register 0x21.  \nNewly programmed values are not latched until the final byte, \nPWM_ONT_HIGH_BYTE ( Register 0x32 , Bits[ 7:0]), is written.  09841-018LA_INV\nMUX\n000\n001\nSEL[2:0]OUT010\n011\n100\n101\n110\n111SELOUT0\n1\nGND\nAND\nOR\nXOR\nFF\nIN_L A\nIN_LB\nIN_LCLALA\nLAIN_L A\nSELOUT0\n1ANDIN_L A\nIN_LB\nIN_LC\nR3_EXTEND_CFG[1:0] = 01LOGIC_SEL[2:0]LY_INVSELOUT0\n1LY\nLY\nLYLB_INVSELOUT0\n1LBLB\nLBIN_LB\nLC_INVSELOUT0\n1LCLC\nLCIN_LC\nFF_SET\nFF_CLRSELOUT0\n1ORIN_L A\nIN_LB\nIN_LCAND\nAND\nOR\nOR\nSELOUT0\n1XORIN_L A\nIN_LB\nIN_LC\nIN_L A\nIN_LB\nIN_LCXOR\nXOR\nD\nCLRQSET\n0\n1\nSELOUTFF\n \nFigure 19. Logic B lock  \n(C3) PWM_INOFF TIME[15:0]PWM_EN\nPWM_IN_ANDPWM_OFFT_LOW_BYTE[7:0]PWM_MODE\nPWM_OFFT_HIGH_BYTE[7:0]\nPWM_ONT_LOW_BYTE[7:0]\nPWM_ONT_HIGH_BYTE[7:0] ON TIME[15:0]SELOUT0\n1\n09841-019ANDPWM\nGENER ATOR(R3)\nPWM_OUT\n \nFigure 20. PWM Block Diagram  \nADP5585  Data Sheet  \n \nRev. C | Page 14 of 40 RESET BLOCKS  \nADP5585 features two  reset block s that can generate  reset con -\nditions if certain events are detected  simultaneously . Up to three \nreset trigger events can be programmed  for RESET 1. Up to two \nreset trigger events can be programmed for RESET 2. The event \nscan control blocks monitor whether these events are  present for \nthe duration of RESET_TRIG_TIME [2:0]  (Register 0x2 E, \nBits[4:2]) . If they are, reset -initiate signals are sent to the reset \ngenera tor blocks. The generated reset signal pulse width is  \nprogrammable.  \nRESET_PULSE_WIDTH[1:0]RESET_TRIG_TIME[2:0]\nRESET1_EVENT_A[7:0]\nRESET1_EVENT_B[7:0]\nRESET1_EVENT_C[7:0]KEY\nSCAN\nCONTROLRST_PASSTHRU_ENRST\n(R4)\nRESET1\nGPI\nSCAN\nCONTROL\nLOG IC\nBLOCK\nCONTROLRESET2_EVENT_A[7:0]\nRESET2_EVENT_B[7:0]\n(C4)\nRESET2RESET1_\nINITIATE\nRESET2_\nINITIATERESET\nGEN 2RESET\nGEN 1\n09841-020 \nFigure 21. Reset Blocks  \nThe R eset 1 signal uses the R4 I/O pin as its output . A pass \nthrough mode allows the main  RST  pin to be output  on the R 4 \npin also . The R eset 2 signal uses  the C4 I/O pin as its output . The reset generation signal s are  useful in situations where the \nsystem processor has locked up and the system i s unresponsive \nto input events. The user can press  one of  the reset event combi -\nnation s and initiate a system wide reset. This alleviates the need \nfor removing the battery from the  system and doing a hard reset.   \nIt is not recommended to use the immediate trigger time (see \nTable 54) because this setting may cause false triggering.  \nInterrupts  \nThe INT  pin can be asserted low if any of the internal interrupt \nsources is active.  The user can select  which internal interrupts \ninteract with the external interrupt pin in Register 0x3C (refer \nto Table 68). Register 0x3B allows the user to choose whether \nthe external interrupt pin remains asserted , or deasserts fo r \n50 µs, then reasserts, in the case that there are multiple internal \ninterrupts asserted and one is cleared (refer to Table 67). \nEVENT_INT\nEVENT_IEN\nINT DRIVE INT\nINT_CFGGPI_INT\nGPI_IEN\nLOGIC_INT\nLOGIC_IEN\nOVRFLOW_INT\nOVRFLOW_IEN\n09841-021 \nFigure 22. Asserting INT Low  \n \nData Sheet ADP5585\n \nRev. C | Page 15 of 40 REGISTER INTERFACE \nRegister access to the ADP5585 is acquired via its I2C-compatible \nserial interface. The interface can support clock frequencies of \nup to 1 MHz. If the user is accessing the FIFO or key event counter (KEC), FIFO/KEC updates are paused. If the clock \nfrequency is very low, events may not be recorded in a timely \nmanner. FIFO or KEC updates can happen up to 23 μs after an interrupt is asserted because of the number of I\n2C cycles required \nto perform an I2C read or write. This delay should not present \nan issue to the user. \nFigure 23 shows a typical write sequence for programming an \ninternal register. The cycle begins with a start condition, followed \nby the hard coded 7-bit device address, which for the ADP5585 \nis 0x34, followed by the R/ W bit set to 0 for a write cycle. The \nADP5585 acknowledges the address byte by pulling the data \nline low. The address of the register to which data is to be written is sent next. The ADP5585 acknowledges the register pointer byte by pulling the data line low. The data byte to be written is sent next. The ADP5585 acknowledges the data byte by pulling the data line low. A stop condition completes the sequence. \nFigure 24 shows a typical multibyte write sequence for program-\nming internal registers. The cycle begins with a start condition \nfollowed by the 7-bit device address (0x34 for all models except the ADP5585ACPZ-03-R7, 0x30 for the ADP5585ACPZ-03-R7 \nonly), followed by the R/ W\n bit set to 0 for a write cycle. The \nADP5585 acknowledges the address byte by pulling the data line low. The address of the register to which data is to be written \nis sent next. The ADP5585 acknowledges the register pointer byte by pulling the data line low. The data byte to be written is sent next. The ADP5585 acknowledges the data byte by pulling \nthe data line low. The pointer address is then incremented to \nwrite the next data byte, until it finishes writing the n data byte. The ADP5585 pulls the data line low after every byte, and a stop \ncondition completes the sequence. \nFigure 25 shows a typical byte read sequence for reading inter-\nnal registers. The cycle begins with a start condition followed  by the 7-bit device address (0x34 for all models except the \nADP5585ACPZ-03-R7, 0x30 for the ADP5585ACPZ-03-R7 \nonly), followed by the R/ W\n bit set to 0 for a write cycle. The \nADP5585 acknowledges the address byte by pulling the data line \nlow. The address of the register from which data is to be read is sent next. The ADP5585 acknowledges the register pointer byte by pulling the data line low. A start condition is repeated, followed by the 7-bit device addr ess (0x34 for all models except \nthe ADP5585ACPZ-03-R7, 0x30 for the ADP5585ACPZ-03-R7 \nonly), followed by the R/ W\n bit set to 1 for a read cycle. The \nADP5585 acknowledges the address byte by pulling the data \nline low. The 8-bit data is then read. The host pulls the data line high (no acknowledge), and a stop condition completes the \nsequence.  \nSTART 0 = WRITE\n7-BIT DEVICE ADDRESS\nADP5585 ACK8-BIT REGISTER POINTER 8-BIT WRITE DATA 0 000\nADP5585 ACK ADP5585 ACKSTOP\n09841-022 \nFigure 23. I2C Single Byte Write Sequence \n \nSTART 0 = WRITE\n7-BIT DEVICE ADDRESS\nADP5585 ACK8-BIT REGISTER POINTER WRITE BYTE 1 WRITE BYTE 2 WRITE BYTE n 00 0 0 0 0 0\nADP5585 ACK ADP5585 ACK ADP5585 ACK ADP5585 ACK ADP5585 ACKSTOP\n09841-023 \nFigure 24. I2C Multibyte Write Sequence \n \nSTART 0 = WRITE\n7-BIT DEVICE ADDRESS 7-BIT DEVICE ADDRESS\nADP5585 ACK8-BIT REGISTER POINTER 8-BIT READ DATA 00 0 10 1REPE AT ST ART 1 = READ\nADP5585 ACK ADP5585 ACK NO ACKSTOP\n09841-024 \nFigure 25. I2C Single Byte Read Sequence \nADP5585 Data Sheet\n \nRev. C | Page 16 of 40 Figure 26 shows a typical multibyte read sequence for reading \ninternal registers. The cycle begins with a start condition, followed by the 7-bit device address (0x34 for all models except the ADP5585ACPZ-03-R7, 0x30 for the ADP5585ACPZ-03-R7 \nonly), followed by the R/ W\n bit set to 0 for a write cycle. The \nADP5585 acknowledges the address byte by pulling the data \nline low. The address of the register from which data is to be read \nis sent next. The ADP5585 acknowledges the register pointer byte by pulling the data line low. A start condition is repeated, followed by the 7-bit device address (0x34 for all models except the ADP5585ACPZ-03-R7, 0x30 for the ADP5585ACPZ-03-R7 \nonly), followed by the R/ W\n bit set to 1 for a read cycle. The \nADP5585 acknowledges the address byte by pulling the data \nline low. The 8-bit data is then read. The address pointer is then incremented to read the next data byte, and the host continues to pull the data line low for each byte (master acknowledge) until \nthe n data byte is read. The host pulls the data line high (no \nacknowledge) after the last byte is read, and a stop condition \ncompletes the sequence. \n \nSTART 0 = WRITE\n7-BIT DEVICE ADDRESS 7-BIT DEVICE ADDRESS\nADP5585 ACK8-BIT REGISTER POINTER READ BYTE 1 READ BYTE 2 READ BYTE n 00 0 1 0 0 0 0 1REPE AT START 1 = REA D\nADP5585 ACK ADP5585 ACK MASTER ACK MASTER ACK MASTER ACK NO ACKSTOP\n09841-025 \nFigure 26. I2C Multibyte Read Sequence \n \nData Sheet  ADP5585  \n \nRev. C | Page 17 of 40 REGISTER MAP  \nTable 6.  \nReg   \nAdd Reg  \nName  R/W1 Bit 7  Bit 6  Bit 5  Bit 4  Bit 3  Bit 2  Bit 1  Bit 0  \n0x00  ID R MAN_ID  REV_ID  \n0x01  INT_STATUS  R/W  Reserved  LOGIC_INT  Reserved  OVRFLOW_  \nINT GPI_INT  EVENT_INT  \n0x02  Status  R Reserved  LOGIC_STAT  Reserved  EC[4:0]  \n0x03  FIFO_1  R EVENT1_STATE  EVENT1_IDENTIFIER[6:0]  \n0x04  FIFO_2  R EVENT2_STATE  EVENT2_IDENTIFIER[6:0]  \n0x05  FIFO_3  R EVENT3_STATE  EVENT3_IDENTIFIER[6:0]  \n0x06  FIFO_ 4 R EVENT4_STATE  EVENT4_IDENTIFIER[6:0]  \n0x07  FIFO_5  R EVENT5_STATE  EVENT5_IDENTIFIER[6:0]  \n0x08  FIFO_6  R EVENT6_STATE  EVENT6_IDENTIFIER[6:0]  \n0x09  FIFO_7  R EVENT7_STATE  EVENT7_IDENTIFIER[6:0]  \n0x0A  FIFO_8  R EVENT8_STATE  EVENT8_IDENTIFIER[6:0]  \n0x0B  FIFO_9  R EVENT9_STATE  EVENT9_IDENTIFIER[6:0]  \n0x0C  FIFO_10  R EVENT10_STATE  EVENT10_IDENTIFIER[6:0]  \n0x0D  FIFO_11  R EVENT11_STATE  EVENT11_IDENTIFIER[6:0]  \n0x0E  FIFO_12  R EVENT12_STATE  EVENT12_IDENTIFIER[6:0]  \n0x0F  FIFO_13  R EVENT13_STATE  EVENT13_IDENTIFIER[6:0]  \n0x10  FIFO_14  R EVENT14_STATE  EVENT14_IDENTIFIER[6:0]  \n0x11  FIFO_15  R EVENT15_STATE  EVENT15_IDENTIFIER[6:0]  \n0x12  FIFO_16  R EVENT16_STATE  EVENT16_IDENTIFIER[6:0]  \n0x13  GPI_INT_  \nSTAT_A  R Reserved  GPI_6_INT  GPI_5_INT  GPI_4_INT  GPI_3_INT  GPI_2_INT  GPI_1_INT  \n0x14 GPI_INT_  \nSTAT_B  R Reserved  GPI_11_INT  GPI_10_INT  GPI_9_INT  GPI_8_INT  GPI_7_INT  \n0x15  GPI_STATUS_A  R Reserved  GPI_6_STAT  GPI_5_STAT  GPI_4_STAT  GPI_3_STAT  GPI_2_STAT  GPI_1_STAT  \n0x16  GPI_STATUS_B  R Reserved  GPI_11_STAT  GPI_10_STAT  GPI_9_STAT  GPI_8_STAT  GPI_7_STAT  \n0x17  R_PULL_  \nCONFIG_A  R/W  R3_PULL_CFG  R2_PULL_CFG  R1_PULL_CFG  R0_PULL_CFG  \n0x18  R_PULL_  \nCONFIG_B  R/W  Reserved  R5_PULL_CFG  R4_PULL_CFG  \n0x19  R_PULL_  \nCONFIG_C  R/W  C3_PULL_CFG  C2_PULL_CFG  C1_PULL_CFG  C0_PULL_CFG  \n0x1A  R_PULL_  \nCONFIG_D  R/W  Reserved  C4_PULL_CFG  \n0x1B  GPI_INT_  \nLEVEL_A  R/W  Reserved  GPI_6_  \nINT_LEVEL  GPI_5_  \nINT_LEVEL  GPI_4_  \nINT_LEVEL  GPI_3_  \nINT_LEVEL  GPI_2_  \nINT_LEVEL  GPI_1_  \nINT_LEVEL  \n0x1C  GPI_INT_  \nLEVEL_B  R/W  Reserved  GPI_11_  \nINT_LEVEL  GPI_10_  \nINT_LEVEL  GPI_9_  \nINT_LEVEL  GPI_8_  \nINT_LEVEL  GPI_7_  \nINT_LEVEL  \n0x1D  GPI_EVENT_EN_A  R/W  Reserved  GPI_6_  \nEVENT_EN  GPI_5_  \nEVENT_EN  GPI_4_  \nEVENT_EN  GPI_3_  \nEVENT_EN  GPI_2_  \nEVENT_EN  GPI_1_  \nEVENT_EN  \n0x1E  GPI_EVENT_EN_B  R/W  Reserved  GPI_11_  \nEVENT_EN  GPI_10_  \nEVENT_EN  GPI_9_  \nEVENT_EN  GPI_8_  \nEVENT_EN  GPI_7_  \nEVENT_EN  \n0x1F  GPI_INTERRUPT_  \nEN_A  R/W  Reserved  GPI_6_  \nINT_EN  GPI_5_  \nINT_EN  GPI_4_  \nINT_EN  GPI_3_  \nINT_EN  GPI_2_  \nINT_EN  GPI_1_  \nINT_EN  \n0x20  GPI_INTERRUPT_  \nEN_B  R/W  Reserved  GPI_11_  \nINT_EN  GPI_10_  \nINT_EN  GPI_9_  \nINT_EN  GPI_8_  \nINT_EN  GPI_7_  \nINT_EN  \n0x21 DEBOUNCE_  \nDIS_A R/W  Reserved  GPI_6_  \nDEB_DIS  GPI_5_  \nDEB_DIS  GPI_4_  \nDEB_DIS  GPI_3_  \nDEB_DIS  GPI_2_  \nDEB_DIS  GPI_1_  \nDEB_DIS  \n0x22  DEBOUNCE_  \nDIS_B  R/W  Reserved  GPI_11_  \nDEB_DIS  GPI_10_  \nDEB_DIS  GPI_9_  \nDEB_DIS  GPI_8_  \nDEB_DIS  GPI_7_  \nDEB_DIS  \n0x23  GPO_DATA_  \nOUT_A  R/W Reserved  GPO_6_  \nDATA  GPO_5_  \nDATA  GPO_4_  \nDATA  GPO_3_  \nDATA  GPO_2_  \nDATA  GPO_1_  \nDATA  \n0x24  GPO_DATA_  \nOUT_ B R/W  Reserved  GPO_11_  \nDATA  GPO_10_  \nDATA  GPO_9_  \nDATA  GPO_8_  \nDATA  GPO_7_  \nDATA  \n0x25  GPO_OUT_  \nMODE_A  R/W  Reserved  GPO_6_  \nOUT_MODE  GPO_5_  \nOUT_MODE  GPO_4_  \nOUT_MODE  GPO_3_  \nOUT_MODE  GPO_2_  \nOUT_MODE  GPO_1_  \nOUT_MODE  \nADP5585  Data Sheet  \n \nRev. C | Page 18 of 40 Reg   \nAdd Reg  \nName  R/W1 Bit 7  Bit 6  Bit 5  Bit 4  Bit 3  Bit 2  Bit 1  Bit 0  \n0x26  GPO_OUT_  \nMODE_B  R/W  Reserved  GPO_11_  \nOUT_MODE  GPO_10_  \nOUT_MODE  GPO_9_  \nOUT_MODE  GPO_8_  \nOUT_MODE  GPO_7_  \nOUT_MODE  \n0x27  GPIO_  \nDIRECTION_A R/W  Reserved  GPO_6_  \nDIR GPO_5_  \nDIR GPO_4_  \nDIR GPO_3_  \nDIR GPO_2_  \nDIR GPO_1_  \nDIR \n0x28  GPIO_  \nDIRECTION_B  R/W  Reserved  GPO_11_  \nDIR GPO_10_  \nDIR GPO_9_  \nDIR GPO_8_  \nDIR GPO_7_  \nDIR \n0x29  RESET1_EVENT_A  R/W  RESET1_  \nEVENT_  \nA_LEVEL  RESET1_EVENT_A  [6:0]  \n0x2A  RESET1_EVENT_B  R/W  RESET1_  \nEVENT_  \nB_LEVEL  RESET1_EVENT_B  [6:0]  \n0x2B RESET1_EVENT_C  R/W  RESET1_  \nEVENT_  \nC_LEVEL  RESET1_EVENT_C  [6:0]  \n0x2C  RESET2_EVENT_A  R/W  RESET2_  \nEVENT_  \nA_LEVEL  RESET2_EVENT_A  [6:0]  \n0x2D  RESET2_EVENT_B  R/W  RESET2_  \nEVENT_  \nB_LEVEL  RESET2_EVENT_B  [6:0]  \n0x2E  RESET2_CFG  R/W  RESET2_POL  RESET1_POL  RST_PASS \nTHRU_EN  RESET_TRIG_TIME [2:0]  RESET_PULSE_WIDTH[1:0]  \n0x2F  PWM_OFFT_LOW  R/W  PWM_OFFT_LOW_BYTE[7:0]  \n0x30  PWM_OFFT_HIGH  R/W  PWM_OFFT_HIGH_BYTE[7:0]  \n0x31  PWM_ONT_LOW  R/W  PWM_ONT_LOW_BYTE[7:0]  \n0x32  PWM_ONT_HIGH  R/W  PWM_ONT_HIGH_BYTE[7:0]  \n0x33 PWM_CFG  R/W  Reserved  PWM_IN_  \nAND  PWM_MODE  PWM_EN  \n0x34  LOGIC_CFG  R/W  Reserved  LY_INV  LC_INV  LB_INV  LA_INV  LOGIC_SEL[2:0]  \n0x35  LOGIC_FF_CFG  R/W  Reserved  FF_SET  FF_CLR  \n0x36  LOGIC_INT_  \nEVENT_EN  R/W  Reserved  LY_DBNC_  \nDIS LOGIC_  \nEVENT_EN  LOGIC_INT_  \nLEVEL  \n0x37  POLL_TIME_CFG  R/W  Reserved  KEY_POLL_TIME[1:0]  \n0x38  PIN_CONFIG_A  R/W  Reserved  R5_CONFIG  R4_CONFIG  R3_CONFIG  R2_CONFIG  R1_CONFIG  R0_CONFIG  \n0x39  PIN_CONFIG_B  R/W  Reserved  C4_CONFIG  C3_CONFIG  C2_CONFIG  C1_CONFIG  C0_CONFIG  \n0x3A  PIN_CONFIG_ C R/W  PULL_SEL ECT C4_EXTEND_CFG  R4_EXTEND  \n_CFG  Reserved  R3_EXTEND_CFG[1:0]  Reserved  R0_EXTEND  \n_CFG  \n0x3B  GENERAL_CFG  R/W  OSC_EN  CORE_FREQ[1:0]  Reserved  INT_CFG  RST_CFG  \n0x3C  INT_EN  R/W  Reserved  LOGIC_IEN  Reserved  OVRFLOW_  \nIEN GPI_IEN  EVENT_IEN  \n \n1 R means read,  W means write, and R/W means read/write.  \n \nData Sheet  ADP5585  \n \nRev. C | Page 19 of 40 DETAILED REGISTER DE SCRIPTIONS  \nNote that N/A throughout this section means not applicable.   \nNote: All register default to 0000 0000 unless otherwise specified.  \nID Register 0x00  \nTable 7. ID Bit Descriptions  \nBit(s) Bit N ame Access  Description  \n7 to 4 MAN_ID Read only  Manufacturer ID, default = 0010  \n3 to 0 REV_ID  Read only  Rev ID  \nINT_STATUS Register 0x01  \nTable 8. INT_STATUS  Bit Descriptions  \nBit(s) Bit Name  Access  Description1 \n7 to 5 N/A   Reserved . \n4 LOGIC_INT  Read/write  0 = no interrupt . \n   1 = interrupt due to a general logic condition . \n3 N/A   Reserved . \n2 OVERFLOW_INT  Read/write  0 = no interrupt . \n   1 = interrupt due to an overflow condition . \n1 GPI_INT  Read/write  This bit is not set by a GP I that has been configured to update the FIFO and event count.  \n   This bit cannot be cleared until all GPI_x_INT bits are cleared . \n   0 = no interrupt . \n   1 = interrupt due to a general GPI condition . \n0 EVENT_INT  Read/write  0 = no interrupt . \n   1 = in terrupt due to key event (press/release), GPI event (GPI pr ogrammed for FIFO \nupdates), or logic event (programmed for FIFO updates) . \n \n1 Interrupt bits are cleared by writing a 1 to the flag; writing a 0 or reading the flag has no effect.  \nStatus Register 0x02  \nTable 9. Status Bit Descriptions  \nBit(s) Bit Name  Access  Description  \n7 N/A   Reserved . \n6 LOGIC_STAT  Read only  0 = output from logic block (LY) is low . \n   1 = o utput from logic block (LY) is high.  \n5 N/A   Reserved . \n4 to 0 EC[4:0]  Read only  Event count value. Indicates how many events are currently stored on the FIFO.  \nFIFO_1 Regi ster 0x03  \nTable 10. FIFO_1  Bit Descriptions  \nBit(s) Bit Name  Access  Description  \n7 EVENT1_STATE  Read  only  This bit represents the state of the event that is recorded in the  EVENT1_IDENTIFIER[6:0]  bit. \n   For key events from Event 1 to Event 36 , use the following settings:  \n   1 = key is pressed.  \n   0 = key is released.  \n   For GPI and logic events from Event 37 to Event 4 8, use the following settings:  \n   1 = GPI/logic is active.  \n   0 = GPI/logic is inactive.  \n   Active and inactiv e states for Event 37 to Event 48 are programmable.  \n6 to 0 EVENT1_IDENTIFIER[6:0]  Read only  Contains the event identifier for the pin. Refer to Table 11. \n \n \nADP5585  Data Sheet  \n \nRev. C | Page 20 of 40 Table 11. Event Decoding  \nEvent No. Meaning  Event No.  Meaning  Event No.  Meaning  Event No.  Meaning  \n0 No event  32 Key 32 (R1, GND)  64 Unused  96 Unused  \n1 Key 1 (R0, C0)  33 Key 33 (R2, GND)  65 Unused  97 Unused  \n2 Key 2 (R0, C1)  34 Key 34 (R3, GND)  66 Unused  98 Unused  \n3 Key 3 (R0, C2)  35 Key 35 (R4, GND)  67 Unused  99 Unused  \n4 Key 4 (R0, C3)  36 Key 36 (R5, GND)  68 Unused  100 Unused  \n5 Key 5 (R0, C4)  37 GPI 1 (R0)  69 Unused  101 Unused  \n6 Key 6 (R1, C0)  38 GPI 2 (R1)  70 Unused  102 Unused  \n7 Key 7 (R1, C1)  39 GPI 3 (R2)  71 Unused  103 Unused  \n8 Key 8 (R1, C2)  40 GPI 4 (R3)  72 Unused  104 Unused  \n9 Key 9 (R1, C3)  41 GPI 5 (R4)  73 Unused  105 Unused  \n10 Key 10 (R1, C4)  42 GPI 6 (R5)  74 Unused  106 Unused  \n11 Key 11 (R2, C0)  43 GPI 7 (C0)  75 Unused  107 Unused  \n12 Key 12 (R2, C1)  44 GPI 8 (C1)  76 Unuse d 108 Unused  \n13 Key 13 (R2, C2)  45 GPI 9 (C2)  77 Unused  109 Unused  \n14 Key 14 (R2, C3)  46 GPI 10 (C3)  78 Unused  110 Unused  \n15 Key 15 (R2, C4)  47 GPI 11 (C4)  79 Unused  111 Unused  \n16 Key 16 (R3, C0)  48 Logic  80 Unused  112 Unused  \n17 Key 17 (R3, C1)  49 Unu sed 81 Unused  113 Unused  \n18 Key 18 (R3, C2)  50 Unused  82 Unused  114 Unused  \n19 Key 19 (R3, C3)  51 Unused  83 Unused  115 Unused  \n20 Key 20 (R3, C4)  52 Unused  84 Unused  116 Unused  \n21 Key 21 (R4, C0)  53 Unused  85 Unused  117 Unused  \n22 Key 22 (R4, C1)  54 Unus ed 86 Unused  118 Unused  \n23 Key 23 (R4, C2)  55 Unused  87 Unused  119 Unused  \n24 Key 24 (R4, C3)  56 Unused  88 Unused  120 Unused  \n25 Key 25 (R4, C4)  57 Unused  89 Unused  121 Unused  \n26 Key 26 (R5, C0)  58 Unused  90 Unused  122 Unused  \n27 Key 27 (R5, C1)  59 Unuse d 91 Unused  123 Unused  \n28 Key 28 (R5, C2)  60 Unused  92 Unused  124 Unused  \n29 Key 29 (R5, C3)  61 Unused  93 Unused  125 Unused  \n30 Key 30 (R5, C4)  62 Unused  94 Unused  126 Unused  \n31 Key 31 (R0, GND)  63 Unused  95 Unused  127 Unused  \nFIFO_2 Register 0x04  \nTable 12. FIFO_2  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT2_STATE  Read only  Refer to  Table 10. \n6 to 0 EVENT2_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_3 Register 0x05  \nTable 13. FIFO_3  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT3_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT3_IDENTIFIER[6:0]  Read only Refer to Table 10. \nFIFO_4 Register 0x06  \nTable 14. FIFO_4  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT4_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT4_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nData Sheet  ADP5585  \n \nRev. C | Page 21 of 40 FIFO_5 Register 0x07  \nTable 15. FIFO_5  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT5_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT5_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_6 Register 0x08  \nTable 16. FIFO_6  Bit Descriptions  \nBit(s)  Bit N ame Access  Description  \n7 EVENT6_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT6_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_7 Register 0x09  \nTable 17. FIFO_7  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT7_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT7_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_8 Register 0x0A  \nTable 18. FIFO_8  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT8_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT8_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_9 Register 0x0B  \nTable 19. FIFO_9  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT9_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT9_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_10 Register 0x0C  \nTable 20. FIFO_10  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT10_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT10_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_11 Register 0x0D  \nTable 21. FIFO_11  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT11_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT11_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_12 Register 0x0E  \nTable 22. FIFO_12  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT12_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT12_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nADP5585  Data Sheet  \n \nRev. C | Page 22 of 40 FIFO_ 13 Register 0x0 F \nTable 23. FIFO_13  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT13_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT13_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_ 14 Register 0x 10 \nTable 24. FIFO_14  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT14_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT14_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_ 15 Register 0x 11 \nTable 25. FIFO_15  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT15_STATE  Read only  Refer to  Table 10. \n6 to 0 EVENT15_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nFIFO_ 16 Register 0x 12 \nTable 26. FIFO_16  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 EVENT16_STATE  Read only  Refer to Table 10. \n6 to 0 EVENT16_IDENTIFIER[6:0]  Read only  Refer to Table 10. \nGPI_INT_STAT_A Register 0x13  \nTable 27. GPI_INT_STAT_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_INT  Read only  0 = no interrupt  \n   1 = interrupt due to GPI_6 (R5 pin). Cleared on read.  \n4 GPI_5_INT  Read only  0 = no interrupt  \n   1 = inte rrupt due to GPI_5 (R4 pin). Cleared on read.  \n3 GPI_4_INT  Read only  0 = no interrupt  \n   1 = interrupt due to GPI_4 (R3 pin). Cleared on read.  \n2 GPI_3_INT  Read only  0 = no interrupt  \n   1 = interrupt due to GPI_3 (R2 pin). Cleared on read.  \n1 GPI_2_INT  Read only  0 = no interrupt  \n   1 = interrupt due to GPI_2 (R1 pin). Cleared on read.  \n0 GPI_1_INT  Read only   0 = no interrupt  \n   1 = interrupt due to GPI_1 (R0 pin). Cleared on read.  \nGPI_INT_STAT_B Register 0x14  \nTable 28. GPI_INT_S TAT_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_INT  Read only  0 = no interrupt . \n   1 = interrupt due to GPI_11 (C4 pin). Cleared on read.  \n3 GPI_10_INT  Read only  0 = no interrupt . \n   1 = interrupt due to GPI_10 (C3 pin). Cleared on read.  \nData Sheet  ADP5585  \n \nRev. C | Page 23 of 40 Bit(s)  Bit Name  Access  Description  \n2 GPI_ 9_INT  Read only  0 = no interrupt . \n   1 = interrupt due to GPI_9 (C2 pin). Cleared on read.  \n1 GPI_8_INT  Read only  0 = no interrupt . \n   1 = interrupt due to GPI_8 (C1 pin). Cleared on read.  \n0 GPI_7_INT  Read only  0 = no i nterrupt . \n   1 = interrupt due to GPI_7 (C0 pin). Cleared on read.  \nGPI_STATUS_A Register 0x15  \nTable 29. GPI_STATUS_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_ STAT  Read only  0 = GPI_6 (R5 pin) is low.  \n   1 = GPI_6 (R5 pin) is high.  \n4 GPI_5_ STAT  Read only  0 = GPI_5 (R4 pin) is low.  \n   1 = GPI_5 (R4 pin) is high.  \n3 GPI_4_ STAT  Read only  0 = GPI_4 (R3 pin) is low.  \n   1 = GPI_4 (R3 pin) is high.  \n2 GPI_3_ STAT  Read only  0 = GPI_3 (R2 pin) is  low.  \n   1 = GPI_3 (R2 pin) is high.  \n1 GPI_2_ STAT  Read only  0 = GPI_2 (R1 pin) is low.  \n   1 = GPI_2 (R1 pin) is high.  \n0 GPI_1_STAT  Read only  0 = GPI_1 (R0 pin) is low.  \n   1 = GPI_1 (R0 pin) is high.  \nGPI_STATUS_B Register 0x16  \nTable 30. Register 0x16, GPI_STATUS_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_ STAT  Read only  0 = GPI_11 (C4 pin) is low.  \n   1 = GPI_11 (C4 pin) is high.  \n3 GPI_10_ STAT  Read only  0 = GPI_10 (C3 pin) is low.  \n   1 = GPI_10 (C3 pin) is high.  \n2 GPI_9_ STAT  Read only  0 = GPI_9 (C2 pin) is low.  \n   1 = GPI_9 (C2 pin) is high.  \n1 GPI_8_ STAT  Read only  0 = GPI_8 (C1 pin) is low.  \n   1 = GPI_8 (C1 pin) is high.  \n0 GPI_7_STAT  Read only  0 = GPI_7 (C0 pin) is low.  \n   1 = GP I_7 (C0 pin) is high.  \nADP5585  Data Sheet  \n \nRev. C | Page 24 of 40 RPULL_CONFIG_A Register 0x17  \nTable 31. RPULL_CONFIG_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 R3_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor . \n   01 = enable 300 kΩ pull -down re sistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n5 to 4 R2_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n3 to 2 R1_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n1 to 0 R0_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \nADP5585AC_Z -00-R7, ADP5585AC_Z -01-R7, ADP5585ACPZ -03-R7 Defaul t = 0000 0000  \nADP5585ACBZ -02-R7 Default = 1100 0011  \nADP5585ACBZ -04-R7 Default = 0101 0101  \nRPULL_CONFIG_B Register 0x18  \nTable 32. RPULL_CONFIG _B Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 4 N/A   Reserved . \n3 to 2 R5_PULL_CFG  Read/write  (Reserved except for ADP5585ACBZ -01-R7 options)  \n   00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n1 to 0 R4_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 3 00 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \nADP5585AC_Z -00-R7, ADP5585AC_Z -01-R7, ADP5585ACPZ -03-R7 Default = 0000 0000  \nADP5585ACBZ -02-R7 Default = 0000 0011  \nADP5585ACBZ -04-R7 Defa ult = 0000 0101  \nData Sheet  ADP5585  \n \nRev. C | Page 25 of 40 RPULL_CONFIG_C Register 0x19  \nTable 33. RPULL_CONFIG _C Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 C3_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor . \n   01 = enable 300 kΩ pull -down resistor . \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n5 to 4 C2_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = di sable all pull-up/pull- down resistors.  \n3 to 2  C1_PULL_CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \n1 to 0 C0_PULL _CFG  Read/write  00 = enable 300 kΩ pull -up resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \nADP5585AC_Z -00-R7, ADP5585AC_Z -01-R7, ADP5585ACBZ -02-R7 , ADP5585ACP Z-03- R7 Default = 0000 0000  \nADP5585ACBZ -04-R7 Default = 0101 0101  \nRPULL_CONFIG_D Register 0x1A  \nTable 34. RPULL_CONFIG _D Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 2 N/A   Reserved . \n1 to 0 C4_PULL_CFG  Read/write  00 =  enable 300 kΩ pull-up  resistor.  \n   01 = enable 300 kΩ pull -down resistor.  \n   10 = enable 100 kΩ pull -up resistor.  \n   11 = disable all pull-up/pull- down resistors.  \nADP5585AC_Z -00-R7, ADP5585AC_Z -01-R7, ADP5585ACPZ -03-R7 Default = 0000 0000  \nADP5585ACBZ -02-R7 Default = 0000 0011  \nADP5585ACBZ -04-R7 Default = 0000 0001  \nGPI_INT_LEVEL_A Register 0x1B  \nTable 35. GPI_INT_LEVEL_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_INT_LEVEL  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = GPI_6 interrupt is active low (GPI_6_INT sets whenever R5 is low). \n   1 = GPI_6 interrupt is active high (GPI_6_INT sets whenever R5 is high).  \n4 GPI_5_INT_LEVEL  Read/write  0 = GPI_5 interrupt is active low (GPI_5_INT sets  whenever R4 is low). \n   1 = GPI_5 interrupt is active high (GPI_5_INT sets whenever R4 is high).  \n3 GPI_4_INT_LEVEL  Read/write  0 = GPI_4 interrupt is active low (GPI_4_INT sets  whenever R3 is low). \n   1 = GPI_4 interrupt is active high (GPI_4_INT sets whenever R3 is high).  \n2 GPI_3_INT_LEVEL  Read/write  0 = GPI_3 interrupt is active low (GPI_3_INT sets  whenever R2 is low). \n   1 = GPI_3 interrupt is active high (GPI_3_INT sets whenever R2 is high).  \n1 GPI_2_INT_LEVEL  Read/write  0 = GPI _2 interrupt is active low (GPI_2_INT sets  whenever R1 is low). \n   1 = GPI_2 interrupt is active high (GPI_2_INT sets whenever R1 is high).  \n0 GPI_1_INT_LEVEL  Read/write  0 = GPI_1 interrupt is active low (GPI_1_INT sets  whenever R0 is low). \n   1 = GPI_1 interrupt is active high (GPI_1_INT sets whenever R0 is high).  \nADP5585  Data Sheet  \n \nRev. C | Page 26 of 40 GPI_INT_LEVEL_B Register 0x1C  \nTable 36. Register 0x1C, GPI_INT_LEVEL_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_INT_LEVEL  Read/write  0 = GPI_11 interrupt is active low (GPI_11_INT sets  whenever R10 is low). \n   1 = GPI_11 interrupt is active high (GPI_11_INT sets whenever R10 is high).  \n3 GPI_10_INT_LEVEL  Read/write  0 = GPI_10 interrupt is active low (GPI_10_INT sets  whenever R 9 is low).  \n   1 = GPI_10 interrupt is active high (GPI_10_INT sets whenever R9 is high).  \n2 GPI_9_INT_LEVEL  Read/write  0 = GPI_9 interrupt is active low (GPI_9_INT sets  whenever R8 is low). \n   1 = GPI_9 interrupt is active high (GPI_9_INT sets whenever R 8 is high).  \n1 GPI_8_INT_LEVEL  Read/write  0 = GPI_8 interrupt is active low (GPI_8_INT sets  whenever R7 is low). \n   1 = GPI_8 interrupt is active high (GPI_8_INT sets whenever R7 is high).  \n0 GPI_7_INT_LEVEL  Read/write  0 = GPI_7 interrupt is active low (G PI_7_INT sets  whenever R6 is low). \n   1 = GPI_7 interrupt is active high (GPI_7_INT sets whenever R6 is high).  \nGPI_EVENT_EN_A Register 0x1D  \nTable 37. GPI_EVENT_EN_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_EVENT_EN  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = disable GPI events from GPI 6.  \n   1 = allow GPI 6 activity to generate events on the FIFO1. \n4 GPI_5_EVENT_EN  Read/write  0 = disable GPI events from GPI 5.  \n   1 = allow GPI 5 activity to generate events on the FIFO1. \n3 GPI_4_EVENT_EN  Read/write  0 = disable GPI events from GPI 4.  \n   1 = allow GPI 4 activity to generate events on the FIFO1. \n2 GPI_3_EVENT_EN  Read/write  0 = disable GPI events from GPI 3.  \n   1 = allow GPI 3 activity to generate events on the FIFO1. \n1 GPI_2_EVENT_EN  Read/write  0 = disable GPI events from GPI 2.  \n   1 = allow GPI 2 activity to generate events on the FIFO1. \n0 GPI_1_EVENT_EN  Read/write  0 = disable GPI events from GPI 1.  \n   1 = allow GPI 1 activity to generate events on the FIFO1. \n \n1 GPIs in this mode are considered FIFO events and c an be used for unlock purposes. GPI activity in this mode causes EVENT _INT interrupts. GPIs in this mode do not \ngenerate GPI_INT i nterrupts.  \nGPI_EVENT_EN_B Register 0x1E  \nTable 38. GPI_EVENT_EN_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_EVENT_EN  Read/write  0 = disable GPI events from GPI 11.  \n   1 = allow GPI 11 activity to generate events on the FIFO1. \n3 GPI_10_EVENT_EN  Read/write  0 = disable GPI events from GPI 10.  \n   1 = allow GPI 10 activity to generate events on the FIFO1. \n2 GPI_9_EVENT_EN  Read/write  0 = disable GPI events from GPI 9.  \n   1 = allow GPI 9 activity to generate events on the FIFO1. \n1 GPI_8_EVENT_EN  Read/write  0 = disable GPI events from GPI 8.  \n   1 = allow GPI 8activity to generate events on the FIFO1. \n0 GPI_7_EVENT_EN  Read/write  0 = disable GPI events from GPI 7.  \n   1 = allow GP I 7 activity to generate events on the FIFO1. \n1 GPIs in this mode are considered FIFO events and can be used for unlock purposes. GPI activity in this mode cause EVENT_INT i nterrupts. GPIs in this mode do not \ngenerate GPI_INT interrupts.  \nData Sheet  ADP5585  \n \nRev. C | Page 27 of 40 GPI_EVENT_INTERR UPT_EN_A Register 0x1F  \nTable 39. GPI_INTERRUPT_EN_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_INT_EN  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = GPI_6_INT is disabled.  \n   1 = GPI_6_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_6_INT is set and the GPI 6 interrupt condition is met.  \n4 GPI_5_INT_EN  Read/write  0 = GPI_5_INT is disabled.  \n   1 = GPI_5_INT enabled. Asserts  the GPI_INT bit (Register 0x01 , Bit 1) if \nGPI_5_INT is set and the GPI 5 interrupt condition is met.  \n3 GPI_4_INT_EN  Read/write  0 = GPI_4_INT is disabled.  \n   1 = GPI_4_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_4_INT is set and the GPI 4 interrupt condition is met. \n2 GPI_3_INT_EN  Read/write  0 = GPI_3_INT is disabled.  \n   1 = GPI_3_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_3_INT is set and the GPI 3 interrupt condition is met.  \n1 GPI_2_INT_EN  Read/write  0 = GPI_2_INT is disabled.  \n   1 = GPI_2_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_2_INT is set and the GPI 2 interrupt condition is met.  \n0 GPI_1_INT_EN  Read/write  0 = GPI_1_INT is disabled.  \n   1 = GPI_1_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1)  if \nGPI_1_INT is set and the GPI 1 interrupt condition is met.  \nGPI_EVENT_INTERRUPT_EN_B Register 0x20  \nTable 40. GPI_INTERRUPT_EN_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_INT_EN  Read/write  0 = GPI_11_INT is disabled.  \n   1 = GPI_11_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_11_INT is set and the GPI 11 interrupt condition is met.  \n3 GPI_10_INT_EN  Read/write  0 = GPI_10_INT is disabled.  \n   1 = GPI_10_INT enabled. As serts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_10_INT is set and the GPI 10 interrupt condition is met.  \n2 GPI_9_INT_EN  Read/write  0 = GPI_9_INT is disabled.  \n   1 = GPI_9_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_9_INT is set  and the GPI  9 interrupt condition is met.  \n1 GPI_8_INT_EN  Read/write  0 = GPI_8_INT is disabled.  \n   1 = GPI_8_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_8_INT is set and the GPI 8 interrupt condition is met.  \n0 GPI_7_INT_EN  Read/wr ite 0 = GPI_7_INT is disabled.  \n   1 = GPI_7_INT enabled. Asserts  the GPI_INT bit (Register 0x01, Bit 1) if \nGPI_7_INT is set and the GPI 7 interrupt condition is met.  \nADP5585  Data Sheet  \n \nRev. C | Page 28 of 40 DEBOUNCE_DIS_A Register 0x21  \nTable 41. DEBOUNCE_DIS_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPI_6_DEB_DIS  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = debounce enabled on GPI 6.  \n   1 = debounce disabled on GPI 6.  \n4 GPI_5_DEB_DIS  Read/write  0 = debounce ena bled on GPI 5.  \n   1 = debounce disabled on GPI 5.  \n3 GPI_4_DEB_DIS  Read/write  0 = debounce enabled on GPI 4.  \n   1 = debounce disabled on GPI 4.  \n2 GPI_3_DEB_DIS  Read/write  0 = debounce enabled on GPI 3.  \n   1 = debounce disabled on GPI 3.  \n1 GPI_2_DEB_DI S Read/write  0 = debounce enabled on GPI 2.  \n   1 = debounce disabled on GPI 2.  \n0 GPI_1_DEB_DIS  Read/write  0 = debounce enabled on GPI 1.  \n   1 = debounce disabled on GPI 1.  \nDEBOUNCE_DIS_B Register 0x22  \nTable 42. DEBOUNCE_DIS_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPI_11_DEB_DIS  Read/write  0 = debounce enabled on GPI 11.  \n   1 = debounce disabled on GPI 11.  \n3 GPI_10_DEB_DIS  Read/write  0 = debounce enabled on GPI 10.  \n   1 = debounce disable d on GPI 10.  \n2 GPI_9_DEB_DIS  Read/write  0 = debounce enabled on GPI 9.  \n   1 = debounce disabled on GPI 9.  \n1 GPI_8_DEB_DIS  Read/write  0 = debounce enabled on GPI 8.  \n   1 = debounce disabled on GPI 8.  \n0 GPI_7_DEB_DIS  Read/write  0 = debounce enabled on G PI 7.  \n   1 = debounce disabled on GPI 7.  \nGPO_DATA_OUT_A Register 0x23  \nTable 43. GPO_DATA_OUT_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPO_6_ DATA  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = sets output low.  \n   1 = sets output high.  \n4 GPO_5_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n3 GPO_4_DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n2 GPO_3_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n1 GPO_2_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n0 GPO_1_DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \nData Sheet  ADP5585  \n \nRev. C | Page 29 of 40 GPO_DATA_OUT_B Register 0x24  \nTable 44. GPO_DATA_OUT_B  Bit Descr iptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPO_11_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n3 GPO_10_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n2 GPO_9_ DATA  Read/write  0 = sets output low . \n   1 = sets output high.  \n1 GPO_8_ DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \n0 GPO_7_DATA  Read/write  0 = sets output low.  \n   1 = sets output high.  \nGPO_OUT_MODE_A Register 0x25  \nTable 45. Register 0x25, GPO_O UT_MODE_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6  N/A   Reserved . \n5 GPO_6_OUT_MODE  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = push/pull.  \n   1 = open drain.  \n4 GPO_5_OUT_MODE  Read/write  0 = push/pull.  \n   1 = ope n drain.  \n3 GPO_4_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n2 GPO_3_ OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n1 GPO_2_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n0 GPO_1_OUT_MODE  Read/write  0 = push/pull.  \n   1 = op en drain.  \nGPO_OUT_MODE_B Register 0x26  \nTable 46. Register 0x26, GPO_OUT_MODE_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPO_11_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n3 GPO_10_OU T_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n2 GPO_9_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n1 GPO_8_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \n0 GPO_7_OUT_MODE  Read/write  0 = push/pull.  \n   1 = open drain.  \nADP5585  Data Sheet  \n \nRev. C | Page 30 of 40 GPIO_DIREC TION_A Register 0x27  \nTable 47. GPIO_DIRECTION_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved . \n5 GPIO_6_DIR  Read/write  (Reserved except for ADP5585AC_Z -01-R7 options)  \n   0 = GPIO 6 is an input.  \n   1 = GPIO 6 is an output.  \n4 GPIO_5_DIR  Read/write  0 = GPIO 5 is an input.  \n   1 = GPIO 5 is an output.  \n3 GPIO_4_DIR  Read/write  0 = GPIO 4 is an input.  \n   1 = GPIO 4 is an output.  \n2 GPIO_3_DIR  Read/write  0 = GPIO 3 is an input.  \n   1 = GPIO 3 is an output.  \n1 GPIO_2_DIR  Read/write  0 = GPIO 2 is an input.  \n   1 = GPIO 2 is an output.  \n0 GPIO_1_DIR  Read/write  0 = GPIO 1 is an input.  \n   1 = GPIO 1 is an output.  \nGPIO_DIRECTION_B Register 0x28  \nTable 48. Register 0x28, GPIO_DIRECTION_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 GPIO_11_DIR  Read/write  0 = GPIO 11 is an input.  \n   1 = GPIO 11 is an output.  \n3 GPIO_10_DIR  Read/write  0 = GPIO 10 is an input.  \n   1 = GPIO 10 is an output.  \n2 GPIO_9_DIR  Read/write  0 = GPIO 9 is an input.  \n   1 = GPIO 9 is an output.  \n1 GPIO_8_DIR  Read/write  0 = GPIO 8 is an input.  \n   1 = GPIO 8 is an output.  \n0 GPIO_7_DIR  Read/write  0 = GPIO 7 is an input.  \n   1 = GPIO 7 is an output.  \nRESET1_EVENT_A Register 0x29  \nTable 49. RESET1_EVENT_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 RESET1_EVENT_A_LEVEL  Read/write  Defines which level the first reset event should be to generate the \nRESET1 signal.  \n   For key events, use the following settings:  \n   0 = not applicable; releases not used for reset generation.  \n   1 = press is used as reset event.  \n   For GPIs and logic outputs configured for FIFO updates, use the \nfollowing settings:  \n   0 = inactive event used as reset condition.  \n   1 = active event used as reset condition.  \n6 to 0 RESET1_EVENT_A[6:0]  Read/write  Defines an event that can be used to generate the RESET1 signal. Up to \nthree events can be defined for generating the RESET1 signal, using \nRESET1_EVENT_A[6:0], RESET1_EVENT_B[6:0], and RESET1_ EVENT_C[6:0].  If one of the registers is 0, that register is not \nused for reset generation. All reset events must be detected at the \nsame time to trigger the reset.  \nData Sheet  ADP5585  \n \nRev. C | Page 31 of 40 RESET1_EVENT_B Register 0x2A  \nTable 50. RESET1_EVENT_B  Bit Descript ions  \nBit(s)  Bit Name  Access  Description  \n7 RESET1_EVENT_B_LEVEL  Read/write  Defines which level the second reset event should be to generate the RESET1 \nsignal. Refer to Table 49. \n6 to 0 RESET1_EVENT_B[6:0]  Read/write  Defines an event that can be used to generate the RESET1 signal. Refer to Table 11. \nRESET1_EVENT_C Register 0x2B  \nTable 51. RESET1_EVENT_C  Bit Descriptions  \nBit(s)  Bit Name  Access  Descript ion \n7 RESET1_EVENT_C_LEVEL  Read/write  Defines which level the second reset event should be to generate the RESET1 \nsignal. Refer to Table 49. \n6 to 0 RESET1_EVENT_C[6:0]  Read/write  Defines an event that can be used  to generate the RESET1 signal. Refer to Table 11. \nRESET2_EVENT_A Register 0x2C  \nTable 52. RESET2_EVENT_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 RESET2_EVENT_A_LEVEL  Read/write  Defines which level the first reset event should be to generate the RESET2 signal.  \n   For key events, use the following settings:  \n   0 = not applicable; releases not used for reset generation.  \n   1 = press is used as reset event.  \n   For GPIs and log ic outputs configured for FIFO updates, use the following settings:  \n   0 = inactive event used as reset condition.  \n   1 = active event used as reset condition.  \n6 to 0 RESET2_EVENT_A[6:0]  Read/write  Defines an event that can be used to generate the RESET 2 signal. Up to two events \ncan be defined for generating the RESET2 signal, using RESET2_EVENT_A[6:0], and \nRESET2_EVENT_B[6:0].  If one of the registers is 0, that register is not used for reset \ngeneration. All reset events must be detected at the same time  to trigger the reset.  \nRESET2_EVENT_B Register 0x2D  \nTable 53. RESET2_EVENT_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 RESET2_EVENT_B_LEVEL  Read/write  Defines which level the second reset event should be to generate the RESET2 signal. Refer to  Table 52. \n6 to 0 RESET2_EVENT_B[6:0]  Read/write  Defines an event that can be used to generate the RESET2 signal. Refer to Table 11. \nRESET_CFG Register 0x2E  \nTable 54. RESET_CFG  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 RESET2_POL  Read/write  Sets the polarity of RESET2.  \n   0 = RESET2 is active low.  \n   1 = RESET2 is active high.  \n6 RESET1_POL  Read/write  Sets  the polarity of RESET1.  \n   0 = RESET1 is active low.  \n   1 = RESET1 is active high.  \n5 RST_PASSTHRU_EN  Read/write  Allows the RST pin to override (OR with) the RESET1signal. This f unction not \napplicable to RES ET2.  \nADP5585  Data Sheet  \n \nRev. C | Page 32 of 40 Bit(s)  Bit Name  Access  Description  \n4 to 2 RESET_TRIG_TIME[2:0]  Read/write  Defines the length of time that the reset events must be active before a reset \nsignal is generated.  All events must be active at the same time for the same \nduration. RESET_TRIG_TIME[2:0] is common to both RESET1  and RESET2.  \n   000 = immediate.  \n   001 = 1.0 sec.  \n   010 = 1.5 sec.  \n   011 = 2.0 sec.  \n   100 = 2.5 sec.  \n   101 = 3.0 sec.  \n   110 = 3.5 sec.  \n   111 = 4.0 sec.  \n1 to 0 RESET_PULSE_WIDTH[1:0]  Read/write  Defines the pulse width of the reset signals. RESET_PULSE_WIDTH[1:0] is  common \nto both RESET1 and RESET2.  \n   00 = 500 µs.  \n   01 = 1 ms.  \n   10 = 2 ms.  \n   11 = 10 ms.  \nPWM_OFFT_LOW  Register 0x2 F  \nTable 55. Register 0x2F, PWM_OFFT_LOW  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 0 PWM_OFFT_LOW_BYTE[7:0] Read/write  Lower eight bits of PWM off time. \nPWM_OFFT_HIGH Register 0x30  \nTable 56. PWM_OFFT_HIGH  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 0 PWM_OFFT_HIGH_BYTE[7:0]  Read/wr ite Upper eight bits of PWM off time.  \nPWM_O NT_LOW Register 0x 31  \nTable 57. PWM_ONT_LOW  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 0 PWM_ONT_LOW_BYTE[7:0]  Read/write  Lower eight bits of PWM on time.  \nPWM_O NT_HIGH  Reg ister 0x 32 \nTable 58. PWM_ONT_HIGH  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 0 PWM_ONT_HIGH_BYTE[7:0]  Read/write  Upper eight bits of PWM on time. Note that updated PWM times are not latched \nuntil this byte is written  to. PWM count times are referenced from the internal \noscillator. The fastest oscillator setting is 500 kHz (2 µs increments). Therefore, the \nmaximum period is  \n2 µs × 216 = 131 ms  \nThis gives PWM frequencies from 500 kHz down to 7.6 Hz. \nPWM_CFG Register 0x33  \nTable 59. PWM_CFG  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 3 N/A   Reserved . \n2 PWM_IN_AND   0 = no external AND ’ing. \n   1 = PWM signal AND ’ed with an externally supplied PWM signal (C3).  \n1 PWM_MODE  Read/write  Defines PWM mode.  \n   0 = continuous.  \n   1 = executes one PWM period, then sets PWM_EN to 0.  \n0 PWM_EN  Read/write  Enable PWM generator.  \nData Sheet  ADP5585  \n \nRev. C | Page 33 of 40 LOGIC_CFG Register 0x34  \nTable 60. LOGIC_CFG  Bit Descriptions  \nBit(s)  Bit Name  Access  Descript ion \n7 N/A   Reserved . \n6 LY_INV  Read/write  0 = LY output not inverted before passing into  logic block.  \n   1 = inverts output LY from the logic block.  \n5 LC_INV  Read/write  0 = LC input not inverted before passing into the logic block.  \n   1 = inverts input  LC before passing it into the logic block.  \n4 LB_INV  R/W  0 = LB  input not inverted before passing into  the logic block.  \n   1 = inverts input LB before passing it into the logic block.  \n3 LA_INV  R/W  0 = LA input not inverted before passing into the logic block.  \n   1 = inverts input LA before passing it into the logic block.  \n2 to 0 LOGIC_SEL[2:0]  R/W  Configures the digital mux for the logic block.  Refer to Figure 19. \n   000 = off/disable.  \n   001 = AND.  \n   010 =  OR. \n   011 = XOR.  \n   100 = FF.  \n   101 = IN_LA.  \n   110 = IN_LB.  \n   111 = IN_LC.  \nLOGIC_FF_CFG Register 0x35  \nTable 61. LOGIC_FF_CFG  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 2 N/A  Read/write  Reserved . \n1 FF_SET  Read/write  0 = FF not set in the logic block.  Refer to Figure 19. \n   1 = set FF  in the logic block.  \n0 FF_CLR  Read/write  0 = FF not cleared in  the logic block. Refer to Figure 19. \n   1 = clear FF in the logic block.  \nLOGIC_INT_EVENT_EN Register 0x36  \nTable 62. LOGIC_INT_EVENT_EN Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 3 N/A   Reserved . \n2 LY_DBNC_DIS  Read/write  0 = output of the logi c block is debounced before entering the event/interrupt block.  \n   1 = output of the logic block is not debounced before entering the event/interrupt \nblock. Use with caution because glitches may generate interrupts prematurely.  \n1 LOGIC_EVENT_EN  Read/writ e 0 = LY cannot generate interrupt. \n   1 = allow LY activity to generate events on the FIFO.  \n0 LOGIC_INT_LEVEL  Read/write  Configure the logic level of LY that generates an interrupt.  \n   0 = LY is active low. \n   1 = LY is active high.  \nADP5585  Data Sheet  \n \nRev. C | Page 34 of 40 POLL_TIME_CFG Reg ister 0x37 \nTable 63. Register 0x37, POLL_TIME_CFG  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 2 N/A   Reserved . \n1 to 0 KEY_POLL_TIME[1:0]  Read/write  Configure time between consecutive scan cycles.  \n   00 = 10 ms.  \n   01 = 20 ms.  \n   10 = 30 ms.  \n   11 = 40 ms.  \nPIN_CONFIG_A Register 0x38  \nTable 64. PIN_CONFIG_A  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 6 N/A   Reserved.  \n5 R5_CONFIG  Read/write  Reserved except for ADP5585AC_Z -01-R7  options)  \n   0 = GPIO 6.  \n   1 = Row 5.  \n4 R4_CONFIG  Read/write  0 = GPIO 5 (see R4_EXTEND_CFG in Table 66 for alternate configuration, RESET1).  \n   1 = Row 4  \n3 R3_CONFIG  Read/write  0 = GPIO 4 (see R3_EXTEND_CFG[1 :0] in Table 66 for alternate configuration, \nLC/PWM_OUT).  \n   1 = Row 3  \n2 R2_CONFIG  Read/write  0 = GPIO 3 \n   1 = Row 2  \n1 R1_CONFIG  Read/write  0 = GPIO 2 \n   1 = Row 1  \n0 R0_CONFIG  Read/write  0 = GPIO 1/LY ( see R 0_EXTEND_CFG in Table 66 for alternate configuration, LY).  \n   1 = Row 0  \nPIN_CONFIG_B Register 0x39  \nTable 65. PIN_CONFIG_B  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 C4_CONFIG  Read/write  0 = GPIO 11 (see C4_EXTEND_CFG in Table 66 for alternate configuration, RESET2).  \n   1 = Column 4.  \n3 C3_CONFIG  Read/write  0 = GPIO 10.  \n   1 = Column 3.  \n2 C2_CONFIG  Read/write  0 = GPIO 9 . \n   1 = Column 2.  \n1 C1_CONFIG  Read/write  0 = GPIO 8.  \n   1 = Column 1.  \n0 C0_CONFIG  Read/write  0 = GPIO 7.  \n   1 = Column 0.  \nPIN_CONFIG_ C Register 0x3A  \nTable 66. PIN_CONFIG_D  Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 PULL_SELECT  Read/write  0 = 300 kΩ resistor  used for row pull -up during key scanning.  \n   1 = 100 kΩ resistor used for row pull-up during key scanning.  \n6 C4_ EXTEND_CFG  Read/write  0 = C4 remains configured as GPIO 11.  \n   1 = C4 reconfigured  as RESET2 output.  \nData Sheet  ADP5585  \n \nRev. C | Page 35 of 40 Bit(s)  Bit Name  Access  Description  \n5 R4_ EXTEND_CFG  Read/write  0 = R4 remains configured as GPIO 5. \n   1 = R4 reconfigured as RESET1 output.  \n4 N/A   Reserved . \n3 to 2 R3_EXTEND_CFG[1:0]  Read/write  00 = R3 remains configured as GPIO 4.  \n   01 = R3 reconfigured as LC inpu t for the logic block.  \n   10 = R3 reconfigured as PWM_OUT output from PWM block.  \n   11 = unused.  \n1 N/A   Reserved . \n0 R0_ EXTEND_CFG  Read/write  0 = R0 remains configured as GPIO 1. \n   1 = R0 reconfigured as LY output from the logic block.  \nGENERAL_CFG Register 0x3B  \nTable 67. GENERAL_CFG Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 OSC_EN  Read/write  0 = disable internal 1 MHz oscillator.  \n   1 = enable internal 1 MHz oscillator.  \n6 to 5 OSC_FREQ[1:0]  Read/write  Sets the  input clock frequency fed from the base 1 MHz oscillator to the digital \ncore. Slower frequencies result in less quiescent current, but key and GPI scan \ntimes increase.  \n   00 = 50 kHz.  \n   01 = 100 kHz.  \n   10 = 200 kHz.  \n   11 = 500 kHz.  \n4 to 2 N/A   Reserved . \n1 INT_CFG  Read/write  Configure the behavior of the INT pin if the user tries to clear it while an interrupt \nis pending.  \n   0 = INT pin remains asserted if an interrupt is pending . \n   1 = INT pin deasserts for 50 µs and reasserts if an interrupt is pending.  \n0 RST_CFG  R/W  Configure the response ADP5585 has to the  RST pin. \n   0 = ADP5585 resets if  RST is low.  \n   1 = ADP5585 does not reset if  RST is low.  \nINT_EN Register 0x3C  \nTable 68. INT_EN Bit Descriptions  \nBit(s)  Bit Name  Access  Description  \n7 to 5 N/A   Reserved . \n4 LOGIC_IEN  Read/write  0 = Logic 1 interrupt is disabled.  \n   1 = assert the INT pin if LOGIC_INT is set.  \n3 N/A   Reserved . \n2 OVRFLOW_IEN  Read/write  0 = overflow interrupt is disabled.  \n   1 = assert the INT pin if OVRFLOW_INT is set.  \n1 GPI_IEN  Read/write  0 = GPI interrupt is disabled.  \n   1 = assert the INT pin if GPI_INT is set.  \n0 EVENT_IEN  Read/write  0 = event interrupt is disabled.  \n   1 = assert the INT pin if EVENT_INT is set.  \nADP5585  Data Sheet  \n \nRev. C | Page 36 of 40 APPLICATION S DIAGRAM  \n \nSDA SCL RST\nINT\nLOGIC\nPWMOSCILLATOR\nREGISTERSVDD\nGNDHOSTPROCESSOR\nKP/LOGIC1 OUTPUT/GPI/GPO\nKP/LOGIC1 INPUT/GPI/GPO\nKP/LOGIC1 INPUT/GPI/GPO\nKP/LOGIC1 INPUT/GPI/GPO/PWM/CLK\nKP/RESET1 OUTPUT/GPI/GPOSDASCLRSTINTVDD\nVDD\nR2R1R0\nR4R3\nC4\nC3\nC2\nC1\nC054321\n10 9876\n15 14 13 12 11\n20 19 18 17 16\n25 24 23 22 21\n09841 -026ADP5585\nGPISCAN\nAND\nDECODE\nRESET1\nGEN\nRESET2\nGENKEYSCAN\nAND\nDECODEUVLO\nPOR I2C\nINTERFACE\nI/O\nCONFIG\n \nFigure 27. Typical Application  Schematic  \n \n \nData Sheet  ADP5585  \n \nRev. C | Page 37 of 40 OUTLINE DIMENSIONS \n \n10-23-2012- AA\nB\nC\nD\n0.545\n0.500\n0.455SIDE VIEW\n0.230\n0.200\n0.1700.300\n0.260\n0.220COPLANARITY\n0.05\nSEATING\nPLANE1 2 3 4\nBOT TOM VIEW\n(BAL L SIDE UP)TOP VIEW\n(BAL L SIDE DOWN)BALLA1\nIDENTIFIER\n0.40\nREF1.20\nREF1.630\n1.590 SQ\n1.550\n \nFigure 28. 16-Ball Wafer Level Chip Scale Package [WLCSP]  \n(CB-16-10) \nDimensions shown in millimeters  \n3.10\n3.00 SQ\n2.900.30\n0.23\n0.18\n1.75\n1.60 SQ\n1.45\n08-16-2010-E10.50\nBSC\nBOTTOM VIEW TOP VIEW16\n5 891213\n4EXPOSED\nPADPIN 1\nINDIC ATOR\n0.50\n0.40\n0.30\nSEATING\nPLANE0.05 MAX\n0.02 NOM\n0.20 REF0.25 MIN\nCOPLANARITY\n0.08PIN 1\nINDIC ATOR\nFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TO\nTHE PIN CONFIGURATION AND\nFUNCTION DESCRIPTIONS\nSECTION OF THIS DATA SHEET.0.80\n0.75\n0.70\nCOMPLIANT TOJEDEC STANDARDS MO-220-WEED-6. \nFigure 29. 16 -Lead Lead Frame Chip Scale Package [LFCSP_WQ]  \n3 x 3 mm Body, Very Very Thin Quad  \n(CP-16-22) \nDimensions shown in millimeters  \nADP5585  Data Sheet  \n \nRev. C | Page 38 of 40 ORDERING GUIDE  \nModel1 Temperature Range  Package Description  Package Option  Branding  \nADP5585ACBZ -00-R7 −40°C t o +85°C  16-Ball Wafer Level Chip Scale Package  [WLCSP]  CB-16-10  \nADP5585ACBZ -01-R7 −40°C to +85°C  16-Ball Wafer Level Chip Scale Package  [WLCSP]  CB-16-10  \nADP5585ACBZ -02-R7 −40°C to +85°C  16-Ball Wafer Level Chip Scale Package  [WLCSP]  CB-16-10  \nADP5585ACBZ -04-R7 −40°C to +85°C  16-Ball Wafer Level Chip Scale Package [WLCSP]  CB-16-10  \nADP5585ACPZ -00-R7 −40°C to +85°C  16-Lead Lead Frame Chip Scale Package  [LFCSP_WQ]  CP-16-22 LJM  \nADP5585ACPZ -01-R7 −40°C to +85°C  16-Lead Lead Frame Chip Scale Package  [LFCSP _WQ]  CP-16-22 LJN \nADP5585ACPZ -03-R7 −40°C to +85°C  16-Lead Lead Frame Chip Scale Package  [LFCSP_WQ]  CP-16-22 LJP \nADP5585CP -EVALZ   LFCSP Evaluation Board  CP-16-22  \n \n1 Z = RoHS Compliant Part.  \n \n \nData Sheet  ADP5585  \n \nRev. C | Page 39 of 40 NOTES \nADP5585  Data Sheet  \n \nRev. C | Page 40 of 40 NOTES \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \nI\n2C refers to a communications protocol o riginally developed by Philips Semiconductors (now NXP Semiconductors).  \n \n \n©2011 –2013  Analog Devices, Inc. All rights reserved. Trademarks and   \n registered trademarks are the property of their respective owners . \n  D09841 -0-1/13(C)  \n \n'}]
!==============================================================================!
### Component Summary: ADP5585ACPZ-00-R7

#### Key Characteristics and Specifications:
- **Voltage Ratings:**
  - Supply Voltage (VDD): 1.65 V to 3.6 V
  - Undervoltage Lockout Threshold: 1.2 V (active), 1.4 V (inactive)
  
- **Current Ratings:**
  - Standby Current: 1 µA (at VDD = 1.65 V), 10 µA (at VDD = 3.3 V)
  - Operating Current (one key press): 30 µA to 90 µA depending on configuration

- **Power Consumption:**
  - Maximum Power Dissipation: 70 mW

- **Operating Temperature Range:**
  - Ambient: -40°C to +85°C
  - Junction: -40°C to +125°C

- **Package Type:**
  - 16-Ball WLCSP (1.59 mm × 1.59 mm)
  - 16-Lead LFCSP (3 mm × 3 mm)

- **Special Features:**
  - 10 configurable I/Os for keypad decoding and general-purpose I/O expansion
  - Integrated 16-element FIFO for event recording
  - I2C interface with fast mode support (up to 1 MHz)
  - Programmable logic blocks and PWM generator
  - Reset generators and key press/release interrupts

- **Moisture Sensitive Level (MSL):**
  - MSL Level 1 (JEDEC J-STD-020E)

#### Description:
The **ADP5585** is a versatile input/output port expander with a built-in keypad matrix decoder, programmable logic, reset generator, and PWM generator. It is designed to enhance the I/O capabilities of microcontrollers in various applications, allowing for efficient management of keypad inputs and general-purpose I/O functions. The device can handle key scanning and decoding, freeing up the main processor from these tasks, which helps reduce power consumption and increases processing bandwidth for other functions.

#### Typical Applications:
- **Keypad Entries:** Ideal for devices requiring user input through keypads, such as smartphones, remote controls, and cameras.
- **I/O Expansion:** Used in applications where additional I/O ports are needed, such as healthcare devices, industrial controls, and instrumentation.
- **Signal Processing:** The programmable logic and PWM capabilities make it suitable for applications requiring signal modulation and control.
- **Event Recording:** The FIFO feature allows for efficient event logging, which is useful in various monitoring and control systems.

This component is particularly beneficial in portable and non-portable applications where space and power efficiency are critical.