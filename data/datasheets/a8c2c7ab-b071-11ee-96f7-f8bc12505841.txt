[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of SN65DSI86ZQER production of TEXAS INSTRUMENTS from the text:SN65DSI86 MIPI® DSI to eDP™ Bridge\n1 Features\n• Embedded DisplayPort™ ( eDP™) 1.4 compliant\nsupporting 1, 2, or 4 lanes at 1.62 Gbps (RBR),\n2.16 Gbps, 2.43 Gbps, 2.7 Gbps (HBR), 3.24\nGbps, 4.32 Gbps, or 5.4 Gbps (HBR2).\n• Implements MIPI® D-PHY version 1.1 physical\nlayer front-end and display serial interface (DSI)\nversion 1.02.00\n• Dual-channel DSI receiver configurable for one,\ntwo, three, or four D-PHY data lanes per channel\noperating up to 1.5 Gbps per lane\n• Supports 18 bpp and 24 bpp DSI video packets\nwith RGB666 and RGB888 formats\n• Suitable for 60 fps 4K 4096 × 2304 resolution at 18\nbpp color, and WUXGA 1920 × 1200 resolution\nwith 3D graphics at 60 fps (120 fps equivalent)\n• MIPI front-end configurable for single-channel or\ndual-channel DSI configuration\n• Supports dual-channel DSI odd, even and left,\nright operating modes\n• 1.2-V main VCC power supply and 1.8-V supply\nfor digital I/Os\n• Low-power features include panel refresh and\nMIPI ultralow power state (ULPS) support\n• DisplayPort lane polarity and assignment\nconfigurable.\n• Supports 12-MHz, 19.2-MHz, 26-MHz, 27-MHz,\nand 38.4-MHz frequencies through external\nreference clock (REFCLK)\n• ESD rating ±4 kV (HBM)\n• Packaged in 64ball 5-mm x 5-mm nFBGA (ZXH)\n• I2C configurable\n• Temperature range: –40°C to +85°C\n2 Applications\n•PC & notebooks\n•Tablets\n•Retail automation & payment\n•Test and measurement\n•Factory automation and control3 Description\nThe SN65DSI86  DSI to embedded DisplayPort (eDP)\nbridge features a dual-channel MIPI D-PHY receiver\nfront-end configuration with four lanes per channel\noperating at 1.5 Gbps per lane and a maximum input\nbandwidth of 12 Gbps. The bridge decodes MIPI DSI\n18-bpp RGB666 and 24-bpp RGB888 packets and\nconverts the formatted video data stream to a\nDisplayPort with up to four lanes at either 1.62 Gbps,\n2.16 Gbps, 2.43 Gbps, 2.7 Gbps, 3.24 Gbps, 4.32\nGbps, or 5.4 Gbps.\nThe SN65DSI86  is well suited for WQXGA at 60\nframes per second, as well as 3D graphics at 4K and\ntrue HD (1920 × 1080) resolutions at an equivalent\n120 fps with up to 24 bpp. Partial line buffering is\nimplemented to accommodate the data stream\nmismatch between the DSI and DisplayPort\ninterfaces.\nDevice Information(1)\nPART NUMBER PACKAGE BODY SIZE (NOM)\nSN65DSI86 nFBGA (64) 5.00 mm × 5.00 mm\nCopyright © 2017, Texas Instruments IncorporatedPanel\nApplication \nProcessor \nWith DSI \nOutput\nLCD eDP TCON\nDual - Channel \nDSI to eDP\nBridge \nSN65DSI86DP_ML[0:3]M\nAUXP/N\nHPDDP_ML[0:3]P\nIRQSCL/SDADBCP/NDACP/N\nDB[3/0]P/NDA[3/0]P/N\nSimple Diagramwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 1\nProduct Folder Links: SN65DSI86SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nAn IMPORTANT NOTICE at the end of this data sheet addresses availability, warranty, changes, use in safety-critical applications,\nintellectual property matters and other important disclaimers. PRODUCTION DATA.\nTable of Contents\n1 Features ............................................................................ 1\n2 Applications ..................................................................... 1\n3 Description ....................................................................... 1\n4 Revision History .............................................................. 2\n5 Description (continued) .................................................. 4\n6 Pin Configuration and Functions ................................... 5\n7 Specifications .................................................................. 8\n7.1 Absolute Maximum Ratings........................................ 8\n7.2 ESD Ratings............................................................... 8\n7.3 Recommended Operating Conditions......................... 8\n7.4 Thermal Information.................................................... 8\n7.5 Electrical Characteristics........................................... 10\n7.6 Timing Requirements................................................ 12\n7.7 Switching Characteristics.......................................... 13\n8 Detailed Description ...................................................... 17\n8.1 Overview................................................................... 17\n8.2 Functional Block Diagram......................................... 17\n8.3 Feature Description................................................... 17\n8.4 Device Functional Modes.......................................... 218.5 Programming............................................................ 43\n8.6 Register Map............................................................. 44\n9 Application and Implementation .................................. 67\n9.1 Application Information............................................. 67\n9.2 Typical Application.................................................... 68\n10 Power Supply Recommendations .............................. 73\n10.1 V CC Power Supply.................................................. 73\n10.2 V CCA Power supply................................................. 73\n10.3 V PLL and V CCIO Power Supplies.............................. 73\n11 Layout ........................................................................... 74\n11.1 Layout Guidelines................................................... 74\n11.2 Layout Example...................................................... 75\n12 Device and Documentation Support .......................... 76\n12.1 Documentation Support.......................................... 76\n12.2 Receiving Notification of Documentation Updates.. 76\n12.3 Community Resources............................................ 76\n12.4 Trademarks............................................................. 76\n13 Mechanical, Packaging, and Orderable\nInformation .................................................................... 76\n4 Revision History\nNOTE: Page numbers for previous revisions may differ from page numbers in the current version.\nChanges from Revision B (March 2017) to Revision C (October 2020) Page\n• NOTE: The device in the MicroStar Jr. BGA packaging were redesigned using a laminate nFBGA package.\nThis nFBGA package offers datasheet-equivalent electrical performance. It is also footprint equivalent to the\nMicroStar Jr. BGA. The new package designator in place of the discontinued package designator will be\nupdated throughout the datasheet...................................................................................................................... 1\n• Changed u*jr ZQE to nFBGA ZXH..................................................................................................................... 1\n• Changed u*jr ZQE to nFBGA ZXH..................................................................................................................... 5\n• Changed u*jr ZQE to nFBGA ZXH. Updated thermal information...................................................................... 8\nChanges from Revision A (November 2015) to Revision B (March 2017) Page\n• Deleted device number SN65DSI96 from the data sheet................................................................................... 1\n• Deleted Feature  "Adaptive Content Management and Backlight PWM Control..."............................................. 1\n• Added Feature : I2C Configurable....................................................................................................................... 1\n• Updated the Applications  list.............................................................................................................................. 1\n• Replaced the Simple Diagram............................................................................................................................ 1\n• Changed SN65DSIx6 To: SN65DSI86 throughout the data sheet...................................................................... 4\n• Deleted pagraph "For the SN65DSI96, the brightness is controlled.." from the Pulse Width Modulation (PWM)\nsection.............................................................................................................................................................. 19\n• Deleted the PWM Backlight Selection  Options table ....................................................................................... 19\n• Deleted the Assertive Display (SN65DSI96 Only) section................................................................................ 21\n• Deleted step: "Configure Assertive Display Core . (For SN65DSI96 only)" from the Power-Up Sequence\nsection.............................................................................................................................................................. 21\n• Deleted step: "For SN65DSI96, disable Assertive Display core by clearing the ADEN bit." from the Power\nDown Sequence  section................................................................................................................................... 22\n• Changed Figure 8-14  ....................................................................................................................................... 44\n• Deleted SN65DSI96 from address 0x00 through 0x07 of Table 8-19  .............................................................. 45\n• Deleted address 0x3F from the Table 8-22  ...................................................................................................... 45SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n2 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n• Deleted "This register is also used for SN65DSI96 when OPTION_SELECT is not equal to zero." from\naddress 0xA3 in Table 8-27  ............................................................................................................................. 45\n• Deleted "This register is also used for SN65DSI96 when OPTION_SELECT is not equal to zero." from\naddress 0xA4 in Table 8-27  ............................................................................................................................. 45\n• Changed 0xE6 Bits 7, 6, and 4 to Reserved in Table 8-30  .............................................................................. 45\n• Changed 0xE8 Bits 7 to Reserved in Table 8-30  ............................................................................................. 45\n• Changed 0xF5 Bits 7, 6, and 4 to Reserved in Table 8-31  .............................................................................. 45\n• Changed 0xF7 Bits 7 to Reserved in Table 8-31  ............................................................................................. 45\n• Deleted options 001 to 110 for 0xFF Bit 2:0 in Table 8-32  ............................................................................... 45\nChanges from Revision * (September 2013) to Revision A (November 2015) Page\n• Added Pin Configuration and Functions  section, ESD Ratings  table, Feature Description  section, Device\nFunctional Modes , Application and Implementation  section, Power Supply Recommendations  section, Layout\nsection, Device and Documentation Support  section, and Mechanical, Packaging, and Orderable Information\nsection ............................................................................................................................................................... 1\n• Changed R θJC(top)  MIN value in Thermal Information  table from 32.9 to 32.1.................................................... 8\n• Added R θJA parameter to Thermal Information  table.......................................................................................... 8\n• Changed Description for ADDRESS 0x5A BIT(S) 1:0 from \'Reserved\' to \'ASSR_CONTROL\' with Bit\nassignments of 00, 01, 10, and 11 in Table 8-23 .............................................................................................. 45\n• Added Table 8-33  in Standard CFR Registers ................................................................................................. 45www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 3\nProduct Folder Links: SN65DSI86\n5 Description (continued)\nDesigned with industry compliant interface technology, the SN65DSI86  is compatible with a wide range of\nmicroprocessors, and is designed with a range of power management features, including panel refresh support,\nand the MIPI defined ultralow power state (ULPS) support.\nThe SN65DSI86  is implemented in a small outline, 5-mm × 5-mm, MicroStar Junior ball-grid array (BGA) at 0.5-\nmm pitch package, and operates across a temperature range from –40°C to +85°C.\nIn the rest of this document, the SN65DSI86  is referred to as SN65DSI86  . Anytime SN65DSI86 is used, then\nthat particular sentence or feature only refers to that specific part.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n4 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n6 Pin Configuration and Functions\n9\n8\n7\n6\n5\n4\n3\n2\n1\nA B C D E F G H JADDRIRQGPIO1GPIO2GPIO3REFCLKGNDVCCA\nENTEST1GPIO4TEST2VCCIOTEST3ML3PML3N\nDB0NDB0PML2PML2N\nDB1NDB1PVCCVCCGNDVPLL\nDBCNDBCPGNDGNDVCCAML1PML1N\nDB2NDB2PGNDGNDGNDML0PML0N\nDB3NDB3PVCCA\nSCLVCCADA0PDA1PDACPDA2PDA3PAUXPAUXN\nSDAVCCDA0NDA1NDACNDA2NDA3NHPDVCC\nVCCIO VCCAGND\nSee Section 11.1  for additional information.\nFigure 6-1. ZXH Package 64-Pin nFBGA Top View\nTable 6-1. Pin Functions\nPIN\nI/O DESCRIPTION\nNAME NO.\nADDR A1 CMOS Input/OutputLocal I2C interface target address select. See Table 8-4 . In normal operation, this pin is\nan input. When the ADDR pin is programmed high, it must be tied to the same 1.8-V\npower rails where the SN65DSI86 VCCIO 1.8-V power rail is connected.\nAUXP/N H8, H9 LVDS I/O Auxiliary-channel differential pair\nDA0P/N H3, J3LVDS Input (HS)\nCMOS Input/Output\n(LS)MIPI D-PHY channel A data lane 0; data rate up to 1.5 Gbps.\nDA1P/N H4, J4LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel a data lane 1; data rate up to 1.5 Gbps.\nDA2P/N H6, J6LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel A data lane 2; data rate up to 1.5 Gbpswww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 5\nProduct Folder Links: SN65DSI86\nTable 6-1. Pin Functions (continued)\nPIN\nI/O DESCRIPTION\nNAME NO.\nDA3P/N H7, J7LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel A data lane 3; data rate up to 1.5 Gbps.\nDACP/N H5, J5LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel A clock lane; operates up to 750 MHz. Under proper conditions,\nthis clock can be used instead of REFCLK to feed DisplayPort PLL.\nDB0P/N C2, C1LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel B data lane 0; data rate up to 1.5 Gbps.\nDB1P/N D2, D1LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel B data lane 1; data rate up to 1.5 Gbps.\nDB2P/N F2, F1LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel B data lane 2; data rate up to 1.5 Gbps.\nDB3P/N G2, G1LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel B data lane 3; data rate up to 1.5 Gbps.\nDBCP/N E2, E1LVDS Input (HS)\nCMOS Input (LS)\n(Failsafe)MIPI D-PHY channel B clock lane; operates up to 750 MHz.\nEN B1CMOS Input\n(Failsafe)Chip enable and reset. Device is reset (shutdown) when EN is low.\nDeassertion (low) of EN will cause all internal CSRs and functions to be reset to default\nstate.\nGNDA8, D8, E4,\nE5, F4, F5,\nF6, G8Power Supply Reference ground for digital and analog circuits.\nGPIO[4:1]B4, A6, A5,\nA4CMOS Input/OutputGeneral-purpose I/O. See Section 8.3.3  section for details on GPIO functionality.\nWhen these pins are set high, tie the pins to the same 1.8-V power rail that the\nSN65DSI86 VCCIO 1.8-V power rail is connected to.\nHPD J8CMOS Input with\ninternal pulldown.\n(Failsafe)HPD input. This input requires a 51-kΩ 1% series resistor.\nIRQ A3 CMOS Output Interrupt signal\nML0P/N F8, F9 LVDS output (DP)DisplayPort lane 0 transmit differential pair. Supports 1.62 Gbps, 2.16 Gbps, 2.43 Gbps,\n2.7 Gbps, 3.24 Gbps, 4.32 Gbps, and 5.4 Gbps.\nAll DisplayPort lanes transmit at the same data rate.\nML1P/N E8, E9 LVDS output (DP)DisplayPort lane 1 transmit differential pair. Supports 1.62 Gbps, 2.16 Gbps, 2.43 Gbps,\n2.7 Gbps, 3.24 Gbps, 4.32 Gbps, and 5.4 Gbps.\nAll DisplayPort lanes transmit at the same data rate.\nML2P/N C8, C9 LVDS output (DP)DisplayPort lane 2 transmit differential pair. Supports 1.62 Gbps, 2.16 Gbps, 2.43 Gbps,\n2.7 Gbps, 3.24 Gbps, 4.32 Gbps, and 5.4 Gbps.\nAll DisplayPort lanes transmit at the same data rate.\nML3P/N B8, B9 LVDS output (DP)DisplayPort lane 3 transmit differential pair. Supports 1.62 Gbps, 2.16 Gbps, 2.43 Gbps,\n2.7 Gbps, 3.24 Gbps, 4.32 Gbps, and 5.4 Gbps.\nAll DisplayPort lanes transmit at the same data rate.\nREFCLK A7 InputReference clock. Frequency determined by value programmed in I2C register or value of\nGPIO[3:1] latched at rising edge of EN. Supported frequencies are: 12 MHz, 19.2 MHz,\n26 MHz, 27 MHz, and 38.4 MHz.\nThis pin must be tied to GND when DACP/N feeds the DisplayPort PLL\nSCL H1OpenDrain Input/Output\n(Failsafe)Local I2C interface clock.\nSDA J1OpenDrain Input/Output\n(Failsafe)Local I2C interface bidirectional data signal.\nTEST1 B3CMOS Input\nwith internal pulldown.Used for Texas Instruments internal use only. This pin must be left unconnected or tied\nto ground.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n6 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 6-1. Pin Functions (continued)\nPIN\nI/O DESCRIPTION\nNAME NO.\nTEST2 B5CMOS Input/Output\nwith internal pulldownUsed for internal test, HBR2 compliance eye, and symbol error rate measurement\npattern. For normal operation, pull down this pin to GND or leave unconnected. See\nTable 8-15  for information on HBR2 compliance eye and symbol error rate measurement\npatterns.\nTEST3 B7 NAUsed for Texas Instruments internal use only. This pin must be left unconnected or tied\nto GND through a 0.1-µF capacitor.\nVCCD6, D5, J2,\nJ9Power Supply 1.2-V power supply for digital core\nVCCAA9, G9,\nE6, B2, H2Power Supply1.2-V power supply for analog circuits.\nAVCC and VCC can be applied simultaneously.\nVCCIO B6, A2 Power Supply 1.8-V power supply for Digital I/O\nVPLL D9 Power Supply 1.8-V power supply for DisplayPort PLLwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 7\nProduct Folder Links: SN65DSI86\n7 Specifications\n7.1 Absolute Maximum Ratings\nover operating free-air temperature range (unless otherwise noted)(1)\nMIN MAX UNIT\nSupply voltageVCCA, VCC –0.3 1.3\nV\nVCCIO, VPLL –0.3 2.175\nInput voltage All input terminals –0.5 2.175 V\nOperating temperature –40 85 °C\nStorage temperature, T stg –65 105 °C\n(1) Stresses beyond those listed under Absolute Maximum Ratings may cause permanent damage to the device. These are stress ratings\nonly, which do not imply functional operation of the device at these or any other conditions beyond those indicated under Section 7.3 .\nExposure to absolute-maximum-rated conditions for extended periods may affect device reliability.\n7.2 ESD Ratings\nVALUE UNIT\nVESD Electrostatic dischargeHuman body model(1)±4000 V\nCharged-device model(2)±500 V\n(1) Tested in accordance with JEDEC Standard 22, Test Method A114-B\n(2) Tested in accordance with JEDEC Standard 22, Test Method C101-A\n7.3 Recommended Operating Conditions\nover operating free-air temperature range (unless otherwise noted)\nMIN NOM MAX UNIT\nVCCA VCCA Power supply; analog circuits 1.14 1.2 1.26 V\nVCC VCC Power supply; digital circuits 1.14 1.2 1.26 V\nVCCIO VCCIO Power Supply; digital IOs. 1.65 1.8 1.98 V\nVPLL VPLL Power Supply, DisplayPort PLL 1.65 1.8 1.98 V\nVPSN Supply noise on any VCC terminal f(noise)  > 1 MHz 0.05 V\nVDSI_PIN DSI input pin voltage range –50 1350 mV\nf(I2C) Local I2C input frequency 400 kHz\nfHS_CLK DSI HS clock input frequency 40 750 MHz\nZL DP output differential load impedance 90 110 Ω\nTA Operating free-air temperature –40 85 °C\nTJ Operating junction temperature –40 105 °C\n7.4 Thermal Information\nTHERMAL METRIC(1)SN65DSI86\nUNITZXH\n(nFBGA)\n64 PINS\nRθJA Junction-to-ambient thermal resistance 55.0 °C/W\nRθJC(top) Junction-to-case (top) thermal resistance 30.6 °C/W\nRθJB Junction-to-board thermal resistance 31.0 °C/W\nψJT Junction-to-top thermal resistance metric High-K board 0.8 °C/W\nψJB Junction-to-board thermal resistance metric High-K board 30.8 °C/WSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n8 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTHERMAL METRIC(1)SN65DSI86\nUNITZXH\n(nFBGA)\n64 PINS\nRθJC(bot) Junction-to-case (bottom) thermal resistance N/A °C/W\n(1) For more information about traditional and new thermal metrics, see the Semiconductor and IC Package Thermal Metrics  application\nreport.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 9\nProduct Folder Links: SN65DSI86\n7.5 Electrical Characteristics\nover operating free-air temperature range (unless otherwise noted)\nPARAMETER TEST CONDITIONS MIN TYP(1)MAX UNIT\nSTANDARD IO (TEST1, TEST2, ADDR, SCL, SDA, IRQ, REFCLK, EN, GPIO[4:1])\nVILLow-level control signal input\nvoltage0.3 ×\nVCCIOV\nVIHHigh-level control signal input\nvoltage0.7 ×\nVCCIOV\nVOH High-level output voltage IOH = –2 mA 1.3 V\nVOL Low-level output voltage IOL = 2 mA 0.4 V\nIIH High-level input current\nAny input terminal ±5 μA\nIIL Low-level input current\nIOZ High-impedance output current Any output terminal ±10 μA\nIOS Short-circuit output current Any output driving GND short ±2 mA\nICCA VCCA device active current VCCA = 1.2 V (2)70 126 mA\nICC VCC device active current VCCA = 1.2 V (2)43 52 mA\nICCIOVCCIO and V PLL device active\ncurrentVCCIO = 1.8 V, V PLL = 1.8 V (2)32 32 mA\nISUSPEND_CCA VCCA device suspend current All data and clock lanes are in\nultra-low power state (ULPS) and\nSUSPEND = 19.8 mA\nISUSPEND_CC VCC device suspend current All data and clock lanes are in\nultra-low power state (ULPS) and\nSUSPEND = 19 mA\nISUSPEND_CCIO VCCIO and V PLL device suspend\ncurrentAll data and clock lanes are in\nultra-low power state (ULPS) and\nSUSPEND = 11.16 mA\nIEN_CCA VCCA shutdown current EN = 0 0.95 mA\nIEN_CC VCC shutdown current EN = 0 2 mA\nIEN_CCIO VCCIO and V PLL shutdown current EN = 0 0.038 mA\nREN EN control input resistor 150 kΩ\nADDR, EN, SCL, SDA, DBP/N[3:0], DAP/N[3:1], DBCP/N, DACP/N\nILEAK Input failsafe leakage currentVCC = 0; V CCIO = 0 V. Input pulled\nup to V CCIO max. DSI inputs pulled\nup to 1.3 V–40 40 µA\nMIPI DSI INTERFACE\nVIH-LP LP receiver input high threshold\nSee Figure 7-5880 mV\nVIL-LP LP receiver input low threshold 550 mV\nVOH-LPLP transmitter high-level output\nvoltage1100 1300 mV\nVOL-LPLP transmitter low-level output\nvoltage–50 50 mV\nVIHCD LP Logic 1 contention threshold 450 mV\nVILCD LP Logic 0 contention threshold 200 mV\n|VID| HS differential input voltage 70 270 mV\n|VIDT|HS differential input voltage\nthreshold50 mV\nVIL-ULPSLP receiver input low threshold;\nultra-low power state (ULPS)300 mV\nVCM-HSHS common mode voltage;\nsteady-state70 330 mV\nΔVCM-HSHS common mode peak-to-peak\nvariation including symbol delta\nand interference100 mV\nVIH-HS HS single-ended input high voltage\nSee Figure 7-5460 mV\nVIL-HS HS single-ended input low voltage –40 mVSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n10 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nover operating free-air temperature range (unless otherwise noted)\nPARAMETER TEST CONDITIONS MIN TYP(1)MAX UNIT\nVTERM-ENHS termination enable; single-\nended input voltage (both Dp AND\nDn apply to enable)Termination is switched\nsimultaneous for Dn and Dp450 mV\nRDIFF-HSHS mode differential input\nimpedance80 125 Ω\nDisplayPort MAIN LINK\nVTX_DC_CM Output common mode voltage 0 2 V\nVTX_AC_CM_HBR_RBRTX AC common mode voltage for\nHBR and RBR.20 mVRMS\nVTX_AC_CM_HBR2TX AC common mode voltage for\nHBR230 mVRMS\nVTX_DIFFPP_LVL0Differential peak-to-peak output\nvoltage level 0Based on default state of\nV0_P0_VOD register300 400 460 mV\nVTX_DIFFPP_LVL1Differential peak-to-peak output\nvoltage level 1Based on default state of\nV1_P0_VOD register450 600 690 mV\nVTX_DIFFPP_LVL2Differential peak-to-peak output\nvoltage level 2Based on default state of\nV2_P0_VOD register600 800 920 mV\nVTX_DIFFPP_LVL3Differential peak-to-peak output\nvoltage level 3Based on default state of\nV3_P0_VOD register. Level 3 is\nnot enabled by default600 800 920 mV\nVTX_PRE_RATIO_0 Pre-emphasis level 0 0 0 0 dB\nVTX_PRE_RATIO_1 Pre-emphasis level 1 2.8 3.5 4.2 dB\nVTX_PRE_RATIO_2 Pre-emphasis level 2 4.8 6.0 7.2 dB\nVTX_PRE_RATIO_3 Pre-emphasis level 3 Level 3 is not enabled by default 4.8 6.0 7.2 dB\nVTX_PRE_POST2_RATIO_0 Post-cursor2 level 0 0 0 0 dB\nVTX_PRE_POST2_RATIO_1 Post-cursor2 level 1 –1.1 –0.9 –0.7 dB\nVTX_PRE_POST2_RATIO_2 Post-cursor2 level 2 –2.3 –1.9 –1.5 dB\nVTX_PRE_POST2_RATIO_3 Post-cursor2 level 3 Level 3 is not enabled by default –3.7 –3.1 –2.5 dB\nITX_SHORT TX short circuit current limit 50 mA\nRTX_DIFF Differential impedance 80 100 120 Ω\nCAC_COUPLING AC coupling capacitor 75 200 nF\nDisplayPort HPD\nVHPD_PLUG Hot plug detection threshold Measured at 51-kΩ series resistor. 2.2 V\nVHPD_UNPLUG Hot unplug detection threshold Measured at 51-kΩ series resistor. 0.8 V\nRHPDPD HPD internal pulldown resistor 51 60 69 kΩ\nDisplayPort AUX INTERFACE\nVAUX_DIFF_PP_TXPeak-to-peak differential voltage at\ntransmit pinsVAUX_DIFF_PP  = 2 × |V AUXP –\nVAUXN|0.18 1.38 V\nVAUX_DIFF_PP_RXPeak-to-peak differential voltage at\nreceive pinsVAUX_DIFF_PP  = 2 × |V AUXP –\nVAUXN|0.18 1.36 V\nRAUX_TERMAUX channel termination DC\nresistance100 Ω\nVAUX_DC_CMAUX channel DC common mode\nvoltage0 1.2 V\nVAUX_TURN_CMAUX channel turnaround common-\nmode voltage0.3 V\nIAUX_SHORTAUX Channel short circuit current\nlimit90 mA\nCAUX AUX AC-coupling capacitor 75 200 nF\n(1) All typical values are at V CC = 1.2 V, V CCA = 1.2 V, V CCIO = 1.8 V, and V PLL = 1.8 V, and T A = 25°C\n(2) Maximum condition: WQXGA 60 fps Dual-Link 2xDP at HBR2, PLL enabled; typical condition: WUXGA 60 fps 1xDP at HBR2, PLL\nenabledwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 11\nProduct Folder Links: SN65DSI86\n7.6 Timing Requirements\nMIN MAX UNIT\nPower-up For DPPLL_CLK_SRC = REFCLK, See Figure 7-1\ntd1 VCC/A stable before V CCIO/VPLL stable 0 µs\ntd2 VCC/A and V CCIO/VPLL stable before EN assertion 100 µs\ntd3 REFCLK active and stable before EN assertion 0 µs\ntd4 GPIO[3:1] stable before EN assertion 0 ns\ntd5 GPIO[3:1] stable after EN assertion 5 µs\ntd6 LP11 state on DSI channels A and B before EN assertion 0 ns\ntd7 LP11 state on DSI channels A and B after EN assertion(1)100 µs\ntVCC_RAMP VCC supply ramp requirements 0.2 100 ms\ntVCCA_RAMP VCCA supply ramp requirements 0.2 100 ms\ntVCCIO_RAMP VCCIO supply ramp requirements 0.2 100 ms\ntVPLL_RAMP VPLL supply ramp requirements 0.2 100 ms\nPower-up For DPPLL_CLK_SRC = DACP/N, See Figure 7-2\ntd1 VCC/A stable before V CCIO/VPLLstable 0 µs\ntd2 VCC/A and V CCIO/VPLL stable before EN assertion 100 µs\ntd3 REFCLK low before EN assertion 10 µs\ntd4 GPIO[3:1] stable before EN assertion 0 ns\ntd5 GPIO[3:1] stable after EN assertion 5 µs\ntd6 LP11 state on DSI channels A and B before EN assertion 0 ns\ntd7 LP11 state on DSI channels A and B after EN assertion(1)100 µs\ntd8 DACP/N active and stable before DP_PLL_EN bit is set. 100 µs\ntVCC_RAMP VCC supply ramp requirements 0.2 100 ms\ntVCCA_RAMP VCCA supply ramp requirements 0.2 100 ms\ntVCCIO_RAMP VCCIO supply ramp requirements 0.2 100 ms\ntVPLL_RAMP VPLL supply ramp requirements 0.2 100 ms\nSUSPEND Timing Requirements, See Figure 7-3\ntd1 LP11 or ULPS on DSI channel A and B before assertion of SUSPEND. 200 ns\ntd2 Delay from SUSPEND asserted to DisplayPort Main Link powered off. 2 × t REFCLK\ntd3 REFCLK active hold time after assertion of SUSPEND 4 × t REFCLK\ntd4 REFCLK active setup time before deassertion of SUSPEND. 100 ns\ntd5Delay from SUSPEND deasserted to DisplayPort Main Link active and\ntransmitting IDLE pattern. Semi-Auto Link Training is NOT used.20 + (1155\n× tREFCLK )µs\ntd6 LP11 state or ULPS on DSI channels A and B after SUSPEND deassertion20 + (1155\n× tREFCLK )µs\n(1) Access to SN65DSI86 CFR from I2C or DSI allowed after td7.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n12 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n7.7 Switching Characteristics\nover operating free-air temperature range (unless otherwise noted)\nPARAMETER TEST CONDITIONS MIN TYP(1)MAX UNIT\nMIPI DSI INTERFACE\ntGSDSI LP glitch suppression pulse\nwidth300 ps\ntHS-SETUP DSI HS data to clock setup time 0.2 UI\ntHS-HOLD DSI HS clock to data hold time 0.2 UI\nDisplayPort MAIN LINK\nFBR7 Bit rate 7 5.37138 5.4 5.40162 Gbps\nFBR6 Bit rate 6 4.297104 4.32 4.321296 Gbps\nFBR5 Bit rate 5 3.222828 3.24 3.240972 Gbps\nFBR4 Bit rate 4 2.68569 2.7 2.70081 Gbps\nFBR3 Bit rate 3 2.417121 2.43 2.430729 Gbps\nFBR2 Bit rate 2 2.148552 2.16 2.160648 Gbps\nFBR1 Bit rate 1 1.611414 1.62 1.620486 Gbps\nUIBR7 Unit interval for BR7High limit = +300 ppm.\nLow limit = –5300 ppm185 ps\nUIBR6 Unit interval for BR6High limit = +300 ppm.\nLow limit = –5300 ppm231.5 ps\nUIBR5 Unit interval for BR5High limit = +300 ppm.\nLow limit = –5300 ppm308.6 ps\nUIBR4 Unit interval for BR4High limit = +300 ppm.\nLow limit = –5300 ppm370.4 ps\nUIBR3 Unit interval for BR3High limit = +300 ppm.\nLow limit = –5300 ppm411.5 ps\nUIBR2 Unit interval for BR2High limit = +300 ppm.\nLow limit = –5300 ppm463 ps\nUIBR1 Unit interval for BR1High limit = +300 ppm.\nLow limit = –5300 ppm617.3 ps\ntERC_L0Differential output rise or fall time\nwith DP_ERC set to 050 61 80 ps\ntERC_L1Differential output rise or fall time\nwith DP_ERC set to 174 95 115 ps\ntERC_L2Differential output rise or fall time\nwith DP_ERC set to 2108 123 146 ps\ntERC_L3Differential output rise or fall time\nwith DP_ERC set to 3136 153 168 ps\ntTX_RISE_FALL\n_MISMATCHLane intra-pair output skew at TX\npins5%\ntINTRA_SKEW Intra-pair differential skew 20 ps\ntINTER_SKEW Inter-pair differential skew 100 ps\ntTX_EYE_HBR2Minimum TX eye width at TX\npackage pins for HBR2(2) 0.73 UIHBR2\ntTX_EYE_MED_TO\n_MAX_JIT_HBR2Maximum time between the jitter\nmedian and maximum deviation\nfrom the median at TX package\npins for HBR2(2)0.135 UIHBR2\ntTX_EYE_HBRMinimum TX eye width at TX\npackage pins for HBR(2) 0.72 UIHBR\ntTX_EYE_MED_TO\n_MAX_JIT_HBRMaximum time between the jitter\nmedian and maximum deviation\nfrom the median at TX package\npins for HBR(2)0.147 UIHBR\ntTX_EYE_RBRMinimum TX eye width at TX\npackage pins for RBR(2) 0.82 UIRBRwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 13\nProduct Folder Links: SN65DSI86\nover operating free-air temperature range (unless otherwise noted)\nPARAMETER TEST CONDITIONS MIN TYP(1)MAX UNIT\ntTX_EYE_MED_TO\n_MAX_JIT_RBRMaximum time between the jitter\nmedian and maximum deviation\nfrom the median at TX package\npins for RBR(2)0.09 UIRBR\ntXSSC_AMP Link clock down-spreading 0% 0.5%\ntSSC_FREQ Link clock down-spreading\nfrequency30 33 kHz\nDisplayPort AUX INTERFACE\nUIMAN Manchester transaction unit\ninterval0.4 0.6 µs\ntauxjitter_tx Cycle-to-cycle jitter time at transmit\npins0.08 UIMAN\ntauxjitter_rx Cycle-to-cycle jitter time at receive\npins0.04 UIMAN\nREFCLK\nfREFCLK REFCLK frequency. supported\nfrequencies: 12 MHz, 19.2 MHz,\n26 MHz, 27 MHz, 38.4 MHz12 38.4 MHz\ntRISEFALL REFCLK rise or fall time 10% to 90% 100 ps 23 ns\ntREFCLK REFCLK period 26.0417 83.333 ns\ntpj REFCLK peak-to-peak phase jitter 50 ps\nDuty REFCLK duty cycle 40% 50% 60%\n(1) All typical values are at V CC = 1.2 V and T A = 25 °C\n(2) BR refers to BR1; HBR refers to BR; HBR2 refers to BR7.\nLP11\nLP11td7td1td4td6 td5td2\ntd3\nEN\nREFCLK\nGPIO[3:1]\nVCC / VCCA\nVCCIO / VPLL\nDA/B*_P/N\nDAC/BC_P/N\nFigure 7-1. Power-Up Timing Definitions for DPPLL_CLK_SRC = REFCLKSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n14 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nLP11\nLP11\ntd8td7td1td4td6 td5td2\ntd3\nEN\nREFCLK\nGPIO[3:1]\nVCC / VCCA\nVCCIO / VPLL\nDA/B*_P/N\nDAC/BC_P/N\nDP_PLL_ENFigure 7-2. Power-Up Timing Definitions for DPPLL_CLK_SRC = DACP/N\ntd2td3td6\ntd5 td4 td1\nDP_ML*_P/N\nDA/B*_P/NREFCLKSUSPEND\nIDLE IDLE\nLP11 or ULPS\nFigure 7-3. SUSPEND Timing Definitions\nFigure 7-4. DSI HS Mode Receiver Timing Definitionswww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 15\nProduct Folder Links: SN65DSI86\nLow Power (LP) \nMode ReceiverLP-RX\nInput LOWLP-RX\nInput HIGH1.3V\nVIH-LP\nGNDVIL-LP\nVIH-HS\nHigh Speed (HS) Mode\nReceiver HS-RX\nCommon Mode\nRangeVCM-HS(MAX)\nVCM-HS(MIN)VID\nVIL-HSFigure 7-5. DSI Receiver Voltage DefinitionsSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n16 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n8 Detailed Description\n8.1 Overview\nThe SN65DSI86  is a MIPI DSI to eDP bridge, and supports MIPI DSI RGB 18 bpp (loosely packed or tightly\npacked) and 24 bpp formats. The SN65DSI86  packetizes the 18-bpp or 24-bpp RGB data received on the DSI\ninputs and transmits over the eDP interface in SST format at data rates up to 5.4 Gbps. With support of up to\neight DSI lanes at 1.5 Gbps per DSI lane, and four lanes of eDP at speeds up to 5.4 Gbps, the SN65DSI86  is\nperfectly suited for both standard high definition (HD) displays as well has ultra HD displays like 4K2K.\n8.2 Functional Block Diagram\neDP Main Link\nPLL\nPIXEL \nCLOCKDP Link LayerML0P\nML0N\nData BuffersML1P\nML1N\nML2P\nML2NScrambler\n8B/10B\nAUXPAUX\nChannelML3P\nML3NPre-Emphasis\nDrive Current\nControl\nSSC\nAUXNAdaptive Display\nALS\nPre-pressoing\nBL Control\nAdaptive\nContent\nManagement24\nCSR\nLOCAL I2C\nCSR WRITECSR Read\nSDA\nIRQ\nReset EN\nREFCLKTEST1GPIO[4:1]HPD\nSCL\nADDRDACPClock Lane\nModule\nDACNEscape Mode\nULPS\nLP_SM; Init\nTimersDA0PData Lane Module\nVCMterm_\nctrl50\r\n50\r\nHS-RXLS-RX-TX-0\nLS-RX-TX-0DA0NEscape Mode\nULPS\nLP_SM; Init\nSOT Detection\nTimersData \nLane 0\nDA1P\nDA1NLane\nMergeERR\nSHDN\nERR\nSHDN8\n8\nClock Circuits\n HS Clock \nSourced\nM/N Pixel\nClock PLL\nClock Dividers\nTINIT Ring OSC32DSI Packet\nProcessors\nPacket\nHeaders\nTimers\nShort Packets\nEoTpVS Events\nHS EventsLong Packets\n0x1E, 0x2E\n0x3E\nSOTEOT\nBEERRERR\n24\nDE\nVS\nHS\nLogic ClocksPLL LockData Lane 1\n(Circuit Same As Data Lane 0, Except no LP-TX)\nDA2P\nDA2N8\nDA3P\nDA3NData Lane 3\n(Circuit Same As Data Lane 0, Except no LP-TX)8VCCA\nVCCIO\nVCC\nGND\nHS-RXLS-RX-1\nLS-RX-0CRC\nPartial\nLine Buffer\n(Pixel Queue)WC\nECCChannel A\n32SOTEOT\nBEDSI Channel\nMerging\nDB0P\nDB0N\nDB1P\nDB1N\nDB2P\nDB2N\nDB3P\nDB3N\nDBCP\nDBCNLane\nMerge8\n8\n8\n8VCMterm_\nctrl50\r\n50\rData Lane 2\n(Circuit Same As Data Lane 0, Except no LP-TX)\nChannel B\n(Circuit Same As Channel A, Except No LP-TX)\nCopyright © 2017, Texas Instruments Incorporated\n8.3 Feature Description\n8.3.1 MIPI Dual DSI Interface\nThe SN65DSI86  supports two 4-lane MIPI DSI inputs called DSIA and DSIB. Each lane supports a data rate up\nto 1.5 Gbps and can accept 18 bpp or 24 bpp RGB data. When only using the DSIA channel, the SN65DSI86\ncan support an maximum video stream rate of 6 Gbps that easily supports HD resolutions. If larger resolutionswww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 17\nProduct Folder Links: SN65DSI86\nlike 4K2K are required, the maximum stream rate can be increased to 12 Gbps by using both DSIA and DSIB\nchannels. When using both DSIA and DSIB channels, the SN65DSI86  requires the pixels on each active line to\nbe broken up into either odd pixels on DSIA and even pixels on DSIB, or left half of line on DSIA and right half of\nline on DSIB.\nThe SN65DSI86  also supports DSI generic read and write operation. Using DSI generic reads and writes, the\nexternal GPU can configure the SN65DSI86  internal registers and communicate with eDP panels. The DSI\ngeneric read and writes is also used for panel self refresh (PSR). In order to use the PSR feature, the eDP panel\nmust support PSR and the GPU must support generating generic reads and writes without stopping the video\nstream. Generic reads and writes must be performed during video blanking time in order for PSR to work\nproperly.\n8.3.2 Embedded DisplayPort Interface\nThe SN65DSI86  supports Single-Stream Transport (SST) mode over one, two, or 4 lanes at data rates of 1.62\nGbps (RBR), 2.16 Gbps, 2.43 Gbps, 2.7 Gbps (HBR), 3.24 Gbps, 4.32 Gbps, and 5.4 Gbps (HBR2). All lanes\noperate at the same rate ( SN65DSI86  does not support each lane being at a different data rate). The\nSN65DSI86  allows for software control of the eDP interfaces voltage swing level, pre-emphasis level, and SSC.\nBecause the SN65DSI86  is a DSI to eDP bridge, the SN65DSI86  only supports eDP panels which support\nASSR (Alternate Scrambler Seed Reset). Software must either through the DSI interface or I2C interface enable\nASSR in the eDP panel before attempting to link train. See the Section 9.2.1.2.5  section on how to enable ASSR\nin the eDP panel.\n8.3.3 General-Purpose Input and Outputs\nThe SN65DSI86  provides four GPIO pins that can be configured as an input or output. The GPIOs default to\ninput but can be changed to output by changing the appropriate GPIO register.\nGPIO Functions:\n1. Input\n2. Output\n3. SUSPEND Input (powers down entire chip except for I2C interface)\n4. PWM\n5. DSIA VSYNC\n6. DSIA HSYNC\n8.3.3.1 GPIO REFCLK and DSIA Clock Selection\nThe clock source for the SN65DSI86  is derived from one of two sources: REFCLK pin or DACP/N pins. On the\nrising edge of EN, the sampled state of GPIO[3:1] as well as the detection of a clock on REFCLK pin is used to\ndetermine the clock source and the frequency of that clock. After the EN, software through the I2C interface can\nchange the configuration of REFCLK_FREQ, and CHA_DSI_CLK_RANGE registers for the case where\nGPIO[3:1] sampled state does not represent the intended functionality. Because the clock source is determined\nat the assertion of EN, software can not change the clock source. See Table 8-1  for GPIO to REFCLK or\nDACP/N frequency combinations.\nTable 8-1. GPIO REFCLK or DACP/N Frequency Selection (3) (2) (1)\nGPIO[3:1]REFCLK FREQUENCY\n(DPPLL_CLK_SRC = 0)DACP/N CLOCK FREQUENCY\n(DPPLL_CLK_SRC = 1)REFCLK_FREQ\n3’b000 12 MHz 468 MHz (DSIACLK / 39 = 12 MHz ) 0x0\n3’b001 19.2 MHz 384 MHz (DSIACLK / 20 = 19.2 MHz) 0x1\n3’b010 26 MHz 416 MHz (DSIACLK / 16 = 26 MHz) 0x2\n3’b011 27 MHz 486 MHz (DSIACLK / 18 = 27 MHz) 0x3\n3’b100 38.4 MHz 460.8 MHz (DSIACLK / 12 = 38.4 MHz) 0x4\n3’b101 through 3’b111 19.2 MHz 384 MHz (DSIACLK / 20 = 19.2 MHz) 0x5 through 0x7\n(1) If GPIO selection of REFCLK or DACP/N frequency is not used, then software must program the REFCLK_FREQ,\nCHA_DSI_CLK_RANGE and CHB_DSI_CLK_RANGE through the I2C interface prior to issuing any DSI commands or packets to the\nSN65DSI86.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n18 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n(2) REFCLK pin must be tied or pull-down to GND when the DACP/N is used as the clock source for the DPPLL.\n(3) For case when DPPLL_CLK_SRC = 1, the SN65DSI86 will update the CHA_DSI_CLK_RANGE and CHB_DSI_CLK_RANGE with a\nvalue that represents the selected DSI clock frequency. Software can change this value.\n8.3.3.2 Suspend Mode\nSuspend mode is intended to be used with the Section 8.4.5.9  feature of the eDP sink. The PSR feature saves\nsystem power but this power savings must not produce any noticeable display artifacts to the end user. The\ndeassertion of EN produces the greatest DSIx6 power savings, but the reconfiguration of the DSIx6 may be too\nslow, and therefore produce a bad end-user experience. In this case, Suspend mode is the next best option for\nreducing DSIx6 power consumption while in an active PSR state. Suspend mode allows for quick exit from an\nactive PSR state.\nWhen GPIO1 is configured for suspended operation (GPIO1 pin is asserted), then the DSIx6 is placed in low-\npower mode. The suspend (GPIO1) pin is sampled by the rising edge of REFCLK. If the suspend pin is sampled\nasserted, then all CSR registers do not reset to the default values, and the DP PLL, DP interface, and DSI\ninterfaces are powered off, as shown in Figure 7-3 . REFCLK can be turned off when DSIx6 is in Suspend mode.\nSection 7.6  summarizes the timing requirements to take the DSIx6 into Suspend mode.\nThe DSIx6 supports assertion of IRQ for HPD events. When an IRQ_HPD event is detected and both IRQ_EN\nand IRQ_HPD_EN bits are set, then the DSIx6 will assert the IRQ.\nIn order to take the DSIx6 out of Suspend mode, the REFCLK must be running before and after the suspend\n(GPIO1) pin is deasserted. After the DP PLL is locked, the DSIx6 transitions the ML_TX_MODE from Main Link\nOff to either Normal or Semi-Auto Link depending on the state of PSR_TRAIN register. If the PSR_EXIT_VIDEO\nbit is set, then active video begins transmitting over the DisplayPort interface after the first vertical sync start\n(VSS) is detected on the DSI interface. If the PSR_EXIT_VIDEO bit is not set, software must enable the\nVSTREAM_ENABLE bit. Then active video begins transmitting over the DisplayPort interface after the first\nvertical sync start The Section 7.6 table summarizes the timing requirements to take the DSIx6 into SUSPEND\nmode. (VSS) is detected on the DSI interface.\nNote\nIf the GPIO4_CTRL is configured for PWM, the PWM will be active during SUSPEND. If the system\ndesigner does not wish the PWM active during SUSPEND, then software can change the\nGPIO4_CTRL to Input before entering SUSPEND and then re-enable PWM after exiting SUSPEND by\nchanging the GPIO4_CTRL to PWM.\nNote\nFor the case when DPPLL_CLK_SRC = 1, REFCLK mentioned in this section is replaced with a\ndivided down version of the DSIA_CLK (DCAP/N). The means that DSIA_CLK must be active before\nthe assertion of SUSPEND and before the deassertion of SUSPEND as specified in Section 7.6. The\nDSIA_CLK can be stopped while in SUSPEND as long as above requirements are meet.\n8.3.3.3 Pulse Width Modulation (PWM)\nThe SN65DSI86 supports controlling the brightness of eDP display via pulse width modulation. The PWM signal\nis output over GPIO4 when GPIO4 control register is configured for PWM. For the SN65DSI86, the brightness is\ncontrolled by the BACKLIGHT register.\nThe granularity of brightness is controlled directly by the 16-bit BACKLIGHT_SCALE register. This register\nallows a granularity of up to 65535 increments. This register, in combination with either the BACKLIGHT register,\nwill determine the duty cycle of the PWM. For example, if the BACKLIGHT_SCALE register is programmed to\n0xFF and the BACKLIGHT is programmed to 0x40, then the duty cycle will be 25% (25% of the PWM period will\nbe high and 75% of the PWM period will be low). The duty cycle would be 100% (PWM always HIGH) if the\nBACKLIGHT register was programmed to 0xFF and would be 0% (PWM always low) if BACKLIGHT register was\nprogrammed to 0x00. The BACKLIGHT_SCALE should be set equal to the digital value corresponding to the\nmaximum possible backlight brightness that the display can produce. For example, if the backlight level is 16-bit,www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 19\nProduct Folder Links: SN65DSI86\nthen BACKLIGHT_SCALE should be 0xFFFF, if it is an 8-bit range, then BACKLIGHT_SCALE should be set to\n0x00FF.\nDuty Cycle (high pulse) = (BACKLIGHT ) / (BACKLIGHT_SCALE +1)\nThe frequency of the PWM is determined by the REFCLK_FREQ register and the value programmed into both\nthe PWM_PRE_DIV and BACKLIGHT_SCALE registers. The equation below determines the PWM frequency:\nPWM FREQ = REFCLK_FREQ / (PWM_PRE_DIV × BACKLIGHT_SCALE + 1)\nRegardless of the state of the DPPLL_CLK_SRC register, the REFCLK_FREQ value in above equation will be\nbased on the frequencies of DPPLL_CLK_SRC equal 0 (12 MHz, 19.2 MHz, 26 MHz, 27 MHz, 38.4 MHz). The\nREFCLK_FREQ will not be the DSIA CLK frequency in the case where DPPLL_CLK_SRC equals one.\nNote\nREFCLK or DACP/N must be running if GPIO4 is configured for PWM.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n20 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n8.4 Device Functional Modes\n8.4.1 Reset Implementation\nWhen EN is deasserted, CMOS inputs are ignored, the MIPI D-PHY inputs are disabled, and outputs are high\nimpedance. It is critical to transition the EN input from a low to a high level after the V CC supply has reached the\nminimum recommended operating voltage. This is achieved by a control signal to the EN input, or by an external\ncapacitor connected between EN and GND. To insure that the SN65DSI86 is properly reset, the EN pin must be\ndeasserted for at least 100 µs before being asserted.\nWhen implementing the external capacitor, the size of the external capacitor depends on the power up ramp of\nthe V CC supply, where a slower ramp-up results in a larger value external capacitor. See the latest reference\nschematic for the SN65DSI86  device and/or consider approximately 200-nF capacitor as a reasonable first\nestimate for the size of the external capacitor.\nBoth EN implementations are shown in Figure 8-1  and Figure 8-2 .\nRRST=150kΩVCCIO\nCEN\nSN65DSI86\nCopyright © 2017, Texas Instruments Incorporated\nFigure 8-1. External Capacitor Controlled EN\nCEN\nSN65DSI86controllerGPO\nCopyright © 2017, Texas Instruments IncorporatedFigure 8-2. EN Input from Active Controller\n8.4.2 Power-Up Sequence\nSTEP\nNUMBERDESCRIPTION\n1 EN deasserted (LOW) and all Power Supplies active and stable. Depending on whether DPPLL_CLK_SRC is REFCLK pin or\nthe DACP/N pins, GPIO[3:1] set to value that matches the REFCLK or DACP/N frequency. See the Table 8-1  for GPIO to\nREFCLK/DACP/N frequency combinations. If GPIO are not going to be used to select the REFCLK/DACP/N frequency, then\nsoftware must program the REFCLK_FREQ register via I2C after the EN is asserted. This knowledge of the REFCLK_FREQ\nis also used by the DSIx6 to determine the DSI Clock frequency when DPPLL_CLK_SRC is REFCLK pin.\n2 EN is asserted (HIGH).\n3 Configure number of DSI channels and lanes per channel. The DSIx6 defaults to 1 lane of DSI Channel A. DSI Channel B is\ndisabled by default. When using DSI to configure the DSIx6, software needs to keep in mind the default configuration of the\nDSI channels only allows access to internal CSR through either 1 lane of HSDT or LPDT. Once CFR defaults are changed, all\nfuture CFR accesses should use the new DSI configuration. DSI Channel B can never be used to access internal DSIx6 CSR\nspace. I2C access to internal DSIx6 CSR is always available.\n4 Configure REFCLK or DACP/N Frequency. If GPIO[3:1] is used to set the REFCLK or DACP/N frequency, then this step can\nbe skipped. This step must be completed before any DisplayPort AUX channel communication can occur. SW needs to\nprogram REFCLK_FREQ to match the frequency of the clock provided to REFCLK pin or DACP/N pins. The knowledge of the\nREFCLK_FREQ is also used by the DSIx6 to determine the DSI Clock frequency when DPPLL_CLK_SRC is REFCLK pin.\n5 The SN65DSI86 supports polarity inversion of each of the MLP[3:0] and MLN[3:0] pins. This feature helps prevent any\nDisplayPort Main Link differential pair crossing on the PCB. If the system implementer uses this feature, then the MLx_POLR\nregisters need to be updated to match the system implementation.\n6 The SN65DSI86 supports the ability to assign physical MLP/N[3:0] pins to a specific logical lane in order to help in the routing\non the PCB. By default, physical pins MLP/N0 is logical lane 0, physical pins MLP/N1 is logical lane 1, physical pins MLP/N2\nis logical lane 2, and physical pins MLP/N3 is logical lane 3. If the actual system implementation does not match the DSIx6\ndefault values, then the LNx_ASSIGN fields need to be updated to match the system implementation.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 21\nProduct Folder Links: SN65DSI86\nSTEP\nNUMBERDESCRIPTION\n7 By default, all interrupt sources are disabled (IRQ will not get asserted). SW needs to enable interrupt sources it cares about.\n8 In an eDP application, HPD is not required. If HPD is not used, software needs to disable HPD by writing to the\nHPD_DISABLE register and then go to the next step. If HPD is used, then software must remain in this step until an\nHPD_INSERTION occurs. Once a HPD_INSERTION occurs, software can go to the next step.\n9 Resolution capability of eDP Panel through reading EDID. In a eDP application, the Panel resolution capability may be known\nin advance. If this is the case, then this step can be skipped. Two methods are available for reading the EDID: direct method\nand indirect method.\n1.Using the direct method, SW needs to program I2C_ADDR_CLAIMx registers and enable them. Once this is done, any\nI2C transaction that targets the I2C_ADDR_CLAIMx address will be translated into a I2C-Over-AUX transaction. In order\nto use the direct method, the I2C master must support clock stretching.\n2.Using the indirect method, SW needs to use Native and I2C-Over-Aux registers. When using the indirect method, the\nmaximum read size allowed is 16 bytes. This means reading the EDID must be broken into 16-byte chunks.\n10 eDP Panel DisplayPort Configuration Data (DPCD). In eDP applications, the eDP panel DPCD information maybe known in\nadvance. If this is the case, then this step can be skipped. SW can obtain the DPCD information by using the Native Aux\nRegisters. The eDP panel capability is located at DisplayPort Address 0x00000 through 0x0008F. When reading the DPCD\ncapability, SW needs to be aware that Native Aux transactions, like I2C-Over-Aux, is limited to a read size of 16 bytes. This\nmeans SW must read the DPCD in 16-byte chunks.\n11 Based on resolution and capabilities of eDP sink obtained from EDID and DPCD, GPU should program the appropriate\nnumber of data lanes (DP_NUM_LANES) and data rate (DP_DATARATE) to match source capabilities and sink requirements.\nSSC_ENABLE can also be set if the eDP sink supports SSC.\n12 Enable the DisplayPort PLL by writing a 1 to the DP_PLL_EN register. Before proceeding to next step, software should verify\nthe PLL is locked by reading the DP_PLL_LOCK bit.\n13 The SN65DSI86 only supports ASSR Display Authentication method and this method is enabled by default. An eDP panel\nmust support this Authentication method. Software will need to enable this method in the eDP panel at DisplayPort address\n0x0010A.\n14 Train the DisplayPort Link. Based on the resolution requirements of the application and the capabilities of the eDP panel,\nsoftware needs to choose the optimum lane count and datarate for DisplayPort Main Links. The DSIx6 provides three\nmethods for Link Training: Manual, Fast, and Semi-Auto.\n1.Manual Method is completely under SW control. SW can follow training steps outlined in the DisplayPort Standard or SW\ncan perform a subset of what the DisplayPort standard requires.\n2.Fast Link Train. Prior knowledge of the calibrated settings is required in order to use Fast Link Train. SW needs to\nprogram both the DSIx6 and the eDP panel with the calibrated settings. Once this is done, software can change the\nML_TX_MODE from Main Link Off to Fast Link Training. The DSIx6 will transmit the enabled TPS1 and/or TPS2 pattern\nand then transition the ML_TX_MODE to Normal Mode.\n3.Semi-Auto Link Training. This method is intended if there is a preferred datarate and lane count but the other parameters\nlike TX_SWING and Pre-Emphasis are not known or eDP sink does not support Fast Training. SW can transition the\nML_TX_MODE to Semi-Auto Link Training. If training is successful, the LT_PASS flag will get set and the ML_TX_MODE\nwill be transitioned to Normal Mode. If training is unsuccessful, the LT_FAIL flag will get set and the ML_TX_MODE will\ntransition to Main Link Off. SW then will have to specify a different data rate and/or lane count combination and attempt\nAuto-Link training again. This is repeated until successful link training occurs. Please keep in mind that changes in data\nrate will cause the DP PLL to lose lock. SW should always wait until DP_PLL_LOCK bit is set before attempting another\nSemi-Auto Link training.\n15 Video Registers need to be programmed. Video Registers are used by the DSIx6 to recreate the video timing provided from\nthe DSI interface to the DisplayPort interface.\n16 Configure GPIO control registers if default state if not used. The GPIO default to Inputs.\n18 Video stream can be enabled in the GPU and sent via the DSI interface to the SN65DSI86.\n19 SW can now enable the SN65DSI86 to pass the video stream provided on the DSI interface to the DisplayPort interface by\nwriting a 1 to the VSTREAM_ENABLE register.\n8.4.3 Power Down Sequence\nSTEP\nNUMBERDESCRIPTION\n1 Clear VSTREAM_ENABLE bit.\n2 Stop DSI stream from GPU. DSI lanes must be placed in LP11 state.\n3 Program the ML_TX_MODE to 0x0 (OFF).SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n22 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nSTEP\nNUMBERDESCRIPTION\n4 Program the DP_NUM_LANES register to 0x0.\n5 Clear the DP_PLL_EN bit.\n7 Deassert the EN pin.\n8 Remove power from supply pins (V CC, VCCA, VCCIO, VPLL)\n8.4.4 Display Serial Interface (DSI)\nThe DSI interface can be used for two purposes: (1) Configuring SN65DSI86  CSR, and (2) Streaming RGB\nvideo to an external DisplayPort sink. When used to configure the DSIx6, all communication from the DSIx6 to\nthe GPU (read responses) will use DSI channel A lane 0 in LP signaling mode. The SN65DSI86  supports\ncommunication from GPU to DSIx6 in both HS mode and LP mode.\n8.4.4.1 DSI Lane Merging\nThe SN65DSI86 supports one DSI data lane per input channel by default, and may be configured to support two,\nthree, or four DSI data lanes per channel. The bytes received from the data lanes are merged in HS mode to\nform packets that carry the video stream or target SN65DSI86  CFR space. DSI data lanes are bit and byte\naligned. Figure 8-3  illustrates the lane merging function for each channel; 4-Lane, 3-Lane, and 2-Lane modes\nare illustrated.\n  LANE 0 SOT BYTE 0 BYTE 4 BYTE 8 BYTE n-4 EOT\n  LANE 1 SOT BYTE 1 BYTE 5 BYTE 9 BYTE n-3 EOT\n  LANE 2 SOT BYTE 2 BYTE 6 BYTE 10 BYTE n-2 EOT\n  LANE 3 SOT BYTE 3 BYTE 7 BYTE 11 BYTE n-1 EOTHS BYTES TRANSMITTED (n) IS INTEGER MULTIPLE OF 4\n  LANE 0 SOT BYTE 0 BYTE 4 BYTE 8 BYTE n-3 EOT\n  LANE 1 SOT BYTE 1 BYTE 5 BYTE 9 BYTE n-2 EOT\n  LANE 2 SOT BYTE 2 BYTE 6 BYTE 10 BYTE n-1 EOT\n  LANE 3 SOT BYTE 3 BYTE 7 BYTE 11 EOTHS BYTES TRANSMITTED (n) IS 1 LESS THAN INTEGER MULTIPLE OF 4\n  LANE 0 SOT BYTE 0 BYTE 4 BYTE 8 BYTE n-2 EOT\n  LANE 1 SOT BYTE 1 BYTE 5 BYTE 9 BYTE n-1 EOT\n  LANE 2 SOT BYTE 2 BYTE 6 BYTE 10 EOT\n  LANE 3 SOT BYTE 3 BYTE 7 BYTE 11 EOTHS BYTES TRANSMITTED (n) IS 2 LESS THAN INTEGER MULTIPLE OF 4\n  LANE 0 SOT BYTE 0 BYTE 4 BYTE 8 BYTE n-1 EOT\n  LANE 1 SOT BYTE 1 BYTE 5 BYTE 9 EOT\n  LANE 2 SOT BYTE 2 BYTE 6 BYTE 10 EOT\n  LANE 3 SOT BYTE 3 BYTE 7 BYTE 11 EOTHS BYTES TRANSMITTED (n) IS 3 LESS THAN INTEGER MULTIPLE OF 4  LANE 0 SOT BYTE 0 BYTE 3 BYTE 6 BYTE n-3 EOT\n  LANE 1 SOT BYTE 1 BYTE 4 BYTE 7 BYTE n-2 EOT\n  LANE 2 SOT BYTE 2 BYTE 5 BYTE 8 BYTE n-1 EOTHS BYTES TRANSMITTED (n) IS INTEGER MULTIPLE OF 3\n  LANE 0 SOT BYTE 0 BYTE 3 BYTE 6 BYTE n-2 EOT\n  LANE 1 SOT BYTE 1 BYTE 4 BYTE 7 BYTE n-1 EOT\n  LANE 2 SOT BYTE 2 BYTE 5 BYTE 8 EOTHS BYTES TRANSMITTED (n) IS 1 LESS THAN INTEGER MULTIPLE OF 3\n  LANE 0 SOT BYTE 0 BYTE 3 BYTE 6 BYTE n-1 EOT\n  LANE 1 SOT BYTE 1 BYTE 4 BYTE 7 EOT\n  LANE 2 SOT BYTE 2 BYTE 5 BYTE 8 EOTHS BYTES TRANSMITTED (n) IS 2 LESS THAN INTEGER MULTIPLE OF 3\n  LANE 0 SOT BYTE 0\nBYTE 3EOT\n  LANE 1 SOT BYTE 1BYTE 4 BYTE n-2\nEOTHS BYTES TRANSMITTED (n) IS INTEGER MULTIPLE OF 2\n  LANE 0 SOT BYTE 0\nBYTE 3EOT\n  LANE 1 SOT BYTE 1BYTE 4 BYTE n-1\nEOTHS BYTES TRANSMITTED (n) IS 1 LESS THAN INTEGER MULTIPLE OF 2BYTE 2\nBYTE 5 BYTE n-1\nBYTE 2\nBYTE 54 DSI Data Lane Configuration\n 3 DSI Data Lane Configuration\n2 DSI Data Lane Configuration\nFigure 8-3. SN65DSI86 DSI Lane Merging Illustrationwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 23\nProduct Folder Links: SN65DSI86\n8.4.4.2 DSI Supported Data Types\nTable 8-2  summarizes the DSI data types supported by the SN65DSI86  . Any Data Type received by the DSIx6\nthat is not listed below will be ignored.\nTable 8-2. Supported HS DSI Data Types from GPU\nDATA TYPE DESCRIPTION DSI CHANNEL PURPOSE\n0x01 Vsync Start A and B\nEvents for Video Timing0x11 Vsync End A and B\n0x21 Hsync Start A and B\n0x31 HSync End A and B\n0x08 End of Transmission packet (EoTp) A and B Marks the end of a HS transmission.\n0x09 Null Packet A and B\n0x19 Blanking Packet A and B\n0x24 Generic Read Request 2 parameters A only Read CFR Request\n0x37 Set Maximum Return Packet Size A only Specifics the maximum amount data returned from a Generic\nRead Request supported by GPU.\n0x23 Generic Short Write 2 parameters A only Configure CFR\n0x29 Generic Long Write A only Configure CFR and Secondary Data Packets\n0x1E Pixel Stream 18-bit RGB-666 Packed\nformatA and B\nActive Pixel Data 0x2E Pixel Stream 18-bit RGB-666 Loosely\nPacked FormatA and B\n0x3E Pixel Stream 24-bit RGB-888 format A and B\nTable 8-3. SN65DSI86 LPDT DSI Data Type from GPU\nDATA TYPE DESCRIPTION DSI CHANNEL PURPOSE\n0x24 Generic Read Request 2 parameters CHA Lane 0 Read CFR requests\n0x23 Generic Short Write 2 parameters CHA Lane 0 Configure CFR.\n0x08 EoTp CHA Lane 0 Indicates end of HS transmission.\nTable 8-4. SN65DSI86 DSI Data Type Responses\nDATA TYPE DESCRIPTION DSI CHANNEL PURPOSE\n0x11 Generic Short Read Response 1\nByteCHA Lane 0LPDT Response from Read Request\n0x02 Acknowledge and Error Report CHA Lane 0 LPDT Response following a Generic Read/Write with errors. Or an\nunsolicited BTA.\nN/A Acknowledge Trigger Message CHA Lane 0 Trigger Message used to indicate no errors detected in Generic\nRequest.\n8.4.4.3 Generic Request Datatypes\nThe Generic Request datatypes are used for reading and writing to DSIx6 CFR space as well as for providing\nDisplayPort secondary data packets. The DSIx6 supports these request types in the form of high-speed data\ntransmissions or low power data transmissions (LPDT).\nTo properly sample high-speed data received on the DSI interface, the DSIx6 implements a hardware\nmechanism, known as DSI_CLK_RANGE Estimator, to determine the DSI clock frequency. This hardware\nmechanism uses the REFCLK as a reference for calculating the DSI clock frequency. When the REFCLK_FREQ\nregister correctly matching the REFCLK frequency, the DSI_CLK_RANGE Estimator will be able determine the\nDSIA and DSIB clock frequency. The DSI_CLK_RANGE Estimator requires a throw-away read (that is, read\nfrom address 0x00) before hardware will update CHA_DSI_CLK_RANGE and CHB_DSI_CLK_RANGE\nregisters. Note that this first access may set some DSI error bits. In the cases where the system designer does\nnot wish to use the DSI_CLK_RANGE Estimator, software can write the desired DSI Clock frequency to the\nCHA_DSI_CLK_RANGE and CHB_DSI_CLK_RANGE. Once these registers are written, the DSI_CLK_RANGESN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n24 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nEstimator will be disabled and it becomes system software responsibility to make sure the\nCHA_DSI_CLK_RANGE and CHB_DSI_CLK_RANGE registers always reflect the actual DSI clock frequency.\n8.4.4.3.1 Generic Read Request 2-Parameters Request\nThe Generic Read Request with 2 parameters will be used for reading DSIx6 CFR registers. The current\naddress space requirement for the SN65DSI86 is just 256 bytes. This means the MS Byte of ADDR (bits 15 to 8)\nwill always be zero. The MS Byte of the ADDR is intended for future expansion. The SN65DSI86  response size\ndefaults to one byte as defined by [DSI]. Software can use the Set Maximum Return Packet Size to inform the\nDSI86 that the GPU can support more than one byte, but the DSIx6 will always provide a response of one byte.\nIf a single-bit ECC error was detected and corrected in the request, the DSIx6 will provide the requested data\nalong with an Acknowledge and Error Report packet. If multi-bit ECC errors are detected and not corrected, the\nDSIx6 will only respond with an Acknowledge and Error Report packet.\nFigure 8-2. Generic Read Request 2 Parameters Format\nSOT ID = 0x24 ADDR (LS\nByte)ADDR (MS\nByte)ECC EOT\n8.4.4.3.2 Generic Short Write 2-Parameters Request\nThe Generic Short Write with 2 parameters can be used for writing to SN65DSI86  CFR registers. The first\nparameter is the CFR Address and the second parameter is the data to be written to the address pointed to by\nthe first parameter.\nFigure 8-3. Generic Short Write Request 2 Parameters Format\nSOT ID = 0x23 ADDR (Byte) DATA ECC EOT\nNote\nIf GPU completes transmission with a BTA, the SN65DSI86  will respond with either an Acknowledge,\nif no errors were detected in current or previous packets, or an Acknowledge and Error Report packet,\nif errors were detected in current or previous packets.\n8.4.4.3.3 Generic Long Write Packet Request\nThe Generic Long Write packet is used to write to CFRS within the SN65DSI86  as well as send secondary data\npacket to the eDP panel. The MS Byte of ADDR (bits 15 to 8) must be used to select whether the packet is SDP\nor whether it targets SN65DSI86  CFR registers. If the MS Byte of ADDR is equal to 0x80, then the DSIx6 will\ninterpret the Generic Long Write to be a secondary data packet. If the MS Byte of ADDR is equal to 0x00, then\nthe SN65DSI86 will interpret the Generic Long Write to target CFR space. For all other values of MS Byte of the\nADDR, the DSIx6 will ignore the request and set the appropriate error flag.\nFigure 8-4. Generic Long Write Format\nSOTID =\n0x29WC (LS\nByte)WC (MS\nByte)ECCADDR\n(LS Byte)ADDR\n(MS Byte)DATA0 DATA1DATA\n[WC-3]CHKSUM\n(LS Byte)CHKSUM\n(MS Byte)EOT\nNote\nThe WC field value must include the two ADDR bytes and the amount of data to be written. For\nexample, if the amount of data to be written is 1 byte, then the WC(LS Byte) must be 0x03 and the\nWC(MS Byte) must be 0x00. Also, the maximum WC field value supported by the SN65DSI86  is 258\nbytes or (0x0102). When writing to DSIx6 CFR space, the maximum WC field value supported is three\nbytes. If GPU completes transmission with a BTA, the DSIx6 must respond with either an\nAcknowledge, if no errors were detected in current or previous packets, or an Acknowledge and Error\nReport packet, if errors were detected in current or previous packets.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 25\nProduct Folder Links: SN65DSI86\n8.4.4.4 DSI Pixel Stream Packets\nThe SN65DSI86 processes 18 bpp (RGB666) and 24 bpp (RGB888) DSI packets on each channel as illustrated\nbelow:\nWORD COUNTDATA TYPE (0x2E)\nVIRTUAL CHANNEL1 Byte 2 Bytes\nECC1 Byte\nPacket Header\n6-bits\nRED1 Byte\n0 1 2                  7\nR0             R5\n6-bits\nGREEN1 Byte\n2                  7\nG0             G5\n6-bits\nBLUE1 Byte\n2                  7\nB0             B5\nFirst Pixel in Packet6-bits\nRED1 Byte\n2                  7\nR0             R5\n6-bits\nGREEN1 Byte\n2                  7\nG0             G5\n6-bits\nBLUE1 Byte\n2                  7\nB0             B5\nSecond Pixel in Packet6-bits\nRED1 Byte\n2                  7\nR0             R5\n6-bits\nGREEN1 Byte\n2                  7\nG0             G5\n6-bits\nBLUE1 Byte\n2                  7\nB0             B5\nThird Pixel in Packet\nVariable Size Payload (Three Pixels Per Nine Bytes of Payloa d)CRC CHECKSUM2 Bytes\n18bpp Loosely Packed Pixel Stream\n(Variable Size Payload)\nPacket FooterWORD COUNT Bytes\nPacket Payload\nFigure 8-7. 18 bpp (Loosely Packed) DSI Packet StructureSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n26 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nWORD COUNTDATA TYPE (0x1E)\nVIRTUAL CHANNEL1 Byte 2 Bytes\nECC1 Byte\nPacket Header\n6-bits\nRED1 Byte\n0                  5\nR0             R5\n6-bits\nGREEN1 Byte\n6  7  0          3\nG0             G5\n6-bits\nBLUE1 Byte\n4          7   0 1\nB0             B5\nFirst Pixel in Packet1 Byte 1 Byte 1 Byte 1 Byte 1 Byte 1 Byte\nVariable Size Payload (Four Pixels Per Nine Bytes of Payload )CRC CHECKSUM2 Bytes\n18bpp Packed Pixel Stream\n(Variable Size Payload)\nPacket FooterWORD COUNT Bytes\nPacket Payload\n6-bits\nRED2                  7\nR0             R5\n6-bits\nGREEN0                  5\nG0             G5\n6-bits\nBLUEB0             B5\nSecond Pixel in Packet6  7  0          3\n6-bits\nREDR0             R5\n6-bits\nGREENG0             G5\n6-bits\nBLUEB0             B5\nThird Pixel in Packet4          7   0 1 2                  7 0                  5\n6-bits\nREDR0             R5\n6-bits\nGREENG0             G5\n6-bits\nBLUEB0             B5\nFourth Pixel in Packet2                  7 6  7  0          3 4          7   0 1Figure 8-8. 18 bpp (Tightly Packed) DSI Packet Structurewww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 27\nProduct Folder Links: SN65DSI86\nWORD COUNTDATA TYPE (0x3E)\nVIRTUAL CHANNEL1 Byte 2 Bytes\nECC1 Byte\nPacket Header\n8-bits\nRED1 Byte\n0                         7\nR0                    R7\n8-bits\nGREEN1 Byte\n8-bits\nBLUE1 Byte\nFirst Pixel in Packet1 Byte 1 Byte 1 Byte 1 Byte 1 Byte 1 Byte\nVariable Size Payload (Three Pixels Per Nine Bytes of Payloa d)CRC CHECKSUM2 Bytes\n24bpp Packed Pixel Stream\n(Variable Size Payload)\nPacket FooterWORD COUNT Bytes\nPacket Payload\n0                         7\nG0                    G70                         7\nB0                    B7\n8-bits\nRED0                         7\nR0                    R7\n8-bits\nGREEN8-bits\nBLUE\nSecond Pixel in Packet0                         7\nG0                    G70                         7\nB0                    B7\n8-bits\nRED0                         7\nR0                    R7\n8-bits\nGREEN8-bits\nBLUE\nThird Pixel in Packet0                         7\nG0                    G70                         7\nB0                    B7Figure 8-9. 24bpp DSI Packet Structure\nTable 8-5. Example of 4-Lane DSI Packet Data for 24 bpp RGB\nLane 0 Lane 1 Lane 2 Lane 3\nSOT SOT SOT SOT\n0x3E WC (LS Byte) WC(MS Byte) ECC\nR0-7:0 G0-7:0 B0-7:0 R1-7:0\nG1-7:0 B1-7:0 R2-7:0 G2-7:0\nB2-7:0 R3-7:0 G3-7:0 B3-7:0\nR4-7:0 G4-7:0 B4-7:0 R5-7:0\nG5-7:0 B5-7:0 CRC (LS Byte) CRC (MS Byte)\nEOT EOT EOT EOT\n8.4.4.5 DSI Video Transmission Specifications\nThe SN65DSI86 expects the GPU to provide video timing events and active pixel data in the proper order in the\nform of a real-time pixel stream. According to the DSI specification [DSI], active pixel data is transmitted in one of\ntwo modes: Non-Burst and Burst. The SN65DSI86 supports both non-burst and burst mode packet transmission.\nThe burst mode supports time-compressed pixel stream packets that leave added time per scan line for power\nsavings LP mode. For a robust and low-power implementation, the transition to LP mode is recommended on\nevery video line, although once per frame is considered acceptable.\nAccording to the DSI specification [DSI], timing events can be provided in one of two types: Sync Pulses, and\nSync Events. The vsupports both types. For the Sync Pulse type of timing event, the GPU will send VSYNC\nSTART (VSS), VSYNC END (VSE), HSYNC START (HSS), and HSYNC END (HSE) packets. For Sync Event\ntype, the GPU will only send the sync start packets (VSS and HSS). For both types of timing events, the DSIx6\nwill use the values programmed into the Video Registers to determine the sync end events (VSE and HSE).\nPlease note when configured for dual DSI channels, the SN65DSI86  will use VSS, VSE, and HSS packets fromSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n28 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nchannel A. The DSIx6 will use channel A events to recreate the same timings on the DisplayPort interface. The\nVSS, VSE, and HSS packets from channel B are used to internally align data on channel B to channel A.\nThe first line of a video frame must start with a VSS packet, and all other lines start with VSE or HSS. The\nposition of the synchronization packets in time is of utmost importance because this has a direct impact on the\nvisual performance of the display panel.\nAs required in the DSI specification, the v requires that pixel stream packets contain an integer number of pixels\n(that is, end on a pixel boundary); TI recommends to transmit an entire scan line on one pixel stream packet.\nWhen a scan line is broken in to multiple packets, inter-packet latency must be considered such that the video\npipeline (that is, pixel queue or partial line buffer) does not run empty (that is, under-run); during scan line\nprocessing. If the pixel queue runs empty, the SN65DSI86  transmits zero data (18’b0 or 24’b0) on the\nDisplayPort interface.\nWhen configured for dual DSI channels, the SN65DSI86  supports ODD/EVEN configurations and LEFT/RIGHT\nconfigurations. In the ODD/EVEN configuration, the odd pixels for each scan line are received on channel A, and\nthe even pixels are received on channel B. In LEFT/RIGHT mode, the left portion of the line is received on\nchannel A, and the right portion of the line is received on channel B. The pixels received on channel B in LEFT/\nRIGHT mode are buffered during the left-side transmission to DisplayPort, and begin transmission to DisplayPort\nwhen the left-side input buffer runs empty. The only requirement for LEFT/RIGHT mode is\nCHB_ACTIVE_LINE_LENGTH must be at least 1 pixel.\nsp\nNote\nThe DSIx6 does not support the DSI Virtual Channel capability.\nTable 8-6. Summary of DSI Video Input Requirements\nNUMBER REQUIREMENT\n1 DSI datatypes VSS and HSS are required, but datatypes HSE and VSE are optional.\n2 The exact time interval between each HSS must be maintained.\n3 The time between the HSS and HACT (known as HBP) does not have to be maintained. The DSIx6 will recreate HBP on\nDisplayPort.\n4 The time from the end of HACT to HSS (known as HFP) does not have to be maintained. The DSIx6 will recreate HFP on\nDisplayPort.\n5 The time from VSS to first line of active video must be maintained.\n6 The time from end of last line of active video to the beginning of the first line of active video must be maintained. This time is\ndefined as the Vertical Blanking period.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 29\nProduct Folder Links: SN65DSI86\nVSS t LINE\nNOP/\nLP\nHSSNOP/\nLP t LINE\n ...\nHSSNOP/\nLP t LINE\nVertical sync / blanking\nHSSRGBNOP/\nLPNOP/\nLP t LINE\n ...\nHSSRGBNOP/\nLPNOP/\nLP t LINE\nActive Lines\nHSSNOP/\nLP t LINE\n ...\nHSSNOP/\nLP t LINE\nVertical sync / blankingOne Video Frame\nDSI \nChannel A\nVSS*NOP/\nLP\nHSS*NOP/\nLP ...\nHSS*NOP/\nLP\nHSS*RGBNOP/\nLPNOP/\nLP ...\nHSS*RGBNOP/\nLPNOP/\nLP\nHSS*NOP/\nLP ...\nHSS*NOP/\nLPDSI \nChannel B\n t SK(A_B)light shaded NOP/LP are optional; \nrepresents horizontal back porch \n(max value is 256 HS Clocks)dark shaded NOP/LP represents horizontal front porch; a transition  to \nLP mode is recommended here (if HS_CLK is free-running to source \nthe LVDS clock, then only data lanes shall transition to LP mo de* VSS and HSS packets are required for DSI Channel B, although L VDS video sync signals are derived from DSI Channel A VSS and HSS packets\n t SK(A_B) < 3 Pixels (72 HS clocks for 18BPP and 24BPP formats)\nLEGEND\nVSS    DSI Sync Event Packet: V Sync Start\nHSS    DSI Sync Event Packet: H Sync Start\nRGB    A sequence of DSI Pixel Stream Packets\n    and Null Packets\nNOP/LP        DSI Null Packet, Blanking Packet, or a\n    transition to LP ModeFigure 8-10. DSI Channel Transmission and Transfer FunctionSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n30 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n8.4.4.6 Video Format Parameters\nIt is the responsibility of the GPU software to program the DSIx6 Video Registers  with the Video format that is\nexpected to be displayed on the eDP panel. The DSIx6 expects the parameters in Table 8-7  to be programmed.\nThe DSIx6 will use these parameters to determine the DisplayPort MSA parameters that are transmitted over\nDisplayPort every vertical blanking period. These MSA parameters are used by the eDP panel to recreate the\nvideo format provided on the DSI interface.\nActive VideoHACT HFP HBP\nVBP\nVFPVACTHPW\nVPW\nFigure 8-11. Video Format\nTable 8-7. Video Format Parameters\nPARAMETER DESCRIPTION DSIx6 REGISTER\nHPOL Used to specify if the HPW is high or low. CHA_HSYNC_POLARITY\nHPW The width of the Horizontal Sync Pulse in pixels {CHA_HSYNC_PULSE_WIDTH_HIGH,\nCHA_HSYNC_PULSE_WIDTH_LOW}\nHBP The size of the Horizontal Back Porch in pixels CHA_HORIZONTAL_BACK_PORCH\nHACT The length, in pixels, of the active horizontal line. {CHA_ACTIVE_LINE_LENGTH_HIGH,\nCHA_ACTIVE_LINE_LENGTH_LOW} +\n{CHB_ACTIVE_LINE_LENGTH_HIGH, CHB_ACTIVE\nLINE_LENGTH_LOW}\nHFP The size of the Horizontal Front Porch in pixels. CHA_HORIZONTAL_FRONT_PORCH\nHTOTAL Total length, in pixels, of a horizontal line. HPW + HBP + HACT + HFP\nVPOL Used to specify if the VPW is high or low CHA_VSYNC_POLARITY\nVPW The width of the Vertical Sync Pulse in lines. The width must\nbe at least 1 line.{CHA_VSYNC_PULSE_WIDTH_HIGH,\nCHA_VSYNC_PULSE_WIDTH_LOW}\nVBP The size of the Vertical Back Porch in lines. The size must\nbe at least 1 line.CHA_VERTICAL_BACK_PORCH\nVACT The number of vertical active lines. {CHA_VERTICAL_DISPLAY_SIZE_HIGH,\nCHA_VERTICAL_DISPLAY_SIZE_LOW}\nVFP The size of the Vertical Front Porch in lines. The size must\nbe at least 1 line.CHA_VERTICAL_FRONT_PORCH\nVTOTAL The total number of vertical lines in a frame. VPW + VBP + VACT + VFPwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 31\nProduct Folder Links: SN65DSI86\n8.4.4.7 GPU LP-TX Clock Requirements\nThe GPU is responsible for controlling its own LP clock frequency to match the DSIx6. The GPU LP TX clock\nfrequency must be in the range of 67% to 150% of the DSIx6 LP TX clock frequency. The DSIx6 LP TX clock\nfrequency is detailed in Table 8-8 .\nTable 8-8. DSIx6 LP TX Clock Frequency\nREFCLK_FREQ LP TX Clock Frequency\n0x0 12 MHz\n0x1 19.2 MHz\n0x2 13 MHz\n0x3 13.5 MHz\n0x4 19.2 MHz\n8.4.5 DisplayPort\nThe SN65DSI86 supports Single-Stream Transport (SST) mode over 1, 2, or 4 lanes at a datarate of 1.62 Gbps,\n2.16 Gbps, 2.43 Gbps, 2.7 Gbps, 3.24 Gbps, 4.32 Gbps, or 5.4 Gbps. The SN65DSI86  does not support Multi-\nStream Transport (MST) mode.\n8.4.5.1 HPD (Hot Plug/Unplug Detection)\nThe HPD signal is used by a DisplayPort source (DSIx6) for detecting when a downstream port (DisplayPort\nPanel) is attached or removed as well as for link status information. The [EDP] specification states that the HPD\nsignal is required for an eDP Panel but is optional for a eDP source (DSIx6). The DSIx6 supports the HPD\nsignal. It is up to the system implementer to determine if HPD signal is needed for the DSIx6. If not used, the\nsystem implementer should pull-up HPD to 3.3 V or set the HPD_DISABLE bit. If HPD_DISABLE is set, then all\nHPD events (IRQ_HPD, HPD_REMOVAL, HPD_INSERTION, HPD_REPLUG) are disabled.\nWhen IRQ_EN and IRQ_HPD_EN is enabled, the DSIx6 will assert the IRQ whenever the eDP generates a\nIRQ_HPD event. An IRQ_HPD event is defined as a change from INSERTION state to the IRQ_HPD state.\nThe DSIx6 will also interpret a DisplayPort device removal or insertion as an HPD_REMOVAL or\nHPD_INSERTION event. A HPD_REMOVAL event is defined as a change that causes the HPD state to\ntransition from INSERTION state to the REMOVAL state. A HPD_INSERT event is defined as a change that\ncauses the HPD state to transition from the REMOVAL state to the INSERTION state. The REPLUG event is\ncaused by the sink deasserting HPD for more than 2 ms but less than 100 ms. If software needs to determine\nthe state of the HPD pin, it should read the HPD Input register. The HPD state machine operates off an internal\nring oscillator. The ring oscillator frequency will vary based on PVT (process voltage temperature). The min/max\nrange in the HPD State Diagram refers to the possible times based off variation in the ring oscillator frequency.\nNote\nHPD has a minimum of 60-kΩ ±15% internal pulldown resistor.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n32 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nREMOVAL\nINSERTION\nIRQ_HPDHPD = 1 for >= (min 100ms / max 400ms)\nOR\nHPD_DISABLE = 1HPD = 0 for >= (min 100ms / max 400ms)\nAND\nHPD_DISABLE = 0\nHPD = 1HPD = 0 for >= (min 125us / max 500us\nAND\nHPD = 0 for <= (min 1ms/ max 4ms)RESETEN = 1\nREPLUG\nHPD = 0 for  > (min 1ms/ max 4ms)\nAND\nHPD = 0 for < (min 100ms / max 400ms)HPD = 1EN = 0Figure 8-12. HPD State Diagram\n8.4.5.2 AUX_CH\nThe AUX_CH supported by the SN65DSI86  is a half-duplex, bidirectional, ac-coupled, doubly-terminated\ndifferential pair. Manchester-II coding is used as the channel coding for the AUX_CH and supports a datarate of\n1 Mbps. Fast AUX (also known as FAUX) is not supported by the DSIx6. Over the AUX_CH, the DSIx6 will\nalways transmit the most significant bit (MSB) first and the least significant bit (LSB) last. Bit 7 is the MSB and Bit\n0 is the LSB.\nThe AUX_CH provides a side-band channel between the SN65DSI86 and the downstream eDP device. Through\nthe AUX_CH, the following is some of the information which can be obtained from or provided to the downstream\neDP device:\n1. eDP Downstream DPCD capabilities (number of lanes, datarate, display authenticate method, and so on)\n2. EDID information of display like native resolution (obtained by I2C over AUX transactions)\n3. Link training and status\n4. MCCS controlwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 33\nProduct Folder Links: SN65DSI86\n8.4.5.2.1 Native Aux Transactions\nNative Aux transaction is broken into two pieces: Request and Reply. The DSIx6 will always be the originator of\nthe Request (sometimes under GPU control and other times under DSIx6 HW control) and the recipient of the\nReply from the downstream device.\nRequest Syntax: <4-bit AUX_CMD> <20-bit AUX_ADDR> <7-bit AUX_LENGTH> <DATA0 … DATA15>\nReply Syntax: <4-bit AUX_CMD> <4’b0000> <DATA0 … DATA15>\nTable 8-9. Definition of the AUX_CMD Field for Request Transactions\nAUX_CMD[3:0] DESCRIPTION\n0x0 I2C-Over-Aux Write MOT = 0.\n0x1 I2C-Over-Aux Read MOT = 0\n0x2 I2C-Over-Aux Write Status Update MOT = 0.\n0x3 Reserved. DSIx6 will ignore.\n0x4 I2C-Over-Aux Write MOT = 1\n0x5 I2C-Over-Aux Read MOT = 1\n0x6 I2C-Over-Aux Write Status Update MOT=1.\n0x7 Reserved. SN65DSI86 will ignore.\n0x8 Native Aux Write\n0x9 Native Aux Read\n0xA through 0xF Reserved. SN65DSI86 will ignore.\nFor Native Aux Reply transactions, the DSIx6 will update the status field in the CFR with command provided by\nthe eDP device. For example, if the eDP receiver replies with a AUX_DEFER, the DSIx6 will attempt the request\nseven times (100 µs between each attempt) before updating the AUX_DEFR status field with 1’b1. If the eDP\nreceiver does NOT reply before the 400-µs reply timer times out, then the SN65DSI86  will wait 100 µs before\ntrying the request again. The SN65DSI86  will retry the request 7 times before giving up and then update the\nAUX_RPLY_TOUT field with 1’b1.\nExample: Native Aux read of the eDP receiver capability field at DCPD address 0x00000h through 0x00008\n1. Software programs the AUX_CMD field with 0x9.\n2. Software programs the AUX_ADDR[19:16] field with 0x0.\n3. Software programs the AUX_ADDR[15:8] field with 0x0.\n4. Software programs the AUX_ADDR[7:0] field with 0x0.\n5. Software programs the AUX_LENGTH field with 0x8.\n6. Software sets the SEND bit.\n7. DSIx6 will transmit the following packet: <SYNC> <0x90> <0x00> <0x00> <0x07> <STOP>\n8. Within 300 µs, the eDP receiver will reply with the following: <SYNC> <0x00> <DATA0> <DATA1> <DATA2>\n<DATA3> <DATA4> <DATA5> <DATA6> <DATA7> <STOP>\n9. DSIx6 will update AUX_RDATA0 through AUX_RDATA7 with the data received from the eDP receiver.\n10.DSIx6 will update the AUX_LENGTH field with 0x8 indicating eight bytes we received.\n11.DSIx6 will then clear the SEND bit.\n12.If enabled, the IRQ will be asserted to indicate to GPU that the Native Aux Read completed.\n13.GPU should read from the Interrupt Status register to see if the Native Aux Read completed successfully.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n34 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n8.4.5.3 I2C-Over-AUX\nThere are two methods available for I2C-Over-Aux: Direct Method (also known as Clock stretching) and Indirect\nMethod (CFR Read/Write).\n8.4.5.3.1 Direct Method (Clock Stretching)\nThe Direct Method (Clock Stretching) involves delaying the acknowledge or data to the I2C Master by the\nSN65DSI86  driving the SCL pin low. Once the SN65DSI86  is ready to acknowledge an I2C write transaction or\nreturn read data for a I2C read transaction, the SN65DSI86  will tri-state the SCL pin therefore allowing the\nacknowledge cycle to complete.\nIn order to enable the Direct Method (Clock Stretching) software must do the following:\n1. Program the 7-bit I2C slave address(s) into the I2C_ADDR_CLAIMx register(s).\n2. Enable Direct Method by setting the I2C_CLAIMx_EN bit(s)\n8.4.5.3.2 Indirect Method (CFR Read/Write)\nThe Indirect Method is intended to be used by a GPU which does NOT support the Direct Method (Clock\nStretching). The Indirect Method involves programming the appropriate CFR registers. The Indirect Method is\nvery similar to the Native Aux method described above.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 35\nProduct Folder Links: SN65DSI86\nExample of Indirect I2C Read of the EDID.\n1. Program the AUX_CMD = 0x4, AUX_ADDR[7:0] = 0x50, and AUX_LENGTH = 0x00.\n2. Set the SEND bit.\n3. The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n4. If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 5.\n5. Program the AUX_CMD = 0x4, AUX_ADD[7:0] = 0x50, AUX_LENGTH = 0x01, and AUX_WDATA0 = 0x00.\n6. Set the SEND bit.\n7. The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n8. If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 9.\n9. Program the AUX_CMD = 0x5, AUX_ADDR[7:0] = 0x50, and AUX_LENGTH = 0x00.\n10.Set the SEND bit.\n11.The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n12.If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 13.\n13.Program the AUX_CMD = 0x5, AUX_ADDR[7:0] = 0x50, and AUX_LENGTH = 0x10.\n14.Set the SEND bit.\n15.The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n16.If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag, read data from\nAUX_RDATA0 through AUX_DATA15, and go to step 13.\n17.If read of EDID is complete, the go to step 18. If read of EDID is not complete, then go to Step 13.\n18.Program the AUX_CMD = 0x1, AUX_ADDR[7:0] = 0x50, and AUX_LENGTH = 0x00.\n19.Set the SEND bit.\n20.The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n21.If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 22.\n22.Read of EDID finished.\nExample of an indirect I2C Write (Changing EDID Segment Pointer):\n1. Program the AUX_CMD = 0x4, AUX_ADDR[7:0] = 0x30, and AUX_LENGTH = 0x00.\n2. Set the SEND bit.\n3. The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n4. If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 5.\n5. Program the AUX_CMD = 0x4, AUX_ADDR[7:0] = 0x30, AUX_LENGTH = 0x01, and AUX_WDATA0 = 0x01.\n6. Set the SEND bit.\n7. The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n8. If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 9.\n9. Program the AUX_CMD = 0x0, AUX_ADDR[7:0] = 0x30, and AUX_LENGTH = 0x00.\n10.Set the SEND bit.\n11.The SN65DSI86 will clear the SEND bit once the Request has been ACKed.\n12.If SEND_INT_EN is enabled and IRQ_EN is enabled, an IRQ will be asserted. GPU should make sure no\nerror flags are set. If no error flags are set, GPU should clear the SEND_INT flag and go to step 13.\n13.Finished.\nThe SN65DSI86  will handle all aspects of completing a request I2C-Over-Aux Read or Write. Once the\nrequested Read or Write completes, the SN65DSI86  will clear the SEND bit and if an error occurred, the\nSN65DSI86  will set the NAT_I2C_FAILED flag. The NAT_I2C_FAILED flag will get set if for some reason theSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n36 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nslave NACK the I2C Address. If the Slave NACK without completing the entire request AUX_LENGTH, the\nSN65DSI86  will set the AUX_SHORT flag and update the AUX_LENGTH register with the amount of data\ncompleted and then clear the SEND bit. Upon clearing the SEND bit and if IRQ assertion is enabled, the\nSN65DSI86 will assert IRQ.\n8.4.5.4 DisplayPort PLL\nBy default, the DisplayPort PLL is disabled (DP_PLL_EN = 0). To perform any operations over the DisplayPort\nMain link interface, the DP_PLL_EN must be enabled. Before enabling the DisplayPort PLL, software must\nprogram the DP_DATARATE register with the desired datarate. Also if SSC is going to be used, the\nSSC_ENABLE and SSC_SPREAD should also be programmed. Once the DP_PLL_EN is programmed to 1,\nsoftware should wait until the DP_PLL_LOCK bit is set before performing any DisplayPort Main Link operations.\nDepending on SN65DSI86  configuration, the amount of time for the DP PLL to lock will vary. Table 8-10\ndescribes the lock times for various configurations.\nTable 8-10. DP_PLL Lock Times\nREFCLK_FREQ SSC_ENABLE MAXIMUM LOCK TIME\n0 X\n20 µs + (1152 × T REFCLK )1 X\n2 X\n4 X\n3 1\n3 0 20 µs + (128 × T REFCLK )\n8.4.5.5 DP Output VOD and Pre-emphasis Settings\nThe SN65DSI86  has user configurable VOD, pre-emphasis, and post-cursor2 levels. The post cursor 2 level is\ndefined by the DP_POST_CURSOR2 level. The VOD and pre-emphasis levels are defined by the DP Link\nTraining Lookup Table . The defaults settings from this lookup table are described in Table 8-11 .\nTable 8-11. Pre-Emphasis Default Settings\nPRE-EMPHASIS\nVOD LEVEL LEVEL 0 LEVEL 1 LEVEl 2 LEVEL 3\nLevel 0 (400 mV) Enabled (0 dB) Enabled (3.74 dB) Enabled (6.02 dB) Disabled\nLevel 1 (600 mV) Enabled (0 dB) Enabled (3.10 dB) Enabled (5.19 dB) Disabled\nLevel 2 (800 mV) Enabled (0 dB) Enabled (2.50 dB) Disabled Disabled\nLevel 3 Disabled Disabled Disabled Disabled\nAll of these default values can be changed by modifying the values in the DP Link Training Lookup Table\n8.4.5.6 DP Main Link Configurability\nThe SN65DSI86  has four physical DisplayPort lanes and each physical lane can be assigned to one specific\nlogical lane. By default, physical lanes 0 through 3 are mapped to logical lanes 0 through 3. When routing\nbetween the SN65DSI86  and a non-standard eDP receptacle, the physical to logical lane mapping can be\nchanged so that PCB routing complexity is minimized. Table 8-12  depicts the supported logical to physical\ncombinations based on the number of lanes programmed into the DP_NUM_LANES registers.\nTable 8-12. Logical to Physical Supported Combinations\nDP_NUM_LANES LN0_ASSIGN LN1_ASSIGN LN2_ASSIGN LN3_ASSIGN\n1 0 or 1. 0 is recommended.\n2 0 or 1 0 or 1\n4 0, 1, 2, or 3 0, 1, 2, or 3 0, 1, 2, or 3 0, 1, 2, or 3www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 37\nProduct Folder Links: SN65DSI86\nNote\nThe SN65DSI86  DisplayPort logic uses clocks from physical lane 0, and therefore these clocks from\nphysical lane 0 will be active whenever the DP PLL is enabled. When using less than four DP lanes,\nthe optimal power consumption is achieved by always using physical lane 0.\n8.4.5.7 DP Main Link Training\nThe SN65DSI86 supports four methods to train the DisplayPort link:\n1. Manual Training\n2. Fast Training\n3. Semi-Auto Training\n4. Redriver Semi-Auto Training\nNote\nIt is software responsibility to enable the Display Authentication Method in the eDP Display before any\nlink training can be performed. The SN65DSI86  is enabled for ASSR authentication method by\ndefault. The SN65DSI86  supports Enhanced Framing. If the eDP panel supports DPCD Revision 1.2\nor higher, software must enable the Enhanced Framing Mode.\n8.4.5.7.1 Manual Link Training\nThis method is completely under software control. Software is required to handle the entire link training process.\n8.4.5.7.2 Fast Link Training\nIn order the use the Fast Training method, there must be prior knowledge of the eDP receiver capabilities.\nSoftware must program both the SN65DSI86  and the eDP receiver with pre-calibrated parameters\n(DP_TX_SWING, DP_PRE_EMPHASIS, DP_NUM_LANES, and DP_DATARATE). Upon completing the\nprogramming of the pre-calibrated settings, software must transition the ML_TX_MODE to Fast Link Training. If\nTPS1 during Fast Link Training is enabled, SN65DSI86  will then transmit the clock recovery pattern (TPS1) for\nat least 500 µs and then transition ML_TX_MODE to normal. If TPS2 during Fast Link training is enabled, then\nafter the TPS1, the SN65DSI86  will transmit TPS2 for 500 µs before transitioning ML_TX_MODE to normal. If\nneither TPS1 nor TPS2 during Fast Link Training is enabled, then the SN65DSI86  will transition straight to\nnormal mode.\n8.4.5.7.3\nNote\nGPU should determine if the eDP Display supports Fast Link training by reading the\nNO_AUX_HANDSHAKE_LINK_TRAINING bit at DCPD address 0x00003 bit 6. If this bit is set, then\nthe eDP Display supports Fast Link Training.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n38 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nOFF\nTPS1\nONLY\nTPS2\nONLYML_TX_MODE = FAST TRAINTPS1_FAST_TRAIN = 1\nTPS2_FAST_TRAIN = 0\nTPS3_FAST_TRAIN = 0\nTPS1\nTPS2TPS1_FAST_TRAIN = 0\nTPS2_FAST_TRAIN = 1\nTPS3_FAST_TRAIN = 0TPS1_FAST_TRAIN = 1\nTPS2_FAST_TRAIN = 1\nTPS3_FAST_TRAIN = 0\nTX TPS2 FOR\n 500usTX TPS1 FOR 500us\nTHEN TPS2 FOR\n500usTPS1_FAST_TRAIN = 0\nTPS2_FAST_TRAIN = 0\nTPS3_FAST_TRAIN = 0\nTX TPS1\nFOR 500usML_TX_MODE = OFF\nFAST\nTRAIN\nNORMALML_TX_MODE = FAST TRAIN and\n(TPS1_FAST_TRAIN = 1 or \nTPS2_FAST_TRAIN = 1 or\nTPS3_FAST_TRAIN = 1)\nTPS3\nONLYTPS1\nTPS3TPS1_FAST_TRAIN = 0\nTPS2_FAST_TRAIN = X\nTPS3_FAST_TRAIN = 1\nTX TPS3 FOR\n500usTPS1_FAST_TRAIN = 1\nTPS2_FAST_TRAIN = X\nTPS3_FAST_TRAIN = 1\nTX TPS1 FOR 500us\nTHEN TPS3 FOR\n500usFigure 8-13. Fast-Link Training State Diagram\n8.4.5.7.4 Semi-Auto Link Training\nIn order to use the semi-auto link training mode, software must first program the target DP_NUM_LANES and\nDP_DATARATE. Once these fields have been programmed, software can then transition the ML_TX_MODE to\nSemi-Auto Link Training. The SN65DSI86  will then attempt to train the DisplayPort link at the specified datarate\nand number of lanes. The SN65DSI86  will try all possible combinations of DP_PRE_EMPHASIS and\nDP_TX_SWING. Training will end as soon as a passing combination is found or all combinations have been tried\nand failed. The possible combinations are determined by the setting in the DP Link Training LUT registers . If\ntraining is successful, the SN65DSI86  will update the DP_POST_CURSOR2, DP_PRE_EMPHASIS, and\nDP_TX_SWING with the passing combination and then transition the ML_TX_MODE to normal. If training is\nunsuccessful, the SN65DSI86  will transition the ML_TX_MODE to Main Link Off. If enabled, the DSI will assert\nthe IRQ pin whether or not training was successful. Software will then need to specify a different targetwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 39\nProduct Folder Links: SN65DSI86\nDP_NUM_LANES and DP_DATARATE and then transition the ML_TX_MODE to Semi-Auto Link Training. This\nprocess is repeated until successful link training occurs.\nNote\nAfter software has enabled Semi-Auto Linking training, software must wait for the training to complete\nbefore performing any AUX transactions (Native Aux or I2C-Over-Aux).\n8.4.5.7.5 Redriver Semi-Auto Link Training\nIn some systems a DisplayPort redriver (like the DP130) would sit between the SN65DSI86  and the eDP panel.\nIn these applications, it is important to train the DisplayPort link between the SN65DSI86 and the redriver to one\nsetting and training the link between the redriver and the eDP panel to a different setting. For this application,\nRedriver Semi-Auto Link training can be used.\nRedriver Semi-Auto Link training is essentially the same as Semi-Auto Link training with one major difference.\nThat difference is Redriver Semi-Auto Link Training will never change the DP_TX_SWING,\nDP_PRE_EMPHASIS, and DP_POST_CURSOR2 levels being driven by the SN65DSI86 . These settings will\nalways stay fixed to their programmed values. The SN65DSI86  will still send all aux requests to the eDP panel\nDPCD registers. The redriver will snoop these aux transactions and train the link between it and the eDP panel.\n8.4.5.8 Panel Size vs DP Configuration\nTable 8-13  is provided as a guideline of the best DP configuration (datarate and number of lanes) for a specific\nvideo resolution and color depth. The preferred (P) setting assumes the eDP panel supports the 5.4 Gbps\ndatarate.\nTable 8-13. Recommended DP Configuration\nCOMMON\nVIDEO\nMODE\nNAMEVESA® TIMING NAME\n(HORIZONTAL ×\nVERTICAL AT FRAME\nRATE)PIXEL\nCLOCK\nRATE\n(MHz)RGB666 RGB888\nSTREAM\nBIT RATE\n(Gbps)REQUIRED NUMBER OF DP\nLANES ATSTREAM\nBIT RATE\n(Gbps)REQUIRED NUMBER OF DP\nLANES AT\n1.62 Gbps 2.7 Gbps 5.4 Gbps 1.62 Gbps 2.7 Gbps 5.4 Gbps\nXGA1024 × 768 at 60 Hz\nCVT (reduced blanking)56 1.01 1 (P) 1 1 1.34 2 1 (P) 1\nWXGA1280 × 768 at 60 Hz\nCVT (reduced blanking)68 1.23 1 (P) 1 1 1.64 2 1 (P) 1\nWXGA1280 × 800 at 60 Hz\nCVT (reduced blanking)71 1.28 1 (P) 1 1 1.7 2 1 (P) 1\nHD 1366 × 768 at 60 Hz 86 1.54 2 1 (P) 1 2.05 2 1 (P) 1\nWXGA+1440 × 900 at 60 Hz\nCVT (reduced blanking)89 1.6 2 1 (P) 1 2.13 2 1 (P) 1\nSXGA+1400 × 1050 at 60 Hz\nCVT (reduced blanking)101 1.82 2 1 (P) 1 2.42 2 2 1 (P)\nHD+1600 × 900 at 60 Hz\n(reduced blanking)108 1.94 2 1 (P) 1 2.59 4 2 1 (P)\nWSXGA+1680 × 1050 at 60 Hz\nCVT (reduced blanking)119 2.12 2 1 (P) 1 2.86 4 2 1 (P)\nUXGA1600 × 1200 at 60 Hz\nCVT (reduced blanking)130 2.34 2 2 1 (P) 3.13 4 2 1 (P)\nFHD 1920 × 1080 at 60 Hz 149 2.67 4 2 1 (P) 3.56 4 2 1 (P)\nWUXGA1920 × 1200 at 60 Hz\nCVT (reduced blanking)154 2.77 4 2 1 (P) 3.7 4 2 1 (P)\nWQXGA2560 × 1600 at 60 Hz\nCVT (reduced blanking)269 4.83 4 4 2 (P) 6.44 NA 4 2 (P)\n8.4.5.9 Panel Self Refresh (PSR)\nThe panel self refresh (PSR) feature enables system-level power savings when the displayed image remains\nstatic for multiple display frames. The eDP display (sink) stores a static image locally in a remote frame buffer\n(RFB) within the sink and displays this image from the RFB while the eDP Main link may be turned off\n(SUSPEND asserted). The SN65DSI86  may turn off other features in addition to the main link for further powerSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n40 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nsavings. The system software makes the determination on what power savings must be implemented (like\nshutdown of DP link (SUSPEND asserted), shutdown of entire SN65DSI86  (EN deasserted), and so on). When\nimplementing PSR, any power savings must not impact system responsiveness to user input that affects the\ndisplay, such as cursor movement.\nIn the list below are the requirements the GPU and system designer must meet when implementing PSR:\n1. Updates to the remote frame buffer located in sink must include two of the same static frame. The reason for\nthis requirement is the SN65DSI86 will never pass the first frame received on the DSI interface to the\nDisplayPort interface. All subsequent frames will be passed to the DisplayPort interface.\n2. If PWM signal is controlled directly by the SN65DSI86 and SUSPEND asserted, the REFCLK must remain\nactive.\n8.4.5.10 Secondary Data Packet (SDP)\nAll secondary data packets (SDP) are provided to the SN65DSI86  through the DSI interface during vertical\nblanking periods. (SDP are not supported using the I2C interface.) The SN65DSI86  will wrap the SDP provided\nto the DSI interface with the SS and SE control symbols and then transmit over the DP interface during the\nvertical blanking period. Secondary data packets are used to pass non-active video data to the eDP sink.\nInformation like stereo video attributes and/or PSR-state data is sent using SDP. When SDP is used for stereo\nvideo attributes, software must program the MSA_MISC1_2_1 register with a zero.\nThe SN65DSI86 requires that the SDP be provided to the DSI interface in the following order:\n1. 4 Bytes of Header (HB0 through HB3)\n2. 4 Bytes of Header parity (PB0 through PB3)\n3. 8 Bytes of Data (DB0 through DB7)\n4. 2 Bytes of Data parity (PB4 and PB5)\n5. 8 Bytes of Data (DB8 through DB15)\n6. 2 Bytes of Data parity (PB6 and PB7)\nFor data payloads greater than 16 bytes, data must be provided in multiples of 8 bytes with of 2 bytes of parity. If\nthe final multiple is less than 8, zero padding must be used to fill the remaining data positions.\n8.4.5.11 Color Bar Generator\nThe SN65DSI86  implements a SMPTE color bar. The color bar generator does not require the DSI interface. All\ncolor bars will be transmitted at a 60-Hz frame rate. The active video size of the Color bar is determined by the\nvalues programmed into the Video Registers.\nThe color bar generator supports the following color bars for both horizontal and vertical direction:\n1. 8 color {White, Yellow, Cyan, Green, Magenta, Red, Blue, Black}\n2. 8 gray scale {White, Light Gray, Gray, Light Slate Gray, Slate Gray, Dim Gray, Dark Slate Gray, Black}\n3. 3 color {Red, Green, Blue}\n4. Stripes {White, Black}. Every other pixel (pixel1 = white, pixel2 = black, pixel3 = white, and so on).www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 41\nProduct Folder Links: SN65DSI86\nTable 8-14. 24-bit RGB Color Codes\nCOLOR RED GREEN BLUE\nBlack 0x00 0x00 0x00\nRed 0xFF 0x00 0x00\nGreen 0x00 0xFF 0x00\nBlue 0x00 0x00 0xFF\nYellow 0xFF 0xFF 0x00\nWhite 0xFF 0xFF 0xFF\nMagenta 0xFF 0x00 0xFF\nCyan 0x00 0xFF 0xFF\nGray 0xBE 0xBE 0xBE\nLight Gray 0xD3 0xD3 0xD3\nLight Slate Gray 0x77 0x88 0x99\nSlate Gray 0x70 0x80 0x90\nDim Gray 0x69 0x69 0x69\nDark Slate Gray 0x2F 0x4F 0x4F\n \nNote\nBoth VSTREAM_ENABLE and Color_Bar_En must be set in order to transmit Color Bar over\nDisplayPort interface. Also, ML_TX_MODE must be programmed to Normal Mode.\n8.4.5.12 DP Pattern\nSN65DSI86 supports the training and compliance patterns mentioned in Table 8-15 . The value of ML_TX_MODE\nregister controls what pattern will be transmitted.\nTable 8-15. DP Training and Compliance Patterns\nPATTERN [DP] SECTION\nIDLE 5.1.3.1\nTPS1 Table 3-16 and 2.9.3.6.1\nTPS2 Table 3-16\nTPS3 Table 3-16\nPRBS7 Table 2-75 address 0x00102.\nHBR2 Compliance Eye(1)2.9.3.6.5\nSymbol Error Rate\nMeasurement(1)2.9.3.6.2 and 2.10.4\n80 bit Customer Pattern 2.9.3.6.4\n(1) HBR2 Compliance Eye and Symbol Error Rate Measurement\nrequire TEST2 pin to be pulled up before the assertion of EN\nand software program a 1 to bit 0 of offset 0x16 at Page 7\nfollowed by a write of 0 to bit 0 of offset 0x5A at Page 0 before\nwriting either a 0x6 or 0x7 to ML_TX_MODE register.\n8.4.5.12.1 HBR2 Compliance Eye\nWhen the ML_TX_MODE is set to HBR2 Compliance Eye, the SN65DSI86  will use the value programmed into\nthe HBR2_COMPEYEPAT_LENGTH register to determine the number of scrambled 0 before transmitting an\nEnhanced Frame Scrambler Reset sequence. The Enhanced Framing Scrambler Reset sequence used is\ndetermined by ENCH_FRAME_PATT register.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n42 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-16. Common 80-bit Custom Patterns\nByte# PLTPAT PCTPAT\n0 0x1F 0x1F\n1 0x7C 0x7C\n2 0xF0 0xF0\n3 0xC1 0xC1\n4 0x07 0xCC\n5 0x1F 0xCC\n6 0x7C 0xCC\n7 0xF0 0x4C\n8 0xC1 0x55\n9 0x07 0x55\n8.4.5.12.2 80-Bit Custom Pattern\nThe 80-bit Custom pattern is used for generating the Post Cursor2 Test Pattern (PCTPAT) and the Pre-Emphasis\nLevel Test Pattern (PLTPAT). The SN65DSI86  will continuously transmit the value programmed into the\n80BIT_CUSTOM_PATTERN  registers when the ML_TX_MODE is programmed to 80-bit Custom Pattern. The\nSN65DSI86 will always transmit over the enabled DisplayPort Lanes the LSB of the byte first and the MSB of the\nbyte last. The byte at the lowest address is transmitted first.\n8.4.5.13 BPP Conversion\nThe SN65DSI86  transmits either 18bpp or 24bpp over the DisplayPort interface based on the DP_18BPP_EN\nbit. When this bit is cleared and 18 bpp is being received on DSI interface, the SN65DSI86  performs the\nfollowing translation of the 18 bpp into 24 bpp: new[7:0] = {original[5:0], original[5:4]}. When the DP_18BPP_EN\nbit is set and 24 bpp is being received on DSI interface, the SN65DSI86  performs the following translation of 24\nbpp to 18 bpp: new[5:0] = original[7:2].\n8.5 Programming\n8.5.1 Local I2C Interface Overview\nThe SN65DSI86  local I2C interface is enabled when EN is input high, access to the CSR registers is supported\nduring ultra-low power state (ULPS). The SCL and SDA terminals are used for I2C clock and I2C data,\nrespectively. The SN65DSI86  I2C interface conforms to the two-wire serial interface defined by the I2C Bus\nSpecification, Version 2.1 (January 2000), and supports fast mode transfers up to 400 kbps.\nThe device address byte is the first byte received following the START condition from the master device. The 7-\nbit device address for SN65DSI86  is factory preset to 010110X with the least significant bit being determined by\nthe ADDR control input. Table 8-17  clarifies the SN65DSI86 target address.\nTable 8-17. SN65DSI86 I2C Target Address Description\nSN65DSI86 I2C TARGET ADDRESS\nBit 7 (MSB) Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 (W/R)\n0 1 0 1 1 0 ADDR 0/1\nWhen ADDR = 1, Address Cycle is 0x5A (Write) and 0x5B (Read)\nWhen ADDR = 0, Address Cycle is 0x58 (Write) and 0x59 (Read)\nThe following procedure is followed to write to the SN65DSI86 I2C registers:\n1. The master initiates a write operation by generating a start condition (S), followed by the SN65DSI86 7-bit\naddress and a zero-value W/R bit to indicate a write cycle.\n2. The master presents the subaddress (I2C register within SN65DSI86) to be written, consisting of one byte of\ndata, MSB-first.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 43\nProduct Folder Links: SN65DSI86\n3. The master presents the subaddress (I2C register within SN65DSI86) to be written, consisting of one byte of\ndata, MSB-first.\n4. The SN65DSI86 acknowledges the subaddress cycle.\n5. The master presents the first byte of data to be written to the I2C register.\n6. The SN65DSI86 acknowledges the byte transfer.\n7. The master terminates the write operation by generating a stop condition (P).\n8. The master terminates the write operation by generating a stop condition (P).\nThe following procedure is followed to read the SN65DSI86 I2C registers:\n1. The master initiates a read operation by generating a start condition (S), followed by the SN65DSI86 7-bit\naddress and a one-value W/R bit to indicate a read cycle.\n2. The SN65DSI86 acknowledges the address cycle.\n3. The SN65DSI86 transmit the contents of the memory registers MSB-first starting at register 00h or last read\nsubaddress+1. If a write to the SN65DSI86 I2C register occurred prior to the read, then the SN65DSI86 will\nstart at the subaddress specified in the write.\n4. The SN65DSI86 will wait for either an acknowledge (ACK) or a not-acknowledge (NACK) from the master\nafter each byte transfer; the I2C master acknowledges reception of each data byte transfer.\n5. If an ACK is received, the SN65DSI86 transmits the next byte of data.\n6. The master terminates the read operation by generating a stop condition (P).\nThe following procedure is followed for setting a starting subaddress for I2C reads:\n1. The master initiates a write operation by generating a start condition (S), followed by the SN65DSI86 7-bit\naddress and a zero-value W/R bit to indicate a write cycle.\n2. The SN65DSI86 acknowledges the address cycle.\n3. The master presents the subaddress (I2C register within SN65DSI86) to be written, consisting of one byte of\ndata, MSB-first.\n4. The SN65DSI86 acknowledges the subaddress cycle.\n5. The master terminates the write operation by generating a stop condition (P).\nNote\nIf no subaddressing is included for the read procedure, then reads start at register offset 00h and\ncontinue byte by byte through the registers until the I2C master terminates the read operation. If a I2C\nwrite occurred prior to the read, then the reads start at the subaddress specified by the write.\n8.6 Register Map\nMany of the SN65DSI86  functions are controlled by the Control and Status Registers (CSR). All CSR registers\nare accessible through the local I2C interface or through DSI interface.\nReads from reserved fields not described return zeros, and writes to read-only reserved registers are ignored.\nWrites to reserved register which are marked with W will produce unexpected behavior.\nTable 8-18. Bit Field Access Tag Descriptions\nACCESS TAG NAME MEANING\nR Read The field may be read by software\nW Write The field may be written by software\nS Set The field may be set by a write of one. Writes of zeros to the field have no effect.\nC Clear The field may be cleared by a write of one. Writes of zero to the field have no effect.\nU Update Hardware may autonomously update this field.\nNA No Access Not accessible or not applicableSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n44 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nPAGE 00x00\n0xFF0x01\n0xFE0xFDSTANDARD CFR\nPAGE 7TI TESTFigure 8-14. Register Map\n8.6.1 Standard CFR Registers (PAGE 0)\nTable 8-19. CSR Bit Field Definitions—ID Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x00 through\n0x077:0DEVICE_ID\nFor the SN65DSI86 these fields return a string of ASCII characters returning DSI86 preceded\nby three space characters.\nAddresses 0x07 through 0x00 = {0x20, 0x20, 0x20, 0x44, 0x53, 0x49, 0x38, 0x36}R\n0x08 7:0DEVICE_REV\nDevice revision; returns 0x02.\nTable 8-20. CSR Bit Field Definitions—Reset and Clock Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x09 0SOFT_RESET\nThis bit automatically clears when set to 1 and returns zeros when read. This bit must be set\nafter the CSRs are updated. This bit must also be set after making any changes to the DIS\nclock rate or after changing between DSI burst and non-burst modes.\n0 = No action (default)\n1 = Reset device to default condition excluding the CSR bits.W\n0x0A7DP_PLL_LOCK\n0 = DP_PLL not locked (default)\n1 = DP_PLL lockedR\n6:4 Reserved R\n3:1REFCLK_FREQ. This field is used to control the clock source and frequency select inputs to\nthe DP PLL. Any change in this field will cause the DP PLL to reacquire lock. On the rising\nedge of EN the SN65DSI86 will sample the state of GPIO[3:1] as well as detect the presence\nor absence of a clock on REFCLK pin. The outcome will determine whether the clock source\nfor the DP PLL is from the REFCLK pin or the DSIA CLK. The outcome will also determine\nthe frequency of the clock source.\nRWU DPPLL_CLK_SRC = 0 DPPLL_CLK_SRC = 1\n000 = 12 MHz\n001 = 19.2 MHz (Default)\n010 = 26 MHz\n011 = 27 MHz\n100 = 38.4 MHz\nAll other combinations are 19.2 MHz000 = Continuous DSIA CLK at 468 MHz\n001 = Continuous DSIA CLK at 384 MHz\n010 = Continuous DSIA CLK at 416 MHz\n011 = Continuous DSIA CLK at 486 MHz\n100 = Continuous DSIA CLK at 460.8 MHz\nAll other combinations are DSIA CLK at 384 MHz.\n0DPPLL_CLK_SRC. This status field indicates the outcome of the clock detection on the\nREFCLK pin.\n0 = Clock detected on REFCLK pin. DP_PLL clock derived from input REFCLK (default).\n1 = No clock detected on REFCLK pin. DP_PLL clock derived from MIPI D-PHY channel A\nHS continuous clockRU\n0x0B 7:0 Reserved Rwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 45\nProduct Folder Links: SN65DSI86\nTable 8-20. CSR Bit Field Definitions—Reset and Clock Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x0C 7:0 Reserved R\n0x0D 0DP_PLL_EN\nWhen this bit is set, the DP PLL is enabled\n0 = PLL disabled (default)\n1 = PLL enabledRW\nTable 8-21. CSR Bit Field Definitions—DSI Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x107LEFT_RIGHT_PIXELS\nThis bit selects the pixel arrangement in dual-channel DSI implementations.\n0 = DSI channel A receives ODD pixels and channel B receives EVEN (default)\n1 = DSI channel A receives LEFT image pixels and channel B receives RIGHT image pixelsRW\n6:5DSI_CHANNEL_MODE\n00 = Dual-channel DSI receiver\n01 = Single channel DSI receiver A (default)\n10 = Reserved.\n11 = ReservedRW\n4:3CHA_DSI_LANES\nThis field controls the number of lanes that are enabled for DSI Channel A.\n00 = Four lanes are enabled\n01 = Three lanes are enabled\n10 = Two lanes are enabled\n11 = One lane is enabled (default)\nNote: Unused DSI inputs pins on the SN65DSI86 should be left unconnected.RW\n2:1CHB_DSI_LANES\nThis field controls the number of lanes that are enabled for DSI Channel B.\n00 = Four lanes are enabled\n01 = Three lanes are enabled\n10 = Two lanes are enabled\n11 = One lane is enabled (default)\nNote: Unused DSI inputs pins on the SN65DSI86 should be left unconnected.RW\n0SOT_ERR_TOL_DIS\n0 = Single bit errors are tolerated for the start of transaction SoT leader sequence (default)\n1 = No SoT bit errors are toleratedRW\n0x117:6CHA_DSI_DATA_EQ\nThis field controls the equalization for the DSI Channel A Data Lanes\n00 = No equalization (default)\n01 = Reserved\n10 = 1 dB equalization\n11 = 2 dB equalizationRW\n5:4CHB_DSI_DATA_EQ\nThis field controls the equalization for the DSI Channel B Data Lanes\n00 = No equalization (default)\n01 = Reserved\n10 = 1 dB equalization\n11 = 2 dB equalizationRW\n3:2CHA_DSI_CLK_EQ This field controls the equalization for the DSI Channel A Clock\n00 = No equalization (default)\n01 = Reserved\n10 = 1 dB equalization\n11 = 2 dB equalizationRW\n1:0CHB_DSI_CLK_EQ\nThis field controls the equalization for the DSI Channel A Clock\n00 = No equalization (default)\n01 = Reserved.\n10 = 1 dB equalization\n11 = 2dB equalizationRWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n46 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-21. CSR Bit Field Definitions—DSI Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x12 7:0CHA_DSI_CLK_RANGE\nThis field specifies the DSI clock frequency range in 5-MHz increments for DSI Channel A\nclock. The SN65DSI866 estimates the DSI clock frequency using the REFCLK frequency\ndetermined at the rising edge of EN and updates this field accordingly. Software can override\nthis value. If the CHA_DSI_CLK_RANGE is not loaded before receiving the first DSI packet,\nthe SN65DSI86 uses the first packet to estimate the DSI_CLK frequency and loads this field\nwith this estimate. This first packet may not be received; thus, the host should send a first\ndummy packet (such as DSI read or write to register 0x00). This field may be written by the\nhost at any time. Any non-zero value written by the host is used instead of the automatically-\nestimated value.\n0x00 through 0x07: Reserved\n0x08 = 40 ≤ frequency < 45 MHz\n0x09 = 45 ≤ frequency < 50 MHz\n. . .\n0x96 = 750 ≤ frequency < 755 MHz\n0x97 through 0xFF: ReservedRWU\n0x13 7:0CHB_DSI_CLK_RANGE\nThis field specifies the DSI clock frequency range in 5-MHz increments for DSI Channel B\nclock. The SN65DSI86 estimates the DSI clock frequency using the REFCLK frequency\ndetermined at the rising edge of EN and updates this field accordingly. Software can override\nthis value. If the CHB_DSI_CLK_RANGE is not loaded before receiving the first DSI packet,\nthe SN65DSI86 uses the first packet to estimate the DSI_CLK frequency and loads this field\nwith this estimate. This first packet may not be received; thus, the host should send a first\ndummy packet (such as DSI read or write to register 0x00). This field may be written by the\nhost at any time. Any non-zero value written by the host is used instead of the automatically-\nestimated value.\n0x00 through 0x07: Reserved\n0x08 = 40 ≤ frequency < 45 MHz\n0x09 = 45 ≤ frequency < 50 MHz\n. . .\n0x96 = 750 ≤ frequency < 755 MHz\n0x97 through 0xFF: ReservedRWU\nTable 8-22. CSR Bit Field Definitions—Video Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x20 7:0CHA_ACTIVE_LINE_LENGTH_LOW\nRWWhen the SN65DSI86 is configured for a single DSI input, this field controls the length in\npixels of the active horizontal line for Channel A. When configured for Dual DSI Inputs in Odd/\nEven mode, this field controls the number of odd pixels in the active horizontal line that are\nreceived on DSI channel A. When configured for Dual DSI inputs in Left/Right mode, this field\ncontrols the number of left pixels in the active horizontal line that are received on DSI channel\nA. The value in this field is the lower 8 bits of the 12-bit value for the horizontal line length.\nThis field defaults to 0x00.\nNote : When the SN65DSI86 is configured for dual DSI inputs in Left/Right mode and\nLEFT_CROP field is programmed to a value other than 0x00, the\nCHA_ACTIVE_LINE_LENGTH_LOW/HIGH registers must be programmed to the number of\nactive pixels in the Left portion of the line after LEFT_CROP has been applied.\n0x21 3:0CHA_ACTIVE_LINE_LENGTH_HIGH\nRWWhen the SN65DSI86 is configured for a single DSI input, this field controls the length in\npixels of the active horizontal line for Channel A. When configured for Dual DSI Inputs in Odd/\nEven mode, this field controls the number of odd pixels in the active horizontal line that are\nreceived on DSI channel A. When configured for Dual DSI inputs in Left/Right mode, this field\ncontrols the number of left pixels in the active horizontal line that are received on DSI channel\nA. The value in this field is the upper 4 bits of the 12-bit value for the horizontal line length.\nThis field defaults to 0x00.\nNote : When the SN65DSI86 is configured for dual DSI inputs in Left/Right mode and\nLEFT_CROP field is programmed to a value other than 0x00, the\nCHA_ACTIVE_LINE_LENGTH_LOW/HIGH registers must be programmed to the number of\nactive pixels in the Left portion of the line after LEFT_CROP has been applied.\n0x22 7:0 CHB_ACTIVE_LINE_LENGTH_LOW RWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 47\nProduct Folder Links: SN65DSI86\nTable 8-22. CSR Bit Field Definitions—Video Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\nWhen configured for Dual DSI Inputs in Odd/Even mode, this field controls the number of\neven pixels in the active horizontal line that are received on DSI channel B. When configured\nfor Dual DSI inputs in Left/Right mode, this field controls the number of right pixels in the\nactive horizontal line that are received on DSI channel B. The value in this field is the lower 8\nbits of the 12-bit value for the horizontal line length. This field defaults to 0x00.\nNote : When the SN65DSI86 is configured for dual DSI inputs in Left/Right mode and\nRIGHT_CROP field is programmed to a value other than 0x00, the\nCHB_ACTIVE_LINE_LENGTH_LOW/HIGH registers must be programmed to the number of\nactive pixels in the Right portion of the line after RIGHT_CROP has been applied.\n0x23 3:0CHB_ACTIVE_LINE_LENGTH_HIGH\nRWWhen configured for Dual DSI Inputs in Odd/Even mode, this field controls the number of\neven pixels in the active horizontal line that are received on DSI channel B. When configured\nfor Dual DSI inputs in Left/Right mode, this field controls the number of right pixels in the\nactive horizontal line that are received on DSI channel B. The value in this field is the upper 4\nbits of the 12-bit value for the horizontal line length. This field defaults to 0x00.\nNote : When the SN65DSI86is configured for dual DSI inputs in Left/Right mode and\nRIGHT_CROP field is programmed to a value other than 0x00, the\nCHB_ACTIVE_LINE_LENGTH_LOW/HIGH registers must be programmed to the number of\nactive pixels in the Right portion of the line after RIGHT_CROP has been applied.\n0x24 7:0CHA_VERTICAL_DISPLAY_SIZE_LOW\nRW This field controls the vertical display size in lines for Channel A. The value in this field is the\nlower 8 bits of the 12-bit value for the vertical display size. This field defaults to 0x00.\n0x25 3:0CHA_VERTICAL_DISPLAY_SIZE_HIGH\nRW This field controls the vertical display size in lines for Channel A. The value in this field is the\nupper 4 bits of the 12-bit value for the vertical display size. This field defaults to 0x00.\n0x26 through\n0x2B7:0ReservedR\n0x2C 7:0CHA_HSYNC_PULSE_WIDTH_LOW\nRWThis field controls the width in pixel clocks of the HSync Pulse Width for Channel A. The value\nin this field is the lower 8 bits of the 15-bit value for HSync Pulse width. This field defaults to\n0x00.\n0x2D7CHA_HSYNC_POLARITY.\nRW 0 = Active High Pulse. Synchronization signal is high for the sync pulse width. (default)\n1 = Active Low Pulse. Synchronization signal is low for the sync pulse width.\n6:0CHA_HSYNC_PULSE_WIDTH_HIGH\nRWThis field controls the width in pixel clocks of the HSync Pulse Width for Channel A. The value\nin this field is the upper 7 bits of the 15-bit value for HSync Pulse width. This field defaults to\n0x00.\n0x2E through\n0x2F7:0Reserved.R\n0x30 7:0CHA_VSYNC_PULSE_WIDTH_LOW\nRWThis field controls the length in lines of the VSync Pulse Width for Channel A. The value in\nthis field is the lower 8 bits of the 15-bit value for VSync Pulse width. This field defaults to\n0x00. The total size of the VSYNC pulse width must be at least 1 line.\n0x317CHA_VSYNC_POLARITY.\nRW 0 = Active High Pulse. Synchronization signal is high for the sync pulse width. (Default)\n1 = Active Low Pulse. Synchronization signal is low for the sync pulse width.\n6:0CHA_VSYNC_PULSE_WIDTH_HIGH\nRWThis field controls the width in lines of the VSync Pulse Width for Channel A. The value in this\nfield is the upper 7 bits of the 15-bit value for VSync Pulse width. This field defaults to 0x00.\nThe total size of the VSYNC pulse width must be at least 1 line.\n0x32 through\n0x337:0Reserved.R\n0x34 7:0 CHA_HORIZONTAL_BACK_PORCH RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n48 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-22. CSR Bit Field Definitions—Video Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\nThis field controls the time in pixel clocks between the end of the HSync Pulse and the start of\nthe active video data for Channel A. This field defaults to 0x00.\n0x35 7:0 Reserved. R\n0x36 7:0CHA_VERTICAL_BACK_PORCH\nRWThis field controls the number of lines between the end of the VSync Pulse and the start of\nthe active video data for Channel A. This field defaults to 0x00. The total size of the Vertical\nBack Porch must be at least 1 line.\n0x37 7:0 Reserved R\n0x38 7:0CHA_HORIZONTAL_FRONT_PORCH\nRW This field controls the time in pixel clocks between the end of the active video data and the\nstart of the HSync Pulse for Channel A. This field defaults to 0x00.\n0x39 7:0 Reserved. R\n0x3A 7:0CHA_VERTICAL_FRONT_PORCH\nRWThis field controls the number of lines between the end of the active video data and the start\nof the VSync Pulse for Channel A. This field defaults to 0x00. The total size of the Vertical\nFront Porch must be at least 1 line.\n0x3B 7:0 Reserved R\n0x3C4COLOR_BAR_EN. When this bit is set, the SN65DSI86 generates a video test pattern on\nDisplayPort based on the values programmed into the Video Registers for Channel A.\n0 = Transmit of SMPTE color bar disabled. (default)\n1 = Transmit of SMPTE color bar enabled.RW\n3 Reserved. R\n2:0COLOR_BAR_PATTERN.\n000 = Vertical Colors: 8 Color (Default)\n001 = Vertical Colors: 8 Gray Scale\n010 = Vertical Colors: 3 Color\n011 = Vertical Colors: Stripes\n100 = Horizontal Colors: 8 Color\n101 = Horizontal Colors: 8 Gray Scale\n110 = Horizontal Colors: 3 Color\n111 = Horizontal Colors: StripesRW\n0x3D 7:0RIGHT_CROP. This field controls the number of pixels removed from the beginning of the\nactive video line for DSI Channel B. This field only has meaning if the LEFT_RIGHT_PIXELS\n= 1. This field defaults to 0x00.\nRW Note : When the SN65DSI86 is configured for dual DSI inputs in Left/Right mode and this field\nis programmed to a value other than 0x00, the CHB_ACTIVE_LINE_LENGTH_LOW/HIGH\nregisters must be programmed to the number of active pixels in the Right portion of the line\nafter RIGHT_CROP has been applied.\n0x3E 7:0LEFT_CROP. This field controls the number of pixels removed from the end of the active\nvideo line for DSI Channel A. This field only has meaning if the LEFT_RIGHT_PIXELS = 1.\nThis field defaults to 0x00.\nRW Note : When the SN65DSI86 is configured for dual DSI inputs in Left/Right mode and this field\nis programmed to a value other than 0x00, the CHA_ACTIVE_LINE_LENGTH_LOW/HIGH\nregisters must be programmed to the number of active pixels in the Left portion of the line\nafter LEFT_CROP has been applied.\nTable 8-23. CSR Bit Field Definitions—DisplayPort Specific Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x40 7:0 MVID[7:0] RU\n0x41 7:0 MVID[15:8] RU\n0x42 7:0 MVID[23:16] RU\n0x43 7:0 NVID[7:0] RU\n0x44 7:0 NVID[15:8] RU\n0x45 7:0 NVID[23:16] RUwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 49\nProduct Folder Links: SN65DSI86\nTable 8-23. CSR Bit Field Definitions—DisplayPort Specific Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x46 7:0 Htotal[7:0]. Defaults to 0x00. RU\n0x47 7:0 Htotal[15:8]. Defaults to 0x00. RU\n0x48 7:0 Vtotal[7:0]. Defaults to 0x00. RU\n0x49 7:0 Vtotal[15:8]. Defaults to 0x00. RU\n0x4A 7:0 Hstart[7:0]. Defaults to 0x00. RU\n0x4B 7:0 Hstart[15:8]. Defaults to 0x00. RU\n0x4C 7:0 Vstart[7:0]. Defaults to 0x00. RU\n0x4D 7:0 Vstart[15:8]. Defaults to 0x00. RU\n0x4E 7:0 HSW[7:0]. Defaults to 0x00. RU\n0x4F 7:0 HSP_HSW[15:8]. Defaults to 0x00. RU\n0x50 7:0 VSW[7:0]. Defaults to 0x00. RU\n0x51 7:0 VSP_VSW[15:8]. Defaults to 0x00. RU\n0x52 7:0 Hwidth[7:0]. Defaults to 0x00. RU\n0x53 7:0 Hwidth[15:8]. Defaults to 0x00. RU\n0x54 7:0 Vheight[7:0]. Defaults to 0x00. RU\n0x55 7:0 Vheight[15:8]. Defaults to 0x00. RU\n0x567:5MSA_MISC0_7_5. This field represents the bits per color.\n000 = 6 bits per color.\n001 = 8 bits per color (Default)\nOthers are not supported.RU\n4 MSA_MISC0_4. Defaults to zero. RW\n3 MSA_MISC0_3. Defaults to zero. RW\n2:1MSA_MISC0_2_1. This field indicates the format of the data is either RGB, YCbCr(422 or\n444). The SN65DSI86 only supports RGB so this field will always be 0x0.\n00 = RGB (default)RU\n0MSA_MISC0_0.\n0 = Link clock and stream clock are async. (default)\n1 = Link clock and stream clock are sync.RU\n0x577MSA_MISC1_7. Y-only video. The SN65DSI86 does not support this feature so this field\ndefaults to zero.R\n6:3 MSA_MISC1_6_3. Reserved. Default to 0x0. R\n2:1MSA_MISC1_2_1. This field is the stereo video attribute data.\n00 = No 3D stereo video in-band signaling done using this field, indicating either no 3D stereo\nvideo transported or the in-band signaling done using SDP called Video Stream Configuration\n(VSC) packet. (Default)\n01 = Next frame is Right Eye.\n10 = Reserved.\n11 = Next Frame is Left Eye.RW\n0 MSA_MISC1_0. Default to zero. R\n0x587TU_SIZE_OVERRIDE. This field is used to control whether SN65DSI86 determines Transfer\nUnit Size or the size is determine by the TU_SIZE field.\n0 = SN65DSI86 determines TU size. (default)\n1 = TU size is determined by TU_SIZE field.RW\n6:0TU_SIZE. This field is used to program the DisplayPort transfer Unit size. Valid values are\nbetween 32 (0x20) and 64 (0x40). Default is 64. When SN65DSI86 determines the TU size,\nthe SN65DSI86 will update this register with the value determined by hardware.\nSN65DSI86will interpret all invalid values to be a transfer unit size of 64 (0x40).RWU\n0x59 7:6LN3_ASSIGN. See the DP Main Link Configurability  section in this document for supported\nlogical to physical combinations based on DP_NUM_LANES.\n00 = Logical Lane3 is routed to physical ML0P/N pins\n01 = Logical Lane3 is routed to physical ML1P/N pins\n10 = Logical Lane3 is routed to physical ML2P/N pins\n11 = Logical Lane3 is routed to physical ML3P/N pins (default)RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n50 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-23. CSR Bit Field Definitions—DisplayPort Specific Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n5:4LN2_ASSIGN. See the DP Main Link Configurability  section in this document for supported\nlogical to physical combinations based on DP_NUM_LANES\n00 = Logical Lane2 is routed to physical ML0P/N pins\n01 = Logical Lane2 is routed to physical ML1P/N pins\n10 = Logical Lane2 is routed to physical ML2P/N pins (default)\n11 = Logical Lane2 is routed to physical ML3P/N pins.RW\n3:2LN1_ASSIGN. See the DP Main Link Configurability  section in this document for supported\nlogical to physical combinations based on DP_NUM_LANES\n00 = Logical Lane1 is routed to physical ML0P/N pins\n01 = Logical Lane1 is routed to physical ML1P/N pins (default)\n10 = Logical Lane1 is routed to physical ML2P/N pins\n11 = Logical Lane1 is routed to physical ML3P/N pins.RW\n1:0LN0_ASSIGN. See the DP Main Link Configurability  section in this document for supported\nlogical to physical combinations based on DP_NUM_LANES.\n00 = Logical Lane0 is routed to physical ML0P/N pins (default)\n01 = Logical Lane0 is routed to physical ML1P/N pins\n10 = Logical Lane0 is routed to physical ML2P/N pins\n11 = Logical Lane0 is routed to physical ML3P/N pinsRW\n0x5A7ML3_POLR. When this field is set, the polarity of ML3, specified by LN3_ASSIGN, is inverted.\n0 = ML3 polarity is normal (default)\n1 = ML3 polarity is inverted.RW\n6ML2_POLR. When this field is set, the polarity of ML2, specified by LN2_ASSIGN, is inverted.\n0 = ML2 polarity is normal (default)\n1 = ML2 polarity is inverted.RW\n5ML1_POLR. When this field is set, the polarity of ML1, specified by LN1_ASSIGN, is inverted.\n0 = ML1 polarity is normal (default)\n1 = ML1 polarity is inverted.RW\n4ML0_POLR. When this field is set, the polarity of ML0, specified by LN0_ASSIGN, is inverted.\n0 = ML0 polarity is normal (default)\n1 = ML0 polarity is inverted.RW\n3VSTREAM_ENABLE. The SN65DSI86 will clear this field if the following conditions are true:\nExiting SUSPEND and the PSR_EXIT_VIDEO bit is cleared.\n0 = Video data from DSI is not passed to DisplayPort (default). IDLE pattern will be sent\ninstead.\n1 = Video data from DSI is passed to DisplayPortRWU\n2ENH_FRAME_ENABLE.\n0 = Disable Enhanced Framing.\n1 = Enable Enhanced Framing (default)RWU\n1:0ASSR_CONTROL.This field controls the scrambler seed used. Standard DP scrambler seed\nvalue is 0xFFFF. The ASSR seed value is 0xFFFF. This field is R/W if TEST2 pin is sampled\nhigh on rising edge of EN and bit 0 of offset 0x16 in Page 7 is set. Otherwise this field is read-\nonly.\n00 = Standard DP Scrambler Seed.\n01 = Alternative Scrambler Seed Reset (Default).\n10 = Reserved.\n11 = Reserved.R/RW\n0x5B1ENCH_FRAME_PATT\n0 = SR BF BF SR or BS BF BF BS (Default)\n1 = SR CP CP SR or BS CP CP BSRW\n0DP_18BPP_EN. If this field is set, then 18BPP format will be transmitted over eDP interface\nregardless of the DSI pixel stream data type format.\n0 = 24BPP RGB. (default)\n1 = 18BPP RGBRW\n0x5C4 HPD. Returns the state of the HPD pin after 100-ms de-bounce RU\n0HPD_DISABLE\n0 = HPD input is enabled. (default)\n1 = HPD input is disabledRWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 51\nProduct Folder Links: SN65DSI86\nTable 8-24. CSR Bit Field Definitions—GPIO Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x5E7 GPIO4_INPUT. Returns the state of the GPIO4 pin. RU\n6 GPIO3_INPUT. Returns the state of the GPIO3 pin. RU\n5 GPIO2_INPUT. Returns the state of the GPIO2 pin. RU\n4 GPIO1_INPUT. Returns the state of the GPIO1 pin. RU\n3GPIO4_OUTPUT. When GPIO4 Control is programmed to an Output, this field will control the\noutput level of GPIO4.\n0 = GPIO4 is driven to 0 (GND). (default)\n1 = GPIO4 is driven to 1.RW\n2GPIO3_OUTPUT. When GPIO3 Control is programmed to an Output, this field will control the\noutput level of GPIO3.\n0 = GPIO3 is driven to 0 (GND). (default)\n1 = GPIO3 is driven to 1.RW\n1GPIO2_OUTPUT. When GPIO2 Control is programmed to an Output, this field will control the\noutput level of GPIO3.\n0 = GPIO2 is driven to 0 (GND). (default)\n1 = GPIO2 is driven to 1.RW\n0GPIO1_OUTPUT. When GPIO1 Control is programmed to an Output, this field will control the\noutput level of GPIO1.\n0 = GPIO1 is driven to 0 (GND). (default)\n1 = GPIO1 is driven to 1.RW\n0x5F7:6GPIO4_CTRL\n00 = Input (Default)\n01 = Output\n10 = PWM\n11 = Reserved.RW\n5:4GPIO3_CTRL\n00 = Input (Default)\n01 = Output\n10 = DSIA HSYNC or VSYNC\n11 = ReservedRW\n3:2GPI02_CTRL\n00 = Input (Default)\n01 = Output\n10 = DSIA VSYNC\n11 = ReservedRW\n1:0GPIO1_CTRL\n00 = Input (Default)\n01 = Output\n10 = SUSPEND Input\n11 = ReservedRW\nTable 8-25. CSR Bit Field Definitions—Native and I2C-Over-Aux Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x607:1I2C_ADDR_CLAIM1. When I2C_CLAIM1_EN is enabled, the SN65DSI86 will claim I2C slave\naddress programmed into this field. This register defaults to 0x50 which is the typical address\nfor the EDID.RW\n0I2C_CLAIM1_EN\n0 = Disable (default)\n1 = EnableRW\n0x617:1I2C_ADDR_CLAIM2. When I2C_CLAIM2_EN is enabled, the SN65DSI86 will claim I2C slave\naddress programmed into this field. This register defaults to 0x30 which is the default segment\npointer register.RW\n0I2C_CLAIM2_EN\n0 = Disable (Default)\n1 = EnableRW\n0x62 7:1I2C_ADDR_CLAIM3. When I2C_CLAIM3_EN is enabled, the SN65DSI86 will claim I2C slave\naddress programmed into this field. This register defaults to 0x52 which is the typical address\nfor the EDID.RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n52 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-25. CSR Bit Field Definitions—Native and I2C-Over-Aux Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0I2C_CLAIM3_EN\n0 = Disable (Default)\n1 = EnableRW\n0x637:1I2C_ADDR_CLAIM4. When I2C_CLAIM4_EN is enabled, the SN65DSI86 will claim I2C slave\naddress programmed into this field. This register defaults to 0x00.RW\n0I2C_CLAIM4_EN\n0 = Disable (Default)\n1 = EnableRW\n0x64 through\n0x737:0AUX_WDATA0 through AUX_WDATA15. Data to transmit. All of these registers default to 0x00.RW\n0x747:4 Reserved R\n3:0AUX_ADDR[19:16]. This field is address bits 19 through 16 of the Native Aux 20-bit address.\nThis field must be filled with zeros for I2C-Over-Aux transitions. This field defaults to 0x0.RW\n0x75 7:0AUX_ADDR[15:8]. This field is bits 15 through 8 of the Native Aux 20-bit address. This field\nmust be filled with zeros for I2C-Over-Aux request transactions. This field defaults to 0x00.RW\n0x76 7:0AUX_ADDR[7:0]. This field is address bits 7 through 0 of the Native Aux 20-bit address. For\nI2C-Over-Aux request transactions this field must be the 7-bit I2C address. This field defaults to\n0x00.RW\n0x77 4:0AUX_LENGTH. Amount of Data to transmit or amount of data received. Limited to up to 16\nbytes. For example, if LENGTH is 0x10, then SN65DSI86 will interpret this to mean 16 (0x10).\nFor replies, DSIx6 will update this field with the number of bytes returned. This field defaults to\n0x00.RWU\n0x787:4AUX_CMD. This field is used to indicate the type of request. This field defaults to 0x00.\nSee Table 8-9  for request transactions codes.RW\n0SEND. When set to a 1, the SN65DSI86 will send the Native Aux request or initiate the I2C-\nOver_Aux transaction. SN65DSI86 will clear this bit when the request completed successfully\nor failed due to an error. This field defaults to 0.RSU\n0x79 through\n0x887:0AUX_RDATA0 through AUX_RDATA15. Data received. All of these registers default to 0x00.RU\nTable 8-26. CSR Bit Field Definitions—Link Training Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x89 through\n0x927:080BIT_CUSTOM_PATTERN.\nThese 10 bytes represent the 80-bit Custom pattern. The default pattern is 0x1F, 0x7C, 0xF0,\n0xC1, 0x07, 0x1F, 0x7C, 0xF0, 0xC1, and 0x07. In the DisplayPort PHY CTS specification this\npattern is known as PLTPAT. The SN65DSI86 will continuously transmit over all enabled\nDisplayPort lanes starting at the LSB of data at address 0x89 through the MSB of data at\naddress 0x92 last.RW\n0x937:6DP_PRE_EMPHASIS\nThis field selects the pre-emphasis setting for all DP Main Links. The actual pre-emphasis level\nis determined by the DP Link Training LUT registers.\n00 = Pre-Emphasis Level 0 (Default)\n01 = Pre-Emphasis Level 1\n10 = Pre-Emphasis Level 2\n11 = Pre-Emphasis Level 3RWU\n5:4DP_NUM_LANES.\n00 = Not Configured. (Default)\n01 = 1 DP lane.\n10 = 2 DP lanes.\n11 = 4 DP lanes.RWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 53\nProduct Folder Links: SN65DSI86\nTable 8-26. CSR Bit Field Definitions—Link Training Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n3:1SSC_SPREAD\n000 = Down-spread 5000 ppm\n001 = Down-spread 4375 ppm\n010 = Down-spread 3750 ppm (default)\n011 = Down-spread 3150 ppm\n100 = Down-spread 2500 ppm\n101 = Center-spread 3750 ppm\n110 = Center-spread 4375 ppm\n111 = Center-spread 5000 ppmRW\n0SSC_ENABLE\n0 = Clock spread is disabled (default)\n1 = Clock spread is enabled.RW\n0x947:5DP_DATARATE\n000 = Not Configured (Default)\n001 = 1.62 Gbps per lane (RBR)\n010 = 2.16 Gbps per lane\n011 = 2.43 Gbps per lane\n100 = 2.70 Gbps per lane (HBR)\n101 = 3.24 Gbps per lane\n110 = 4.32 Gbps per lane.\n111 = 5.4 Gbps per lane (HBR2)RW\n3:2DP_ERC. This field controls the edge rate for Main Link DisplayPort interface.\n00 = 61 ps (default)\n01 = 95 ps\n10 = 122 ps\n11 = 153 psRW\n1:0DP_TX_SWING\nThis field selects the differential output voltage level for all DP Main Links. The actual pk-pk\ndifferential tx voltage is determined by the DP Link Training LUT registers . Note that Voltage\nSwing level 3 is disabled by default.\n00 = Voltage Swing Level 0 (Default)\n01 = Voltage Swing Level 1\n10 = Voltage Swing Level 2\n11 = Voltage Swing Level 3RWU\n0x957TPS1_FAST_TRAIN.\n0 = TPS1 will not be transmitted in Fast Link Training Mode (Default)\n1 = TPS1 will be transmitted in Fast Link Training ModeRW\n6TPS2_FAST_TRAIN\n0 = TPS2 will NOT be transmitted in Fast Link Training mode (default)\n1 = TPS2 will be transmitted in Fast Link Training ModeRW\n5TPS3_FAST_TRAIN\n0 = TPS3 will not be used for TPS2 in Fast Link Training Mode (default)\n1 = TPS3 will be used instead of TPS2 in Fast Link Training Mode.RW\n4SCRAMBLE_DISABLE\n0 = Scrambling Enabled (default)\n1 = Scrambling Disabled.RW\n3:1DP_POST_CURSOR2. This field contains the post cursor2 value, where PST2 = 20 × LOG(1 –\n0.05 × DP_POST_CURSOR2) (in dB)\nThis field controls the Post Cursor2 is setting for all DP Main Links\n000 = Post-Cursor2 Level 0 (0 dB) (Default)\n010 = Post-Cursor2 Level 1 (0.92 dB)\n100 = Post-Cursor2 Level 2 (1.94 dB)\n110 = Post-Cursor2 Level 3 (3.10 dB).RWU\n0ADJUST_REQUEST_DISABLE. This field is used during Semi-Auto Link training.\n0 = SN65DSI86 will read from DPCD address to determine next training level (pre-emphasis, tx\nswing level, and post-cursor2). (Default)\n1 = SN65DSI86 will not read from DPCD address to determine next training level. It will instead\ngo to next available Pre-emphasis level. After maximum pre-emphasis level has been reached,\nthe SN65DSI86 will attempt next DP_TX_SWING and reset pre-emphasis level back to level 0.\nPost-Cursor2 is not used in this mode.RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n54 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-26. CSR Bit Field Definitions—Link Training Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x96 3:0ML_TX_MODE\n0000 = Main Link Off (default)\n0001 = Normal mode (Idle pattern or active video)\n0010 = TPS1\n0011 = TPS2\n0100 = TPS3\n0101 = PRBS7\n0110 = HBR2 Compliance Eye Pattern\n0111 = Symbol Error Rate Measurement Pattern\n1000 = 80-bit Custom Pattern\n1001 = Fast Link Training\n1010 = Semi-Auto Link Training.\n1011 = Redriver Semi-Auto Link Training\nAll others are Reserved.RWU\n0x97 7:0HBR2_COMPEYEPAT_LENGTH_LOW. This field is the count of number of scrambled 0\nsymbols to be output for every Enhanced Framing Scrambler Reset sequence. This count\nincludes the reset sequence. A value less than four causes scrambled 0 symbols to be output\nwith no scrambler reset sequence. This field represents the lower 8 bits of the 16-bit\nHBR2_COMPEYEPAT_LENGTH register. This field defaults to 0x04.RW\n0x98 7:0HBR2_COMPEYEPAT_LENGTH_HIGH. This field is the count of number of scrambled 0\nsymbols to be output for every Enhanced Framing Scrambler Reset sequence. This count\nincludes the reset sequence. A value less than four causes scrambled 0 symbols to be output\nwith no scrambler reset sequence. This field represents the upper 8 bits of the 16-bit\nHBR2_COMPEYEPAT_LENGTH register. This field defaults to 0x01.RW\n0x997LINK_RATE_SET_EN. When this field is cleared, the Semi-Auto Link training will write the\nappropriate value (0x06 for 1.62 Gbps, 0x0A for 2.7 Gbps, or 0x14 for 5.4 Gbps) to the sink\nLINK_BW_SET register at DPCD address 0x00110. When this field is set, the Semi-Auto Link\nTraining will write the value in the LINK_RATE_SET field to the sink LINK_RATE_SET register\nat DPCD address 0x00115. Defaults to 0.RW\n2:0LINK_RATE_SET. When LINK_RATE_SET_EN bit is set, the value in this field will be written to\nthe sink LINK_RATE_SET register at DPCD address 0x00115 during Semi-Auto Link training\nprocess. Defaults to 0x0.RW\nTable 8-27. CSR Bit Field Definitions—PWM Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xA0 7:0PWM_PRE_DIV\nThe value programmed into this field along with the value in BACKLIGHT_SCALE is used to\nset the PWM frequency. The PWM frequency = REFCLK / (PWM_PRE_DIV ×\nBACKLIGHT_SCALE + 1). This field defaults to 0x01.RW\n0xA1 7:0BACKLIGHT_SCALE_LOW.\nThe digital value corresponding to the maximum possible backlight input value. Default to 0xFF.\nThe value in this field is the lower 8 bits of the 16-bit BACKLIGHT_SCALE register.RW\n0xA2 7:0BACKLIGHT_SCALE_HIGH.The digital value corresponding to the maximum possible\nbacklight input value. Default to 0xFF. The value in this field is the upper 8 bits of the 16-bit\nBACKLIGHT scale register.RW\n0xA3 7:0BACKLIGHT_LOW\nScreen brightness on a scale of 0 to BACKLIGHT_SCALE. The value in this field is the lower 8\nbits of the 16-bit BACKLIGHT register. Defaults to 0x00RW\n0xA4 7:0BACKLIGHT_HIGH\nScreen brightness on a scale of 0 to BACKLIGHT_SCALE. The value in this field is the upper 8\nbits of the 16-bit BACKLIGHT register. Default to 0x00. The SN65DSI86 will latch the 16-bit\nBACKLIGHT value on a write to this field.RW\n0xA51PWM_EN.\n0 = PWM is disabled. (Default).\n1 = PWM enabled.RW\n0PWM_INV. When this bit is set, the PWM output will be inverted.\n0 = Normal (default)\n1 = Inverted.RWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 55\nProduct Folder Links: SN65DSI86\nTable 8-28. CSR Bit Field Definitions—DP Link Training LUT\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xB07:4V0_P0_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V0_P0_PRE) (in dB), when the DP_TX_SWING = Level\n0 and DP_PRE_EMPHASIS = Level 0 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V0_P0_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V0_P0_VOD (in mV), when the DP_TX_SWING\n= Level 0 and DP_PRE_EMPHASIS = Level 0 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 4 (400 mV).RW\n0xB17:4V0_P1_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V0_P1_PRE) (in dB), when the DP_TX_SWING = Level\n0 and DP_PRE_EMPHASIS = Level 1 are select by the training algorithm. The default value for\nthis field is 7 (3.74 dB).RW\n3:0V0_P1_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V0_P1_VOD (in mV), when the DP_TX_SWING\n= Level 0 and DP_PRE_EMPHASIS = Level 1 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 8 (600 mV).RW\n0xB27:4V0_P2_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V0_P2_PRE) (in dB), when the DP_TX_SWING = Level\n0 and DP_PRE_EMPHASIS = Level 2 are select by the training algorithm. The default value for\nthis field is 10 (6.02 dB).RW\n3:0V0_P2_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V0_P2_VOD (in mV), when the DP_TX_SWING\n= Level 0 and DP_PRE_EMPHASIS = Level 2 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB37:4V0_P3_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V0_P3_PRE) (in dB), when the DP_TX_SWING = Level\n0 and DP_PRE_EMPHASIS = Level 3 are select by the training algorithm. The default value for\nthis field is 10 (6.02 dB).RW\n3:0V0_P3_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V0_P3_VOD (in mV), when the DP_TX_SWING\n= Level 0 and DP_PRE_EMPHASIS = Level 3 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB47:4V1_P0_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V1_P0_PRE) (in dB), when the DP_TX_SWING = Level\n1 and DP_PRE_EMPHASIS = Level 0 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V1_P0_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V1_P0_VOD (in mV), when the DP_TX_SWING\n= Level 1 and DP_PRE_EMPHASIS = Level 0 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86\nThe default value for this field is 8 (600 mV).RW\n0xB57:4V1_P1_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V1_P1_PRE) (in dB), when the DP_TX_SWING = Level\n1 and DP_PRE_EMPHASIS = Level 1 are select by the training algorithm. The default value for\nthis field is 6 (3.10 dB).RW\n3:0V1_P1_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V1_P1_VOD (in mV), when the DP_TX_SWING\n= Level 1 and DP_PRE_EMPHASIS = Level 1 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB6 7:4V1_P2_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V1_P2_PRE) (in dB), when the DP_TX_SWING = Level\n1 and DP_PRE_EMPHASIS = Level 2 are select by the training algorithm. The default value for\nthis field is 9 (5.19 dB).RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n56 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-28. CSR Bit Field Definitions—DP Link Training LUT (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n3:0V1_P2_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V1_P2_VOD (in mV), when the DP_TX_SWING\n= Level 1 and DP_PRE_EMPHASIS = Level 2 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB77:4V1_P3_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V1_P3_PRE) (in dB), when the DP_TX_SWING = Level\n1 and DP_PRE_EMPHASIS = Level 3 are select by the training algorithm. The default value for\nthis field is 9 (5.19 dB).RW\n3:0V1_P3_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V1_P3_VOD (in mV), when the DP_TX_SWING\n= Level 1 and DP_PRE_EMPHASIS = Level 3 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB87:4V2_P0_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V2_P0_PRE) (in dB), when the DP_TX_SWING = Level\n2 and DP_PRE_EMPHASIS = Level 0 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V2_P0_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V2_P0_VOD (in mV), when the DP_TX_SWING\n= Level 2 and DP_PRE_EMPHASIS = Level 0 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xB97:4V2_P1_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V2_P1_PRE) (in dB), when the DP_TX_SWING = Level\n2 and DP_PRE_EMPHASIS = Level 1 are select by the training algorithm. The default value for\nthis field is 5 (2.50 dB).RW\n3:0V2_P1_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V2_P1_VOD (in mV), when the DP_TX_SWING\n= Level 2 and DP_PRE_EMPHASIS = Level 1 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xBA7:4V2_P2_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V2_P2_PRE) (in dB), when the DP_TX_SWING = Level\n2 and DP_PRE_EMPHASIS = Level 2 are select by the training algorithm. The default value for\nthis field is 5 (2.50 dB).RW\n3:0V2_P2_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V2_P2_VOD (in mV), when the DP_TX_SWING\n= Level 2 and DP_PRE_EMPHASIS = Level 2 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xBB7:4V2_P3_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V2_P3_PRE) (in dB), when the DP_TX_SWING = Level\n2 and DP_PRE_EMPHASIS = Level 3 are select by the training algorithm. The default value for\nthis field is 5 (2.50 dB).RW\n3:0V2_P3_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V2_P3_VOD (in mV), when the DP_TX_SWING\n= Level 2 and DP_PRE_EMPHASIS = Level 3 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xBC7:4V3_P0_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V3_P0_PRE) (in dB), when the DP_TX_SWING = Level\n3 and DP_PRE_EMPHASIS = Level 0 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V3_P0_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V3_P0_VOD (in mV), when the DP_TX_SWING\n= Level 3 and DP_PRE_EMPHASIS = Level 0 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 57\nProduct Folder Links: SN65DSI86\nTable 8-28. CSR Bit Field Definitions—DP Link Training LUT (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xBD7:4V3_P1_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V3_P1_PRE) (in dB), when the DP_TX_SWING = Level\n3 and DP_PRE_EMPHASIS = Level 1 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V3_P1_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V3_P1_VOD (in mV), when the DP_TX_SWING\n= Level 3 and DP_PRE_EMPHASIS = Level 1 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xBE7:4V3_P2_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V3_P2_PRE) (in dB), when the DP_TX_SWING = Level\n3 and DP_PRE_EMPHASIS = Level 2 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V3_P2_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V3_P2_VOD (in mV), when the DP_TX_SWING\n= Level 3 and DP_PRE_EMPHASIS = Level 2 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI86.\nThe default value for this field is 12 (800 mV).RW\n0xBF7:4V3_P3_PRE. This field contains the post1 pre-emphasis code, where the pre-emphasis setting is\ngiven by PREdB = –20 × LOG(1 – 0.05 × V3_P3_PRE) (in dB), when the DP_TX_SWING = Level\n3 and DP_PRE_EMPHASIS = Level 3 are select by the training algorithm. The default value for\nthis field is 0 (0 dB).RW\n3:0V3_P3_VOD. This field contains the TX swing code, where the emphasized output pk-pk\ndifferential voltage is given by VOD = 200 + 50 × V3_P3_VOD (in mV), when the DP_TX_SWING\n= Level 3 and DP_PRE_EMPHASIS = Level 3 are selected by the training algorithm. The\nmaximum supported value is 12 (800 mV). Any value greater than 12 is reserved for SN65DSI866.\nThe default value for this field is 12 (800 mV).RW\n0xC07V0_P3_PRE_EN. When this field is set V0_P3_PRE is used in training algorithm. When this field\nis cleared, V0_P3_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n6V0_P3_VOD_EN. When this field is set V0_P3_VOD is used in training algorithm. When this field\nis cleared, V0_P3_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n5V0_P2_PRE_EN. When this field is set V0_P2_PRE is used in training algorithm. When this field\nis cleared, V0_P2_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n4V0_P2_VOD_EN. When this field is set V0_P2_VOD is used in training algorithm. When this field\nis cleared, V0_P2_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n3V0_P1_PRE_EN. When this field is set V0_P1_PRE is used in training algorithm. When this field\nis cleared, V0_P1_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n2V0_P1_VOD_EN. When this field is set V0_P1_VOD is used in training algorithm. When this field\nis cleared, V0_P1_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n1V0_P0_PRE_EN. When this field is set V0_P0_PRE is used in training algorithm. When this field\nis cleared, V0_P0_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n0V0_P0_VOD_EN. When this field is set V0_P0_VOD is used in training algorithm. When this field\nis cleared, V0_P0_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n0xC17V1_P3_PRE_EN. When this field is set V1_P3_PRE is used in training algorithm. When this field\nis cleared, V1_P3_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n6V1_P3_VOD_EN. When this field is set V1_P3_VOD is used in training algorithm. When this field\nis cleared, V1_P3_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n5 V1_P2_PRE_EN. When this field is set V1_P2_PRE is used in training algorithm. When this field\nis cleared, V1_P2_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n4 V1_P2_VOD_EN. When this field is set V1_P2_VOD is used in training algorithm. When this field\nis cleared, V1_P2_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n3 V1_P1_PRE_EN. When this field is set V1_P1_PRE is used in training algorithm. When this field\nis cleared, V1_P1_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n2 V1_P1_VOD_EN. When this field is set V1_P1_VOD is used in training algorithm. When this field\nis cleared, V1_P1_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n1 V1_P0_PRE_EN. When this field is set V1_P0_PRE is used in training algorithm. When this field\nis cleared, V1_P0_PRE is not used in training algorithm. The default for this field is 1 (enabled).RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n58 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-28. CSR Bit Field Definitions—DP Link Training LUT (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0 V1_P0_VOD_EN. When this field is set V1_P0_VOD is used in training algorithm. When this field\nis cleared, V1_P0_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n0xC27V2_P3_PRE_EN. When this field is set V2_P3_PRE is used in training algorithm. When this field\nis cleared, V2_P3_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n6V2_P3_VOD_EN. When this field is set V2_P3_VOD is used in training algorithm. When this field\nis cleared, V2_P3_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n5V2_P2_PRE_EN. When this field is set V2_P2_PRE is used in training algorithm. When this field\nis cleared, V2_P2_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n4V2_P2_VOD_EN. When this field is set V2_P2_VOD is used in training algorithm. When this field\nis cleared, V2_P2_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n3V2_P1_PRE_EN. When this field is set V2_P1_PRE is used in training algorithm. When this field\nis cleared, V2_P1_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n2V2_P1_VOD_EN. When this field is set V2_P1_VOD is used in training algorithm. When this field\nis cleared, V2_P1_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n1V2_P0_PRE_EN. When this field is set V2_P0_PRE is used in training algorithm. When this field\nis cleared, V2_P0_PRE is not used in training algorithm. The default for this field is 1 (enabled).RW\n0V2_P0_VOD_EN. When this field is set V2_P0_VOD is used in training algorithm. When this field\nis cleared, V2_P0_VOD is not used in training algorithm. The default for this field is 1 (enabled).RW\n0xC37V3_P3_PRE_EN. When this field is set V3_P3_PRE is used in training algorithm. When this field\nis cleared, V3_P3_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n6V3_P3_VOD_EN. When this field is set V3_P3_VOD is used in training algorithm. When this field\nis cleared, V3_P3_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n5V3_P2_PRE_EN. When this field is set V3_P2_PRE is used in training algorithm. When this field\nis cleared, V3_P2_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n4V3_P2_VOD_EN. When this field is set V3_P2_VOD is used in training algorithm. When this field\nis cleared, V3_P2_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n3V3_P1_PRE_EN. When this field is set V3_P1_PRE is used in training algorithm. When this field\nis cleared, V3_P1_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n2V3_P1_VOD_EN. When this field is set V3_P1_VOD is used in training algorithm. When this field\nis cleared, V3_P1_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\n1V3_P0_PRE_EN. When this field is set V3_P0_PRE is used in training algorithm. When this field\nis cleared, V3_P0_PRE is not used in training algorithm. The default for this field is 0 (disabled).RW\n0V3_P0_VOD_EN. When this field is set V3_P0_VOD is used in training algorithm. When this field\nis cleared, V3_P0_VOD is not used in training algorithm. The default for this field is 0 (disabled).RW\nTable 8-29. CSR Bit Field Definitions—PSR Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xC81PSR_EXIT_VIDEO.\n0 = Upon exiting SUSPEND mode, the v will transmit IDLE patterns and the VSTREAM_ENABLE\nbit will be cleared. GPU software is responsible for setting the VSTREAM_ENABLE bit. (default)\n1 = Upon exiting SUSPEND mode, the v will transmit IDLE patterns and the VSTREAM_ENABLE\nbit will be set.RW\n0PSR_TRAIN. This field controls whether or not the SN65DSI86 will perform a Semi-Auto Link\nTraining when exiting the SUSPEND mode.\n0 = PSR train will be Normal Mode (idle pattern) (default)\n1 = PSR train will be Semi-Auto Link Training.RWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 59\nProduct Folder Links: SN65DSI86\nTable 8-30. CSR Bit Field Definitions—IRQ Enable Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xE0 0IRQ_EN\nWhen enabled by this field, the IRQ output is driven high to communicate IRQ events.\n0 = IRQ output is high-impedance (default)\n1 = IRQ output is driven high when a bit is set in registers 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, or 0xF5\nthat also has the corresponding IRQ_EN bit set to enable the interrupt conditionRW\n0xE17CHA_CONTENTION_DET_EN\n0 = CHA_CONTENTION_DET_ERR is masked (default)\n1 = CHA_CONTENTION_DET_ERR is enabled to generate IRQ eventsRW\n6CHA_FALSE_CTRL_EN\n0 = CHA_FALSE_CTRL_ERR is masked (default)\n1 = CHA_FALSE_CTRL_ERR is enabled to generate IRQ eventsRW\n5CHA_TIMEOUT_EN\n0 = CHA_TIMEOUT_ERR is masked (default)\n1 = CHA_TIMEOUT_ERR is enabled to generate IRQ eventsRW\n4CHA_LP_TX_SYNC_EN\n0 = CHA_LP_TX_SYNC_ERR is masked (default)\n1 = CHA_LP_TX_SYNC_ERR is enabled to generate IRQ eventsRW\n3CHA_ESC_ENTRY_EN\n0 = CHA_ESC_ENTRY_ERR is masked (default)\n1 = CHA_ESC_ENTRY_ERR is enabled to generate IRQ eventsRW\n2CHA_EOT_SYNC_EN\n0 = CHA_EOT_SYNC_ERR is masked (default)\n1 = CHA_EOT_SYNC_ERR is enabled to generate IRQ eventsRW\n1CHA_SOT_SYNC_EN\n0 = CHA_SOT_SYNC_ERR is masked (default)\n1 = CHA_SOT_SYNC_ERR is enabled to generate IRQ eventsRW\n0CHA_SOT_BIT_EN\n0 = CHA_SOT_BIT_ERR is masked (default)\n1 = CHA_SOT_BIT_ERR is enabled to generate IRQ eventsRW\n0xE27CHA_DSI_PROTOCOL_EN\n0 = CHA_DSI_PROTOCOL_ERR is masked (default)\n1 = CHA_DSI_PROTOCOL_ERR is enabled to generate IRQ eventsRW\n6 Reserved R\n5CHA_INVALID_LENGTH_EN\n0 = CHA_INVALID_LENGTH_ERR is masked (default)\n1 = CHA_INVALID_LENGTH_ERR is enabled to generate IRQ eventsRW\n4 Reserved. R\n3CHA_DATATYPE_EN\n0 = CHA_DATATYPE_ERR is masked (default)\n1 = CHA_ DATATYPE_ERR is enabled to generate IRQ eventsRW\n2CHA_CHECKSUM_EN\n0 = CHA_CHECKSUM_ERR is masked (default)\n1 = CHA_CHECKSUM_ERR is enabled to generate IRQ eventsRW\n1CHA_UNC_ECC_EN\n0 = CHA_UNC_ECC_ERR is masked (default)\n1 = CHA_UNC_ECC_ERR is enabled to generate IRQ eventsRW\n0CHA_COR_ECC_EN\n0 = CHA_COR_ECC_ERR is masked (default)\n1 = CHA_COR_ECC_ERR is enabled to generate IRQ eventsRW\n0xE37 Reserved R\n6CHB_FALSE_CTRL_EN\n0 = CHB_FALSE_CTRL_ERR is masked (default)\n1 = CHB_FALSE_CTRL_ERR is enabled to generate IRQ eventsRW\n5 Reserved. R\n4CHB_LP_TX_SYNC_EN\n0 = CHB_LP_TX_SYNC_ERR is masked (default)\n1 = CHB_LP_TX_SYNC_ERR is enabled to generate IRQ eventsRWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n60 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-30. CSR Bit Field Definitions—IRQ Enable Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n3 Reserved R\n2CHB_EOT_SYNC_EN\n0 = CHB_EOT_SYNC_ERR is masked (default)\n1 = CHB_EOT_SYNC_ERR is enabled to generate IRQ eventsRW\n1CHB_SOT_SYNC_EN\n0 = CHB_SOT_SYNC_ERR is masked (default)\n1 = CHB_SOT_SYNC_ERR is enabled to generate IRQ eventsRW\n0CHB_SOT_BIT_EN\n0 = CHB_SOT_BIT_ERR is masked (default)\n1 = CHB_SOT_BIT_ERR is enabled to generate IRQ eventsRW\n0xE47CHB_DSI_PROTOCOL_EN\n0 = CHB_DSI_PROTOCOL_ERR is masked (default)\n1 = CHB_DSI_PROTOCOL_ERR is enabled to generate IRQ eventsRW\n6 Reserved R\n5CHB_INVALID_LENGTH_EN\n0 = CHB_INVALID_LENGTH_ERR is masked (default)\n1 = CHB_INVALID_LENGTH_ERR is enabled to generate IRQ eventsRW\n4 Reserved R\n3CHB_DATATYPE_EN\n0 = CHB_DATATYPE_ERR is masked (default)\n1 = CHB_ DATATYPE_ERR is enabled to generate IRQ eventsRW\n2CHB_CHECKSUM_EN\n0 = CHB_CHECKSUM_ERR is masked (default)\n1 = CHB_CHECKSUM_ERR is enabled to generate IRQ eventsRW\n1CHB_UNC_ECC_EN\n0 = CHB_UNC_ECC_ERR is masked (default)\n1 = CHB_UNC_ECC_ERR is enabled to generate IRQ eventsRW\n0CHB_COR_ECC_EN\n0 = CHB_COR_ECC_ERR is masked (default)\n1 = CHB_COR_ECC_ERR is enabled to generate IRQ eventsRW\n0xE57I2C_DEFR_EN\n0 = I2C_DEFR is masked (default)\n1 = I2C_DEFR is enabled to generate IRQ events.RW\n6NAT_I2C_FAIL_EN.\n0 = NAT_I2C_FAIL is masked. (default)\n1 = NAT_I2C_FAIL is enabled to generate IRQ events.RW\n5AUX_SHORT_EN\n0 = AUX_SHORT is masked. (default)\n1 = AUX_SHORT is enabled to generate IRQ events.RW\n4AUX_DEFR_EN.\n0 = AUX_DEFR is masked. (default)\n1 = AUX_DEFR is enabled to generate IRQ events.RW\n3AUX_RPLY_TOUT_EN.\n0 = AUX_RPLY_TOUT is masked (default).\n1 = AUX_RPLY_TOUT is enabled to generate IRQ events.RW\n2 Reserved. R\n1 Reserved. R\n0SEND_INT_EN.\n0 = SEND_INT is masked (default)\n1 = SEND_INT is enabled to generate IRQ events.RW\n0xE67 Reserved RW\n6 Reserved RW\n5PLL_UNLOCK_EN\n0 = PLL_UNLOCK is masked (default)\n1 = PLL_UNLOCK is enabled to generate IRQ eventsRWwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 61\nProduct Folder Links: SN65DSI86\nTable 8-30. CSR Bit Field Definitions—IRQ Enable Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n4 Reserved RW\n3HPD_REPLUG_EN.\n0 = HPD_REPLUG is masked (default)\n1 = HPD_REPLUG is enabled to generate IRQ eventsRW\n2HPD_REMOVAL _EN\n0 = HPD_REMOVAL is masked. (default)\n1 = HPD_REMOVAL is enabled to generate IRQ events.RW\n1HPD_INSERTION_EN\n0 = HPD_INSERTION is masked. (default)\n1 = HPD_INSERTION is enabled to generate IRQ events.RW\n0IRQ_HPD_EN\n0 = IRQ_HPD is masked. (default)\n1 = IRQ_HPD is enabled to generate IRQ events.RW\n0xE77DPTL_VIDEO_WIDTH_PROG_ERR_EN\n0 = DPTL_VIDEO_WIDTH_PROG_ERR is masked. (default)\n1 = DPTL_VIDEO_WIDTH_PROG_ERR is enabled to generate IRQ events.RW\n6DPTL_LOSS_OF_DP_SYNC_LOCK_EN\n0 = DPTL_LOSS_OF_DP_SYNC_LOCK_ERR is masked. (default)\n1 = DPTL_LOSS_OF_DP_SYNC_LOCK_ERR is enabled to generate IRQ events.RW\n5DPTL_UNEXPECTED_DATA_EN\n0 = DPTL_UNEXPECTED_DATA_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_DATA_ERR is enabled to generate IRQ events.RW\n4DPTL_UNEXPECTED_SECDATA_EN\n0 = DPTL_UNEXPECTED_SECDATA_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_SECDATA_ERR is enabled to generate IRQ events.RW\n3DPTL_UNEXPECTED_DATA_END_EN\n0 = DPTL_UNEXPECTED_DATA_END_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_DATA_END_ERR is enabled to generate IRQ events.RW\n2DPTL_UNEXPECTED_PIXEL_DATA_EN\n0 = DPTL_UNEXPECTED_PIXEL_DATA_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_PIXEL_DATA_ERR is enabled to generate IRQ events.RW\n1DPTL_UNEXPECTED_HSYNC_EN\n0 = DPTL_UNEXPECTED_HSYNC_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_HSYNC_ERR is enabled to generate IRQ events.RW\n0DPTL_UNEXPECTED_VSYNC_EN\n0 = DPTL_UNEXPECTED_VSYNC_ERR is masked. (default)\n1 = DPTL_UNEXPECTED_VSYNC_ERR is enabled to generate IRQ events.RW\n0xE87 Reserved RW\n1DPTL_SECONDARY_DATA_PACKET_PROG_ERR_EN.\n0 = DPTL_SECONDARY_DATA_PACKET_PROG_ERR is masked. (default)\n1 = DPTL_SECONDARY_DATA_PACKET_PROG_ERR is enabled to generate IRQ events.RW\n0DPTL_DATA_UNDERRUN_EN\n0 = DPTL_DATA_UNDERRUN_ERR is masked. (default)\n1 = DPTL_DATA_UNDERRUN_ERR is enabled to generate IRQ events.RW\n0xE97:6 Reserved.\n5LT_EQ_CR_ERR_EN.\n0 = LT_EQ_CR_ERR is masked (default)\n1 = LT_EQ_CR_ERR is enabled to generate IRQ events.RW\n4LT_EQ_LPCNT_ERR_EN.\n0 = LT_EQ_LPCNT_ERR is masked (default)\n1 = LT_EQ_LPCNT_ERR is enabled to generate IRQ events.RW\n3LT_CR_MAXVOD_ERR_EN.\n0 = LT_CR_MAXVOD_ERR is masked (default)\n1 = LT_CR_MAXVOD_ERR is enabled to generate IRQ events.RW\n2LT_CR_LPCNT_ERR_EN.\n0 = LT_CR_LPCNT_ERR is masked (default)\n1 = LT_CR_LPCNT_ERR is enabled to generate IRQ events.RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n62 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-30. CSR Bit Field Definitions—IRQ Enable Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n1LT_FAIL_EN.\n0 = LT_FAIL is masked (default)\n1 = LT_FAIL is enabled to generate IRQ events.RW\n0LT_PASS_EN.\n0 = LT_PASS is masked (default)\n1 = LT_PASS is enabled to generate IRQ events.RW\nTable 8-31. CSR Bit Field Definitions—IRQ Status Registers\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xF07CHA_CONTENTION_DET_ERR. When LP high or LP low fault is detected on the DSI channel A\ninterface, this bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic\nread/write request or unsolicited BTA with a Acknowledge and Error Report.RCU\n6CHA_FALSE_CTRL_ERR. When the DSI channel A packet processor detects a LP Request not\nfollowed by the remainder of a valid escape or turnaround sequence or if it detects a HS request not\nfollowed by a bridge state (LP-00), this bit is set; this bit is cleared by writing a 1 or when the\nSN65DSI86 responds to a Generic read/write request or unsolicited BTA with a Acknowledge and Error\nReport.RCU\n5CHA_TIMEOUT_ERR. When the HS Rx Timer or the LP TX timer expires, this bit is set; this bit is\ncleared by writing a 1 or when the DSN65DSI86 responds to a Generic read/write request or unsolicited\nBTA with a Acknowledge and Error Report.RCU\n4CHA_LP_TX_SYNC_ERR. When the DSI channel A packet processor detects data not synchronized to\na byte boundary at the end of Low-Power transmission, this bit is set; this bit is cleared by writing a 1 or\nwhen the SN65DSI86 responds to a Generic read/write request or unsolicited BTA with a Acknowledge\nand Error Report.RCU\n3CHA_ESC_ENTRY_ERR. When the DSI Channel A packet processor detects an unrecognized Escape\nMode Entry Command, this bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds\nto a Generic read request or unsolicited BTA with a Acknowledge and Error Report.RCU\n2CHA_EOT_SYNC_ERR. When the DSI channel A packet processor detects that the last byte of a HS\ntransmission does not match a byte boundary, this bit is set; this bit is cleared by writing a 1 or when the\nSN65DSI86 responds to a Generic read/write request or unsolicited BTA with a Acknowledge and Error\nReport.RCU\n1CHA_SOT_SYNC_ERR. When the DSI channel A packet processor detects a corrupted SOT in a way\nthat proper synchronization cannot be expected, this bit is set; this bit is cleared by writing a 1 or when\nthe SN65DSI86 responds to a Generic read/write request or unsolicited BTA with a Acknowledge and\nError Report.RCU\n0CHA_SOT_BIT_ERR When the DSI channel A packet processor detects an SoT leader sequence bit\nerror, this bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic\nread/write request or unsolicited BTA with a Acknowledge and Error Report.RCU\n0xF17CHA_DSI_PROTOCOL_ERR. When the DSI channel A packet processor detects a DSI protocol error,\nthis bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic read/write\nrequest or unsolicited BTA with a Acknowledge and Error Report.RCU\n6 Reserved. R\n5CHA_INVALID_LENGTH_ERR. When the DSI channel A packet processor detects an invalid\ntransmission length, this bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to\na Generic read/write request or unsolicited BTA with a Acknowledge and Error Report.RCU\n4 Reserved. R\n3CHA_DATATYPE_ERR. When the DSI channel A packet processor detects a unrecognized DSI data\ntype, this bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic read/\nwrite request or unsolicited BTA with a Acknowledge and Error Report.RCU\n2CHA_CHECKSUM_ERR When the DSI channel A packet processor detects a data stream CRC error,\nthis bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic read/write\nrequest or unsolicited BTA with a Acknowledge and Error Report.RCU\n1CHA_UNC_ECC_ERR When the DSI channel A packet processor detects an uncorrectable ECC error,\nthis bit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic read/write\nrequest or unsolicited BTA with a Acknowledge and Error Report.RCUwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 63\nProduct Folder Links: SN65DSI86\nTable 8-31. CSR Bit Field Definitions—IRQ Status Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n0CHA_COR_ECC_ERR When the DSI channel A packet processor detects a correctable ECC error, this\nbit is set; this bit is cleared by writing a 1 or when the SN65DSI86 responds to a Generic read/write\nrequest or unsolicited BTA with a Acknowledge and Error Report.RCU\n0xF27 Reserved R\n6CHB_FALSE_CTRL_ERR. When the DSI channel B packet processor detects a LP Request not\nfollowed by the remainder of a valid escape or turnaround sequence or if it detects a HS request not\nfollowed by a bridge state (LP-00), this bit is set; this bit is cleared by writing a 1.RCU\n5 Reserved R\n4CHB_LP_TX_SYNC_ERR. When the DSI channel B packet processor detects data not synchronized to\na byte boundary at the end of Low-Power transmission, this bit is set; this bit is cleared by writing a 1.RCU\n3 Reserved R\n2CHB_EOT_SYNC_ERR. When the DSI channel B packet processor detects that the last byte of a HS\ntransmission does not match a byte boundary, this bit is set; this bit is cleared by writing a 1.RCU\n1CHB_SOT_SYNC_ERR. When the DSI channel B packet processor detects a corrupted SOT in a way\nthat proper synchronization cannot be expected, this bit is set; this bit is cleared by writing a 1.RCU\n0CHB_SOT_BIT_ERR When the DSI channel B packet processor detects an SoT leader sequence bit\nerror, this bit is set; this bit is cleared by writing a 1.RCU\n0xF37CHB_DSI_PROTOCOL_ERR. When the DSI channel B packet processor detects a DSI protocol error,\nthis bit is set; this bit is cleared by writing a 1.RCU\n6 Reserved. R\n5CHB_INVALID_LENGTH_ERR. When the DSI channel B packet processor detects an invalid\ntransmission length, this bit is set; this bit is cleared by writing a 1.RCU\n4 Reserved. R\n3CHB_DATATYPE_ERR. When the DSI channel B packet processor detects a unrecognized DSI data\ntype, this bit is set; this bit is cleared by writing a 1.RCU\n2CHB_CHECKSUM_ERR When the DSI channel B packet processor detects a data stream CRC error,\nthis bit is set; this bit is cleared by writing a 1.RCU\n1CHB_UNC_ECC_ERR When the DSI channel B packet processor detects an uncorrectable ECC error,\nthis bit is set; this bit is cleared by writing a 1.RCU\n0CHB_COR_ECC_ERR When the DSI channel B packet processor detects a correctable ECC error, this\nbit is set; this bit is cleared by writing a 1.RCU\n0xF47I2C_DEFR. This field is set if an I2C-Over-Aux request has received a specific number X of\nI2C_DEFER from Sink. For direct method (clock stretching), the number X is 44. For indirect method,\nthe number X is:\n44 for AUX_LENGTH = 1\n66 for AUX_LENGTH = 2\n110 for 2 < AUX_LENGTH ≤ 4\n154 for 4 < AUX_LENGTH ≤ 6\n198 for 6< AUX_LENGTH ≤ 8\n287 for 8< AUX_LENGTH ≤ 12\n375 for 12 < AUX_LENGTH ≤ 16RCU\n6 NAT_I2C_FAIL. This bit is set if the I2C-Over-Aux or Native AUX failed. RCU\n5AUX_SHORT. If set, then the bytes written or received did not match requested Length. SW should\nread AUX_LENGTH field to determine the amount of data written or read.RCU\n4AUX_DEFR. The SN65DSI86 will attempt to complete an AUX request by retrying the request seven\ntimes. This field is set if the response to the last retry is an AUX_DEFER.RCU\n3AUX_RPLY_TOUT. The SN65DSI86 will attempt to complete an AUX request by retrying the request\nseven times. This field is set if the response to the last retry is a 400-µs timeout.RCU\n2 Reserved. R\n1 Reserved. R\n0 SEND_INT. This field is set whenever the SEND bit transitions from 1 to 0. RCU\n0xF57 Reserved RCU\n6 Reserved RCU\n5 PLL_UNLOCK This bit is set whenever the PLL Lock status transitions from LOCK to UNLOCK. RCUSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n64 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 8-31. CSR Bit Field Definitions—IRQ Status Registers (continued)\nADDRESS BIT(S) DESCRIPTION ACCESS\n4 Reserved RCU\n3 HPD_REPLUG. This field is set whenever the SN65DSI86 detects a replug event on the HPD pin. RCU\n2 HPD_REMOVAL. This field is set whenever the SN65DSI86 detects a DisplayPort device removal. RCU\n1 HPD_INSERTION. This field is set whenever the SN65DSI86 detects a DisplayPort device insertion. RCU\n0 IRQ_HPD. This field is set whenever the SN65DSI86 detects a IRQ_HPD event. RCU\n0xF67VIDEO_WIDTH_PROG_ERR. This field is set whenever the video parameters define more bytes of\npixel data than can be transferred in the allotted video portion of the line time.RCU\n6LOSS_OF_DP_SYNC_LOCK_ERR. This field is set whenever the DP sync generator has lost lock with\nthe DSI sync stream.RCU\n5DPTL_UNEXPECTED_DATA_ERR. This field is set whenever a data token at in the video stream from\nDSI was found at an invalid time syntactically.RCU\n4DPTL_UNEXPECTED_SECDATA_ERR. This field is set whenever a secondary data start token at in\nthe video stream was found at an invalid time syntactically.RCU\n3DPTL_UNEXPECTED_DATA_END_ERR. This field is set whenever a data end token at in the video\nstream from DSI was found at an invalid time syntactically.RCU\n2DPTL_UNEXPECTED_PIXEL_DATA_ERR. This field is set whenever a video data start token at in the\nvideo stream from DSI was found at an invalid time syntactically.RCU\n1DPTL_UNEXPECTED_HSYNC_ERR. This field is set whenever a horizontal sync token at in the video\nstream from DSI was found at an invalid time syntactically.RCU\n0DPTL_UNEXPECTED_VSYNC_ERR. This field is set whenever a vertical sync token at in the video\nstream from DSI was found at an invalid time syntactically.RCU\n0xF77 Reserved RCU\n1DPTL_SECONDARY_DATA_PACKET_PROG_ERR. This field is set whenever a secondary data\npacket has an invalid length.RCU\n0DPTL_DATA_UNDERRUN_ERR. This field is set whenever no data was received when data should\nhave been ready.RCU\n0xF87:6 Reserved. R\n5LT_EQ_CR_ERR. This field is set whenever link training fails in the channel equalization phase due to\nLANEx_CR_DONE not set.RCU\n4LT_EQ_LPCNT_ERR. This field is set whenever link training fails in the channel equalization phase due\nto the loop count being greater than five.RCU\n3LT_CR_MAXVOD_ERR. This field is set whenever link training fails in clock recovery phase due to\nmaximum VOD reached without LANEx_CR_DONE bit(s) getting set.RCU\n2LT_CR_LPCNT_ERR. This field is set whenever link training fails in the clock recovery phase due to\nsame VOD being used five times.RCU\n1 LT_FAIL. This field is set whenever the Semi-Auto link training fails to train the DisplayPort Link. RCU\n0 LT_PASS. This field is set whenever the Semi-Auto link training successfully trains the DisplayPort Link. RCUwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 65\nProduct Folder Links: SN65DSI86\nTable 8-32. Page Select Register\nADDRESS BIT(S) DESCRIPTION ACCESS\n0xFF 2:0PAGE_SELECT. This field is used to select a different page of 254 bytes. This register will reside in\nthe same location for each Page. This register is independently controlled by either DSI or I2C. This\nmeans the value written or read by I2C does not affect the value written or read by DSI, or vice-\nversa. The SN65DSI86 can only access Page 0 and Page 7.\n000 = Standard CFR registers. (Default)\n111 = TI Test Registers.RW\nTable 8-33. Page 7\nADDRESS BIT(S) DESCRIPTION ACCESS\n0x16 0ASSR_OVERRIDE.\n0 = ASSR_CONTROL is read-only. (Default)\n1 = ASSR_CONTROL is read/write.RWSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n66 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n9 Application and Implementation\nNote\nInformation in the following applications sections is not part of the TI component specification, and TI\ndoes not warrant its accuracy or completeness. TI’s customers are responsible for determining\nsuitability of components for their purposes. Customers should validate and test their design\nimplementation to confirm system functionality\n9.1 Application Information\nThe SN65DSI86  is a bridge which interfaces DSI to embedded DisplayPort (eDP). Because it does not support\nHDCP, it is only intended for internal applications like notebooks and tablets. Four lanes of HBR2 (17.28 Gbps\nbefore 8b10b encoding) and dual DSI input (up to 8 lanes at 1.5 Gbps for a total of 12 Gbps) allows the\nSN65DSI86 to support large high resolution eDP panels.\nEDP_ML2P\nEDP_ML1PEDP_ML1N\nEDP_ML0PEDP_ML0N\nEDP_AUXP\nEDP_AUXN\nR4 51KHPDRHPDC6\n1.0uF\nI2C_SDAI2C_SCL\nIRQ\nREFCLKIRQR3\n100K\nR5\n100KDP_PWRC14\n0.1uF\nC15\n0.2uFRESETNC26\n0.01uFC28\n0.1uFC29\n1uFVPLL_1.8V\nVPLL_1.8V\nDSI_A0P\nDSI_A0N\nDSI_A1N\nDSI_A2P\nDSI_A3PDSI_A2N\nDSI_A3N\nDSI_ACLKNDSI_ACLKPDSI_A1PR2\n4.7KR1\n4.7KU1\nSN65DSI86DA0PH3\nDA1PH4\nDA2PH6\nDA3PH7\nDACPH5\nDB0PC2\nDB1PD2\nDB2PF2\nDB3PG2\nDBCPE2DA0NJ3\nDA1NJ4\nDA2NJ6\nDA3NJ7\nDACNJ5\nDB0NC1\nDB1ND1\nDB2NF1\nDB3NG1\nDBCNE1ML0PF8ML1PE8ML2PC8ML3PB8\nAUXPH8ML0NF9ML1NE9ML2NC9ML3NB9\nAUXNH9\nGPIO4B4\nGPIO3A6\nGPIO2A5\nGPIO1A4HPDJ8TEST2B5\nTEST3B7VccioA2\nVccioB6\nVpllD9\nADDRA1 SDAJ1 SCLH1\nENB1VccaH2\nTEST1B3\nREFCLKA7IRQA3VccaB2\nVccaG9\nVccD6\nVccaE6\nVccaA9\nVccD5\nVccJ2\nGND\nA8GND\nD8GND\nE4GND\nE5GND\nF4GND\nF5GND\nF6GND\nG8VccJ9C8\n10uFC10\n0.1uFC9\n0.1uF\nIO_1.8V\nDSI_B1NDSI_B0NDSI_B0PIO_1.8V IO_1.8V\nDSI_B3PDSI_B2NDSI_B2P\nDSI_BCLKPDSI_B3NDSI_B1P\nDSI_BCLKNIO_1.8V\nDSI_A0NDSI_A0P\nDSI_A1NDSI_A1P\nDSI_A2NDSI_A2P\nDSI_A3NDSI_A3P\nDSI_ACLKP\nDSI_ACLKN\nDSI_B0NDSI_B0P\nDSI_B1N\nDSI_B2NDSI_B2PDSI_B1P\nDSI_B3P\nDSI_B3N\nDSI_BCLKNDSI_BCLKPC1\n1.0uFC7\n0.1uFC2\n0.1uF\nR6\nDNIC3\n0.01uF\nADDR = 1, Slave Addr = 0x2D (0101101)\nADDR = 0, Slave Addr = 0x2C (0101100)C4\n0.1uF\nML3N\nML3P\nML2PML2N\nML1N\nML1P\nML0PML0N\nAUXP\nAUXNVCC_1.2VVCC_1.2V\nC5\n10uFC11\n0.01uFC12\n0.1uFC13\n0.01uFVCCA_1.2V\nVCCA_1.2V\nC31\n0.1uFGPIO3GPIO4\nGPIO2\nGPIO1C16 100nF\nC17 100nF\nC18 100nF\nC19 100nF\nC20 100nF\nC21 100nF\nC22 100nF\nC23 100nF\nC24 100nF\nC25 100nFEDP_ML3N\nEDP_ML2NEDP_ML3P\nCopyright © 2017, Texas Instruments Incorporated\nFigure 9-1. Typical Implementationwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 67\nProduct Folder Links: SN65DSI86\n9.2 Typical Application\n9.2.1 1080p (1920x1080 60 Hz) Panel\nTO DSI SOURCE\nTO 27 MHz CLK SOURCETO EDP PANEL\nGPIO[3:1]= 3\'b011 is 27 MHz\nADDR = 0, Slave Addr = 0X2C (0101100)ML1N\nML1P\nML0N\nML0P\nAUXP\nAUXNIO_1.8 VIO_1.8 V\nVCC_1.2 V VCCA_1.2 V VPLL_1.8 V\nIO_1.8 VEDP_ML1N\nEDP_ML1P\nEDP_ML0N\nEDP_ML0P\nEDP_AUXP\nEDP_AUXN\nHPDRESETN\nI2C_SCL\nI2C_SDA\nDSI_A0P\nDSI_A0N\nDSI_A1N\nDSI_A2NDSI_A1P\nDSI_A3NDSI_A2P\nDSI_A3P\nDSI_ACLKNDSI_ACLKPIRQ\nREFCLK_27 MHzC3 DNIR2\n2 KΩ\nC6 DNIC5 DNI\nR3 51 KΩ\nR6\nDNIU1\nSN65DSI86ZQEDA0PH3\nDA1PH4\nDA2PH6\nDA3PH7\nDACPH5\nDB0PC2\nDB1PD2\nDB2PF2\nDB3PG2\nDBCPE2DA0NJ3\nDA1NJ4\nDA2NJ6\nDA3NJ7\nDACNJ5\nDB0NC1\nDB1ND1\nDB2NF1\nDB3NG1\nDBCNE1ML0PF8ML1PE8ML2PC8ML3PB8\nAUXPH8ML0NF9ML1NE9ML2NC9ML3NB9\nAUXNH9\nGPIO4B4\nGPIO3A6\nGPIO2A5\nGPIO1A4HPDJ8\nTEST2B5\nTEST3B7VccioA2\nVccioB6\nVpllD9\nADDRA1SDAJ1SCLH1ENB1\nVccaH2\nTEST1B3\nREFCLKA7IRQA3VccaB2\nVccaG9\nVccD6\nVccaE6\nVccaA9\nVccD5\nVccJ2\nGND\nA8GND\nD8GND\nE4GND\nE5GND\nF4GND\nF5GND\nF6GND\nG8VccJ9\nR4\n10 KΩ\nC7\n0.1 F µR1\n2 KΩ\nC2 DNI\nR5\n10 KΩC1 DNI\nC4 DNI\nCopyright © 2017, Texas Instruments Incorporated\nFigure 9-2. 1080p (1920 × 1080 60 Hz) Panel\n9.2.1.1 Design Requirements\nFor this design example, use the parameters listed in Table 9-1 .\nTable 9-1. Design Parameters\nDESIGN PARAMETER EXAMPLE VALUE\nVCC and V CCA Supply 1.2 V (± 5%)\nVCCIO Supply 1.8 V (± 10%)\nVPLL Supply 1.8 V (± 10%)\nClock Source (REFCLK or DSIA_CLK) REFCLK\nREFCLK Frequency (12 MHz, 19.2 MHz, 26 MHz, 27 MHz, or 38.4 MHz) 27 MHz\nDSIA Clock Frequency N/A\neDP PANEL EDID RESOLUTION INFORMATION\nPixel Clock (MHz) 148.5\nHorizontal Active (pixels) 1920\nHorizontal Blanking (pixels) 280\nVertical Active (lines) 1080\nVertical Blanking (lines) 45\nHorizontal Sync Offset (pixels) 88\nHorizontal Sync Pulse Width (pixels) 44\nVertical Sync Offset (lines) 4\nVertical Sync Pulse Width (lines) 5\nHorizontal Sync Pulse Polarity Positive\nVertical Sync Pulse Polarity Positive\nColor Bit Depth (6 bpc or 8 bpc) 8 (24 bpp)SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n68 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nTable 9-1. Design Parameters (continued)\nDESIGN PARAMETER EXAMPLE VALUE\neDP PANEL DPCD INFORMATION\neDP Version (1.0, 1.1, 1.2, 1.3, or 1.4) 1.3\nNumber of eDP lanes (1, 2, or 4) 2\nDatarate Supported (1.62 Gbps, 2.16 Gbps, 2.43 Gbps, 2.70 Gbps, 3.24 Gbps, 4.32 Gbps, or 5.40\nGbps)2.70\nDSI INFORMATION\nAPU or GPU Maximum number of DSI Lanes (1 through 8) 4\nAPU or GPU Maximum DSI Clock Frequency (MHz) 500\nSingle or Dual DSI Single\nDual DSI Configuration (Odd/Even or Left/Right) NA\n9.2.1.2 Detailed Design Procedure\n9.2.1.2.1 eDP Design Procedure\nThe panel, as indicated by the panel EDID information, supports a pixel clock of 148.5 MHz at 8 bpc or 24 bpp.\nThis translates to a stream bit rate of 3.564 Gbps.\nStream Bit Rate = PixelClock × bpp\nStream Bit Rate = 148.5 × 24\nStream Bit Rate = 3.564 Gbps\n9.2.1.2.2\nIn order to support the panel stream bit rate, the SN65DSI86  eDP interface must be programmed so that the\ntotal eDP data rate is greater than the stream bit rate. In this example, the total eDP data rate is calculated as:\neDP Total Bit Rate = #_of_eDP_Lanes × DataRate × 0.80\neDP Total Bit Rate = 2 × 2.7 Gbps × 0.80\neDP Total Bit Rate = 4.32 Gbps.\nIn this example, the eDP panel DPCD registers indicates eDP1.3 compliant, supports a data rate of 2.7 Gbps per\nlane, and a lane count of 2. For this panel to operate properly, the SN65DSI86 would need to be programmed to\nenable two lanes at a data rate of 2.7 Gbps each.\nIn portable and mobile applications, total power consumption is a key care-about. In this example, the panel\nchosen is eDP 1.3 compliant and supports a data rate of 2.7 Gbps per lane. The SN65DSI86  power\nconsumption is a function of the data rate and number of active DP lanes. By reducing the number of active\nlanes and/or data rate, the total power consumption of the SN65DSI86  is reduced as well. If a panel which\nsupported data rate of 5.4 Gbps was chosen over the example panel, the number of lanes could be reduced\nfrom two lanes to one lane. Or if a panel which was eDP1.4 compliant and support 2.43 Gbps data rate was\nchosen over the example panel, the data rate could be reduced from 2.7 Gbps to 2.43 Gbps.\nOnce the eDP interface parameters are known, the video resolution parameters required by the panel need to\nbe programmed into the SN65DSI86. For this example, the parameters programmed would be the following:\nHorizontal Active = 1920 or 0x780\nCHA_ACTIVE_LINE_LENGTH_LOW = 0x80\nCHA_ACTIVE_LINE_LENGTH_HIGH = 0x07\nVertical Active = 1080 or 0x438\nCHA_VERTICAL_DISPLAY_SIZE_LOW = 0x38\nCHA_VERTICAL_DISPLAY_SIZE_HIGH = 0x04www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 69\nProduct Folder Links: SN65DSI86\nHorizontal Pulse Width = 44 or 0x2C\nHORIZONTAL_PULSE_WIDTH_LOW = 0x2C\nHORIZONTAL_PULSE_WIDTH_HIGH = 0x00\nVertical Pulse Width = 5\nVERTICAL_PULSE_WIDTH_LOW = 0x05\nVERTICAL_PULSE_WIDTH_HIGH = 0x00\nHorizontal Backporch = HorizontalBlanking – (HorizontalSyncOffset +\nHorizontalSyncPulseWidth)\nHorizontal Backporch = 280 – (88 + 44)\nCHA_HORIZONTAL_BACK_PORCH = 0x94\nHorizontal Backporch = 148 or 0x94\nVertical Backporch = VerticalBlanking – (VerticalSyncOffset + VerticalSyncPulseWidth)\nVertical Backporch = 45 – (4 + 5)\nVertical Backporch = 36 or 0x24\nCHA_VERTICAL_BACK_PORCH = 0x24\nHorizontal Frontporch = HorizontalSyncOffset\nHorizontal Frontporch = 88 or 0x58\nCHA_HORIZONTAL_FRONT_PORCH = 0x58\nVertical Frontporch = VerticalSyncOffset\nVertical Frontporch = 4\nCHA_VERTICAL_FRONT_PORCH = 0x04\n9.2.1.2.3 DSI Design Procedure\nThe APU or GPU must provide a stream bit rate as required by the eDP panel. In this particular example, the\neDP panel stream rate is 3.564 Gbps. Because the SN65DSI86  can support a DSI clock rate of up to 750 MHz\n(or 1.5 Gbps), the minimum number of required DSI lanes to meet the stream bit rate is three lanes. But in this\nexample, the APU/GPU maximum DSI Clock frequency is 500 MHz. This means the number of required DSI\nlanes will need to be increased to four lanes.\n9.2.1.2.4\nMin number of DSI Lanes = StreamBitRate / MaxDSIClock\nMin number of DSI Lanes = 3564 MBps / (500 × 2)\nMin number of DSI Lanes = 3.564 lanes\nMin number of DSI Lanes = 4 lanes\nAfter determining the number of required DSI lanes, the next step is to determine the minimum required DSI\nclock frequency to support the stream bit rate of the eDP panel. For 24 bpp, the calculation for determining the\nDSI clock frequency is as follows:\nMin Required DSI Clock Frequency = StreamBitRate / (Min_Number_DSI_Lanes × 2)\nMin Required DSI Clock Frequency = 3564 / (4 × 2)\nMin Required DSI Clock Frequency = 445.5 MHz\nIn this example, the clock source for the SN65DSI86  is the REFCLK pin. When using the REFCLK as the clock\nsource, any DSI Clock frequency is supported. But if the clock source was instead the DSI A clock, then the\nrequired DSI Clock frequency would need to change to a frequency supported by the SN65DSI86 . When\noperating in this mode, any one of the following DSI A clock frequencies can be used: 384 MHz, 416 MHz, 460.8SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n70 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nMHz, 468 MHz, or 486 MHz. In most cases, a eDP panel would support some variation from the ideal pixel clock\nfrequency. For this example either 416 MHz or 460.8 MHz could be tried.\nThe DSI mode, number of lanes, and DSI Clock frequency needs to be programmed into the\nSN65DSI86.\nDSI_CHANNEL_MODE = 1 (Single DSI Channel)\nCHA_DSI_LANES = 3 (for 4 lanes)\nCHA_DSI_CLK_RANGE = 0x59 (equates to 445 MHz)\nREFCLK_FREQ = 0x06 (27 MHz)\n9.2.1.2.5 Example Script\nThis example configures the SN65DSI86 for the following configuration:\n<aardvark>\n<configure i2c="1" spi="1" gpio="0" tpower="1" pullups="0" /> \n<i2c_bitrate khz="100" /> \n======REFCLK 27MHz ====== \n<i2c_write addr="0x2D" count="1" radix="16">0A 06</i2c_write> /> \n======Single 4 DSI lanes====== \n<i2c_write addr="0x2D" count="1" radix="16">10 26</i2c_write> /> \n======DSIA CLK FREQ 445MHz====== \n<i2c_write addr="0x2D" count="1" radix="16">12 59</i2c_write> /> \n======enhanced framing and ASSR====== \n<i2c_write addr="0x2D" count="1" radix="16">5A 05</i2c_write> /> \n======2 DP lanes no SSC====== \n<i2c_write addr="0x2D" count="1" radix="16">93 20</i2c_write> /> \n======HBR (2.7Gbps)====== \n<i2c_write addr="0x2D" count="1" radix="16">94 80</i2c_write> /> \n======PLL ENABLE====== \n<i2c_write addr="0x2D" count="1" radix="16">0D 01</i2c_write> <sleep ms="10" /> \n======Verify PLL is locked====== \n<i2c_write addr="0x2D" count="0" radix="16">0A</i2c_write> /> \n<i2c_read addr="0x2D" count="2" radix="16">00</i2c_read> <sleep ms="10" /> \n======POST-Cursor2 0dB ====== \n<i2c_write addr="0x2D" count="1" radix="16">95 00</i2c_write> /> \n======Write DPCD Register 0x0010A in Sink to Enable ASSR====== \n<i2c_write addr="0x2D" count="1" radix="16">64 01</i2c_write> /> \n<i2c_write addr="0x2D" count="1" radix="16">74 00</i2c_write> /> \n<i2c_write addr="0x2D" count="1" radix="16">75 01</i2c_write> /> \n<i2c_write addr="0x2D" count="1" radix="16">76 0A</i2c_write> /> \n<i2c_write addr="0x2D" count="1" radix="16">77 01</i2c_write> /> \n<i2c_write addr="0x2D" count="1" radix="16">78 81</i2c_write> <sleep ms="10" /> \n======Semi-Auto TRAIN ====== \n<i2c_write addr="0x2D" count="1" radix="16">96 0A</i2c_write> <sleep ms="20" /> \n======Verify Training was successful====== \n<i2c_write addr="0x2D" count="0" radix="16">96</i2c_write> /> \n<i2c_read addr="0x2D" count="1" radix="16">00</i2c_read> <sleep ms="10" /> \n=====CHA_ACTIVE_LINE_LENGTH is 1920 ======= \n<i2c_write addr="0x2D" count="2" radix="16">20 80 07</i2c_write> /> \n=====CHA_VERTICAL_DISPLAY_SIZE is 1080 ======= \n<i2c_write addr="0x2D" count="2" radix="16">24 38 04</i2c_write> /> \n=====CHA_HSYNC_PULSE_WIDTH is 44 positive ======= \n<i2c_write addr="0x2D" count="2" radix="16">2C 2C 00</i2c_write> /> \n=====CHA_VSYNC_PULSE_WIDTH is 5 positive======= \n<i2c_write addr="0x2D" count="2" radix="16">30 05 80</i2c_write> /> \n=====CHA_HORIZONTAL_BACK_PORCH is 148======= \n<i2c_write addr="0x2D" count="1" radix="16">34 94</i2c_write> /> \n=====CHA_VERTICAL_BACK_PORCH is 36======= \n<i2c_write addr="0x2D" count="1" radix="16">36 24</i2c_write> /> \n=====CHA_HORIZONTAL_FRONT_PORCH is 88======= \n<i2c_write addr="0x2D" count="1" radix="16">38 58</i2c_write> /> \n=====CHA_VERTICAL_FRONT_PORCH is 4======= \n<i2c_write addr="0x2D" count="1" radix="16">3A 04</i2c_write> /> \n======DP- 24bpp====== \n<i2c_write addr="0x2D" count="1" radix="16">5B 00</i2c_write> /> \n=====COLOR BAR disabled======= \n<i2c_write addr="0x2D" count="1" radix="16">3C 00</i2c_write> /> \n======enhanced framing, ASSR, and Vstream enable====== \n<i2c_write addr="0x2D" count="1" radix="16">5A 0D</i2c_write> /> \n</aardvark>www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 71\nProduct Folder Links: SN65DSI86\n9.2.1.3 Application Curve\nFigure 9-3. HBR Eye DiagramSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n72 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n10 Power Supply Recommendations\n10.1 V CC Power Supply\nEach V CC power supply pin should have a 100-nF capacitor to ground connected as close as possible to\nSN65DSI86 . TI recommends to have one bulk capacitor (1 µF to 10 µF) on it. TI recommends to have the pins\nconnected to a solid power plane\n10.2 V CCA Power supply\nEach V CCA power supply pin should have a 100-nF capacitor to ground connected as close as possible to\nSN65DSI86 . TI recommends to have one bulk capacitor (1 µF to 10 µF) on it. TI recommends to have the pins\nconnected to a solid power plane.\n10.3 V PLL and V CCIO Power Supplies\nThe V PLL and V CCIO pins can be tied together or isolated. Regardless of how these two supplies are connected,\na 100-nF capacitor to ground should be placed as close as possible to each power pin. TI recommends to have\na bulk capacitor (1 µF) near the V PLL pin.www.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 73\nProduct Folder Links: SN65DSI86\n11 Layout\n11.1 Layout Guidelines\nTo minimize the power supply noise floor, provide good decoupling near the SN65DSI86 power pins. The use of\nfour ceramic capacitors (2 × 0.1 μF and 2 × 0.1 μF) provides good performance. At the very least, TI\nrecommends to install one 0.1- μF and one 0.01- μF capacitors near the SN65DSI86 . To avoid large current loops\nand trace inductance, the trace length between decoupling capacitor and device power inputs pins must be\nminimized. Placing the capacitor underneath the SN65DSI86 on the bottom of the PCB is often a good choice.\nNote: The power supplies V PLL, VCCIO, VCCA, and V CC can be applied simultaneously.\n11.1.1 DSI Guidelines\n1. DA*P/N and DB*P/N pairs should be routed with controlled 100-Ω differential impedance (± 20%) or 50-Ω\nsingle-ended impedance (±15%).\n2. Keep away from other high speed signals.\n3. Keep lengths to within 5 mils of each other.\n4. Length matching should be near the location of mismatch. See Figure 4 for an example.\n5. Each pair should be separated at least by 3 times the signal trace width.\n6. The use of bends in differential traces should be kept to a minimum. When bends are used, the number of left\nand right bends should be as equal as possible and the angle of the bend should be ≥ 135°. This\narrangement minimizes any length mismatch caused by the bends and therefore minimizes the impact that\nbends have on EMI.\n7. Route all differential pairs on the same of layer.\n8. The number of VIAS should be kept to a minimum. TI recommends to keep the VIAS count to 2 or less.\n9. Keep traces on layers adjacent to ground plane.\n10.Do NOT route differential pairs over any plane split.\n11.Adding Test points will cause impedance discontinuity and will therefore negatively impact signal\nperformance. If test points are used, they should be placed in series and symmetrically. They must not be\nplaced in a manner that causes a stub on the differential pair.\n12.The maximum trace length over FR4 between SN65DSI86 and the GPU is 25 to 30 cm.\n11.1.2 eDP Guidelines\n1. ML*P/N pairs should be routed with controlled 100-Ω differential impedance (± 20%) or 50-Ω single-ended\nimpedance (± 15%).\n2. Keep away from other high speed signals.\n3. Keep lengths to within 5 mils of each other.\n4. Length matching should be near the location of mismatch. See Figure 4 for an example.\n5. Each pair should be separated at least by 3 times the signal trace width.\n6. The use of bends in differential traces should be kept to a minimum. When bends are used, the number of left\nand right bends should be as equal as possible and the angle of the bend should be ≥ 135°. This\narrangement minimizes any length mismatch caused by the bends and therefore minimizes the impact that\nbends have on EMI\n7. Route all differential pairs on the same of layer.\n8. The number of VIAS should be kept to a minimum. TI recommends to keep the VIAS count to 2 or less.\n9. Keep traces on layers adjacent to ground plane.\n10.Do NOT route differential pairs over any plane split.\n11.Adding Test points will cause impedance discontinuity and will therefore negatively impact signal\nperformance. If test points are used, they should be placed in series and symmetrically. They must not be\nplaced in a manner that causes a stub on the differential pair.\n12.The maximum trace length over FR4 between SN65DSI86 and the eDP receptacle is 4 inches for data rates\nless than or equal to HBR (2.7 Gbps) and 2 inches for HBR2 (5.4 Gbps).SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n74 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\n11.1.3 Ground\nTI recommends that only one board ground plane be used in the design. This provides the best image plane for\nsignal traces running above the plane. The thermal pad of the SN65DSI86  should be connected to this plane\nwith vias.\n11.2 Layout Example\nwww.ti.comSN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020\nCopyright © 2020 Texas Instruments Incorporated Submit Document Feedback 75\nProduct Folder Links: SN65DSI86\n12 Device and Documentation Support\n12.1 Documentation Support\n12.1.1 Related Documentation\nFor related documentation, see the following:\nSN65DSI86 Hardware Implementation Guide , SLLA343\nSN65DSI86 EVM User’s Manual , SLLU204\n12.2 Receiving Notification of Documentation Updates\nTo receive notification of documentation updates, navigate to the device product folder on ti.com. In the upper\nright corner, click on Alert me  to register and receive a weekly digest of any product information that has\nchanged. For change details, review the revision history included in any revised document.\n12.3 Community Resources\n12.4 Trademarks\nDisplayPort™ and eDP™ are trademarks of Video Electronics Standards Association (VESA).\nMIPI® is a registered trademark of Mobil Industry Processor Interface (MIPI) Alliance.\nVESA® is a registered trademark of Video Electronics Standards Association (VESA).\nAll other trademarks are the property of their respective owners.\n13 Mechanical, Packaging, and Orderable Information\nThe following pages include mechanical packaging and orderable information. This information is the most\ncurrent data available for the designated devices. This data is subject to change without notice and revision of\nthis document. For browser-based versions of this data sheet, refer to the left-hand navigation.SN65DSI86\nSLLSEH2C – SEPTEMBER 2013 – REVISED OCTOBER 2020 www.ti.com\n76 Submit Document Feedback Copyright © 2020 Texas Instruments Incorporated\nProduct Folder Links: SN65DSI86\nPACKAGE OPTION ADDENDUM\nwww.ti.com 8-Jun-2021\nAddendum-Page 1PACKAGING INFORMATION\nOrderable Device Status\n(1)Package Type Package\nDrawingPinsPackage\nQtyEco Plan\n(2)Lead finish/\nBall material\n(6)MSL Peak Temp\n(3)Op Temp (°C) Device Marking\n(4/5)Samples\nSN65DSI86ZXHR ACTIVE NFBGA ZXH 642500RoHS & Green SNAGCU Level-3-260C-168 HR -40 to 85 DSI86\n \n(1) The marketing status values are defined as follows:\nACTIVE: Product device recommended for new designs.\nLIFEBUY:  TI has announced that the device will be discontinued, and a lifetime-buy period is in effect.\nNRND: Not recommended for new designs. Device is in production to support existing customers, but TI does not recommend using this part in a new design.\nPREVIEW:  Device has been announced but is not in production. Samples may or may not be available.\nOBSOLETE:  TI has discontinued the production of the device.\n \n(2) RoHS:  TI defines "RoHS" to mean semiconductor products that are compliant with the current EU RoHS requirements for all 10 RoHS substances,  including the requirement that RoHS substance\ndo not exceed 0.1% by weight in homogeneous materials. Where designed to be soldered at high temperatures, "RoHS" products are suitable for use in specified lead-free processes. TI may\nreference these types of products as "Pb-Free".\nRoHS Exempt:  TI defines "RoHS Exempt" to mean products that contain lead but are compliant with EU RoHS pursuant to a specific EU RoHS exemption.\nGreen: TI defines "Green" to mean the content of Chlorine (Cl) and Bromine (Br) based flame retardants meet JS709B low halogen requirements of <=1000ppm threshold.  Antimony trioxide based\nflame retardants must also meet the <=1000ppm threshold requirement.\n \n(3) MSL, Peak Temp. - The Moisture Sensitivity Level rating according to the JEDEC industry standard classifications, and peak solder temperature.\n \n(4) There may be additional marking, which relates to the logo, the lot trace code information, or the environmental category on the device.\n \n(5) Multiple Device Markings will be inside parentheses. Only one Device Marking contained in parentheses and separated by a "~" will appear on a device. If a line is indented then it is a continuation\nof the previous line and the two combined represent the entire Device Marking for that device.\n \n(6) Lead finish/Ball material - Orderable Devices may have multiple material finish options. Finish options are separated by a vertical ruled line. Lead finish/Ball material values may wrap to two\nlines if the finish value exceeds the maximum column width.\n \nImportant Information and Disclaimer: The information provided on this page represents TI\'s knowledge and belief as of the date that it is provided. TI bases its knowledge and belief on information\nprovided by third parties, and makes no representation or warranty as to the accuracy of such information. Efforts are underway to better integrate information from third parties. TI has taken and\ncontinues to take reasonable steps to provide representative and accurate information but may not have conducted destructive testing or chemical analysis on incoming materials and chemicals.\nTI and TI suppliers consider certain information to be proprietary, and thus CAS numbers and other limited information may not be available for release.\n \nIn no event shall TI\'s liability arising out of such information exceed the total purchase price of the TI part(s) at issue in this document sold by TI to Customer on an annual basis.\n \n OTHER QUALIFIED VERSIONS OF SN65DSI86 :\nPACKAGE OPTION ADDENDUM\nwww.ti.com 8-Jun-2021\nAddendum-Page 2•Automotive : SN65DSI86-Q1\n NOTE: Qualified Version Definitions:\n•Automotive - Q100 devices qualified for high-reliability automotive applications targeting zero defects\nPACKAGE MATERIALS INFORMATION\n  \nwww.ti.com 29-Mar-2023\nTAPE AND REEL INFORMATION\nReel Width (W1)REEL DIMENSIONS\nA0\nB0\nK0\nWDimension designed to accommodate the component length\nDimension designed to accommodate the component thickness\nOverall width of the carrier tape\nPitch between successive cavity centersDimension designed to accommodate the component widthTAPE DIMENSIONS\nK0 P1\nB0W\nA0 Cavity\nQUADRANT ASSIGNMENTS FOR PIN 1 ORIENTATION IN TAPE\nPocket QuadrantsSprocket Holes\nQ1 Q1 Q2 Q2\nQ3 Q3 Q4 Q4 User Direction of FeedP1Reel\nDiameter\n \n*All dimensions are nominal\nDevice Package\nTypePackage\nDrawingPinsSPQ Reel\nDiameter\n(mm)Reel\nWidth\nW1 (mm)A0\n(mm)B0\n(mm)K0\n(mm)P1\n(mm)W\n(mm)Pin1\nQuadrant\nSN65DSI86ZXHR NFBGA ZXH642500 330.0 12.4 5.35.31.58.012.0 Q1\nPack Materials-Page 1\nPACKAGE MATERIALS INFORMATION\n  \nwww.ti.com 29-Mar-2023\nTAPE AND REEL BOX DIMENSIONS\nWidth (mm)\nWLH\n \n*All dimensions are nominal\nDevice Package Type Package Drawing Pins SPQ Length (mm) Width (mm) Height (mm)\nSN65DSI86ZXHR NFBGA ZXH 642500 336.6 336.6 31.8\nPack Materials-Page 2\nwww.ti.comPACKAGE OUTLINE\nCA5.1\n4.9B\n5.1\n4.9\n1 MAX\n TYP0.250.15\n4\nTYP4  TYP\n0.5  TYP\n0.5  TYP64X 0.350.25(0.5) TYP(0.65)\n(0.5) TYPNFBGA - 1 mm max height ZXH0064A\nPLASTIC BALL GRID ARRAY\n4222101/A   06/2015\nNOTES:  1. All linear dimensions are in millimeters. Any dimensions in parenthesis are for reference only. Dimensioning and tolerancing    per ASME Y14.5M. 2. This drawing is subject to change without notice. J\nABBALL A1 CORNER\nINDEX AREA\nSEATING PLANE\nBALL TYP 0.08 C\nH\nG\nF\nE\nD\nC\n12 30.15 CA B\n0.05 CSYMM\nSYMM\n45 6789SCALE  2.500\nwww.ti.comEXAMPLE BOARD LAYOUT\n64X ( )0.25\n(0.5) TYP\n(0.5) TYP\n( )\nMETAL0.250.05 MAX\nSOLDER MASK\nOPENINGMETAL UNDERSOLDER MASK\n( )\nSOLDER MASK\nOPENING0.250.05 MINNFBGA - 1 mm max height ZXH0064A\nPLASTIC BALL GRID ARRAY\n4222101/A   06/2015\nNOTES: (continued)\n 3. Final dimensions may vary due to manufacturing tolerance considerations and also routing constraints.    For information, see Texas Instruments literature number SPRAA99 (www.ti.com/lit/spraa99). SYMM\nSYMM\nLAND PATTERN EXAMPLE\nSCALE:15XC\nDE\nF\nGHJ1 23 4 5 6 7 8 9\nBA\nNON-SOLDER MASK\nDEFINED\n(PREFERRED)\nSOLDER MASK DETAILS\nNOT TO SCALESOLDER MASK\nDEFINED\nwww.ti.comEXAMPLE STENCIL DESIGN\n(0.5) TYP(0.5) TYP\nMETAL\nTYP64X ( 0.25)\n(R ) TYP0.05NFBGA - 1 mm max height ZXH0064A\nPLASTIC BALL GRID ARRAY\n4222101/A   06/2015\nNOTES: (continued)\n 4. Laser cutting apertures with trapezoidal walls and rounded corners may offer better paste release.SYMMSYMM\nSOLDER PASTE EXAMPLE\nBASED ON 0.1 mm THICK STENCIL\nSCALE:20XC\nDEFGHJ1 2 3 4 5 6 7 8 9\nA\nB\nIMPORTANT NOTICE AND DISCLAIMER\nTI PROVIDES TECHNICAL AND RELIABILITY DATA (INCLUDING DATA SHEETS), DESIGN RESOURCES (INCLUDING REFERENCE \nDESIGNS), APPLICATION OR OTHER DESIGN ADVICE, WEB TOOLS, SAFETY INFORMATION, AND OTHER RESOURCES “AS IS” \nAND WITH ALL FAULTS, AND DISCLAIMS ALL WARRANTIES, EXPRESS AND IMPLIED, INCLUDING WITHOUT LIMITATION ANY \nIMPLIED WARRANTIES OF MERCHANTABILIT Y, FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT OF THIRD \nPARTY INTELLECTUAL PROPERTY RIGHTS.\nThese resources are intended for skilled developers designing with TI products. Y ou are solely responsible for (1) selecting the appropriate \nTI products for your application, (2) designing, validating and testing your application, and (3) ensuring your application meets applicable \nstandards, and any other safety, security, regulatory or other requirements.\nThese resources are subject to change without notice. TI grants you permission to use these resources only for development of an \napplication that uses the TI products described in the resource. Other reproduction and display of these resources is prohibited. No license \nis granted to any other TI intellectual property right or to any third party intellectual property right. TI disclaims responsibility for , and you \nwill fully indemnify TI and its representatives against, any claims, damages, costs, losses, and liabilities arising out of your use of these \nresources.\nTI’s products are provided subject to TI’s Terms of Sale or other applicable terms available either on ti.com  or provided in conjunction with \nsuch TI products. TI’s provision of these resources does not expand or otherwise alter TI’s applicable warranties or warranty disclaimers for \nTI products.\nTI objects to and rejects any additional or different terms you may have proposed. IMPORTANT NOTICE\nMailing Address: Texas Instruments, Post Office Box 655303, Dallas, Texas 75265\nCopyright © 202 3, Texas Instruments Incorporated\n'}]
!==============================================================================!
### Component Summary: SN65DSI86ZQER

#### Key Characteristics and Specifications:
- **Voltage Ratings:**
  - Main VCC: 1.2 V
  - Digital I/O (VCCIO): 1.8 V
  - PLL Supply (VPLL): 1.8 V

- **Current Ratings:**
  - Active current (VCCA): 70 to 126 mA
  - Active current (VCC): 43 to 52 mA
  - Active current (VCCIO and VPLL): 32 mA

- **Power Consumption:**
  - VCCA device active current: 70 to 126 mA
  - VCC device active current: 43 to 52 mA
  - VCCIO and VPLL device active current: 32 mA

- **Operating Temperature Range:**
  - -40°C to +85°C

- **Package Type:**
  - 64-ball nFBGA (5 mm x 5 mm)

- **Special Features:**
  - Supports MIPI DSI to eDP bridge functionality.
  - Configurable for single or dual-channel DSI.
  - Supports various data rates (up to 5.4 Gbps).
  - Low-power features including panel refresh and MIPI ULPS support.
  - I2C configurable.
  - ESD rating of ±4 kV (HBM).

- **Moisture Sensitive Level (MSL):**
  - MSL Level 3 per JEDEC J-STD-020E.

#### Description:
The **SN65DSI86** is a **MIPI DSI to embedded DisplayPort (eDP) bridge** designed to facilitate the connection between MIPI DSI interfaces and eDP displays. It supports various data formats, including 18 bpp and 24 bpp RGB, and can handle high-resolution video streams, making it suitable for applications requiring high-definition displays.

#### Typical Applications:
- **PCs and Notebooks:** Used to connect high-resolution displays to graphics processors.
- **Tablets:** Facilitates the integration of advanced display technologies in portable devices.
- **Retail Automation & Payment Systems:** Enhances visual interfaces in point-of-sale systems.
- **Test and Measurement Equipment:** Provides high-quality display outputs for instrumentation.
- **Factory Automation and Control:** Used in industrial displays for monitoring and control systems.

The SN65DSI86 is particularly well-suited for applications that require high bandwidth and low power consumption, making it an ideal choice for modern display technologies in various electronic devices.