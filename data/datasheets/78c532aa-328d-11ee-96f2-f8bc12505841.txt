[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': "Give me information about the component of ADUC845BSZ62-5 production of ANALOG DEVICES from the text: MicroConverter®Multichannel  \n24-/16-Bit ADCs with Embedded 62 kB \nFlash and Single-Cycle MCU\nData Sheet ADuC845/ ADuC847 /ADuC848\n \n Rev. D  Document Feedback \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change without notice. No license is granted by implication or otherwise under any patent or patent rights of Analog Devices. Trademarks and registered trademarks are the property of their respective owners.   \n \nOne Technology Way, P.O. Box 9106, Norwood, MA 02062-9106, U.S.A.\nTel: 781.329.4700 ©2004–2016 Analog Devices, Inc. All rights reserved. Technical Support www.analog.com   FEATURES \nHigh resolution Σ-Δ ADCs \n2 independent 24-bit ADCs on the ADuC845   \nSingle 24-bit ADC on the ADuC847  and  \nsingle 16-bit ADC on the ADuC848  \nUp to 10 ADC input channels on all devices 24-bit no missing codes  22-bit rms (19.5 bit p-p) effective resolution  Offset drift 10 nV/°C, gain drift 0.5 ppm/°C chop enabled \nMemory \n62-kbyte on-chip Flash/EE program memory 4-kbyte on-chip Flash/EE data memory Flash/EE, 100-year retention, 100 kcycle endurance 3 levels of Flash/EE program memory security In-circuit serial download (no external hardware) High speed user download (5 sec) 2304 bytes on-chip data RAM \n8051-based core \n8051-compatible instruction set High performance single-cycle core 32 kHz external crystal On-chip programmable PLL (12.58 MHz max) 3 × 16-bit timer/counter 24 programmable I/O lines, plus 8 analog or  \ndigital input lines \n11 interrupt sources, two priority levels Dual data pointer, extended 11-bit stack pointer \nOn-chip peripherals \nInternal power-on reset circuit 12-bit voltage output DAC Dual 16-bit Σ-Δ DACs On-chip temperature sensor ( ADuC845  only) \nDual excitation current sources (200 μA) Time interval counter (wake-up/RTC timer) UART, SPI®, and I\n2C® serial I/O \nHigh speed dedicated baud rate generator (incl. 115,200) Watchdog timer (WDT) Power supply monitor (PSM) Power \nNormal: 4.8 mA max at 3.6 V (core CLK = 1.57 MHz) Power-down: 20 μA max with wake-up timer running Specified for 3 V and 5 V operation Package and temperature range: 52-lead MQFP (14 mm × 14 mm), −40°C to +125°C  56-lead LFCSP (8 mm × 8 mm), −40°C to +85°C \nAPPLICATIONS \nMultichannel sensor monitoring Industrial/environmental instrumentation Weigh scales, pressure sensors, temperature monitoring Portable instrumentation, battery-powered systems Data logging, precision system monitoring \n \nFUNCTIONAL BLOCK DIAGRAM \n62 kBYTES FLASH/EE PROGRAM MEMORY\n4 kBYTES FLASH/EE DATA MEMORY\n2304 BYTES USER RAM\n3\uf0b416 BIT TIMERS\nBAUD RATE TIMER\n4\uf0b4 PARALLEL\nPORTSSINGLE-CYCLE 8061-BASED MCUADuC845\nTEMP\nSENSORCURRENT\nSOURCE\nAIN1\nAIN10\nAINCOM\nRESET\nDVDD\nDGND\nWAKE-UP/\nRTC TIMERIEXC1\nIEXC2\nPWM0PGA BUF\nMUX\nAUXILIARY\n24-BIT\uf053-\uf044ADCPRIMARY\n24-BIT\uf053-\uf044ADCDAC BUF\nPWM112-BIT\nDACAVDD\nDUAL 16-BIT\n\uf053-\uf044DAC\nDUAL 16-BIT\nPWM\nPOWER SUPPLY MON\nWATCHDOG TIMER\nUART, SPI, AND I2C\nSERIAL I/OMUX\n04741-001\nXTAL2 XTAL1OSCAVCO\nAGND\nPLL AND PRG\nCLOCK DIVPORREFIN+REFIN–REFIN2–REFIN2+\nEXTERNAL\nVREF\nDETECTINTERNAL\nBAND GAP\nVREF\n \nFigure 1. ADuC845 Functional Block Diagram \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 2 of 110 TABLE OF CONTENTS \nFeatures .............................................................................................. 1 \xa0\nApplications ....................................................................................... 1 \xa0\nRevision History ............................................................................... 3 \xa0\nSpecifications ..................................................................................... 4 \xa0\nAbosolute Maximum Ratings ....................................................... 10 \xa0\nESD Caution ................................................................................ 10 \xa0\nPin Configurations and Function Descriptions ......................... 11 \xa0\nGeneral Description ....................................................................... 15 \xa0\n8052 Instruction Set ................................................................... 18 \xa0\nTimer Operation ......................................................................... 18 \xa0\nALE ............................................................................................... 18 \xa0\nExternal Memory Access ........................................................... 18 \xa0\nComplete SFR Map .................................................................... 19 \xa0\nFunctional Description .................................................................. 20 \xa0\n8051 Instruction Set ................................................................... 20 \xa0\nMemory Organization ............................................................... 22 \xa0\nSpecial Function Registers (SFRs) ............................................ 24 \xa0\nADC Circuit Information .......................................................... 26 \xa0\nAuxiliary ADC (ADuC845 Only) ............................................ 32 \xa0\nReference Inputs ......................................................................... 32 \xa0\nBurnout Current Sources .......................................................... 32 \xa0\nReference Detect Circuit ........................................................... 33 \xa0\nSinc Filter Register (SF) ............................................................. 33 \xa0\nΣ-Δ Modulator ............................................................................ 33 \xa0\nDigital Filter ................................................................................ 33 \xa0\nADC Chopping ........................................................................... 34 \xa0\nCalibration ................................................................................... 34 \xa0\nProgrammable Gain Amplifier ................................................. 35 \xa0\nBipolar/Unipolar Configuration .............................................. 35 \xa0\nData Output Coding .................................................................. 36 \xa0\nExcitation Currents .................................................................... 36 \xa0ADC Power-On .......................................................................... 36 \xa0\nTypical Performance Characteristics ........................................... 37 \xa0\nFunctional Description .................................................................. 39 \xa0\nADC SFR Interface ..................................................................... 39 \xa0\nADCSTAT (ADC Status Register) ........................................... 40 \xa0\nADCMODE (ADC Mode Register) ......................................... 41 \xa0\nADC0CON1 (Primary ADC Control Register) ..................... 43 \xa0\nADC0CON2 (Primary ADC Channel Select Register) ........ 44 \xa0\nSF (ADC Sinc Filter Control Register) .................................... 46 \xa0\nICON (Excitation Current Sources Control Register) .......... 47 \xa0\nNonvolatile Flash/EE Memory Overview ............................... 48 \xa0\nFlash/EE Program Memory ...................................................... 49 \xa0\nUser Download Mode (ULOAD) ............................................. 50 \xa0\nUsing Flash/EE Data Memory .................................................. 51 \xa0\nFlash/EE Memory Timing ........................................................ 52 \xa0\nDAC Circuit Information .......................................................... 53 \xa0\nPulse-Width Modulator (PWM) .............................................. 55 \xa0\nOn-Chip PLL (PLLCON) .......................................................... 60 \xa0\nI2C Serial Interface ..................................................................... 61 \xa0\nSPI Serial Interface ..................................................................... 63 \xa0\nUsing the SPI Interface .............................................................. 66 \xa0\nDual Data Pointers ..................................................................... 67 \xa0\nPower Supply Monitor ............................................................... 68 \xa0\nWatchdog Timer ......................................................................... 69 \xa0\nTime Interval Counter (TIC) .................................................... 70 \xa0\n8052-Compatible On-Chip Peripherals .................................. 73 \xa0\nTimers/Counters ........................................................................ 75 \xa0\nUART Serial Interface ................................................................ 80 \xa0\nInterrupt System ......................................................................... 87 \xa0\nInterrupt Priority ........................................................................ 88 \xa0\nInterrupt Vectors ........................................................................ 88 \xa0\nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 3 of 110 Hardware Design Considerations ................................................. 89 \xa0\nExternal Memory Interface ........................................................ 89 \xa0\nPower Supplies ............................................................................. 89 \xa0\nPower-On Reset Operation ........................................................ 90 \xa0\nPower Consumption ................................................................... 90 \xa0\nPower-Saving Modes .................................................................. 90 \xa0\nGrounding and Board Layout Recommendations ................. 91 \xa0Other Hardware Considerations ............................................... 92 \xa0\nQuickStart Development System .................................................. 96 \xa0\nQuickStart-PLUS Development System .................................. 96 \xa0\nTiming Specifications ..................................................................... 97 \xa0\nOutline Dimensions ...................................................................... 106 \xa0\nOrdering Guide ......................................................................... 107 \xa0\n \n \nREVISION HISTORY \n5/2016—Rev. C to Rev. D \nChanged uC004 to AN-1074 ....................................... Throughout \nUpdated Outline Dimensions ......................................................108 \nChanges to Ordering Guide .........................................................109  12/2012—Rev. B to Rev. C Changes to Figure 3 and Table 3 ................................................... 11 \nChanges to Burnout Current Sources Section ............................. 32 \nChange to ADCMODE (ADC Mode Register) Section............. 42 Changes to Mode 4 (Dual NRZ 16-Bit Σ-Δ DAC) Section ............ 58 Change to Hardware Slave Mode Section .................................... 63 Updated Outline Dimensions ......................................................104 \nChanges to Ordering Guide .........................................................105 \n 2/2005—Rev. A to Rev. B Changes to Figure 1 ........................................................................... 1 Changes to the Burnout Current Sources Section ...................... 32 Changes to the Excitation Currents Section ................................ 36 \nChanges to Table 30 ........................................................................ 47 \nChanges to the Flash/EE Memory on the ADuC845, ADuC847, ADuC848 Section ............................................................................. 48 Changes to Figure 39 ...................................................................... 57 Changes to On-Chip PLL (PLLCON) Section ............................ 60 \nAdded 3 V Part Section Heading .................................................. 88 \nAdded 5 V Part Section .................................................................. 88 Changes to Figure 70 ...................................................................... 91 \nChanges to Figure 71 ...................................................................... 93 \n 6/2004—Rev. 0 to Rev. A \nChanges to Figure 5 ........................................................................ 17 \nChanges to Figure 6 ........................................................................ 18 \nChanges to Figure 7 ........................................................................ 19 Changes to Table 5 .......................................................................... 24 Changes to Table 24 ........................................................................ 41 Changes to Table 25 ........................................................................ 43 \nChanges to Table 26 ........................................................................ 44 \nChanges to Table 27 ........................................................................ 45 Changes to User Download Mode Section .................................. 50 Added Figure 51 and Renumbered Subsequent Figures ............ 50 Edits to the DACH/DACL Data Registers Section ..................... 53 \nChanges to Table 34 ........................................................................ 56 \nAdded SPIDAT: SPI Data Register Section ................................. 65 Changes to Table 42 ........................................................................ 67 Changes to Table 43 ........................................................................ 68 Changes to Table 44 ........................................................................ 69 Changes to Table 45 ........................................................................ 71 \nChanges to Table 50 ........................................................................ 75 \nChanges to Timer/Counter 0 and 1 Data Registers Section ........... 76 Changes to Table 54 ........................................................................ 80 Added the SBUF—UART Serial Port Data Register Section ......... 80 Addition to the Timer 3 Generated Baud Rates Section ........... 83 \nAdded Table 57 and Renumbered Subsequent Tables ............... 84 \nChanges to Table 61 ........................................................................ 86  \n4/2004—Revision 0: Initial Version \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 4 of 110 SPECIFICATIONS1 \nAV DD = 2.7 V to 3.6 V or 4.75 V to 5.25 V , DV DD = 2.7 V to 3.6 V or 4.75 V to 5.25 V , REFIN(+) = 2.5 V , REFIN(–) = AGND; AGND = \nDGND = 0 V; XTAL1/XTAL2 = 32.768 kHz crystal; all specifications T MIN to T MAX, unless otherwise noted. Input buffer on for primary \nADC, unless otherwise noted. Core speed = 1.57 MHz (default CD = 3), unless otherwise noted. \nTable 1.  \nParameter Min Typ Max Unit Test Conditions/Comments \nPRIMARY ADC      \nConversion Rate 5.4  105 Hz Chop on (ADCMODE.3 = 0) \n 16.06  1365 Hz Chop off (ADCMODE.3 = 1) \nNo Missing Codes2 24    Bits ≤26.7 Hz update rate with chop enabled \n 24   Bits ≤80.3 Hz update rate with chop disabled \nResolution ( ADuC845/ ADuC847) See Table 11 and Table 15    \nResolution ( ADuC848) See Table 13 and Table 17    \nOutput Noise ( ADuC845/ ADuC847 ) See Table 10 and Table 14  μV (rms) Output noise varies with selected update rates, \ngain range, and chop status.  \nOutput Noise ( ADuC848) See Table 12 and Table 16  μV (rms) Output noise varies with selected update rates, \ngain range, and chop status.  \nIntegral Nonlinearity   ±15 ppm of FSR 1 LSB 16 \nOffset Error3  ±3  μV Chop on  \n   Chop off, offset error is in the order of the noise \nfor the programmed gain and update rate \nfollowing a calibration.  \nOffset Error Drift vs. Temperature2  ±10  nV/°C Chop on (ADCMODE.3 = 0) \n  ±200  nV/°C Chop off (ADCMODE.3 = 1) \nFull-Scale Error4       \nADuC845/ ADuC847   ±10   μV ±20 mV to ±2.56 V \nADuC848   ±10   μV ±20 mV to ±640 mV \n  ±0.5  LSB 16 ±1.28 V to ±2.56 V  \nGain Error Drift vs. Temperature4  ±0.5   ppm/°C  \nPower Supply Rejection       \n 80   dB AIN = 1 V, ±2.56 V, chop enabled \n  113   dB AIN = 7.8 mV, ±20 mV, chop enabled \n  80  dB AIN = 1 V, ±2.56 V, chop disabled2  \nPRIMARY ADC ANALOG INPUTS      \nDifferential Input Voltage Ranges 5, 6      Gain = 1 to 128 \nBipolar Mode (ADC0CON1.5 = 0)  ±1.024 × V\nREF/GAIN  V VREF = REFIN(+) − REFIN(−) or REFIN2(+) − \nREFIN2(−) (or Int 1.25 V REF)  \nUnipolar Mode (ADC0CON1.5 = 1)  0 – 1.024 × \nVREF/GAIN  V VREF = REFIN(+) − REFIN(−) or REFIN2(+) − \nREFIN2(−) (or Int 1.25 V REF)  \nADC Range Matching  ±2  μV AIN = 18 mV, chop enabled \nCommon-Mode Rejection DC     Chop enabled, chop disabled \nOn AIN 95   dB AIN = 7.8 mV, range = ±20 mV \n  113  dB AIN = 1 V, range = ±2.56 V \nCommon-Mode Rejection  \n50 Hz/60 Hz2     50 Hz/60 Hz ± 1 Hz, 16.6 Hz and 50 Hz update \nrate, chop enabled, REJ60 enabled \nOn AIN 95   dB AIN = 7.8 mV, range = ±20 mV  \n 90   dB AIN = 1 V, range = ±2.56 V \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 5 of 110 Parameter Min Typ Max Unit Test Conditions/Comments \nNormal Mode Rejection 50 Hz/60  Hz2      \nOn AIN 75   dB 50 Hz/60 Hz ± 1 Hz, 16.6 Hz Fadc, SF = 52H, chop \non, REJ60 on \n 100   dB 50 Hz ± 1 Hz, 16.6 Hz Fadc, SF = 52H, chop on \n 67   dB 50 Hz/60 Hz ± 1 Hz, 50 Hz Fadc, SF = 52H, chop \noff, REJ60 on \n 100   dB 50 Hz ± 1 Hz, 50 Hz Fadc, SF = 52H, chop off \nAnalog Input Current2   ±1 nA T MAX = 85°C, buffer on \n   ±5 nA TMAX = 125°C, buffer on \nAnalog Input Current Drift   ±5  pA/°C T MAX = 85°C, buffer on \n  ±15  pA/°C TMAX = 125°C, buffer on \nAverage Input Current  ±125  nA/V ±2.56 V range, buffer bypassed \nAverage Input Current Drift  ±2  pA/V/°C Buffer bypassed \nAbsolute AIN Voltage Limits2 AGND + \n0.1  AV DD − \n0.1 V AIN1 … AIN10 and AINCOM with buffer enabled  \nAbsolute AIN Voltage Limits2 AGND − \n0.03  AV DD + \n0.03 V AIN1 … AIN10 and AINCOM with buffer bypassed  \nEXTERNAL REFERENCE INPUTS      \nREFIN(+) to REFIN(–) Voltage  2.5  V REFIN refers to both REFIN and REFIN2 \nREFIN(+) to REFIN(–) Range2 1  AV DD V REFIN refers to both REFIN and REFIN2 \nAverage Reference Input Current  ±1  μA/V Both ADCs enabled \nAverage Reference Input Current \nDrift  ±0.1  nA/V/°C  \nNOXREF Trigger Voltage 0.3  0.65 V NOXREF (ADCSTAT.4) bit active if  V REF > 0.3 V, and \ninactive if V REF > 0.65 V \nCommon-Mode Rejection      \nDC Rejection  125  dB AIN = 1 V, range = ±2.56 V \n50 Hz/60 Hz Rejection2 90   dB 50 Hz/60 Hz ± 1 Hz, AIN = 1 V, range = ±2.56 V,  \nSF = 82  \nNormal Mode Rejection  \n50 Hz/60 Hz2 75   dB 50 Hz/60 Hz ±1 Hz, AIN = 1 V, range = ±2.56 V,  \nSF = 52H, chop on, REJ60 on \n 100   dB 50 Hz ± 1 Hz, AIN = 1 V, range = ±2.56 V,  \nSF = 52H, chop on \n 67   dB 50 Hz/60 Hz ± 1 Hz, AIN = 1 V, range = ±2.56 V,  SF = 52H, chop off, REJ60 on \n 100   dB 50 Hz ± 1 Hz, AIN = 1 V, range = ±2.56 V,  \nSF = 52H, chop off \nAUXILIARY ADC ( ADuC845 Only)      \nConversion Rate 5.4  105 Hz Chop on \n 16.06  1365 Hz Chop off \nNo Missing Codes2 24    Bits ≤26.7 Hz update rate, chop enabled \n 24   Bits 80.3 Hz update rate, chop disabled  \nResolution See Table 19 and Table 21   \nOutput Noise  See Table 18 and Table 20  Output no ise varies with selected update rates.  \nIntegral Nonlinearity   ±15 ppm of FSR 1 LSB 16 \nOffset Error3  ±3  μV Chop on \n  ±0.25  LSB 16 Chop off \nOffset Error Drift2   10  nV/°C Chop on  \n  200  nV/°C Chop off  \nFull-Scale Error4  ±0.5   LSB 16  \nGain Error Drift4  ±0.5  ppm/°C  \nPower Supply Rejection  80   dB AIN = 1 V, range = ±2.56 V, chop enabled \n  80  dB AIN = 1 V, range = ±2.56 V, chop disabled \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 6 of 110 Parameter Min Typ Max Unit Test Conditions/Comments \nAUXILIARY ADC ANALOG INPUTS \n(ADuC845 ONLY)      \nDifferential Input Voltage Ranges5, 6      \nBipolar Mode (ADC1CON.5 = 0)  ±V REF  V REFIN = REFIN(+) − REFIN(−) (or Int 1.25 V REF) \nUnipolar Mode (ADC1CON.5 = 1)  0 – V REF  V REFIN = REFIN(+) − REFIN(−) (or Int 1.25 V REF) \nAverage Analog Input Current   125  nA/V   \nAnalog Input Current Drift  ±2  pA/V/°C   \nAbsolute AIN/AINCOM Voltage \nLimits2, 7 AGND − \n0.03  AV DD + \n0.03 V  \nNormal Mode Rejection 50 Hz/60 Hz2      \nOn AIN and REFIN  75   dB 50 Hz/60 Hz ± 1 Hz, 16.6 Hz Fadc, SF = 52H, chop \non, REJ60 on \n 100   dB 50 Hz ± 1 Hz, 16.6 Hz Fadc, SF = 52H, chop on \n 67   dB 50 Hz/60 Hz ± 1 Hz, 50 Hz Fadc, SF = 52H, chop off, REJ60 on \n 100   dB 50 Hz ± 1 Hz, 50 Hz Fadc, SF = 52H, chop off \nADC SYSTEM CALIBRATION      \nFull-Scale Calibration Limit   +1.05 × FS V  \nZero-Scale Calibration Limit −1.05 × FS   V  \nInput Span 0.8 × FS  2.1 × FS V  \nDAC       \nVoltage Range  0 – V REF  V DACCON.2 = 0 \n  0 – AV DD  V DACCON.2 = 1 \nResistive Load  10  kΩ From DAC output to AGND \nCapactive Load  100  pF From DAC output to AGND \nOutput Impedance  0.5  Ω  \nISINK  50  μA  \nDC Specifications8      \nResolution 12   Bits  \nRelative Accuracy  ±3  LSB  \nDifferential Nonlinearity   −1 LSB Guaranteed 12-bit monotonic \nOffset Error   ±50  mV  \nGain Error   ±1  % AV DD range \n  ±1  %  VREF range  \nAC Specifications2, 8      \nVoltage Output Settling Time  15  μs Se ttling time to 1 LSB of final value \nDigital-to-Analog Glitch Energy  10  nVs 1 LSB change at major carry \nINTERNAL REFERENCE      \nADC Reference     Chop enabled \nReference Voltage 1.25 − 1% 1.25 1.25 + 1% V Initial tolerance @ 25°C, V DD = 5 V \nPower Supply Rejection  45  dB  \nReference Tempco  100  ppm/°C  \nDAC Reference      \nReference Voltage 2.5 – 1% 2.5 2.5 + 1% ±1% V Initial tolerance @ 25°C, V DD = 5 V \nPower Supply Rejection  50  dB  \nReference Tempco  ±100  ppm/°C  \nTEMPERATURE SENSOR  \n(ADuC845 ONLY)      \nAccuracy  ±2  °C  \nThermal Impedance  90  °C/W MQFP \n  52  °C/W LFCSP \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 7 of 110 Parameter Min Typ Max Unit Test Conditions/Comments \nTRANSDUCER BURNOUT CURRENT \nSOURCES      \nAIN+ Current   −100  nA  AIN+ is the selected positive input (AIN4 or AIN6 \nonly) to the primary ADC \nAIN− Current  100  nA AIN− is the selected negative input (AIN5 or AIN7 \nonly) to the primary ADC \nInitial Tolerance at 25°C  ±10  %  \nDrift  0.03  %/°C  \nEXCITATION CURRENT SOURCES      \nOutput Current  200  μA Available from each current source \nInitial Tolerance at 25°C  ±10  %  \nDrift  200  ppm/°C  \nInitial Current Matching at 25°C  ±1  % Matching between both current sources \nDrift Matching   20   ppm/°C  \nLine Regulation (AV DD)   1  μA/V AV DD = 5 V ± 5% \nLoad Regulation   0.1  μA/V  \nOutput Compliance2 AGND   AV DD − 0.6 V  \nPOWER SUPPLY MONITOR (PSM)      \nAV DD Trip Point Selection Range 2.63  4.63 V Four trip points selectable in this range \nAV DD Trip Point Accuracy   ±3.0 % T MAX = 85°C \n   ±4.0 % TMAX = 125°C \nDV DD Trip Point Selection Range 2.63  4.63 V Four trip points selectable in this range \nDV DD Trip Point Accuracy   ±3.0 % T MAX = 85°C \n   ±4.0 % TMAX = 125°C \nCRYSTAL OSCILLATOR (XTAL1 AND \nXTAL2)      \nLogic Inputs, XTAL1 Only2      \nVINL, Input Low Voltage   0.8 V DV DD = 5 V \n   0.4 V DV DD = 3 V \nVINH, Input Low Voltage 3.5   V DV DD = 5 V \n 2.5   V DV DD = 3 V \nXTAL1 Input Capacitance  18  pF  \nXTAL2 Output Capacitance  18  pF  \nLOGIC INPUTS       \nAll Inputs Except SCLOCK, RESET, \nand XTAL12      \nVINL, Input Low Voltage   0.8 V DV DD = 5 V \n   0.4 V DV DD = 3 V \nVINH, Input Low Voltage 2.0   V  \nSCLOCK and RESET Only  \n(Schmidt Triggered Inputs)2      \nVT+ 1.3  3.0 V DV DD = 5 V \n 0.95  2.5 V DV DD = 3 V \nVT− 0.8  1.4 V DV DD = 5 V \n 0.4  1.1 V DV DD = 3 V  \nVT+ − V T− 0.3  0.85 V DV DD = 5 V or 3 V \nInput Currents      \nPort 0, P1.0 to P1.7, EA     ±10 μA V IN = 0 V or V DD \nRESET   ±10 μA VIN = 0 V, DV DD = 5 V \n 35  105 μA VIN = DV DD, DV DD = 5 V, internal pull-down \nPort 2, Port 3   ±10 μA V IN = DV DD, DV DD = 5 V \n −180  −660 μA VIN = 2 V, DV DD = 5 V \n −20  −75 μA VIN = 0.45 V, DV DD = 5 V \nInput Capacitance  10  pF All digital inputs \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 8 of 110 Parameter Min Typ Max Unit Test Conditions/Comments \nLOGIC OUTPUTS (ALL DIGITAL \nOUTPUTS EXCEPT XTAL2)      \nVOH, Output High Voltage2 2.4   V DV DD = 5 V, I SOURCE  = 80 μA \n 2.4   V DV DD = 3 V, I SOURCE  = 20 μA \nVOL, Output Low Voltage   0.4 V ISINK = 8 mA, SCLOCK, SDATA \n   0.4 V ISINK = 1.6 mA on P0, P1, P2 \nFloating State Leakage Current2   ±10 μA  \nFloating State Output Capacitance   10  pF  \nSTART-UP TIME      \nAt Power-On  600  ms  \nAfter Ext RESET in Normal Mode  3  ms  \nAfter WDT RESET in Normal Mode  2  ms Controlled via WDCON SFR \nFrom Power-Down Mode      \nOscillator Running     PLLCON.7 = 0   \nWake-Up with INT0  Interrupt  20  μs  \nWake-Up with SPI Interrupt  20  μs  \nWake-Up with TIC Interrupt  20  μs  \nOscillator Powered Down     PLLCON.7 = 1 \nWake-Up with INT0  Interrupt  30  μs  \nWake-Up with SPI Interrupt  30  μs  \nFLASH/EE MEMORY RELIABILITY \nCHARACTERISTICS      \nEndurance9 100,000   Cycles  \nData Retention10 100   Years  \nPOWER REQUIREMENTS      \nPower Supply Voltages      \nAV DD 3 V Nominal 2.7  3.6 V  \nAV DD 5 V Nominal 4.75  5.25 V  \nDV DD 3 V Nominal 2.7  3.6 V  \nDV DD 5 V Nominal 4.75  5.25 V  \n5 V Power Consumption      4.75 V < DV DD < 5.25 V, AV DD = 5.25 V \nNormal Mode11, 12      \nDV DD Current   10 mA  Core clock = 1.57 MHz \n  25 31 mA  Core clock = 12.58 MHz \nAV DD Current   180  μA   \nPower-Down Mode11, 12      \nDV DD Current  40 53  μA  T MAX = 85°C; OSC on; TIC on  \n  50  μA  TMAX = 125°C; OSC on; TIC on \n  20 33 μA TMAX = 85°C; OSC off \n  30  μA TMAX = 125°C; OSC off  \nAV DD Current    1 μA T MAX = 85°C; OSC on or off \n   3 μA TMAX = 125°C; OSC on or off \nTypical Additional Peripheral \nCurrents (AI DD and DI DD)     5 V V DD, CD = 3 \nPrimary ADC  1  mA  \nAuxiliary ADC ( ADuC845 Only)  0.5  mA  \nPower Supply Monitor  30  μA  \nDAC   60  μA DACH/L = 000H \nDual Excitation Current Sources  200  μA 200 μA each. Can be combined to give 400 μA on \na single output.  \nALE Off  −20  μA PCON.4 = 1 (see Table 6) \nWDT  10  μA  \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 9 of 110 Parameter Min Typ Max Unit Test Conditions/Comments \nPWM      \n−Fxtal  3  μA  \n−Fvco  0.5  mA  \nTIC  1  μA  \n3 V Power Consumption     2.7 V < DV DD < 3.6 V, AV DD = 3.6 V \nNormal Mode11, 12      \nDV DD Current   4.8 mA Core clock = 1.57 MHz \n  9 11 mA Core clock = 6.29 MHz (CD = 1) \nAV DD Current   180 μA ADC not enabled \nPower-Down Mode11, 12      \nDV DD Current  20 26 μA T MAX = 85°C; OSC on; TIC on  \n  29  μA TMAX = 125°C; OSC on; TIC on \n  14 20 μA TMAX = 85°C; OSC off  \n  21  μA TMAX = 125°C; OSC off \nAV DD Current    1 μA T MAX = 85°C; OSC on or off \n   3 μA TMAX = 125°C; OSC on or off \n \n1 Temperature range is for ADuC845BS ; for the ADuC847BS  and ADuC848BS  (MQFP package), the ra nge is –40°C to +125°C.  Temperature range for ADuC845BCP , \nADuC847BCP , and ADuC848BCP  (LFCSP package) is  –40°C to +85°C. \n2 These numbers are not production tested but are guaranteed by design and/or characterization data on production release. \n3 System zero-scale calibration can remove this error. \n4 Gain error drift is a span drift. To calculate full-scale error drift, add the offset error drift to the gain error drift time s the full-scale input. \n5 In general terms, the bipolar input voltage range to the primary ADC is given by the ADC range = ±(V REF 2RN )/1.25, where:  \n   V REF = REFIN(+) to REFIN(–) voltage and V REF = 1.25 V when internal ADC V REF is selected. RN = decimal equivalent of RN2, RN1, RN0. For example, if V REF = 2.5 V and RN2, \nRN1, RN0 = 1, 1, 0, respectively, then the ADC range = ±1.28 V. In unipolar mode, the effective range is 0 V to 1.28 V in this example. \n6 1.25 V is used as the reference voltage to the ADC when internal V REF is selected via XREF0/XREF1 or AXREF bits in ADC0CON2 and ADC1CON, respectively. (AXREF is \navailable only on the ADuC845.) \n7 In bipolar mode, the auxiliary ADC can be driven only to a minimum of AGND – 30 mV as indicated by the auxiliary ADC absolute AIN voltage limits. The bipolar range \nis still –V REF to +V REF. \n8 DAC linearity and ac specificatio ns are calculated usin g a reduced code range of 48 to 4095, 0 V to V REF, reduced code range of 100 to 3950, 0 V to V DD. \n9 Endurance is qualified to 100 kcycle per JEDEC Std. 22 method A117 and measured at –40° C, +25°C, +85°C, an d +125°C. Typical en durance at 25°C is 700 kcycles. \n10 Retention lifetime equivalent at junction temperature (T J) = 55°C per JEDEC Std. 22, Method A117. Retention lifet ime based on an activation  energy of 0.6 eV derates \nwith junction temperature. \n11 Power supply current consumption is measured in normal mode following the power-on sequence, and in power-down modes under the  following conditions:  \nNormal mode: reset = 0.4 V, digital I/O pins  = open circuit, Core Clk changed via CD bits in PLLCON, core executing internal so ftware loop.  \nPower-down mode: reset = 0.4 V, all P0 pins and P1.2 to P1.7 pins = 0.4 V. All other digital I/O pins are open circuit, core Cl k changed via CD bits in PLLCON, PCON.1 = 1, core \nexecution suspended in power-down mode, OSC turned on or off via OSC_PD bit (PLLCON.7) in PLLCON SFR. \n12 DV DD power supply current increases typically by 3 mA (3 V operation) and 10 mA (5 V operat ion) during a Flash/EE memory program or  erase cycle. \n \n \nGeneral Notes about Specifications  \n\uf0b7 DAC gain error is a measure of the span error of the DAC.  \n\uf0b7 The ADuC845BCP , ADuC847BCP , and ADuC848BCP (LFCSP package) have been qualified and tested with the base of the LFCSP \npackage floating. The base of the LFCSP package should be soldered to the board, but left floating electrically, to ensure good  \nmechanical stability. \n\uf0b7 Flash/EE memory reliability characteristics apply to both the Flash/EE program memory and Flash/EE data memory.  \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 10 of 110 ABOSOLUTE MAXIMUM RATINGS \nTA = 25°C, unless otherwise noted. \nTable 2.  \nParameter Rating \nAV DD to AGND –0.3 V to +7 V \nAV DD to DGND –0.3 V to +7 V \nDV DD to DGND –0.3 V to +7 V \nDV DD to DGND –0.3 V to +7 V \nAGND to DGND1 –0.3 V to +0.3 V \nAV DD to DV DD –2 V to +5 V \nAnalog Input Voltage to AGND2 –0.3 V to AV DD + 0.3 V \nReference Input Voltage to AGND –0.3 V to AV DD + 0.3 V \nAIN/REFIN Current (Indefinite) 30 mA \nDigital Input Voltage to DGND –0.3 V to DV DD + 0.3 V \nDigital Output Voltage to DGND –0.3 V to DV DD + 0.3 V \nOperating Temperature Range –40°C to +125°C \nStorage Temperature Range –65°C to +150°C \nJunction Temperature 150°C \nθJA Thermal Impedance (MQFP) 90°C/W \nθJA Thermal Impedance (LFCSP) 52°C/W \nLead Temperature, Soldering  \nVapor Phase (60 sec) 215°C \nInfrared (15 sec) 220°C Stresses at or above those listed under Absolute Maximum \nRatings may cause permanent damage to the product. This is a \nstress rating only; functional operation of the product at these or any other conditions above those indicated in the operational section of this specification is not implied. Operation beyond the maximum operating conditions for extended periods may affect product reliability. \n \nESD CAUTION \n  \n  \n \n \n1 AGND and DGND are shorted internally on the ADuC845, ADuC847, and \nADuC848. \n2 Applies to the P1.0 to P1.7 pins operating in analog or digital input modes. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 11 of 110 PIN CONFIGURATIONS AND FUNCTION DESCRIPTIONS \n52 51 50 49 48 43 42 41 40 47 46 45 44\n14 15 16 17 18 19 20 21 22 23 24 25 261\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n1312PIN 1\nIDENTIFIER\nTOP VIEW\n(Not to Scale)39\n38\n37\n36\n35\n34\n33\n32313029\n28\n27P0.7/AD 7\nP0.6/AD 6\nP0.5/AD 5\nP0.4/AD 4\nDVDD\nDGND\nP0.3/AD 3\nP0.2/AD 2\nP0.1/AD1\nP0.0/AD 0\nALE\nPSEN\nEADAC\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/INT0P3.3/INT1\nDV\nDD\nP3.4/T0\nP3.5/T1\nP3.6/WR\nP3.7/RD\nSCLOCK (I 2C)P1.0/AIN1\nP1.1/AIN2\nP1.2/AIN3/REFIN2+\nP1.3/AIN4/REFIN2–\nAVDD\nAGND\nREFIN–\nREFIN+\nP1.4/AIN5\nP1.5/AIN6\nP1.6/AIN7/IEXC1\nP1.7/AIN8/IEXC2\nAINCOM/DACP2.7/PWMCLK\nP2.6/PWM1\nP2.5/PWM0\nP2.4/T2EX\nDGND\nDVDD\nXTAL2\nXTAL1\nP2.3/SS/T2P2.2/MISO\nP2.1/MOSIP2.0/SCLOCK (SPI)\nSDATADGND\n04741-002ADuC845/ADuC847/ADuC848\n \nFigure 2. 52-Lead M QFP Pin Configuration \n04741-003P1.1/AIN2\nP1.2/AIN3/REFIN2+\nP1.3/AIN4/REFIN2–\nAGNDAVDD\nAGND\nREFIN–\nREFIN+\nP1.4/AIN5\nP1.5/AIN6\nP1.6/AIN7/IEXC1\nP1.7/AIN8/IEXC2\nAINCOM/DAC\nDAC\nAIN9\nAIN10\nRESET\nP3.0/RxD\nP3.1/TxD\nP3.2/INT0\nP3.3/INT1\nDVDD\nDGND\nP3.4/T0\nP3.5/T1\nP3.6/WR\nP3.7/RD\nSCLK (I 2C)P2.7/PWMCLK\nP2.6/PWM1\nP2.5/PWM0\nP2.4/T2EX\nDGND\nDGND\nDVDD\nXTAL1\nP2.3/SS/T2P2.2/MISO\nP2.1/MOSI\nP2.0/SCLOCK (SPI)\nSDATAP1.0/AIN1\nP0.7/AD7\nP0.6/AD6\nP0.5/AD5\nP0.4/AD4\nDVDD\nDGND\nP0.3/AD3\nP0.2/AD2\nP0.1/AD1P0.0/AD0\nALE\nPSEN\nEA\n141\n2\n3456789\n1011\n1312\n15\n16\n17\n1819\n20\n21\n22\n23\n24\n2526\n27\n2842\n41\n4039\n38\n37\n36\n35\n34\n33\n32\n31\n30\n2943454647484950515253545556\n44\nXTAL2 TOP VIEW\n(Not to Scale)ADuC845/ADuC847/\nADuC848\nNOTES\n1. THE EXPOSED P ADDLE MUST BE LEFT UNCONNECTED.\nFigure 3. 56-Lead LFCSP Pin Configuration \nTable 3. Pin Function Descriptions  \nPin No. \nMnemonic Type1 Description 52-MQFP 56-LFCSP \n1 56 P1.0/AIN1 I  By power-on default, P1.0/AIN1 is configured as the AIN1 analog input.   \nAIN1 can be used as a pseudo differenti al input when used with AINCOM or as \nthe positive input of a fully differen tial pair when used with AIN2.  \nP1.0 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. \n2 1 P1.1/AIN2 I On power-on default, P1.1/AIN2 is configured as the AIN2 analog input.  \nAIN2 can be used as a pseudo differenti al input when used with AINCOM or as \nthe negative input of a fully differen tial pair when used with AIN1.  \nP1.1 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. \n3 2 P1.2/AIN3/REFIN2+ I On power-on default, P1.2/A IN3 is configured as the AIN3 analog input.  \nAIN3 can be used as a pseudo differenti al input when used with AINCOM or as \nthe positive input of a fully differen tial pair when used with AIN4.  \nP1.2 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. This pin also functions as a second external differential \nreference input, positive terminal. \n4 3 P1.3/AIN4/REFIN2− I On power-on default, P1.3/A IN4 is configured as the AIN4 analog input.  \nAIN4 can be used as a pseudo differenti al input when used with AINCOM or as \nthe negative input of a fully differen tial pair when used with AIN3.  \nP1.3 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. This pin also functions as a second external differential \nreference input, negative terminal. \n5 4 AV DD S Analog Supply Voltage. \n6 5 AGND S Analog Ground. \nNot \napplicable 6 AGND S A second analog ground is provided with the LFCSP version only. \n7 7 REFIN− I External Differential Reference Input, Negative Terminal. \n8 8 REFIN+ I External Differential Reference Input, Positive Terminal. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 12 of 110 Pin No. \nMnemonic Type1 Description 52-MQFP 56-LFCSP \n9 9 P1.4/AIN5 I On power-on default, P1.4/AIN5 is configured as the AIN5 analog input.  \nAIN5 can be used as a pseudo differenti al input when used with AINCOM or as \nthe positive input of a fully differen tial pair when used with AIN6.  \nP1.0 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. \n10 10 P1.5/AIN6 I On power-on default, P1.5/AIN6 is configured as the AIN6 analog input.  \nAIN6 can be used as a pseudo differenti al input when used with AINCOM or as \nthe negative input of a fully differen tial pair when used with AIN5.  \nP1.1 has no digital output driver. It can function as a digital input for which 0 \nmust be written to the port bit. As a digital input, this pin must be driven high \nor low externally. \n11 11 P1.6/AIN7/IEXC1 I/O On power-on default, P1.6/A IN7 is configured as the AIN7 analog input.  \nAIN7 can be used as a pseudo differenti al input when used with AINCOM or as \nthe positive input of a fully differential pair when used with AIN8. One or both \ncurrent sources can also be configured at this pin.  \nP1.6 has no digital output driver. It can, however, function as a digital input for \nwhich 0 must be written to the port bit. As a digital input, this pin must be \ndriven high or low externally. \n12 12 P1.7/AIN8/IEXC2 I/O On power-on default, P1.7/A IN8 is configured as the AIN8 analog input.  \nAIN8 can be used as a pseudo differenti al input when used with AINCOM or as \nthe negative input of a fully differenti al pair when used with AIN7. One or \nboth current sources can also be configured at this pin.  \nP1.7 has no digital output driver. It can, however, function as a digital input for \nwhich 0 must be written to the port bit. As a digital input, this pin must be \ndriven high or low externally. \n13 13 AINCOM/DAC I/O  All analog inputs can be referred to this pin, provided that a relevant pseudo differential input mode is selected. This pin also functions as an alternative pin \nout for the DAC. \n14 14 DAC O The voltage output from the DAC, if enabled, appears at this pin. \nNot applicable 15 AIN9 I AIN9 can be used as a pseudo differ ential analog inp ut when used with \nAINCOM or as the positive input of a fu lly differential pair when used with \nAIN10 (LFCSP version only).  \nNot applicable 16 AIN10 I AIN10 can be used as a pseudo differ ential analog input when used with \nAINCOM or as the negative input of a fu lly differential pair when used with \nAIN9 (LFCSP version only). \n15 17 RESET I Reset Input. A high level on this pin for 16 core clock cycles while the \noscillator is running resets the device. This pin has an internal weak pull-down \nand a Schmitt trigger input stage. \n16 to 19, 22 to 25 18 to 21, 24 to 27 P3.0 to P3.7 I/O P3.0 to P3.7 are bidirectional port pins with internal pull-up resistors. Port 3 pins that have 1s written to them ar e pulled high by the internal pull-up \nresistors, and in that state can be used as inputs. As inputs, Port 3 pins being \npulled externally low source current because of the internal pull-up resistors. \nWhen driving a 0-to-1 output transition, a strong pull-up is active for one core \nclock period of the instruction cycle. \nPort 3 pins also have the various second ary functions described in this table. \n16 18 P3.0/RxD   Receiver Data for UART Serial Port. \n17 19 P3.1/TxD  Transmitter Data for UART Serial Port. \n18 20 P3.2/INT0   External Interrupt 0. This pin can also be used as a gate control input to Timer 0. \n19 21 P3.3/INT1   External Interrupt 1. This pin can also be used as a gate control input to Timer 1. \n22 24 P3.4/T0  Timer/Counter 0 External Input. \n23 25 P3.5/T1  Timer/Counter 1 External Input. \n24 26 P3.6/WR    External Data Memory Write Strobe. This pin latches the data byte from Port 0 \ninto an external data memory. \n25 27 P3.7/RD   External Data Memory Read Strobe. This pin enables the data from an external \ndata memory to Port 0. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 13 of 110 Pin No. \nMnemonic Type1 Description 52-MQFP 56-LFCSP \n20, 34, 48 22, 36, 51 DV DD S Digital Supply Voltage. \n21, 35, 47 23, 37, 38, \n50 DGND S Digital Ground. \n26 28 SCLK (I2C)  I/O Serial Interface Clock for the I2C Interface. As an input, this pin is a Schmitt- \ntriggered input. A weak in ternal pull-up is present on this pin unless it is \noutputting logic low. This pin can also be controlled in software as a digital \noutput pin. \n27 29 SDATA I/O Serial Data Pin for the I2C Interface. As an input, this pin has a weak internal \npull-up present unless it is outputting logic low. \n28 to 31, \n36 to 39 30 to 33, 39 to 42 P2.0 to P2.7 I/O Port 2 is a bidirectional port with internal pull-up resistors. Port 2 pins that have 1s written to them are pulled high  by the internal pull-up resistors, and \nin that state can be used as inputs . As inputs, Port 2 pins being pulled \nexternally low source current because of the internal pull-up resistors. Port 2 \nemits the middle and high-order address bytes during accesses to the 24-bit external data memory space.  \nPort 2 pins also have the various second ary functions described in this table. \n28 30 P2.0/SCLOCK (SPI)  Serial Interface Clock for the SPI Interface. As an input this pin is a Schmitt-\ntriggered input. A weak in ternal pull-up is present on this pin unless it is \noutputting logic low. \n29 31 P2.1/MOSI  Serial Master Output/Slave Input Data fo r the SPI Interface. A strong internal \npull-up is present on this  pin when the SPI interface outputs a logic high. A \nstrong internal pull-down is present on this pin when the SPI interface \noutputs a logic low.  \n30 32 P2.2/MISO  Master Input/Slave Output for the SPI Inte rface. A weak pull-up is present on \nthis input pin.  \n31 33 P2.3/SS /T2  Slave Select Input for the SPI Interface. A weak pull-up is present on this pin.  \nFor both package options, this pin can also be used to provide a clock input to Timer 2. When enabled, Counter 2 is incremented in response to a negative \ntransition on the T2 input pin.  \n36 39 P2.4/T2EX  Control Input to Timer 2. When enabled,  a negative transition on the T2EX \ninput pin causes a Timer 2 capture or reload event.  \n37 40 P2.5/PWM0  If the PWM is enabled, the PWM0 output appears at this pin.  \n38 41 P2.6/PWM1  If the PWM is enabled, the PWM1 output appears at this pin. \n39 42 P2.7/PWMCLK  If the PWM is enabled, an exte rnal PWM clock can be provided at this pin. \n32 34 XTAL1 I Input to the Crystal Oscillator Inverter. \n33 35 XTAL2 O Output from the Crystal Oscillator Inverter. See the Hardware Design \nConsiderations section for a description.  \n40 43 EA  External Access Enable, Logic Input. Wh en held high, this input enables the \ndevice to fetch code from internal program memory locations 0000H to F7FFH. No external program memory access is available on the ADuC845, \nADuC847, or ADuC848. To determine the mode of code execution, the EA\n pin \nis sampled at the end of an external RE SET assertion or as part of a device \npower cycle. EA  can also be used as an external emulation I/O pin, and \ntherefore the voltage level at this pin must not be changed during normal \noperation because this might cause an emulation interrupt that halts code \nexecution. \n41  44  PSEN  O Program Store Enable, Logic Output. This function is not used on the \nADuC845, ADuC847 , or ADuC848. This pin remains high during internal \nprogram execution.  \nPSEN  can also be used to enable serial download mode when pulled low \nthrough a resistor at the end of an external RESET assertion or as part of a \ndevice power cycle. \n42 45 ALE O Address Latch Enable, Logic Output. This output is used to latch the low byte (and page byte for 24-bit data address space accesses) of the address to \nexternal memory during external data memory access cycles. It can be \ndisabled by setting the PCON.4 bit in the PCON SFR. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 14 of 110 Pin No. \nMnemonic Type1 Description 52-MQFP 56-LFCSP \n43 to 46, \n49 to 52 46 to 49, 52 to 55 P0.0 to P0.7 I/O These pins are part of Port 0, which is an 8-bit open-drain bidirectional I/O port. Port 0 pins that have 1s written to them float, and, in that state, can be \nused as high impedance inp uts. An external pull-up resistor is required on P0 \noutputs to force a valid logic high level externally. Port 0 is also the \nmultiplexed low-order address and data bu s during accesses to external data \nmemory. In this application, Port 0 uses strong internal pull-ups when \nemitting 1s. \n EP EPAD  Exposed Pad. For the LFCSP , th e exposed paddle must be left unconnected. \n \n1 I = input, S = supply, I/O mean s input/output, and O = output. \n \n \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 15 of 110 GENERAL DESCRIPTION \nThe ADuC845, ADuC847, and ADuC848 are single-cycle, \n12.58 MIPs, 8052 core upgrades to the ADuC834  and \nADuC836. They include additional analog inputs for \napplications requiring more ADC channels.  \nThe ADuC845, ADuC847, and ADuC848 are complete smart \ntransducer front ends. The family integrates high resolution \nΣ-Δ ADCs with flexible, up to 10-channel, input multiplexing, a fast 8-bit MCU, and program and data Flash/EE memory on a \nsingle chip.  \nThe ADuC845 includes two (primary and auxiliary) 24-bit Σ-Δ \nADCs with internal buffering and PGA on the primary ADC. \nThe ADuC847 includes the same primary ADC as the ADuC845  \n(auxiliary ADC removed). The ADuC848 is a 16-bit ADC \nversion of the ADuC847.  \nThe ADCs incorporate flexible input multiplexing, a temperature \nsensor ( ADuC845  only), and a PGA (primary ADC only) \nallowing direct measurement of low-level signals. The ADCs include on-chip digital filtering and programmable output data \nrates that are intended for measuring wide dynamic range and low frequency signals, such as those in weigh scale, strain gage, \npressure transducer, or temperature measurement applications. The devices operate from a 32 kHz crystal with an on-chip PLL \ngenerating a high frequency clock of 12.58 MHz. This clock is \nrouted through a programmable clock divider from which the MCU core clock operating frequency is generated. The micro-controller core is an optimized single-cycle 8052 offering up to 12.58 MIPs performance while maintaining 8051 instruction set compatibility. \nThe available nonvolatile Flash/EE program memory options \nare 62 kbytes, 32 kbytes, and 8 kbytes. 4 kbytes of nonvolatile Flash/EE data memory and 2304 bytes of data RAM are also \nprovided on-chip. The program memory can be configured as data memory to give up to 60 kbytes of NV data memory in \ndata logging applications. \nOn-chip factory firmware supports in-circuit serial download \nand debug modes (via UART), as well as single-pin emulation \nmode via the EA\n pin. The ADuC845 , ADuC847, and ADuC848 \nare supported by the QuickStart™ development system featuring \nlow cost software and hardware development tools. \n \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 16 of 110 WATCHDOG\nTIMER2304 BYTES\nUSER RAM\nPOWER SUPPLY\nMONITORTEMP\nSENSOR\n200\uf06dA 200\uf06dABAND GAP\nREFERENCE\nVREF\nDETECTAVDD\nAGND\nDVDD\nDGND\nRESETPOR\nMOSI\nMISO\nSS\nXTAL1ADuC845\nADCPRIMARY ADC\n24-BIT\n\uf053-\uf044 ADCCONTROL\nAND\nCALIBRATIONDACDAC\nCONTROL12-BIT\nVOLTAGE\nOUTPUT DAC\nT0\nT1\nT2EXT2\nINT0\nINT1EAPSEN\nALESINGLE-PIN\nEMULATORTxDRxD4 kBYTES DATA/\nFLASH/EE62 kBYTES PROGRAM/\nFLASH/EE\nUART\nSERIAL PORTCURRENT\nSOURCE\nMIXSINGLE-\nCYCLE\n8052\nMCU\nCORE\nDOWNLOADER\nDEBUGGER\nSPI SERIAL\nINTERFACE16-BIT\nCOUNTER\nTIMERS\nWAKE-UP/\nRTC TIMERPLL WITH PROG.\nCLOCK DIVIDER\nXTAL2OSC2\uf0b4DATA POINTERS\n11-BIT STACK POINTERAIN\nMUXAIN1\nAIN2\nMUXPWM0\nPWM1PWM\nCONTROL\nUART\nTIMER\nSCLK\nSCLK\nSDATAI2C SERIAL\nINTERFACE\n04741-004PGABUF\nBUF56\n4 36 51 23373850 18 17 19 44 43 45 30 31 32 33 28 29 34 3521203933252441\nPWMCL K424014\n56 221\nAIN3 2\nAIN4 3\nAIN5 9\nAIN6 10\nAIN7 11\nAIN8 12\nP0.0 (AD0)\nP0.1 (AD1)\n46 47\nP0.2 (AD2)\n48\nP0.3 (AD3)\n49\nP0.4 (AD4)\n52\nP0.5 (AD5)\n53\nP0.6 (AD6)\n54\nP0.7 (AD7)\n55\nP3.0 (RxD)\nP3.1 (TxD)\n18 19\nP3.2 (INT0)\n20\nP3.3 (INT1)\n21\nP3.4 (T0)\n24\nP3.5 (T1)\n25\nP3.6 (WR)\n26\nP3.7 (RD)\n27P1.0/AIN1P1.1/AIN2\n56 1\nP1.2/AIN3/REFIN2+\n2\nP1.3/AIN4/REFIN2–\n3\nP1.4/AIN5\n9\nP1.5/AIN6\n10\nP1.6/AIN7/IEXC1\n11\nP1.7/AIN8/IEXC2\n12\nP2.0/SCLK (A8/A16)P2.1/MOSI (A9/A17)\n30 31\nP2.2/MISO (A10/A18)\n32\nP2.3/SS/T2 (A11/A19)\n33\nP2.4/T2EX (A12/A20)\n39\nP2.5/PWM0 (A13/A21)\n40\nP2.6/PWM1 (A14/A22)\n41\nP2.7/PWMCLK (A15/A23)\n42\nAIN9 15\nAIN10 16\nAINCOM/DAC 13DUAL\n16-BIT\n\uf053-\uf044DAC\nDUAL\n16-BIT\nPWMADC\nCONTROL\nAND\nCALIBRATIONAUXILIARY ADC\n24-BIT\n\uf053-\uf044 ADC\nREFIN+ 8\nREFIN– 7\nIEXC1 11\nIEXC2 12\nNOTES\n1. THE PIN NUMBERS REFER TO THE LFCSP PACKAGE ONLY.\n \nFigure 4. Detailed Block Diagram of the ADuC845 \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 17 of 110 WATCHDOG\nTIMER2304 BYTES\nUSER RAM\nPOWER SUPPLY\nMONITOR\n200\uf06dA 200\uf06dABAND GAP\nREFERENCE\nVREF\nDETECTAVDD\nAGND\nDVDD\nRESETPOR\nMOSI\nMISO\nSS\nXTAL1ADuC847\nADC\nCONTROL\nAND\nCALIBRATIONDACDAC\nCONTROL12-BIT\nVOLTAGE\nOUTPUT DAC\nT0\nT1\nT2EXT2\nINT0\nINT1EAPSEN\nALESINGLE-PIN\nEMULATORTxDRxD4 kBYTES DATA/\nFLASH/EE62 kBYTES PROGRAM/\nFLASH/EE\nUART\nSERIAL PORTCURRENT\nSOURCE\nMIXSINGLE-\nCYCLE\n8052\nMCU\nCORE\nDOWNLOADER\nDEBUGGER\nSPI SERIAL\nINTERFACE16-BIT\nCOUNTER\nTIMERS\nWAKE-UP/\nRTC TIMERPLL WITH PROG.\nCLOCK DIVIDER\nXTAL2OSC2\uf0b4DATA POINTERS\n11-BIT STACK POINTERAIN\nMUXAIN1\nAIN2\nMUXPWM0\nPWM1PWM\nCONTROL\nUART\nTIMER\nSCLK\nSCLK\nSDATAI2C SERIAL\nINTERFACE\n04741-070PGABUF\nBUF56\n4 36 51 23\nDGND373850 18 17 19 44 43 45 30 31 32 33 28 29 34 3521203933252441\nPWMCL K424014\n56 221\nAIN3 2\nAIN4 3\nAIN5 9\nAIN6 10\nAIN7 11\nAIN8 12\nP0.0 (AD0)\nP0.1 (AD1)\n46 47\nP0.2 (AD2)\n48\nP0.3 (AD3)\n49\nP0.4 (AD4)\n52\nP0.5 (AD5)\n53\nP0.6 (AD6)\n54\nP0.7 (AD7)\n55\nP3.0 (RxD)\nP3.1 (TxD)\n18 19\nP3.2 (INT0)\n20\nP3.3 (INT1)\n21\nP3.4 (T0)\n24\nP3.5 (T1)\n25\nP3.6 (WR)\n26\nP3.7 (RD)\n27P1.0/AIN1P1.1/AIN2\n56 1\nP1.2/AIN3/REFIN2+\n2\nP1.3/AIN4/REFIN2–\n3\nP1.4/AIN5\n9\nP1.5/AIN6\n10\nP1.6/AIN7/IEXC1\n11\nP1.7/AIN8/IEXC2\n12\nP2.0/SCLK (A8/A16)P2.1/MOSI (A9/A17)\n30 31\nP2.2/MISO (A10/A18)\n32\nP2.3/SS/T2 (A11/A19)\n33\nP2.4/T2EX (A12/A20)\n39\nP2.5/PWM0 (A13/A21)\n40\nP2.6/PWM1 (A14/A22)\n41\nP2.7/PWMCLK (A15/A23)\n42\nAIN9 15\nAIN10 16\nAINCOM/DAC 13DUAL\n16-BIT\n\uf053-\uf044DAC\nDUAL\n16-BIT\nPWM\nREFIN+ 8\nREFIN– 7\nIEXC1 11\nIEXC2 12PRIMARY ADC\n24-BIT\n\uf053-\uf044 ADC\nNOTES\n1. THE PIN NUMBERS REFER TO THE LFCSP PACKAGE ONLY.\n \nFigure 5. Detailed Block Diagram of the ADuC847 \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 18 of 110 WATCHDOG\nTIMER2304 BYTES\nUSER RAM\nPOWER SUPPLY\nMONITOR\n200\uf06dA 200\uf06dABAND GAP\nREFERENCE\nVREF\nDETECTAVDD\nAGND\nDVDD\nDGND\nRESETPOR\nMOSI\nMISO\nSS\nXTAL1ADuC848\nADC\nCONTROL\nAND\nCALIBRATIONDACDAC\nCONTROL12-BIT\nVOLTAGE\nOUTPUT DAC\nT0\nT1\nT2EXT2\nINT0\nINT1EAPSEN\nALESINGLE-PIN\nEMULATORTxDRxD4 kBYTES DATA/\nFLASH/EE62 kBYTES PROGRAM/\nFLASH/EE\nUART\nSERIAL PORTCURRENT\nSOURCE\nMIXSINGLE-\nCYCLE\n8052\nMCU\nCORE\nDOWNLOADER\nDEBUGGER\nSPI SERIAL\nINTERFACE16-BIT\nCOUNTER\nTIMERS\nWAKE-UP/\nRTC TIMERPLL WITH PROG.\nCLOCK DIVIDER\nXTAL2OSC2\uf0b4DATA POINTERS\n11-BIT STACK POINTERAIN\nMUXAIN1\nAIN2\nMUXPWM0\nPWM1PWM\nCONTROL\nUART\nTIMER\nSCLK\nSCLK\nSDATAI2C SERIAL\nINTERFACE\n04741-072PGABUF\nBUF56\n4 36 51 23373850 18 17 19 44 43 45 30 31 32 33 28 29 34 3521203933252441\nPWMCL K424014\n56 221\nAIN3 2\nAIN4 3\nAIN5 9\nAIN6 10\nAIN7 11\nAIN8 12\nP0.0 (AD0)\nP0.1 (AD1)\n46 47\nP0.2 (AD2)\n48\nP0.3 (AD3)\n49\nP0.4 (AD4)\n52\nP0.5 (AD5)\n53\nP0.6 (AD6)\n54\nP0.7 (AD7)\n55\nP3.0 (RxD)\nP3.1 (TxD)\n18 19\nP3.2 (INT0)\n20\nP3.3 (INT1)\n21\nP3.4 (T0)\n24\nP3.5 (T1)\n25\nP3.6 (WR)\n26\nP3.7 (RD)\n27P1.0/AIN1P1.1/AIN2\n56 1\nP1.2/AIN3/REFIN2+\n2\nP1.3/AIN4/REFIN2–\n3\nP1.4/AIN5\n9\nP1.5/AIN6\n10\nP1.6/AIN7/IEXC1\n11\nP1.7/AIN8/IEXC2\n12\nP2.0/SCLK (A8/A16)P2.1/MOSI (A9/A17)\n30 31\nP2.2/MISO (A10/A18)\n32\nP2.3/SS/T2 (A11/A19)\n33\nP2.4/T2EX (A12/A20)\n39\nP2.5/PWM0 (A13/A21)\n40\nP2.6/PWM1 (A14/A22)\n41\nP2.7/PWMCLK (A15/A23)\n42\nAIN9 15\nAIN10 16\nAINCOM/DAC 13DUAL\n16-BIT\n\uf053-\uf044DAC\nDUAL\n16-BIT\nPWM\nREFIN+ 8\nREFIN– 7\nIEXC1 11\nIEXC2 12PRIMARY ADC\n16-BIT\n\uf053-\uf044 ADC\nNOTES\n1. THE PIN NUMBERS REFER TO THE LFCSP PACKAGE ONLY.\n \nFigure 6. Detailed Block Diagram of the ADuC848 \n \n8052 INSTRUCTION SET \nTable 4 documents the number of clock cycles required for each \ninstruction. Most instructions are executed in one or two clock \ncycles resulting in 12.58 MIPs peak performance when operating \nat PLLCON = 00H.  \nTIMER OPERATION \nTimers on a standard 8052 increment by one with each machine \ncycle. On the ADuC845, ADuC847, and ADuC848, one \nmachine cycle is equal to one clock cycle; therefore, the timers \nincrement at the same rate as the core clock. ALE \nOn the ADuC834, the output on the ALE pin is a clock at 1/6th \nof the core operating frequency. On the ADuC845, ADuC847, \nand ADuC848, the ALE pin operates as follows. For a single \nmachine cycle instruction, ALE is high for the entire machine \ncycle. For a two or more machine cycle instruction, ALE is high for the first machine cycle and then low for the remainder of the machine cycles.   \nEXTERNAL MEMORY ACCESS \nThe ADuC845, ADuC847 , and ADuC848  do not support external \nprogram memory access, but the devices can access up to 16 MB (24 address bits) of external data memory. When accessing external RAM, the EW AIT register might need to be programmed to give extra machine cycles to MOVX commands to allow differing external RAM access speeds.  \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 19 of 110 COMPLETE SFR MAP \nRESERVED\nRESERVED RESERVED RESERVED RESERVED RESERVED RESERVED RESERVEDRESERVED RESERVEDNOT USED RESERVEDRESERVED RESERVEDSPICON\nF8H 05HDACL\nFBH 00HDACH\nADuC845 ONLY ADuC845 ONLY\nADuC845 ONLY ADuC845 ONLY\nADuC845 ONLY ADuC845 ONLY ADuC845 ONLYFCH 00HDACCON\nFDH 00HRESERVED\nB\nF0H 00HI2CADD1\nF2H 7FHRESERVED RESERVED RESERVED\nI2CCON\nE8H 00HGN0L2GN0M2GN0H2GN1L2GN1H2\nE9H xxH EAH xxH EBH xxH ECH xxH EDH xxHRESERVED RESERVED\nACC\nE0H 00HOF0L\nE1H xxHOF0M\nE2H xxHOF0H\nE3H xxHOF1L\nE4H xxHOF1H\nE5H xxHADC0CON2\nE6H 00H\nADCSTAT\nD8H 00HADC0L\nD9H 00HADC0M\nDAH 00HADC0H\nDBH 00HADC1M\nDCH 00HADC1H\nDDH 00HADC1L\nDEH 00H\nPSW\nD0H 00HADCMODE\nD1H 08HADC0CON1\nD2H 07HADC1CON\nD3H 00HSF\nD4H 45HICON\nD5H 00HRESERVED\nT2CON\nC8H 00HRCAP2L\nCAH 00HRCAP2H\nCBH 00HTL2\nCCH 00HTH2\nCDH 00HRESERVED\nWDCON\nC0H 10H\nIP\nB8H 00HECON\nB9H 00HEDATA1\nBCH 00HEDATA2\nBDH 00H\nIE\nA8H 00HIEIP2\nA9H A 0H\nP2\nA0H FFH\nSCON\n98H 00HSBUF\n99H 00HI2CDAT\n9AH 00H\nP1\n90H FFH\nTCON\n88H 00HTMOD\n89H 00HTL0\n8AH 00HTL1\n8BH 00HTH0\n8CH 00HTH1\n8DH 00H\nP0\n80H FFHSP\n81H 07HDPL\n82H 00HDPH\n83H 00HDPP\n84H 00HRESERVED\nRESERVED\nP3\nB0H FFHSPIDAT\nF7H 00H\nRESERVED\nPSMCON\nDFH DEH\nEDARL\nC6H 00H\nEDATA3\nBEH 00HEDATA4\nBFH 00H\nPCON\n87H 00HISPI\nFFH 0WCOL\nFEH 0SPE\nFDH 0SPIM\nFCH 0CPOL\nFBH 0CPHA\nFAHSPR1\nF9H 0SPR0\nF8H 0BITS\nF7H 0 F6H 0 F5H 0 F4H 0 F3H 0 F2H F1H 0 F0H 0BITS\nMDO\nEFH 0 EEH 0MCO\nEDH 0 ECH 0 EBH 0 EAH E9H 0 E8H 0BITS\nE7H 0 E6H 0 E5H 0 E4H 0 E3H 0 E2H E1H 0 E0H 0BITS\nRDY0\nDFH 0RDY1\nDEH 0CAL\nDDH 0NOXREF\nDCH 0ERR0\nDBH 0ERR1\nDAH D9H 0 D8H 0BITS\nCY\nD7H 0AC\nD6H 0F0\nD5H 0RS1\nD4H 0RS0\nD3H 0OV\nD2HFI\nD1H 0P\nD0H 0BITS\nTF2\nCFH 0EXF2\nCEH 0RCLK\nCDH 0TCLK\nCCH 0EXEN2\nCBH 0TR2\nCAHCNT2\nC9H 0CAP2\nC8H 0BITS\nPRE3\nC7H 0PRE2\nC6H 0PRE1\nC5H 0 C4H 1WDIR\nC3H 0WDS\nC2HWDE\nC1H 0WDWR\nC0H 0BITS\nBFH 0PADC\nBEH 0PT2\nBDH 0PS\nBCH 0PT1\nBBH 0PX1\nBAHPT0\nB9H 0PX0\nB8H 0BITS\nRD\nB7H 1WR\nB6H 1T1\nB5H 1T0\nB4H 1INT1\nB3H 1INT0\nB2HTxD\nB1H 1RxD\nB0H 1BITS\nEA\nAFHEADC\nAEHET2\nADHES\nACH 0ET1\nABH 0EX1\nAAHET0\nA9H 0EX0\nA8H 0BITS\nA7H A6H A5H 1 A4H 1 A3H 1 A2H A1H 1 A0H 1BITS\nSM0\n9FH 0SM1\n9EH 0SM2\n9DH 0REN\n9CH 0TB8\n9BH 0RB8\n9AHTI\n99H 0RI\n98H 0BITS\n97H 1 96H 1 95H 1 94H 1 93H 1 92HT2EX\n91H 1T2\n90H 1BITS\nTF1\n8FH 0TR1\n8EH 0TF0\n8DH 0TR0\n8CH 0IE1\n8BH 0IT1\n8AHIE0\n89H 0IT0\n88H 0BITS\n87H 1 86H 1 85H 1 84H 1 83H 1 82H 81H 1 80H 1BITS1\n1\n0\n1\n0\n1\nIE0\n89H 0IT0\n88H 0TCON\n88H 00HBIT MNEMONIC\nBIT ADDRESS\n RESET DEFAULT BIT VALUEMNEMONIC\nRESET DEFAULT VALUE\nSFR ADDRESSTHESE BITS ARE CONTAINED IN THIS BYTE.SFR MAP KEY:\nSFR NOTE:\nSFRs WHOSE ADDRESSES END IN 0H OR 8H ARE BIT ADDRESSABLE.1THESE SFRs MAINTAIN THEIR PRE-RESET VALUES AFTER A RESET IF TIMECON.0 = 1.\n2CALIBRATION COEFFICIENTS ARE PRECONFIGURED ON POWER-UP TO FACTORY CALIBRATED VALUES.1\nRESERVED RESERVEDRESERVED0\n0\n0\n0\n0\n0\n0\n0\n0 0 00\n11TIMECON HTHSE C1 SEC1 MIN1 HOUR1INTVAL DPCON\nA1H A2H A3H A4H A5H A6H A7H 00H 00H 00H 00H 00H 00H 00HRESERVED RESERVED RESERVED RESERVEDRESERVED RESERVED\nPWMCON\nAEH 00HCFG845/7/8\nAFH 00H\nRESERVED RESERVEDT3FD T3CON\n9DH 9EH 00H 00HEWAIT\n9FH 00HPWM0L PWM0H PWM1L PWM1H SPH\n00H 00H 00H 00H 00H B1H B2H B3H B4H B7HRESERVED RESERVED RESERVEDCHIPID\nC2H A0HEDARH\nC7H 00HMDE I2CMRESERVED\nPRE0PLLCON\nD7H 53HMDI I2CRS I2CTX I2CI\nI2CADD\n9BH 55H\n04741-073NOT AVAILABLE\nON ADuC848\nADuC845 ONLY\n \nFigure 7. Complete SFR Map for the ADuC845 , ADuC847 , and ADuC848 \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 20 of 110 FUNCTIONAL DESCRIPTION \n8051 INSTRUCTION SET \nTable 4. Optimized Single-Cycle 8051 Instruction Set  \nMnemonic Description Bytes Cycles1 \nArithmetic     \nA A,Rn Add register to A 1 1 \nADD A,@Ri Add indirect memory to A 1 2 \nADD A,dir Add direct byte to A 2 2 \nADD A,#data Add immediate to A 2 2 \nADDC A,Rn Add register to A with carry 1 1 \nADDC A,@Ri Add indirect memory to A with carry 1 2 \nADDC A,dir Add direct byte to A with carry 2 2 \nADD A,#data Add immediate to A with carry 2 2 \nSUBB A,Rn Subtract register from A with borrow 1 1 \nSUBB A,@Ri Subtract indirect memory from A with borrow 1 2 \nSUBB A,dir Subtract direct from A with borrow 2 2 \nSUBB A,#data Subtract immediate from A with borrow 2 2 \nINC A Increment A 1 1 \nINC Rn Increment register 1 1 \nINC @Ri Increment indirect memory 1 2 \nINC dir Increment direct byte 2 2 \nINC DPTR Increment data pointer 1 3 \nDEC A Decrement A 1 1 \nDEC Rn Decrement register 1 1 \nDEC @Ri Decrement indirect memory 1 2 \nDEC dir Decrement direct byte  2 2 \nMUL AB Multiply A by B 1 4 \nDIV AB Divide A by B 1 9 \nDA A Decimal adjust A 1 2 \nLogic    \nANL A,Rn AND register to A 1 1 \nANL A,@Ri AND indirect memory to A 1 2 \nANL A,dir AND direct byte to A 2 2 \nANL A,#data AND immediate to A 2 2 \nANL dir,A AND A to direct byte 2 2 \nANL dir,#data AND immediate data to direct byte 3 3 \nORL A,Rn OR register to A 1 1 \nORL A,@Ri OR indirect memory to A 1 2 \nORL A,dir OR direct byte to A 2 2 \nORL A,#data OR immediate to A 2 2 \nORL dir,A OR A to direct byte 2  2 \nORL dir,#data OR immediate data to direct byte 3 3 \nXRL A,Rn Exclusive-OR register to A 1 1 \nXRL A,@Ri Exclusive-OR indirect memory to A 2 2 \nXRL A,#data Exclusive-OR immediate to A 2 2 \nXRL dir,A Exclusive-OR A to direct byte 2 2 \nXRL A,dir Exclusive-OR indirect memory to A 2 2 \nXRL dir,#data Exclusive-OR immediate data to direct 3 3 \nCLR A Clear A 1 1 \nCPL A Complement A 1 1 \nSWAP A Swap nibbles of A 1 1 \nRL A Rotate A left 1 1 \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 21 of 110 Mnemonic Description Bytes Cycles1 \nRLC A Rotate A left through carry 1 1 \nRR A Rotate A right 1 1 \nRRC A Rotate A right through carry 1 1 \nData Transfer    \nMOV A,Rn Move register to A 1 1  \nMOV A,@Ri Move indirect memory to A 1 2  \nMOV Rn,A Move A to register 1 1  \nMOV @Ri,A Move A to indirect memory 1 2  \nMOV A,dir Move direct byte to A 2 2  \nMOV A,#data Move immediate to A 2 2  \nMOV Rn,#data Move register to immediate 2 2  \nMOV dir,A Move A to direct byte 2 2  \nMOV Rn, dir Move register to direct byte 2 2  \nMOV dir, Rn Move direct to register 2 2  \nMOV @Ri,#data Move immediate to indirect memory 2 2 \nMOV dir,@Ri Move indirect to direct memory 2 2 \nMOV @Ri,dir Move direct to indirect memory 2 2 \nMOV dir,dir Move direct byte to direct byte 3 3 \nMOV dir,#data Move immediate to direct byte 3 3 \nMOV DPTR,#data Move immediate to data pointer 3 3 \nMOVC A,@A+DPTR Move code byte relative DPTR to A 1 4 \nMOVC A,@A+PC Move code byte relative PC to A 1 4 \nMOVX2 A,@Ri Move external (A8) data to A 1 4 \nMOVX2 A,@DPTR Move external (A16) data to A 1 4 \nMOVX2 @Ri,A Move A to external data (A8) 1 4 \nMOVX2 @DPTR,A Move A to external data (A16) 1 4 \nPUSH dir Push direct byte onto stack 2 2 \nPOP dir Pop direct byte from stack 2 2 \nXCH A,Rn Exchange A and register 1 1 \nXCH A,@Ri Exchange A and indirect memory 1 2 \nXCHD A,@Ri Exchange A and indirect memory nibble 1 2 \nXCH A,dir Exchange A and direct byte 2 2 \nBoolean     \nCLR C Clear carry 1 1 \nCLR bit Clear direct bit 2 2 \nSETB C Set carry 1 1 \nSETB bit Set direct bit 2 2 \nCPL C Complement carry 1 1 \nCPL bit Complement direct bit 2 2 \nANL C,bit AND direct bit and carry 2 2 \nANL C,/bit AND direct bit inverse to carry 2 2 \nORL C,bit OR direct bit and carry 2 2 \nORL C,/bit OR direct bit inverse to carry 2 2 \nMOV C,bit Move direct bit to carry 2 2 \nMOV bit,C Move carry to direct bit 2 2 \nBranching    \nJMP @A+DPTR Jump indirect relative to DPTR 1 3 \nRET Return from subroutine 1 4 \nRETI Return from interrupt 1 4 \nACALL addr11 Absolute jump to subroutine 2 3 \nAJMP addr11 Absolute jump unconditional 2 3 \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 22 of 110 Mnemonic Description Bytes Cycles1 \nSJMP rel Short jump (relative address) 2 3 \nJC rel Jump on carry = 1 2 3 \nJNC rel Jump on carry = 0 2 3  \nJZ rel Jump on accumulator = 0 2 3 \nJNZ rel Jump on accumulator ! = 0 2 3 \nDJNZ Rn,rel Decrement register, JNZ relative 2 3 \nLJMP Long jump unconditional 3 4 \nLCALL3 addr16 Long jump to subroutine 3 4 \nJB bit,rel Jump on direct bit = 1 3 4 \nJNB bit,rel Jump on direct bit = 0 3 4 \nJBC bit,rel Jump on direct bit = 1 and clear 3 4 \nCJNE A,dir,rel Compare A, direct JNE relative 3 4 \nCJNE A,#data,rel Compare A, immediate JNE relative 3 4 \nCJNE Rn,#data,rel Compare register, immediate JNE relative 3 4 \nCJNE @Ri,#data,rel Compare indirect, immediate JNE relative 3 4 \nDJNZ dir,rel Decrement direct byte, JNZ relative 3 4 \nMiscellaneous    \nNOP No operation 1 1 \n \n1 One cycle is one clock. \n2 MOVX instructions are four cycles when they have 0 wait state. Cycles of MOVX instructions are 4 + n cycles when they have n wait states as programmed via EWAIT. \n3 LCALL instructions are three cycl es when the LCALL instructio n comes from an interrupt.  \n \nMEMORY ORGANIZATION \nThe ADuC845, ADuC847, and ADuC848 contain four memory \nblocks: \n\uf0b7 62 kbytes/32 kbytes/8 kbytes of on-chip Flash/EE program \nmemory \n\uf0b7 4 kbytes of on-chip Flash/EE data memory \n\uf0b7 256 bytes of general-purpose RAM \n\uf0b7 2 kbytes of internal XRAM \nFlash/EE Program Memory \nThe devices provide up to 62 kbytes of Flash/EE program memory to run user code. All further references to Flash/EE \nprogram memory assume the 62-kbyte option.  \nWhen EA\n is pulled high externally during a power cycle or a \nhardware reset, the devices default to code execution from their \ninternal 62 kbytes of Flash/EE program memory. The devices do not support the rollover from internal code space to external code space. No external code space is available on the devices. \nPermanently embedded firmware allows code to be serially \ndownloaded to the 62 kbytes of internal code space via the UART serial port while the device is in-circuit. No external \nhardware is required.  \nDuring run time, 56 kbytes of the 62-kbyte program memory \ncan be reprogrammed. This means that the code space can be \nupgraded in the field by using a user-defined protocol running on the devices, or it can be used as a data memory. For details, see \nthe Nonvolatile Flash/EE Memory Overview section. Flash/EE Data Memory \nThe user has 4 kbytes of Flash/EE data memory available that \ncan be accessed indirectly by using a group of registers mapped \ninto the special function register (SFR) space. For details, see \nthe Nonvolatile Flash/EE Memory Overview section. \nGeneral-Purpose RAM \nThe general-purpose RAM is divided into two separate \nmemories, the upper and the lower 128 bytes of RAM. The \nlower 128 bytes of RAM can be accessed through direct or indirect addressing. The upper 128 bytes of RAM can be accessed only through indirect addressing because it shares the same address space as the SFR space, which must be accessed through direct addressing. \nThe lower 128 bytes of internal data memory are mapped as \nshown in Figure 8. The lowest 32 bytes are grouped into four banks of eight registers addressed as R0 to R7. The next 16 bytes \n(128 bits), locations 20H to 2FH above the register banks, form a block of directly addressable bit locations at Bit Addresses 00H to 7FH. The stack can be located anywhere in the internal memory address space, and the stack depth can be expanded up \nto 2048 bytes. \nReset initializes the stack pointer to location 07H. Any call or \npush pre-increments the SP before loading the stack. Therefore, \nloading the stack starts from location 08H, which is also the \nfirst register (R0) of Register Bank 1. Thus, if one is going to use \nmore than one register bank, the stack pointer should be \ninitialized to an area of RAM not used for data storage. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 23 of 110 11\n10\n01\n0007H0FH17H1FH2FH7FH\n00H08H10H18H20H\nRESET VALUE OF\nSTACK POINTER30H\nFOUR BANKS OF EIGHTREGISTERS\nR0 TO R7BIT-ADDRESSABLE\n(BIT ADDRESSES)GENERAL-PURPOSE\nAREA\nBANKS\nSELECTED\nVIA\nBITS IN PSW\n04741-008 \nFigure 8. Lower 128 Bytes of Internal Data Memory \nInternal XRAM \nThe ADuC845, ADuC847, and ADuC848 contain 2 kbytes of \non-chip extended data memory. This memory, although on-chip, is \naccessed via the MOVX instruction. The 2 kbytes of internal XRAM are mapped into the bottom 2 kbytes of the external address space if the CFG84x.0 (Table 7) bit is set; otherwise, access \nto the external data memory occurs just like a standard 8051. \nEven with the CFG84x.0 bit set, access to the external (off chip), \nXRAM occurs once the 24-bit DPTR is greater than 0007FFH. \nEXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG845/7/8.0 = 0EXTERNAL\nDATA\nMEMORY\nSPACE\n(24-BIT\nADDRESS\nSPACE)\n000000HFFFFFFH\nCFG845/7/8.0 = 10007FFH000800H\n2 kBYTES\nON-CHIP\nXRAM\n04741-009 \nFigure 9. Internal and External XRAM  \nWhen enabled and when accessing the internal XRAM, the P0 and P2 port pin operations, as well as the RD\n and WR strobes, \ndo not operate as a standard 8051 MOVX instruction. This allows the user to use these port pins as standard I/O. The internal XRAM can be configured as part of the extended 11-bit \nstack pointer. By default, the stack operates exactly like an 8052 \nin that it rolls over from FFH to 00H in the general-purpose \nRAM. On the ADuC845, ADuC847, and ADuC848, however, it  is possible (by setting CFG845.7/ADuC847.7/ADuC848.7) to \nenable the 11-bit extended stack pointer. In this case, the stack \nrolls over from FFH in RAM to 0100H in XRAM. \nThe 11-bit stack pointer is visible in the SPH and SP SFRs. The \nSP SFR is located at 81H as with a standard 8052. The SPH SFR \nis located at B7H. The 3 LSBs of the SPH SFR contain the 3 extra bits necessary to extend the 8-bit stack pointer in the SP \nSFR into an 11-bit stack pointer. \nUPPER 1792\nBYTES OF\nON-CHIP XRAM\n(DATA + STACK\nFOR EXSP = 1,\nDATA ONLY\nFOR EXSP = 0)\n256 BYTES OF\nON-CHIP DATA\nRAM\n(DATA +\nSTACK)LOWER 256\nBYTES OF\nON-CHIP XRAM\n(DATA ONLY)\n00HFFH\n00H07FFH\nCFG845/7/8.7 = 0\n100H\n04741-010CFG845/7/8.7 = 1\n \nFigure 10. Extended Stack Pointer Operation \nExternal Data Memory (External XRAM) \nThere is no support for external program memory access to the \ndevices. However, just like a standard 8051-compatible core, the \nADuC845/ ADuC847/ ADuC848  can access external data \nmemory using a MOVX instruction. The MOVX instruction \nautomatically outputs the various control strobes required to \naccess the data memory. The devices, however, can access up to 16 Mbytes of external data memory. This is an enhancement of the 64 kbytes of external data memory space available on a standard 8051-compatible core. See the Hardware Design Considerations section for details.  \nWhen accessing external RAM, the EW AIT register might need \nto be programmed to give extra machine cycles to the MOVX \noperation. This is to account for differing external RAM access speeds.  \nEWAIT SFR \nSFR Address:  9FH \nPower-On Default: 00H \nBit Addressable:  No \nThis special function register (SFR), when programmed, \ndictates the number of wait states for the MOVX instruction. \nThe value can vary between 0H and 7H. The MOVX instruc-tion increases by one machine cycle (4 + n, where n = EW AIT \nnumber in decimal) for every increase in the EW AIT value. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 24 of 110 SPECIAL FUNCTION REGISTERS (SFRs) \nThe SFR space is mapped into the upper 128 bytes of internal \ndata memory space and accessed by direct addressing only. It \nprovides an interface between the CPU and all on-chip periph-erals. A block diagram showing the programming model of the \nADuC845/ ADuC847/ ADuC848  via the SFR area is shown in \nFigure 11. \nAll registers except the program counter (PC) and the four \ngeneral-purpose register banks reside in the SFR area. The SFR \nregisters include control, configuration, and data registers that \nprovide an interface between the CPU and all on-chip peripherals.  \n128-BYTE\nSPECIAL\nFUNCTION\nREGISTER\nAREA62-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE PROGRAM\nMEMORY\n8051-\nCOMPATIBLE\nCORE\nOTHER ON-CHIP\nPERIPHERALS\nTEMPERATURE\nSENSOR\nCURRENT SOURCES\n12-BIT DAC\nSERIAL I/O\nWDT\nPSM\nTIC\nPWM\uf053-\uf044 ADC4-kBYTE\nELECTRICALLY\nREPROGRAMMABLE\nNONVOLATILE\nFLASH/EE DATA\nMEMORY\n256 BYTES RAM\n2kBYTES XRAM\n04741-011 \nFigure 11. Programming Model \nAccumulator SFR (ACC) \nACC is the accumulator register, which is used for math opera-\ntions including addition, subtraction, integer multiplication and \ndivision, and Boolean bit manipulations. The mnemonics for \naccumulator-specific instructions usually refer to the \naccumulator as A. \nB SFR (B) \nThe B register is used with the accumulator for multiplication \nand division operations. For other instructions, it can be treated as a general-purpose scratch pad register. Data Pointer (DPTR) \nThe data pointer is made up of three 8-bit registers: DPP (page byte), DPH (high byte), and DPL (low byte). These provide \nmemory addresses for internal code and data memory access. \nThe DPTR can be manipulated as a 16-bit register (DPTR = DPH, DPL), although INC DPTR instructions automatically carry over to DPP , or as three independent 8-bit registers (DPP , \nDPH, DPL).  \nThe ADuC845/ ADuC847/ ADuC848 support dual data \npointers. See the Dual Data Pointers section. \nStack Pointer (SP and SPH) \nThe SP SFR is the stack pointer, which is used to hold an \ninternal RAM address called the top of the stack . The SP register \nis incremented before data is stored during PUSH and CALL \nexecutions. Although the stack can reside anywhere in on-chip \nRAM, the SP register is initialized to 07H after a reset. This \ncauses the stack to begin at location 08H. \nAs mentioned earlier, the devices offer an extended 11-bit stack \npointer. The three extra bits needed to make up the 11-bit stack \npointer are the three LSBs of the SPH byte located at B7H. To \nenable the SPH SFR, the EXSP (CFG84x.7) bit must be set; \notherwise, the SPH SFR can be neither written to nor read from. \nProgram Status Word (PSW) \nThe PSW SFR contains several bits that reflect the current \nstatus of the CPU as listed in Table 5. \nSFR Address:  D0H \nPower-On Default: 00H \nBit Addressable:  Y es \n \nTable 5. PSW SFR Bit Designations \nBit No. Name Description \n7 CY Carry Flag. \n6 AC Auxiliary Carry Flag. \n5 F0 General-Purpose Flag. \n4, 3 RS1, RS0 Register Bank Select Bits. \n  RS1 RS0 Selected Bank \n  0 0 0 \n  0 1 1 \n  1 0 2 \n  1 1 3 \n2 OV Overflow Flag. \n1 F1 General-Purpose Flag. \n0 P Parity Bit. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 25 of 110 Power Control Register (PCON) \nThe PCON SFR contains bits for power-saving options and \ngeneral-purpose status flags as listed in Table 6. \nSFR Address:  87H \nPower-On Default: 00H \nBit Addressable:  No \nTable 6. PCON SFR Bit Designations \nBit No. Name Description \n7 SMOD Double UART Baud Rate.  \n0 = Normal, 1 = Double Baud Rate. \n6 SERIPD Serial Power-Down Inte rrupt Enable. If this \nbit is set, a serial interrupt from either SPI \nor I2C can terminate the power-down \nmode. \n5 INT0PD INT0 Power-Down Interrupt Enable.  \nIf this bit is set, either a level (IT0  = 0) or a \nnegative-going transition (IT0  = 1) on the \nINT0 pin terminates power-down mode.  \n4 ALEOFF If set to 1, the ALE output is disabled.  \n3 GF1 General-Purpose Flag Bit. \n2 GF0 General-Purpose Flag Bit. \n1 PD Power-Down Mode Enable. If set to 1, the device enters power-down mode.  \n0 ----- Not Implemented. Write Don’t Care. \n ADuC845/ ADuC847/ ADuC848  Configuration Register \n(CFG845/CFG847/CFG848) \nThe CFG845/CFG847/CFG848 SFR contains the bits necessary \nto configure the internal XRAM and the extended SP . By default, it configures the user into 8051 mode, that is, extended SP , and \nthe internal XRAM are disabled. When using in a program, use \nthe device name only, that is, CFG845, CFG847, or CFG848. \nSFR Address:  AFH \nPower-On Default: 00H \nBit Addressable:  No \nTable 7. CFG845/CFG847/CFG 848 SFR Bit Designations \nBit No. Name Description \n7 EXSP Extended SP Enable.  \nIf this bit is set to 1, the stack rolls over \nfrom SPH/SP = 00FFH to 0100H.  \nIf this bit is cleared to 0, SPH SFR is \ndisabled and the stack rolls over from  \nSP = FFH to SP = 00H. \n6 ---- Not Implemented. Write Don’t Care. \n5 ---- Not Implemented. Write Don’t Care.  \n4 ---- Not Implemented. Write Don’t Care.  \n3 ---- Not Implemented. Write Don’t Care.  \n2 ---- Not Implemented. Write Don’t Care.  \n1 ---- Not Implemented. Write Don’t Care.  \n0 XRAMEN If this bit is set to 1, the internal XRAM is \nmapped into the lower 2 kbytes of the \nexternal address space.  \nIf this bit is cleared to 0, the internal XRAM \nis accessible and up to 16 MB of external \ndata memory become available. See \nFigure 8. \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 26 of 110 ADC CIRCUIT INFORMATION \nThe ADuC845 incorporates two 10-channel (8-channel on the \nMQFP package) 24-bit Σ-Δ ADCs, while the ADuC847 and \nADuC848 each incorporate a single 10-channel (8-channel on \nthe MQFP package) 24-bit and 16-bit Σ-Δ ADC. \nEach device also includes an on-chip programmable gain \namplifier and configurable buffering (neither is available on the \nauxiliary ADC on the ADuC845 ). The devices also incorporate \ndigital filtering intended for measuring wide dynamic range and \nlow frequency signals such as those in weigh-scale, strain-gage, \npressure transducer, or temperature measurement applications. \nThe ADuC845/ ADuC847/ ADuC848 can be configured as four \nor five (MQFP/LFCSP package) fully-differential input channels \nor as eight or ten (MQFP/LFCSP package) pseudo differential \ninput channels referenced to AINCOM. The ADC on each device (primary only on the ADuC845 ) can be fully buffered \ninternally, and can be programmed for one of eight input ranges from ±20 mV to ±2.56 V (V\nREF × 1.024). Buffering the input \nchannel means that the device can handle significant source impedances on the selected analog input and that RC filtering (for noise rejection or RFI reduction) can be placed on the analog inputs. If the ADC is used with internal buffering disabled (ADC0CON1.7 = 1, ADC0CON1.6 = 0), these un-\nbuffered inputs provide a dynamic load to the driving source. \nTherefore, resistor/capacitor combinations on the inputs can cause dc gain errors, depending on the output impedance of the \nsource that is driving the ADC inputs.  \nTable 8 and Table 9 show the allowable external resistance/ \ncapacitance values for unbuffered mode such that no gain error \nat the 16-bit and 20-bit levels, respectively, is introduced. When \nused with internal buffering enabled, it is recommended that a  \n capacitor (10 nF to 100 nF) be placed on the input to the ADC \n(usually as part of an antialiasing filter) to aid in noise \nperformance.  \nThe input channels are intended to convert signals directly from \nsensors without the need for external signal conditioning. With \ninternal buffering disabled (relevant bits set/cleared in \nADC0CON1), external buffering might be required. \nWhen the internal buffer is enabled, it might be necessary to \noffset the negative input channel by +100 mV and to offset the \npositive channel by −100 mV if the reference range is AV\nDD. \nThis accounts for the restricted common-mode input range in the buffer. Some circuits, for example, bridge circuits, are inherently suitable to use without having to offset where the \noutput voltage is balanced around V\nREF/2 and is not sufficiently \nlarge to encroach on the supply rails. Internal buffering is not \navailable on the auxiliary ADC ( ADuC845 only). The auxiliary \nADC ( ADuC845  only) is fixed at a gain range of ±2.50 V . \nThe ADCs use a Σ-Δ conversion technique to realize up to \n24 bits on the ADuC845 and the ADuC847, and up to 16 bits on \nthe ADuC848 of no missing codes performance (20 Hz update \nrate, chop enabled). The Σ-Δ modulator converts the sampled \ninput signal into a digital pulse train whose duty cycle contains \nthe digital information. A sinc3 programmable low-pass filter \n(see Table 28) is then used to decimate the modulator output \ndata stream to give a valid data conversion result at program-mable output rates. The signal chain has two modes of operation, \nchop enabled and chop disabled. The CHOP\n bit in the \nADCMODE register enables or disables the chopping scheme. \n \nTable 8. Maximum Resistance for No 16-Bit Gain Error (Unbuffered Mode) \n External Capacitance \nGain 0 pF 50 pF 100 pF 500 pF 1000 pF 5000 pF \n1 111.3 kΩ 27.8 kΩ 16.7 kΩ 4.5 kΩ 2.58 kΩ 700 Ω \n2 53.7 kΩ 13.5 kΩ 8.1 kΩ 2.2 kΩ 1.26 kΩ 360 Ω \n4 25.4 kΩ 6.4 kΩ 3.9 kΩ 1.0 kΩ 600 Ω 170 Ω \n8–128 10.7 kΩ 2.9 kΩ 1.7 kΩ 480 Ω 270 Ω 75 Ω \n \nTable 9. Maximum Resistance for No 20-Bit Gain Error (Unbuffered Mode) \n External Capacitance \nGain 0 pF 50 pF 100 pF 500 pF 1000 pF 5000 pF \n1 84.9 kΩ 21.1 kΩ 12.5 kΩ 3.2 kΩ 1.77 kΩ 440 Ω \n2 42.0 kΩ 10.4 kΩ 6.1 kΩ 1.6 kΩ 880 Ω 220 Ω \n4 20.5 kΩ 5.0 kΩ 2.9 kΩ 790 Ω 430 Ω 110 Ω \n8–128 8.8 kΩ 2.3 k Ω 1.3 k Ω 370 Ω 195 Ω 50 Ω \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 27 of 110 Signal Chain Overview (Chop Enabled, CHOP  = 0) \nWith the CHOP  bit = 0 (see the ADCMODE SFR bit designa-\ntions in Table 24), the chopping scheme is enabled. This is the \ndefault condition and gives optimum performance in terms of \noffset errors and drift performance. With chop enabled, the \navailable output rates vary from 5.35 Hz to 105 Hz (SF = 255 and 13, respectively). A typical block diagram of the ADC input \nchannel with chop enabled is shown in Figure 12. \nThe sampling frequency of the modulator loop is many times \nhigher than the bandwidth of the input signal. The integrator in \nthe modulator shapes the quantization noise (which results from the analog-to-digital conversion) so that the noise is pushed toward one-half of the modulator frequency. The output of the \nΣ-Δ modulator feeds directly into the digital filter. The digital \nfilter then band-limits the response to a frequency significantly lower than one-half of the modulator frequency. In this manner, the 1-bit output of the comparator is translated into a band \nlimited, low noise output from the ADCs.  \nThe ADC filter is a low-pass Sinc\n3 or (sinx/x)3 filter whose \nprimary function is to remove the quantization noise introduced \nat the modulator. The cutoff frequency and decimated output data rate of the filter are programmable via the Sinc filter word \nloaded into the filter (SF) register (see Table 28). The complete \nsignal chain is chopped, resulting in excellent dc offset and offset drift specifications and is extremely beneficial in applica-tions where drift, noise rejection, and optimum EMI rejection \nare important.  With chop enabled, the ADC repeatedly reverses its inputs. The \ndecimated digital output words from the Sinc\n3 filter, therefore, \nhave a positive offset and a negative offset term included. As a \nresult, a final summing stage is included so that each output word from the filter is summed and averaged with the previous filter output to produce a new valid output result to be written \nto the ADC data register. Programming the Sinc\n3 decimation \nfactor is restricted to an 8-bit register called SF (see Table 28), \nthe actual decimation factor is the register value times 8. Therefore, the decimated output rate from the Sinc\n3 filter (and \nthe ADC conversion rate) is \nMOD ADC fSFf \uf0b4\uf0b4\uf0b4 \uf03d81\n31 \nwhere: \nfADC is the ADC conversion rate. \nSF is the decimal equivalent of the word loaded to the filter \nregister. f\nMOD is the modulator sampling rate of 32.768 kHz. \nThe chop rate of the channel is half the output data rate: \nADCCHOPff\uf0b4\uf03d21 \nAs shown in the block diagram (Figure 12), the Sinc3 filter \noutputs alternately contain +V OS and −V OS, where V OS is the \nrespective channel offset.  \n \n \nSINC3 FILTER PGA 3\uf0b4 (8\uf0b4 SF)\uf053-\uf044\nMODFADC\nDIGITAL\nOUTPUTANALOG\nINPUTMUX BUF\nAIN + V OS\nAIN – VOSFMOD\nXOR2FCHOP FCHOP FIN\n04741-013\uf053-\uf044\n \nFigure 12. Block Diagram of the ADC Input Channel with Chop Enabled \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 28 of 110 This offset is removed by performing a running average of 2. \nThis average by 2 means that the settling time to any change in \nprogramming of the ADC is twice the normal conversion time, while an asynchronous step change on the analog input is not \nfully reflected until the third subsequent output. See Figure 13. \nADC\nADCSETTLE tft \uf0b4 \uf03d \uf03d22\n The allowable range for SF (chop enabled) is 13 to 255 with \na default of 69 (45H). The corresponding conversion rates, \nrms and peak-to-peak noise performances are shown in Table 10, Table 11, Table 12, and Table 13. The numbers are typical and generated at a differential input voltage of 0 V and a common-mode voltage of 2.5 V . Note that the con-version time increases by 0.732 ms for each increment in SF.  \n \nSAMPLE 1\nNO/INVALID\nOUTPUTSAMPLE 2 SAMPLE 3 SAMPLE 4 SAMPLE 5 SAMPLE 6\nSAMPLE 1 + SAMPLE 2\nVALID OUTPUT2\nSAMPLE 5 + SAMPLE 6\nVALID OUTPUT2SAMPLE 2 + SAMPLE 3\nVALID OUTPUT2SYNCHRONOUS CHANGE\n(I.E. CHANNEL CHANGE)\nSAMPLE 4 + SAMPLE 5\nVALID OUTPUT2SAMPLE 3 + SAMPLE 4\nNO OUTPUT2\n04741-012 \nFigure 13. ADC Settling Time Following a Synchronous Change with  \nChop Enabled \n \n \nSAMPLE 1\nNO OUTPUTSAMPLE 2 SAMPLE 3 SAMPLE 4 SAMPLE 5 SAMPLE 6\nSAMPLE 1 + SAMPLE 2\nVALID OUTPUT2\nSAMPLE 5 + SAMPLE 6\nVALID OUTPUT2SAMPLE 2 + SAMPLE 3\nVALID OUTPUT2ASYNCHRONOUS CHANGE\n(I.E. DISCONTINUOUS INPUT CHANGE)\nSAMPLE 4 + SAMPLE 5\nUNSETTLED OUTPUT2SAMPLE 3 + SAMPLE 4\nUNSETTLED OUTPUT2\n04741-014 \nFigure 14. ADC Settling Time Following an Asynchronous Change with  \nChop Enabled \n \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 29 of 110 ADC Noise Performance with Chop Enabled ( CHOP  = 0) \nTable 10, Table 11, Table 12, and Table 13 show the output rms \nnoise and output peak-to-peak resolution in bits (rounded to \nthe nearest 0.5 LSB) for some typical output update rates for the ADuC845, ADuC847 , and ADuC848 . The numbers are typical \nand are generated at a differential input voltage of 0 V and a common-mode voltage of 2.5 V . The output update rate is \nselected via the SF7 to SF0 bits in the SF filter register. It is \nimportant to note that the peak-to-peak resolution figures represent the resolution for which there is no code flicker \nwithin a 6-sigma limit.  The output noise comes from two sources. The first source is \nthe electrical noise in the semiconductor devices (device noise) \nused in the implementation of the modulator. The second source is quantization noise, which is added when the analog \ninput is converted to the digital domain. The device noise is at a \nlow level and is independent of frequency. The quantization noise starts at an even lower level but rises rapidly with increasing \nfrequency to become the dominant noise source.  \nThe numbers in the tables are given for the bipolar input ranges. \nFor the unipolar ranges, the rms noise numbers are in the same \nrange as the bipolar figures, but the peak-to-peak resolution is based on half the signal range, which effectively means losing \n1 bit of resolution.  \nTable 10. ADuC845 and ADuC847 Typical Output RMS Noise (μV) vs. Input Range and Update Rate with Chop Enabled \n  Input Range \nSF Word Data Update Rate (Hz) ±20 mV ±40 mV ±80 mV ±160 mV ±320 mV ±640 mV ±1.28 V ±2.56 V \n13 105.03 1.75 1.30 1.65 1.5 2.1 3.1 7.15 13.3 \n23 59.36 1.25 0.95 1.08 0.94 1.0 1.87 3.24 7.1 \n27 50.56 1.0 1.0 0.85 0.85 1.13 1.56 2.9 3.6 \n69 19.79 0.63 0.68 0.52 0.7 0.61 1.1 1.3 2.75 \n255 5.35 0.31 0.38 0.34 0.32 0.4 0.45 0.68 1.22 \n \nTable 11. ADuC845 and ADuC847 Typical Peak-to-Peak Resolution (Bits) vs. Input Range and Update Rate with Chop Enabled \n  Input Range \nSF Word Data Update Rate (Hz) ±20 mV ±40 mV ±80 mV ±160 mV ±320 mV ±640 mV ±1.28 V ±2.56 V \n13 105.03 12 13 14 15 15.5 16 16 16 \n23 59.36 12 13.5 14.5 15.5 16.5 16.5 17 16.5 \n27 50.56 12.5 13.5 15 16 16.5 17 17 17.5 \n69 19.79 13 14 15.5 16 17.5 17.5 18 18 \n255 5.35 14.5 15 16 17 18 18.5 19 19.5 \n \nTable 12. ADuC848 Typical Output Noise (μV) vs. Input Range and Update Rate with Chop Enabled \n  Input Range \nSF Word Data Update Rate (Hz) ±20 mV ±40 mV ±80 mV ±160 mV ±320 mV ±640 mV ±1.28 V ±2.56 V \n13 105.03 1.75 1.30 1.65 1.5 2.1 3.1 7.15 13.3 \n23 59.36 1.25 0.95 1.08 0.94 1.0 1.87 3.24 7.1 \n27 50.56 1.0 1.0 0.85 0.85 1.13 1.56 2.9 3.6 \n69 19.79 0.63 0.68 0.52 0.7 0.61 1.1 1.3 2.75 \n255 5.35 0.31 0.38 0.34 0.32 0.4 0.45 0.68 1.22 \n \nTable 13. ADuC848 Typical Peak-to-Peak Resolution (Bits) vs. Input Range and Update Rate with Chop Enabled \n  Input Range \nSF Word Data Update Rate (Hz) ±20 mV ±40 mV ±80 mV ±160 mV ±320 mV ±640 mV ±1.28 V ±2.56 V \n13 105.03 12 13 14 15 15.5 16 16 16 \n23 59.36 12 13.5 14.5 15.5 16 16 17 16 \n27 50.56 12.5 13.5 15 16 16 16 16 16 \n69 19.79 13 14 15.5 16 16 16 16 16 \n255 5.35 14.5 15 16 16 16 16 16 16 \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 30 of 110 Signal Chain Overview with Chop Disabled ( CHOP  = 1) \nWith CHOP  = 1, chop is disabled and the available output rates \nvary from 16.06 Hz to 1.365 kHz. The range of applicable SF \nwords is from 3 to 255. When switching between channels with \nchop disabled, the channel throughput rate is higher than when \nchop is enabled. The drawback with chop disabled is that the drift performance is degraded and offset calibration is required following a gain range change or significant temperature change. A block diagram of the ADC input channel with chop \ndisabled is shown in Figure 15. \nThe signal chain includes a multiplex or buffer, PGA, Σ-Δ \nmodulator, and digital filter. The modulator bit stream is \napplied to a Sinc\n3 filter. Programming the Sinc3 decimation \nfactor is restricted to an 8-bit register SF; the actual decimation factor is the register value times 8. The decimated output rate \nfrom the Sinc\n3 filter (and the ADC conversion rate) is therefore \nMOD ADC fSFf \uf0b4\uf0b4\uf03d81 \nwhere: \nfADC is the ADC conversion rate. \nSF is the decimal equivalent of the word loaded to the filter \nregister, valid range is from 3 to 255. \nfMOD is the modulator sampling rate of 32.768 kHz. The settling time to a step input is governed by the digital filter. \nA synchronized step change requires a settling time of three \ntimes the programmed update rate; a channel change can be treated as a synchronized step change. This is one conversion longer than the case for chop enabled. However, because the ADC throughput is three times faster with chop disabled than it \nis with chop enabled, the actual time to a settled ADC output is \nsignificantly less also. This means that following a synchronized step change, the ADC requires three conversions (note: data is not output following a synchronized ADC change until data has settled) before the result accurately reflects the new input voltage. \nADC\nADCSETTLE tft \uf0b4 \uf03d \uf03d33 \nAn unsynchronized step change requires four conversions to \naccurately reflect the new analog input at its output. Note that \nwith an unsynchronized change the ADC continues to output data and so the user must take unsettled outputs into account. \nAgain, this is one conversion longer than with chop enabled, but \nbecause the ADC throughput with chop disabled is faster than with chop enabled, the actual time taken to obtain a settled \nADC output is less. \nThe allowable range for SF is 3 to 255 with a default of 69 (45H). \nThe corresponding conversion rates, rms, and peak-to-peak \nnoise performances are shown in Table 14, Table 15, Table 16, and Table 17. Note that the conversion time increases by 0.244 ms \nfor each increment in SF.  \n \nSINC3 FILTER PGA 8\uf0b4 SF\uf053-\uf044\nMODFADC\nDIGITAL\nOUTPUTANALOG\nINPUTMUX BUFFMOD FIN\n04741-015 \nFigure 15. Block Diagram of ADC Input Channel with Chop Disabled \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 31 of 110 ADC Noise Performance with Chop Disabled ( CHOP  = 1) \nTable 14 through Table 17 show the output rms noise and \noutput peak-to-peak resolution in bits (rounded to the nearest \n0.5 LSB) for some typical output update rates. The numbers are typical and are generated at a differential input voltage of 0 V and a common-mode voltage of 2.5 V . The output update rate is selected via the SF7 to SF0 bits in the SF filter register. Note that \nthe peak-to-peak resolution figures represent the resolution for \nwhich there is no code flicker within a 6-sigma limit.  \nThe output noise comes from two sources. The first source is \nthe electrical noise in the semiconductor devices (device noise) used in the implementation of the modulator. The second  source is quantization noise, which is added when the analog \ninput is converted to the digital domain. The device noise is at a \nlow level and is independent of frequency. The quantization noise starts at an even lower level but rises rapidly with increasing \nfrequency to become the dominant noise source.  \nThe numbers in the tables are given for the bipolar input ranges. \nFor the unipolar ranges, the rms noise numbers are the same as \nthe bipolar range, but the peak-to-peak resolution is based on half the signal range, which effectively means losing 1 bit of \nresolution. Typically, the performance of the ADC with chop \ndisabled shows a 0.5 LSB degradation over the performance \nwith chop enabled. \nTable 14. ADuC845 and ADuC847 Typical Output RMS Noise (μV) vs. Input Range and Update Rate with Chop Disabled \nTable 15. ADuC845 and ADuC847 Typical Peak-to-Peak Resolution (Bits) vs. Input Range and Update Rate with Chop Disabled \nTable 16. ADuC848 Typical Output RMS Noise (μV) vs. Input Range and Update Rate with Chop Disabled \nTable 17. ADuC848 Typical Peak-to-Peak Resolution (Bits) vs. Input Range and Update Rate with Chop Disabled \nSF Word Data Update  \nRate (Hz) Input Range \n±20 mV  ±40 mV ±80 mV ±160 mV ±320mV ±640mV ±1.28 V ±2.56 V \n3 1365.33 7.5 9 9 9 9 9 9 9 \n13 315.08 11.5 12.5 13.5 14 13.5 14 14 14 \n68 59.36 13 14 14.5 15.5 16 16 16 16 \n82 49.95 13 14 15 16 16 16 16 16 \n255 16.06 13.5 14.5 15.5 16 16 16 16 16 \n SF Word Data Update \nRate (Hz) Input Range \n\uf0b120 mV \uf0b140 mV \uf0b180 mV \uf0b1160 mV \uf0b1320 mV \uf0b1640 mV \uf0b11.28 V \uf0b12.56 V \n3 1365.33 30.64 24.5 56.18 100.47 248.39 468.65 774.36 1739.5 \n13 315.08 2.07 1.95 2.28 3.24 8.22 13.9 20.98 49.26 \n68 59.36 0.85 0.79 1.01 0.99 0.79 1.29 2.3 3.7 \n82 49.95 0.83 0.77 0.85 0.77 0.91 1.12 1.59 3.2 \n255 16.06 0.52 0.58 0.59 0.48 0.52 0.57 1.16 1.68  \nSF Word Data Update Rate (Hz) Input Range \n\uf0b120 mV \uf0b140 mV \uf0b180 mV \uf0b1160 mV \uf0b1320 mV \uf0b1640 mV \uf0b11.28 V \uf0b12.56 V \n3 1365.33 7.5 9 9 9 9 9 9 9 \n13 315.08 11.5 12.5 13.5 14 13.5 14 14 14 \n68 59.36 13 14 14.5 15.5 17 17 17.5 18 \n82 49.95 13 14 15 16 16.5 17.5 18 18 \n255 16.06 13.5 14.5 15.5 16.5 17.5 18.5 18.5 19 \nSF Word Data Update Rate (Hz) Input Range \n\uf0b120 mV \uf0b140 mV \uf0b180 mV \uf0b1160 mV \uf0b1320 mV \uf0b1640 mV \uf0b11.28 V \uf0b12.56 V \n3 1365.33 30.64 24.5 56.18 100.47 248.39 468.65 774.36 1739.5 \n13 315.08 2.07 1.95 2.28 3.24 8.22 13.9 20.98 49.26 \n69 59.36 0.85 0.79 1.01 0.99 0.79 1.29 2.3 3.7 \n82 49.95 0.83 0.77 0.85 0.77 0.91 1.12 1.59 3.2 \n255 16.06 0.52 0.58 0.59 0.48 0.52 0.57 1.16 1.68  \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 32 of 110 AUXILIARY ADC ( ADUC845 ONLY) \nTable 18. ADuC845 Typical Output RMS Noise (μV) vs.  \nUpdate Rate with Chop Enabled \nSF Word Data Update Rate (Hz) μV \n13 105.03 17.46 \n23 59.36 3.13 \n27 50.56 4.56 \n69 19.79 2.66 \n255 5.35 1.13 \n \nTable 19. ADuC845 Typical Peak-to-Peak Resolution (Bits) \nvs. Update Rate1 with Chop Enabled \nSF Word Data Update Rate (Hz) Bits \n13 105.03 15.5 \n23 59.36 18 \n27 50.56 17.5 \n69 19.79 18 \n255 5.35 19.5 \n1 ADC converting in bipolar mode. \n Table 20. ADuC845 Typical Output RMS Noise (μV) vs. \nUpdate Rate with Chop Disabled \nSF Word Data Update Rate (Hz) μV \n3 1365.33 1386.58 \n13 315.08 34.94 \n66 62.06 3.2 \n69 59.36 3.19 \n81 50.57 3.14 \n255 16.06 1.71  \n \nTable 21. ADuC845 Peak-to-Peak Resolution (Bits) vs. \nUpdate Rate with Chop Disabled \nSF Word Data Update Rate (Hz) Bits \n3 1365.33 9 \n13 315.08 14.5 \n66 62.06 18 \n69 59.36 18 \n81 50.57 18 \n255 16.06 19 \n \nREFERENCE INPUTS \nThe ADuC845/ ADuC847/ ADuC848 each have two separate \ndifferential reference inputs, REFIN± and REFIN2±. While \nboth references are available for use with the primary ADC, \nonly REFIN± is available for the auxiliary ADC ( ADuC845 only). \nThe common-mode range for these differential references is from AGND to AV\nDD. The nominal external reference voltage is 2.5 V , with the primary and auxiliary ( ADuC845  only)  reference \nselect bits configured from the ADC0CON2 and ADC1CON \n(ADuC845 only), respectively.  \nWhen an external reference voltage is used, the primary ADC \nsees this internally as a 2.56 V reference (V REF × 1.024). \nTherefore, any calculations of LSB size should account for this. \nFor instance, with a 2.5 V external reference connected and using a gain of 1 on a unipolar range (2.56 V), the LSB size is \n(2.56/2\n24) = 152.6 nV (if using the 24-bit ADC on the ADuC845  \nor ADuC847). If a bipolar gain of 4 is used (±640 mV), the LSB \nsize is (±640 mV)/224) = 76.3 nV (again using the 24-bit ADC \non the ADuC845  or ADuC847). \nThe ADuC845/ ADuC847/ ADuC848 can also be configured to \nuse the on-chip band gap reference via the XREF0/1 bits in the \nADC0CON2 SFR (for primary ADC) or the AXREF bit in ADC1CON (for auxiliary ADC (ADuC845 only)). In this mode of operation, the ADC sees the internal reference of 1.25 V , \nthereby halving all the input ranges. A consequence of using the \ninternal band gap reference is a noticeable degradation in peak-to-peak resolution. For this reason, operation with an external \nreference is recommended.  \nIn applications where the excitation (voltage or current) for the \ntransducer on the analog input also drives the reference inputs \nfor the device, the effect of any low frequency noise in the excitation source is removed because the application is ratio-\nmetric. If the devices are not used in a ratiometric configuration, \nuse a low noise reference. Recommended reference voltage sources for the ADuC845/ ADuC847/ ADuC848  include the \nADR421 , REF43 , and REF192. \nThe reference inputs provide a high impedance, dynamic load \nto external connections. Because the impedance of each reference \ninput is dynamic, resistor/capacitor combinations on these pins can cause dc gain errors, depending on the output impedance of the source that is driving the reference inputs. Reference voltage \nsources, such as those mentioned above, for example, the ADR421 , \ntypically have low output impedances, and, therefore, decoupling \ncapacitors on the REFIN± or REFIN2± inputs would be recom-mended (typically 0.1 μF). Deriving the reference voltage from an external resistor configuration means that the reference input \nsees a significant external source impedance. External decoupling \nof the REFIN± and/or REFIN2± inputs is not recommended in \nthis type of configuration.  \nBURNOUT CURRENT SOURCES \nThe primary ADC on the ADuC845 and the ADC on the \nADuC847 and ADuC848 incorporate two 100 nA constant \ncurrent generators that are used to detect a failure in a connected \nsensor. One sources current from the AV DD to AIN(+), and one \nsinks current from AIN( −) to AGND. These currents are only \nconfigurable for use on AIN5/AIN6 and/or AIN7/AIN8 in differential mode only, from the ICON.6 bit in the ICON SFR \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 33 of 110 (see Table 30). These burnout current sources are also available \nonly with buffering enabled via the BUF0/BUF1 bits in the ADC0CON1 SFR. Once the burnout currents are turned on, a current flows in the external transducer circuit, and a measurement \nof the input voltage on the analog input channel can be taken. \nWhen the resulting voltage measured is full scale, the transducer has gone open circuit. When the voltage measured is 0 V , this indicates that the transducer has gone short circuit. The current sources work over the normal absolute input voltage range specifications. \nREFERENCE DETECT CIRCUIT \nThe main and auxiliary ( ADuC845 only) ADCs can be config-\nured to allow the use of the internal band gap reference or an \nexternal reference that is applied to the REFIN± pins by means \nof the XREF0/1 bit in the Control Registers AD0CON2 and AD1CON (ADuC845  only). A reference detection circuit is \nprovided to detect whether a valid voltage is applied to the REFIN± pins. This feature arose in connection with strain-gage \nsensors in weigh scales where the reference and signal are \nprovided via a cable from the remote sensor. It is desirable to detect whether the cable is disconnected. If either of the pins is floating or if the applied voltage is below a specified threshold, a flag (NOXREF) is set in the ADC status register (ADCSTAT), \nconversion results are clamped, and calibration registers are not \nupdated if a calibration is in progress.  \nNote that the reference detect does not look at REFIN2± pins.  \nIf, during either an offset or gain calibration, the NOEXREF bit \nbecomes active, indicating an incorrect V\nREF, updating the relevant \ncalibration register is inhibited to avoid loading incorrect data \ninto these registers, and the appropriate bits in ADCSTAT (ERR0 \nor ERR1) are set. If the user needs to verify that a valid reference \nis in place every time a calibration is performed, the status of the ERR0 and ERR1 bits should be checked at the end of every \ncalibration cycle. \nSINC FILTER REGISTER (SF) \nThe number entered into the SF register sets the decimation \nfactor of the Sinc3 filter for the ADC. See Table 28 and Table 29. \nThe range of operation of the SF word depends on whether \nADC chop is on or off. With chop disabled, the minimum SF \nword is 3 and the maximum is 255. This gives an ADC through-put rate from 16.06 Hz to 1.365 kHz. With chop enabled, the minimum SF word is 13 (all values lower than 13 are clamped \nto 13) and the maximum is 255. This gives an ADC throughput \nrate of 5.4 Hz to 105 Hz. See the f\nADC equation in the ADC \ndescription preceding section.  \nAn additional feature of the Sinc3 filter is a second notch filter \npositioned in the frequency response at 60 Hz. This gives \nsimultaneous 60 Hz rejection to whatever notch is defined by the SF filter. This 60 Hz filter is enabled via the REJ60 bit in the ADCMODE register (ADCMODE.6). The notch is valid only for SF words ≥ 68; otherwise, ADC errors occur, and, the notch is best used with an SF word of 82d giving simultaneous 50 Hz and 60 Hz rejection. This function is useful only with an ADC \nclock (modulator rate) of 32.768 kHz. During calibration, the \ncurrent (user-written) value of the SF register is used.  \nΣ-∆ MODULATOR \nA Σ-Δ ADC usually consists of two main blocks, an analog \nmodulator, and a digital filter. For the ADuC845 /ADuC847 / \nADuC848, the analog modulator consists of a difference \namplifier, an integrator block, a comparator, and a feedback \nDAC as shown in Figure 16. \nINTEGRATORCOMPARATORDIFFERENCE\nAMP\nANALOG\nINPUTHIGH\nFREQUENCYBIT STREAMTO DIGITALFILTER\nDAC\n04741-016 \nFigure 16. Σ-∆ Modulator Simplified Block Diagram \nIn operation, the analog signal is fed to the difference amplifier \nalong with the output from the feedback DAC. The difference between these two signals is integrated and fed to the comparator. \nThe output from the comparator provides the input to the feed-back DAC so the system functions as a negative feedback loop that tries to minimize the difference signal. The digital data that represents the analog input voltage is contained in the duty cycle of the pulse train appearing at the output of the comparator. This duty \ncycle data can be recovered as a data-word by using a subsequent \ndigital filter stage. The sampling frequency of the modulator loop is many times higher than the bandwidth of the input signal. The integrator in the modulator shapes the quantization noise (that results from the analog-to-digital conversion) so that the noise is pushed toward one-half of the modulator frequency. \nDIGITAL FILTER \nThe output of the ∑-Δ modulator feeds directly into the digital \nfilter. The digital filter then band-limits the response to a frequency \nsignificantly lower than one-half of the modulator frequency. In this manner, the 1-bit output of the comparator is translated \ninto a band-limited, low noise output from the device. \nThe ADuC845/ ADuC847/ ADuC848 filter is a low-pass, Sinc\n3 \nor [(SINx)/x]3 filter whose primary function is to remove the \nquantization noise introduced at the modulator. The cutoff \nfrequency and decimated output data rate of the filter are programmable via the SF (Sinc filter) SFR as listed in Table 28 and Table 29. \nFigure 22, Figure 23, Figure 24, and Figure 25 show the frequency \nresponse of the ADC, yielding an overall output rate of 16.6 Hz \nwith chop enabled and 50 Hz with chop disabled. Also detailed \nin these plots is the effect of the fixed 60 Hz drop-in notch filter \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 34 of 110 (REJ60 bit, ADCMODE.6). This fixed filter can be enabled or \ndisabled by setting or clearing the REJ60 bit in the ADCMODE register (ADCMODE.6). This 60 Hz drop-in notch filter can be enabled for any SF word that yields an ADC throughput that is less than 20 Hz with chop enabled (SF ≥ 68 decimal).  \nADC CHOPPING \nThe ADCs on the ADuC845/ ADuC847/ ADuC848  implement a \nchopping scheme whereby the ADC repeatedly reverses its inputs. The decimated digital output words from the Sinc\n3 filter, \ntherefore, have a positive and negative offset term included. As a result, a final summing stage is included in each ADC so that each output word from the filter is summed and averaged with the previous filter output to produce a new valid output result \nto be written to the ADC data SFRs. The ADC throughput or \nupdate rate is listed in Table 29. The chopping scheme incor-porated into the devices results in excellent dc offset and offset drift specifications, and is extremely beneficial in applications where drift, noise rejection, and optimum EMI performance are \nimportant. ADC chop can be disabled via the chop bit in the \nADCMODE SFR (ADCMODE.3). Setting this bit to 1 (logic \nhigh) disables chop mode. \nCALIBRATION \nThe ADuC845 /ADuC847 /ADuC848 incorporate four \ncalibration modes that can be programmed via the mode bits in \nthe ADCMODE SFR detailed in Table 24. Every device is calibrated before it leaves the factory. The resulting offset and \ngain calibration coefficients for both the primary and auxiliary \n(ADuC845 only) ADCs are stored on-chip in manufacturing-\nspecific Flash/EE memory locations. At power-on or after a reset, these factory calibration registers are automatically downloaded to the ADC calibration registers in the SFR space \nof the device. To facilitate user calibration, each of the primary \nand auxiliary ( ADuC845 only) ADCs have dedicated calibration \ncontrol SFRs, which are described in the ADC SFR Interface section. Once a user initiates a calibration procedure, the factory calibration values that were initially downloaded during the power-on sequence to the ADC calibration SFRs are overwritten. \nThe ADC to be calibrated must be enabled via the ADC enable \nbits in the ADCMODE register.  \nEven though an internal offset calibration mode is described in \nthis section, note that the ADCs can be chopped. This chopping \nscheme inherently minimizes offset errors and means that an offset calibration should never be required. Also, because factory 5 V/25°C gain calibration coefficients are automatically present at power-on, an internal full-scale calibration is required only if the device is operated at 3 V or at temperatures significantly different from 25°C. \nIf the device is operated in chop disabled mode, a calibration \nmay need to be done with every gain range change that occurs via the PGA. The ADuC845/ ADuC847/ ADuC848 each offer internal or \nsystem calibration facilities. For full calibration to occur on the selected ADC, the calibration logic must record the modulator output for two input conditions: zero-scale and full-scale points. \nThese points are derived by performing a conversion on the \ndifferent input voltages (zero-scale and full-scale) provided to the input of the modulator during calibration. The result of the zero-scale calibration conversion is stored in the offset calibration registers for the appropriate ADC. The result of the \nfull-scale calibration conversion is stored in the gain calibration \nregisters for the appropriate ADC. With these readings, the calibration logic can calculate the offset and the gain slope for \nthe input-to-output transfer function of the converter. \nDuring an internal zero-scale or full-scale calibration, the \nrespective zero-scale input or full-scale input is automatically \nconnected to the ADC inputs internally. A system calibration, however, expects the system zero-scale and system full-scale voltages to be applied externally to the ADC pins by the user \nbefore the calibration mode is initiated. In this way, external \nerrors are taken into account and minimized. Note that all ADuC845/ ADuC847/ ADuC848  ADC calibrations are carried \nout at the user-selected SF word update rate. To optimize calibration accuracy, it is recommended that the slowest possible \nupdate rate be used.  \nInternally in the devices, the co efficients are normalized before \nbeing used to scale the words coming out of the digital filter. \nThe offset calibration coefficient is subtracted from the result prior to the multiplication by the gain coefficient. \nFrom an operational point of view, a calibration should be \ntreated just like an ordinary ADC conversion. A zero-scale \ncalibration (if required) should always be carried out before a \nfull-scale calibration. System software should monitor the \nrelevant ADC RDY0/1 bit in the ADCSTAT SFR to determine the end of calibration by using a polling sequence or an interrupt driven routine. If required, the NOEXREF0/1 bits can be moni-tored to detect unconnected or low voltage errors in the reference \nduring conversion. In the event of the reference becoming \ndisconnected, causing a NOXREF flag during a calibration, the calibration is immediately halted and no write to the calibration \nSFRs takes place.  \nInternal Calibration Example \nWith chop enabled, a zero-scale or offset calibration should \nnever be required, although a full-scale or gain calibration may \nbe required. However, if a full internal calibration is required, the procedure should be to select a PGA gain of 1 (±2.56 V) and perform a zero-scale calibration (MD2...0 = 100B in the ADCMODE register). Next, select and perform full-scale \ncalibration by setting MD2...0 = 101B in the ADCMODE SFR. \nNow select the desired PGA range and perform a zero-scale calibration again (MD2..0 = 100B in ADCMODE) at the new PGA range. The reason for the double zero-scale calibration is \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 35 of 110 that the internal calibration procedure for full-scale calibration \nautomatically selects the reference in voltage at PGA = 1.  \nTherefore, the full-scale endpoint calibration automatically \nsubtracts the offset calibration error, it is advisable to perform \nan offset calibration at the same gain range as that used for full-scale calibration. There is no penalty to the full-scale calibration in redoing the zero-scale calibration at the required PGA range because the full-scale calibration has very good matching at all the PGA ranges. \nThis procedure also applies when chop is disabled. \nNote that for internal calibration to be effective, the AIN − pin \nshould be held at a steady voltage, within the allowable common-\nmode range to keep it from floating during calibration. \nSystem Calibration Example \nWith chop enabled, a system zero-scale or offset calibration \nshould never be required. However, if a full-scale or gain \ncalibration is required for any reason, use the following typical \nprocedure for doing so. \n1. Apply a differential voltage of 0 V to the selected analog \ninputs (AIN+ to AIN−) that are held at a common-mode \nvoltage.  \nPerform a system zero-scale or offset calibration by setting \nthe MD2...0 bits in the ADCMODE register to 110B.  \n2. Apply a full-scale differential voltage across the ADC inputs again at the same common-mode voltage.  \nPerform a system full-scale or gain calibration by setting \nthe MD2...0 bits in the ADCMODE register to 111B. \nPerform a system calibration at the required PGA range to be \nused since the ADC scales to the differential voltages that are \napplied to the ADC during the calibration routines.  \nIn bipolar mode, the zero-scale calibration determines the mid-\nscale point of the ADC (800000H) or 0 V . \nPROGRAMMABLE GAIN AMPLIFIER  \nThe primary ADC incorporates an on-chip programmable gain \namplifier (PGA). The PGA can be programmed through eight \ndifferent ranges, which are programmed via the range bits (RN0 to RN2) in the ADC0CON1 register. With an external 2.5 V reference applied, the unipolar ranges are 0 mV to 20 mV , 0 mV to 40 mV , 0 mV to 80 mV , 0 mV to 160 mV , 0 mV to 320 mV , \n0 mV to 640 mV , 0 V to 1.28 V and 0 V to 2.56 V , while in \nbipolar mode the ranges are ±20 mV , ±40 mV , ±80 mV , ±160 mV , ±320 mV , ±64 0 mV , ±1.28 V , and ±2.56 V . These ranges should appear on the input to the on-chip PGA. The ADC range-matching specification of 2 μV (typical with chop enabled) \nmeans that calibration need only be carried out on a single \nrange and need not be repeated when the ADC range is changed. This is a significant advantage compared to similar mixed-signal solutions available on the market. The auxiliary (ADuC845 only) ADC does not incorporate a PGA, and the \ngain is fixed at 0 V to 2.50 V in unipolar mode, and ±2.50 V in bipolar mode.  \nBIPOLAR/UNIPOLAR CONFIGURATION \nThe analog inputs of the ADuC845/ ADuC847 /ADuC848 can \naccept either unipolar or bipolar input voltage ranges. Bipolar input ranges do not imply that the device can handle negative voltages with respect to system AGND, but rather with respect to the negative reference input. Unipolar and bipolar signals on the AIN(+) input on the ADC are referenced to the voltage on the respective AIN(−) input. AIN(+) and AIN(−) refer to the signals seen by the ADC.  \nFor example, if AIN(−) is biased to 2.5 V (tied to the external \nreference voltage) and the ADC is configured for a unipolar \nanalog input range of 0 mV to >20 mV , the input voltage range \non AIN(+) is 2.5 V to 2.52 V . On the other hand, if AIN( −) is \nbiased to 2.5 V (again the external reference voltage) and the ADC is configured for a bipolar analog input range of ±1.28 V , the analog input range on the AIN(+) is 1.22 V to 3.78 V , that is, 2.5 V ± 1.28 V . \nThe modes of operation for the ADC are fully differential mode \nor pseudo differential mode. In fully differential mode, AIN1 to \nAIN2 are one differential pair, and AIN3 to AIN4 are another \npair (AIN5 to AIN6, AIN7 to AIN8, and AIN9 to AIN10 are the \nothers). In differential mode, all AIN( −) pin names imply the \nnegative analog input of the selected differential pair, that is, AIN2, AIN4, AIN6, AIN8, AIN10. The term AIN(+) implies the positive input of the selected differential pair, that is, AIN1, \nAIN3, AIN5, AIN7, AIN9. In pseudo differential mode, each \nanalog input is paired with the AINCOM pin, which can be biased up or tied to AGND. In this mode, the AIN( −) implies \nAINCOM, and AIN(+) implies any one of the ten analog input \nchannels.  \nThe configuration of the inputs (unipolar vs. bipolar) is shown \nin Figure 17. \nAIN1INPUT 1\nADuC845/ADuC847/ADuC848\nCSP PACKAGE\nADuC845/ADuC847/ADuC848\nCSP PACKAGEINPUT 2\nINPUT 3\nINPUT 4\nINPUT 5\nINPUT 6\nINPUT 7\nINPUT 8\nINPUT 9\nINPUT 10AIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nAIN8\nAIN9\nAIN10\nAINCOMAIN1\nAIN2\nAIN3\nAIN4\nAIN5\nAIN6\nAIN7\nAIN8\nAIN9\nAIN10FULLY DIFFERENTIALFULLY DIFFERENTIALFULLY DIFFERENTIALFULLY DIFFERENTIALFULLY DIFFERENTIAL\nAINCOM\n04741-017 \nFigure 17. Unipolar and Bipolar Channel Pairs \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 36 of 110 DATA OUTPUT CODING \nWhen the primary ADC is configured for unipolar operation, \nthe output coding is natural (straight) binary with a zero differ-\nential input voltage resulting in a code of 000...000, a midscale voltage resulting in a code of 100...000, and a full-scale voltage \nresulting in a code of 111...111. The output code for any analog \ninput voltage on the main ADC can be represented as follows: \nCode  – (AIN  × GAIN  × 2\nN)/(1.024 × VREF) \nwhere: \nAIN is the analog input voltage. \nGAIN  is the PGA gain setting, that is, 1 on the 2.56 V range and \n128 on the 20 mV range, and N = 24 (16 on the ADuC848).  \nThe output code for any analog input voltage on the auxiliary \nADC can be represented as follows:  \nCode  = (AIN × 2N)/(VREF) \nwith the same definitions as used for the primary ADC above.  \nWhen the primary ADC is configured for bipolar operation, the \ncoding is offset binary with negative full-scale voltage resulting \nin a code of 000...000, a zero differential voltage resulting in a code of 800…000, and a positive full-scale voltage resulting in a code of 111...111. The output from the primary ADC for any \nanalog input voltage can be represented as follows:  \nCode  = 2\nN−1[(AIN × GAIN )/(1.024 × VREF) + 1] \nwhere: \nAIN is the analog input voltage. \nGAIN  is the PGA gain, that is, 1 on the ±2.56 V range and  \n128 on the ±20 mV range. \nN = 24 (16 on the ADuC848 ).  \nThe output from the auxiliary ADC in bipolar mode can be \nrepresented as follows: \nCode  = 2N−1 [(AIN/VREF) + 1] EXCITATION CURRENTS \nThe ADuC845/ ADuC847/ ADuC848 contain two matched, \nsoftware-configurable 200 μA current sources. Both source current from AV\nDD, which is directed to either or both of the \nIEXC1 (Pin 11 whose alternate functions are P1.6/AIN7) or \nIEXC2 (Pin 12, whose alternate functions are P1.7/AIN8) pins \non the device. These currents are controlled via the lower four bits in the ICON register (Table 30). These bits not only enable the current sources but also allow the configuration of the currents such that 200 μA can be sourced individually from both pins or can be combined to give a 400 μA source from one \nor the other of the outputs. These sources can be used to excite \nexternal resistive bridge or RTD sensors (see Figure 71).  \nADC POWER-ON \nThe ADC typically takes 0.5 ms to power up from an initial \nstart-up sequence or following a power-down event.  \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 37 of 110 TYPICAL PERFORMANCE CHARACTERISTICS  \n–120–110–100–80–70–50–40–20–10\n–90–30\n–600\n01 0 2 03 0 4 0 5 0 9 0 80 100 70 60 110\nFREQUENCY (Hz)GAIN (dB)\n04741-018\nFigure 18. Filter Response, Chop On, SF = 69 Decimal \n \n–150–130–110–90–50–30–10\n–70\n01 0 2 03 0 4 0 5 0 9 0 80 100 70 60\nFREQUENCY (Hz)AMPLITUDE (dB)\n04741-019 \nFigure 19. Filter Response, Chop On, SF = 255 Decimal \n \n–120–110–100–80–70–50–40–20–10\n–90–30\n–600\n10 30 50 70 90 110 210 190 170 230 150 130 250\nSF (Decimal)GAIN (dB)\n04741-020 \nFigure 20. 50 Hz Normal Mode Rejection vs. SF Word, Chop On –120–110–100–80–70–50–40–20–10\n–90–30\n–600\n10 30 50 70 90 110 210 190 170 230 150 130 250\nSF (Decimal)GAIN (dB)\n04741-021\nFigure 21. 60 Hz Normal Mode  Rejection vs. SF, Chop On \n \n–150–130–110–90–50–30–10\n–7010\n170.1160.1150.1140.1130.1120.1110.1100.190.180.170.160.150.140.130.120.110.10.1\nFREQUENCY (Hz)AMPLITUDE (dB)\n04741-022\nFigure 22. Chop Off, Fadc = 50 Hz, SF = 52H  \n \n–150–130–110–50–10\n–30\n–70\n–19010\n170.1160.1150.1140.1130.1120.1110.1100.190.180.170.160.150.140.130.120.110.10.1\nFREQUENCY (Hz)AMPLITUDE (dB)\n04741-023\n \nFigure 23. Chop Off, SF = 52H, REJ60 Enabled  \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 38 of 110 –120–100–80–40–20\n–600\n1009590857570\n806560555040\n453530252010\n1550\nFREQUENCY (Hz)AMPLITUDE (dB)\n04741-024\nFigure 24. Chop On, Fadc = 16.6 Hz, SF = 52H FREQUENCY (Hz)AMPLITUDE (dB)\n04741-025–120–100–80–40–20\n–600\n1009590857570\n806560555040\n453530252010\n1550\nFigure 25. Chop On, Fadc = 16.6 Hz, SF = 52H, REJ60 Enabled \n \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 39 of 110 FUNCTIONAL DESCRIPTION \nADC SFR INTERFACE \nThe ADCs are controlled and configured via a number of SFRs that are mentioned here and described in more detail in the followi ng \nsections. \nTable 22. ADC SFR Interface \nName Description \nADCSTAT ADC Status Register. Holds the general status of the primary and auxiliary ( ADuC845 only) ADCs. \nADCMODE ADC Mode Register. Controls the general modes of operation for primary and auxiliary ( ADuC845  only) ADCs. \nADC0CON1 Primary ADC Control Register 1. Controls the specific configuration of the primary ADC. \nADC0CON2  Primary ADC Control Register 2. Controls the specific configuration of the primary ADC. \nADC1CON Auxiliary ADC Control Register. Controls the specific configuration of the auxiliary ADC. ADuC845  only. \nSF Sinc Filter Register. Configures the decimation factor for the Sinc3 filter and, therefore, the primary and auxiliary ( ADuC845 \nonly) ADC update rates. \nICON Current Source Control Register. Allows user control of the various on-chip current source options. \nADC0L/M/H Primary ADC 24-bit (16-bit on the ADuC848) conversion result is held in these three 8-bit registers. ADC0L is not available on \nthe ADuC848. \nADC1L/M/H Auxiliary ADC 24-bit conversion result is held in these two 8-bit registers. ADuC845 only. \nOF0L/M/H Primary ADC 24-bit offset calibration coefficient is held  in these three 8-bit registers. OF0L is not available on the  ADuC848. \nOF1L/H Auxiliary ADC 16-bit offset calibration coefficient is held in these two 8-bit registers. ADuC845 only. \nGN0L/M/H Primary ADC 24-bit gain calibration coefficient is held in these three 8-bit registers. GN0L is not available on the ADuC848. \nGN1L/H Auxiliary ADC 16-bit gain calibration coefficient is held in these two 8-bit registers. ADuC845 only. \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 40 of 110 ADCSTAT (ADC STATUS REGISTER) \nThis SFR reflects the status of both ADCs including data ready, calibration, and various (ADC-related) error and warning condit ions \nincluding REFIN± reference detect and conversion overflow/underflow flags.  \nSFR Address:  D8H \nPower-On Default: 00H \nBit Addressable:  Y es \n \nTable 23. ADCSTAT SFR Bit Designation \nBit No.  Name Description \n7 RDY0  Ready Bit for the Primary ADC.  \nSet by hardware on completion of conversion or calibration. \nCleared directly by the user, or indirectly by a write to  the mode bits, to start calibration. The primary ADC is \ninhibited from writing further results to its data or calibration registers until the RDY0 bit is cleared. \n6 RDY1 Ready Bit for Auxiliary ( ADuC845 only) ADC.  \nSame definition as RDY0 referred to the auxiliary ADC. Valid on the ADuC845 only. \n5 CAL  Calibration Status Bit.  \nSet by hardware on completion of calibration.  \nCleared indirectly by a write to the mode bits to start another ADC conversion or calibration. \nNote that calibration with the temperatur e sensor selected (auxiliary ADC on the ADuC845 only) fails to complete.  \n4 NOXREF No External Reference Bit (o nly active if primary or auxiliary ( ADuC845 only) ADC is active).  \nSet to indicate that one or both of the REFIN pins is floating or the applied voltage is below a specified threshold. \nWhen set, conversion results are clamped to all 1s. On ly detects invalid REFIN±, does not check REFIN2±.  \nCleared to indicate valid V REF. \n3 ERR0 Primary ADC Error Bit.  \nSet by hardware to indicate that the result written to the primary ADC data registers has been clamped to all 0s or \nall 1s. After a calibration, this bit also flags error conditions  that caused the calibration registers not to be written.  \nCleared by a write to the mode bits to initiate a conversion or calibration.  \n2 ERR1 Auxiliary ADC Error Bit. Same definition as ERR0 referred to the auxiliary ADC. Valid on the ADuC845  only. \n1 ––– Not Implemented. Write Don’t Care. \n0 ––– Not Implemented. Write Don’t Care. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 41 of 110 ADCMODE (ADC MODE REGISTER) \nUsed to control the operational mode of both ADCs.  \nSFR Address:  D1H \nPower-On Default: 08H Bit Addressable:  No \n \nTable 24. ADCMODE SFR Bit Designations \nBit No.  Name  Description \n7 ––– Not Implemented. Write Don’t Care. \n6 REJ60 Automatic 60 Hz Notch Select Bit.  \nSetting this bit places a notch in the frequency resp onse at 60 Hz, allowing simultaneous 50 Hz and 60 Hz \nrejection at an SF word of 82 decimal. This 60 Hz notch can be set only if SF ≥68 decimal, that is, the regular \nfilter notch must be ≤60 Hz. This second notch is placed  at 60 Hz only if the device clock is at 32.768 kHz. \n5 ADC0EN  Primary ADC Enable.  \nSet by the user to enable the primary ADC and place it in the mode selected in MD2–MD0. \nCleared by the user to place the primary ADC into power-down mode. \n4 ADC1EN \n(ADuC845 only)   Auxiliary ( ADuC845  only) ADC Enable.  \nSet by the user to enable the auxiliary ( ADuC845 only) ADC and place it in the mode selected in MD2–MD0. \nCleared by the user to place the auxiliary ( ADuC845 only) ADC in power-down mode. \n3 CHOP  Chop Mode Disable.  \nSet by the user to disable chop mode on both the primary and auxiliary ( ADuC845 only) ADC allowing a \nthree times higher ADC data throughput. SF values as lo w as 3 are allowed with this bit set, giving up to \n1.3 kHz ADC update rates. \nCleared by the user to enable chop mode on both the primary and auxiliary ( ADuC845 only) ADC. \n2, 1, 0 \n MD2, MD1, MD0  Primary and Auxiliary ( ADuC845 only) ADC Mode Bits.  \nThese bits select the operational mo de of the enabled ADC as follows: \nMD2 MD1 MD0  \n0 0 0 ADC Power-Down Mode (Power-On Default). \n0 0 1 Idle Mode. In idle mode, the ADC filter and modulator are held in a reset state \nalthough the modulator clocks are still provided. \n0 1 0 Single Conversion Mode. In single conversi on mode, a single conversion is performed \non the enabled ADC. Upon completion of a conversion, the ADC data registers (ADC0H/M/L and/or ADC1H/M/L ( ADuC845 only)) are updated. The relevant flags in \nthe ADCSTAT SFR are written, and power-down is re-entered with the MD2−MD0 \naccordingly being written to 000.  \nNote that ADC0L is not available on the ADuC848 . \n0 1 1 Continuous Conversion. In continuous conv ersion mode, the ADC data registers are \nregularly updated at the selected update rate (see the Sinc Filter SFR Bit Designations \nin Table 28). \n1 0 0 Internal Zero-Scale Calibration. Internal short automatically connected to the enabled ADC input(s). \n1 0 1 Internal Full-Scale Calibration. Intern al or external REFIN± or REFIN2± V REF (as \ndetermined by XREF bits in ADC0CON2 and/or AXREF ( ADuC845 only) in ADC1CON \n(ADuC845 only) is automatically connected to  the enabled ADC input(s) for this \ncalibration. \n1 1 0 System Zero-Scale Calibration. User should connect system zero-scale input to the \nenabled ADC input(s) as selected by  CH3–CH0 and ACH3–ACH0 bits in the \nADC0CON2 and ADC1CON ( ADuC845 only) registers. \n1 1 1 System Full-Scale Calibration. User should connect system full-scale input to the enabled ADC input(s) as selected by  CH3–CH0 and ACH3–ACH0 bits in the \nADC0CON2 and ADC1CON ( ADuC845 only) registers. \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 42 of 110 Notes on the ADCMODE Register \nAny change to the MD bits immediately resets both ADCs \n(auxiliary ADC only applicable to the ADuC845 ). A write to the \nMD2–MD0 bits with no change in contents is also treated as a \nreset. (See the exception to this in the third note of this section.)  \nIf ADC1CON1 and ADC1CON2 are written when ADC0EN = \n1, or if ADC0EN is changed from 0 to 1, both ADCs are also \nimmediately reset. In other words, the primary ADC is given priority over the auxiliary ADC and any change requested on the primary ADC is immediately responded to. Only applicable \nto the ADuC845 . \nOn the other hand, if ADC1CON is written to or if ADC1EN is \nchanged from 0 to 1, only the auxiliary ADC is reset. For \nexample, if the primary ADC is continuously converting when the auxiliary ADC change or enable occurs, the primary ADC \ncontinues undisturbed. Rather than allow the auxiliary ADC to \noperate with a phase difference from the primary ADC, the auxiliary ADC falls into step with the outputs of the primary ADC. The result is that the first conversion time for the auxiliary ADC is delayed by up to three outputs while the \nauxiliary ADC update rate is synchronized to the primary ADC. \nOnly applicable to ADuC845. If the ADC1CON write occurs after the primary ADC has completed its operation, the auxiliary ADC can respond immediately without having to fall \ninto step with the primary ADCs output cycle. If the devices are powered down via the PD bit in the PCON \nregister, the current ADCMODE bits are preserved, that is, they \nare not reset to default state. Upon a subsequent resumption of normal operating mode, the ADCs restarts the selected operation defined by the ADCMODE register. \nOnce ADCMODE has been written with a calibration mode, \nthe RDY0/1 (ADuC845 only) bits (ADCSTAT) are reset and the \ncalibration commences. On completion, the appropriate calibration registers are written, the relevant bits in ADCSTAT \nare written, and the MD2–MD0 bits are reset to 000B to \nindicate that the ADC is back in power-down mode.  \nAny calibration request of the auxiliary ADC while the \ntemperature sensor is selected fails to complete. Although the \nRDY1 bit is set at the end of the calibration cycle, no update of the calibration SFRs takes place, and the ERR1 bit is set. \nADuC845 only. \nCalibrations performed at maximum SF (see Table 28) value \n(slowest ADC throughput rate) help to ensure optimum \ncalibration. \nThe duration of a calibration cycle is 2/Fadc for chop-on mode \nand 4/Fadc for chop-off mode. \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 43 of 110 ADC0CON1 (PRIMARY ADC CONTROL REGISTER) \nADC0CON1 is used to configure the primary ADC for buffer, unipolar, or bipolar coding, and ADC range configuration.  \nSFR Address:  D2H \nPower-On Default: 07H Bit Addressable:  No \n \nTable 25. ADC0CON1 SFR Bit Designations \nBit No.  Name  Description  \n7, 6 BUF1, BUF0 Buffer Configuration Bits. \nBUF1 BUF0 Buffer Configuration \n0 0 ADC0+ and ADC0− are buffered \n0 1 Reserved \n1 0 Buffer Bypass  \n1 1 Reserved \n5 UNI Primary ADC Unipolar Bit.  \nSet by the user to enable unipolar coding; zero differential input results in 000000H output.  \nCleared by the user to enable bipolar coding; zero differential input results in 800000H output. \n4 ––– Not Implemented. Write Don’t Care. \n3 ––– Not Implemented. Write Don’t Care. \n2, 1, 0 RN2, RN1, RN0 Primary ADC Range Bits. Written by the user to select the primary ADC input range as follows: \nRN2 RN1 RN0 Selected primary ADC input range (V REF = 2.5 V) \n0 0 0 ±20 mV (0 mV to 20 mV in unipolar mode) \n0 0 1 ±40 mV (0 mV to 40 mV in unipolar mode) \n0 1 0 ±80 mV (0 mV to 80 mV in unipolar mode) \n0 1 1 ±160 mV (0 mV to 160 mV in unipolar mode) \n1 0 0 ±320 mV (0 mV to 320 mV in unipolar mode) \n1 0 1 ±640 mV (0 mV to 640 mV in unipolar mode) \n1 1 0 ±1.28 V (0 V to 1.28 V in unipolar mode) \n1 1 1 ±2.56 V (0 V to 2.56 V in unipolar mode) \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 44 of 110 ADC0CON2 (PRIMARY ADC CHANNEL SELECT REGISTER)  \nADC0CON2 is used to select a reference source and channel for the primary ADC. \nSFR Address:  E6H \nPower-On Default:  00H Bit Addressable:  No \n \nTable 26. ADC0CON2 SFR Bit Designations \nBit No.  Name Description \n7, 6 XREF1, XREF0 Primary ADC External Reference Select Bit.  \nSet by the user to enable the primary ADC to use the external reference via REFIN± or REFIN2±.  \nCleared by the user to enable the primary ADC to use the internal band gap reference (V REF = 1.25 V). \nXREF1 XREF0  \n0 0 Internal 1.25 V Reference. \n0 1 REFIN± Selected. \n1 0 REFIN2± (AIN3/AIN4) Selected. \n1 1 Reserved. \n5 ––– Not Implemented. Write Don’t Care. \n4 ––– Not Implemented. Write Don’t Care. \n3, 2, 1, 0 CH3, CH2, CH1, CH0 Primary ADC Channel Select Bits. Written by the user to select the primary ADC channel as follows : \nCH3 CH2 CH1 CH0 Selected Primary ADC Input Channel.  \n0 0 0 0 AIN1–AINCOM\n0 0 0 1 AIN2–AINCOM\n0 0 1 0 AIN3–AINCOM\n0 0 1 1 AIN4–AINCOM\n0 1 0 0 AIN5–AINCOM\n0 1 0 1 AIN6–AINCOM\n0 1 1 0 AIN7–AINCOM\n0 1 1 1 AIN8–AINCOM\n1 0 0 0 AIN9–AINCOM (LFCSP package only; not a valid selection on the MQFP \npackage) \n1 0 0 1 AIN10–AINCOM (LFCSP package only; not a valid selection on the MQFP \npackage) \n1 0 1 0 AIN1–AIN2\n1 0 1 1 AIN3–AIN4\n1 1 0 0 AIN5–AIN6\n1 1 0 1 AIN7–AIN8\n1 1 1 0 AIN9–AIN10 (LFCSP package only; not a valid selection on the MQFP \npackage) \n1 1 1 1 AINCOM–AINCOM\n \nNote that because the reference-detect does not operate on the REFIN2± pair, the REFIN2± pins can go below 1 V .\nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 45 of 110 ADC1CON (AUXILIARY ADC CONTROL REGISTER) ( ADUC845 ONLY) \nADC1CON is used to configure the auxiliary ADC for reference, channel selection, and unipolar or bipolar coding. The auxiliary ADC is \navailable only on the ADuC845 . \nSFR Address:  D3H \nPower-On Default: 00H \nBit Addressable:  No \n \nTable 27. ADC1CON SFR Bit Designations \nBit No.  Name  Description \n7 ––– Not Implemented. Write Don’t Care. \n6 AXREF Auxiliary (ADuC845  only) ADC External Reference Bit.  \nSet by the user to enable the auxiliary ADC to use the external reference via REFIN±.  \nCleared by the user to enable the auxiliary ADC to use the internal band gap reference. Auxiliary ADC cannot use the REFIN2± reference inputs.  \n5 AUNI Auxiliary ( ADuC845  only) ADC Unipolar Bit.  \nSet by the user to enable unipolar coding, that is, zero input results in 000000H output.  \nCleared by the user to enable bipolar co ding, zero input results in 800000H output. \n4 ––– Not Implemented. Write Don’t Care. \n3, 2, 1, 0 ACH3, ACH2, ACH1, ACH0 Auxiliary ADC Channel Select Bits. Written by the user to select the auxiliary ADC channel. \nACH3 ACH2 ACH1 ACH0 Selected Auxiliary ADC Input Range (V REF = 2.5 V). \n0 0 0 0 AIN1–AINCOM\n0 0 0 1 AIN2–AINCOM\n0 0 1 0 AIN3–AINCOM \n0 0 1 1 AIN4–AINCOM\n0 1 0 0 AIN5–AINCOM\n0 1 0 1 AIN6–AINCOM\n0 1 1 0 AIN7–AINCOM\n0 1 1 1 AIN8–AINCOM\n1 0 0 0 AIN9–AINCOM (not a valid selection on the MQFP package) \n1 0 0 1 AIN10–AINCOM (not a valid selection on the MQFP package) \n1 0 1 0 AIN1–AIN2\n1 0 1 1 AIN3–AIN4\n1 1 0 0 AIN5–AIN6\n1 1 0 1 AIN7–AIN8\n1 1 1 0 Temperature Sensor1 \n1 1 1 1 AINCOM–AINCOM\n \n \n1 Note the following about the temperature sensor:  \nWhen the temperature sensor is selected, user code must select the internal reference via the AXREF bit and clear the AUNI bit (ADC1CON.5) to select bipolar coding.  \nChop mode must be enabled for correct temperature sensor operation.  \nThe temperature sensor is factory calibrated to yield conversion results 800000H at  0°C (ADC chop on).  \nA +1°C change in temperature results in a +1 LSB change in the ADC1H register ADC conversion result  \nThe temperature sensor is not available on the ADuC847  or ADuC848. \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 46 of 110 SF (ADC SINC FILTER CONTROL REGISTER) \nThe SF register is used to configure the decimation factor for the ADC, and therefore, has a direct influence on the ADC throug hput rate.  \nSFR Address:  D4H \nPower-On Default: 45H  Bit Addressable:  No \n \nTable 28. Sinc Filter SFR Bit Designations \nSF.7 SF.6 SF.5 SF.4 SF.3 SF.2 SF.1 SF.0 \n0 1 0 0 0 1 0 1 \n \nThe bits in this register set the decimation factor of the ADC. This has a direct bearing on the throughput rate of the ADC alo ng with the \nchop setting. The equations used to determine the ADC throughput rate are  \nFadc (Chop On)  = \nSFword\uf0b4 \uf0b48 31× 32.768 kHz \nwhere SFword  is in decimal. \nFadc (Chop Off)  = \nSFword\uf0b481× 32.768 kHz \nwhere SFword  is in decimal. \n \nTable 29. SF SFR Bit Examples \nChop Enabled (ADCMODE.3 = 0) \nSF (Decimal) SF (Hexadecimal) Fadc (Hz) Tadc (ms) Tsettle (ms) \n131 0D 105.3 9.52 19.04 \n69 45 19.79 50.53 101.1 \n82 52 16.65 60.06 120.1 \n255 FF 5.35 186.77 373.54 \n \nChop Disabled (ADCMODE.3 = 1) \nSF (Decimal) SF (Hexadecimal) Fadc (Hz) Tadc (ms) Tsettle (ms) \n3 03 1365.3 0.73 2.2 \n69 45 59.36 16.84 50.52 \n82 52 49.95 20.02 60.06 \n255 FF 16.06 62.25 186.8 \n \n1 With chop enabled, if an SF word smaller than 13 is written to this SF register, the filter automatically defaults to 13. \n \nDuring ADC calibration, the user-programmed value of SF word is used. The SF word does not default to the maximum setting (255)  as it \ndid on previous MicroConverter® products. However, for optimum calibration results, it is recommended that the maximum SF word be set. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 47 of 110 ICON (EXCITATION CURRENT SOURCES CONTROL REGISTER) \nThe ICON register is used to configure the current sources and the burnout detection source. \nSFR Address:  D5H \nPower-On Default:  00H Bit Addressable:  No \n \nTable 30. Excitation Current Source SFR Bit Designations \nBit No. Name  Description \n7 ––– Not Implemented. Write Don’t Care. \n6 ICON.6 Burnout Current Enable Bit.  \nWhen set, this bit enables the sensor burnout current sources on primary ADC channels AIN5/AIN6 or \nAIN7/AIN8. Not available on any other ADC input pins or on the auxiliary ADC ( ADuC845 only). \n5 ICON.5 Not Implemented. Write Don’t Care. \n4 ICON.4 Not Implemented. Write Don’t Care. \n3 ICON.3 IEXC2 Pin Select. 0 selects AIN8, 1 selects AIN7 \n2 ICON.2 IEXC1 Pin Select. 0 selects AIN7, 1 selects AIN8 \n1 ICON.1 IEXC2 Enable Bit (0 = disable). \n0 ICON.0 IEXC1 Enable Bit (0 = disable). \n \nA write to the ICON register has an immediate effect but does not reset the ADCs. Therefore, if a current source is changed whi le an ADC \nis already converting, the user must wait until the third or fourth output at least (depending on the status of the chop mode) to see a fully \nsettled new output. Both IEXC1 and IEXC2 can be configured to operate on the same output pin thereby increasing the current source capability to 40 0 μA. \n  \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 48 of 110 NONVOLATILE FLASH/EE MEMORY OVERVIEW \nThe ADuC845/ ADuC847/ ADuC848 incorporate Flash/EE \nmemory technology on-chip to provide the user with nonvolatile, \nin-circuit reprogrammable code and data memory space.  \nLike EEPROM, flash memory can be programmed in-system at \nthe byte level, although it must first be erased, in page blocks. \nThus, flash memory is often and more correctly referred to as \nFlash/EE memory.  \nEEPROM\nTECHNOLOGYEPROM\nTECHNOLOGY\nFLASH/EE MEMORY\nTECHNOLOGYIN-CIRCUIT\nREPROGRAMMABLESPACE EFFICIENT /\nDENSITY\n04741-026 \nFigure 26. Flash/EE Memory Development \nOverall, Flash/EE memory represents a step closer to the ideal \nmemory device that includes nonvolatility, in-circuit program-\nmability, high density, and low cost. The Flash/EE memory \ntechnology allows the user to update program code space in-circuit, without needing to replace onetime programmable \n(OTP) devices at remote operating nodes.  \nFlash/EE Memory on the ADuC845, ADuC847 , ADuC848 \nThe ADuC845/ ADuC847/ ADuC848 provide two arrays of \nFlash/EE memory for user applications—up to 62 kbytes of \nFlash/EE program space and 4 kbytes of Flash/EE data memory space. Also, 8-kbyte and 32-kbyte program memory options are available. All examples and references in this datasheet use the 62-kbyte option; however, similar protocols and procedures are \napplicable to the 32-kbyte and 8-kbyte options unless otherwise \nnoted, provided that the difference in memory size is taken into \naccount. \nThe 62 kbytes Flash/EE code space are provided on-chip to \nfacilitate code execution without any external discrete ROM \ndevice requirements. The program memory can be programmed in-circuit, using the serial download mode provided, using conventional third party memory programmers, or via any \nuser-defined protocol in user download (ULOAD) mode. \nThe 4-kbyte Flash/EE data memory space can be used as a \ngeneral-purpose, nonvolatile scratchpad area. User access to \nthis area is via a group of seven SFRs. This space can be \nprogrammed at a byte level, although it must first be erased in \n4-byte pages. \nAll the following sections use the 62-kbyte program space as an \nexample when referring to program and ULOAD mode. For the \n64-kbyte part, the ULOAD area takes up the top 6 kbytes of the \nprogram space, that is, from 56 kbytes to 62 kbytes. For the 32-kbyte part, the ULOAD space moves to the top 8 kbytes of the on-chip program memory, that is., from 24 kbytes to 32 kbytes. No ULOAD mode is available on the 8-kbyte part since the bootload area on the 8-kbyte part is 8 kbytes long, so no usable user program space remains. The kernel still resides in the \nprotected area from 62 kbytes to 64 kbytes. \nFlash/EE Memory Reliability \nThe Flash/EE program and data memory arrays on the \nADuC845/ ADuC847/ ADuC848  are fully qualified for two key \nFlash/EE memory characteristics: Flash/EE memory cycling \nendurance and Flash/EE memory data retention.  \nEndurance quantifies the ability of the Flash/EE memory to be \ncycled through many program, read, and erase cycles. In real \nterms, a single endurance cycle is composed of four independent, \nsequential events: \n1. Initial page erase sequence \n2. Read/verify sequence \n3. Byte program sequence \n4. Second read/verify sequence \nIn reliability qualification, every byte in both the program and \ndata Flash/EE memory is cycled from 00H to FFH until a first \nfail is recorded, signifying the endurance limit of the on-chip Flash/EE memory. \nAs indicated in the Specifications table, the \nADuC845 /ADuC847/ ADuC848  Flash/EE memory endurance \nqualification has been carried out in accordance with JEDEC Specification A117 over the industrial temperature range of –\n40°C, +25°C, +85°C, and +125°C. (The LFCSP package is qualified to +85°C only.) The results allow the specification of a minimum endurance figure over supply and temperature of 100,000 cycles, with an endurance figure of 700,000 cycles being \ntypical of operation at 25°C. \nRetention is the ability of the Flash/EE memory to retain its \nprogrammed data over time. Again, the devices have been qualified \nin accordance with the formal JEDEC Retention Lifetime Specifi-\ncation (A117) at a specific junction temperature (T\nJ = 55°C). As \npart of this qualification procedure, the Flash/EE memory is \ncycled to its specified endurance limit described previously, before data retention is characterized. This means that the Flash/EE memory is guaranteed to retain its data for its full \nspecified retention lifetime every time the Flash/EE memory is \nreprogrammed. It should also be noted that retention lifetime, based on an activation energy of 0.6 eV , derates with T\nJ as shown \nin Figure 27.  \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 49 of 110 40 60 70 90\nTJ JUNCTION TEMPERATURE ( \uf0b0C)RETENTION (Years)250\n200\n150\n100\n50\n0\n50 80 110300\n100ADI SPECIFICATION\n100 YEARS MIN.\nAT T J = 55\uf0b0C\n04741-028\n \nFigure 27. Flash/EE Memory Data Retention \nFLASH/EE PROGRAM MEMORY \nThe ADuC845/ ADuC847/ ADuC848 contain a 64-kbyte array of \nFlash/EE program memory. The lower 62 kbytes of this program \nmemory are available to the user for program storage or as \nadditional NV data memory. \nThe upper 2 kbytes of this Flash/EE program memory array \ncontain permanently embedded firmware, allowing in-circuit \nserial download, serial debug, and nonintrusive single-pin emulation. These 2 kbytes of embedded firmware also contain \na power-on configuration routine that downloads factory cali-\nbrated coefficients to the various calibrated peripherals such as ADC, temperature sensor, current sources, band gap, and \nreferences. \nThese 2 kbytes of embedded firmware are hidden from the user \ncode. Attempts to read this space read 0s; therefore, the embed-\nded firmware appears as NOP instructions to user code. \nIn normal operating mode (power-on default), the 62 kbytes of \nuser Flash/EE program memory appear as a single block. This \nblock is used to store the user code as shown in Figure 28. \nEMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n62 kBYTES OF ON-CHIP PROGRAM MEMORY.\nTHE KERNEL PROGRAM APPEARS AS NOP\nINSTRUCTIONS TO USER CODE.\n62 kBYTES OF FLASH/EE PROGRAM MEMORY\nARE AVAILABLE TO THE USER. ALL OF THIS\nSPACE CAN BE PROGRAMMED FROM THE\nPERMANENTLY EMBEDDED DOWNLOAD/DEBUG\nKERNEL OR IN PARALLEL PROGRAMMING MODE .USER PROGRAM MEMORYFFFFH\n2kBYTE\nF800H\nF7FFH\n62kBYTE\n0000H\n04741-029 \nFigure 28. Flash/EE Program Memory Map in Normal Mode \nIn normal mode, the 62 kbytes of Flash/EE program memory \ncan be programmed by serial downloading and by parallel \nprogramming.  Serial Downloading (In-Circuit Programming) \nThe ADuC845/ ADuC847/ ADuC848 facilitate code download \nvia the standard UART serial port. The devices enter serial \ndownload mode after a reset or a power cycle if the PSEN  pin  \nis pulled low through an external 1 kΩ resistor. Once in serial \ndownload mode, the hidden embedded download kernel \nexecutes. This allows the user to download code to the full 62 kbytes of Flash/EE program memory while the device is  \nin circuit in its target application hardware.  \nA PC serial download executable (WSD.EXE) is provided as \npart of the ADuC845/ ADuC847 /ADuC848 Quick Start \ndevelopment system. The AN-1074 Application Note  fully \ndescribes the serial download protocol that is used by the \nembedded download kernel. \nParallel Programming \nThe parallel programming mode is fully compatible with \nconventional third-party flash or EEPROM device programmers. \nA block diagram of the external pin configuration required to support parallel programming is shown in Figure 29. In this \nmode, Ports 0 and 2 operate as the external address bus interface, \nP3 operates as the external data bus interface, and P1.0 operates as the write enable strobe. P1.1, P1.2, P1.3, and P1.4 are used as general configuration ports that configure the device for various \nprogram and erase operations during parallel programming. \nP1.4–P1.1\nP3.7–P3.0\nEA\nRESETADuC845/\nADuC847/\nADuC848+5V\nCOMMAND\nP1.7–P1.5 TIMINGDATA\n04741-030ENABLEGND\nVDD P1.0\n \nFigure 29. Flash/EE Memory Parallel Programming \nThe command words that are assigned to P1.1, P1.2, P1.3, and \nP1.4 are described in Table 31.  \nTable 31. Flash/EE Memory Parallel Programming Modes \nPort 1 Pins  \nP1.4 P1.3 P1.2 P1.1  Programming Mode \n0 0 0 0 Erase Flash/EE Program, Data, and \nSecurity Mode \n1 0 1 0 Program Code Byte \n0 0 1 0 Program Data Byte \n1 0 1 1 Read Code Byte \n0 0 1 1 Read Data Byte \n1 1 0 0 Program Security Modes \n1 1 0 1 Read/Verify Security Modes \nAll other codes Redundant \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 50 of 110 USER DOWNLOAD MODE (ULOAD) \nFigure 28 shows that it is possible to use the 62 kbytes of \nFlash/EE program memory available to the user as one single \nblock of memory. In this mode, all the Flash/EE memory is \nread-only to user code. \nHowever, most of the Flash/EE program memory can also be \nwritten to during run time simply by entering ULOAD mode. \nIn ULOAD mode, the lower 56 kbytes of program memory can be erased and reprogrammed by the user software as shown in \nFigure 30. ULOAD mode can be used to upgrade the code in \nthe field via any user-defined download protocol. By configuring the SPI port on the ADuC845 /ADuC847/ ADuC848 as a slave, it \nis possible to completely reprogram the 56 kbytes of Flash/EE program memory in under 5 s (see the AN-1074 Application \nNote ). \nAlternatively, ULOAD mode can be used to save data to the \n56 kbytes of Flash/EE memory. This can be extremely useful in \ndata logging applications where the devices can provide up to \n60 kbytes of data memory on-chip (4 kbytes of dedicated \nFlash/EE data memory also exist). \nThe upper 6 kbytes of the 62 kbytes of Flash/EE program \nmemory (8 kbytes on the 32-kbyte parts) are programmable \nonly via serial download or parallel programming. This means that this space appears as read-only to user code; therefore, it cannot be accidentally erased or reprogrammed by erroneous code execution, making it very suitable to use the 6 kbytes as a bootloader. A bootload enable option exists in the Windows® \nserial downloader (WSD) to “ Always RUN from E000H after \nReset. ” If using a bootloader, this option is recommended to ensure that the bootloader always executes correct code after \nreset.  \nProgramming the Flash/EE program memory via ULOAD \nmode is described in the Flash/EE Memory Control SFR  \nsection of ECON and also in the AN-1074 Application Note . \nEMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n62 kBYTES OF ON-CHIP PROGRAM MEMORY.\nTHE KERNEL PROGRAM APPEARS AS NOP\nINSTRUCTIONS TO USER CODE.\nUSER BOOTLOADER SPACE\nTHE USER BOOTLOADER\nSPACE CAN BE PROGRAMMED IN\nDOWNLOAD/DEBUG MODE VIA THE\nKERNEL BUT IS READ ONLY WHEN\nEXECUTING USER CODE\nUSER DOWNLOADER SPACE\nEITHER THE DOWNLOAD/DEBUG\nKERNEL OR USER CODE (IN\nULOAD MODE) CAN PROGRAM\nTHIS SPACEFFFFH\n2kBYTE\nF800H\nF7FFH\n6kBYTE\nE000H\ndFFFH\n56kBYTE\n0000H\n04741-03162 kBYTES\nOF USER\nCODE\nMEMORY\n \nFigure 30. Flash/EE Program Memory Map in ULOAD Mode (62-kbyte Part) \n The 32-kbyte memory parts have the user bootload space \nstarting at 6000H. The memory mapping is shown in Figure 31. \nEMBEDDED DOWNLOAD/DEBUG KERNEL\nPERMANENTLY EMBEDDED FIRMWARE ALLOWS\nCODE TO BE DOWNLOADED TO ANY OF THE\n32 kBYTES OF ON-CHIP PROGRAM MEMORY.\nTHE KERNEL PROGRAM APPEARS AS NOP\nINSTRUCTIONS TO USER CODE.\nUSER BOOTLOADER SPACE\nTHE USER BOOTLOADER\nSPACE CAN BE PROGRAMMED IN\nDOWNLOAD/DEBUG MODE VIA THE\nKERNEL BUT IS READ ONLY WHEN\nEXECUTING USER CODE\nUSER DOWNLOADER SPACE\nEITHER THE DOWNLOAD/DEBUG\nKERNEL OR USER CODE (IN ULOAD\nMODE) CAN PROGRAM THIS SPACENOT AVAILABLE TO USERFFFFH\n2kBYTE\nF800H\n8000H\n8kBYTE\n6000H\n5FFFH\n24kBYTE\n0000H\n04741-07432 kBYTES\nOF USER\nCODE\nMEMORY\n \nFigure 31. Flash/EE Program Memory Map in ULOAD Mode (32-kbyte Part) \nULOAD mode is not available on the 8-kbyte Flash/EE program memory parts. \nFlash/EE Program Memory Security \nThe ADuC845/ ADuC847/ ADuC848 facilitate three modes of \nFlash/EE program memory security: the lock, secure, and serial safe modes. These modes can be independently activated, restricting access to the internal code space. They can be \nenabled as part of serial download protocol, as described in the \nAN-1074 Application Note , or via parallel programming. \nLock Mode \nThis mode locks the code memory, disabling parallel program-\nming of the program memory. However, reading the memory in parallel mode and reading the memory via a MOVC command \nfrom external memory are still allowed. This mode is deactivated by initiating an ERASE CODE AND DATA command in serial \ndownload or parallel programming modes.  \nSecure Mode \nThis mode locks the code memory, disabling parallel program-\nming of the program memory. Reading/verifying the memory \nin parallel mode and reading the internal memory via a MOVC command from external memory are also disabled. This mode is deactivated by initiating an ERASE CODE AND DATA \ncommand in serial download or parallel programming modes.  \nSerial Safe Mode \nThis mode disables serial download capability on the device. If \nserial safe mode is activated and an attempt is made to reset the \ndevice into serial download mode, that is, RESET asserted \n(pulled high) and de-asserted (pulled low) with PSEN  low, the \ndevice interprets the serial download reset as a normal reset \nonly. It therefore does not enter serial download mode, but executes only a normal reset sequence. Serial safe mode can be \ndisabled only by initiating an ERASE CODE AND DATA \ncommand in parallel programming mode.  \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 51 of 110 USING FLASH/EE DATA MEMORY \nThe 4 kbytes of Flash/EE data memory are configured as 1024 \npages, each of 4 bytes. As with the other ADuC845/ ADuC847 / \nADuC848 peripherals, the interface to this memory space is via \na group of registers mapped in the SFR space. A group of four \ndata registers (EDATA1–4) holds the 4 bytes of data at each \npage. The page is addressed via the EADRH and EADRL \nregisters. Finally, ECON is an 8-bit control register that can be written to with one of nine Flash/EE memory access commands to trigger various read, write, erase, and verify functions. A block diagram of the SFR interface to the Flash/EE data memory array is shown in Figure 32.  \nECON—Flash/EE Memory Control SFR \nProgramming either Flash/EE data memory or Flash/EE \nprogram memory is done through the Flash/EE memory \ncontrol SFR (ECON). This SFR allows the user to read, write, erase, or verify the 4 kbytes of Flash/EE data memory or the \n56 kbytes of Flash/EE program memory.  \nBYTE 1\n(0000H)\nEDATA1 SFRBYTE 1\n(0004H)BYTE 1\n(0008H)BYTE 1\n(000CH)BYTE 1\n(0FF8H)BYTE 1\n(0FFCH)\nBYTE 2\n(0001H)\nEDATA2 SFRBYTE 2\n(0005H)BYTE 2\n(0009H)BYTE 2\n(000DH)BYTE 2\n(0FF9H)BYTE 2\n(0FFDH)\nBYTE 3\n(0002H)\nEDATA3 SFRBYTE 3\n(0006H)BYTE 3\n(000AH)BYTE 3\n(000EH)BYTE 3\n(0FFAH)BYTE 3\n(0FFEH)\nBYTE 4\n(0003H)\nEDATA4 SFRBYTE 4\n(0007H)BYTE 4\n(000BH)BYTE 4\n(000FH)BYTE 4\n(0FFBH)(0FFFH)\n01H\n00H02H03H3FEH3FFHPAGE ADDRESS\n(EADRH/L)\nBYTE\nADDRESSES\nARE GIVEN INBRACKETS\n04741-032BYTE 4\n \nFigure 32. Flash/EE Data Memory Control and Configuration \n \nTable 32. ECON—Flash/EE Memory Commands  \nECON Value Command Description (Normal Mode, Power-On Default) Command Description (ULOAD Mode) \n01H Read 4 bytes in the Flash/EE data memory, addressed by the page \naddress EADRH/L, are read into EDATA1–4. Not implemented. Use the MOVC instruction. \n02H Write Results in 4 bytes in EDATA1–4 being written to the Flash/EE \ndata memory, at the page address given by EADRH (0 ≤ \nEADRH < 0400H). Note that the 4 bytes in the page being \naddressed must be pre-erased.  Bytes 0 to 255 of internal XRAM are written to the 256 bytes of Flash/EE program memory at the page address given by \nEADRH/L (0 ≤ EADRH/L < E0H). \nNote that the 256 bytes in the page being addressed must be \npre-erased. \n03H Reserved. Reserved. \n04H Verify Verifies that the data in EDAT A1–4 is contained in the page \naddress given by EADRH/L. A subsequent read of the ECON SFR results in a 0 being read if the verification is valid, or a \nnonzero value being read to indicate an invalid verification. Not implemented. Use the MOVC and MOVX instructions to verify the Write in software. \n05H Erase Page 4-byte page of Flash/EE data memory address is erased by \nthe page address EADRH/L. 64-byte page of FLASH/EE program memory addressed by the byte address EADRH/L is erased. A new page starts when \nEADRL is equal to 00H, 80H, or C0H. \n06H Erase All 4 kbytes of Flash/EE data memory are erased. The entire 56 kbytes of ULOAD are erased. \n81H ReadByte The byte in the Flash/EE data memory, addressed by the \nbyte address EADRH/L, is read into EDATA1 (0 ≤ EADRH/L ≤ \n0FFFH).  Not implemented. Use the MOVC command. \n82H WriteByte The byte in EDATA1 is written into Flash/EE data memory at \nthe byte address EADRH/L. The byte in EDATA1 is written into Flash/EE program memory at the byte address EADRH/L (0 ≤ EADRH/L ≤ DFFFH). \n0FH EXULOAD Configures the ECON instructions (above) to operate on \nFlash/EE data memory. Enters normal mode, directing subsequent ECON instructions \nto operate on the Flash/EE data memory. \nF0H ULOAD Enters ULOAD mode; subsequent ECON instructions operate \non Flash/EE program memory. Enables the ECON instructions to operate on the Flash/EE program memory. ULOAD entry mode. \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 52 of 110 Example: Programming the Flash/EE Data Memory \nA user wants to program F3H into the second byte on Page 03H \nof the Flash/EE data memory space while preserving the other \n3 bytes already in this page. A typical program of the Flash/EE \ndata array involves \n1. Setting EADRH/L with the page address. \n2. Writing the data to be programmed to the EDATA1–4. \n3. Writing the ECON SFR with the appropriate command. \nStep 1: Set Up the Page Address  \nAddress registers EADRH and EADRL hold the high byte \naddress and the low byte address of the page to be addressed. The assembly language to set up the address may appear as \nMOV EADRH, #0   ;Set Page Address Pointer \nMOV EADRL, #03H  \nStep 2: Set Up the EDATA Registers  \nWrite the four values to be written into the page into the four \nSFRs EDATA1–4. Unfortunately, the user does not know three \nof them. Thus, the user must read the current page and overwrite \nthe second byte. \nMOV ECON,   #1    ;Read Page into EDATA1-4  \nMOV EDATA2, #0F3H ;Overwrite Byte 2 \nStep 3: Program Page  \nA byte in the Flash/EE array can be programmed only if it has \npreviously been erased. Specifically, a byte can be programmed only if it already holds the value FFH. Because of the Flash/EE architecture, this erasure must happen at a page level; therefore, a minimum of 4 bytes (1 page) are erased when an erase \ncommand is initiated. Once the page is erased, the user can \nprogram the 4 bytes in-page and then perform a verification of \nthe data. \nMOV ECON, #5 ;ERASE Page \nMOV ECON, #2 ;WRITE Page MOV ECON, #4 ;VERIFY Page \nMOV A, ECON  ;Check if ECON = 0 (OK!) \nAlthough the 4 kbytes of Flash/EE data memory are factory pre-\nerased, that is, byte locations set to FFH, it is good programming \npractice to include an ERASEALL routine as part of any \nconfiguration/set-up code running on the devices. An ERASEALL command consists of writing 06H to the ECON SFR, which initiates an erase of the 4-kbyte Flash/EE array. This \ncommand coded in 8051 assembly language would appear as \nMOV ECON, #06H ;ERASE all Command  \n;2ms duration FLASH/EE MEMORY TIMING \nTypical program and erase times for the devices are as follows: \nNormal Mode (Operating on Flash/EE Data Memory) \nCommand Bytes Affected  \nREADPAGE  4 bytes 25 machine cycles WRITEPAGE 4 bytes 380 μs VERIFYPAGE  4 bytes 25 machine cycles ERASEPAGE  4 bytes 2 ms ERASEALL 4 kbytes 2 ms READBYTE 1 byte 10 machine cycles WRITEBYTE  1 byte 200 μs  \nULOAD Mode (Operating on Flash/EE Program Memory)  \nWRITEPAGE 256 bytes 15 ms \nERASEPAGE  64 bytes 2 ms ERASEALL  56 kbytes 2 ms WRITEBYTE 1 byte 200 μs \n \nA given mode of operation is initiated as soon as the command \nword is written to the ECON SFR. The core microcontroller \noperation is idled until the requested program/read or erase mode is completed. In practice, this means that even though the Flash/EE memory mode of operation is typically initiated with a two-machine-cycle MOV instruction (to write to the ECON \nSFR), the next instruction is not executed until the Flash/EE \noperation is complete. This means that the core cannot respond to interrupt requests until the Flash/EE operation is complete, although the core peripheral functions such as counter/timers \ncontinue to count as configured throughout this period. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 53 of 110 DAC CIRCUIT INFORMATION \nThe ADuC845/ ADuC847/ ADuC848 incorporate a 12-bit, \nvoltage output DAC on-chip. It has a rail-to-rail voltage output \nbuffer capable of driving 10 kΩ/100 pF, and has two selectable ranges, 0 V to V\nREF and 0 V to AV DD. It can operate in 12-bit or \n8-bit mode. The DAC has a control register, DACCON, and two data registers, DACH/L. The DAC output can be programmed \nto appear at Pin 14 (DAC) or Pin 13 (AINCOM). In 12-bit mode, the DAC voltage output is updated as soon as \nthe DACL data SFR is written; therefore, the DAC data registers \nshould be updated as DACH first, followed by DACL. The 12-bit DAC data should be written into DACH/L right-justified \nsuch that DACL contains the lower 8 bits, and the lower nibble \nof DACH contains the upper 4 bits. \nDACCON Control Register \nSFR Address:  FDH \nPower-On Default: 00H Bit Addressable:  No \n \nTable 33. DACCON—DAC Configuration Commands \nBit No.  Name Description \n7 ––– Not Implemented. Write Don’t Care. \n6  ––– Not Implemented. Write Don’t Care. \n5  ––– Not Implemented. Write Don’t Care. \n4 DACPIN DAC Output Pin Select.  \nSet to 1 by the user to direct the DAC output to Pin 13 (AINCOM).  \nCleared to 0 by the user to direct  the DAC output to Pin 14 (DAC). \n3 DAC8 DAC 8-Bit Mode Bit.  \nSet to 1 by the user to enable 8-bit DAC operation. In this  mode, the 8 bits in DACL SFR are routed to the 8 MSBs \nof the DAC, and the 4 LSBs of the DAC are set to 0.  Cleared to 0 by the user to enable 12-bit DAC operation. In this mode, the 8 LSBs of the result are routed to \nDACL, and the upper 4 MSB bits are routed to the lower 4 bits of DACH. \n2 DACRN DAC Output Range Bit.  \nSet to 1 by the user to configure the DAC range of 0 V to AV DD.  \nCleared to 0 by the user to configure the DAC range of 0 V to 2.5 V (V REF). \n1 DACCLR DAC Clear Bit.  \nSet to 1 by the user to enable normal DAC operation.  Cleared to 0 by the user to reset the DAC data registers DACL/H to 0. \n0 DACEN DAC Enable Bit.  \nSet to 1 by the user to enable normal DAC operation.  Cleared to 0 by the user to power down the DAC. \n \nDACH/DACL Data Registers \nThese DAC data registers are written to by the user to update \nthe DAC output. \nSFR Address:  DACL (DAC data low byte)—FBH \n                                         DACH (DAC data high byte)—FCH \nPower-On Default:  00H (both registers) \nBit Addressable:  No (both registers) \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 54 of 110 Using the DAC \nThe on-chip DAC architecture consists of a resistor string DAC \nfollowed by an output buffer amplifier, the functional equivalent of which is shown in Figure 33. \nOUTPUT\nBUFFER\nHIGH-Z\nDISABLE\n(FROM MCU)\nRR\nR\nR\nRAVDD\nVREF\n04741-03314\n \nFigure 33. Resistor String DAC Functional Equivalent \nFeatures of this architecture include inherent guaranteed \nmonotonicity and excellent differential linearity. As shown in \nFigure 33, the reference source for the DAC is user-selectable in software. It can be either AV\nDD or V REF. In 0 V-to-AV DD mode, \nthe DAC output transfer function spans from 0 V to the voltage \nat the AV DD pin. In 0 V-to-V REF mode, the DAC output transfer \nfunction spans from 0 V to the internal V REF (2.5 V). The DAC \noutput buffer amplifier features a true rail-to-rail output stage \nimplementation. This means that, unloaded, each output is capable of swinging to within less than 100 mV of both AV\nDD \nand ground. Moreover, the DAC’s linearity specification (when \ndriving a 10 kΩ resistive load to ground) is guaranteed through \nthe full transfer function except Codes 0 to 48 in 0 V-to-V REF \nmode; Codes 0 to 100; and Codes 3950 to 4095 in 0 V-to-V DD \nmode.  \nLinearity degradation near ground and V DD is caused by satura-\ntion of the output amplifier; a general representation of its effects \n(neglecting offset and gain error) is shown in Figure 34. The dotted line indicates the ideal transfer function, and the solid \nline represents what the transfer function might look like with \nendpoint nonlinearities due to saturation of the output amplifier.  \nNote that Figure 34 represents a transfer function in 0-to-V\nDD \nmode only. In 0 V-to-V REF mode (with V REF < V DD), the lower \nnonlinearity would be similar, but the upper portion of the \ntransfer function would follow the ideal line to the end, \nshowing no signs of the high-end endpoint linearity error.  VDD–50mVVDD\nVDD–100mV\n100mV\n50mV\n0mV\n000H FFFH\n04741-034 \nFigure 34. Endpoint Nonlineariti es Due to Amplifier Saturation \nThe endpoint nonlinearities shown in Figure 34 become worse \nas a function of output loading. Most data sheet specifications \nassume a 10 kΩ resistive load to ground at the DAC output. As \nthe output is forced to source or sink more current, the nonlinear regions at the top or bottom, respectively, of Figure 34 become larger. With larger current demands, this can significantly limit output voltage swing. Figure 35 and Figure 36 illustrate this \nbehavior. Note that the upper trace in each of these figures is \nvalid only for an output range selection of 0 V to AV\nDD. In 0 V-\nto-V REF mode, DAC loading does not cause high-side voltage \nnonlinearities while the reference voltage remains below the upper trace in the corresponding figure. For example, if AV\nDD = \n3 V and V REF = 2.5 V , the high-side voltage is not affected by \nloads of less than 5 mA. But around 7 mA, the upper curve in Figure 36 drops below 2.5 V (V\nREF), indicating that at these \nhigher currents, the output is not capable of reaching V REF.  \nSOURCE/SINK CURRENT (mA)5\n0 5 10 15OUTPUT VOLTAGE (V)4\n3\n2\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\n04741-035 \nFigure 35. Source and Sink Current Capability with V REF = AV DD = 5 V \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 55 of 110 SOURCE/SINK CURRENT (mA)3\n0 5 10 15OUTPUT VOLTAGE (V)2\n1\n0DAC LOADED WITH 0000HDAC LOADED WITH 0FFFH\n04741-036 \nFigure 36. Source and Sink Current Capability with V REF = AV DD = 3 V \nFor larger loads, the current drive capability may not be suffi-\ncient. To increase the source and sink current capability of the DAC, an external buffer should be added as shown in Figure 37.  \nADuC845/\nADuC847/\nADuC848DAC\n04741-03714\n \nFigure 37. Buffering the DAC Output \nThe internal DAC output buffer also features a high impedance \ndisable function. In the chip’s default power-on state, the DAC \nis disabled and its output is in a high impedance state (or three-state) where it remains inactive until enabled in software. This means that if a zero output is desired during power-on or \npower-down transient conditions, a pull-down resistor must be \nadded to each DAC output. Assuming that this resistor is in place, the DAC output remains at ground potential whenever \nthe DAC is disabled.  \n PULSE-WIDTH MODULATOR (PWM) \nThe ADuC845/ ADuC847/ ADuC848 has a highly flexible PWM \noffering programmable resolution and an input clock. The \nPWM can be configured in six different modes of operation. \nTwo of these modes allow the PWM to be configured as a Σ- Δ \nDAC with up to 16 bits of resolution. A block diagram of the \nPWM is shown in Figure 38. \nCLOCK\nSELECTPROGRAMMABLE\nDIVIDER\nCOMPARE\nMODE PWM0H/L PWM1H/L12.583MHz (F VCO)\n32.768kHz/1532.768kHz (FXTAL)EXTERNAL CLOCK ON P2.7\nP2.5\nP2.616-BIT PWM COUNTER\n04741-038 \nFigure 38. PWM Block Diagram \nThe PWM uses control SFR, PWMCON, and four data SFRs: \nPWM0H, PWM0L, PWM1H, and PWM1L.  \nPWMCON (as described in Table 34) controls the different \nmodes of operation of the PWM as well as the PWM clock \nfrequency. PWM0H/L and PWM1H/L are the data registers that determine the duty cycles of the PWM outputs at P2.5 and P2.6.  \nTo use the PWM user software, first write to PWMCON to \nselect the PWM mode of operation and the PWM input clock. \nWriting to PWMCON also resets the PWM counter. In any of \nthe 16-bit modes of operation (Modes 1, 3, 4, 6), user software \nshould write to the PWM0L or PWM1L SFRs first. This value is written to a hidden SFR. Writing to the PWM0H or PWM1H SFRs updates both the PWMxH and the PWMxL SFRs but does not change the outputs until the end of the PWM cycle in \nprogress. The values written to these 16-bit registers are then \nused in the next PWM cycle. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 56 of 110 PWMCON PWM Control SFR  \nSFR Address:  AEH \nPower-On Default:  00H Bit Addressable:  No \n \nTable 34. PWMCON PWM Control SFR \nBit No.  Name Description \n7 ––– Not Implemented. Write Don’t Care. \n6, 5, 4 PWM2, PWM1, PWM0 PMW Mode Selection. \nPWM2 PWM1 PWM0  \n0 0 0 Mode 0: PWM disabled. \n0 0 1 Mode 1: Single 16-bit output with programmable pulse and cycle time. \n0 1 0 Mode 2: Twin 8-bit outputs. \n0 1 1 Mode 3: Twin 16-bit outputs. \n1 0 0 Mode 4: Dual 16-bit pulse density outputs. \n1 0 1 Mode 5: Dual 8-bit outputs. \n1 1 0 Mode 6: Dual 16-bit pulse density RZ outputs. \n1 1 1 Mode 7: PWM counter re set with outputs not used. \n3, 2 PWS1, PWS0 PWM Clock Source Divider. \nPWS1 PWS0  \n0 0 Selected clock. \n0 1 Selected clock divided by 4. \n1 0 Selected clock divided by 16. \n1 1 Selected clock divided by 64. \n1, 0 PWC1, PWC0 PWM Clock Source Selection. \nPWC1 PWC0  \n0 0 F XTAL/15 (2.184 kHz). \n0 1 F XTAL (32.768 kHz). \n1 0 External input on P2.7. \n1 1 F VCO (12.58 MHz). \n \nPWM Pulse Width High Byte (PWM0H) \nSFR Address:  B2H \nPower-On Default: 00H \nBit Addressable:  No  \nTable 35. PWM0H: PWM Pulse Width High Byte \nPWM0H.7 PWM0H.6 PWM0H.5 PWM0H.4 PWM0H.3 PWM0H.2 PWM0H.1 PWM0H.0 \n0 0 0 0 0 0 0 0 \nR/W R/W R/W R/W R/W R/W R/W R/W \n \nPWM Pulse Width Low Byte (PWM0L) \nSFR Address:  B1H \nPower-On Default: 00H \nBit Addressable:  No \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 57 of 110 Table 36. PWM0L: PWM Pulse Width Low Byte \nPWM0L.7 PWM0L.6 PWM0L.5 PWM0L.4 PWM0L.3 PWM0L.2 PWM0L.1 PWM0L.0 \n0 0 0 0 0 0 0 0 \nR/W R/W R/W R/W R/W R/W R/W R/W \n \nPWM Cycle Width High Byte (PWM1H) \nSFR Address:  B4H \nPower-On Default: 00H \nBit Addressable:  No \n \nTable 37. PWM1H: PWM Cycle Width High Byte \nPWM1H.7 PWM1H.6 PWM1H.5 PWM1H.4 PWM1H.3 PWM1H.2 PWM1H.1 PWM1H.0 \n0 0 0 0 0 0 0 0 \nR/W R/W R/W R/W R/W R/W R/W R/W \n \nPWM Cycle Width Low Byte (PWM1L) \nSFR Address:  B3H \nPower-On Default: 00H \nBit Addressable:  No \n \nTable 38. PWM1L: PWM Cycle Width Low Byte \nPWM1L.7 PWM1L.6 PWM1L.5 PWM1L.4 PWM1L.3 PWM1L.2 PWM1L.1 PWM1L.0 \n0 0 0 0 0 0 0 0 \nR/W R/W R/W R/W R/W R/W R/W R/W \n \nMode 0 \nIn Mode 0, the PWM is disabled, allowing P2.5 and P2.6 to be \nused as normal digital I/Os.  \nMode 1 (Single-Variable Resolution PWM) \nIn Mode 1, both the pulse length and the cycle time (period) are \nprogrammable in user code, allowing the resolution of the PWM \nto be variable. PWM1H/L sets the period of the output waveform. Reducing PWM1H/L reduces the resolution of the PWM output but increases the maximum output rate of the PWM. For example, setting PWM1H/L to 65536 gives a 16-bit PWM with a maximum output rate of 192 Hz (12.583 MHz/65536). Setting \nPWM1H/L to 4096 gives a 12-bit PWM with a maximum \noutput rate of 3072 Hz (12.583 MHz/4096).  \nPWM0H/L sets the duty cycle of the PWM output waveform as \nshown in Figure 39.  P2.5PWM COUNTERPWM1H/L\n0PWM0H/L\n04741-039\n \nFigure 39. PWM in Mode 1 \nMode 2 (Twin 8-Bit PWM) \nIn Mode 2, the duty cycle and the resolution of the PWM \noutputs are programmable. The maximum resolution of the \nPWM output is 8 bits.  \nPWM1L sets the period for both PWM outputs. Typically, this \nis set to 255 (FFH) to give an 8-bit PWM, although it is possible \nto reduce this as necessary. A value of 100 can be loaded here to \ngive a percentage PWM, that is, the PWM is accurate to 1%.  \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 58 of 110 The outputs of the PWM at P2.5 and P2.6 are shown in Figure 40. \nAs can be seen, the output of PWM0 (P2.5) goes low when the \nPWM counter equals PWM0L. The output of PWM1 (P2.6) goes high when the PWM counter equals PWM1H and goes low \nagain when the PWM counter equals PWM0H. Setting PWM1H \nto 0 ensures that both PWM outputs start simultaneously.  \nP2.6P2.5PWM COUNTER\nPWM1H\n0PWM1L\nPWM0H\nPWM0L\n04741-040 \nFigure 40. PWM Mode 2 \nMode 3 (Twin 16-Bit PWM) \nIn Mode 3, the PWM counter is fixed to count from 0 to 65536, \ngiving a fixed 16-bit PWM. Operating from the 12.58 MHz core \nclock results in a PWM output rate of 192 Hz. The duty cycle of \nthe PWM outputs at P2.5 and P2.6 are independently \nprogrammable.  \nAs shown in Figure 41, while the PWM counter is less than \nPWM0H/L, the output of PWM0 (P2.5) is high. Once the \nPWM counter equals PWM0H/L, PWM0 (P2.5) goes low and \nremains low until the PWM counter rolls over.  \nSimilarly, while the PWM counter is less than PWM1H/L, the \noutput of PWM1 (P2.6) is high. Once the PWM counter equals \nPWM1H/L, PWM1 (P2.6) goes low and remains low until the \nPWM counter rolls over.  \nIn this mode, both PWM outputs are synchronized, that is, once \nthe PWM counter rolls over to 0, both PWM0 (P2.5) and PWM1 \n(P2.6) go high.  \nP2.6P2.5PWM COUNTER\nPWM1H/L\n065536\nPWM0H/L\n04741-041 \nFigure 41. PWM Mode 3 Mode 4 (Dual NRZ 16-Bit Σ-∆ DAC) \nMode 4 provides a high speed PWM output similar to that of a \nΣ-Δ DAC. Typically, this mode is used with the PWM clock \nequal to 12.58 MHz.  \nIn this mode, P2.5 and P2.6 are updated every PWM clock  \n(80 ns in the case of 12.58 MHz). Over any 65536 cycles (16-bit \nPWM), PWM0 (P2.5) is high for PWM0H/L cycles and low for (65536 – PWM0H/L) cycles. Similarly, PWM1 (P2.6) is high for PWM1H/L cycles and low for (65536 – PWM1H/L) cycles.  \nIf PWM1H is set to 4010H (slightly above one-quarter of FS), \ntypically P2.6 is low for three clocks and high for one clock \n(each clock is approximately 80 ns). Over every 65536 clocks, \nthe PWM compromises for the fact that the output should be \nslightly above one-quarter of full scale, by having a high cycle \nfollowed by only two low cycles. \n12.583MHz16-BIT\n80\uf06ds\n016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P2.5\nCARRY OUT AT P2.6PWM0H/L = C000H\nPWM1H/L = 4000H0100LATCH0111 110\n04741-04280\uf06ds\n \nFigure 42. PWM Mode 4 \nFor faster DAC outputs (at lower resolution), write 0s to the \nLSBs that are not required with a 1 in the LSB position. If, for \nexample, only 12-bit performance is required, write 0001 to the \n4 LSBs. This means that a 12-bit accurate Σ-Δ DAC output can \noccur at 3 kHz. Similarly, writing 00000001 to the 8 LSBs gives \nan 8-bit accurate Σ-Δ DAC output at 49 kHz.  \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 59 of 110 Mode 5 (Dual 8-Bit PWM) \nIn Mode 5, the duty cycle and the resolution of the PWM outputs \nare individually programmable. The maximum resolution of the PWM output is 8 bits. \nP2.6P2.5PWM COUNTERS\nPWM1H\n0PWM1L\nPWM0HPWM0L\n04741-043 \nFigure 43. PWM Mode 5 \nMode 6 (Dual RZ 16-Bit Σ-∆ DAC) \nMode 6 provides a high speed PWM output similar to that of a \nΣ-Δ DAC. Mode 6 operates very similarly to Mode 4; however, \nthe key difference is that Mode 6 provides return to zero (RZ) Σ-Δ DAC output. Mode 4 provides non-return-to-zero Σ-Δ DAC outputs. RZ mode ensures that any difference in the rise \nand fall times does not affect the Σ-Δ DAC INL. However, RZ \nmode halves the dynamic range of the Σ-Δ DAC outputs from 0 V− to AV\nDD down to 0 V to AV DD/2. For best results, this \nmode should be used with a PWM clock divider of 4. \nIf PWM1H is set to 4010H (slightly above one-quarter of FS), \ntypically P2.6 is low for three full clocks (3 × 80 ns), high for \none-half a clock (40 ns), and then low again for one-half a clock (40 ns) before repeating itself. Over every 65536 clocks, the \nPWM compromises for the fact that the output should be \nslightly above one-quarter of full scale by leaving the output \nhigh for two half clocks in four every so often. \nFor faster DAC outputs (at lower resolution), write 0s to the \nLSBs that are not required with a 1 in the LSB position. If, for \nexample, only 12-bit performance is required, write 0001 to the 4 LSBs. This means that a 12-bit accurate Σ-Δ DAC output can occur at 3 kHz. Similarly, writing 00000001 to the 8 LSBs gives \nan 8-bit accurate Σ-Δ DAC output at 49 kHz.  The output resolution is set by the PWM1L and PWM1H SFRs \nfor the P2.5 and P2.6 outputs, respectively. PWM0L and PWM0H \nset the duty cycles of the PWM outputs at P2.5 and P2.6, respectively. Both PWMs have the same clock source and clock \ndivider.  \n3.146MHz16-BIT\n318\uf06ds016-BIT 16-BIT\n16-BIT 16-BIT\n16-BITCARRY OUT AT P2.5\nCARRY OUT AT P2.6PWM0H/L = C000H\nPWM1H/L = 4000H0 1 0 00 0LATCH011 1 11 0\n318\uf06ds\n0, 3/4, 1/2, 1/4, 0\n04741-044 \nFigure 44. PWM Mode 6 \n \nMode 7 \nIn Mode 7, the PWM is disabled, allowing P2.5 and P2.6 to be \nused as normal. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 60 of 110 ON-CHIP PLL (PLLCON) \nThe ADuC845/ ADuC847/ ADuC848 are intended for use with a \n32.768 kHz watch crystal. A PLL locks onto a multiple (384) of \nthis to provide a stable 12.582912 MHz clock for the system. The core can operate at this frequency or at binary submultiples \nof it to allow power saving when maximum core performance is \nnot required. The default core clock is the PLL clock divided by 8 or 1.572864 MHz. The ADC clocks are also derived from the PLL clock, with the modulator rate being the same as the crystal oscillator frequency. The control register for the PLL is called \nPLLCON and is described as follows. The 5 V parts can be set to a maximum core frequency of \n12.58 MHz (CD2...0 = 000) while at 3 V , the maximum core \nclock rate is 6.29 MHz (CD2...0 = 001). The CD bits should not \nbe set to 000b on the 3 V parts. \nThe 3 V parts are limited to a core clock speed of 6.29 MHz \n(CD = 1). \nPLLCON PLL Control Register \nSFR Address:  D7H \nPower-On Default: 53H \nBit Addressable:  No \n \nTable 39. PLLCON PLL Control Register \nBit No.  Name Description \n7 OSC_PD Oscillator Power-Down Bit. \nIf low, the 32 kHz crystal oscillator continues running in power-down mode.  \nIf high, the 32.768 kHz oscillator is powered down. \nWhen this bit is low, the seconds counter continues to count in power-down mode and can interrupt the CPU \nto exit power-down. The oscillator is always enabled in normal mode. \n6 LOCK PLL Lock Bit. This is a read-only bit.  \nSet automatically at power-on to indicate that the PLL l oop is correctly tracking the crystal clock. After power-\ndown, this bit can be polled to wait for the PLL to lock.  \nCleared automatically at power-on to indicate that the PLL is not correctly tracking the crystal clock. This \nmight be due to the absence of a crystal clock or an ex ternal crystal at power-on. In this mode, the PLL output \ncan be 12.58 MHz ± 20%. After the device wakes up from power-down, user code can poll this bit to wait for \nthe PLL to lock. If LOCK = 0, the PLL is not locked. \n5 ––– Not Implemented. Write Don’t Care. \n4 LTEA EA Status. Read-only bit. Reading this bi t returns the state of the external EA  pin latched at reset or power-on. \n3 FINT Fast Interrupt Response Bit.  \nSet by the user to enable the respon se to any interrupt to be executed at the fastest core clock frequency. \nCleared by the user to disable the fast interrupt response feature. \nThis function must not be used on 3 V parts.  \n2, 1, 0 CD2, CD1, CD0 CPU (Core Clock) Divider Bits. This number determines the frequency at which the core operates. \nCD2 CD1 CD0 Core Clock Frequency (MHz) \n0 0 0 12.582912. Not a valid selection on 3 V parts. \n0 0 1 6.291456 (Maximum core clock rate allowed on the 3 V parts) \n0 1 0 3.145728 \n0 1 1 1.572864 (Default core frequency) \n1 0 0 0.786432 \n1 0 1 0.393216 \n1 1 0 0.196608 \n1 1 1 0.098304 \n  On 3 V parts (ADuC84xBCPxx-3 or ADuC84xBSxx-3), the CD settings can be only CD = 1; CD = 0 is not a valid \nselection. If CD = 0 is selected on a 3 V part by writ ing to PLLCON, the instruction is ignored, and the previous \nCD value is retained. The Fast Interrupt bit (FINT) must not be used on 3 V part s since it automatically sets the CD bits to 0, which is \nnot a valid setting. \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 61 of 110 I2C SERIAL INTERFACE \nThe ADuC845/ ADuC847/ ADuC848 support a fully licensed \nI2C serial interface. The I2C interface is implemented as a full \nhardware slave and software master. SDATA (Pin 27 on the \nMQFP package and Pin 29 on the LFCSP package) is the data \nI/O pin. SCLK (Pin 26 on the MQFP package and Pin 28 on the \nLFCSP package) is the serial interface clock for the SPI interface. The I\n2C interface on the devices is fully independent of all other \npin/function multiplexing. The I2C interface incorporated on \nthe ADuC845 /ADuC847/ ADuC848 also includes a second \naddress register (I2CADD1) at SFR Address F2H with a default \npower-on value of 7FH. The I2C interface is always available to \nthe user and is not multiplexed with any other I/O functionality on the chip. This means that the I\n2C and SPI interfaces can be \nused at the same time.  Note that when using the I2C and SPI interfaces simultaneously, \nthey both use the same interrupt routine (Vector Address 3BH). When an interrupt occurs from one of these, it is necessary to interrogate each interface to see which one has triggered the ISR request. \nThe four SFRs that are used to control the I\n2C interface are \ndescribed next. \nI2CCON—I2C Control Register \nSFR Address:  E8H \nPower-On Default:  00H \nBit Addressable:  Y es \n \n \nTable 40. I2CCON SFR Bit Designations \nBit No.  Name  Description \n7 MDO I2C Software Master Data Output Bit (master mode only).  \nThis data bit is used to implement a master I2C transmitter interface in software. Da ta written to this bit is output on \nthe SDATA pin if the data output enable bit (MDE) is set. \n6 MDE I2C Software Output Enable Bit (master mode only). \nSet by the user to enable the SDATA pin as an output (Tx).  \nCleared by the user to enable the SDATA pin as an input (Rx). \n5 MCO I2C Software Master Clock Output Bit (master mode only). \nThis bit is used to impleme nt the SCLK for a master I2C transmitter in software. Data wr itten to this bit is output on \nthe SCLK pin. \n4 MDI I2C Software Master Data Input Bit (master mode only). \nThis data bit is used to implement a master I2C receiver interface in software. Data on the SDATA pin is latched into \nthis bit on an SCLK transition if th e data output enable (MDE) bit is 0. \n3 I2CM I2C Master/Slave Mode Bit. \nSet by the user to enable I2C software master mode. \nCleared by the user to enable I2C hardware slave mode. \n2 I2CRS I2C Reset Bit (slave mode only). \nSet by the user to reset the I2C interface.  \nCleared by the user code for normal I2C operation. \n1 I2CTX I2C Direction Transfer Bit (slave mode only). \nSet by the MicroConverter if the I2C interface is transmitting.  \nCleared by the MicroConverter if the I2C interface is receiving. \n0 I2CI I2C Interrupt Bit (slave mode only). \nSet by the MicroConverter after a byte has been transmitted or received.  \nCleared by the MicroConverter when the user code reads the I2CDAT SFR. I2CI should not be cleared by user code. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 62 of 110  \nI2CADD—I2C Address Register 1 \nFunction: Holds one of the I2C peripheral addresses for the device. It may be overwritten by user code. The uC001 \nApplication Note describes the format of the I2C standard 7-bit address. \nSFR Address: 9BH \nPower-On Default: 55H Bit Addressable: No  \nI2CADD1—I\n2C Address Register 2 \nFunction: Same as the I2CADD. \nSFR Address: F2H \nPower-On Default: 7FH \nBit Addressable: No \n \nI2CDAT—I2C Data Register \nFunction: The I2CDAT SFR is written to by user code to transmit  data, or read by user code to read data just received by \nthe I2C interface. Accessing I2CDAT automatically clears any pending I2C interrupt and the I2CI bit in the \nI2CCON SFR. User code should access I2CDAT only once per interrupt cycle. \nSFR Address: 9AH \nPower-On Default: 00H Bit Addressable: No \n \nThe main features of the MicroConverter I\n2C interface are \n\uf0b7 Only two bus lines are required: a serial data line (SDATA) \nand a serial clock line (SCLOCK). \n\uf0b7 An I2C master can communicate with multiple slave \ndevices. Because each slave device has a unique 7-bit address, single master/slave relationships can exist at all \ntimes even in a multislave environment. \n\uf0b7 The ability to respond to two separate addresses when \noperating in slave mode. \n\uf0b7 On-chip filtering rejects <50 ns spikes on the SDATA and \nthe SCLOCK lines to preserve data integrity. \nDVDD\nI2C\nMASTERI2C\nSLAVE 1\nI2C\nSLAVE 2\n04741-045 \nFigure 45. Typical I2C System Software Master Mode \nThe ADuC845/ ADuC847/ ADuC848 can be used as an I2C \nmaster device by configuring the I2C peripheral in master mode \nand writing software to output the data bit-by-bit. This is \nreferred to as a software master. Master mode is enabled by \nsetting the I2CM bit in the I2CCON register. \nT o transmit data on the SDATA line, MDE must be set to enable \nthe output driver on the SDATA pin. If MDE is set, the SDATA \npin is pulled high or low depending on whether the MDO bit is set or cleared. MCO controls the SCLOCK pin and is always configured as an output in master mode. In master mode, the SCLOCK pin is pulled high or low depending on the whether MCO is set or cleared. \nTo receive data, MDE must be cleared to disable the output \ndriver on SDATA. Software must provide the clocks by toggling \nthe MCO bit and reading the SDATA pin via the MDI bit. If \nMDE is cleared, MDI can be used to read the SDATA pin. The \nvalue of the SDATA pin is latched into MDI on a rising edge of SCLOCK. MDI is set if the SDATA pin is high on the last rising edge of SCLOCK. MDI is cleared if the SDATA pin is low on the \nlast rising edge of SCLOCK. \nSoftware must control MDO, MCO, and MDE appropriately to \ngenerate the start condition, slave address, acknowledge bits, \ndata bytes, and stop conditions. These functions are described \nin the uC001 Application Note . \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 63 of 110 Hardware Slave Mode \nAfter reset, the ADuC845/ ADuC847/ ADuC848  default to \nhardware slave mode. Slave mode is enabled by clearing the \nI2CM bit in I2CCON. The devices have a full hardware slave. In \nslave mode, the I2C address is stored in the I2CADD register. \nData received or to be transmitted is stored in the I2CDAT register. \nOnce enabled in I2C slave mode, the slave controller waits for  \na start condition. If the parts detect a valid start condition, \nfollowed by a valid address, followed by the R/W bit, then the I2CI interrupt bit is automatically set by hardware. The I\n2C \nperipheral generates a core interrupt only if the user has pre-\nconfigured the I2C interrupt enable bit in the IEIP2 SFR as well \nas the global interrupt bit, EA, in the IE SFR. Therefore, \nMOV IEIP2, #01h  ;Enable I2C Interrupt \nSETB EA \nAn autoclear of the I2CI bit is implemented on the devices so \nthat this bit is cleared automatically upon read or write access to the I2CDAT SFR. \nMOV I2CDAT, A  ;I2CI auto-cleared \nMOV A, I2CDAT  ;I2CI auto-cleared \nIf for any reason the user tries to clear the interrupt more than \nonce, that is, access the data SFR more than once per interrupt, \nthe I\n2C controller stops. The interface then must be reset by \nusing the I2CRS bit. \nThe user can choose to poll the I2CI bit or to enable the \ninterrupt. In the case of the interrupt, the PC counter vectors to \n003BH at the end of each complete byte. For the first byte, when the user gets to the I2CI ISR, the 7-bit address and the R/W bit \nappear in the I2CDAT SFR. \nThe I2CTX bit contains the R/W bit sent from the master. If \nI2CTX is set, the master is ready to receive a byte; therefore the \nslave transmits data by writing to the I2CDAT register. If I2CTX is cleared, the master is ready to transmit a byte; therefore the slave receives a serial byte. Software can interrogate the state of \nI2CTX to determine whether it should write to or read from \nI2CDAT. \nOnce the device has received a valid address, hardware holds \nSCLOCK low until the I2CI bit is cleared by software. This \nallows the master to wait for the slave to be ready before \ntransmitting the clocks for the next byte. \nThe I2CI interrupt bit is set every time a complete data byte is \nreceived or transmitted, provided that it is followed by a valid \nACK. If the byte is followed by a NACK, an interrupt is not \ngenerated. \nThe device continues to issue interrupts for each complete data \nbyte transferred until a stop condition is received or the interface \nis reset. When a stop condition is received, the interface resets to a state \nin which it is waiting to be addressed (idle). Similarly, if the \ninterface receives a NACK at the end of a sequence, it also returns to the default idle state. The I2CRS bit can be used to \nreset the I\n2C interface. This bit can be used to force the interface \nback to the default idle state. \nSPI SERIAL INTERFACE \nThe ADuC845/ ADuC847/ ADuC848 integrate a complete \nhardware serial peripheral interface (SPI) interface on-chip. SPI \nis an industry-standard synchronous serial interface that allows 8 bits of data to be synchronously transmitted and received simultaneously, that is, full duplex. Note that the SPI pins are multiplexed with the Port 2 pins, P2.0, P2.1, P2.2, and P2.3. These \npins have SPI functionality only if SPE is set. Otherwise, with \nSPE cleared, standard Port 2 functionality is maintained. SPI can be configured for master or slave operation and typically \nconsists of Pins SCLOCK, MISO, MOSI, and SS\n. \nSCLOCK (Serial Clock I/O Pin) \nPin 28 (MQFP Package), Pin 30 (LFCSP Package)  \nThe master clock (SCLOCK) is used to synchronize the data \ntransmitted and received through the MOSI and MISO data \nlines. \nA single data bit is transmitted and received in each SCLOCK \nperiod. Therefore, a byte is transmitted/received after eight \nSCLOCK periods. The SCLOCK pin is configured as an output \nin master mode and as an input in slave mode. In master mode, the bit rate, polarity, and phase of the clock are controlled by the CPOL, CPHA, SPR0, and SPR1 bits in the SPICON SFR (see Table 41). In slave mode, the SPICON register must be config-\nured with the same phase and polarity (CPHA and CPOL) as the \nmaster. The data is transmitted on one edge of the SCLOCK \nsignal and sampled on the other. \nMISO (Master In, Slave Out Pin) \nPin 30 (MQFP Package), Pin 32 (LFCSP Package) \nThe MISO pin is configured as an input line in master mode \nand an output line in slave mode. The MISO line on the master (data in) should be connected to the MISO line in the slave device (data out). The data is transferred as byte-wide (8-bit) \nserial data, MSB first. \nMOSI (Master Out, Slave In Pin) \nPin 29 (MQFP Package), Pin31 (LFCSP Package)  \nThe MOSI pin is configured as an output line in master mode \nand an input line in slave mode. The MOSI line on the master (data out) should be connected to the MOSI line in the slave device (data in). The data is transferred as byte-wide (8-bit) serial data, MSB first. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 64 of 110 SS (Slave Select Input Pin) \nPin 31 (MQFP Package), Pin 33 (LFCSP Package)  \nThe SS pin is used only when the ADuC845/ ADuC847/ \nADuC848 are configured in SPI slave mode. This line is active \nlow. Data is received or transmitted in slave mode only when \nthe SS pin is low, allowing the devices to be used in single-\nmaster, multislave SPI configurations. If CPHA = 1, the SS input can be pulled low permanently. If CPHA = 0, the SS input must \nbe driven low before the first bit in a byte-wide transmission or \nreception and must return high again after the last bit in that byte-wide transmission or reception. In SPI slave mode, the \nlogic level on the external SS\n pin (Pin 31/Pin 33) can be read via \nthe SPR0 bit in the SPICON SFR. \nThe SFR register in Table 41 is used to control the SPI interface. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 65 of 110 SPICON—SPI Control Register \nSFR Address:  F8H \nPower-On Default: 05H \nBit Addressable:  Y es \n \nTable 41. SPICON SFR Bit Designations \nBit No. Name Description \n7 ISPI SPI Interrupt Bit. \nSet by the MicroConverter at the end of each SPI transfer. \nCleared directly by user code or indirectly by reading the SPIDAT SFR. \n6 WCOL Write Collision Error Bit. \nSet by the MicroConverter if SPIDAT is written to while an SPI transfer is in progress.  Cleared by user code. \n5 SPE SPI Interface Enable Bit. \nSet by user code to enable SPI functionality.  Cleared by user code to enable standard Port 2 functionality. \n4 SPIM SPI Master/Slave Mode Select Bit. \nSet by user code to enable master mode operation (SCLOCK is an output). Cleared by user code to enable slave mode operation (SCLOCK is an input). \n3 CPOL1 Clock Polarity Bit. \nSet by user code to enable SCLOCK idle high.  Cleared by user code to enable SCLOCK idle low. \n2 CPHA1 Clock Phase Select Bit. \nSet by user code if the leading SC LOCK edge is to transmit data.  \nCleared by user code if the trailing  SCLOCK edge is to transmit data. \n1, 0 SPR1, SPR0 SPI Bit-Rate Bits. \nSPR1 SPR0 Selected Bit Rate \n0 0 f core/2 \n0 1 f core/4 \n1 0 f core/8 \n1 1 f core/16 \n \n1 The CPOL and CPHA bits should both contain the same values for master and slave devices.  \n \nNote that both SPI and I2C use the same ISR (Vector Address 3BH); therefore, when using SPI and I2C simultaneously, it is necessary to \ncheck the interfaces following an interrupt to determine which one caused the interrupt. \n \nSPIDAT: SPI Data Register \nSFR Address:  7FH \nPower-On Default: 00H \nBit Addressable:  No \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 66 of 110 USING THE SPI INTERFACE  \nDepending on the configuration of the bits in the SPICON  \nSFR shown in Table 41, the SPI interface transmits or receives \ndata in a number of possible modes. Figure 46 shows all possible ADuC845/ ADuC847 /ADuC848 SPI configurations \nand the timing relationships and synchronization among the signals involved. Also shown in this figure is the SPI interrupt bit (ISPI) and how it is triggered at the end of each byte-wide \ncommunication. \nSCLOCK\n(CPOL = 1)\nSCLOCK\n(CPOL = 0)\n(CPHA = 1)\n(CPHA = 0)SAMPLE INPUTISPI FLAG\nDATA OUTPUT\nISPI FLAGSAMPLE INPUT\nDATA OUTPUT ?\nMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSBMSB BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 LSBSS\n04741-046 \nFigure 46. SPI Timing, All Modes SPI Interface—Master Mode \nIn master mode, the SCLOCK pin is always an output and \ngenerates a burst of eight clocks whenever user code writes to \nthe SPIDAT register. The SCLOCK bit rate is determined by \nSPR0 and SPR1 in SPICON. Also note that the SS pin is not \nused in master mode. If the devices need to assert the SS pin on \nan external slave device, use a port digital output pin. \nIn master mode, a byte transmission or reception is initiated by \na byte write to SPIDAT. The hardware automatically generates \neight clock periods via the SCLOCK pin, and the data is \ntransmitted via MOSI. With each SCLOCK period, a data bit is \nalso sampled via MISO. After eight clocks, the transmitted byte is completely transmitted (via MOSI), and the input byte (if required) is waiting in the input shift register (after being received via MISO). The ISPI flag is set automatically, and an interrupt occurs if enabled. The value in the input shift register is latched into SPIDAT.  \nSPI Interface—Slave Mode \nIn slave mode, the SCLOCK is an input. The SS pin must also \nbe driven low externally during the byte communication. Trans-mission is also initiated by a write to SPIDAT. In slave mode, a data bit is transmitted via MISO, and a data bit is received via MOSI through each input SCLOCK period. After eight clocks, \nthe transmitted byte is completely transmitted, and the input \nbyte is waiting in the input shift register. The ISPI flag is set automatically, and an interrupt occurs, if enabled. The value in the shift register is latched into SPIDAT only when the trans-mission/reception of a byte has been completed. The end of transmission occurs after the eighth clock has been received if CPHA = 1, or when SS\n returns high if CPHA = 0. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 67 of 110 DUAL DATA POINTERS \nThe devices incorporate two data pointers. The second data \npointer is a shadow data pointer and is selected via the data \npointer control SFR (DPCON). DPCON features automatic hardware post-increment and post-decrement as well as an automatic data pointer toggle.  DPCON—Data Pointer Control SFR \nSFR Address:  A7H \nPower-On Default: 00H \nBit Addressable:  No \nTable 42. DPCON SFR Bit Designations \nBit No. Name Description \n7 ---- Not Implemented. Write Don’t Care. \n6 DPT Data Pointer Automatic Toggle Enable. \nCleared by the user to disable autoswapping of the DPTR. \nSet in user software to enable automatic toggling of  the DPTR after each MOVX or MOVC instruction. \n5, 4 DP1m1, DP1m0 Shadow Data Pointer Mode. These bits enable extra mo des of the shadow data pointer operation, allowing \nmore compact and more effici ent code size and execution. \nDP1m1 DP1m0 Behavior of the Shadow Data Pointer \n0 0 8052 behavior. \n0 1 DPTR is post-incremented after a MOVX or a MOVC instruction. \n1 0 DPTR is post-decremented after a MOVX or MOVC instruction. \n1 1 DPTR LSB is toggled after a MOVX or MOVC inst ruction. (This instruction can be useful for \nmoving 8-bit blocks to/from 16-bit devices.) \n3, 2 DP0m1, DP0m0 Main Data Pointer Mode. These bits enable extra mode s of the main data pointer operation, allowing more \ncompact and more efficient code size and execution. \nDP0m1 DP0m0 Behavior of the Main Data Pointer \n0 0 8052 behavior. \n0 1 DPTR is post-incremented after a MOVX or a MOVC instruction. \n1 0 DPTR is post-decremented after a MOVX or MOVC instruction. \n1 1 DPTR LSB is toggled after a MOVX or MOVC in struction. (This instruction is useful for \nmoving 8-bit blocks to/from 16-bit devices.) \n1 ---- Not Implemented. Write Don’t Care. \n0 DPSEL Data Pointer Select.  \nCleared by the user to select the main data pointer. Th is means that the contents of this 24-bit register are \nplaced into the DPL, DPH, and DPP SFRs.  Set by the user to select the shadow data pointer. This means that the contents of a separate 24-bit register \nappear in the DPL, DPH, and DPP SFRs. \nNote the following: \n\uf0b7 The Dual Data Pointer section is the only place in which \nmain and shadow data pointers are distinguished. \nWhenever the DPTR is mentioned elsewhere in this data sheet, active DPTR is implied. \n\uf0b7 Only the MOVC/MOVX @DPTR instructions automatically post-increment and post-decrement the \nDPTR. Other MOVC/MOVX instructions, such as MOVC \nPC or MOVC @Ri, do not cause the DPTR to automatically \npost-increment and post-decrement. \nTo illustrate the operation of DPCON, the following code copies \n256 bytes of code memory at Address D000H into XRAM, \nstarting from Address 0000H. \n \n   MOV DPTR,#0      ;Main DPTR = 0 \n  MOV DPCON,#55H   ;Select shadow DPTR \n    ;DPTR1 increment mode     ;DPTR0 increment mode \n    ;DPTR auto toggling ON \n  MOV DPTR,#0D000H ;DPTR = D000H \nMOVELOOP: CLR A \n  MOVC A,@A+DPTR   ;Get data \n    ;Post Inc DPTR \n    ;Swap to Main DPTR(Data) \n        MOVX @DPTR,A    ;Put ACC in XRAM \n    ;Increment main DPTR     ;Swap Shadow DPTR(Code) \n   MOV A, DPL    JNZ MOVELOOP \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 68 of 110 POWER SUPPLY MONITOR \nThe power supply monitor, once enabled, monitors the DV DD \nand AV DD supplies on the devices. It indicates when any of the \nsupply pins drop below one of four user-selectable voltage trip \npoints from 2.63 V to 4.63 V . For correct operation of the power \nsupply monitor function, AV DD must be equal to or greater than \n2.63 V . Monitor function is controlled via the PSMCON SFR. If \nenabled via the IEIP2 SFR, the monitor interrupts the core by using the PSMI bit in the PSMCON SFR. This bit is not cleared until the failing power supply returns above the trip point for at \nleast 250 ms.  \nThe monitor function allows the user to save working registers \nto avoid possible data loss due to the low supply condition, and \nalso ensures that normal code execution does not resume until a safe supply level is well established. The supply monitor is also protected against spurious glitches triggering the interrupt \ncircuit. \nThe 5 V part has an internal POR trip level of 4.63 V , which \nmeans that there are no usable DV\nDD PSM trip levels on the 5 V \npart. The 3 V part has a POR trip level of 2.63 V following a \nreset and initialization sequence, allowing all relevant PSM trip \npoints to be used. \nPSMCON—Power Supply Monitor Control Register SFR Address:  DFH \nPower-On Default: DEH \nBit Addressable:  No \n \nTable 43. PSMCON SFR Bit Designations \nBit No. Name Description \n7 CMPD DV DD Comparator Bit. \nThis read-only bit directly reflects the state of the DV DD comparator. \nRead 1 indicates that the DV DD supply is above its selected trip point. \nRead 0 indicates that the DV DD supply is below its selected trip point. \n6 CMPA AV DD Comparator Bit. \nThis read-only bit directly reflects the state of the AV DD comparator. \nRead 1 indicates that the AV DD supply is above its selected trip point. \nRead 0 indicates that the AV DD supply is below its selected trip point. \n5 PSMI Power Supply Monitor Interrupt Bit. \nSet high by the MicroConverter if either CMPA or CMPD is  low, indicating low analog or digital supply. The PSMI \nbit can be used to interrupt the processor. Once CM PD and/or CMPA returns (and remains) high, a 250 ms \ncounter is started. When this counter times out, the PSMI interrupt is cleared. PSMI can also be written by the \nuser. However, if either comparator output is low,  it is not possible for the user to clear PSMI. \n4, 3 TPD1, TPD0 DV DD Trip Point Selection Bits. \nA 5 V part has no valid PSM trip points. If the DV DD supply falls below the 4.63 V point, the device resets (POR). \nFor a 3 V part, all relevant PSM trip points are va lid. The 3 V POR trip point is 2.63 V (fixed). \nThese bits select the DV DD trip point voltage as follows: \nTPD1 TPD0 Selected DV DD Trip Point (V) \n0 0 4.63 \n0 1 3.08 \n1 0 2.93 \n1 1 2.63 \n2, 1 TPA1, TPA0 AV DD Trip Point Selection Bits. These bits select the AV DD trip point voltage as follows: \nTPA1 TPA0 Selected AV DD Trip Point (V) \n0 0 4.63 \n0 1 3.08 \n1 0 2.93 \n1 1 2.63 \n0 PSMEN Power Supply Monitor Enable Bit. \nSet to 1 by the user to enable the power supply monitor circuit. \nCleared to 0 by the user to disable the power supply monitor circuit. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 69 of 110 WATCHDOG TIMER \nThe watchdog timer generates a device reset or interrupt within a \nreasonable amount of time if the ADuC845 /ADuC847/ \nADuC848 enters an erroneous state, possibly due to a program-\nming error or electrical noise. The watchdog function can be \ndisabled by clearing the WDE (watchdog enable) bit in the \nwatchdog control (WDCON) SFR. When enabled, the watchdog circuit generates a system reset or interrupt (WDS) if the user program fails to set the WDE bit within a predetermined amount of time (see the PRE3…0 bits in Table 44). The watchdog timer is clocked from the 32 kHz external crystal connected between the XTAL1 and XTAL2 pins. The WDCOM SFR can be written only by user software if the double write sequence described in WDWR is initiated on every write access to the WDCON SFR.  \nWDCON—Watchdog Control Register \nSFR Address:  C0H \nPower-On Default: 10H \nBit Addressable:  Y es \n \nTable 44. WDCON SFR Bit Designations \nBit No. Name  Description \n7, 6, 5, 4 PRE3, PRE2, PRE1, PRE0 Watchdog Timer Prescale Bits. \nThe watchdog timeout period is given by the equation \ntWD = (2PRE × (29/ fXTAL)) (0 ≤ PRE ≤ 7; f XTAL = 32.768 kHz) \nPRE3 PRE2 PRE1 PRE0 Timeout Period (ms) Action \n0 0 0 0 15.6 Reset or interrupt \n0 0 0 1 31.2 Reset or interrupt \n0 0 1 0 62.5 Reset or interrupt \n0 0 1 1 125 Reset or interrupt \n0 1 0 0 250 Reset or interrupt \n0 1 0 1 500 Reset or interrupt \n0 1 1 0 1000 Reset or interrupt \n0 1 1 1 2000 Reset or interrupt \n1 0 0 0 0.0 Immediate reset \nPRE3–PRE0 > 1000b Reserved. Not a valid selection. \n3 WDIR Watchdog Interrupt Response Enable Bit. \nIf this bit is set by the user, the watchdog genera tes an interrupt response instead of a system reset \nwhen the watchdog timeout period expires. This in terrupt is not disabled by the CLR EA instruction, \nand it is also a fixed, high priori ty interrupt. If the watchdog time r is not being used to monitor the \nsystem, it can be used alternatively as a timer. Th e prescaler is used to set the timeout period in \nwhich an interrupt is generated. \n2 WDS Watchdog Status Bit. \nSet by the watchdog controller to indicate that a watchdog timeout has occurred. \nCleared by writing a 0 or by an external hardware  reset. It is not cleared by a watchdog reset. \n1 WDE Watchdog Enable Bit. \nSet by the user to enable the watchdog and clear its counters. If this bit is not set by the user within \nthe watchdog timeout period, the watchdog timer generates a reset or interrupt, depending on \nWDIR.  Cleared under the following conditions: user writes  0; watchdog reset (WDIR = 0); hardware reset; \nPSM interrupt. \n0 WDWR Watchdog Write Enable Bit. \nWriting data to the WDCON SFR involves a double instruction sequence. Global interrupts must first \nbe disabled. The WDWR bit is set with the very next instruction, a write to the WDCON SFR. For \nexample: \nCLR EA           ;Disable Interrupts while configuring to WDT \nSETB WDWR        ;Allow Write to WDCON MOV WDCON, #72H  ;Enable WDT for 2.0s timeout \nSETB EA          ;Enable Interrupts again (if required)   \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 70 of 110 TIME INTERVAL COUNTER (TIC) \nA TIC is provided on-chip for counting longer intervals than \nthe standard 8051-compatible timers can count. The TIC is \ncapable of timeout intervals ranging from 1/128 second to 255 hours. Also, this counter is clocked by the external 32.768 kHz \ncrystal rather than by the core clock, and it can remain active in \npower-down mode and time long power-down intervals. This has obvious applications for remote battery-powered sensors where regular widely spaced readings are required. Note that instructions to the TIC SFRs are also clocked at 32.768 kHz, so sufficient time must be allowed in user code for these instructions to execute.  \nSix SFRs are associated with the time interval counter, \nTIMECON being its control register. Depending on the configuration of the IT0 and IT1 bits in TIMECON, the selected \ntime counter register overflow clocks the interval counter. When this counter is equal to the time interval value loaded in the INTV AL SFR, the TII bit (TIMECON.2) is set and generates an interrupt, if enabled. If the device is in power-down mode, again with TIC interrupt enabled, the TII bit wakes up the \ndevice and resumes code execution by vectoring directly to the \nTIC interrupt service vector address at 0053H. The TIC-related SFRs are described in Table 45. Note also that the time based SFRs can be written initially with the current time; the TIC can then be controlled and accessed by user software. In effect, this \nfacilitates the implementation of a real-time clock. A basic block \ndiagram of the TIC is shown in Figure 47. Because the TIC is clocked directly from a 32 kHz external \ncrystal on the devices, instructions that access the TIC registers \nare also clocked at 32 kHz (not at the core frequency). The user must ensure that sufficient time is given for these instructions \nto execute. \n8-BIT\nPRESCALER\nHUNDREDTHS COUNTER\nHTHSEC\nSECOND COUNTER\nSEC\nMINUTE COUNTER\nMIN\nHOUR COUNTER\nHOURTIEN\nINTERVAL TIMEOUT\nTIME INTERVAL COUNTER INTERRUPT8-BIT\nINTERVAL COUNTER\nINTVAL SFRINTERVAL\nTIMEBASE\nSELECTION\nMUXTCEN 32.768kHz EXTERNAL CRYSTAL\nITS0 ITS1\nEQUAL?\n04741-047 \nFigure 47. TIC Simplified Block Diagram \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 71 of 110 TIMECON—TIC Control Register \nSFR Address:  A1H \nPower-On Default: 00H \nBit Addressable:  No \n   \n \n \nTable 45. TIMECON SFR Bit Designations \nBit No. Name Description \n7 ---- Not Implemented. Write Don’t Care. \n6 TFH Twenty-Four Hour Select Bit. \nSet by the user to enable the hour counter to count from 0 to 23. \nCleared by the user to enable the ho ur counter to count from 0 to 255. \n5, 4 ITS1, ITS0 Interval Timebase Selection Bits. \n  ITS1 ITS0 Interval Timebase \n0 0 1/128 Second \n0 1 Seconds \n1 0 Minutes \n1 1 Hours \n3 ST1 Single Time Interval Bit. \nSet by the user to generate a single interval timeout. If set, a timeout clears the TIEN bit. \nCleared by the user to allow the interval counter to be automatically reloaded and start counting again at each \ninterval timeout. \n2 TII TIC Interrupt Bit. \nSet when the 8-bit interval counter matches the value in the INTVAL SFR. \nCleared by user software. \n1 TIEN Time Interval Enable Bit. \nSet by the user to enable the 8-bit time interval counter. \nCleared by the user to disable the interval counter. \n0 TCEN Time Clock Enable Bit. \nSet by the user to enable the time clock to the time interval counters. \nCleared by the user to disable the clock to the time interv al counters and reset the time  interval SFRs to the last \nvalue written to them by the user. The time registers (HTH SEC, SEC, MIN, and HOUR) can be written while TCEN is \nlow. \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 72 of 110 INTV AL—User Timer Interval Select Register \nFunction: User code writes the required time interval to this register. When the 8-bit interval counter is equal to the time interval \nvalue loaded in the INTV AL SFR, the TII bit (TIMECON.2) is set and generates an interrupt, if enabled. \nSFR Address: A6H \nPower-On Default: 00H Bit Addressable: No Valid Value: 0 to 255 decimal \n \nHTHSEC—Hundredths of Seconds Time Register \nFunction: This register is incremented in 1/128-second intervals once TCEN in TIMECON is active. The HTHSEC SFR counts \nfrom 0 to 127 before rolling over to increment the SEC time register. \nSFR Address: A2H \nPower-On Default: 00H Bit Addressable: No Valid Value: 0 to 127 decimal \n \nSEC—Seconds Time Register \nFunction: This register is incremented in 1-second intervals once TCEN in TIMECON is active. The SEC SFR counts from 0 to 59 \nbefore rolling over to increment the MIN time register. \nSFR Address: A3H \nPower-On Default: 00H Bit Addressable: No \nValid Value: 0 to 59 decimal \n \nMIN—Minutes Time Register \nFunction This register is incremented in 1-minute intervals once TCEN in TIMECON is active. The MIN SFR counts from 0 to 59 \nbefore rolling over to increment the HOUR time register. \nSFR Address: A4H \nPower-On Default: 00H \nBit Addressable: No Valid Value: 0 to 59 decimal \n \nHOUR—Hours Time Register \nFunction: This register is incremented in 1-hour intervals once TCEN in TIMECON is active. The HOUR SFR counts from 0 to 23 \nbefore rolling over to 0. \nSFR Address: A5H \nPower-On Default: 00H Bit Addressable: No Valid Value: 0 to 23 decimal \n \nTo enable the TIC as a real-time clock, the HOUR, MIN, SEC, and HTHSEC registers can be loaded with the current time. Once the \nTCEN bit is high, the TIC starts. To use the TIC as a time interval counter, select the count interval—hundredths of seconds, s econds, \nminutes, and hours via the ITS0 and ITS1 bits in the TIMECON SFR. Load the count required into the INTV AL SFR.  \nNote that INTV AL is only an 8-bit register, so user software must take into account any intervals longer than are possible with  8 bits. \nTherefore, to count an interval of 20 seconds, use the following procedure: \nMOV TIMECON, #0D0H ;Enable 24Hour mode, count seconds, Clear TCEN. \nMOV INTVAL,  #14H ;Load INTVAL with required count interval...in this case 14H = 20  MOV TIMECON, #0D3H ;Start TIC counting and enable the 8bit INTVAL counter. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 73 of 110 8052-COMPATIBLE ON-CHIP PERIPHERALS \nThis section gives a brief overview of the various secondary \nperipheral circuits that are available to the user on-chip. These \nfeatures are mostly 8052-compatible (with a few additional \nfeatures) and are controlled via standard 8052 SFR bit definitions. \nParallel I/O \nThe ADuC845/ ADuC847/ ADuC848 use four input/output \nports to exchange data with external devices. In addition to \nperforming general-purpose I/O, some are capable of external memory operations, while others are multiplexed with alternate functions for the peripheral functions available on-chip. In \ngeneral, when a peripheral is enabled, that pin cannot be used \nas a general-purpose I/O pin.  \nPort 0 \nPort 0 is an 8-bit open-drain bidirectional I/O port that is \ndirectly controlled via the Port 0 SFR (80H). Port 0 is also the multiplexed low-order address and data bus during accesses to \nexternal data memory. \nFigure 48 shows a typical bit latch and I/O buffer for a Port 0 \npin. The bit latch (one bit in the SFRof the port) is represented \nas a Type D flip-flop, which clocks in a value from the internal \nbus in response to a write to latch signal from the CPU. The Q output of the flip-flop is placed on the internal bus in response to a read latch signal from the CPU. The level of the port pin itself is placed on the internal bus in response to a read pin signal \nfrom the CPU. Some instructions that read a port activate the \nread latch signal, and others activate the read pin signal. See  \nthe Read-Modify-Write Instructions section for details. \nCONTROL\nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCHDVDD ADDR/DATA\nP0.x\nPIN\n04741-048 \nFigure 48. Port 0 Bit Latch and I/O Buffer \nAs shown in Figure 48, the output drivers of Port 0 pins are \nswitchable to an internal ADDR and ADDR/DATA bus by an \ninternal control signal for use in external memory accesses. During external memory accesses, the P0 SFR has 1s written to it; therefore, all its bit latches become 1. When accessing external memory, the control signal in Figure 48 goes high, enabling \npush-pull operation of the output pin from the internal address \nor data bus (ADDR/DATA line). Therefore, no external pull-\nups are required on Port 0 for it to access external memory. In general-purpose I/O port mode, Port 0 pins that have 1s \nwritten to them via the Port 0 SFR are configured as open-drain \nand, therefore, float. In this state, Port 0 pins can be used as high impedance inputs. This is represented in Figure 48 by the NAND gate whose output remains high as long as the control signal is low, thereby disabling the top FET. External pull-up \nresistors are, therefore, required when Port 0 pins are used as \ngeneral-purpose outputs. Port 0 pins with 0s written to them drive a logic low output voltage (V\nOL) and are capable of sinking \n1.6 mA. \nPort 1 \nPort 1 is also an 8-bit port directly controlled via the P1 SFR \n(90H). Port 1 digital output capability is not supported on this \ndevice. Port 1 pins can be configured as digital inputs or analog inputs. By (power-on) default, these pins are configured as analog inputs, that is, 1 is written to the corresponding Port 1 register bit. To configure any of these pins as digital inputs, the \nuser should write a 0 to these port bits to configure the corre-\nsponding pin as a high impedance digital input. These pins also have various secondary functions aside from their analog input \ncapability, as described in Table 46. \nTable 46. Port 1 Alternate Functions \nPin No. Alternate Function \nP1.2 REFIN2+ (second reference input, postive)  \nP1.3 REFIN2− (second reference input, negative) \nP1.6 IEXC1 (200 μA excitation current source) \nP1.7 IEXC2 (200 μA excitation current source) \n \nREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nQ\nLATCH\nP1.x\nPINTO ADC\n04741-068 \nFigure 49. Port 1 Bit Latch and I/O Buffer \nPort 2 \nPort 2 is a bidirectional port with internal pull-up resistors \ndirectly controlled via the P2 SFR. Port 2 also emits the middle- \nand high-order address bytes during accesses to the 24-bit external data memory space. \nIn general-purpose I/O port mode, Port 2 pins that have 1s \nwritten to them are pulled high by the internal pull-ups as shown in Figure 50 and, in that state, can be used as inputs. As \ninputs, Port 2 pins pulled externally low source current because of the internal pull-up resistors. Port 2 pins with 0s written to them drive a logic low output voltage (V\nOL) and are capable of \nsinking 1.6 mA. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 74 of 110 P2.5 and P2.6 can also be used as PWM outputs, while P2.7 can \nact as an alternate PWM clock source. When selected as the \nPWM outputs, they overwrite anything written to P2.5 or P2.6. \nTable 47. Port 2 Alternate Functions \nPin No. Alternate Function \nP2.0 SCLOCK for SPI \nP2.1 MOSI for SPI \nP2.2 MISO for SPI \nP2.3  SS and T2 clock input \nP2.4 T2EX alternate control for T2 \nP2.5 PWM0 output \nP2.6 PWM1 output \nP2.7 PWMCLK \n \nCONTROLREAD\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nLATCHDVDDADDR\nP2.x\nPINDVDD\nINTERNAL\nPULL-UP\nQ\n04741-069 \nFigure 50. Port 2 Bit Latch and I/O Buffer \nPort 3 \nPort 3 is a bidirectional port with internal pull-ups directly \ncontrolled via the P3 SFR (B0H). Port 3 pins that have 1s \nwritten to them are pulled high by the internal pull-ups and, in that state, can be used as inputs. As inputs, Port 3 pins pulled externally low source current because of the internal pull-ups. \nPort 3 pins with 0s written to them drive a logic low output \nvoltage (V\nOL) and are capable of sinking 4 mA. Port 3 pins also \nhave various secondary functions as described in Table 48. The alternate functions of Port 3 pins can be activated only if the \ncorresponding bit latch in the P3 SFR contains a 1. Otherwise, \nthe port pin remains at 0. \nTable 48. Port 3 Alternate Functions \nPin No. Alternate Function \nP3.0 RxD (UART input pin, or serial data I/O in Mode 0) \nP3.1 TxD (UART output pin, or serial clock output in Mode 0) \nP3.2 INT0  (External Interrupt 0) \nP3.3 INT1  (External Interrupt 1) \nP3.4 T0 (Timer/Counter 0 external input) \nP3.5 T1 (Timer/Counter 1 external input) \nP3.6 WR (external data memory write strobe) \nP3.7 RD (external data memory read strobe) READ\nLATCH\nINTERNAL\nBUS\nWRITE\nTO LATCH\nREAD\nPIND\nCLQ\nLATCHDVDD\nP3.x\nPININTERNAL\nPULL-UPALTERNATE\nOUTPUT\nFUNCTION\nALTERNATE\nINPUT\nFUNCTIONQ\n04741-071\n \nFigure 51. Port 3 Bit Latch and I/O Buffer \nRead-Modify-Write Instructions \nSome 8051 instructions read the latch while others read the pin. \nThe instructions that read the latch rather than the pins are the \nones that read a value, possibly change it, and rewrite it to the latch. These are called read-modify-write instructions, which are listed in Table 49. When the destination operand is a port or a port bit, these instructions read the latch rather than the pin. \nTable 49. Read-Modify-Write Instructions \nInstruction Description \nANL  Logical AND, for example, ANL P1, A \nORL  Logical OR, for example, ORL P2, A \nXRL  Logical EX-OR, for example, XRL P3, A \nJBC  Jump if Bit = 1 and clear bit, for example, JBC \nP1.1, LABEL \nCPL  Complement bit, for example, CPL P3.0 \nINC  Increment, for example, INC P2 \nDEC  Decrement, for example, DEC P2 \nDJNZ  Decrement and jump if not zero, for example, DJNZ P3, LABEL \nMOV PX.Y, C1 Move Carry to Bit Y of Port X \nCLR PX.Y1  Clear Bit Y of Port X \nSETB PX.Y1  Set Bit Y of Port X \n___________________________________________ \n1 These instructions read the port byte (all 8 bits), modify the addressed bit, \nand write the new byte back to the latch. \n \nRead-modify-write instructions are directed to the latch rather \nthan to the pin to avoid a possible misinterpretation of the \nvoltage level of a pin. For example, a port pin might be used to drive the base of a transistor. When 1 is written to the bit, the transistor is turned on. If the CPU reads the same port bit at the \npin rather than the latch, it reads the base voltage of the \ntransistor and interprets it as Logic 0. Reading the latch rather \nthan the pin returns the correct value of 1. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 75 of 110 TIMERS/COUNTERS \nThe ADuC845/ ADuC847/ ADuC848 have three 16-bit timer/ \ncounters: Timer 0, Timer 1, and Timer 2. The timer/counter \nhardware is included on-chip to relieve the processor core of the overhead inherent in implementing timer/counter functionality \nin software. Each timer/counter consists of two 8-bit registers: \nTHx and TLx (x = 0, 1, or 2). All three can be configured to \noperate either as timers or as event counters. \nWhen functioning as a timer, the TLx register is incremented \nevery machine cycle. Thus, one can think of it as counting \nmachine cycles. Because a machine cycle on a single-cycle core consists of one core clock period, the maximum count rate is \nthe core clock frequency. \nWhen functioning as a counter, the TLx register is incremented \nby a 1-to-0 transition at its corresponding external input pin: T0, T1, or T2. When the samples show a high in one cycle and a \nlow in the next cycle, the count is incremented. Because it takes two machine cycles (two core clock periods) to recognize a  1-to-0 transition, the maximum count rate is half the core clock frequency. \nThere are no restrictions on the duty cycle of the external input \nsignal, but, to ensure that a given level is sampled at least once \nbefore it changes, it must be held for a minimum of one full \nmachine cycle. User configuration and control of all timer \noperating modes is achieved via three SFRs:  \nTMOD, TCON —Control and Configuration for Timers 0 and 1 \n \nT2CON —Control and Configuration for Timer 2. \nTMOD—Timer/Counter 0 and 1 Mode Register \nSFR Address:  89H \nPower-On Default: 00H \nBit Addressable:  No \n \nTable 50. TMOD SFR Bit Designation \nBit No. Name Description \n7 Gate Timer 1 Gating Control.  \nSet by software to enable Timer/Counter 1 only while the INT1  pin is high and the TR1 control is set.  \nCleared by software to enable Timer 1 whenever the TR1control bit is set. \n6 C/T Timer 1 Timer or Counter Select Bit.  \nSet by software to select counter operation (input from T1 pin). \nCleared by software to select the timer ope ration (input from internal system clock). \n5, 4 M1, M0 Timer 1 Mode Select Bits. \nM1 M0 Description \n0 0 TH1 operates as an 8-bit timer/coun ter. TL1 serves as 5-bit prescaler. \n0 1 16-Bit Timer/Counter. TH1 and TL1 are cascaded; there is no prescaler. \n1 0 8-Bit Autoreload Timer/Counter. TH1 holds a value th at is to be reloaded into TL1 each time it \noverflows. \n1 1 Timer/Counter 1 Stopped. \n3 Gate Timer 0 Gating Control. \nSet by software to enable Timer/Counter 0 only while the INT0  pin is high and the TR0 control bit is set. \nCleared by software to enable Timer 0 whenever the TR0 control bit is set. \n2 C/T Timer 0 Timer or Counter Select Bit. \nSet by software to the select counter operation (input from T0 pin). Cleared by software to the select timer operation (input from internal system clock). \n1, 0 M1, M0 Timer 0 Mode Select Bits. \nM1 M0 Description \n0 0 TH0 operates as an 8-bit timer/counter. TL0 serves as a 5-bit prescaler. \n0 1 16-Bit Timer/Counter. TH0 and TL0 are cascaded; there is no prescaler. \n1 0 8-Bit Autoreload Timer/Counter. TH0 holds a value th at is to be reloaded into TL0 each time it \noverflows. \n1 1 TL0 is an 8-bit timer/counter controlled by the standard Timer 0 control bits. \nTH0 is an 8-bit timer only, controlled by Timer 1 control bits. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 76 of 110 TCON—Timer/Counter 0 and 1 Control Register \nSFR Address:  88H \nPower-On Default: 00H \nBit Addressable:  Y es \n \nTable 51. TCON SFR Bit Designations \nBit No.  Name Description \n7 TF1 Timer 1 Overflow Flag.  \nSet by hardware on a Timer/Counter 1 overflow. \nCleared by hardware when the program counter (PC) vectors to the interrupt service routine. \n6  TR1 Timer 1 Run Control Bit. \nSet by the user to turn on Timer/Counter 1. Cleared by the user to turn off Timer/Counter 1. \n5 TF0 Timer 0 Overflow Flag. \nSet by hardware on a Timer/Counter 0 overflow. Cleared by hardware when the PC vectors to the interrupt service routine. \n4 TR0 Timer 0 Run Control Bit. \nSet by the user to turn on Timer/Counter 0.  Cleared by the user to turn off Timer/Counter 0. \n3 IE11 External Interrupt 1 (INT1 ) Flag.  \nSet by hardware by a falling edge or by a zero level applied to the external interrupt pin, INT1 , depending on the \nstate of Bit IT1. Cleared by hardware when the PC vectors to the interrupt service routine only if the interrupt was transition-\nactivated. If level-activated, the external requesting source controls the request flag rather than the on-chip \nhardware. \n2 IT11 External Interrupt 1 (IE1) Trigger Type.  \nSet by software to specify edge-sensitive  detection, that is, 1-to-0 transition. \nCleared by software to specify level-sensitive detection, that is, zero level. \n1 IE01 External Interrupt 0 (INT0 ) Flag.  \nSet by hardware by a falling edge or by a zero le vel being applied to the external interrupt pin, INT0 , depending on \nthe statue of Bit IT0. \nCleared by hardware when the PC vectors to the interrupt service routine only if the interrupt was transition-\nactivated. If level-activated, the external requesting source controls the request flag rather than the on-chip \nhardware. \n0 IT01 External Interrupt 0 (IE0) Trigger Type.  \nSet by software to specify edge-sensitive detection, that is, 1-to-0 transition.  \nCleared by software to specify level-sensitive detection, that is, zero level. \n \n1 These bits are not used to control Timer/Counters 0 and 1, but are used instead to control and monitor the external INT0  and INT1  interrupt pins. \n \nTimer/Counter 0 and 1 Data Registers \nEach timer consists of two 8-bit registers. These can be used as  independent registers or combined into a single 16-bit registe r, depending \non the timers’ mode configuration. \nTH0 and TL0 —Timer 0 high and low bytes. \nSFR Address:  8CH and 8AH, respectively. \nPower-On Default: 00H and 00H, respectively. \nTH1 and TL1 —Timer 1 high and low bytes. \nSFR Address:  8DH and 8BH, respectively. \nPower-On Default: 00H and 00H, respectively. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 77 of 110 Timer/Counter 0 and 1 Operating Modes \nThis section describes the operating modes for Timer/Counters \n0 and 1. Unless otherwise noted, these modes of operation are the same for both Timer 0 and Timer 1. \nMode 0 (13-Bit Timer/Counter) \nMode 0 configures an 8-bit timer/counter. Figure 52 shows \nMode 0 operation. Note that the divide-by-12 prescaler is not \npresent on the single-cycle core. \n04741-049CORE\nCLK1\nCONTROLP3.4/T0\nGATE\nP3.2/INT0TR0TF0TL0\n(5 BITS)TH0\n(8 BITS)INTERRUPTC/T = 0\nC/T = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 52. Timer/Counter 0, Mode 0 \nIn this mode, the timer register is configured as a 13-bit register. \nAs the count rolls over from all 1s to all 0s, it sets the timer \noverflow flag, TF0. TF0 can then be used to request an interrupt. The counted input is enabled to the timer when TR0 \n= 1 and either Gate = 0 or INT0\n = 1. Setting Gate = 1 allows the \ntimer to be controlled by external input INT0  to facilitate pulse-\nwidth measurements. TR0 is a control bit in the special function \nregister TCON; Gate is in TMOD. The 13-bit register consists of all 8 bits of TH0 and the lower 5 bits of TL0. The upper 3 bits of TL0 are indeterminate and should be ignored. Setting the run flag (TR0) does not clear the registers. \nMode 1 (16-Bit Timer/Counter) \nMode 1 is the same as Mode 0 except that the Mode 1 timer register runs with all 16 bits. Mode 1 is shown in Figure 53. \nCORE\nCLK1\nCONTROLP3.4/T0\nGATETR0TF0TL0\n(8 BITS)TH0\n(8 BITS)INTERRUPT\n04741-0500 P3.2/INTC/T = 0\nC/T = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 53. Timer/Counter 0, Mode 1 \n Mode 2 (8-Bit Timer/Counter with Autoreload) \nMode 2 configures the timer register as an 8-bit counter (TL0) \nwith automatic reload as shown in Figure 54. Overflow from TL0 \nnot only sets TF0, but also reloads TL0 with the contents of TH0, \nwhich is preset by software. The reload leaves TH0 unchanged. \nCONTROLTF0TL0\n(8 BITS)INTERRUPT\nRELOAD\nTH0\n(8 BITS)CORE\nCLK1\nP3.4/T0\nGATETR0\n0\n04741-051P3.2/INTC/T = 0\nC/T = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 54. Timer/Counter 0, Mode 2 \nMode 3 (Two 8-Bit Timer/Counters) \nMode 3 has different effects on Timer 0 and Timer 1. Timer 1 in \nMode 3 simply holds its count. The effect is the same as setting \nTR1 = 0. Timer 0 in Mode 3 establishes TL0 and TH0 as two separate counters. This configuration is shown in Figure 55. TL0 uses the Timer 0 Control Bits C/ T\n, Gate, TR0, INT0 , and \nTF0. TH0 is locked into a timer function (counting machine \ncycles) and takes over the use of TR1 and TF1 from Timer 1. \nTherefore, TH0 then controls the Timer 1 interrupt. Mode 3 is provided for applications requiring an extra 8-bit timer or \ncounter.  \nWhen Timer 0 is in Mode 3, Timer 1 can be turned on and off \nby switching it out of and into its own Mode 3, or it can still be \nused by the serial interface as a baud rate generator. In fact, it can be used in any application not requiring an interrupt from \nTimer 1 itself. \nCONTROLCORE\nCLK/12\nTF0TL0\n(8 BITS)INTERRUPTCORE\nCLK1\nP3.4/T0\nGATETR0\nTF1TH0\n(8 BITS)INTERRUPTCORE\nCLK/12\nTR1\n04741-0520 P3.2/INTC/T = 0\nC/T = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 55. Timer/Counter 0, Mode 3 \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 78 of 110 T2CON—Timer/Counter 2 Control Register \nSFR Address:  C8H \nPower-On Default: 00H \nBit Addressable:  Y es \n \nTable 52. T2CON SFR Bit Designations \nBit No. Name Description \n7 TF2 Timer 2 Overflow Flag. \nSet by hardware on a Timer 2 overflow. TF2 cannot be set when either RCLK = 1 or TCLK = 1. \nCleared by user software. \n6 EXF2 Timer 2 External Flag. \nSet by hardware when either a capture or reload is ca used by a negative transition on T2EX and EXEN2 = 1. \nCleared by user software. \n5 RCLK Receive Clock Enable Bit. \nSet by the user to enable the serial port to use Timer 2 overflow pulses for its receive clock in serial port Modes 1 and 3. Cleared by the user to enable Timer 1 overflow to be used for the receive clock. \n4 TCLK Transmit Clock Enable Bit. \nSet by the user to enable the se rial port to use Timer 2 overflow pulses for its transmit clock in serial port Modes 1 and 3. \nCleared by the user to enable Timer 1 over flow to be used for the transmit clock. \n3  EXEN2 Timer 2 External Enable Flag. \nSet by the user to enable a capture or reload to occur as a re sult of a negative transition on T2EX if Timer 2 is not being \nused to clock the serial port. \nCleared by the user for Timer 2 to ignore events at T2EX. \n2  TR2 Timer 2 Start/Stop Control Bit. \nSet by the user to start Timer 2. \nCleared by the user to stop Timer 2. \n1  CNT2 Timer 2 Timer or Counter Function Select Bit. \nSet by the user to select the counter function (input from external T2 pin). Cleared by the user to select the timer function (input from on-chip core clock). \n0  CAP2 Timer 2 Capture/Reload Select Bit. \nSet by the user to enable captures on ne gative transitions at T2EX if EXEN2 = 1. \nCleared by the user to enable autoreloads with Timer 2 ov erflows or negative transitions at T2EX when EXEN2 = 1. \nWhen either RCLK = 1 or TCLK = 1, this bit is ignored and the timer is forced to autoreload on Timer 2 overflow. \n \nTimer/Counter 2 Data Registers \nTimer/Counter 2 also has two pairs of 8-bit data registers \nassociated with it. These are used as both timer data registers \nand as timer capture/reload registers. \nTH2 and TL2 —Timer 2 data high byte and low byte. \nSFR Address:   CDH and CCH respectively. \nPower-On Default: 00H and 00H, respectively. \nRCAP2H and RCAP2L —Timer 2 capture/reload byte and low  \n                                         byte. \nSFR Address:   CBH and CAH, respectively. \nPower-On Default: 00H and 00H, respectively. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 79 of 110 Timer/Counter 2 Operating Modes \nThe following sections describe the operating modes for \nTimer/Counter 2. The operating modes are selected by bits in the T2CON SFR as shown in Table 53. \nTable 53. T2CON Operating Modes \nRCLK (or) TCLK CAP2 TR2 Mode \n0 0 1 16-Bit Autoreload \n0 1 1 16-Bit Capture \n1 X 1 Baud Rate \nX X 0 Off \n \n16-Bit Autoreload Mode \nAutoreload mode has two options that are selected by bit \nEXEN2 in T2CON. If EXEN2 = 0, when Timer 2 rolls over, it \nnot only sets TF2 but also causes the Timer 2 registers to be reloaded with the 16-bit value in registers RCAP2L and \nRCAP2H, which are preset by software. If EXEN2 = 1, Timer 2 \nstill performs the above, but with the added feature that a 1-to-0 transition at external input T2EX also triggers the 16-bit reload \nand sets EXF2. Autoreload mode is shown in Figure 56. 16-Bit Capture Mode \nCapture mode has two options that are selected by Bit EXEN2 \nin T2CON. If EXEN2 = 0, Timer 2 is a 16-bit timer or counter \nthat, upon overflowing, sets bit TF2, the Timer 2 overflow bit, \nwhich can be used to generate an interrupt. If EXEN2 = 1, Timer 2 still performs the above, but a l-to-0 transition on external input T2EX causes the current value in the Timer 2 registers, TL2 and TH2, to be captured into Registers RCAP2L \nand RCAP2H, respectively. In addition, the transition at T2EX \ncauses Bit EXF2 in T2CON to be set, and EXF2, like TF2, can generate an interrupt. Capture mode is shown in Figure 57. The baud rate generator mode is selected by RCLK = 1 and/or \nTCLK = 1. \nIn either case, if Timer 2 is used to generate the baud rate, the \nTF2 interrupt flag does not occur. Therefore, Timer 2 interrupts \ndo not occur, so they do not have to be disabled. In this mode, the EXF2 flag can, however, still cause interrupts, which can be \nused as a third external interrupt. Baud rate generation is \ndescribed as part of the UART serial port operation in the \nfollowing section. \n \nCORE\nCLK 1\nT2\nPIN\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nTF2\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2H\n*\n04741-053C/T2 = 0\nC/T2 = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 56. Timer/Counter 2, 16-Bit Autoreload Mode \n \nTF2CORE\nCLK1\nT2\nPIN\nTR2CONTROLTL2\n(8 BITS)TH2\n(8 BITS)\nCAPTURE\nEXF2TIMER\nINTERRUPT\nEXEN2CONTROLTRANSITION\nDETECTOR\nT2EX\nPINRCAP2L RCAP2H\n*\n04741-054C/T2 = 0\nC/T2 = 1\nNOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 57. Timer/Counter 2, 16-Bit Capture Mode \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 80 of 110 UART SERIAL INTERFACE \nThe serial port is full duplex, meaning that it can transmit and \nreceive simultaneously. It is also receive buffered, meaning that \nit can begin receiving a second byte before a previously received byte is read from the receive register. However, if the first byte is \nstill not read by the time reception of the second byte is complete, \nthe first byte is lost. The physical interface to the serial data network is via Pins RxD(P3.0) and TxD(P3.1), while the SFR interface to the UART comprises SBUF and SCON, as described \nin this section. \n SBUF SFR \nBoth the serial port receive and transmit registers are accessed \nthrough the SBUF SFR (SFR address = 99H). Writing to SBUF \nloads the transmit register, and reading SBUF accesses a \nphysically separate receive register. \nSCON UART—Serial Port Control Register \nSFR Address:  98H \nPower-On Default: 00H \nBit Addressable:  Y es\nTable 54. SCON SFR Bit Designations \nBit No. Name Description \n7, 6 SM0, SM1 UART Serial Mode Select Bits. These bits select the serial port operating mode as follows: \nSM0 SM1 Selected Operating Mode. \n0 0 Mode 0: Shift register, fixed baud rate (Core_Clk/2). \n0 1 Mode 1: 8-bit UART, variable baud rate. \n1 0 Mode 2: 9-bit UART, fixed baud rate (Core_Clk/32) or (Core_Clk/16). \n1 1 Mode 3: 9-bit UART, variable baud rate. \n5 SM2 Multiprocessor Communication Enable Bit. \nEnables multiprocessor communication in Modes 2 and 3.  \nIn Mode 0, SM2 should be cleared. \nIn Mode 1, if SM2 is set, RI is not activated if a valid stop bit was not received. If SM2 is cl eared, RI is set as soon as \nthe byte of data is received.  \nIn Modes 2 or 3, if SM2 is set, RI is not activa ted if the received ninth data bit in RB8 is 0.  \nIf SM2 is cleared, RI is set as soon  as the byte of data is received. \n4 REN Serial Port Receive Enable Bit. \nSet by user software to enable serial port reception. \n3 TB8 Serial Port Transmit (Bit 9). \nThe data loaded into TB8 is the ninth data bit transmitted in Modes 2 and 3. Cleared by user software to disable \nserial port reception. \n2 RB8 Serial Port Receiver Bit 9.  \nThe ninth data bit received in Modes 2 and 3 is latched in to RB8. For Mode 1, the stop bit is latched into RB8. \n1 TI Serial Port Transmit Interrupt Flag. \nSet by hardware at the end of the eighth bit in Mode 0, or at the beginning of the stop bit in Modes 1, 2, and 3. \nTI must be cleared by user software. \n0 RI Serial Port Receive Interrupt Flag. \nSet by hardware at the end of the eighth bit in Mode 0,  or halfway through the stop bit in Modes 1, 2, and 3.  \nRI must be cleared by software. \n \nSBUF—UART Serial Port Data Register \nSFR Address:  99H \nPower-On Default: 00H \nBit Addressable:  No\nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 81 of 110 Mode 0 (8-Bit Shift Register Mode)  \nMode 0 is selected by clearing both the SM0 and SM1 bits in \nthe SFR SCON. Serial data enters and exits through RxD. TxD \noutputs the shift clock. Eight data bits are transmitted or received. Transmission is initiated by any instruction that writes to SBUF. The data is shifted out of the RxD line. The 8 bits are \ntransmitted with the least significant bit (LSB) first. \nReception is initiated when the receive enable bit (REN) is 1 \nand the receive interrupt bit (RI) is 0. When RI is cleared, the \ndata is clocked into the RxD line, and the clock pulses are \noutput from the TxD line as shown in Figure 58. \nRxD\n(DATA OUT)\nTxD\n(SHIFT CLOCK)DATA BIT 0 DATA BIT 1 DATA BIT 6 DATA BIT 7\n04741-055 \nFigure 58. 8-Bit Shift Register Mode \nMode 1 (8-Bit UART, Variable Baud Rate) \nMode 1 is selected by clearing SM0 and setting SM1. Each data \nbyte (LSB first) is preceded by a start bit (0) and followed by a \nstop bit (1). Therefore, 10 bits are transmitted on TxD or are received on RxD. The baud rate is set by the Timer 1 or Timer 2 overflow rate, or a combination of the two (one for transmission and the other for reception). \nTransmission is initiated by writing to SBUF. The write to SBUF \nsignal also loads a 1 (stop bit) into the 9th bit position of the \ntransmit shift register. The data is output bit-by-bit until the \nstop bit appears on TxD and the transmit interrupt flag (TI) is \nautomatically set as shown in Figure 59. \nTxD\nTI\n(SCON.1)START\nBITD0 D1 D2 D3 D4 D5 D6 D7STOP BIT\nSET INTERRUPT\nI.E., READY FOR MORE DATA\n04741-056 \nFigure 59. 8-Bit Variable Baud Rate \nReception is initiated when a 1-to-0 transition is detected on \nRxD. Assuming that a valid start bit is detected, character \nreception continues. The start bit is skipped and the 8 data bits \nare clocked into the serial port shift register. When all 8 bits \nhave been clocked in, the following events occur: \n\uf0b7 The 8 bits in the receive shift register are latched into SBUF. \n\uf0b7 The 9th bit (stop bit) is clocked into RB8 in SCON. \n\uf0b7 The receiver interrupt flag (RI) is set. \n All of the following conditions must be met at the time the final \nshift pulse is generated: \n\uf0b7 RI = 0 \n\uf0b7 Either SM2 = 0 or SM2 = 1 \n\uf0b7 Received stop bit = 1 \nIf any of these conditions is not met, the received frame is \nirretrievably lost, and RI is not set.  \nMode 2 (9-Bit UART with Fixed Baud Rate) \nMode 2 is selected by setting SM0 and clearing SM1. In this \nmode, the UART operates in 9-bit mode with a fixed baud rate. \nThe baud rate is fixed at Core_Clk/64 by default, although by setting the SMOD bit in PCON, the frequency can be doubled \nto Core_Clk/32. Eleven bits are transmitted or received: a start \nbit (0), 8 data bits, a programmable 9th bit, and a stop bit (1). The 9th bit is most often used as a parity bit, although it can be \nused for anything, including a ninth data bit if required. \nTo transmit, the 8 data bits must be written into SBUF. The \nninth bit must be written to TB8 in SCON. When transmission \nis initiated, the 8 data bits (from SBUF) are loaded into the transmit shift register (LSB first). The contents of TB8 are \nloaded into the 9th bit position of the transmit shift register. \nThe transmission starts at the next valid baud rate clock. The  \nTI flag is set as soon as the stop bit appears on TxD. \nReception for Mode 2 is similar to that of Mode 1. The 8 data \nbytes are input at RxD (LSB first) and loaded onto the receive \nshift register. When all 8 bits have been clocked in, the \nfollowing events occur: \n\uf0b7 The 8 bits in the receive shift register are latched into SBUF. \n\uf0b7 The 9th data bit is latched into RB8 in SCON. \n\uf0b7 The receiver interrupt flag (RI) is set. \nAll of the following conditions must be met at the time the final \nshift pulse is generated: \n\uf0b7 RI = 0 \n\uf0b7 Either SM2 = 0 or SM2 = 1 \n\uf0b7 Received stop bit = 1 \nIf any of these conditions is not met, the received frame is \nirretrievably lost, and RI is not set. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 82 of 109 Mode 3 (9-Bit UART with Variable Baud Rate) \nMode 3 is selected by setting both SM0 and SM1. In this mode, \nthe 8051 UART serial port operates in 9-bit mode with a variable \nbaud rate determined by either Timer 1 or Timer 2. The opera-\ntion of the 9-bit UART is the same as for Mode 2, but the baud rate can be varied as for Mode 1. \nIn all four modes, transmission is initiated by any instruction \nthat uses SBUF as a destination register. Reception is initiated in \nMode 0 when RI = 0 and REN = 1. Reception is initiated in the \nother modes by the incoming start bit if REN = 1.  \nUART Serial Port Baud Rate Generation \nMode 0 Baud Rate Generation \nThe baud rate in Mode 0 is fixed: \nMode 0 Baud Rate  = \uf0f7\n\uf0f8\uf0f6\uf0e7\n\uf0e8\uf0e6\n12Frequency Clock Core \nMode 2 Baud Rate Generation \nThe baud rate in Mode 2 depends on the value of the SMOD bit \nin the PCON SFR. If SMOD = 0, the baud rate is 1/32 of the \ncore clock. If SMOD = 1, the baud rate is 1/16 of the core clock: \nMode 2 Baud Rate  = 322SMOD\n × Core Clock Frequency  \nModes 1 and 3 Baud Rate Generation \nThe baud rates in Modes 1 and 3 are determined by the overflow \nrate in Timer 1 or Timer 2, or in both (one for transmit and the \nother for receive). \nTimer 1 Generated Baud Rates \nWhen Timer 1 is used as the baud rate generator, the baud rates \nin Modes 1 and 3 are determined by the Timer 1 overflow rate \nand the value of SMOD as follows: \nModes 1 and 3 Baud Rate = 322SMOD\n × Timer 1 Overflow Rate The Timer 1 interrupt should be disabled in this application. \nThe timer itself can be configured for either timer or counter operation, and in any of its three running modes. In the most typical application, it is configured for timer operation in \nautoreload mode (high nibble of TMOD = 0010 binary). In that \ncase, the baud rate is given by the formula \nModes 1 and 3 Baud Rate = \n) 256 ( 322\nTH1Frequenc y Clock CoreSMOD\n\uf02d\uf0b4  \nTimer 2 Generated Baud Rates \nBaud rates can also be generated by using Timer 2. Using Timer 2 \nis similar to using Timer 1 in that the timer must overflow 16 \ntimes before a bit is transmitted or received. Because Timer 2 \nhas a 16-bit autoreload mode, a wider range of baud rates is \npossible.  \nModes 1 and 3 Baud Rate  = \n161 × Timer 2 Overflow Rate  \nTherefore, when Timer 2 is used to generate baud rates, the \ntimer increments every two clock cycles rather than every core \nmachine cycle as before. It increments six times faster than Timer 1, and, therefore, baud rates six times faster are possible. \nBecause Timer 2 has 16-bit autoreload capability, very low baud \nrates are still possible.  \nTimer 2 is selected as the baud rate generator by setting the \nTCLK and/or RCLK in T2CON. The baud rates for transmit \nand receive can be simultaneously different. Setting RCLK and/or TCLK puts Timer 2 into its baud rate generator mode as \nshown in Figure 60. \nIn this case, the baud rate is given by the formula \nModes 1 and 3 Baud Rate  = \n\uf028\uf029\uf05b\uf05d\uf028\uf029 L RCAP H RCAPFrequency Clock Core\n2 : 2 65536 16\uf02d \uf0b4 \nCORE\nCLK1\nT2\nPIN\nTR2CONTROL\nTL2\n(8 BITS)TH2\n(8 BITS)\nRELOAD\nEXEN2CONTROLT2EX\nPIN\nTRANSITION\nDETECTOREXF 2TIMER 2\nINTERRUPTRCAP2L RCAP2HTIMER 2\nOVERFLOW2\n16\n16RCLK\nTCLKRX\nCLOCK\nTX\nCLOCK0\n01\n11 0\nSMODTIMER 1\nOVERFLOW\nC/T2 = 0\nC/T2 = 1\n04741-057NOTES\n1.THE CORE CLOCK IS THE OUTPUT OF THE PLL (SEE THE ON-CHIP PLL SECTION) \nFigure 60. Timer 2, UART Baud Rates \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 83 of 109 Timer 3 Generated Baud Rates  \nThe high integer dividers in a UART block mean that high \nspeed baud rates are not always possible. Also, generating baud \nrates requires the exclusive use of a timer, rendering it unusable \nfor other applications when the UART is required. To address this problem, the ADuC845 /ADuC847/ ADuC848  have a \ndedicated baud rate timer (Timer 3) specifically for generating highly accurate baud rates. Timer 3 can be used instead of \nTimer 1 or Timer 2 for generating very accurate high speed \nUART baud rates including 115200 and 230400. Timer 3 also allows a much wider range of baud rates to be obtained. In fact, every desired bit rate from 12 bps to 393216 bps can be generated to within an error of ±0.8%. Timer 3 also frees up the other \nthree timers, allowing them to be used for different applications. A \nblock diagram of Timer 3 is shown in Figure 61. \n\uf0b8(1 + T3FD/64)\nT3 Rx/Tx\nCLOCKCORE\nCLK\nT3ENRx CLOCK\nTx CLOCKTIMER 1/TIMER 2\nRx CLOCKFRACTIONAL\nDIVIDER\n0\n01\n1TIMER 1/TIMER 2\nTx CLOCK\n\uf0b816\uf0b82DIV\n04741-058 \nFigure 61. Timer 3, UART Baud Rate \nTwo SFRs (T3CON and T3FD) are used to control Timer 3. \nT3CON is the baud rate control SFR, allowing Timer 3 to be \nused to set up the UART baud rate, and to set up the binary \ndivider (DIV). The appropriate value to write to the DIV2-1-0 bits can be \ncalculated using the following formula where f CORE is defined in \nPLLCON SFR. Note that the DIV value must be rounded down. \nDIV = ) 2 ( log16log\uf0f7\uf0f7\n\uf0f8\uf0f6\n\uf0e7\uf0e7\n\uf0e8\uf0e6\n\uf0b4 Rate BaudFrequency Clock Core\n \nT3FD is the fractional divider ratio required to achieve the \nrequired baud rate. The appropriate value for T3FD can be \ncalculated with the following formula: \nT3FD  = \nRate BaudFrequency Clock Core\nDIV\uf0b4\uf0b4\n\uf02d122− 64 \nNote that T3FD should be rounded to the nearest integer. Once \nthe values for DIV and T3FD are calculated, the actual baud \nrate can be calculated with the following formula:  \nActual Baud Rate  = \n) 64 ( 22\n1\uf02b \uf0b4\uf0b4\n\uf02dT3FDFrequency Clock Core\nDIV \nFor example, to get a baud rate of 9600 while operating at a core \nclock frequency of 1.5725 MHz, that is, CD = 3,  \nDIV  = log(1572500/(16 × 9600))/log2 = 3.35 = 3 \nNote that the DIV result is rounded down. \nT3FD  = (2 × 1572500)/(23−1 × 9600) − 64 = 18 = 12H \nTherefore, the actual baud rate is 9588 bps, which gives an error of 0.12%. \nThe T3CON and T3FD registers are used to control Timer 3. \nT3CON – Timer 3 Control Register \nSFR Address:  9EH \nPower-On Default: 00H \nBit Addressable:  No  \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 84 of 109 Table 55. T3CON SFR Bit Designations \nBit No.  Name Description \n7 T3BAUDEN T3UARTBAUD Enable. \nSet to enable Timer 3 to generate the baud rate. When set, PCON.7, T2CON.4, and T2CON.5 are \nignored. Cleared to let the baud rate be generated as per a standard 8052. \n6  Not Implemented. Write Don’t Care. \n5  Not Implemented. Write Don’t Care. \n4  Not Implemented. Write Don’t Care. \n3  Not Implemented. Write Don’t Care. \n2, 1, 0 DIV2, DIV1, DIV0 Binary Divider \n  DIV2 DIV1 DIV0  \n  0 0 0 Binary Divider 0. See Table 57. \n  0 0 1 Binary Divider 1. See Table 57. \n  0 1 0 Binary Divider 2. See Table 57. \n  0 1 1 Binary Divider 3. See Table 57. \n  1 0 0 Binary Divider 4. See Table 57. \n  1 0 1 Binary Divider 5. See Table 57. \n  1 1 0 Binary Divider 6. See Table 57. \nT3FD—Timer 3 Fractional Divider Register  \nSee Table 57 for values. \nSFR Address:  9DH \nPower-On Default: 00H \nBit Addressable:  No \n \nTable 56. T3FD SFR Bit Designations \nBit No. Name Description \n7 ---- Not Implemented. Write Don’t Care. \n6 ---- Not Implemented. Write Don’t Care. \n5 T3FD.5 Timer 3 Fractional Divider Bit 5. \n4 T3FD.4 Timer 3 Fractional Divider Bit 4. \n3 T3FD.3 Timer 3 Fractional Divider Bit 3. \n2 T3FD.2 Timer 3 Fractional Divider Bit 2. \n1 T3FD.1 Timer 3 Fractional Divider Bit 1. \n0 T3FD.0 Timer 3 Fractional Divider Bit 0. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 85 of 109 Table 57. Common Baud Rates Using Timer 3 with a 12.58 MHz PLL Clock \nIdeal Baud CD DIV T3CON T3FD % Error \n230400 0 1 81H 2DH 0.18 \n      \n115200 0 2 82H 2DH 0.18 \n115200 1 1 81H 2DH 0.18 \n      \n57600 0 3 83H 2DH 0.18 \n57600 1 2 82H 2DH 0.18 \n57600 2 1 81H 2DH 0.18 \n      \n38400 0 4 84H 12H 0.12 \n38400 1 3 83H 12H 0.12 \n38400 2 2 82H 12H 0.12 \n38400 3 1 81H 12H 0.12 \n      \n19200 0 5 85H 12H 0.12 \n19200 1 4 84H 12H 0.12 \n19200 2 3 83H 12H 0.12 \n19200 3 2 82H 12H 0.12 \n19200 4 1 81H 12H 0.12 \n      \n9600 0 6 86H 12H 0.12 \n9600 1 5 85H 12H 0.12 \n9600 2 4 84H 12H 0.12 \n9600 3 3 83H 12H 0.12 \n9600 4 2 82H 12H 0.12 \n9600 5 1 81H 12H 0.12 \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 86 of 109 INTERRUPT SYSTEM \nThe ADuC845/ ADuC847/ ADuC848 provide nine interrupt sources with two priority levels. The control and configuration of the \ninterrupt system is carried out through three interrupt-related SFRs: \nIE Interrupt Enable Register \nIP Interrupt Priority Register \nIEIP2 Secondary Interrupt Enable Register \n \nIE—Interrupt Enable Register \nSFR Address:  A8H \nPower-On Default: 00H \nBit Addressable:  Y es \n \nTable 58. IE SFR Bit Designations \nBit No. Name Description \n7 EA Set by the user to enable all interrupt sources.  \nCleared by the user to disable all interrupt sources. \n6 EADC Set by the user to enable the ADC interrupt. \nCleared by the user to disable the ADC interrupt. \n5 ET2 Set by the user to enable the Timer 2 interrupt. \nCleared by the user to disable the Timer 2 interrupt. \n4 ES Set by the user to enable the UART serial port interrupt. \nCleared by the user to disable the UART serial port interrupt. \n3 ET1 Set by the user to enable the Timer 1 interrupt. \nCleared by the user to disable the Timer 1 interrupt. \n2 EX1 Set by the user to enable External Interrupt 1 (INT0 ). \nCleared by the user to disable External Interrupt 1 (INT0 ). \n1 ET0 Set by the user to enable the Timer 0 interrupt. \nCleared by the user to disable the Timer 0 interrupt. \n0 EX0 Set by the user to enable External Interrupt 0 (INT0 ). \nCleared by the user to disable External Interrupt 0 (INT0 ). \n \nIP—Interrupt Priority Register \nSFR Address:  B8H \nPower-On Default: 00H \nBit Addressable:  Y es \nTable 59. IP SFR Bit Designations \nBit No. Name Description \n7 ----- Not Implemented. Write Don’t Care. \n6 PADC ADC Interrupt Priority (1 = High; 0 = Low). \n5 PT2 Timer 2 Interrupt Priority (1 = High; 0 = Low). \n4 PS UART Serial Port Interrupt Priority (1 = High; 0 = Low). \n3 PT1 Timer 1 Interrupt Priority (1 = High; 0 = Low). \n2 PX1 INT0  (External Interrupt 1) priority (1 = High; 0 = Low). \n1 PT0 Timer 0 Interrupt Priority (1 = High; 0 = Low). \n0 PX0 INT0  (External Interrupt 0) Priority (1 = High; 0 = Low). \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 87 of 109 IEIP2—Secondary Interrupt Enable Register \nSFR Address:  A9H \nPower-On Default: A0H \nBit Addressable:  No \n \nTable 60. IEIP2 Bit Designations \nBit No. Name Description \n7 ---- Not Implemented. Write Don’t Care. \n6 PTI Time Interval Counter Interrupt Priority Setting (1 = High, 0 = Low). \n5 PPSM Power Supply Monitor Interrupt Priority Setting (1 = High, 0 = Low). \n4 PSI SPI/I2C Interrupt Priority Setting (1 = High, 0 = Low).  \n3 ---- This bit must contain 0. \n2 ETI Set by the user to enable th e time interval counter interrupt. \nCleared by the user to disable the time interval counter interrupt. \n1 EPSMI Set by the user to enable the power supply monitor interrupt. \nCleared by the user to disable the power supply monitor interrupt. \n0 ESI Set by the user to enable the SPI/I2C serial port interrupt. \nCleared by the user to disable the SPI/I2C serial port interrupt. \n \nINTERRUPT PRIORITY \nThe interrupt enable registers are written by the user to enable \nindividual interrupt sources; the interrupt priority registers \nallow the user to select one of two priority levels for each interrupt. A high priority interrupt can interrupt the service \nroutine of a low priority interrupt, and if two interrupts of \ndifferent priorities occur at the same time, the higher level interrupt is serviced first. An interrupt cannot be interrupted by another interrupt of the same priority level. If two interrupts of the same priority level occur simultaneously, the polling sequence, as shown in Table 61, is observed. \nTable 61. Priority within Interrupt Level \n INTERRUPT VECTORS \nWhen an interrupt occurs, the program counter is pushed onto \nthe stack, and the corresponding interrupt vector address is \nloaded into the program counter. The interrupt vector addresses \nare shown in Table 62. \nTable 62. Interrupt Vector Addresses \nSource Vector Address \nIE0 0003H \nTF0  000BH \nIE1 0013H \nTF1 001BH \nRI + TI 0023H \nTF2 + EXF2 002BH \nRDY0/RDY1 ( ADuC845 only) 0033H \nISPI/I2CI 003BH \nPSMI 0043H \nTII 0053H \nWDS 005BH \n Source Priority Description \nPSMI 1 (Highest) Power Supply Monitor Interrupt \nWDS 2 Watchdog Timer Interrupt \nIE0 2 External Interrupt 0 \nRDY0/RDY1 3 ADC Interrupt \nTF0 4 Timer/Counter 0 Interrupt \nIE1 5 External Interrupt 1 \nTF1 6 Timer/Counter 1 Interrupt \nISPI/I2CI 7 SPI/I2C Interrupt \nRI/TI 8 UART Serial Port Interrupt \nTF2/EXF2 9 Timer/Counter 2 Interrupt \nTII 11 (Lowest) Timer Interval Counter Interrupt \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 88 of 109 HARDWARE DESIGN CONSIDERATIONS \nThis section outlines some of the key hardware design \nconsiderations that must be addressed when integrating the \nADuC845/ ADuC847/ ADuC848  into any hardware system. \nEXTERNAL MEMORY INTERFACE \nIn addition to their internal program and data memories, the \ndevices can access up to 16 Mbytes of external data memory \n(SRAM). No external program memory access is available. \nTo begin executing code, tie the EA (external access) pin high. \nWhen EA is high (pulled up to V DD—see Figure 70), user \nprogram execution starts at Address 0 in the internal 62-kbyte \nFlash/EE code space. When executing from internal code space, accesses to the program space above F7FFH (62 kbytes) are read as NOP instructions.  \nNote that a second very important function of the EA\n pin is \ndescribed in the Single-Pin Emulation Mode section under the \nOther Hardware Considerations section. \nFigure 62 shows a hardware configuration for accessing up to \n64 kbytes of external data memory. This interface is standard to \nany 8051-compatible MCU. \nLATCHSRAM\nOEA8–A15A0–A7D0–D7\n(DATA)ADuC845/\nADuC847/ADuC848\nRDP2ALEP0\nWE WR\n04741-059 \nFigure 62. External Data Memory Interface (64-kbyte Address Space) \nIf access to more than 64 kbytes of RAM is desired, a feature \nunique to the MicroConverter allows addressing up to 16 Mbytes \nof external RAM simply by adding another latch as shown in \nFigure 63. \nLATCH\nP2ALEP0\nLATCHSRAM\nA8–A15A0–A7D0–D7\n(DATA)\nA16–A23\nOE RD\nWE WRADuC845/\nADuC847/\nADuC848\n04741-060 \nFigure 63. External Data Memory Interface (16-Mbtye Address Space) In either implementation, Port 0 (P0) serves as a multiplexed \naddress/data bus. It emits the low byte of the data pointer (DPL) \nas an address, which is latched by ALE prior to data being placed on the bus by the devices (write operation) or the external data memory (read operation). Port 2 (P2) provides the data pointer page byte (DPP) to be latched by ALE, followed by the data \npointer high byte (DPH). If no latch is connected to P2, DPP is \nignored by the SRAM, and the 8051 standard of 64-kbyte external \ndata memory access is maintained. \nThe following example shows the code used to write data to \nexternal data memory. \n   MOV DPP, #10h ;Set addr to 100000h  \n   MOV DPH, #00h    MOV DPL, #00h    MOV A,   #'B' ;Write Char ‘B’ (42h) \n   MOVX @DPTR,A  ;Move to DPP:DPH:DPL addr \n         \nPOWER SUPPLIES  \nThe operational power supply voltage range of the device is 2.7 V to \n5.25 V . Although the guaranteed data sheet specifications are \ngiven only for power supplies within 2.7 V to 3.6 V and 4.75 V \nto 5.25 V (±5% of the nominal 5 V level), the chip functions \nequally well at any power supply level between 2.7 V and 5.25 V . \nSeparate analog and digital power supply pins (AV DD and DV DD, \nrespectively) allow AV DD to be kept relatively free of the noisy \ndigital signals often present on a system DV DD line. In this mode, \nthe device can also operate with split supplies, that is, using \ndifferent voltage supply levels for each supply. For example, the system can be designed to operate with a DV\nDD voltage level of \n3 V and the AV DD level can be at 5 V , or vice versa, if required. A \ntypical split-supply configuration is shown in Figure 64. \nDIGITAL SUPPLY ANALOG SUPPLY\nDVDD\nAGNDAVDD\nDGND–+–+\n0.1\uf06dF\n0.1\uf06dF10\uf06dF 10\uf06dF\nADuC845/\nADuC847/\nADuC848\n04741-06165422\n36\n51\n50383723\n \nFigure 64. External Du al-Supply Connections \n(56-Lead LFCSP Pin Numbering) \nAs an alternative to providing two separate power supplies, \nAV DD can be kept quiet by placing a small series resistor and/or \nferrite bead between it and DV DD, and then decoupling AV DD \nseparately to ground. An example of this configuration is shown \nin Figure 65. In this configuration, other analog circuitry (such \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 89 of 109 as op amps and voltage reference) can be powered from the \nAV DD supply line as well. \nDVDD\nAGNDAVDD\nDGNDDIGITAL SUPPL Y\n–+BEAD1.6\uf057\n0.1\uf06dF\n0.1\uf06dF10\uf06dF 10\uf06dF\nADuC845/\nADuC847/\nADuC848\n04741-06265422\n36\n51\n50383723\n \nFigure 65. External Si ngle-Supply Connections \n(56-Lead LFCSP Pin Numbering) \nNotice that in both Figure 64 and Figure 65 a large value (10 μF) \nreservoir capacitor sits on DV DD and a separate 10 μF capacitor \nsits on AV DD. Also, local decoupling capacitors (0.1 μF) are \nlocated at each V DD pin of the chip. As per standard design \npractice, be sure to include all of these capacitors and ensure \nthat the smaller capacitors are closer than the 10 μF capacitors to each V\nDD pin with lead lengths as short as possible. Connect \nthe ground terminal of each of these capacitors directly to the underlying ground plane. Finally, note that, at all times, the analog and digital ground pins on the device must be referenced \nto the same system ground reference point. It is recommended \nthat the LFCSP paddle be soldered to ensure mechanical stability \nbut be floated with respect to system V\nDDs or grounds. \nPOWER-ON RESET OPERATION  \nAn internal power-on reset (POR) is implemented on the \nADuC845/ ADuC847/ ADuC848 .  \n3 V Part \nFor DV DD below 2.63 V , the internal POR holds the device in \nreset. As DV DD rises above 2.63 V , an internal timer times out \nfor typically 128 ms before the device is released from reset. The user must ensure that the power supply has at least reached a stable 2.7 V minimum level by this time. Likewise on power-down, the internal POR holds the device in reset until the \npower supply drops below 1 V . Figure 66 illustrates the \noperation of the internal POR. \n128ms TYP 1.0V TYP 128ms TYP2.63V TYP\n1.0V TYP\nINTERNAL\nCORE RESETDVDD\n04741-063 \nFigure 66. 3 V Part POR operation 5 V Part \nFor DV DD below 4.5 V , the internal POR holds the device in \nreset. As DV DD rises above 4.5 V , an internal timer times out for \napproximately 128 ms before the device is released from reset. \nThe user must ensure that the power supply has reached a stable 4.75 V minimum level by this time. Likewise on power-down, the internal POR holds the device in reset until the power \nsupply drops below 1 V . Figure 67 illustrates this operation. \n128ms TYP 1.0V TYP 128ms TYP4.5V TYP\n1.0V TYP\nINTERNAL\nCORE RESETDVDD\n04741-087 \nFigure 67. 5 V Part POR Operation \nPOWER CONSUMPTION  \nThe DV DD power supply current consumption is specified in \nnormal and power-down modes. The AV DD power supply \ncurrent is specified with the analog peripherals disabled. The \nnormal mode power consumption represents the current drawn from DV\nDD by the digital core. The other on-chip peripherals \n(such as the watchdog timer and power supply monitor) consume negligible current and are therefore included with the normal operating current. The user must add any currents sourced by the parallel and serial I/O pins, and those sourced by the DAC to determine the total current needed at the ADuC845 / \nADuC847/ ADuC848 DV\nDD and AV DD supply pins. Also, current \ndrawn from the DV DD supply increases by approximately 5 mA \nduring Flash/EE erase and program cycles. \nPOWER-SAVING MODES \nSetting the power-down mode bit, PCON.1, in the PCON SFR \ndescribed in Table 6, allows the chip to be switched from \nnormal mode into full power-down mode. \nIn power-down mode, both the PLL and the clock to the core \nare stopped. The on-chip oscillator can be halted or can \ncontinue to oscillate, depending on the state of the oscillator power-down bit (OSC_PD) in the PLLCON SFR. The TIC, driven directly from the oscillator, can also be enabled during \npower-down. However, all other on-chip peripherals are shut \ndown. Port pins retain their logic levels in this mode, but the DAC output goes to a high impedance state (three-state) while \nALE and PSEN\n outputs are held low. There are five ways to \nterminate power-down mode: \n\uf0b7 Asserting the RESET Pin   \nReturns to normal mode. All registers are set to their reset \ndefault value and program execution starts at the reset \nvector once the RESET pin is de-asserted. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 90 of 109 \uf0b7 Cycling Power  \nAll registers are set to their default state and program exe-\ncution starts at the reset vector approximately 128 ms later. \n\uf0b7 Time Interval Counter (TIC) Interrupt  \nIf the OSC_PD bit in the PLLCON SFR is clear, the 32 kHz \noscillator remains powered up even in power-down mode. If the time interval counter (wake-up/RTC timer) is enabled, a TIC interrupt wakes the device from power-down mode. \nThe CPU services the TIC interrupt. The RETI at the end \nof the TIC ISR returns the core to the next instruction after \nthat one the enabled power-down. \n\uf0b7 SPI Interrupt   \nIf the SERIPD bit in the PCON SFR is set, an SPI interrupt, \nif enabled, wakes up the device from power-down mode. The CPU services the SPI interrupt. The RETI at the end of the ISR returns the core to the next instruction after the \none that enabled power-down.  \n\uf0b7 INT0\n Interrupt   \nIf the INT0PD bit in the PCON SFR is set, an external \ninterrupt 0, if enabled, wakes up the device from power-down. The CPU services the interrupt. The RETI at the end of the ISR returns the core to the next instruction after the one that enabled power-down.  \nWake-Up from Pow er-Down Latency \nEven with the 32 kHz crystal enabled during power-down, the \nPLL takes some time to lock after a wake-up from power-down. \nTypically, the PLL takes about 1 ms to lock. During this time, code executes, but not at the specified frequency. Some opera-\ntions, for example, UART communications, require an accurate \nclock to achieve the specified 50 Hz/60 Hz rejection from the ADCs. Therefore, it is advisable to wait until the PLL has locked before proceeding with normal code execution. The following \ncode can be used to wait for the PLL to lock: \nWAITFORLOCK:  MOV  A, PLLCON \n      JNB  ACC.6, WAITFORLOCK \nIf the crystal is powered down during power-down, an additional \ndelay is associated with the startup of the crystal oscillator \nbefore the PLL can lock. Typically taking about 150 ms, 32 kHz \ncrystals are inherently slow to oscillate. During this time before \nlock, code executes, but the exact frequency of the clock cannot be guaranteed. For any timing-sensitive operations, it is recommended to wait for lock by using the lock bit in PLLCON \nas previously shown. \nAn alternative way of saving power in power-down mode \nis to slow down the core clock by using the CD bits in the \nPLLCON register. \n  GROUNDING AND BOARD LAYOUT \nRECOMMENDATIONS \nAs with all high resolution data converters, special attention \nmust be paid to grounding and PC board layout of ADuC845/ \nADuC847/ ADuC848-based designs to achieve optimum \nperformance from the ADCs and DAC. \nAlthough the devices have separate pins for analog and digital \nground (AGND and DGND), the user must not tie these to \nseparate ground planes unless the two ground planes are connected \ntogether very close to the device as shown in the simplified \nexample in Figure 68 (a). In systems where digital and analog ground planes are connected together somewhere else (at the system’s power supply, for example), they cannot be connected again near the device since a ground loop would result. In these \ncases, tie the AGND and DGND pins of the device to the analog \nground plane, as shown in Figure 68 (b). In systems with only one ground plane, ensure that the digital and analog components are physically separated onto separate halves of the board such that digital return currents do not flow near analog circuitry \nand vice versa. The parts can then be placed between the digital \nand analog sections, as shown in Figure 68 (c). \nIn all of these scenarios, and in more complicated real-life \napplications, keep in mind the flow of current from the supplies \nand back to ground. Make sure that the return paths for all \ncurrents are as close as possible to the paths the currents took to reach their destinations. For example, do not power components on the analog side of Figure 68 (b) with DV\nDD since that would \nforce return currents from DV DD to flow through AGND. Also, \ntry to avoid digital currents flowing under analog circuitry, which may happen if the user placed a noisy digital chip on the left half of the board in Figure 68 (c). Whenever possible, avoid large discontinuities in the ground plane(s) (such as are formed by a long trace on the same layer), since they force return signals to \ntravel a longer path. Make all connections directly to the ground \nplane, with little or no trace separating the pin from its via to \nground. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 91 of 109 DGND AGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHERE\nGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHEREDGNDa.\nAGNDPLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS\nHERE\nb.\nc.\n04741-064 \nFigure 68. System Grounding Schemes \nIf the user plans to connect fast logic signals (rise/fall time < 5 ns) \nto any of the digital inputs of the ADuC845/ ADuC847/ ADuC848  \nadd a series resistor to each relevant line to keep rise and fall \ntimes longer than 5 ns at the input pins of the device. A value of 100 Ω or 200 Ω is usually sufficient to prevent high speed signals from coupling capacitively into the device and affecting the \naccuracy of ADC conversions. \nWhen using the LFCSP package, it is recommended that the \npaddle underneath the chip be soldered to the board to provide \nmaximum mechanical stability. However, it is recommended \nthat this paddle not be grounded but left floating. All results \nand specifications contained in this data sheet are taken or \nrecorded with the paddle floating.  \nSystem Self-Identification \nIn some hardware designs, it may be advantageous for the software to be able to identify the host MicroConverter.  \nThe CHIPID SFR is a read-only register located at SFR address \nC2H. The upper nibble of this SFR designates the MicroConverter \nwithin the Σ-Δ ADC family. User software can read this SFR to \nidentify the host MicroConverter and therefore execute slightly \ndifferent code if required. The CHIPID SFR reads as follows for the Σ-Δ ADC family of MicroConverter products. Note that the ADuC845/ ADuC847/ ADuC848  are treated as one device as far \nas the CHIPID is concerned. Table 63. CHIPID Values for Σ-Δ MicroConverter Products \nDevice CHIPID \nADuC816  1xH \nADuC824  0xH \nADuC836  3xH \nADuC834  2xH \nADuC845/ ADuC847 /ADuC848  AxH \n \nClock Oscillator  \nAs described earlier, the core clock frequency for the ADuC845 / \nADuC847/ ADuC848 is generated from an on-chip PLL that \nlocks onto a multiple (384 times) of 32.768 kHz. The latter is generated from an internal clock oscillator. To use the internal \nclock oscillator, connect a 32.768 kHz parallel resonant crystal \nbetween XTAL1 and XTAL2 as shown in Figure 69.  \nXTAL232.768kHz\n12pF12pFXTAL1\nTO INTERNAL PLLADuC845/ADuC847/ADuC848\n04741-06532\n33\n \nFigure 69. Crystal Connectivity to ADuC845 /ADuC847 /ADuC848  \nAs shown in the typical external crystal connection diagram in \nFigure 69, two internal 12 pF capacitors are provided on-chip. \nThese are connected internally, directly to the XTAL1 and XTAL2 pins. The total input capacitance at both pins is detailed in the Specifications table. Note that the total capacitance required for \na particular crystal must be in accordance with the crystal \nmanufacturer. However, in most cases, no additional external \ncapacitance is required above that already supplied on-chip. \nOTHER HARDWARE CONSIDERATIONS \nIn-Circuit Serial Download Access \nNearly all ADuC845/ ADuC847 /ADuC848 designs can take \nadvantage of the in-circuit reprogrammability of the chip. This \nis accomplished by a connection to the UART of the devices, which requires an external RS-232 chip for level translation if downloading code from a PC. Basic configuration of an RS-232 \nconnection is shown in Figure 70 with a simple ADM3202 -based \ncircuit. If users would rather not include an RS-232 chip on the \ntarget board, refer to the uC006 Application Note , A 4-Wire UART-\nto-PC Interface , for a simple (and zero-cost-per-board) method \nof gaining in-circuit serial download access to the device. \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 92 of 109 C1+\nV+\nC1–\nC2+\nC2–\nV–\nT2OUT\nR2INVCC\nGND\nT1OUT\nR1IN\nR1OUT\nT1IN\nT2IN\nR2OUTADM3202RS-232 INTERFACE1\n1\n2\n3\n4\n5\n6\n78\n9DVDD\nSTANDARD D-TYPE\nSERIAL COMMS\nCONNECTOR TO\nPC HOST\nNOTES\n1. EXTERNAL UART TRANSCEIVER INTEGRATED IN SYSTEM OR AS PART\nOF AN EXTERNAL DONGLE AS DESCRIBED IN APPLICATION NOTE uC006.0.1\uf06dF0.1\uf06dF0.1\uf06dF0.1\uf06dF\nRESET ACTIVE HIGH.\n(NORMALLY OPEN)35\n3443 441k\uf057DVDD\n1k\uf057\n2-PIN HEADER FOR\nEMULATION ACCESS\n(NORMALLY OPEN)DOWNLOAD/DEBUG\nENABLE JUMPER\n(NORMALLY OPEN)\n32.768kHz\nDVDDDVDDAVDD\nAVDD\nAGND\nAGND\nREFIN–\nREFIN+\nP1.0/AIN1\nP1.1/AIN2P1.6/IEXC1/AIN7200\uf06dA/400\uf06dA\nEXCITATION\nCURRENT\nRTD\nRREF\n5.6k\uf057\nPSEN\nEA\nXTAL2\nXTAL1RESET\nRxD\nTxD\nDVDD\nDGNDADuC845/ADuC847/ADuC848\nLFCSP PACKAGE\n04741-08811\n4\n5\n6\n7\n8\n56\n1\n1718 19 22 36 51 37 38 50 23\n0.1\uf06dF\n \nFigure 70. UART Connectivity in Typical System \nIn addition to the basic UART connections, users also need a \nway to trigger the chip into download mode. This is accomplished via a 1 kΩ pull-down resistor that can be jumpered onto the \nPSEN\n pin, as shown in Figure 70. To get the devices into download \nmode, connect this jumper and power-cycle the device (or \nmanually reset the device, if a manual reset button is available), \nand it is ready to receive a new program serially. With the \njumper removed, the device powers on in normal mode (and runs the program) whenever power is cycled or RESET is \ntoggled. Note that PSEN\n is normally an output and that it is \nsampled as an input only on the falling edge of RESET, that is, at \npower-on or upon an external manual reset. Note also that if \nany external circuitry unintentionally pulls PSEN  low during \npower-on or reset events, it may cause the chip to enter \ndownload mode and fail to begin user code execution. To prevent this, ensure that no external signals are capable of \npulling the PSEN  pin low, except for the external PSEN  jumper \nitself or the method of download entry in use during a reset or power-cycle condition. \nEmbedded Serial Port Debugger \nFrom a hardware perspective, entry to serial port debug mode is \nidentical to the serial download entry sequence described \npreviously. In fact, both serial download and serial port debug modes are essentially one mode of operation used in two \ndifferent ways. \nThe serial port debugger is fully contained on the device, unlike \nROM monitor type debuggers, and, therefore, no external \nmemory is needed to enable in-system debug sessions. \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 93 of 109 Single-Pin Emulation Mode \nBuilt into the ADuC845/ ADuC847/ ADuC848 is a dedicated \ncontroller for single-pin in-circuit emulation (ICE). In this mode, \nemulation access is gained by connection to a single pin, the EA \npin. Normally on the 8051 standard, this pin is hardwired either \nhigh or low to select execution from internal or external program \nmemory space. Note that external program memory or execu-tion from external program memory is not allowed on the devices. To enable single-pin emulation mode, users need to \npull the EA\n pin high through a 1 kΩ resistor as shown in \nFigure 70. The emulator then connects to the 2-pin header also \nshown in Figure 70. To be compatible with the standard connec-\ntor that comes with the single-pin emulator available from \nAccutron Limited (www.accutron.com), use a 2-pin 0.1-inch pitch Friction Lock header from Molex (www.molex.com) such as part number 22-27-2021. Be sure to observe the polarity of this header. As shown in Figure 70, when the Friction Lock tab \nis at the right, the ground pin should be the lower of the two \npins when viewed from the top. \nTypical System Configuration \nA typical ADuC845/ ADuC847 /ADuC848 configuration is \nshown in Figure 70. Figure 70 also includes connections for a \ntypical analog measurement application of the devices, namely \nan interface to a resistive temperature device (RTD). The \narrangement shown is commonly referred to as a 4-wire  \nRTD configuration. Here, the on-chip excitation current sources are enabled to \nexcite the sensor. The excitation current flows directly through \nthe RTD generating a voltage across the RTD proportional to its resistance. This differential voltage is routed directly to one set of the positive and negative inputs of the ADC (AIN1, AIN2, respectively in this case). The same current that excited the \nRTD also flows through a series resistance, R\nREF, generating a \nratiometric voltage reference, V REF. The ratiometric voltage \nreference ensures that variations in the excitation current do not \naffect the measurement system since the input voltage from the RTD and reference voltage across R\nREF vary ratiometrically with \nthe excitation current. Resistor R REF must, however, have a low \ntemperature coefficient to avoid errors in the reference voltage overtemperature. R\nREF must also be large enough to generate at \nleast a 1 V voltage reference.  \nThe preceding example shows just a single differential ADC \nconnection using a single reference input pair. The ADuC845/ \nADuC847/ ADuC848 have the capability of connecting to five \ndifferential inputs directly or ten single-ended inputs (LFCSP \npackage only) as well as having a second reference input. This \narrangement means that different sensors with different \nreference ranges can be connected to the device with the need for external multiplexing circuitry. This arrangement is shown in Figure 71. The bridge sensor shown can be a load cell or a pressure sensor. The RTD is shown using a reference voltage \nderived from the R\nREF resistor via the REFIN± inputs, and the \nbridge sensor is shown using a divided down AV DD reference via \nthe REFIN2± inputs.  \n \n  \n \n \n \n \n \n \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 94 of 109 DVDD0.1\uf06dF\nRESET ACTIVE HIGH.\n(NORMALLY OPEN)35\n3443 441k\uf057DVDD\n1k\uf057\n2-PIN HEADER FOR\nEMULATION ACCESS(NORMALLY OPEN)DOWNLOAD/DEBUG\nENABLE JUMPER\n(NORMALLY OPEN)\nRS232\nCONNECTIONDVDDDVDDAVDD\nAVDDAVDD\nAGND\nAGND\nREFIN–\nREFIN+\nP1.0/AIN1\nP1.1/AIN2200\uf06dA/400\uf06dA\nEXCITATION\nCURRENT\nRTD\nR\nR\nPSEN\nEA\nDGND\nDVDD\nXTAL2\nXTAL1RESET\nRxD\nTxD\nDVDD\nDGND\n04741-06711\n4\n5\n6\n7\n8\n56\n1\nP1.2/AIN3/REFIN2+\nAIN9\nAIN10\nP1.3/AIN4/REFIN2–RREF\n5.6k\uf057\n2\n15\n16\n3\n1718 19 22 36 51 37 38 50 23\n0.1\uf06dFP1.6/I EXC1/AIN7\nADuC845/ADuC847/ADuC848\nLFCSP PACKAGE\n \nFigure 71. Dual Reference Typical Connectivity \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 95 of 109 QuickStart DEVELOPMENT SYSTEM \nThe QuickStart Development System is an entry-level, low cost \ndevelopment tool suite supporting the ADuC8xx MicroConverter \nproduct family. The system consists of the following PC-based (Windows®-compatible) hardware and software development \ntools: \nHardware: Evaluation board and serial port \nprogramming cable. \nSoftware: Serial download software. \nMiscellaneous: CD-ROM documentation and prototype \nevaluation board. \nA brief description of some of the software tools and components in the QuickStart system follows. \nDownload—In-Circuit Serial Downloader \nThe serial downloader is a Windows application that allows the \nuser to serially download an assembled program (Intel® hexa-\ndecimal format file) to the on-chip program flash memory via the serial COM port on a standard PC. The AN-1074 Application Note \ndetails this serial download protocol. \nASPIRE—IDE \nThe ASPIRE® integrated development environment is a \nWindows application that allows the user to compile, edit, and \ndebug code in the same environment. The ASPIRE software allows users to debug code execution on silicon using the MicroConverter UART serial port. The debugger provides \naccess to all on-chip peripherals during a typical debug session \nas well as single-step, animate (automatic single stepping), and \nbreak-point code execution control. \nNote that the ASPIRE IDE is also included as part of the \nQuickStart-PLUS system. As part of the QuickStart-PLUS \nsystem the ASPIRE IDE also supports mixed level and C source debugging. This is not available in the QuickStart system where \nthe program is limited to assembly only.  QuickStart-PLUS DEVELOPMENT SYSTEM \nThe QuickStart-PLUS development system offers users \nenhanced nonintrusive debug and emulation tools. The system \nconsists of the following PC-based (Windows-compatible) \nhardware and software development tools: \nHardware: Prototype Board, Accutron NonIntrusive \nSingle-Pin Emulator. \nSoftware: ASPIRE Integrated Development \nEnvironment. Features full C and Assembly \nemulation using the Accutron single-pin \nemulator. \nMiscellaneous: CD-ROM documentation.\n \n \n \n \n \n \n \n \n  \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 96 of 109 TIMING SPECIFICATIONS \nAC inputs during testing are driven at DV DD – 0.5 V for Logic 1 \nand 0.45 V for Logic 0. Timing measurements are made at V IH \nmin for Logic 1 and V IL max for Logic 0 as shown in Figure 72. \nFor timing purposes, a port pin is no longer floating when a 100 \nmV change from load voltage occurs. A port pin begins to float \nwhen a 100 mV change from the loaded V OH/V OL level occurs as \nshown in Figure 72. CLOAD for all outputs = 80 pF, unless otherwise noted. \nAV DD = 2.7 V to 3.6 V or 4.75 V to 5.25 V , DV DD = 2.7 V to 3.6 V \nor 4.75 V to 5.25 V; all specifications T MIN to T MAX, unless \notherwise noted. \n \nTable 64. CLOCK INPUT (External Clock Driven XTAL1) Parameter \n 32.768 kHz External Crystal  \n Min  Typ  Max Unit \ntCK XTAL1 Period  30.52  μs \ntCKL XTAL1 Width Low  6.26  μs \ntCKH XTAL1 Width High  6.26  μs \ntCKR XTAL1 Rise Time  9  ns \ntCKF XTAL1 Fall Time  9  ns \n1/t CORE Core Clock Frequency1 0.098 1.57 12.58 MHz \ntCORE Core Clock Period2  0.636  μs \ntCYC Machine Cycle Time3 10.2 0.636 0.08 μs \n \n1 ADuC845/ ADuC847 /ADuC848 internal PLL locks onto a mult iple (512 times) of the 32.768 kH z external crystal frequency to  provide a stable 12.58 MHz inte rnal clock \nfor the system. The core can operate at this frequency or at a binary submultiple called Core_Clk, selected via the PLLCON SFR.  \n2 This number is measured at the default Core_Clk operating frequency of 1.57 MHz. \n3 ADuC845/ ADuC847 /ADuC848 machine cycle time is nominally defined as 1/Core_Clk. \n \n \nDVDD– 0.5V\n0.45V0.2DVDD+ 0.9V\nTEST POINTS\n0.2DVDD–  0.1VVLOAD– 0.1V\nVLOAD\nVLOAD + 0.1VTIMING\nREFERENCE\nPOINTSVLOAD– 0.1V\nVLOAD\nVLOAD– 0.1V\n04741-077 \nFigure 72. Timing Waveform Characteristics \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 97 of 109 Table 65.  EXTERNAL DATA MEMORY READ CYCLE Parameter \n 12.58 MHz Core Clock 6.29 MHz Core Clock  \n Min  Max Min  Max Unit \ntRLRH RD Pulse Width 60  125  ns \ntAVLL Address Valid After ALE Low 60  120  ns \ntLLAX Address Hold After ALE Low 145  290  ns \ntRLDV RD Low to Valid Data In  48  100 ns \ntRHDX Data and Address Hold After RD  0  0  ns \ntRHDZ Data Float After RD   150  625 ns \ntLLDV ALE Low to Valid Data In  170  350 ns \ntAVDV Address to Valid Data In  230  470 ns \ntLLWL ALE Low to RD  or WR  Low 130  255  ns \ntAVWL Address Valid to RD  or WR  Low 190  375  ns \ntRLAZ RD Low to Address Float   15  35 ns \ntWHLH  RD or WR  High to ALE High 60  120  ns \n \n \n04741-078ALE (O)\nPORT 0 (I/O)\nPORT 2 (O)tWHLH\ntLLDV\ntLLWL tRLRH\ntAVWL\ntLLAXtAVLL\ntRLAZtRHDXtRHDZ\ntAVDVA0\x01A7 (OUT) DATA (IN)\nA16\x01A2 3 A8 A15tRLDVPSEN (O)\nRD (O)\n \nFigure 73. External Data Memory Read Cycle \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 98 of 109 Table 66.  EXTERNAL DATA MEMORY WRITE CYCLE Parameter \n 12.58 MHz Core Clock 6.29 MHz Core Clock  \n Min  Max Min  Max Unit \ntWLWH  WR Pulse Width 65  130  ns \ntAVLL Address Valid After ALE Low 60  120  ns \ntLLAX Address Hold After ALE Low 65  135  ns \ntLLWL ALE Low to RD  or WR  Low  130  260 ns \ntAVWL Address Valid to RD  or WR  Low 190  375  ns \ntQVWX  Data Valid to WR  Transition 60  120  ns \ntQVWH  Data Setup Before WR  120  250  ns \ntWHQX  Data and Address Hold After WR   380  755  ns \ntWHLH  RD or WR  High to ALE High 60  125  ns \n \n04741-079ALE (O)\nPORT 2 (O)tWHLH\ntWLWH tLLWL\ntAVWL\ntLLAXtAVLLtQVWX\ntQVWHtWHQX\nA0\x01A7 DATA\nA16\x01A23 V8 A15PSEN (O)\nWR (O)\n \nFigure 74. External Data Memory Write Cycle \nTable 67. I2C-COMPATIBLE INTERFACE TIMING Parameter \nParameter    \n Min Max Unit \ntL SCLCK Low Pulse Width 1.3  μs \ntH SCLCK High Pulse Width 0.6  μs \ntSHD Start Condition Hold Time 0.6  μs \ntDSU Data Setup Time 100  μs \ntDHD Data Hold Time  0.9 μs \ntRSU Setup Time for Repeated Start 0.6  μs \ntPSU Stop Condition Setup Time 0.6  μs \ntBUF Bus Free Time Between a Stop Condition and a Start Condition 1.3  μs \ntR Rise Time of Both SCLCK and SDATA  300 ns \ntF Fall Time of Both SCLCK and SDATA  300 ns \ntSUP1 Pulse Width of Spike Suppressed  50 ns \n \n1 Input filtering on both the SCLOCK and SDATA inputs suppresses noise spikes less than 50 ns. \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 99 of 109 MSBtBUF\nSDATA (I/O)\nSCLK (I)\nSTOP\nCONDITIONSTART\nCONDITIONREPEATED\nSTARTLSB ACK MSB\n1 2-7 8 9 1\nS(R) PStPSUtDSU\ntSHDtDHDtSUP\ntDSUtDHD\ntH\ntSUP tLtRSUtRtR\ntF\ntF\n04741-080 \nFigure 75. I2C-Compatible Interface Timing \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 100 of 109 Table 68.  SPI MASTER MODE TIMING (CPHA = 1) Parameter \n Min Typ Max Unit \ntSL SCLOCK Low Pulse Width1  635  ns \ntSH SCLOCK High Pulse Width1  635  ns \ntDAV Data Output Valid After SCLOCK Edge   50 ns \ntDSU Data Input Setup Time Before SCLOCK Edge 100   ns \ntDHD Data Input Hold Time After SCLOCK Edge 100   ns \ntDF Data Output Fall Time  10 25 ns \ntDR Data Output Rise Time  10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time  10 25 ns \n \n1 Characterized under the following conditions: \na. Core clock divider bits CD2, CD1, and CD0 in PLLCON SFR set to 0, 1, and 1, respectively, that is, core clock frequency = 1. 57 MHz. \nb. SPI bit-rate selection bits SPR1 and SPR0 in SPICON SFR set to 0 and 0, respectively. \n \n \nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6–1BITS 6–1\ntDHDtDRtDAVtDFtSH tSL\ntSRtSF\nMSB IN\n04741-081 \nFigure 76. SPI Master Mode Timing (CHPA = 1) \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 101 of 109 Table 69.  SPI MASTER MODE TIMING (CPHA = 0) Parameter \n     \n Min Typ Max Unit \ntSL SCLOCK Low Pulse Width1  635  ns \ntSH SCLOCK High Pulse Width1  635  ns \ntDAV Data Output Valid After SCLOCK Edge   50 ns \ntDOSU Data Output Setup Before SCLOCK Edge   150 ns \ntDSU Data Input Setup Time Before SCLOCK Edge 100   ns \ntDHD Data Input Hold Time After SCLOCK Edge 100   ns \ntDF Data Output Fall Time  10 25 ns \ntDR Data Output Rise Time  10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time  10 25 ns \n \n1 Characterized under the following conditions: \na. Core clock divider bits CD2, CD1, and CD0 in PLLCON SFR set to 0, 1, and 1, respectively, that is, core clock frequency = 1. 57 MHz. \nb. SPI bit-rate selection bits SPR1 and SPR0 in SPICON SFR set to 0 and 0, respectively. \n \n \nSCLOCK\n(CPOL = 0)\ntDSUSCLOCK\n(CPOL = 1)\nMOSI\nMISOMSB LSB\nLSB IN BITS 6–1BITS 6–1\ntDHDtDRtDAV\ntDFtDOSUtSH tSL\ntSRtSF\nMSB IN\n04741-082 \nFigure 77. SPI Master Mode Timing (CHPA = 0) \n \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 102 of 109 Table 70.  SPI SLAVE MODE TIMING (CPHA = 1) Parameter \n     \n Min Typ Max Unit \ntSS SS to SCLOCK Edge  0   ns \ntSL SCLOCK Low Pulse Width  330  ns \ntSH SCLOCK High Pulse Width  330  ns \ntDAV Data Output Valid After SCLOCK Edge   50 ns \ntDSU Data Input Setup Time Before SCLOCK Edge 100   ns \ntDHD Data Input Hold Time After SCLOCK Edge 100   ns \ntDF Data Output Fall Time  10 25 ns \ntDR Data Output Rise Time  10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time  10 25 ns \ntSFS SS High After SCLOCK Edge 0   ns \n \n \nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6–1 LSB\nBITS 6–1 LSB IN\ntDHDtDSUtDRtDFtDAVtSHtSL tSR tSFtSFS\nMSB INtSS\n04741-083\n \nFigure 78. SPI Slave Mode Timing (CHPA = 1) \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 103 of 109 Table 71.  SPI SLAVE MODE TIMING (CPHA = 0) Parameter \n     \n Min Typ Max Unit \ntSS SS to SCLOCK Edge  0   ns \ntSL SCLOCK Low Pulse Width  330  ns \ntSH SCLOCK High Pulse Width  330  ns \ntDAV Data Output Valid After SCLOCK Edge   50 ns \ntDSU Data Input Setup Time Before SCLOCK Edge 100   ns \ntDHD Data Input Hold Time After SCLOCK Edge 100   ns \ntDF Data Output Fall Time  10 25 ns \ntDR Data Output Rise Time  10 25 ns \ntSR SCLOCK Rise Time   10 25 ns \ntSF SCLOCK Fall Time  10 25 ns \ntDOSS Data Output Valid After SS  Edge    20 ns \ntSFS SS High After SCLOCK Edge    ns \n \n \nMISO\nMOSISCLOCK\n(CPOL = 1)SCLOCK\n(CPOL =  0)SS\nMSB BITS 6–1 LSB\nBITS 6–1 LSB IN\ntDHDtDSUtDRtDFtDAV\ntDOSStSHtSL\ntSRtSFtSFS\nMSB INtSS\n04741-084 \nFigure 79. SPI Slave Mode Timing (CHPA = 0) \n \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 104 of 109 Table 72.  UART TIMING (SHIFT REGISTER MODE) Parameter \n 12.58 MHz Core_Clk Variable Core_Clk  \n Min Typ Max Min Typ Max Unit \nTXLXL Serial Port Clock Cycle Time  954   12t core  ns \nTQVXH Output Data Setup to Clock 662      ns \nTDVXH Input Data Setup to Clock 292      ns \nTXHDX Input Data Hold After Clock 0      ns \nTXHQX Output Data Hold After Clock 22      ns \n \n \nSET RI\nOR\nSET TI\nBIT 6tXLXL\nTxD\n(OUTPUT CLOCK)\nRxD\n(OUTPUT DATA)\nRxD\n(INPUT DATA)BIT 1 LSB\nLSB BIT 1 BIT 6 MSBtXHQXtQVXH\ntDVXH tXHDX\n04741-086 \nFigure 80. UART Timing in Shift Register Mode \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 105 of 109 OUTLINE DIMENSIONS \nCOMPLIANT TO JEDEC STANDARDS MO-112-AC-214.15\n13.90  SQ13.652.45\nMAX1.030.880.73\n1452\n262740\n39\n132.102.001.95\n7°0°0.250.150.100.230.1110.2010.00 SQ 9.80\n0.65 BSC\nLEAD PITCHLEAD WIDTH0.10\nCOPLANARITYSEATING\nPLANE1.95 REF 1\nVIEW A\nVIEW A\nROTATED 90° CCW\n06-10-20014-BTOP VIEW\n(PINS DOWN)\n0.38\n0.22\n \nFigure 81. 52-Lead Metric Quad Flat Package [MQFP]  \n(S-52-2)  \nDimensions shown in millimeters \n \n0.50\nBSCPIN 1\nINDICATORPIN 1\nINDICATOR\n*6.25\n6.10 SQ\n5.95\n0.500.400.30\nSEATING\nPLANE0.800.750.70\n0.05 MAX0.02 NOM\n0.20 REFCOPLANARITY\n0.080.300.230.18\n08-23-2013-A8.108.00 SQ7.90\nFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TOTHE PIN CONFIGURATION ANDFUNCTION DESCRIPTIONSSECTION OF THIS DATA SHEET.0.25 MIN\n6.50 REF\n*COMPLIANT TO JEDEC STANDARDS MO-220-WLLD-2\nWITH EXCEPTION TO EXPOSED PAD DIMENSION.156\n14\n1543\n42\n2829\nTOP VIEW BOTTOM VIEWEXPOSED\nPADPKG-004356 \nFigure 82. 56-Lead Lead Frame Chip Scale Package [LFCSP] \n8 mm × 8 mm Body and 0.75 mm Package Height \n(CP-56-11) \nDimensions shown in millimeters \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 106 of 109 ORDERING GUIDE \nModel1, 2, 3 Temperature Range  Package Description  Package Option  \nADuC845BSZ62-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 5 V S-52-2 \nADuC845BSZ62-5-RL −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 5 V S-52-2 \nADuC845BSZ62-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 3 V S-52-2 \nADuC845BSZ8-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 5 V S-52-2 \nADuC845BSZ8-5-RL −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 5 V S-52-2 \nADuC845BSZ8-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 3 V S-52-2 \nADuC845BCPZ62-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 5 V CP-56-11 \nADuC845BCPZ62-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 3 V CP-56-11 \nADuC845BCPZ8-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 5 V CP-56-11 \nADuC845BCPZ8-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 3 V CP-56-11 \nADuC847BSZ62-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 5 V S-52-2 \nADuC847BSZ62-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 3 V S-52-2 \nADuC847BSZ32-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 32-kbyte, 5 V S-52-2 \nADuC847BSZ32-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 32-kbyte, 3 V S-52-2 \nADuC847BSZ8-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 5 V S-52-2 \nADuC847BSZ8-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 3 V S-52-2 \nADuC847BCPZ62-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 5 V CP-56-11 \nADuC847BCPZ62-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 3 V CP-56-11 \nADuC847BCPZ8-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 5 V CP-56-11 \nADuC847BCPZ8-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 3 V CP-56-11 \nADuC848BSZ62-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 5 V S-52-2 \nADuC848BSZ62-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 62-kbyte, 3 V S-52-2 \nADuC848BSZ32-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 32-kbyte, 5 V S-52-2 \nADuC848BSZ32-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 32-kbyte, 3 V S-52-2 \nADuC848BSZ8-5 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 5 V S-52-2 \nADuC848BSZ8-3 −40°C to +125°C 52-Lead MQFP, Lead Free, 8-kbyte, 3 V S-52-2 \nADuC848BCPZ62-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 5 V CP-56-11 \nADuC848BCPZ62-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 62-kbyte, 3 V CP-56-11 \nADuC848BCPZ8-5 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 5 V CP-56-11 \nADuC848BCPZ8-3 −40°C to +85°C 56-Lead LFCSP, Lead Free, 8-kbyte, 3 V CP-56-11 \nEVAL-ADuC845QSZ  QuickStart Development System  \nEVAL-ADuC845QSPZ  QuickStart-PLUS Development System  \nEVAL-ADuC847QSZ  QuickStart Development System  \nEVAL-ADUC-CABLE1Z  ADuC Serial Downloader Cable for UART  \n \n1 The -3 and -5 in the Model column indicate the DV DD operating voltage. \n2 Z = RoHS Compliant Part. \n3 The QuickStart Plus system can only be ordered directly from Accutron. It can be purchased from the website http://www.accutron.com . \n \n \n \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 107 of 109 NOTES \nADuC845/ADuC847/ADuC848 Data Sheet\n \nRev. D | Page 108 of 109 NOTES \nData Sheet ADuC845/ADuC847/ADuC848\n \nRev. D | Page 109 of 109 NOTES \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nI2C refers to a communications protocol originally developed by Philips Semiconductors (now NXP Semiconductors). \n \n©2004–2016 Analog Devices, Inc. All rights reserved. Trademarks and  \n registered trademarks are the prop erty of their respective owners. \n  D04741-0-5/16(D)  \n"}]
!==============================================================================!
### Component Summary: ADUC845BSZ62-5

**Key Characteristics and Specifications:**

- **Voltage Ratings:**
  - Operating Voltage: 2.7 V to 5.25 V (3 V and 5 V variants available)
  
- **Current Ratings:**
  - Normal Mode: 4.8 mA max at 3.6 V (core clock = 1.57 MHz)
  - Power-Down Mode: 20 μA max with wake-up timer running

- **Power Consumption:**
  - Power consumption varies based on operation mode:
    - Normal Mode: 4.8 mA max at 3.6 V
    - Power-Down Mode: 20 μA max
    - Flash/EE memory programming: increases current consumption by approximately 3 mA (3 V) and 10 mA (5 V)

- **Operating Temperature Range:**
  - -40°C to +125°C

- **Package Type:**
  - 52-lead MQFP (14 mm × 14 mm)

- **Special Features:**
  - Integrated dual 24-bit Σ-Δ ADCs (primary and auxiliary)
  - 62 kB Flash/EE program memory and 4 kB Flash/EE data memory
  - On-chip programmable gain amplifier (PGA)
  - Multiple communication interfaces: UART, SPI, I2C
  - Watchdog timer and power supply monitor
  - Temperature sensor (only in ADuC845)
  - Dual excitation current sources (200 μA each)

- **Moisture Sensitive Level (MSL):**
  - MSL Level 1 per JEDEC J-STD-020E

**Description:**
The ADUC845 is a high-performance MicroConverter® from Analog Devices, integrating a 24-bit Σ-Δ ADC, a microcontroller core based on the 8051 architecture, and a significant amount of Flash/EE memory. It is designed for precision measurement applications, providing high-resolution data acquisition capabilities with built-in signal conditioning features.

**Typical Applications:**
- **Multichannel Sensor Monitoring:** Ideal for applications requiring multiple sensor inputs, such as temperature, pressure, and weight measurements.
- **Industrial and Environmental Instrumentation:** Used in devices that monitor environmental conditions or industrial processes.
- **Weigh Scales and Pressure Sensors:** The high-resolution ADCs make it suitable for applications in weighing and pressure measurement.
- **Portable Instrumentation and Battery-Powered Systems:** Low power consumption in power-down mode allows for extended battery life in portable devices.
- **Data Logging and Precision System Monitoring:** The integrated memory and ADC capabilities facilitate data logging applications where precision is critical.

This component is particularly well-suited for applications that require high accuracy and low power consumption, making it a versatile choice for embedded systems in various industries.