[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': "Give me information about the component of ST25DV04K-IER6C3 production of ST MICROELECTRONICS from the text:Features\nI2C interface\n• Two-wire I2C serial interface supports 1 MHz protocol\n• Single supply voltage: 1.8 to 5.5 V\n• Multiple byte programming (up to 256 bytes)\nContactless interface\n• Based on ISO/IEC 15693\n• NFC Forum Type 5 tag, certified by the NFC Forum\n• Supports all ISO/IEC 15693 modulations, coding, sub-carrier modes and data\nrates\n• Custom fast read access up to 53 Kbit/s\n• Single and multiple blocks read (same for extended commands)\n• Single and multiple (up to 4) blocks write (same for extended commands)\n• Internal tuning capacitance: 28.5 pF\nMemory\n• Up to 64 kbits of EEPROM (depending on version)\n• I2C interface accesses bytes\n• RF interface accesses blocks of 4 bytes\n• Write time:\n– From I2C: typical 5 ms for 1 byte\n– From RF: typical 5 ms for 1 block\n• Data retention: 40 years\n• Write cycles endurance:\n– 1 million at 25 °C\n– 600 k at 85 °C\n– 500 k at 105 °C\n– 400 k at 125 °C\nFast transfer mode\n• Fast data transfer between I2C and RF interfaces\n• Half-duplex 256-byte dedicated buffer\nEnergy harvesting\n• Analog output pin to power external components\nData protection\n• User memory: one to four configurable areas, protectable in read and/or write\nby three 64-bit passwords in RF, and one 64-bit password in I2C\n• System configuration: protected in write by one 64-bit password in RF, and one\n64-bit password in I2CSO8 TSSOP8\nUFDFPN8 WLCSP10\nWafer UFDFPN12\nProduct status link\nST25DV04K\nST25DV16K\nST25DV64KDynamic NFC/RFID tag IC with 4-, 16-, or 64-Kbit EEPROM, and fast transfer \nmode capability\nST25DV04K ST25DV16K ST25DV64K\nDatasheet\nDS10925  - Rev 11  - January 2023\nFor further information contact your local STMicroelectronics sales office.www.st.com\nGPO\n• Interruption pin configurable on multiple RF events (field change, memory write, activity, Fast Transfer end,\nuser set/reset/pulse)\n• Open drain or CMOS output (depending on version)\nLow power mode (10-ball and 12-pin packages only)\n• Input pin to trigger low power mode\nRF management\n• RF command interpreter enabled/disabled from I2C host controller\nTemperature range\n• Range 6:\n– From -40 to 85 °C\n• Range 8:\n– From -40 to 105 °C (UDFPN8 and UDFPN12 only)\n– From -40 to 125 °C (SO8N and TSSOP8 only, 105 °C max on RF interface)\nPackage\n• 8-pin, 10-ball and 12-pin packages\n• ECOPACK2 (RoHS compliant)\nST25DV04K ST25DV16K ST25DV64K\nDS10925  - Rev 11 page 2/197\n1 Description\nThe ST25DV04K , ST25DV16K  and ST25DV64K  devices (hereinafter referred collectively to as ST25DVxxx)\nare NFC RFID tags offering, respectively 4, 16, and 64 Kbit of electrically erasable programmable memory\n(EEPROM). These devices feature two interfaces: the first one is an I2C serial link that can be operated from a\nDC power supply, the second one is an RF link activated when the device acts as a contactless memory powered\nby the received carrier electromagnetic wave.\nIn I2C mode, the user memory contains up to 512, 2048, or 8192 bytes, which can be split in four flexible and\nprotectable areas.\nIn RF mode, following ISO/IEC 15693 or NFC Forum Type 5 recommendations, the user memory contains up to\n128, 512, or 2048 blocks of 4 bytes, which can be split in four flexible and protectable areas.\nThe ST25DVxxx devices offer a fast transfer mode between the RF and contact worlds, thanks to a 256 bytes\nvolatile buffer (also called Mailbox). In addition, the GPO pin provides data about incoming events, like RF field\ndetection, RF activity in progress, or mailbox message availability. An energy harvesting feature is also available,\nwhen external conditions make it possible.\n1.1 ST25DVxxx block diagram\nFigure 1. ST25DVxxx block diagram\nLPD1\nAC0\nAC1V_EHVDCG1\nGPO\nVcc\nSDA\nSCLVss1.8V VOLTAGE \nREGULATOR\nRF INTERFACE\n28.5pF tuning \ncapacitance\nUp to 64Kbits User memory256 Bytes  \nBUFFER\nISO/IEC 15693 \nPROTOCOL\nAND CONTROLMEMORY \nCONTROLDIGITAL UNIT CONTROL\nENERGY \nHARVESTING \nCONTROLFAST TRANSFER \nCONTROLANALOG FRONT END\nENERGY \nHARVESTING\nI2C \nINTERFACEI2C CONTROL\nEEPROM\nSystem \nregistersDynamic \nregisters\n1. V DCG and LPD are included only in 10-ball and 12-pin packages.\nST25DV04K ST25DV16K ST25DV64K\nDescription\nDS10925  - Rev 11 page 3/197\n1.2 ST25DVxxx packaging\nThe ST25DVxxx devices are provided in different packages:\n• 8 pins (S08N or TSSPOP8 or UFDFPN8) for the open drain version of Interrupt output\n• 10 balls (WLCSP) and 12 pins (UFDFPN12) for a CMOS interrupt output. These packages include an\nadditional LPD pin, to minimize standby consumption.\nTable 1. Signal names\nSignal name Function Direction\nV_EH Energy harvesting Power output\nGPO Interrupt output Output\nSDA Serial data I/O\nSCL Serial clock Input\nAC0, AC1 Antenna coils -\nVCC Supply voltage Power\nVSS Ground -\nLPD (1) Low power down mode Input\nVDCG (1)Supply voltage for GPO driver Power\nNC Not connected Must be left floating\nEP (2) Exposed pad Must be left floating\n \n1. Available only on 10-ball and 12-pin packages.\n2. Available only on UFDPN8 and UFDFPN12 packages.\n \nFigure 2. 8-pin packages: connections with open drain Interrupt output\nAC01\n2\n3\n48\n7\n6\n5V_EH\nAC1\nVSSVCC\nGPO (OD)\nSCL\nSDAEP1\n1. Exposed pad available only on UFDFPN8 package.\nST25DV04K ST25DV16K ST25DV64K\nST25DVxxx packaging\nDS10925  - Rev 11 page 4/197\nFigure 3. 12-pin package: connections with CMOS Interrupt output (GPO)\nV_EH2\n3\n4\n511\n10\n9\n8NC\nAC0\nAC1GPO (CMOS)\nVDCG\nNC\nSCL1 12 LPD    VCC\n6 7 VSS SDAEP1\n1. Exposed pad available only on UFDFPN12 package.\nFigure 4. 10-ball WLCSP package: connections with CMOS Interrupt output (GPO)\nVCC\nVDCG\nSDASCL\nVSSAC1LPDAC0V_EH\nGPO4 3 2 1\nA\nB\nC\nD\nE\nMarking side \n(top view)VCC\nVDCG\nSDASCL\nVSSAC1LPDAC0V_EH\nGPO1 2 3 4\nA\nB\nC\nD\nE\nBump side \n(bottom view)\nST25DV04K ST25DV16K ST25DV64K\nST25DVxxx packaging\nDS10925  - Rev 11 page 5/197\n2 Signal descriptions\n2.1 Serial link (SCL, SDA)\n2.1.1 Serial clock (SCL)\nThis input signal is used to strobe data in and out of the device. In applications where this signal is used by slave\ndevices to synchronize the bus to a slower clock, the bus master must have an open drain output, and a pull-up\nresistor must be connected from Serial clock (SCL) to V CC. See Section 9.2  I2C parameters  to know how to\ncalculate the value of this pull-up resistor\n2.1.2 Serial data (SDA)\nThis bidirectional signal is used to transfer data in or out of the device. It is an open drain output that may be\nwire-ORed with other open drain or open collector signals on the bus. A pull-up resistor must be connected from\nSerial data (SDA) to V CC (Figure 76  indicates how to calculate the value of the pull-up resistor).\n2.2 Power control (V CC, LPD, V SS)\n2.2.1 Supply voltage (V CC)\nThis pin can be connected to an external DC supply voltage.\nNote: An internal voltage regulator allows the external voltage applied on V CC to supply the ST25DVxxx, while\npreventing the internal power supply (rectified RF waveforms) to output a DC voltage on the V CC pin.\n2.2.2 Low power down (LPD)\nThis input signal is used to control an internal 1.8 V regulator delivering the internal supply. When LPD is high, the\nregulator is shut off and its consumption is reduced below 1 µA. The regulator has a turn on time in the 100 µs\nrange, to be added to the boot duration, before the device becomes fully operational. The impedance on LDP pin,\nwhen set high, must not exceed 5 kΩ.\nThis feature is available only on the 10-ball and 12-pin packages. The LPD pin is internally pulled-down.\n2.2.3 Ground (V SS)\nVSS is the reference for the V CC and V DCG supply voltages and V_EH analog output voltage.\nST25DV04K ST25DV16K ST25DV64K\nSignal descriptions\nDS10925  - Rev 11 page 6/197\n2.3 RF link (AC0 AC1)\n2.3.1 Antenna coil (AC0, AC1)\nThese inputs are used to connect the ST25DVxxx device exclusively to an external coil. Do not connect any other\nDC or AC path to AC0 or AC1.\nWhen correctly tuned, the coil is used to power and access the device using the ISO/IEC 15693 and ISO 18000-3\nmode 1 protocols.\n2.4 Process control (V DCG, GPO)\n2.4.1 Driver supply voltage (V DCG)\nThis pin, available only with ST25DVxx-JF version, can be connected to an external DC supply voltage. It\nsupplies only the GPO driver block, not the whole device. If V DCG is left floating, no information is available on the\nGPO pin.\n2.4.2 General purpose output (GPO)\nThe ST25DVxxx feature a configurable output GPO pin used to provide RF activity information to an external\ndevice. ST25DVxx-IE offers a GPO open drain. This GPO pin must be connected to an external pull-up resistor\n(> 4.7 kΩ) to operate.\nThe interrupt consists in pulling the state to a low level, or outputting a low level pulse on the GPO pin.\nST25DVxx-JF offers a GPO CMOS output, which requires to connect V DCG pin to an external power supply. The\ninterrupt consists in setting the state to a high level or outputting a positive pulse on the GPO pin.\nGPO pin is a configurable output signal, and can mix several Interruption modes. By default, the GPO register\nsets the interruption mode as an RF field change detector. It is able to raise various events like RF activity,\nmemory write completion, or fast transfer actions. It can authorize the RF side to directly drive GPO pin using the\nManage GPO command to set the output state or emit a single pulse (for example, to wake up an application.).\nSee Section 5.2  GPO  for details.\n2.5 Energy harvesting analog output (V_EH)\nThis analog output pin is used to deliver the analog voltage V_EH available when the Energy harvesting mode\nis enabled, if the RF field strength is sufficient. When the Energy harvesting mode is disabled, or the RF field\nstrength is not sufficient, V_EH pin is in high-Z state (see Section 5.3  Energy harvesting (EH)  for details).\nEnergy harvesting voltage output is not regulated.\nST25DV04K ST25DV16K ST25DV64K\nRF link (AC0 AC1)\nDS10925  - Rev 11 page 7/197\n3 Power management\n3.1 Wired interface\nOperating supply voltage V CC\nIn contact mode, before selecting the memory and issuing instructions to it, a valid and stable V CC voltage within\nthe specified [V CC(min), V CC(max)] range (see Table 243. I2C operating conditions ) must be applied. To maintain\na stable DC supply voltage, it is recommended to decouple the V CC line with a suitable capacitor (10 to 100 nF),\nclose to the V CC/VSS package pins.\nThis voltage must remain stable and valid until the end of the transmission of the instruction and, for a Write\ninstruction, until the completion of the internal I²C write cycle (t W). Instructions are not taken into account until\ncompletion of the boot sequence (see Figure 5 ).\nFigure 5. Power-up sequence (no RF field, LPD pin tied to V SS or package without LPD pin)\nPower-up by V CC\n(no V CC; VDCG)VCC pin\nInternal supply\nI2CI2C interface ready\nNo access\nallowed\nRF or I2CI2C start I2C stop                \nRF access not allowed\ntboot*\n* When RF field is present before V CC set up, boot is already done and t boot = 0.\n* If the LPD pin follows V CC before going low, t boot = t boot_LPD , and starts only when LPD reaches the the low level.\nDT37969V4\nPower-up conditions\nWhen the power supply is turned on, V CC rises from V SS to V CC. The rise time must not be faster than 1 V/µs.\nDevice reset in I²C mode\nTo prevent unwanted write operations during power-up, a power-on reset (POR) circuit is included. At power-up\n(continuous rise of V CC), the device does not respond to any I²C instruction until V CC has reached the power-on\nreset threshold voltage (lower than the minimum V CC operating voltage defined in Table 243. I2C operating\nconditions ). When V CC passes over the POR threshold, the device is reset and enters the Standby power mode.\nThe device must not be accessed until V CC has reached a valid and stable V CC voltage within the specified\n[VCC(min) , VCC(max) ] range, and the time necessary by the device to set-up (t BootDC ) has passed. In the version\nsupporting LPD pin, the boot takes place only when LPD goes low.\nIn a similar way, during power-down (continuous decrease in V CC), as soon as V CC drops below the power-on\nreset threshold voltage, the device stops responding to any instruction sent to it, and the I2C address counter is\nreset.\nPower-down mode\nDuring power-down (V CC decreasing continuously) the device must be in Standby power mode (mode reached\nafter decoding a Stop condition, assuming that there is no internal write cycle in progress).\nST25DV04K ST25DV16K ST25DV64K\nPower management\nDS10925  - Rev 11 page 8/197\n3.2 Contactless interface\nDevice set in RF mode\nTo ensure a proper boot of the RF circuitry, the RF field must be turned on without any modulation for a minimum\nperiod of time t BootRF . Before this time, the device ignores all received RF commands (see Figure 6 ).\nDevice reset in RF mode\nTo ensure a proper reset of the RF circuitry, the RF field must be turned off (100% modulation) for a minimum\nperiod of time (t RF_OFF ).\nThe RF access can be temporarily or indefinitely disabled by setting the appropriate value in the RF_MNGT or\nRF_MNGT_Dyn registers.\nFigure 6. RF power-up sequence (no DC supply)\nRF interface ready\nPower-up by RF\n(no V CC ; V DCG)\nGPO CMOS versionRF field\nVint_supplytBootRF\nGPO = RF_ACTIVITY\nGPO = FIELD  CHANGEREQ\nEOFANS\nEOF  \nGPO = FIELD CHANGE AND RF_ACTIVITYRF REQUEST RF ANSWERNo access\nallowed\nRF or I2C\nDT37968V2tminCD\nNo answer to RF \nrequest, if anyIT duration\nST25DV04K ST25DV16K ST25DV64K\nContactless interface\nDS10925  - Rev 11 page 9/197\n4 Memory management\n4.1 Memory organization overview\nThe ST25DVxxx memory is divided in four main memory areas:\n• User memory\n• Dynamic registers\n• Fast transfer mode buffer\n• System configuration area\nThe user memory can be divided into four flexible areas. Each area can be individually read- and/or write-\nprotected with one out of three specific 64-bit password.\nThe ST25DVxxx dynamic registers are accessible by RF or I2C host and provide dynamic activity status or allow\ntemporary activation or deactivation of some features.\nThe ST25DVxxx also provides a 256-byte fast transfer mode buffer, acting as a mailbox between RF and I2C\ninterface, allowing fast data transfer between contact and contactless worlds.\nFinally, the ST25DVxxx system configuration area contains static registers to configure the device features, which\ncan be tuned by user. Its access is protected by a 64-bit configuration password.\nThis system configuration area also includes read only device information, such as IC reference, memory size or\nIC revision, as well as a 64-bit block used to store the 64-bit unique identifier (UID), and the AFI (default 00h) and\nDSFID (default 00h) registers. The UID is compliant with the ISO 15693 description, and its value is used during\nthe anticollision sequence (Inventory). The UID value is written by ST on the production line. The AFI register\nstores the application family identifier. The DSFID register stores the data storage family identifier used in the\nanticollision algorithm.\nThe system configuration area includes five additional 64-bit blocks that store an I2C password plus three RF user\narea access passwords, and an RF configuration password.\nST25DV04K ST25DV16K ST25DV64K\nMemory management\nDS10925  - Rev 11 page 10/197\nFigure 7. Memory organization\nArea 1\nArea 2\nArea 3\nArea 4CC File\nDynamic registers\nFast Transfer Mode \n256 Bytes buffer\nStatic configuration registers\nDevice information\nUID, AFI, DSFID\nPasswordsAlways readable\nUser memory \n(EEPROM up to 64-Kbits)\nPassword protected\nSystem configuration\n(EEPROM)\nPassword protectedDynamic configuration \nand activity status\nFast Transfer Mode mailbox\n4.2 User memory\nThis memory is accessible from both RF contactless and I2C wired interfaces.\nFrom RF interface, the user memory is addressed as blocks of 4 bytes, starting at address 0. RF extended read\nand write commands can be used to address all memory blocks. Other read and write commands can address\nonly up to block FFh.\nFrom I2C interface, user memory is addressed as bytes, starting at address 0. Device select must be set with E2\n= 0.\nThe user memory can be read in continuity. Unlike the RF interface, there is no roll-over when the requested\naddress reaches the end of the memory capacity.\nTable 2  shows how memory is seen from RF and I2C interfaces.\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 11/197\nTable 2. User memory as seen by RF and by I2C\nRF command\n(block addressing)User memoryI2C command\n(byte addressing)\nRead Single Block\nRead Multiple Blocks\nFast Read Single Block\nFast Read Multiple Blocks\nWrite Single Block\nWrite Multiple Blocks\nExt Read Single Block\nExt Read Multiple Blocks\nFast Ext Read Single Block\nFast Ext Read Multi Blocks\nExt Write Single Block\nExt Write Multiple BlocksRF block (00)00h\nI2C Read command\nI2C Write command\nDevice select E2 = 0I2C byte\n0003hI2C byte\n0002hI2C byte\n0001hI2C byte\n0000h\nRF block (00)01h\nI2C byte\n0007hI2C byte\n0006hI2C byte\n0005hI2C byte\n0004h\nRF block (00)02h\nI2C byte\n000BhI2C byte\n000AhI2C byte\n0009hI2C byte\n0008h\n....\nRF block (00)7Fh (1)\nI2C byte\n01FFhI2C byte\n01FEhI2C byte\n01FDhI2C byte\n01FCh\n....\nRF block (00)FFh (2)\nI2C byte\n03FFhI2C byte\n03FEhI2C byte\n03FDhI2C byte\n03FCh\nExt Read Single Block\nExt Read Multiple Blocks\nFast Ext Read Single Block\nFast Ext Read Multi Blocks\nExt Write Single Block\nExt Write Multiple BlocksRF block 0100h\nI2C byte\n0403hI2C byte\n0402hI2C byte\n0401hI2C byte\n0400h\n....\nRF block 01FFh (3)\nI2C byte\n07FFhI2C byte\n07FEhI2C byte\n07FDhI2C byte\n07FCh\n....\nRF block 07FFh (4)\nI2C byte\n1FFFhI2C byte\n1FFEhI2C byte\n1FFDhI2C byte\n1FFCh\n \n1. Last block of user memory in ST25DV04K ‑XX..\n2. Last block accessible with Read Single Block, Read Multiple Blocks, Fast Read Single Block, Fast Read Multiple Blocks, Write Single Block\nand Write Multiple Blocks RF commands.\n3. Last block of user memory in ST25DV16K ‑XX.\n4. Last block of user memory in ST25DV64K ‑XX.\n \nNote: In the factory all blocks of user memory are initialized to 00h.\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 12/197\n4.2.1 User memory areas\nThe user memory can be split into different areas, each one with a distinct access privilege.\nRF and I2C read and write commands are legal only within the same zone:\n• In RF, a multiple read or a multiple write command is not executed and returns the error code 0Fh if\naddresses cross the area borders.\n• In I2C, a read data always return FFh after crossing an area border. A write command is not acknowledged\nand not executed if the command crosses the area border.\nEach user memory area is defined by its ending block address ENDA i. The starting block address is defined by\nthe end of the preceding area.\nThere are three ENDA i registers in the configuration system memory, used to define the end block addresses of\nArea 1, Area 2 and Area 3. The end of Area 4 is always the last block of memory, and is not configurable.\nFigure 8. ST25DVxxx user memory areas\nArea1\n(8 Blocks/32 Bytes minimum)\nArea2\nArea3\nArea4ST25DV user memory\nENDA1\nENDA2\nENDA3Areas limit \nregistersBlock/Byte 0000h\nLast Block/Byte \nof user memory\nOn factory delivery all ENDA i are set to their maximum value, only Area1 exists and includes the full user\nmemory.\nA granularity of 8 blocks (32 bytes) is offered to code area ending points.\nAn area end limit is coded as follows in ENDA i registers:\n• Last RF block address of area = 8 * ENDA i + 7 → ENDA i = int(Last Area i RF block address / 8)\n• Last I2C byte address of area = 32 * ENDA i + 31 → ENDA i = int(Last Area i I2C byte address / 32)\n• As a consequence, ENDA1 = 0 minimum size of Area 1 is 8 blocks (32 bytes).\nTable 3. Maximum user memory block and byte addresses and ENDA i value\nDeviceLast user memory block address\nseen by RFLast user memory byte address seen\nby I2CMaximum ENDA i value\nST25DV04K-xx 007Fh 01FFh 0Fh\nST25DV16K-xx 01FFh 07FFh 3Fh\nST25DV64K-xx 07FFh 1FFFh FFh\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 13/197\nTable 4. Areas and limit calculation from ENDA i registers\nArea Seen from RF interface Seen from I2C interface\nArea 1Block 0000h\n…\nBlock (ENDA1 * 8) + 7Byte 0000h\n…\nByte (ENDA1 * 32) + 31\nArea 2Block (ENDA1 + 1) * 8\n…\nBlock (ENDA2 * 8) + 7Byte (ENDA1 + 1) * 32\n…\nByte (ENDA2 * 32) + 31\nArea 3Block (ENDA2 + 1) * 8\n…\nBlock (ENDA3 * 8) + 7Byte (ENDA2 + 1) * 32\n…\nByte (ENDA3 * 32) + 31\nArea 4Block (ENDA3 + 1) * 8\n…\nLast memory blockByte (ENDA3 + 1) * 32\n…\nLast memory byte\nThe organization of user memory in areas has the following characteristics:\n• At least one area exists (Area1), starting at block/byte address 0000h and finishing at ENDA1, with ENDA1\n= ENDA2 = ENDA3 = End of user memory (factory setting).\n• Two areas can be defined by setting ENDA1 < ENDA2 = ENDA3 = End of user memory.\n• Three areas can be defined by setting ENDA1 < ENDA2 < ENDA3 = End of user memory.\n• A maximum of four areas can be defined by setting ENDA1 < ENDA2 < ENDA3 < End of user memory.\n• Area 1 specificities:\n– Start is always block/byte address 0000h\n– Minimum size is 8 blocks (32 bytes) when ENDA1 = 00h\n– Always readable\n• The last area always finishes on the last user memory block/byte address (ENDA4 does not exist).\n• All areas are contiguous: end of Area(n) + one block/byte address is always start of Area(n+1).\nArea size programming\nRF user must first open the RF configuration security session to write ENDAi registers.\nI2C host must first open I2C security session to write ENDAi registers.\nWhen programming an ENDAi register, the following rule must be respected:\n• ENDAi-1 < ENDAi ≤ ENDAi + 1 = End of memory.\nThis means that prior to programming any ENDAi register, its successor (ENDAi + 1) must first be programmed to\nthe last block/byte of memory:\n• Successful ENDA3 programming condition: ENDA2 < ENDA3 ≤ End of user memory\n• Successful ENDA2 programming condition: ENDA1 < ENDA2 ≤ ENDA3 = End of user memory\n• Successful ENDA1 programming condition: ENDA1 ≤ ENDA2 = ENDA 3 = End of user memory\nIf this rule is not respected, an error 0Fh is returned in RF, NoAck is returned in I2C, and programming is not\ndone. To respect this rule, the following procedure is recommended when programming areas size (even for\nchanging only one):\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 14/197\n1. Ends of Areas 3 and 2 must first be set to the end of memory respecting the following order:\na. If ENDA3 ≠ end of user memory, then set ENDA3 = end of memory; else, do not write ENDA3.\nb. If ENDA2 ≠ end of user memory, then set ENDA2 = end of memory; else, do not write ENDA2.\n2. Then, desired area limits can be set respecting the following order:\na. Set new ENDA1 value.\nb. Set new ENDA2 value, with ENDA2 > ENDA1\nc. Set new ENDA3 value, with ENDA3 > ENDA2\nExample of successive user memory area setting (for a ST25DV64K-xx):\n1. Initial state, two areas are defined:\na. ENDA1 = 10h (last block of Area 1: (10h * 8) + 7 = 0087h)\nb. ENDA2 = FFh (last block of Area 2: (FFh * 8) + 7 = 07FFh)\nc. ENDA3 = FFh (no Area 3)\n◦ Area 1 from block 0000h to 0087h (136 blocks)\n◦ Area 2 from block 0088h to 07FFh (1912 blocks)\n◦ There is no Area 3\n◦ There is no Area 4\n2. Split of user memory in four areas:\na. ENDA3 is not updated as it is already set to end of memory\nb. ENDA2 is not updated as it is already set to end of memory\nc. Set ENDA1 = 3Fh (last block of Area 1: (3Fh * 8) + 7 = 01FFh)\nd. Set ENDA2 = 5Fh (last block of Area 1: (5Fh * 8) + 7 = 02FFh)\ne. Set ENDA3 = BFh (last block of Area 1: (BFh * 8) + 7 = 05FFh)\n◦ Area1 from block 0000h to 01FFh (512 blocks)\n◦ Area2 from block 0200h to 02FFh (256 blocks)\n◦ Area3 from block 0300h to 05FFh (768 blocks)\n◦ Area4 from block 0600h to 07FFh (512 blocks).\n3. Return to a split in two equal areas:\na. Set ENDA3 = FFh\nb. Set ENDA2 = FFh\nc. Set ENDA1 = 7Fh (last block of Area 1: (7Fh * 8) + 7 = 03FFh)\n◦ Area1 from block 0000h to 03FFh (1024 blocks)\n◦ Area2 from block 0400h to 07FFh (1024 blocks)\n◦ There is no Area3\n◦ There is no Area 4\nProgramming ENDA3 to FFh in step 2.a results in an error, since rule ENDAi - 1 < ENDAi is not respected\n(ENDA2 = ENDA3 in that case).\nRegisters for user memory area configuration\nTable 5. ENDA1 access\nRF I2C\nCommand Type Address Type\nRead Configuration (code A0h) @05h\nWrite Configuration (code A1h) @05hR always, W if RF configuration security session is\nopen and configuration not lockedE2 = 1, 0005hR always, W if I2C security\nsession is open\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 15/197\nTable 6. ENDA1\nBit Name Function Factory value\nb7-b0 ENDA1End Area 1 = 8 * ENDA1 + 7 when expressed in blocks (RF)\nEnd Area 1 = 32 * ENDA1 + 31 when expressed in bytes (I2C)ST25DV04K-xx: 0Fh\nST25DV16K-xx: 3Fh\nST25DV64K-xx: FFh\nNote: Refer to Table 11. System configuration memory map  for ENDA1 register.\nTable 7. ENDA2 access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @07h\nWrite Configuration (cmd code A1h) @07hR always, W if RF configuration security\nsession is open and configuration not lockedE2 = 1, 0007hR always, W if I2C security\nsession is open\nTable 8. ENDA2\nBit Name Function Factory value\nb7-b0 ENDA2End Area 2 = 8 * ENDA2 + 7 when expressed in blocks (RF)\nEnd Area 2 = 32 * ENDA2 + 31 when expressed in bytes (I2C)ST25DV04K-xx: 0Fh\nST25DV16K-xx: 3Fh\nST25DV64K-xx: FFh\nNote: Refer to Table 11. System configuration memory map  for ENDA2 register.\nTable 9. ENDA3 access\nRF I2C\nCommand Type Address Type\nRead Configuration (code A0h) @09h\nWrite Configuration (code A1h) @09hR always, W if RF configuration security session is\nopen and configuration not lockedE2 = 1, 0009hR always, W if I2C security\nsession is open\nTable 10. ENDA3\nBit Name Function Factory value\nb7-b0 ENDA3End Area 3 = 8 x ENDA3 + 7 when expressed in blocks (RF)\nEnd Area 3 = 32 x ENDA3 + 31 when expressed in bytes (I2C)ST25DV04K-xx: 0Fh\nST25DV16K-xx: 3Fh\nST25DV64K-xx: FFh\nNote: Refer to Table 11. System configuration memory map  for ENDA3 register.\nST25DV04K ST25DV16K ST25DV64K\nUser memory\nDS10925  - Rev 11 page 16/197\n4.3 System configuration area\nIn addition to EEPROM user memory, ST25DVxxx includes a set of static registers located in the system\nconfiguration area memory (EEPROM nonvolatile registers). Those registers are set during device configuration\n(i.e.: area extension), or by the application (i.e.: area protection). Static registers content is read during the boot\nsequence and define basic ST25DVxxx behavior.\nIn RF, the static registers located in the system configuration area can be accessed via dedicated Read\nConfiguration and Write Configuration commands, with a pointer acting as the register address.\nThe RF configuration security session must first be open, by presenting a valid RF configuration password, to\ngrant write access to system configuration registers.\nThe system configuration area write access by RF can also be deactivated by I2C host.\nIn I2C static registers located in the system configuration area can be accessed with I2C read and write\ncommands with device select E2=1. Readable system areas could be read in continuity.\nI2C security session must first be open, by presenting a valid I2C password, to grant write access to system\nconfiguration registers.\nTable 11. System configuration memory map  shows the complete map of the system configuration area, as seen\nby RF and I2C interface.\nTable 11. System configuration memory map\nRF access Static Register I2C access\nAddress Type Name Function Device select Address Type\n00h RW (1) GPO Enable/disable ITs on GPO E2=1 0000h RW (2)\n01h RW(1) IT_TIME Interruption pulse duration E2=1 0001h RW(2)\n02h RW(1) EH_MODE Energy Harvesting default strategy after Power ON E2=1 0002h RW(2)\n03h RW(1) RF_MNGT RF interface state after Power ON E2=1 0003h RW(2)\n04h RW(1) RFA1SS Area1 RF access protection E2=1 0004h RW(2)\n05h RW(1) ENDA1 Area 1 ending point E2=1 0005h RW(2)\n06h RW(1) RFA2SS Area2 RF access protection E2=1 0006h RW(2)\n07h RW(1) ENDA2 Area 2 ending point E2=1 0007h RW(2)\n08h RW(1) RFA3SS Area3 RF access protection E2=1 0008h RW(2)\n09h RW(1) ENDA3 Area 3 ending point E2=1 0009h RW(2)\n0Ah RW(1) RFA4SS Area4 RF access protection E2=1 000Ah RW(2)\nNo access I2CSS Area 1 to 4 I2C access protection E2=1 000Bh RW(2)\nN/A RW (3) (4)LOCK_CCFILE Blocks 0 and 1 RF Write protection E2=1 000Ch RW(2)\n0Dh RW(1) MB_MODE Fast transfer mode state after power ON E2=1 000Dh RW(2)\n0Eh RW(1) MB_WDGMaximum time before the message is automatically\nreleasedE2=1 000Eh RW(2)\n0Fh RW(1) LOCK_CFG Protect RF Write to system configuration registers E2=1 000Fh RW(2)\nN/A WO (5) LOCK_DSFID DSFID lock status E2=1 0010h RO\nNA WO (6) LOCK_AFI AFI lock status E2=1 0011h RO\nN/A RW(5) DSFID DSFID value E2=1 0012h RO\nN/A RW(6) AFI AFI value E2=1 0013h RO\nN/ARO MEM_SIZE Memory size value in blocks, 2 bytes E2=1 0014h to 0015h RO\nRO BLK_SIZE Block size value in bytes E2=1 0016h RO\nN/A RO IC_REF IC reference value E2=1 0017h RO\nNA RO UID Unique identifier, 8 bytes E2=1 0018h to 001Fh RO\nST25DV04K ST25DV16K ST25DV64K\nSystem configuration area\nDS10925  - Rev 11 page 17/197\nRF access Static Register I2C access\nAddress Type Name Function Device select Address Type\nNo accessIC_REV IC revision E2 = 1 0020h RO\n- ST reserved E2 = 1 0021h RO\n- ST reserved E2=1 0022h RO\n- ST reserved E2 = 1 0023h RO\nI2C_PWD I2C security session password, 8 bytes E2=1 0900h to 0907h R/W (7) (8)\nN/A WO (9) RF_PWD_0 RF configuration security session password, 8 bytes\nNo accessN/A WO(9) RF_PWD_1 RF user security session password 1, 8 bytes\nN/A WO(9) RF_PWD_2 RF user security session password 2, 8 bytes\nN/A WO(9) RF_PWD_3 RF user security session password 3, 8 bytes\n \n1. Write access is granted if RF configuration security session is open and configuration is not locked (LOCK_CFG register equals to 0).\n2.Write access if I2C security session is open.\n3. Write access to bit 0 if Block 00h is not already locked and to bit 1 if Block 01h is not already locked.\n4. LOCK_CCFILE content is only readable through reading the Block Security Status of blocks 00h and 001h (see Section 5.6.3  User memory\nprotection )\n5. Write access if DSFID is not locked\n6. Write access if AFI is not locked.\n7.Write access with I2C Write Password command, only after presenting a correct I2C password.\n8.Read access is granted if I2C security session is open.\n9. Write access only if corresponding RF security session is open.\n \nST25DV04K ST25DV16K ST25DV64K\nSystem configuration area\nDS10925  - Rev 11 page 18/197\n4.4 Dynamic configuration\nST25DV has a set of dynamic registers that allow temporary modification of its behavior or report on its activity.\nDynamic registers are volatile and not restored to their previous values after POR.\nSome static registers have an image in dynamic registers: dynamic register value is initialized with the static\nregister value and may be updated by the application to modify the device behavior temporarily (i.e.: set reset\nof Energy Harvesting). When a valid change occurs in a static register, in RF or I2C, the corresponding dynamic\nregister is automatically updated.\nOther, dynamic registers, automatically updated, contain indication on ST25DV activity. (i.e.: IT_STS_Dyn gives\nthe interruption’s status or MB_CTRL_Dyn gives the fast transfer mode mailbox control).\nIn RF, dynamic registers can be accessed via dedicated (Fast) Read Dynamic Configuration and (Fast) Write\nDynamic Configuration commands, with a pointer acting as the register address. No password is needed to\naccess dynamic registers.\nIn I2C, dynamic registers can be accessed with I2C read and write commands with device select E2=0. Dynamic\nregisters can be read in continuity. Dynamic registers and fast transfer mode mailbox can be read in continuity,\nbut not written in continuity. No password is needed to access dynamic registers.\nTable 12. Dynamic registers memory map  shows the complete map of dynamic registers, as seen by RF interface\nand by I2C interface.\nTable 12. Dynamic registers memory map\nRF access Dynamic Registers I2C access\nAddress Type Name FunctionDevice\nselectAddress Type\n00h RO GPO_CTRL_Dyn GPO control E2 = 0 2000h R/W\nNo access - ST Reserved E2 = 0 2001h RO\n02h R/W EH_CTRL_Dyn Energy Harvesting management & usage status E2 = 0 2002h R/W\nNo accessRF_MNGT_Dyn RF interface usage management E2 = 0 2003h R/W\nI2C_SSO_Dyn I2C security session status E2 = 0 2004h RO\nIT_STS_Dyn Interruptions Status E2 = 0 2005h RO\n0Dh R/W MB_CTRL_Dyn Fast transfer mode control and status E2 = 0 2006h R/W\nNA RO MB_LEN_Dyn length of fast transfer mode message E2 = 0 2007h RO\nST25DV04K ST25DV16K ST25DV64K\nDynamic configuration\nDS10925  - Rev 11 page 19/197\n4.5 Fast transfer mode mailbox\nST25DVxxx fast transfer mode uses a dedicated mailbox buffer for transferring messages between RF and I2C\nworlds. This mailbox contains up to 256 Bytes of data which are filled from the first byte.\nFast transfer mode mailbox is accessed in bytes from both RF and I2C.\nIn RF, mailbox is read via a dedicated (Fast) Read Message command. Read can start from any address value\ninside the mailbox, between 00h and FFh. Writing in the mailbox is done via the (Fast) Write Message command\nin one shot, always starting at mailbox address 00h. No password is needed to access mailbox from RF, but fast\ntransfer mode must be enabled.\nIn I2C, mailbox read can start from any address value between 2008h and 2107h. Write mailbox MUST start from\naddress 2008h to a max of 2107h. No password is needed to access mailbox from I2C, but fast transfer mode\nmust be enabled.\nTable 13. Fast transfer mode mailbox memory map  shows the map of fast transfer mode mailbox, as seen by RF\ninterface and by I2C interface.\nTable 13. Fast transfer mode mailbox memory map\nRF access Fast transfer mode buffer I2C access\nAddress Type Name FunctionDevice\nselectAddress Type\n00h R/W MB_Dyn Byte 0\nFast transfer mode buffer (256-Bytes)E2 = 0 2008h R/W\n01h R/W MB_Dyn Byte 1 E2 = 0 2009h R/W\n… … … E2 = 0 ... ...\nFEh R/W MB_Dyn Byte 254 E2 = 0 2106h R/W\nFFh R/W MB_Dyn Byte 255 E2 = 0 2107h R/W\nST25DV04K ST25DV16K ST25DV64K\nFast transfer mode mailbox\nDS10925  - Rev 11 page 20/197\n5 ST25DVxxx specific features\nST25DVxxx offers the following features:\n• A fast transfer mode (FTM), to achieve a fast link between RF and contact worlds, via a 256 byte buffer\ncalled Mailbox. This mailbox dynamic buffer of 256 byte can be filled or emptied via either RF or I2C.\n• A GPO pin, which indicates incoming event to the contact side, like RF Field changes, RF activity in\nprogress, RF writing completion or Mailbox message availability.\n• An Energy Harvesting element to deliver µW of power when external conditions make it possible.\n• RF management, which allows ST25DVxxx to ignore RF requests.\nAll these features can be programmed by setting static and/or dynamic registers of the ST25DVxxx. ST25DVxxx\ncan be partially customized using configuration registers located in the E2 system area.\nThese registers are:\n• dedicated to Data Memory organization and protection ENDA i, I2CSS, RFAiSS, LOCK_CCFILE.\n• dedicated to fast transfer mode MB_WDG, MB_MODE\n• dedicated to observation, GPO, IT_TIME\n• dedicated to RF , RF_MNGT, EH_MODE\n• dedicated the device’s structure LOCK_CFG\nA set of additional registers allows to identify and customize the product (DSFID, AFI, IC_REF, etc.).\nIn I²C,\nRead accesses to the static configuration register is always allowed, except for passwords. For dedicated\nregisters, write access is granted after prior successful presentation of the I2C password. Configuration register\nare located from @00h to 0Fh in the system area (device code 111)\nIn RF\nDedicated commands Read Configuration and Write Configuration must be used to access the static\nconfiguration registers. Update is only possible when the access right was granted by presenting the RF\nconfiguration password (RF_PWD_0), and if the system configuration was not previously locked by the I2C host\n(LOCK_CFG=1), which acts as security master.\nAfter any valid write access to the static configuration registers, the new configuration is immediately applied.\nSome of the static registers have a dynamic image (notice _Dyn) preset with the static register value:\nGPO_CTRL_Dyn, EH_CTRL_Dyn, RF_MNGT_Dyn and MB_CTRL_Dyn.\nWhen it exists, ST25DVxxx uses the dynamic configuration register to manage its processes. A dynamic\nconfiguration register updated by the application will recover its default static value after a Power On Reset\n(POR).\nOther dynamic registers are dedicated to process monitoring:\n• I2C_SSO_Dyn is dedicated to data memory protection\n• MB_LEN_Dyn, MB_CTRL_Dyn are dedicated to fast transfer mode\n• IT_STS_Dyn is dedicated to interrupt\nIn I2C, read and write of the Dynamic registers is done using usual I2C read & write command at dedicated\naddress. (E2 =0 in device select).\nIn RF read or write accesses to the Dynamic registers are associated to the dedicated commands, Read Dynamic\nConfiguration, Write Dynamic Configuration and Read Message Length.\nST25DV04K ST25DV16K ST25DV64K\nST25DVxxx specific features\nDS10925  - Rev 11 page 21/197\n5.1 Fast transfer mode (FTM)\n5.1.1 Fast transfer mode registers\nStatic Registers\nTable 14. MB_MODE access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @0Dh\nWrite Configuration (cmd code A1h) @0DhR always, W if RF configuration security\nsession is open and configuration not\nlockedE2=1, 000DhR always, W if I2C security\nsession is open\nTable 15. MB_MODE\nBit Name Function Factory Value\nb0 MB_MODE0: Enabling fast transfer mode is forbidden.\n1: Enabling fast transfer mode is authorized.0b\nb7-b1 RFU - 0000000b\nNote: Refer to Table 11. System configuration memory map  for the MB_MODE register.\nTable 16. MB_WDG access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @0Eh\nWrite Configuration (cmd code A1h) @0EhR always, W if RF configuration security\nsession is open and configuration not\nlockedE2=1, 000EhR always, W if I2C security\nsession is open\nTable 17. MB_WDG\nBit Name Function Factory Value\nb2-b0 MB_WDGWatch dog duration = 2(MB_WDG-1)x30ms±6\nIf MD_WDG = 0, then watchdog duration is infinite111b\nb7-b3 RFU - 00000b\nNote: Refer to Table 11. System configuration memory map  for the MB_WDG register.\nDynamic Registers\nTable 18. MB_CTRL_Dyn access\nRF I2C\nCommand Type Address Type\nRead Dynamic Configuration (cmd code ADh) @0Dh\nFast Read Dynamic Configuration (cmd code CDh) @0Dh\nWrite Dynamic Configuration (cmd code AEh) @0Dh\nFast Write Dynamic Configuration (cmd code CEh) @0Dhb0: R always, W always\nb7-b1: ROE2 = 0, 2006hb0: R always, W always\nb7-b1: RO\nST25DV04K ST25DV16K ST25DV64K\nFast transfer mode (FTM)\nDS10925  - Rev 11 page 22/197\nTable 19. MB_CTRL_Dyn\nBit Name Function Factory Value\nb0 MB_EN (1)0: Disable FTM, FTM mailbox is empty\n1: Enable FTM0b\nb1 HOST_PUT_MSG0: No I2C message in FTM mailbox\n1: I2C has Put a message in FTM mailbox0b\nb2 RF_PUT_MSG0: No RF message in FTM mailbox\n1: RF has Put message in FTM mailbox0b\nb3 RFU - 0b\nb4 HOST_MISS_MSG0: No message missed by I2C\n1: I2C did not read RF message before watchdog time out0b\nb5 RF_MISS_MSG0: No message missed by RF\n1: RF did not read message before watchdog time out0b\nb6 HOST_CURRENT_MSG0: No message or message not coming from I2C\n1: Current Message in FTM mailbox comes from I2C0b\nb7 RF_CURRENT_MSG0: No message or message not coming from RF\n1: Current Message in FTM mailbox comes from RF0b\n \n1. MB_EN bit is automatically reset to 0 if MB_MODE register is reset to 0.\n \nNote: Refer to Table 12. Dynamic registers memory map  for the MB_CTRL_Dyn register.\nTable 20. MB_LEN_Dyn access\nRF I2C\nCommand Type Address Type\nRead Message Length (cmd code ABh)\nFast Read Message Length (cmd code CBh)RO E2 = 0, 2007h RO\nTable 21. MB_LEN_Dyn\nBit Name Function Factory Value\nb7-b0 MB_LENSize in byte, minus 1 byte, of message contained in FTM\nmailbox (automatically set by ST25DVxxx)0h\nNote: Refer to Table 12. Dynamic registers memory map  for the MB_LEN_Dyn register.\n5.1.2 Fast transfer mode usage\nST25DV acts as mailbox between RF (reader, smartphone, ...) and an I2C host (microcontroller...). Each interface\ncan send a message containing up to 256 bytes of data to the other interface through that mailbox.\nTo send data from RF reader to I2C host, fast transfer mode must be enabled, the mailbox must be free, V CC\npower must be present, and the RF user must first writes the message containing data in the mailbox.\nI2C host is then informed (by interruption on GPO output or polling on MB_CTRL_Dyn register) that a message\nfrom RF is present in the mailbox.\nOnce the complete message has been read by I2C, mailbox is considered free again and is available for receiving\na new message (data is not cleared).\nThe RF user is informed that the message has been read by the I2C host by polling on MB_CTRL_Dyn register.\nST25DV04K ST25DV16K ST25DV64K\nFast transfer mode (FTM)\nDS10925  - Rev 11 page 23/197\nFigure 9. RF to I2C fast transfer mode operation\nI2C hostST25DV\nFast Transfer Mode mailbox\n(256 Bytes)Dynamic registers\nMB_LEN_Dyn\nMB_CRTL_Dyn\nStatic registers\nMB_MODE\nMB_WDGISO/IEC \n15693 readerI2C\nGPO/RF_PUT_MSGRF message1Mb/s 26.5kb/s\nTo send data from the I2C host to the RF reader, fast transfer mode must be enabled, the mailbox must be free,\nVCC power must be present, and the I2C host must first write the message containing data in the mailbox.\nThe RF user must poll on MB_CTRL_Dyn register to check for the presence of a message from I2C in the\nmailbox.\nOnce the complete message has been read by RF user, mailbox is considered free again and is available for\nreceiving a new message (data is not cleared).\nThe I2C host is informed that message has been read by RF user through a GPO interruption or by polling on the\nMB_CTRL_Dyn register.\nFigure 10. I2C to RF fast transfer mode operation\nI2C hostST25DV\nFast Transfer Mode mailbox\n(256 Bytes)Dynamic registers\nMB_LEN_Dyn\nMB_CRTL_Dyn\nStatic registers\nMB_MODE\nMB_WDGISO/IEC \n15693 readerI2C\nGPO/RF_GET_MSGHost message\n1Mb/s\nUp to \n53kb/s\nVCC supply source is mandatory to activate this feature.\nNo precedence rule is applied: the first request is served first.\nST25DV04K ST25DV16K ST25DV64K\nFast transfer mode (FTM)\nDS10925  - Rev 11 page 24/197\nAdding a message is only possible when fast transfer mode is enabled (MB_EN=1) and mailbox is free\n(HOST_PUT_MSG and RF_PUT_MSG cleared, which is the case after POR or after complete reading of I2C\nmessage by RF, and complete reading of RF message by I2C).\nA watchdog limits the message availability in time: when a time-out occurs, the mailbox is considered free, and\nthe HOST_MISS_MSG or RF_MISS_MSG bits is set into MB_CTRL_Dyn register. The data contained in the\nmailbox is not cleared after a read or after the watchdog has been triggered: message data is still available\nfor read and until fast transfer mode is disabled. HOST_CURRENT_MSG and RF_CURRENT_MSG bits are\nindicating the source of the current data.\nThe message is stored in a buffer (256 Bytes), and the write operation is done immediately. .\nCaution: The data written in user or system memory (EEPROM), either from I2C or from RF, transits via the 256-Bytes\nfast transfer mode's buffer. Consequently fast transfer mode must be deactivated (MB_EN=0) before starting\nany write operation in user or system memory, otherwise command will be NotACK for I2C or get an answer 0Fh\nfor RF and programming is not done.\nI2C access to mailbox\nThe access by I2C can be done by dedicated address mapping to mailbox (2008h to 2107h) with device identifier\nE2 = 0.\nI2C reading operation does not support rollover. Therefore data out is set to FFh when the counter reaches the\nmessage end.\nThe RF_PUT_MSG is cleared after reaching the STOP consecutive to reading the last message byte, and the\nmailbox is considered free (but the message is not cleared and it is still present in the mailbox).\nA I2C reading operation will never clear HOST_PUT_MSG, and the message remains available for RF.\nAn I2C read can start at any address inside the mailbox (between address 2008h and 2107h).\nA I2C write operation must start from the first mailbox location, at address 2008h. After reaching the Mailbox\nborder at address 2107h all bytes are NACK and the command is not executed (rollover feature not supported).\nAt the end of a successful I2C message write, the message length is automatically set into MB_LEN_Dyn register,\nand HOST_PUT_MSG bit is set into MB_CTRL_Dyn register, and the write access to the mailbox is not possible\nuntil the mailbox has been released again. MB_LEN_Dyn contains the size of the message in byte, minus 1.\nRF access to mailbox\nThe RF Control & Access to mailbox is possible using dedicated custom commands:\n• Read Dynamic Configuration and Fast Read Dynamic Configuration to check availability of mailbox.\n• Write Dynamic Configuration and Fast Write Dynamic configuration to enable or disable fast transfer mode.\n• Read Message Length and Fast Read Message Length to get the length of the contained message,\n• Read Message and Fast Read Message to download the content of the mailbox,\n• Write Message and Fast Write Message to put a new message in mailbox. (New length is automatically\nupdated after completion of a successful Write Message or Fast Write Message command).\nHOST_PUT_MSG is cleared following a valid reading of the last message byte, and mailbox is considered free\n(but message is not cleared and is still present in the mailbox).\nA RF read can start at any address of inside the message, but return an error 0Fh if trying to read after the last\nbyte of the message.\nA RF reading operation will never clear RF_PUT_MSG , the message will remain available for I2C.\nAt the end of a successful RF message write, the message length is automatically set in MB_LEN_Dyn register,\nand RF_PUT_MSG bit is set in MB_CTRL_Dyn register. and write access to the mailbox is not possible until\nmailbox has been freed again.\nThe presence of a DC supply is mandatory to get RF access to the mailbox. VCC_ON can be checked reading\nthe dynamic register EH_CTRL_Dyn.\nTo get more details about sequences to prepare and initiate a Fast Transfer, to detect progress of a fast transfer\nor to control and execute a fast transfer, please refer to AN4910. How to exchange data between wired (I2C) and\nwireless world (RF ISO15693) using fast transfer mode supported by ST25DVxxx).\nST25DV04K ST25DV16K ST25DV64K\nFast transfer mode (FTM)\nDS10925  - Rev 11 page 25/197\nFigure 11. Fast transfer mode mailbox access management.\nWatchdog trigI2C read full msgRF read full msg\nI2C read \nMB_CTRL_DynRF read\nMB_CTRL_DynFTM disabled\nMB_CTRL_Dyn=00h\nNo access\nFTM enabled\nMailbox empty\nMB_CTRL_Dyn=01h\nR/W accessFTM enabled\nRF Message\nMB_CTRL_Dyn=85h\nRead access\nFTM enabled\nMailbox free\nMB_CTRL_Dyn=41/81h\nR/W accessFTM enabled\nI2C Message\nMB_CTRL_Dyn=43h\nRead accessMB_EN=00h or \nVCC OFF\nFTM enabled\nMailbox free\nMB_CTRL_Dyn=61/91h\nR/W accessMB_EN=00h or \nVCC OFF\nMB_EN=00h or \nVCC OFFVCC ON and \nMB_EN=01h\nI2C write msg RF write msgI2C read msgRF read msg\nWatchdog trigMailbox free\nNote: Assuming MB_MODE=01h\nAssuming no error occurred\n5.2 GPO\nGPO signal is used to alert the I2C host of external RF events or ST25DVxxx processes activity. Several causes\ncould be used to request a host interruption. RF user can also directly drive GPO pin level using a dedicated RF\ncommand.\n5.2.1 Interrupt capabilities on RF events\nThe ST25DVxxx devices support multi interruption mode, and can report several events occurring through RF\ninterface.\nIn this chapter, all drawings refer to the open drain version of GPO output (ST25DVxxK-IE).\nThe reader can retrieve the behaviour of CMOS version (ST25DVxxK-JF) by inverting the GPO curve polarity, and\nreplacing text “released” or “high-Z” by “pull to ground”.\nSupported RF events are listed hereafter:\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 26/197\nRF_USER:\n• GPO output level is controlled by Manage GPO command (set or reset)\n• When RF_USER is activated, GPO level is changed after EOF of ST25DV response to a Manage GPO set\nor reset command (see Section 7.6.30  Manage GPO ).\n• RF_USER is prevalent over all other GPO events when set by Manage GPO command (other interrupts\nare still visible in IT_STS_Dyn status register, but do not change GPO output level).\nFigure 12. RF_USER sequence\n2) VCD sends a ManageGPO command with value 01h (reset GPO) and ST25DV replies. \nGPO/RF_USER is set high-Z low after ST25DV response.\nS\nO\nFE\nO\nF4) VCD sends a ManageGPO command (any value) and ST25DV stays quiet (command not for this \nVICC, or quiet state). GPO/RF_USER remains high-Z.\nManageGPO\ncommandGPO/RF_USER (OD)\nGPO/RF_USER (OD)S\nO\nFManageGPO\n01h \ncommandE\nO\nF1) VCD sends a ManageGPO command with value 00h (set GPO) and ST25DV replies. \nGPO/RF_USER is tied low after ST25DV response.\nt1\nGPO/RF_USER (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFManageGPO\n00h \ncommandE\nO\nF\n3) VCD sends a ManageGPO command (any value) and ST25DV replies with error. \nGPO/RF_USER remains high-Z.\nGPO/RF_USER (OD)S\nO\nFManageGPO\ncommandE\nO\nFt1 S\nO\nFE\nO\nFST25DV\nreply\nt1 S\nO\nFE\nO\nFST25DV\nreply\n5) VCD sends any command other than ManageGPO command and ST25DV replies. \nGPO/RF_USER remains high-Z.\nGPO/RF_USER (OD)S\nO\nFAny other \ncommandE\nO\nFt1/Wt S\nO\nFE\nO\nFST25DV\nreply\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 27/197\nRF_ACTIVITY :\n• GPO output level reflects the RF activity.\n• When RF_ACTIVITY is activated, a GPO output level change from RF command EOF to ST25DV\nresponse EOF.\nFigure 13. RF_ACTIVITY sequence\n2) VCD sends a write command and ST25DV replies after write completed. GPO/RF_ACTIVITY is \nreleased after ST25DV response.\nS\nO\nFE\nO\nF5) VCD sends a command and ST25DV stays quiet (Stay Quiet command, command not for this \nVICC, or quiet state). GPO/RF_ACTIVITY remains high-Z.(m*)W t\nVCD\nCommandGPO/RF_ACTIVITY (OD)\nGPO/RF_ACTIVITY (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite\ncommandE\nO\nF1) VCD sends a command and ST25DV replies. GPO/RF_ACTIVITY is released after ST25DV \nresponse.\nt1\nGPO/RF_ACTIVITY (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFVCD\ncommandE\nO\nF\n3) VCD sends a write command with option flag set to 1, and ST25DV replies after receiving EOF. \nGPO/RF_ACTIVITY is released after ST25DV response.\n>(m*)W t\nGPO/RF_ACTIVITY (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite\ncommandE\nO\nFE\nO\nFt1\n4) VCD sends an Inventory 16 slots command, and ST25DV replies in its slot. GPO/RF_ACTIVITY is \nreleased after ST25DV response.\nGPO/RF_ACTIVITY (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFInventory\ncommandE\nO\nFE\nO\nFt1 E\nO\nF\nSlot 1 Slot n\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 28/197\nRF_INTERRUPT:\n• A pulse is emitted on GPO by Manage GPO command (interrupt).\n• When RF_INTERRUPT is activated, a pulse of duration IT_TIME is emitted after EOF of ST25DV response\nto a Manage GPO interrupt command (see Section 7.6.30  Manage GPO ).\nFigure 14. RF_INTERRUPT sequence\nS\nO\nFE\nO\nF3) VCD sends a ManageGPO command (any value) and ST25DV stays quiet (command not for this \nVICC, or quiet state). GPO/RF_INTERRUPT remains high-Z.\nManageGPO\ncommand\nGPO/RF_INTERRUPT (OD)1) VCD sends a ManageGPO command with value 80h (GPO emit pulse) and ST25DV replies. \nGPO/RF_INTERRUPT generates a pulse of duration IT_TIME after ST25DV response.\nt1\nGPO/RF_INTERRUPT (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFManageGPO\n80h \ncommandE\nO\nF\n2) VCD sends a ManageGPO command (any value) and ST25DV replies with error. \nGPO/RF_INTERRUPT remains high-Z.\nGPO/RF_INTERRUPT (OD)S\nO\nFManageGPO\ncommandE\nO\nFt1 S\nO\nFE\nO\nFST25DV\nreply\n4) VCD sends any command other than ManageGPO command and ST25DV replies. \nGPO/RF_INTERRUPT remains high-Z.\nGPO/RF_INTERRUPT (OD)S\nO\nFAny other \ncommandE\nO\nFt1/Wt S\nO\nFE\nO\nFST25DV\nreply\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 29/197\nFIELD_CHANGE:\n• A pulse is emitted on GPO to signal a change in RF field state.\n• When FIELD_CHANGE is activated, and when RF field appear or disappear, GPO emits a pulse of\nduration IT_TIME.\n• If RF field disappears, the pulse is emitted only if V CC power supply is present.\n• If RF is configured in RF_SLEEP mode, field change are not reported on GPO, even if FIELD_CHANGE\nevent is activated, as shown in Table 22 .\nTable 22. FIELD_CHANGE when RF is disabled or in sleep mode\nRF_DISABLE RF_SLEEP GPO behaviour when FIELD_CHANGE is enabled\n0 0\nA pulse is emitted on GPO if RF field appears or disappears (1)\n1 0\nX 1 GPO remains high-Z (OD) or tied low (CMOS)\nIT_STS_Dyn register is not updated. X 1\n \n1. assuming that GPO output is enabled (GPO_EN = 1).\n \nFigure 15. FIELD_CHANGE sequence\n2) RF field disappears and ST25DV is powered through VCC. GPO/FIELD_CHANGE generates a \npulse during IT_TIME.\nGPO/FIELD_CHANGE (OD)1) RF field appears. GPO/FIELD_CHANGE generates a pulse during IT_TIME.\nt1\nGPO/FIELD_CHANGE (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFFirst VCD\ncommandE\nO\nF\n3) RF field disappears and ST25DV is not powered through VCC. GPO/FIELD_CHANGE doesn’t \ngenerates any pulse.RF field\nRF field\nt1 S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFVCD\ncommandE\nO\nF\nGPO/FIELD_CHANGE (OD)RF field\nt1 S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFVCD\ncommandE\nO\nF\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 30/197\nRF_PUT_MSG:\n• A pulse is emitted on GPO when a message is successfully written by RF in fast transfer mode mailbox.\n• When RF_PUT_MSG is activated, a pulse of duration IT_TIME is emitted on GPO at completion of valid\nWrite Message or Fast Write Message commands (after EOF of ST25DV response).\nFigure 16. RF_PUT_MSG sequence\n2) VCD sends a Write Message or Fast Write Message command and ST25DV replies with error.       \n     GPO/RF_PUT_MSG remains high-Z.\nS\nO\nFE\nO\nF3) VCD sends Write Message or Fast Write Message command and ST25DV stays quiet (command\n    not for this VICC, or quiet state). GPO/RF_PUT_MSG stays high-Z.\nWrite Msg\nCommandGPO/RF_PUT_MSG (OD)\nGPO/RF_PUT_MSG (OD)S\nO\nFWrite Msg\ncommandE\nO\nF1) VCD sends a Write Message or Fast Write Message command and ST25DV replies with no error.       \n     GPO/RF_PUT_MSG generates a pulse during IT_TIME after ST25DV response.\nt1\nGPO/RF_PUT_MSG (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite Msg\ncommandE\nO\nF\nt1 S\nO\nFE\nO\nFST25DV\nreply\n4) VCD sends a any other command than Write Message or Fast Write Message commands and\n    ST25DV replies. GPO/RF_PUT_MSG remains high-Z.\nGPO/RF_PUT_MSG (OD)S\nO\nFAny other\ncommandE\nO\nFt1 S\nO\nFE\nO\nFST25DV\nreply\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 31/197\nRF_GET_MSG:\n• A pulse is emitted on GPO when RF has successfully read a message, up to its last byte, in fast transfer\nmode mailbox.\n• When RF_GET_MSG is activated, a pulse of duration IT_TIME is emitted on GPO at completion of valid\nRead Message or Fast Read Message commands (after EOF of ST25DV response), and end of message\nhas been reached.\nFigure 17. RF_GET_MSG sequence\n2) VCD sends a Read Message or Fast Read Message command and ST25DV replies with error. \nGPO/RF_GET_MSG remains high-Z.\nS\nO\nFE\nO\nF3) VCD sends Read Message or Fast Read Message command and ST25DV stays quiet (command \nnot for this VICC, or quiet state). GPO/RF_GET_MSG stays high-Z.\nRead Msg\nCommandGPO/RF_GET_MSG (OD)\nGPO/RF_GET_MSG (OD)S\nO\nFRead Msg\ncommandE\nO\nF1) VCD sends a Read Message or Fast Read Message command and ST25DV replies with no error. \nGPO/RF_GET_MSG generates a pulse during IT_TIME after ST25DV response.\nt1\nGPO/RF_GET_MSG (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFRead Msg\ncommandE\nO\nF\nt1 S\nO\nFE\nO\nFST25DV\nreply\n4) VCD sends any other command than Read Message or Fast Read Message commands and \nST25DV replies. GPO/RF_GET_MSG remains high-Z.\nGPO/RF_GET_MSG (OD)S\nO\nFAny other\ncommandE\nO\nFt1 S\nO\nFE\nO\nFST25DV\nreply\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 32/197\nRF_WRITE:\n• When RF_WRITE is activated, a pulse of duration IT_TIME is emitted at completion of a valid RF write\noperation in EEPROM (after EOF of ST25DV response).\n• Following commands trigger the RF_WRITE interrupt after a valid write operation in EEPROM:\n– Write Single Block\n– Extended Write Single Block\n– Write Multiple Block\n– Extended Write Multiple Block\n– Lock Block\n– Extended Lock Block\n– Write AFI\n– Lock AFI\n– Write DSFID\n– Lock DSFID\n– Write Configuration\n– Write Password\n• Note that writing in dynamic registers or fast transfer mode mailbox does not trigger RF_WRITE interrupt\n(no write operation in EEPROM).\nFigure 18. RF_WRITE sequence\n1) VCD sends a write command and ST25DV replies after write completed. GPO/RF_WRITE \ngenerates a pulse during IT_TIME after ST25DV response.\nS\nO\nFE\nO\nF5) VCD sends any command and ST25DV stays quiet (command not for this VICC, or quiet state). \nRF_ACTIVITY remains high-Z.(m*)W t\nVCD\nCommandGPO/RF_WRITE (OD)\nGPO/RF_WRITE (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite\ncommandE\nO\nF\n3) VCD sends a write command and ST25DV replies with error. GPO/RF_WRITE remains high-Z.\nt1\nGPO/RF_WRITE (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite\ncommandE\nO\nF2) VCD sends a write command with option flag set to 1, and ST25DV replies after receiving EOF. \nGPO/RF_WRITE generates a pulse during IT_TIME after ST25DV response.\n>(m*)W t\nGPO/RF_WRITE (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFWrite\ncommandE\nO\nFE\nO\nFt1\n4) VCD sends any other command than a write command. GPO/RF_WRITE remains high-Z.\nt1\nGPO/RF_WRITE (OD)S\nO\nFE\nO\nFST25DV\nreplyS\nO\nFAny other\ncommandE\nO\nF\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 33/197\n5.2.2 GPO and power supply\nWhen at the same time RF field is present and V CC is ON, GPO is acting as configured in GPO, GPO_CTRL_Dyn\nand IT_TIME registers.\nWhen the RF field disappears, the GPO state is reset and the output level is set to high-Z (open drain) or tied low\n(CMOS). Interruption status in IT_STS_Dyn register is maintained until next I2C read or V CC power off.\nTable 23. GPO interrupt capabilities in function of RF field\nRF field on RF field off\nGPO state is function of RF events (1) GPO remains High-Z (OD) or tied low (CMOS)\n \n1. If pull-up resistor is powered (Open Drain-IE version), and V DCG is powered (CMOS –JF version).\n \nWhen V CC is not present, or ST25DVxxx is in low power mode, all events are available on GPO pin, assuming\npull-up resistor is supplied with correct voltage (Open Drain-IE version) or V DCG is powered (CMOS-JF version).\nThe host can be waken up using GPO interrupt in any power condition.\nThe exception is FIELD_CHANGE when RF field is falling, which can’t be reported on GPO output if V CC is off or\nin low power mode (no power supply on ST25DVxxx).\nTable 24. GPO interrupt capabilities in function of V CC power supply\nGPO events VCC OFFVCC ON and LPD high (1)\n(low power mode)VCC ON and LPD low(1)\nFIELD_CHANGE if RF field\ndisappearsGPO remains High-Z (OD)\nor tied low (CMOS)GPO remains High-Z (OD) or tied\nlow (CMOS) (2)Pulse emitted on GPO\nAny other activated RF eventGPO state is function of RF\nevents(2) GPO state is function of RF events(2)GPO state is function of\nRF events(2)\n \n1. For STM25DVxxK-JF only.\n2. If pull-up resistor is powered (Open Drain-IE version) and V DCG is powered (CMOS-JF version).\n \nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 34/197\n5.2.3 GPO registers\nFour registers are dedicated to this feature: two (static) in system configuration, and two dynamic.\nTable 25. GPO access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @00h\nWrite Configuration (cmd code A1h) @00hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 0000hR always, W if I2C security\nsession is open\nTable 26. GPO\nBit Name Function Factory value\nb0 RF_USER_EN0: disabled\n1: GPO output level is controlled by Manage GPO Command (set/reset)0b\nb1 RF_ACTIVITY_EN0: disabled\n1: GPO output level changes from RF command EOF to response EOF.0b\nb2 RF_INTERRUPT_EN0: disabled\n1: GPO output level is controlled by Manage GPO Command (pulse).0b\nb3 FIELD_CHANGE_EN0: disabled\n1: A pulse is emitted on GPO, when RF field appears or disappears.1b\nb4 RF_PUT_MSG_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF Write Message\ncommand.0b\nb5 RF_GET_MSG_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF Read Message\ncommand if end of message has been reached.0b\nb6 RF_WRITE_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF write operation in\nEEPROM.0b\nb7 GPO_EN0: GPO output is disabled. GPO is High-Z (open drain) or 0 (CMOS)\n1: GPO output is enabled. GPO outputs enabled interrupts.1b\nNote: Refer to Table 11. System configuration memory map  for the GPO register.\n• Enables the interruption source, and enable GPO output.\n• Several interruption sources can be enabled simultaneously.\n• The updated value is valid for the next command (except for the RF_WRITE interrupt, which is valid right\nafter EOF of the Write Configuration command if enabled through RF).\n• The GPO_EN bit (b7) allows to disable GPO output (High-Z for open drain version, driven low for CMOS\nversion). Interruptions are still reported in IT_STS_Dyn register.\n• RF configuration security session (present RF password 0) or I2C security session (present I2C password)\nmust be open in order to write the GPO register.\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 35/197\nTable 27. IT_TIME access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @01h\nWrite Configuration (cmd code A1h) @01hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2=1, 0001hR always, W if I2C security\nsession is open\nTable 28. IT_TIME\nBit Name Function Factory Value\nb2-b0 IT_TIME Pulse duration = 301 us - IT_TIME x 37.65 us ± 2 us 011b\nb7-b3 RFU - 00000b\nNote: Refer to Table 11. System configuration memory map  for the IT_TIME register.\n• Defines interrupt pulse duration on GPO pin for the flowing events: RF_INTERRUPT, FIELD_CHANGE,\nRF_PUT_MSG, RF_GET_MSG and RF_WRITE.\n• See Eq. (1)  for interrupt duration calculation.\n• RF configuration security session (present RF password 0) or I2C security session (present I2C password)\nmust be open in order to write IT_TIME register.\nTable 29. GPO_CTRL_Dyn access\nRF I2C\nCommand Type Address Type\nRead Dynamic Configuration (cmd code ADh) @00h\nFast Read Dynamic Configuration (cmd code CDh) @00hRO E2 = 0, 2000hb0-b6: RO \nb7 : R always, W always\nTable 30. GPO_CTRL_Dyn\nBit Name Function Factory Value\nb0 RF_USER_EN0: disabled\n1: GPO output level is controlled by Manage GPO Command (set/reset)0b\nb1 RF_ACTIVITY_EN0: disabled\n1: GPO output level changes from RF command EOF to response EOF.0b\nb2 RF_INTERRUPT_EN0: disabled\n1: GPO output level is controlled by Manage GPO Command (pulse).0b\nb3 FIELD_CHANGE_EN0: disabled\n1: A pulse is emitted on GPO, when RF field appears or disappears.1b\nb4 RF_PUT_MSG_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF Write Message command.0b\nb5 RF_GET_MSG_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF Read Message command if\nend of message has been reached.0b\nb6 RF_WRITE_EN0: disabled\n1: A pulse is emitted on GPO at completion of valid RF write operation in\nEEPROM.0b\nb7 GPO_EN0: GPO output is disabled. GPO is High-Z (open drain) or 0 (CMOS)\n1: GPO output is enabled. GPO outputs enabled interrupts.1b\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 36/197\nNote: Refer to Table 12. Dynamic registers memory map  for the GPO_CTRL_Dyn register.\n• Allows I2C host to dynamically enable or disable GPO output by writing in GPO_EN bit (b7).\n• GPO_EN bit of GPO_CTRL_Dyn register is prevalent over GPO_EN bit of GPO register.\n• At power up, and each time GPO register is updated, GPO_CTRL_Dyn content is copied from GPO\nregister.\n• GPO_CTRL_Dyn is a volatile register. Value is maintained only if at least one of the two power sources is\npresent (RF field or V CC).\n• GPO_CTRL_Dyn bit 7 (GPO_EN) can be written even if I2C security session is closed (I2C password not\npresented) but is read only for RF user.\n• Modifying GPO_CTRL_Dyn, the bit 7 GPO_EN does not affect the value of GPO register bit 7 GPO_EN\nTable 31. IT_STS_Dyn access\nRF I2C\nCommand Type Address Type\nNo access E2 = 0, 2005h RO\nTable 32. IT_STS_Dyn\nBit Name Function Factory Value\nb0 RF_USER0: Manage GPO reset GPO\n1: Manage GPO set GPO0b\nb1 RF_ACTIVITY0: No RF access\n1: RF access0b\nb2 RF_INTERRUPT0: No Manage GPO interrupt request\n1: Manage GPO interrupt request0b\nb3 FIELD_FALLING0: No RF field falling\n1: RF Field falling0b\nb4 FIELD_RISING0: No RF field rising\n1: RF field rising0b\nb5 RF_PUT_MSG0: No message put by RF in FTM mailbox\n1: Message put by RF in FTM mailbox0b\nb6 RF_GET_MSG0: No message read by RF from FTM mailbox\n1: Message read by RF from FTM mailbox, and end of\nmessage has been reached.0b\nb7 RF_WRITE0: No write in EEPROM\n1: Write in EEPROM0b\nNote: Refer to Table 12. Dynamic registers memory map  for the IT_STS_Dyn register.\n• Cumulates all events which generate interruptions. It should be checked by I2C host to know which event\ntriggered an interrupt on GPO pin.\n• When enabled, RF events are reported in IT_STS_Dyn register even if GPO output is disabled though the\nGPO_EN bit.\n• Once read the ITSTS_Dyn register is cleared (set to 00h).\n• At power up, IT_STS_Dyn content is cleared (set to 00h).\n• IT_STS_Dyn is a volatile register. Value is maintained only if at least one of the two power sources is\npresent (RF field or V CC).\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 37/197\n5.2.4 Configuring GPO\nGPO and interruption pulse duration can be configured by RF user or by I2C host. One or more interrupts can be\nenabled at same time.\nRF user can use Read Configuration and Write Configuration commands to set accordingly the GPO and\nIT_TIME registers, after presenting a valid RF configuration password to open RF configuration security session.\nI2C host can write GPO and IT_TIME registers, after presenting a valid I2C password to open I2C security\nsession.\nEnabling or disabling GPO output:\n• RF user and I2C host can disable or enable GPO output at power up time by writing in GPO_EN bit 7 of\nGPO register (if write access is granted).\n• I2C host can temporarily enable or disable GPO output at any time by toggling GPO_EN bit 7 of\nGPO_CTRL_Dyn register. No password is required to write into GPO_CTRL_Dyn register.\n• Disabling GPO output by writing in GPO_EN bit (either in GPO or in GPO_CTRL_Dyn registers) does not\ndisable interruption report in IT_STS_Dyn status register.\nTable 33. Enabling or disabling GPO interruptions\nGPO bit 7:\nGPO_ENGPO_CTRL_Dyn bit 7:\nGPO_ENGPO output\n0 0 GPO remains High-Z (OD) or tied low (CMOS)\n1 0 GPO remains High-Z (OD) or tied low (CMOS)\n0 1 Activated RF events are reported on GPO output (1)\n1 1 Activated RF events are reported on GPO output(1)\n \n1. If pull-up resistor is powered (Open Drain -IE version), and V DCG is powered (CMOS –JF version).\n \nInterruption pulse duration configuration:\n• Interrupt pulse duration is configured by writing pulse duration value in IT_TIME register.\n• Pulse duration is calculated with the following equation\nIT pulse duration equation:\nI Tp ul s e d u rat i o n = 301 μs − I T _ TI ME × 37.65 μs ± 2 μ s (1)\nST25DV04K ST25DV16K ST25DV64K\nGPO\nDS10925  - Rev 11 page 38/197\n5.3 Energy harvesting (EH)\n5.3.1 Energy harvesting registers\nTable 34. EH_MODE access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @02h\nWrite Configuration (cmd code A1h) @02hR always, W if RF configuration security\nsession is open and configuration not lockedE2 = 1,\n0002hR always, W if I2C security\nsession is open\nTable 35. EH_MODE\nBit Name Function Factory Value\nb0 EH_MODE0: EH forced after boot\n1: EH on demand only1b\nb7-b1 RFU - 0000000b\nNote: Refer to Table 11. System configuration memory map  for the EH_MODE register.\nTable 36. EH_CTRL_Dyn access\nRF I2C\nCommand Type Address Type\nRead Dynamic Configuration (cmd code ADh) @02h\nFast Read Dynamic Configuration (cmd code CDh) @02h\nWrite Dynamic Configuration (cmd code AEh) @02h\nFast Write Dynamic Configuration (cmd code CEh) @02hb0: R always, W always\nb1 - b7: ROE2=0, 2002hb0: R always, W always\nb1-b7 : RO\nTable 37. EH_CTRL_Dyn\nBit Name Function Factory Value\nb0 EH_EN0: Disable EH feature\n1: Enable EH feature0b\nb1 EH_ON0: EH feature is disabled\n1: EH feature is enabled0b\nb2 FIELD_ON0: RF field is not detected\n1: RF field is present and ST25DVxxx may communicate in RFDepending of power source\nb3 VCC_ON0: No DC supply detected on V CC pin or Low Power Down mode is forced (LPD is high)\n1: V CC supply is present and Low Power Down mode is not forced (LPD is low)Depending of power source\nb7-b4 RFU - 0b\nNote: Refer to Table 12. Dynamic registers memory map  for the EH_CTRL_Dyn register.\n5.3.2 Energy harvesting feature description\nThe usage of Energy Harvesting element can be defined in configuration register EH_MODE. When the Energy\nharvesting mode is disabled or the RF field strength is not sufficient, the energy harvesting analog voltage output\nV_EH is in High-Z state.\nEH_MODE Static Register is used to define the Energy Harvesting default strategy after boot.\nST25DV04K ST25DV16K ST25DV64K\nEnergy harvesting (EH)\nDS10925  - Rev 11 page 39/197\nAt boot EH_EN (in EH_CTRL_Dyn register) is set depending EH_MODE value as shown in table below:\nTable 38. Energy harvesting at power-up\nEH_MODE EH_EN (at boot) Energy harvesting at power-up\n0 1 EH enabled after boot (when possible)\n1 0EH disabled initially,\nEH delivered on demand (when possible)\nWriting 0 in EH_MODE at any time after boot will automatically set EH_EN bit to 1, and thus activate energy\nharvesting.\nWriting 1 in EH_MODE at any time after boot will not modify EH_EN bit (until next reboot) and thus will not modify\nenergy harvesting current state.\nEH_CTRL_Dyn allows to activate or deactivate on the fly the Energy harvesting (EH_EN) and bring information\non actual state of EH and state of power supplies :\n• EH_ON set reflects the EH_EN bit value\n• FIELD_ON is set in presence of a RF field\n• VCC_ON is set when Host power supply is on, and low power-down mode is not forced.\nDuring boot, EH is not delivered to avoid alteration in device configuration.\nCaution: Communication is not guaranteed during EH delivery. Refer to the application note AN4913 (Energy harvesting\ndelivery impact on ST25DVxxx behaviour during RF communication).\nEnergy harvesting can be set even if ST25DVxxx is in RF disabled or RF Sleep mode, or in Low power mode.\nIn all these cases, ST25DVxxx will deliver power on V_EH pin if RF field is present. Energy harvesting voltage\noutput is not regulated.\nST25DV04K ST25DV16K ST25DV64K\nEnergy harvesting (EH)\nDS10925  - Rev 11 page 40/197\n5.3.3 EH delivery state diagram\nFigure 19. EH delivery state diagram\nRF Field OFF\nVcc OFFRF Field OFF\nVcc ON Vcc OFF\nVcc ONEH_MODE=1RF Field ON\nVcc OFF\nRF Field OFF\nRF Field ON\nEH_MODE=1RF Field ON\nVcc ON Vcc OFF\nVcc ONRF Field OFF\nRF Field ON\nRF Field ON\nVcc ONRF Field OFF\nVcc ONRF Field OFF\nRF Field OFFRF Field ON\nVcc OFF\nVcc ON\nVcc OFFRF Field ON\nEH_MODE=0\nRF Field OFFVcc ON\nEH_MODE=0\nVcc OFFRF Write \nEH_CTRL_Dyn=1\nor\nRF Write EH_MODE=0\nI2C Write \nEH_CTRL_Dyn=1\nor\nI2C Write EH_MODE=0\nI2C Write \nEH_CTRL_Dyn=0\nRF Write \nEH_CTRL_Dyn=0\nWrite EH_CTRL_Dyn=0\nWrite EH_CTRL_Dyn=1\nor\nWrite EH_MODE=0\nPower OFF\nEH\ndeliveredEH\ndeliveredNo EH\nrequestedNo EH\nrequested\nNo EH\nrequested\nEH\nrequested\nnot delivered\nNote: Power is delivered on V_EH only if harvested energy is sufficient to supply ST25DV and leave over power.\nGrey color indicates the states where power is delivered on V_EH pin.\nST25DV04K ST25DV16K ST25DV64K\nEnergy harvesting (EH)\nDS10925  - Rev 11 page 41/197\n5.3.4 EH delivery sequence\nFigure 20. ST25DVxxx Energy Harvesting Delivery Sequence\nRF \nField(1)BootNo \nBoot\nNo \nBootBoot\nWith EH_MODE=0 :Vcc\nEH_EN\nEH_ON\nV_EH(2)No \nBoot\nWith EH_MODE=1 :\nEH_EN\nEH_ON\nV_EH(2)Reset \nEH_ENSet \nEH_ENReset \nEH_ENSet \nEH_ENReset \nEH_EN\nSet \nEH_ENSet \nEH_ENSet \nEH_ENSet \nEH_ENReset \nEH_ENReset \nEH_EN\n1. We suppose that the captured RF power is sufficient to trig EH delivery.\n2. V_EH = 1 means some µW are available on V_EH pin.\nV_EH = 0 means V_EH pin is in high-Z.\nST25DV04K ST25DV16K ST25DV64K\nEnergy harvesting (EH)\nDS10925  - Rev 11 page 42/197\n5.4 RF management feature\n5.4.1 RF management registers\nTable 39. RF_MNGT access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @03h\nWrite Configuration (cmd code A1h) @03hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 0003hR always, W if I2C security\nsession is open\nTable 40. RF_MNGT\nBit Name Function Factory Value\nb0 RF_DISABLE0: RF commands executed\n1: RF commands not executed (error 0Fh returned)0b\nb1 RF_SLEEP0: RF communication enabled\n1: RF communication disabled (ST25DV remains silent)0b\nb7-b2 RFU - 000000b\nNote: Refer to Table 11. System configuration memory map  for the RF_MNGT register.\nTable 41. RF_MNGT_Dyn access\nRF I2C\nCommand Type Address Type\nNo access E2 = 0, 2003h R always, W always\nTable 42. RF_MNGT_Dyn\nBit Name Function Factory Value\nb0 RF_DISABLE0: RF commands executed\n1: RF commands not executed (error 0Fh returned)0b\nb1 RF_SLEEP0: RF communication enabled\n1: RF communication disabled (ST25DV remains silent)0b\nb7-b2 RFU - 0000000b\nNote: Refer to Table 12. Dynamic registers memory map  for the RF_MNGT_Dyn register.\nST25DV04K ST25DV16K ST25DV64K\nRF management feature\nDS10925  - Rev 11 page 43/197\n5.4.2 RF management feature description\nRF_MNGT Register is used to control the RF communication between ST25DVxxx and a RF reader.\nAt boot time, and each time RF_MNGT register it is updated, content of RF_MNGT_Dyn register is copied\nfrom RF_MNGT register. The content of RF_MNGT_Dyn register is used during application to set ST25DVxxx\nbehavior.\nContent of this dynamic register RF_MNGT_Dyn can be updated on the fly, to temporarily modify the behavior of\nST25DVxxx without affecting the static value of RF_MNGT which will be recovered at next POR.\nRF_MNGT register is composed of two bits (see Table 42. RF_MNGT_Dyn ): RF_DISABLE and RF_SLEEP\nFor a normal usage of RF interface, bits RF_SLEEP and RF_DISABLE must be set to 0.\nFor RF are offered three modes:\n• RF sleep mode:\n– When RF_SLEEP is set to 1, all RF communications are disabled, RF interface doesn’t interpret\ncommands, but minimizes consumption of RF interface.\n• RF disable mode:\n– When RF_SLEEP is set to 0 and RF_DISABLE is set to 1, RF commands are interpreted but not\nexecuted. In case of a valid command, ST25DVxxx will respond after t 1 with the error code 0Fh. The\nInventory command is not answered.\n• RF normal mode:\n– In normal usage, RF_SLEEP and RF_DISABLE are set to 0, ST25DVxxx will process the request\nand respond accordingly when I2C is not accessing ST25DVxxx. If I2C is busy, ST25DV will respond\nto RF request with the error code 0Fh.\nST25DV04K ST25DV16K ST25DV64K\nRF management feature\nDS10925  - Rev 11 page 44/197\n5.5 Interface arbitration\nThe device automatically arbitrates the exclusive usage of RF and I2C interfaces. Arbitration scheme obeys to\n“first talk first served” principle (see Figure 21 ).\nFigure 21. Arbitration between RF and I2C\nPower OFF\nBoot\nRF mute\nI2C mute\nRF busy\n(I2C commamds \nare NoAck)ST25DV standby\nRF free\nI2C freeI2C busy\n(0Fh or no \nresponse to RF \nrequests)VCC ON\nor\nRF field ON\nBoot done\nI2C start\nI2C transition terminatedRF request SOF\nRF transaction terminated\nRF transaction is terminated:\n• at response EOF if answered\n• at request EOF is not answered\n• at RF field OFF.\nI2C transaction is terminated:\n• at the end of EEPROM programming time after the stop condition of a successful write into EEPROM (user\nmemory or system configuration). See Section 6.4  I2C write operations  for write time calculation\n• at stop condition for any other I2C transaction\n• at VCC power off\n• at any I2C error (terminated before stop condition)\n• at I2C timeout if it occurs\nWhen RF is busy, I2C interface answers by NoAck on any I2C command.\nWhen I2C is busy, RF commands receive no response (Inventory, Stay quiet, addressed commands) or error code\n0Fh for any other command.\nST25DV04K ST25DV16K ST25DV64K\nInterface arbitration\nDS10925  - Rev 11 page 45/197\n5.6 Data Protection\nST25DVxxx provides a special data protection mechanism based on passwords that unlock security sessions.\nUser memory can be protected for read and/or write access and system configuration can be protected from write\naccess, both from RF and I2C assess.\n5.6.1 Data protection registers\nTable 43. RFA1SS access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @04h\nWrite Configuration (cmd code A1h) @04hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 0004hR always, W if I2C security\nsession is open\nTable 44. RFA1SS\nBit Name Function Factory Value\nb1-b0 PWD_CTRL_A100: Area 1 RF user security session can’t be open by password\n01: Area 1 RF user security session is open by RF_PWD_1\n10: Area 1 RF user security session is open by RF_PWD_2\n11: Area 1 RF user security session is open by RF_PWD_300b\nb3-b2 RW_PROTECTION_A100: Area 1 RF access: Read always allowed / Write always allowed\n01: Area 1 RF access: Read always allowed, Write allowed if RF user security\nsession is open\n10: Area 1 RF access: Read always allowed, Write allowed if RF user security\nsession is open\n11: Area 1 RF access: Read always allowed, Write always forbidden00b\nb7-b4 RFU - 0000b\nNote: Refer to Table 11. System configuration memory map  for the RFA1SS register.\nTable 45. RFA2SS access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @06h\nWrite Configuration (cmd code A1h) @06hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 0006hR always, W if I2C security\nsession is open\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 46/197\nTable 46. RFA2SS\nBit Name Function Factory Value\nb1-b0 PWD_CTRL_A200: Area 2 RF user security session can’t be open by password\n01: Area 2 RF user security session is open by RF_PWD_1\n10: Area 2 RF user security session is open by RF_PWD_2\n11: Area 2 RF user security session is open by RF_PWD_300b\nb3-b2 RW_PROTECTION_A200: Area 2 RF access: Read always allowed, Write always allowed\n01: Area 2 RF access: Read always allowed, Write allowed if RF user security\nsession is open\n10: Area 2 RF access: Read allowed if RF user security session is open, Write\nallowed if RF user security session is open\n11: Area 2 RF access: Read allowed if RF user security session is open, Write\nalways forbidden00b\nNote: Refer to Table 11. System configuration memory map  for the RFA2SS register.\nTable 47. RFA3SS access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @08h\nWrite Configuration (cmd code A1h) @08hR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 0008hR always, W if I2C security\nsession is open\nTable 48. RFA3SS\nBit Name Function Factory Value\nb1-b0 PWD_CTRL_A300: Area 3 RF user security session can’t be open by password\n01: Area 3 RF user security session is open by RF_PWD_1\n10: Area 3 RF user security session is open by RF_PWD_2\n11: Area 3 RF user security session is open by RF_PWD_300b\nb3-b2 RW_PROTECTION_A300: Area 3 RF access: Read always allowed / Write always allowed\n01: Area 3 RF access: Read always allowed, Write allowed if RF user security\nsession is open\n10: Area 3 RF access: Read allowed if RF user security session is open, Write\nallowed if RF user security session is open\n11: Area 3 RF access: Read allowed if RF user security session is open, Write\nalways forbidden00b\nb7-b4 RFU - 0000b\nNote: Refer to Table 11. System configuration memory map  for the RFA3SS register.\nTable 49. RFA4SS access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @0Ah\nWrite Configuration (cmd code A1h) @0AhR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 000AhR always, W if I2C security\nsession is open\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 47/197\nTable 50. RFA4SS\nBit Name Function Factory Value\nb1-b0 PWD_CTRL_A400: Area 4RF user security session can’t be open by password\n01: Area 4 RF user security session is open by RF_PWD_1\n10: Area 4 RF user security session is open by RF_PWD_2\n11: Area 4 RF user security session is open by RF_PWD_300b\nb3-b2 RW_PROTECTION_A400: Area 4 RF access: Read always allowed, Write always allowed\n01: Area 4 RF access: Read always allowed, Write allowed if RF user security\nsession is open\n10: Area 4 RF access: Read allowed if RF user security session is open, Write\nallowed if RF user security session is open\n11: Area 4 RF access: Read allowed if RF user security session is open, Write\nalways forbidden00b\nb7-b4 RFU - 0000b\nNote: Refer to Table 11. System configuration memory map  for the RFA4SS register.\nTable 51. I2CSS access\nRF I2C\nCommand Type Address Type\nNo access E2 = 1, 000BhR always, W if I2C security\nsession is open\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 48/197\nTable 52. I2CSS\nBit Name Function Factory Value\nb1-b0 RW_PROTECTION_A100: Area 1 I2C access: Read always allowed, Write always allowed\n01: Area 1 I2C access: Read always allowed, Write allowed if I2C user security\nsession is open\n10: Area 1 I2C access: Read always allowed, Write always allowed\n11: Area 1 I2C access: Read always allowed, Write allowed if I2C user security\nsession is open00b\nb3-b2 RW_PROTECTION_A200: Area 2 I2C access: Read always allowed, Write always allowed\n01: Area 2 I2C access: Read always allowed, Write allowed if I2C user security\nsession is open\n10: Area 2 I2C access: Read allowed if I2C user security session is open, Write\nalways allowed\n11: Area 2 I2C access: Read allowed if I2C security session is open, Write\nallowed if I2C security session is open00b\nb5-b4 RW_PROTECTION_A300: Area 3 I2C access: Read always allowed, Write always allowed\n01: Area 3 I2C access: Read always allowed, Write allowed if I2C user security\nsession is open\n10: Area 3 I2C access: Read allowed if I2C user security session is open, Write\nalways allowed\n11: Area 3 I2C access: Read allowed if I2C security session is open, Write\nallowed if I2C security session is open00b\nb7-b6 RW_PROTECTION_A400: Area 4 I2C access: Read always allowed, Write always allowed\n01: Area 4 I2C access: Read always allowed, Write allowed if I2C user security\nsession is open\n10: Area 4 I2C access: Read allowed if I2C user security session is open, Write\nalways allowed\n11: Area 4 I2C access: Read allowed if I2C security session is open, Write\nallowed if I2C security session is open00b\nNote: Refer to Table 11. System configuration memory map  for the I2CSS register.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 49/197\nTable 53. LOCK_CCFILE access\nRF I2C\nCommand Type Address Type\nLock Block (cmd code 22h) @00h/01h\nExt Lock Block (cmd code 32h) @00h/01h\nRead Block (cmd code 20h) @00h/01h\nFast Read Block(1) (cmd code C0h) @00h/01h\nExt Read Block(1) (cmd code 30h) @00h/01h\nFast Ext Read Block(1) (cmd code C4h) @00h/01h\nRead Multi Block(1) (cmd code 23h) @00h/01h\nExt Read Multi Block(1) (cmd code 33h) @00h/01h\nFast Read Multi Block(1) (cmd code C3h)\n@00h/01h\nFast Ext Read Multi Block(1) (cmd code C5h)\n@00h/01h\nGet Multi Block SS (cmd code 2Ch) @00h/01h\nExt Get Multi Block SS (cmd code 3Ch) @00h/01hR always\nb0: W if Block 00h is not already locked,\nb1: W if Block 01h is not already locked.E2 = 1, 000ChR always, W if I2C\nsecurity session is open\n \n1. With option flag set to 1.\n \nTable 54. LOCK_CCFILE\nBit Name Function Factory Value\nb0 LCKBCK00: Block @ 00h is not Write locked\n1: Block @ 00h is Write locked0b\nb1 LCKBCK10: Block @ 01h is not Write locked\n1: Block @ 01h is Write locked0b\nb7-b2 RFU - 000000b\nNote: Refer to Table 11. System configuration memory map  for the LOCK_CCFILE register.\nTable 55. LOCK_CFG access\nRF I2C\nCommand Type Address Type\nRead Configuration (cmd code A0h) @0Fh\nWrite Configuration (cmd code A1h) @0FhR always, W if RF configuration security\nsession is open and configuration not\nlockedE2 = 1, 000FhR always, W if I2C security\nsession is open\nTable 56. LOCK_CFG\nBit Name Function Factory Value\nb0 LCK_CFG0: Configuration is unlocked\n1: Configuration is locked0b\nb7-b1 RFU - 0000000b\nNote: Refer to Table 11. System configuration memory map  for the LOCK_CFG register.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 50/197\nTable 57. I2C_PWD access\nRF I2C\nCommand Type Address Type\nNo accessE2 = 1, 0900h to 0907h, Present/Write password\ncommand format.R if I2C security session is open, W if I2C security session is open\nTable 58. I2C_PWD\nI2C address Bit Name FunctionFactory\nValue\n0900h b7-b0\nI2C_PWDByte 7 (MSB) of password for I2C security session 00h\n0901h b7-b0 Byte 6 of password for I2C security session 00h\n0902h b7-b0 Byte 5 of password for I2C security session 00h\n0903h b7-b0 Byte 4 of password for I2C security session 00h\n0904h b7-b0 Byte 3 of password for I2C security session 00h\n0905h b7-b0 Byte 2 of password for I2C security session 00h\n0906h b7-b0 Byte 1 of password for I2C security session 00h\n0907h b7-b0 Byte 0 (LSB) of password for I2C security session 00h\nNote: Refer to Table 11. System configuration memory map  for the I2C_PWD register.\nTable 59. RF_PWD_0 access\nRF I2C\nCommand Type Address Type\nPresent Password (cmd code B3h)\nWrite Password (cmd code B1h)WO if RF configuration security session is\nopenNo access\nTable 60. RF_PWD_0\nBit Name Function Factory Value\nb7-b0 RF_PWD_0Byte 0 (LSB) of password for RF configuration security\nsession00h\nByte 1 of password for RF configuration security session 00h\nByte 2 of password for RF configuration security session 00h\nByte 3 of password for RF configuration security session 00h\nByte 4 of password for RF configuration security session 00h\nByte 5 of password for RF configuration security session 00h\nByte 6 of password for RF configuration security session 00h\nByte 7 (MSB) of password for RF configuration security\nsession00h\nNote: Refer to Table 11. System configuration memory map  for the RF_PWD_0 register.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 51/197\nTable 61. RF_PWD_1 access\nRF I2C\nCommand Type Address Type\nPresent Password (cmd code B3h)\nWrite Password (cmd code B1h)WO if RF configuration security session\nis open with RF password 1No access\nTable 62. RF_PWD_1\nBit Name Function Factory Value\nb7-b0 RF_PWD_1Byte 0 (LSB) of password 1 for RF user security session 00h\nByte 1 of password 1 for RF user security session 00h\nByte 2 of password 1 for RF user security session 00h\nByte 3 of password 1 for RF user security session 00h\nByte 4 of password 1 for RF user security session 00h\nByte 5 of password 1 for RF user security session 00h\nByte 6 of password 1 for RF user security session 00h\nByte 7 (MSB) of password 1 for RF user security session 00h\nNote: Refer to Table 11. System configuration memory map  for the RF_PWD_1 register.\nTable 63. RF_PWD_2 access\nRF I2C\nCommand Type Address Type\nPresent Password (cmd code B3h)\nWrite Password (cmd code B1h)WO if RF user security session is open\nwith RF password 2No access\nTable 64. RF_PWD_2\nBit Name Function Factory Value\nb7-b0 RF_PWD_2Byte 0 (LSB) of password 2 for RF user security session 00h\nByte 1 of password 2 for RF user security session 00h\nByte 2 of password 2 for RF user security session 00h\nByte 3 of password 2 for RF user security session 00h\nByte 4 of password 2 for RF user security session 00h\nByte 5 of password 2 for RF user security session 00h\nByte 6 of password 2 for RF user security session 00h\nByte 7 (MSB) of password 2 for RF user security session 00h\nNote: Refer to Table 11. System configuration memory map  for the RF_PWD_2 register.\nTable 65. RF_PWD_3 access\nRF I2C\nCommand Type Address Type\nPresent Password (cmd code B3h)\nWrite Password (cmd code B1h)WO if RF user security session is open\nwith RF password 3No access\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 52/197\nTable 66. RF_PWD_3\nBit Name Function Factory Value\nb7-b0 RF_PWD_3Byte 0 (LSB) of password 3for RF user security session 00h\nByte 1 of password 3 for RF user security session 00h\nByte 2 of password 3 for RF user security session 00h\nByte 3 of password 3 for RF user security session 00h\nByte 4 of password 3 for RF user security session 00h\nByte 5 of password 3 for RF user security session 00h\nByte 6 of password 3 for RF user security session 00h\nByte 7 (MSB) of password 3 for RF user security session 00h\nNote: Refer to Table 11. System configuration memory map  for the RF_PWD_3 register.\nTable 67. I2C_SSO_Dyn access\nRF I2C\nCommand Type Address Type\nNo access E2 = 0, 2004h RO\nTable 68. I2C_SSO_Dyn\nBit Name Function Factory Value\nb7-b1 RFU - 0b\nb0 I2C_SSO0: I2C security session close\n1: I2C security session open\n(Set or reset via I2C Present password command)0b\nNote: Refer to Table 12. Dynamic registers memory map  for the I2C_SSO_Dyn register.\n5.6.2 Passwords and security sessions\nST25DVxxx provides protection of user memory and system configuration static registers. RF user and I2C host\ncan access those protected data by opening security sessions with the help of passwords. Access rights is more\nrestricted when security sessions are closed, and less restricted when security sessions are open.\nDynamic registers and fast transfer mode mailbox are not protected by any security session.\nThere is three type of security sessions, as shown in Table 69. Security session type :\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 53/197\nTable 69. Security session type\nSecurity session Open by presenting Right granted when security session is open, and until it is closed\nRF userRF password 1, 2 or 3 (1)\n(RF_PWD_1, RF_PWD_2,\nRF_PWD_3)RF user access to protected user memory as defined in RFA iSS registers\nRF user write access to RF password 1, 2 or 3 (2)\nRF configurationRF password 0\n(RF_PWD_0)RF user write access to configuration static registers\nRF user write access to RF password 0\nI2CI2C password\n(I2C_PWD)I2C host access to protected user memory as defined in I2CSS register\nI2C host write access to configuration static registers\nI2C host write access to I2C password\n \n1. Password number must be the same as the one selected for protection.\n2. Write access to the password number corresponding to the password number presented.\n \nAll passwords are 64-bits long, and default factory passwords value is 0000000000000000h.\nThe ST25DVxxx passwords management is organized around RF and I2C dedicated set of commands to access\nthe dedicated registers in system configuration area where password values are stored.\nThe dedicated password commands in RF mode are:\n• Write Password command (code B1h): see Section 7.6.35  Write Password .\n• Present Password command (code B3h): see Section 7.6.36  Present Password .\nRF user possible actions for security sessions are:\n• Open RF user security session : Present Password command, with password number 1, 2 or 3 and the\nvalid corresponding password\n• Write RF password : Present Password command, with password number (0, 1, 2 or 3) and the current\nvalid corresponding password. Then Write Password command, with same password number (0, 1, 2 or 3)\nand the new corresponding password.\n• Close RF user security session : Present Password command, with a different password number than\nthe one used to open session or any wrong password. Or remove tag from RF field (POR). Presenting a\npassword with an invalid password number doesn't close the session.\n• Open RF configuration security session : Present Password command, with password number 0 and the\nvalid password 0.\n• Close RF configuration security session : Present Password command, with a password number\ndifferent than 0, or password number 0 and wrong password 0. Or remove tag from RF field (POR).\nPresenting a password with an invalid password number doesn't close the session.\nOpening any new RF security session (user or configuration) automatically close the previously open one (even if\nit fails).\nThere is no interaction between I2C and RF security sessions. Both are independent, and can run in parallel.\nCaution: If ST25DVxxx is powered through V CC, removing V CC during a RF command can abort the command. As a\nconsequence, before writing a new password, RF user should check if V CC is ON, by reading EH_CTRL_Dyn\nregister bit 3 (VCC_ON), and eventually ask host to maintain or to shut down V CC, before issuing the Write\nPassword command in order to avoid password corruption.\nTo make the application more robust, it is recommended to use addressed or selected mode during write\npassword operations to get the traceability of which tags/UID have been programmed.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 54/197\nFigure 22. RF security sessions management\nRF field OFF RF field ONST25DV out \nof RF field\nAll RF \nsecurity \nsessions \nclosed\nRF security \nsession x \nopened\n(y closed)Any other \ncommandPresent \nRF_PWD_x OK\nRF security \nsession y \nopened\n(x closed)Present \nRF_PWD_y OKPresent \nRF_PWD_x OKPresent any RF \npassword not OK(1)\nAny other \ncommandAny other \ncommand\n1. Presenting a password with an invalid password number doesn't close the session.  \nThe dedicated password commands in I2C mode are:\n• I2C Write Password command: see Section 6.6.2  I2C write password command description .\n• I2C Present Password command: see Section 6.6.1  I2C present password command description .\nI2C host possible actions for security sessions are:\n• Open I  2 C security session : I2C Present Password command with valid I2C password.\n• Write I  2 C password : I2C Present Password command with valid I2C password. Then I2C Write Password\ncommand with new I2C password.\n• Close I  2 C security session : I2C Present Password command with wrong I2C password. Or remove tag\nVCC power supply (POR).\n• Check if I  2 C security session is open : I2C host can read the current status (open or closed) of I2C\nsecurity session by reading the I2C_SSO_Dyn register.\nThere is no interaction between I2C and RF security sessions. Both are independent and can run in parallel.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 55/197\nFigure 23. I2C security sessions management\nVCC \nOFFVCC ONVCC OFF\nI2C security \nsession closed\nI2C_SSO=00h\nI2C security \nsession opened\nI2C_SSO=01hPresent \nI2C_PWD not OK\nAny other \ncommandPresent \nI2C_PWD \nOKAny other \ncommand\n5.6.3 User memory protection\nOn factory delivery, areas are not protected.\nEach area can be individually protected in read and/or write access from RF and I2C.\nArea 1 is always readable (from RF and I2C).\nFurthermore, RF blocks 0 and 1 (I2C bytes 0000h to 0007h) can be independently write locked.\nUser memory protection from RF access\nIn RF mode, each memory area of the ST25DVxxx can be individually protected by one out of three available\npasswords (RF password 1, 2 or 3), and each area can also have individual Read/Write access conditions.\nFor each area, an RFA iSS register is used to:\n• Select the RF password that unlock the RF user security session for this area\n• Select the protection against read and write operations for this area\n(See Table 44. RFA1SS , Table 46. RFA2SS , Table 48. RFA3SS , and Table 50. RFA4SS  for details about available\nread and write protections).\nNote: Setting 00b in PWD_CTRL_A i field means that RF user security session cannot be open by any password for\nthe corresponding area.\nWhen updating RFA iSS registers, the new protection value is effective immediately after the register write\ncompletion.\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 56/197\n• Rf blocks 0 and 1 are exceptions to this protection mechanism:\n– RF blocks 0 and 1 can be individually write locked by issuing a (Ext) Lock Single Block RF command.\nOnce locked, they cannot be unlock through RF. LOCK_CCFILE register is automatically updated\nwhen using (Ext) Lock Single Block command.\n– A RF user needs no password to lock blocks 0 and/or 1.\n– Locking blocks 0 and/or 1 is possible even if the configuration is locked (LOCK_CFG=1).\n– Locking blocks 0 and/or 1 is possible even if the area is write locked.\n– Unlocking area1 (through RFA1SS register) does not unlock blocks 0 and 1 if they have been locked\nthough (Ext) Lock Block command.\n– Once locked, the RF user cannot unlock blocks 0 and/or 1 (can be done by I2C host).\nNote: When areas size are modified (ENDAi registers), RFAiSS registers are not modified.\nUser memory protection from I2C access\nIn I2C mode, each area can also have individual Read/Write access conditions, but only one I2C password is used\nto unlock I2C security session for all areas.\nThe I2CSS register is used to set protection against read and write operation for each area (see Table 52. I2CSS\nfor details about available read and write protections).\nWhen updating I2CSS registers, the new protection value is effective immediately after the register write\ncompletion.\nI2C user memory Bytes 0000h to 0003h (RF Block 0) and 0004h to 0007h (RF Block 1) can be individually locked\nand unlocked by writing in the LOCK_CCFILE register (by group of 4 Bytes), independently of Area 1 protection.\nUnlocking Area 1 (through I2CSS register) does not unlock those bytes if they have been locked though the\nLOCK_CCFILE register.\nNote: When areas size are modified (ENDAi registers), I2CSS register is not modified.\nRetrieve the security status of a user memory block or byte\nRF user can read a block security status by issuing following RF commands:\n• (Ext) Get Multiple Blocks Security Status command.\n• (Ext) (Fast) Read Single Block with option flag set to 1.\n• (Ext) (Fast) Read Multiple Blocks with option flag set to 1.\nST25DV will respond with a Block security status containing a Lock_bit flag as specified in ISO 15693 standard.\nThis lock_bit flag is set to one if block is locked against write.\nLock_bit flag value may vary if corresponding RF user security session is open or closed.\nI2C host can retrieve a block security status by reading the I2CSS register to get security status of the\ncorresponding area and by reading the I2C_SSO_Dyn register to know if I2C security session is open or closed.\nFor blocks 0 and 1 (Bytes 0000h to 0007h in I2C user memory), lock status can also be read in the\nLOCK_CCFILE register.\n5.6.4 System memory protection\nBy default, system memory (static registers) is write protected, both in RF and I2C.\nI2C host must open the I2C security session (by presenting a valid I2C password) to enable write access to\nsystem configuration static registers.\nI2C host doesn’t have read or write access to RF passwords.\nBy default, I2C host can read all system configuration static registers (except RF passwords)\nIn RF, to enable write access to system configuration static registers, RF user must open the RF configuration\nsecurity session (by presenting a valid RF password 0) and system configuration must not be locked\n(LOCK_CFG=00h).\nRF doesn’t have read or write access to I2C password.\nBy default, RF user can read all system configuration static registers, except all passwords, LOCK_CCFILE,\nLOCK_DSFID and LOCK_AFI.\nRF configuration lock:\nST25DV04K ST25DV16K ST25DV64K\nData Protection\nDS10925  - Rev 11 page 57/197\n• RF write access to system configuration static registers can be locked by writing 01h in the LOCK_CFG\nregister (by RF or I2C).\n• RF user cannot unlock system configuration if LOCK_CFG=01h, even after opening RF configuration\nsecurity session (only I2C host can unlock system configuration).\n• When system configuration is locked (LOCK_CFG=01h), it is still possible to change RF passwords (0 to\n3).\nDevice identification registers:\n• AFI and DFSID registers can be independently locked by RF user, issuing respectively a Lock AFI and a\nLock DSFID command. Lock is definitive: once locked, AFI and DSFID registers cannot be unlocked (either\nby RF or I2C). System configuration locking mechanism (LOCK_CFG=01h) does not lock AFI and DSFID\nregisters.\n• Other device identification registers (MEM_SIZE, BLK_SIZE, IC_REF, UID, IC_REV) are read only\nregisters for both RF and I2C.\n5.7 Device parameter registers\nTable 70. LOCK_DSFID access\nRF I2C\nCommand Type Address Type\nLock DSFID (command code 2Ah) WO if DSFID not locked E2 = 1, 0010h RO\nTable 71. LOCK_DSFID\nBit Name Function Factory value\nb0 LOCK_DSFID0: DSFID is not locked\n1: DSFID is locked0b\nb7-b1 RFU - 0000000b\nNote: Refer to Table 11. System configuration memory map  for the LOCK_DSFID register.\nTable 72. LOCK_AFI access\nRF I2C\nCommand Type Address Type\nLock AFI (command code 28h) WO if AFI not locked E2 = 1, 0011h RO\nTable 73. LOCK_AFI\nBit Name Function Factory value\nb0 LOCK_AFI0: AFI is not locked\n1: AFI is locked0b\nb7-b1 RFU - 0000000b\nNote: Refer to Table 11. System configuration memory map  for the LOCK_AFI register.\nST25DV04K ST25DV16K ST25DV64K\nDevice parameter registers\nDS10925  - Rev 11 page 58/197\nTable 74. DSFID access\nRF I2C\nCommand Type Address Type\nInventory (command code 01h)\nGet System Info (command code 2Bh)\nExt Get System Info (command code 3Bh)\nWrite DSFID (command code 28h)R always, W if DSFID not locked E2 = 1, 0012h RO\nTable 75. DSFID\nBit Name Function Factory value\nb7-b0 DSFID ISO/IEC 15693 Data Storage Format Identifier 00h\nNote: Refer to Table 11. System configuration memory map  for the DSFID register.\nTable 76. AFI access\nRF I2C\nCommand Type Address Type\nInventory (command code 01h)\nGet System Info (command code 2Bh)\nExt Get System Info (command code 3Bh)\nWrite AFI (command code 27h)R always, W if AFI not locked E2 = 1, 0013h RO\nTable 77. AFI\nBit Name Function Factory value\nb7-b0 AFI ISO/IEC 15693 application family identifier 00h\nNote: Refer to Table 11. System configuration memory map  for the AFI register.\nTable 78. MEM_SIZE access\nRF I2C\nCommand Type Address Type\nGet System Info (command code 2Bh) (1)\nExt Get System Info (command code 3Bh)RO E2=1, 0014h to 0015h RO\n \n1. Only ST25DV04K-IE and ST25DV04K-JF\n \nST25DV04K ST25DV16K ST25DV64K\nDevice parameter registers\nDS10925  - Rev 11 page 59/197\nTable 79. MEM_SIZE\nI2C\naddressBit Name Function Factory value\n0014h b7-b0\nMEM_SIZEAddress 0014h: LSB byte of the memory size\nexpressed in RF blocksST25DV04K-xx: 7Fh\nST25DV16K-xx: FFh\nST25DV64K-xx: FFh\n0015h b7-b0Address 0015h: MSB byte of the memory size\nexpressed in RF blocksST25DV04K-xx: 00h\nST25DV16K-xx: 01h\nST25DV64K-xx: 07h\nNote: Refer to Table 11. System configuration memory map  for the MEM_SIZE register.\nTable 80. BLK_SIZE access\nRF I2C\nCommand Type Address Type\nGet System Info (command code 2Bh) (1)\nExt Get System Info (command code 3Bh)RO E2 = 1, 0016h RO\n \n1. Only ST25DV04K-IE and ST25DV04K-JF\n \nTable 81. BLK_SIZE\nBit Name Function Factory value\nb7-b0 BLK_SIZE RF user memory block size 03h\nNote: Refer to Table 11. System configuration memory map  for the BLK_SIZE register.\nTable 82. IC_REF access\nRF I2C\nCommand Type Address Type\nGet System Info (command code 2Bh)\nExt Get System Info (command code 3Bh)RO E2 = 1, 0017h RO\nTable 83. IC_REF\nBit Name Function Factory value\nb7-b0 IC_REF ISO/IEC 15693 IC referenceST25DV04K-IE: 24h\nST25DV16K-IE: 26h\nST25DV64K-IE: 26h\nST25DV04K-JF: 24h\nST25DV16K-JF: 26h\nST25DV64K-JF: 26h\nNote: Refer to Table 11. System configuration memory map  for the IC_REF register.\nST25DV04K ST25DV16K ST25DV64K\nDevice parameter registers\nDS10925  - Rev 11 page 60/197\nTable 84. UID access\nRF I2C\nCommand Type Address Type\nInventory (command code 01h)\nGet System Info (command code 2Bh)\nExt Get System Info (command code 3Bh)RO E2=1, 0018h to 001Fh RO\nTable 85. UID\nI2C address Bit Name Function Factory value\n0018h\nb7-b0 UIDISO/IEC 15693 UID byte 0 (LSB)\nIC manufacturer serial number0019h ISO/IEC 15693 UID byte 1\n001Ah ISO/IEC 15693 UID byte 2\n001Bh ISO/IEC 15693 UID byte 3\n001Ch ISO/IEC 15693 UID byte 4\n001Dh ISO/IEC 15693 UID byte 5: ST product codeST25DV04K-IE: 24h\nST25DV16K-IE: 26h\nST25DV64K-IE: 26h\nST25DV04K-JF: 25h\nST25DV16K-JF: 27h\nST25DV64K-JF: 27h\n001Eh ISO/IEC 15693 UID byte 6: IC manufacturing code 02h\n001Fh ISO/IEC 15693 UID byte 7 (MSB) E0h\nNote: Refer to Table 11. System configuration memory map  for the UID register.\nTable 86. IC_REV access\nRF I2C\nCommand Type Address Type\nNo access E2 = 1, 0020h RO\nTable 87. IC_REV\nBit Name Function Factory value\nb7-b0 IC_REV IC revision Depending on revision\nNote: Refer to Table 11. System configuration memory map  for the IC_REV register.\nST25DV04K ST25DV16K ST25DV64K\nDevice parameter registers\nDS10925  - Rev 11 page 61/197\n6 I2C operation\n6.1 I2C protocol\nThe device supports the I2C protocol. This is summarized in Figure 24. I2C bus protocol . Any device that sends\ndata to the bus is defined as a transmitter, and any device that reads data is defined as a receiver. The device\nthat controls the data transfer is known as the bus master, and the other as the slave device. A data transfer\ncan only be initiated by the bus master, which also provides the serial clock for synchronization. The ST25DVxxx\ndevice is a slave in all communications.\nFigure 24. I2C bus protocol\nDT00792BV1STOP\nCondition\n6.1.1 Start condition\nStart is identified by a falling edge of serial data (SDA) while the serial clock (SCL) is stable in the high state.\nA Start condition must precede any data transfer command. The device continuously monitors (except during a\nwrite cycle) the SDA and the SCL for a Start condition, and does not respond unless one is given.\nST25DV04K ST25DV16K ST25DV64K\nI2C operation\nDS10925  - Rev 11 page 62/197\n6.1.2 Stop condition\nStop is identified by a rising edge of serial data (SDA) while the serial clock (SCL) is stable and driven high.\nA Stop condition terminates communication between the device and the bus master. A Read command that\nis followed by NoAck can be followed by a Stop condition to force the device into the Standby mode. A Stop\ncondition at the end of a Write command triggers the internal write cycle.\n6.1.3 Acknowledge bit (ACK)\nThe acknowledge bit is used to indicate a successful byte transfer. The bus transmitter, whether a bus master or a\nslave device, releases the serial data (SDA) after sending eight bits of data. During the 9th clock pulse period, the\nreceiver pulls the SDA low to acknowledge the receipt of the eight data bits.\n6.1.4 Data input\nDuring data input, the device samples serial data (SDA) on the rising edge of the serial clock (SCL). For correct\ndevice operation, the SDA must be stable during the rising edge of the SCL, and the SDA signal must change\nonly when the SCL is driven low.\n6.2 I2C timeout\nDuring the execution of an I²C operation, RF communications are not possible.\nTo prevent RF communication freezing due to inadvertent indeterminate instructions sent to the I²C bus, the\nST25DVxxx features a timeout mechanism that automatically resets the I²C logic block.\n6.2.1 I2C timeout on Start condition\nI2C communication with the ST25DVxxx starts with a valid Start condition, followed by a device select code.\nIf the delay between the Start condition and the following rising edge of the serial clock (SCL) that samples the\nmost significant of the Device Select exceeds the t START_OUT  time (see Table 248. I2C AC characteristics (up to\n85 °C)  and Table 249. I2C AC characteristics (up to 125 °C) ), the I²C logic block is reset and further incoming data\ntransfer is ignored until the next valid Start condition.\nFigure 25. I²C timeout on Start condition\nSCL\nSDA\ntSTART_OUT\nStart\ncondition\n6.2.2 I2C timeout on clock period\nDuring data transfer on the I²C bus, if the serial clock pulse width high (t CHCL ) or serial clock pulse width\nlow (t CLCH ) exceeds the maximum value specified in Table 248. I2C AC characteristics (up to 85 °C)  and\nTable 249. I2C AC characteristics (up to 125 °C) , the I²C logic block is reset and any further incoming data transfer\nis ignored until the next valid Start condition.\nST25DV04K ST25DV16K ST25DV64K\nI2C timeout\nDS10925  - Rev 11 page 63/197\n6.3 Device addressing\nTo start a communication between the bus master and the slave device, the bus master must initiate a Start\ncondition. Following this, the bus master sends the device select code, shown in Table 88. Device select code  (on\nSerial Data (SDA), the most significant bit first).\nThe device select code consists of a 4-bit device type identifier and a 3-bit Chip Enable “Address” (E2,1,1). To\naddress the memory array, the 4-bit device type identifier is 1010b. Refer to Table 88. Device select code .\nThe eighth bit is the Read/ Write bit (R W). It is set to 1 for Read and to 0 for Write operations.\nTable 88. Device select code\nDevice type identifier (1) Chip Enable address RW\nb7 b6 b5 b4 b3 b2 b1 b0\nDevice select code 1 0 1 0 E2(2) 1 1 RW\n \n1. The most significant bit, b7, is sent first.\n2. E2 is not connected to any external pin. It is however used to address the ST25DVxxx as described in Section 4  Memory\nmanagement .\n• E2 = 0, access to user memory, Dynamic registers or Mailbox.\n• E2 =1, access to system area.\n \nIf a match occurs on the device select code, the corresponding device gives an acknowledgment on serial data\n(SDA) during the ninth bit time. If the device does not match the device select code, it deselects itself from the\nbus, and goes into Standby mode.\nTable 89. Operating modes\nMode RW bit Bytes Initial sequence\nCurrent address read 1 1 Start, device select, R W = 1\nRandom address read0\n1Start, device select, R W = 0, address\n1 reStart, device select, R W = 1\nSequential read 1 ≥ 1 Similar to current or random address read\nByte write 0 1 Start, device select, R W = 0\nSequential write 0 ≤ 256 byte Start, device select, R W = 0\n6.4 I2C write operations\nFollowing a Start condition, the bus master sends a device select code with the Read/ Write bit (R W) reset to 0.\nThe device acknowledges it, and waits for two address bytes. The device responds to each address byte with an\nacknowledge bit, and then waits for the data byte.\nEach data byte in the memory has a 16-bit (two-byte wide) address. The most significant byte (see Table 90 )\nis sent first, followed by the least significant byte (see Table 91 ). Bits b15 to b0 form the address of the byte in\nmemory.\nTable 90. Address most significant byte\nb15 b14 b13 b12 b11 b10 b9 b8\nTable 91. Address least significant byte\nb7 b6 b5 b4 b3 b2 b1 b0\nWhen the bus master generates a Stop condition immediately after the Ack bit (in the tenth-bit time slot), either at\nthe end of a byte write or a sequential write, the internal write cycle is triggered. A Stop condition at any other time\nslot does not trigger the internal write cycle.\nST25DV04K ST25DV16K ST25DV64K\nDevice addressing\nDS10925  - Rev 11 page 64/197\nAfter the Stop condition, the delay t W, and the successful completion of a Write operation, the device internal\naddress counter is incremented automatically, to point to the next byte address after the last one that was\nmodified.\nAfter an unsuccessful write operation, the device enters in I2C dead state: the internal address counter is not\nincremented, and the device waits for a full new I2C instruction (address counter stops to be incremented after\nthe first NoAck bit).\nDuring the internal write cycle, the serial data (SDA) signal is disabled and the device does not respond to any\nrequest.\nCaution: I2C Writing data in user or system memory (EEPROM), transit via the 256-byte fast transfer mode's buffer.\nConsequently fast transfer mode must be deactivated before starting any write operation in user or system\nmemory, otherwise the command is NotACK, programming is not done and device goes in Standby mode.\n6.4.1 I2C Byte write\nAfter the device select code and the address bytes, the bus master sends one data byte.\nIf byte write is not inhibited, the device replies with Ack.\nIf byte write is inhibited, the device replies with NoAck.\nThe bus master terminates the transfer by generating a Stop condition (see Figure 26. Write mode sequences\nwhen write is not inhibited ).\nFor byte write in EEPROM (user memory or system configuration), internal programming starts after the Ack, for a\nduration of t W (as defined in Table 248. I2C AC characteristics (up to 85 °C)  and Table 249. I2C AC characteristics\n(up to 125 °C) ).\nFor writes in fast transfer mode buffer or Dynamic registers, internal programming is done at the Ack.\nIf byte write is inhibited, the device replies with NoAck. The bus master terminates the transfer by generating a\nStop condition and byte location not is modified (see Figure 27. Write mode sequences when write is inhibited ).\nByte write is inhibited if byte complies with one of the following conditions:\n• Byte is in user memory and is write protected with LOCK_CCFILE register.\n• Byte is in user memory and is write protected with I2CSS register, and I2C security session is closed.\n• Byte is in user memory and fast transfer mode is activated.\n• Byte is in system memory and is a Read Only register.\n• Byte is in system memory and I2C security session is closed.\n• Byte is in fast transfer mode’s mailbox and is not the first Byte of mailbox.\n• Byte is in fast transfer mode’s mailbox and mailbox is busy.\n• Byte is in fast transfer mode’s mailbox and fast transfer mode is not activated.\n• Byte is in dynamic registers area and is a Read Only register.\n6.4.2 I2C Sequential write\nThe I2C sequential write allows up to 256 bytes to be written in one command, provided they are all located in the\nsame user memory area or are all located in writable addresses.\nAfter each byte is transferred, the internal byte address counter is incremented.\nFor each byte sent by the bus master:\n• If byte write is not inhibited, the device replies with Ack.\n• If byte write is inhibited, the device replies with NoAck.\nThe transfer is terminated by the bus master generating a Stop condition:\n• For writes in EEPROM (user memory or system configuration), if all bytes have been Ack'ed, internal\nprogramming of all bytes starts after the last Ack, for a duration dependent on the number of bytes to write\n(see below).\n• For writes in fast transfer mode buffer or Dynamic registers, if all bytes have been Ack'ed, internal\nprogramming is done at the Ack.\n• If some bytes have been NotAck’ed, no internal programming is done (0 byte written).\nByte write is inhibited if byte complies with conditions described in Section 6.4.1  I2C Byte write , in addition:\n• Byte is in user memory but does not belong to same area than previous received byte (area border\ncrossing is forbidden).\nST25DV04K ST25DV16K ST25DV64K\nI2C write operations\nDS10925  - Rev 11 page 65/197\n• 256 write occurrence have already been reached in the same sequential write.\nEEPROM memory (user memory and system configuration) is internally organized in pages of 4 bytes long. Data\nlocated in a same page all share the same most significant memory address bits b16-b2.\nI2C sequential write programming time in the EEPROM memory is dependent on this internal organization: total\nprogramming time is the I2C write time t W (as defined in Table 248. I2C AC characteristics (up to 85 °C)  and\nTable 249. I2C AC characteristics (up to 125 °C) ) multiplied by the number of internal EEPROM pages where the\ndata must be programmed, including incomplete pages. For example, a 256 Bytes I2C sequential write, starting at\naddress 0002h will write data over 65 pages. Total write time in this case is t W x 65.\nFigure 26. Write mode sequences when write is not inhibited\nStopStartByte\nWriteDev Select Byte address Byte address Data inStartSequential \nWriteDev Select Byte address Byte address Data in 1 Data in 2\nStopData in NACK\nR/WACK ACK ACK\nACK ACK ACK ACK\nR/WACK ACK\nNote: N ≤ 256\nFigure 27. Write mode sequences when write is inhibited\nStopStartByte\nWriteDev select Byte address Byte address Data inStartSequential\nWriteDev selectByte address Byte address Data in 1 Data in 2\nSequential \nWrite(cont'd)\nStopData in NACK ACK ACK NO ACK\nR/W\nACK ACK ACK NO ACK\nR/W\nNO ACK NO ACK\nNote: N ≤ 256\nST25DV04K ST25DV16K ST25DV64K\nI2C write operations\nDS10925  - Rev 11 page 66/197\n6.4.3 Minimizing system delays by polling on ACK\nDuring the internal write cycle, the device disconnects itself from the bus, and writes a copy of the data from\nits internal latches to the memory cells. The maximum I²C write time (t w) is shown in Table 248. I2C AC\ncharacteristics (up to 85 °C)  and Table 249. I2C AC characteristics (up to 125 °C) , but the typical time is shorter.\nTo make use of this, a polling sequence can be used by the bus master.\nThe sequence, as shown in Figure 28 , is:\n• Initial condition: a write cycle is in progress.\n• Step 1: the bus master issues a Start condition followed by a device select code (the first byte of the new\ninstruction).\n• Step 2: if the device is busy with the internal write cycle, no Ack is returned and the bus master goes back\nto Step 1. If the device has terminated the internal write cycle, it responds with an Ack, indicating that the\ndevice is ready to receive the second part of the instruction (the first byte of this instruction having been\nsent during Step 1).\nNote: There is no need of polling when writing in dynamic registers or in mailbox, since programming time is null.\nFigure 28. Write cycle polling flowchart using ACK\nWrite cycle\nin progress        \nNext\nOperation is\naddressing the\nmemoryStart condition\nDevice select\nwith RW = 0\nACK\nreturned\nYESNO\nYES NO\nStop\nData for the\nWrite operationSend Address\nand Receive ACK\nYES NO\nStartCondition\nContinue the\nWrite operationContinue the\nRandom Read operationDevice select\nwith RW = 1First byte of instruction\nwith RW = 0 already\ndecoded by the device\nST25DV04K ST25DV16K ST25DV64K\nI2C write operations\nDS10925  - Rev 11 page 67/197\n6.5 I2C read operations\nRead operation in user memory is performed successfully only if:\n• Area to which the byte belongs is not read protected by I2CSS register.\n• Area to which the byte belongs is read protected by I2CSS register, but I2C security session is open.\nRead operations in system memory and dynamic registers are done independently of any protection mechanism,\nexcept I2C_PWD register which needs I2C security session to be open first.\nRead operation in fast transfer mode’s mailbox is performed successfully only if fast transfer mode is activated.\nIf read is not successful, ST25DVxxx releases the bus and I2C host reads byte value FFh.\nAfter the successful completion of a read operation, the device’s internal address counter is incremented by one,\nto point to the next byte address.\nAfter an unsuccessful read operation, ST25DVxxx enters in I2C dead state: internal address counter is not\nincremented, and ST25DVxxx is waiting for a full new I2C instruction.\n6.5.1 Random Address Read\nA dummy write is first performed to load the address into this address counter (as shown in Figure 29. Read\nmode sequences ) but without sending a Stop condition. Then, the bus master sends another Start condition, and\nrepeats the device select code, with the Read/ Write bit (R W) set to 1. The device acknowledges this, and outputs\nthe contents of the addressed byte. The bus master must not acknowledge the byte, and terminates the transfer\nwith a Stop condition.\n6.5.2 Current Address Read\nFor the Current Address Read operation, following a Start condition, the bus master only sends a device select\ncode with the Read/ Write bit (R W) set to 1. The device acknowledges this, and outputs the byte addressed by\nthe internal address counter. The counter is then incremented. The bus master terminates the transfer with a Stop\ncondition, as shown in Figure 29. Read mode sequences , without acknowledging the byte.\nST25DV04K ST25DV16K ST25DV64K\nI2C read operations\nDS10925  - Rev 11 page 68/197\nFigure 29. Read mode sequencesStartDev sel * Byte addr Byte addrStartDev sel Data out 1\nData out N\nStopStartCurrent address read\nDev sel Data out\nRandom address read\nStopStartDev sel * Data out\nSequential current read\nStopData out NStartDev sel * Byte addr Byte addrSequential random read\nStartDev sel * Data out1StopACK\nR/WNO ACK\nACK\nR/WACK ACK ACK\nR/W\nACK ACK ACK NO ACK\nR/WNO ACK\nACK ACK ACK\nR/WACK ACK\nR/W\nACK NO ACK\n6.5.3 Sequential Read access\nThis operation can be used after a Current Address Read or a Random Address Read. The bus master does\nacknowledge the data byte output, and sends additional clock pulses so that the device continues to output the\nnext byte in sequence. To terminate the stream of bytes, the bus master must not acknowledge the last byte, and\nmust generate a Stop condition, as shown in Figure 29. Read mode sequences .\nThe output data comes from consecutive addresses, with the internal address counter automatically incremented\nafter each byte output.\nSequential read in user memory:\n• Sequential read cannot cross area borders. After reaching area border, device continues to output FFh\n• There is no roll over inside area or at the end of user memory (ST25DVxxx returns only FFh after last user\nmemory byte address).\nSequential read in system memory:\n• There is no roll over after reaching end of system memory (ST25DVxxx returns only FFh after last system\nmemory byte address).\n• Sequential read in dynamic registers:\n• It is possible to read sequentially dynamic registers and fast transfer mode’s mailbox (contiguous I2C\naddresses).\nST25DV04K ST25DV16K ST25DV64K\nI2C read operations\nDS10925  - Rev 11 page 69/197\nSequential read in dynamic registers:\n• There is no roll over at the end of the mailbox (ST25DVxxx returns only FFh after last system memory byte\naddress).\n6.5.4 Acknowledge in Read mode\nFor all Read commands, the device waits, after each byte read, for an acknowledgement during the ninth bit time.\nIf the bus master does not drive serial data (SDA) low during this time, the device terminates the data transfer and\nswitches to its Standby mode.\n6.6 I2C password management\nThe ST25DVxxx controls I2C security session using an I2C 64-bit password. This I2C password is managed with\ntwo I2C dedicated commands: I2C present password and I2C write password.\n6.6.1 I2C present password command description\nThe I2C present password command is used in I2C mode to present the password to the ST25DVxxx. This is\nused to open I2C security session or to allow I2C password modification (see Section 5.6  Data Protection  for\ndetailed explanation about password usage).\nFollowing a Start condition, the bus master sends a device select code with the Read/  Write  bit (R  W ) reset to\n0 and the Chip Enable bit E2 at 1. The device acknowledges this, as shown in Figure 30. I2C Present Password\nSequence , and waits for two I2C password address bytes, 09h and 00h. The device responds to each address\nbyte with an acknowledge bit, and then waits for the eight password data bytes, the validation code, 09h, and a\nresend of the eight password data bytes. The most significant byte of the password is sent first, followed by the\nleast significant bytes.\nIt is necessary to send the 64-bit password twice to prevent any data corruption during the sequence. If the two\n64-bit passwords sent are not exactly the same, the ST25DVxxx does not start the internal comparison.\nWhen the bus master generates a Stop condition immediately after the Ack bit (during the tenth bit time slot). The\nST25DVxxx compares the 64 received data bits with the 64 bits of the stored I2C password. If the values match,\nthe I2C security session is open, and the I2C_SSO_Dyn register is set to 01h. If the values do not match, the I2C\nsecurity session is closed and I2C_SSO_dyn register is set to 00h.\nI2C_SSO_Dyn is a Dynamic register, it can be checked via I2C host to know If I2C security session is open.\nFigure 30. I2C Present Password SequenceStartDevice \nselect codePassword \n[63:56]Ack\nR/WAck Ack Ack\nDevice select code = 1010111\nAck generated during 9th bit time slot.Ack Ack Ack\nStopAckAckAck Ack AckAck Ack Ack\nPassword \n[55:48]Password \n[47:40]Password \n[39:32]Password \n[31:24]Password \n[23:16]Password \n[15:8]\nAck Ack Ack Ack\nPassword \n[23:16]Password \n[15:08]Password \n[7:0]Password \n[63:56]Password \n[55:48]Password \n[47:40]Password \n[39:32]Password \nAddress 00hPassword \nAddress 09h\nValidation \ncode 09hAck Ack\nPassword \n[7:0]\nAck\nPassword \n[31:24]\n6.6.2 I2C write password command description\nThe I2C write password command is used to update the I2C password value (register I2C_PWD). It cannot be\nused to update any of the RF passwords. After the write cycle, the new I2C password value is automatically\nactivated. The I2C password value can only be modified after issuing a valid I2C present password command.\nST25DV04K ST25DV16K ST25DV64K\nI2C password management\nDS10925  - Rev 11 page 70/197\nFollowing a Start condition, the bus master sends a device select code with the Read/  Write  bit (R  W ) reset to\n0 and the Chip Enable bit E2 at 1. The device acknowledges this, as shown in Figure 31. I2C Write Password\nSequence , and waits for the two I2C password address bytes, 09h and 00h. The device responds to each address\nbyte with an acknowledge bit, and then waits for the four password data bytes, the validation code, 07h, and a\nresend of the eight password data bytes. The most significant byte of the password is sent first, followed by the\nleast significant bytes.\nIt is necessary to send twice the 64-bit password to prevent any data corruption during the write sequence. If the\ntwo 64-bit passwords sent are not exactly the same, the ST25DVxxx does not modify the I2C password value.\nWhen the bus master generates a Stop condition immediately after the Ack bit (during the tenth bit time slot), the\ninternal write cycle is triggered. A Stop condition at any other time does not trigger the internal write cycle.\nDuring the internal write cycle, the serial data (SDA) signal is disabled internally, and the device does not respond\nto any requests.\nCaution: I2C write password command data transits via the 256-Bytes fast transfer mode's buffer. Consequently fast\ntransfer mode must be deactivated before issuing a write password command, otherwise command is NotACK\n(after address LSB), and programming is not done and device goes in standby mode.\nFigure 31. I2C Write Password SequenceStartDevice \nselect codePassword \n[63:56]Ack\nR/WAck Ack Ack\nDevice select code = 1010111\nAck generated during 9th bit time slot.Ack Ack Ack\nStopAck Ack Ack Ack AckAck Ack Ack\nPassword \n[55:48]Password \n[47:40]Password \n[39:32]Password \n[23:16]Password \n[15:08]Password \n[7:0]\nAck Ack Ack Ack\nPassword \n[23:16]Password \n[15:08]Password \n[7:0]Password \n[63:56]Password \n[55:48]Password \n[47:40]Password \n[39:32]Password \nAddress 00hPassword \nAddress 09h\nValidation \ncode 07hAck\nPassword \n[31:24]\nAck\nPassword \n[31:24]\nST25DV04K ST25DV16K ST25DV64K\nI2C password management\nDS10925  - Rev 11 page 71/197\n7 RF operation\nContactless exchanges are performed in RF mode as specified by ISO/IEC 15693 or NFC Forum Type 5.\nThe ST25DVxxx communicate via the 13.56 MHz carrier electromagnetic wave, on which incoming data are\ndemodulated from the received signal amplitude modulation (ASK: amplitude shift keying). The received ASK\nwave is 10% or 100% modulated, with a data rate of 1.6 Kbit/s using the 1/256 pulse coding mode, or a data rate\nof 26 Kbit/s using the 1/4 pulse coding mode.\nOutgoing data are generated by the ST25DVxxx load variation using Manchester coding with one or two\nsubcarrier frequencies at 423 and 484 kHz. Data are transferred from the ST25DVxxx at 6.6 Kbit/s in low data\nrate mode, at 26 Kbit/s in high data rate mode. The ST25DVxxx supports 53 Kbit/s in high data rate mode in one\nsubcarrier frequency at 423 kHz.\nThe ST25DVxxx follows ISO/IEC 15693 or NFC Forum Type 5 recommendations for radio-frequency power and\nsignal interface and for anticollision and transmission protocol.\n7.1 RF communication\n7.1.1 Access to an ISO/IEC 15693 device\nThe dialog between the “RF reader” and the ST25DVxxx takes place as follows:\n• device activation by the RF operating field of the reader\n• transmission of a command by the reader (the device detects carrier amplitude modulation)\n• transmission of a response by the device using load modulation\nThese operations use the RF power transfer and communication signal interface described below. This technique\nis called RTF (Reader talk first).\nOperating field\nThe ST25DVxxx operates continuously between the minimum and maximum values of the electromagnetic field H\ndefined in Table 253. RF characteristics . The reader must generate a field within these limits.\nPower transfer\nPower is transferred to the ST25DVxxx by radio frequency at 13.56 MHz via coupling antennas. The RF\noperating field of the reader is transformed on the device antenna into an AC voltage, which is rectified,\nfiltered and internally regulated. During communication, the amplitude modulation (ASK) on this received signal is\ndemodulated by the ASK demodulator\nFrequency\nThe ISO 15693 standard defines the carrier frequency (f C) of the operating field as 13.56 MHz ±7 kHz.\n7.2 RF communication and energy harvesting\nAs the current consumption can affect the AC signal delivered by the antenna, RF communications with\nST25DVxxx are not guaranteed during voltage delivery on the energy harvesting analog output V_EH.\nRF communication can disturb and possibly stop Energy Harvesting mode.\n7.3 Fast transfer mode mailbox access in RF\nThanks to dedicated commands, the RF interface has the possibility to check Mailbox availability, and the\ncapability to access it directly to put or get a message from it (see Section 5.1  Fast transfer mode (FTM)  for\nspecific features).\nST25DV04K ST25DV16K ST25DV64K\nRF operation\nDS10925  - Rev 11 page 72/197\n7.4 RF protocol description\n7.4.1 Protocol description\nThe transmission protocol (or simply “the protocol”) defines the mechanism used to exchange instructions and\ndata between the VCD (Vicinity Coupling Device) and the ST25DVxxx in both directions. It is based on the\nconcept of “VCD talks first”.\nThis means that a ST25DVxxx does not start transmitting unless it has received and properly decoded an\ninstruction sent by the VCD. The protocol is based on an exchange of:\n• a request from the VCD to the ST25DVxxx,\n• a response from the ST25DVxxx to the VCD.\nEach request and each response are contained in a frame. The frame are delimited by a Start of Frame (SOF)\nand End of Frame (EOF).\nThe protocol is bit-oriented. The number of bits transmitted in a frame is a multiple of eight (8), that is an integer\nnumber of bytes.\nA single-byte field is transmitted least significant bit (LSBit) first. A multiple-byte field is transmitted least\nsignificant byte (LSByte) first and each byte is transmitted least significant bit (LSBit) first.\nFigure 32. ST25DVxxx protocol timing\nRequest \nframeRequest\nframe\nResponse \nframeResponse\n frameVCD\nST25DVxxx\nTiming t1 t2 t1 t2\n7.4.2 ST25DVxxx states referring to RF protocol\nThe ST25DVxxx can be in one of four states:\n• Power-off\n• Ready\n• Quiet\n• Selected\nTransitions between these states are specified in Figure 33. ST25DVxxx state transition diagram  and\nTable 92. ST25DVxxx response depending on Request_flags .\nPower-off state\nThe ST25DVxxx is in the Power-off state when it does not receive enough energy from the VCD.\nReady state\nThe ST25DVxxx is in the Ready state when it receives enough energy from the VCD. When in the Ready state,\nthe ST25DVxxx answers any request where the Select_flag is not set.\nQuiet state\nWhen in the Quiet state, the ST25DVxxx answers any request with the Address_flag set, except for Inventory\nrequests.\nST25DV04K ST25DV16K ST25DV64K\nRF protocol description\nDS10925  - Rev 11 page 73/197\nSelected state\nIn the Selected state, the ST25DVxxx answers any request in all modes (see Section 7.4.3  Modes ):\n• Request in Select mode with the Select_flag set\n• Request in Addressed mode if the UID matches\n• Request in Non-Addressed mode as it is the mode for general requests\nTable 92. ST25DVxxx response depending on Request_flags\nFlagsAddress_flag Select_flag\n1\nAddressed0\nNon addressed1\nSelected0\nNon selected\nST25DVxxx in Ready or Selected state\n(Devices in Quiet state do not answer)- X - X\nST25DVxxx in Selected state - X X -\nST25DVxxx in Ready, Quiet or Selected\nstate (the device which matches the\nUID)X - - X\nError (03h) or no response (command\ndependent)X - X -\nFigure 33. ST25DVxxx state transition diagram\nDT43017V2In RF field\nStay quiet(UID)Select (UID)\nAny other commandStay quiet(UID)Select (UID)\nReset to readyInventory\nOut of RF field \nafter t RF_OFF      Out of RF field \nafter t RF_OFF      Out of field \nafter t RF_OFF      \nAny other command where the \nAddress_Flag is set AND where \nthe Inventory_Flag is not setAny other command \nwhere Select_Flag \nis not set\nReset to ready where\nSelect_Flag is set or \nSelect with (# UID)Power off\nQuietSelectedReady\n1. The ST25DVxxx returns to the Power Off state if the tag is out of the RF field for at least t RF_OFF .\nThe intention of the state transition method is that only one ST25DVxxx should be in the Selected state at a time.\nWhen the Select_flag is set to 1, the request shall NOT contain a unique ID.\nWhen the address_flag is set to 0, the request shall NOT contain a unique ID.\n7.4.3 Modes\nThe term “mode” refers to the mechanism used in a request to specify the set of ST25DVxxx devices that shall\nexecute the request.\nST25DV04K ST25DV16K ST25DV64K\nRF protocol description\nDS10925  - Rev 11 page 74/197\nAddressed mode\nWhen the Address_flag is set to 1 (Addressed mode), the request contains the Unique ID (UID) of the addressed\nST25DVxxx.\nAny ST25DVxxx that receives a request with the Address_flag set to 1 compares the received Unique ID to its\nown. If it matches, then the ST25DVxxx executes the request (if possible) and returns a response to the VCD as\nspecified in the command description.\nIf the UID does not match, then it remains silent.\nNon-addressed mode (general request)\nWhen the Address_flag is cleared to 0 (Non-Addressed mode), the request does not contain a Unique ID.\nSelect mode\nWhen the Select_flag is set to 1 (Select mode), the request does not contain a unique ID. The ST25DVxxx in the\nSelected state that receives a request with the Select_flag set to 1 executes it and returns a response to the VCD\nas specified in the command description.\nOnly the ST25DVxxx in the Selected state answers a request where the Select_flag is set to 1.\nThe system design ensures that only one ST25DVxxx can be in the Select state at a time.\n7.4.4 Request format\nThe request consists of:\n• an SOF,\n• flags,\n• a command code,\n• parameters and data,\n• a CRC,\n• an EOF.\nTable 93. General request format\nSOF Request_flags Command code Parameters Data 2 bytes CRC EOF\n7.4.5 Request flags\nIn a request, the “flags” field specifies the actions to be performed by the ST25DVxxx and whether corresponding\nfields are present or not.\nThe flags field consists of eight bits. Bit 3 (Inventory_flag) of the request flag defines the contents of the four\nMSBs (bits 5 to 8). When bit 3 is reset (0), bits 5 to 8 define the ST25DVxxx selection criteria. When bit 3 is set\n(1), bits 5 to 8 define the ST25DVxxx Inventory parameters.\nST25DV04K ST25DV16K ST25DV64K\nRF protocol description\nDS10925  - Rev 11 page 75/197\nTable 94. Definition of request flags 1 to 4\nBit No Flag Level Description\nBit 1 Subcarrier_flag (1)0 A single subcarrier frequency is used by the ST25DVxxx\n1 Two subcarriers are used by the ST25DVxxx\nBit 2 Data_rate_flag (2)0 Low data rate is used\n1 High data rate is used\nBit 3 Inventory_flag0The meaning of flags 5 to 8 is described in Table 95. Request\nflags 5 to 8 when inventory_flag, Bit 3 = 0\n1The meaning of flags 5 to 8 is described in Table 96. Request\nflags 5 to 8 when inventory_flag, Bit 3 = 1\nBit 4Protocol_extension\n_flag0 No Protocol format extension\n1 Protocol format extension. Reserved for future use.\n \n1. Subcarrier_flag refers to the ST25DVxxx-to-VCD communication.\n2. Data_rate_flag refers to the ST25DVxxx-to-VCD communication.\n \nTable 95. Request flags 5 to 8 when inventory_flag, Bit 3 = 0\nBit nb Flag Level Description\nBit 5 Select flag (1)0The request is executed by any ST25DVxxx according to the\nsetting of Address_flag\n1The request is executed only by the ST25DVxxx in Selected\nstate\nBit 6 Address flag0The request is not addressed. UID field is not present. The\nrequest is executed by all ST25DVxxxs.\n1The request is addressed. UID field is present. The request\nis executed only by the ST25DVxxx whose UID matches the\nUID specified in the request.\nBit 7 Option flag0 Option not activated.\n1 Option activated.\nBit 8 RFU 0 -\n \n1. If the Select_flag is set to 1, the Address_flag is set to 0 and the UID field is not present in the request.\n \nTable 96. Request flags 5 to 8 when inventory_flag, Bit 3 = 1\nBit nb Flag Level Description\nBit 5 AFI flag0 AFI field is not present\n1 AFI field is present\nBit 6 Nb_slots flag0 16 slots\n1 1 slot\nBit 7 Option flag 0 -\nBit 8 RFU 0 -\nST25DV04K ST25DV16K ST25DV64K\nRF protocol description\nDS10925  - Rev 11 page 76/197\n7.4.6 Response format\nThe response consists of:\n• an SOF\n• flags\n• parameters and data\n• a CRC\n• an EOF\nTable 97. General response format\nSOF Response_flags Parameters Data 2 byte CRC EOF\n7.4.7 Response flags\nIn a response, the flags indicate how actions have been performed by the ST25DVxxx and whether\ncorresponding fields are present or not. The response flags consist of eight bits.\nTable 98. Definitions of response flags 1 to 8\nBit Nb Flag Level Description\nBit 1 Error_flag0 No error\n1 Error detected. Error code is in the “Error” field.\nBit 2 RFU 0 -\nBit 3 RFU 0 -\nBit 4 Extension flag 0 No extension\nBit 5 RFU 0 -\nBit 6 RFU 0 -\nBit 7 RFU 0 -\nBit 8 RFU 0 -\nST25DV04K ST25DV16K ST25DV64K\nRF protocol description\nDS10925  - Rev 11 page 77/197\n7.4.8 Response and error code\nIf the Error_flag is set by the ST25DVxxx in the response, the Error code field is present and provides information\nabout the error that occurred.\nError codes not specified in Table 99  are reserved for future use.\nTable 99. Response error code definition\nError code Meaning\n01h Command is not supported.\n02h Command is not recognized (format error).\n03h The option is not supported.\n0Fh Error with no information given.\n10h The specified block is not available.\n11h The specified block is already locked and thus cannot be locked again.\n12h The specified block is locked and its contents cannot be changed.\n13h The specified block was not successfully programmed.\n14h The specified block was not successfully locked.\n15h The specified block is protected in read.\n7.5 Timing definition\nt1: ST25DVxxx response delay\nUpon detection of the rising edge of the EOF received from the VCD, the ST25DVxxx waits for a t 1nom time before\ntransmitting its response to a VCD request or switching to the next slot during an inventory process. Values of t 1\nare given in Table 100. Timing values .\nt2: VCD new request delay\nt2 is the time after which the VCD may send an EOF to switch to the next slot when one or more ST25DVxxx\nresponses have been received during an Inventory command. It starts from the reception of the EOF from the\nST25DVxxxs.\nThe EOF sent by the VCD may be either 10% or 100% modulated regardless of the modulation index used for\ntransmitting the VCD request to the ST25DVxxx.\nt2 is also the time after which the VCD may send a new request to the ST25DVxxx, as described in\nFigure 32. ST25DVxxx protocol timing .\nValues of t 2 are given in Table 100. Timing values .\nt3: VCD new request delay when no response is received from the ST25DVxxx\nt3 is the time after which the VCD may send an EOF to switch to the next slot when no ST25DVxxx response has\nbeen received.\nThe EOF sent by the VCD may be either 10% or 100% modulated regardless of the modulation index used for\ntransmitting the VCD request to the ST25DVxxx.\nFrom the time the VCD has generated the rising edge of an EOF:\n• If this EOF is 100% modulated, the VCD waits for a time at least equal to t 3min for 100% modulation before\nsending a new EOF.\n• If this EOF is 10% modulated, the VCD waits for a time at least equal to t 3min for 10% modulation before\nsending a new EOF.\nST25DV04K ST25DV16K ST25DV64K\nTiming definition\nDS10925  - Rev 11 page 78/197\nTable 100. Timing values\nMinimum (min) values\nNominal (nom) values Maximum (max) values\n100% modulation 10% modulation\nt1 4320 / f c = 318.6 µs 4352 / f c = 320.9 µs 4384 / f c = 323.3 µs (1)\nt2 4192 / f c = 309.2 µs No t nom No t max\nt3 t1max(2) + tSOF (3)t1max(2) + tNRT (4) + t2min No t nom No t max\n \n1. VCD request will not be interpreted during the first milliseconds following the RF field rising.\n2. t 1max does not apply for write-alike requests. Timing conditions for write-alike requests are defined in the command\ndescription.\n3. t SOF is the time taken by the ST25DVxxx to transmit an SOF to the VCD. t SOF depends on the current data rate: High data\nrate or Low data rate.\n4. t NRT is the nominal response time of the ST25DVxxx. t NRT depends on V ICC to ST25DVxxx data rate and subcarrier\nmodulation mode.\n \nNote: The tolerance of specific timings is ± 32/f C.\nST25DV04K ST25DV16K ST25DV64K\nTiming definition\nDS10925  - Rev 11 page 79/197\n7.6 RF commands\n7.6.1 RF command code list\nThe ST25DVxxx supports the following legacy and extended RF command set:\n• Inventory , used to perform the anticollision sequence.\n• Stay Quiet , used to put the ST25DVxxx in quiet mode, where it does not respond to any inventory\ncommand.\n• Select , used to select the ST25DVxxx. After this command, the ST25DVxxx processes all Read/Write\ncommands with Select_flag set.\n• Reset To Ready , used to put the ST25DVxxx in the ready state.\n• Read Single Block and Extended Read Single Block , used to output the 32 bit of the selected block and\nits locking status.\n• Write Single Block and Extended Write Single Block , used to write and verify the new content for an\nupdate of a 32 bit block, provided that it is not in a locked memory area.\n• Read Multiple Blocks and Extended Read Multiple Block , used to read the selected blocks in an unique\narea, and send back their value.\n• Write Multiple Blocks and Extended Write Multiple Block , used to write and verify the new content for\nan update of up to 4 blocks located in the same memory area, which was not previously locked for writing.\n• Write AFI , used to write the 8-bit value in the AFI register.\n• Lock AFI , used to lock the AFI register.\n• Write DSFID , used to write the 8-bit value in the DSFID register.\n• Lock DSFID , used to lock the DSFID register.\n• Get System information and Extended Get System Information , used to provide the system information\nvalue.\n• Get System information , used to provide the standard system information values.\n• Extended Get System Information , used to provide the extended system information values.\n• Write Password , used to update the 64 bit of the selected areas or configuration password, but only after\npresenting the current one.\n• Lock Block and Extended Lock block , used to write the CC file blocks security status bits (Protect the\nCC File content against writing).\n• Present Password , enables the user to present a password to open a security session.\n• Fast Read Single Block  and Fast Extended Read Single Block, used to output the 32 bits of the\nselected block and its locking status at doubled data rate.\n• Fast Read Multiple Blocks and Fast Extended Read Multiple Blocks , used to read the selected blocks\nin a single area and send back their value at doubled data rate.\n• Read Message , used to output up to 256 byte of the Mailbox.\n• Read Message Length , used to output the Mailbox message length.\n• Fast Read Message , used to output up to 256 byte of the mailbox, at double data rate.\n• Write Message , used to write up to 256 byte in the Mailbox.\n• Fast Read Message Length , used to ouput the mailbox length, at double data rate.\n• Fast Write Message , used to write up to 256 bytes in the mailbox, with answer at double data rate.\n• Read Configuration , used to read static configuration registers.\n• Write Configuration , used to write static configuration registers.\n• Read Dynamic Configuration,  used to read dynamic register.\n• Write Dynamic Configuration  , used to write dynamic register.\n• Fast Read Dynamic Configuration , used to read dynamic register, at double data rate.\n• Fast Write Dynamic Configuration , used to write dynamic register, with answer at double data rate.\n• Manage GPO , used to drive GPO output value when corresponding GPO mode is enabled.\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 80/197\n7.6.2 Command codes list\nThe ST25DVxxx supports the commands described in this section. Their codes are given in Table 101. Command\ncodes .\nTable 101. Command codes\nCommand\ncode standardFunctionCommand\ncode customFunction\n01h Inventory A0h Read Configuration\n02h Stay Quiet A1h Write Configuration\n20h Read Single Block A9h Manage GPO\n21h Write Single Block AAh Write Message\n22h Lock Block ABh Read Message Length\n23h Read Multiple Blocks ACh Read Message\n24h Write Multiple Blocks ADh Read Dynamic Configuration\n25h Select AEh Write Dynamic Configuration\n26h Reset to Ready B1h Write Password\n27h Write AFI B3h Present Password\n28h Lock AFI C0h Fast Read Single Block\n29h Write DSFID C3h Fast Read Multiple Blocks\n30h Extended Read Single Block C4h Fast Extended Read Single Block\n31h Extended Write Single Block C5h Fast Extended Read Multiple Block\n32h Extended Lock block CAh Fast Write Message\n33h Extended Read Multiple Blocks CBh Fast Read Message Length\n34h Extended Write Multiple Blocks CCh Fast Read Message\n2Ah Lock DSFID CDh Fast Read Dynamic configuration\n2Bh Get System Info CEh Fast Write Dynamic Configuration\n2Ch Get Multiple Block Security Status - -\n3Bh Extended Get System Info - -\n3Ch Extended Get Multiple Block Security Status - -\n7.6.3 General command rules\nIn case of a valid command, the following paragraphs will describe the expected behavior for each command.\nBut in case of an invalid command, in a general manner, the ST25DVxxx will behave as follows:\n1. if flag usage is incorrect, the error code 03h will be issued only if the right UID is used in the command,\notherwise no response will be issued.\n2. error 02h will be issued if the custom command is used with the manufacturer code different from the ST\none\nAnother case is if I2C is busy. In this case, any RF command (except Inventory, Select, Stay quiet and Reset to\nready) will get 0Fh error code as response only:\n• if select flag and address flags are not set at the same time (except if ST25DVxxx is in quiet state)\n• if select flag is set and ST25DVxxx is in selected state.\nFor all other commands, if I2C is busy, no response will be issued by ST25DVxxx.\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 81/197\n7.6.4 Inventory\nUpon receiving the Inventory request, the ST25DVxxx runs the anticollision sequence. The Inventory_flag is set to\n1. The meaning of flags 5 to 8 is shown in Table 96. Request flags 5 to 8 when inventory_flag, Bit 3 = 1 .\nThe request contains:\n• the flags\n• the Inventory command code (001)\n• the AFI if the AFI flag is set\n• the mask length\n• the mask value if mask length is different from 0\n• the CRC\nThe ST25DVxxx does not generate any answer in case of error.\nTable 102. Inventory request format\nRequest\nSOFRequest_flags Inventory Optional AFI Mask length Mask value CRC16Request\nEOF\n- 8 bits 01h 8 bits 8 bits 0 - 64 bits 16 bits -\nThe response contains:\n• the flags\n• the Unique ID\nTable 103. Inventory response format\nResponse SOF Response_flags DSFID UID CRC16 Response EOF\n- 8 bits 8 bits 64 bits 16 bits -\nDuring an Inventory process, if the VCD does not receive an RF ST25DVxxx response, it waits for a time t 3 before\nsending an EOF to switch to the next slot. t 3 starts from the rising edge of the request EOF sent by the VCD.\n• If the VCD sends a 100% modulated EOF, the minimum value of t 3 is:\nt3min = 4384/f C (323.3µs) + t SOF\n• If the VCD sends a 10% modulated EOF, the minimum value of t 3 is:\nt3min = 4384/f C (323.3µs) +  t NRT +  t 2min\nwhere:\n• t SOF is the time required by the ST25DVxxx to transmit an SOF to the VCD,\n• t NRT is the nominal response time of the ST25DVxxx.\ntNRT and t SOF are dependent on the ST25DVxxx-to-VCD data rate and subcarrier modulation mode.\nNote: In case of error, no response is sent by ST25DVxxx.\n7.6.5 Stay Quiet\nOn receiving the Stay Quiet command, the ST25DVxxx enters the Quiet state if no error occurs, and does NOT\nsend back a response. There is NO response to the Stay Quiet command even if an error occurs.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nWhen in the Quiet state:\n• the ST25DVxxx does not process any request if the Inventory_flag is set,\n• the ST25DVxxx processes any Addressed request.\nThe ST25DVxxx exits the Quiet state when:\n• it is reset (power off),\n• receiving a Select request. It then goes to the Selected state,\n• receiving a Reset to Ready request. It then goes to the Ready state.\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 82/197\nTable 104. Stay Quiet request format\nRequest SOF Request flags Stay Quiet UID CRC16 Request EOF\n- 8 bits 02h 64 bits 16 bits -\nThe Stay Quiet command must always be executed in Addressed mode (Select_flag is reset to 0 and\nAddress_flag is set to 1).\nFigure 34. Stay Quiet frame exchange between VCD and ST25DVxxx\nSOFStay Quiet \nrequest VCD\nST25DVxxxEOF\n7.6.6 Read Single Block\nOn receiving the Read Single Block command, the ST25DVxxx reads the requested block and sends back its\n32-bit value in the response. The Option_flag is supported, when set response include the Block Security Status.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 1 byte, and only the first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 105. Read Single Block request format\nRequest SOF Request_flags Read Single Block UID (1) Block number CRC16 Request EOF\n- 8 bits 20h 64 bits 8 bits 16 bits -\n \n1. This the field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number\nTable 106. Read Single Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits 32 bits 16 bits -\n \n1. This field is optional.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 107. Block security status )\n• Four bytes of block data\nTable 107. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use.\nAll at 0.0: Current block not locked\n1: Current block locked\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 83/197\nTable 108. Read Single Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option not supported\n– 0Fh: error with no information\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 35. Read Single Block frame exchange between VCD and ST25DVxxx\nSOFRead Single Block \nrequestVCD\nST25DVxxxEOF\nSOFRead Single Block \nresponseEOF t1\n7.6.7 Extended Read Single Block\nOn receiving the Extended Read Single Block command, the ST25DVxxx reads the requested block and sends\nback its 32-bit value in the response.\nWhen the Option_flag is set, the response includes the Block Security Status.\nBlock number is coded on 2 Bytes so all memory blocks of ST25DV16K-xx and\nST25DV64K-xx can be addressed using this command.\nTable 109. Extended Read Single Block request format\nRequest SOF Request_flags Extended Read Single Block UID (1) Block number CRC16 Request EOF\n- 8 bits 30h 64 bits 16 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number (from LSB byte to MSB byte)\nTable 110. Extended Read Single Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits 32 bits 16 bits -\n \n1. This field is optional.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 107. Block security status )\n• Four bytes of block data\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 84/197\nTable 111. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use.\nAll at 0.0: Current block not locked\n1: Current block locked\nTable 112. Extended Read Single Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option not supported or no response\n– 0Fh: error with no information\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 36. Extended Read Single Block frame exchange between VCD and ST25DVxxx\nSOFExtended Read \nSingle Block \nrequestVCD\nST25DVxxxEOF\nSOFExtended Read \nSingle Block \nresponseEOF t1\n7.6.8 Write Single Block\nOn receiving the Write Single Block command, the ST25DVxxx writes the data contained in the request to the\ntargeted block and reports whether the write operation was successful in the response. When the Option_flag is\nset, wait for EOF to respond. The Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not program correctly the data into the memory. The W t time is equal to t 1nom + N × 302 µs (N is an integer).\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 113. Write Single Block request format\nRequest SOF Request_flags Write Single Block UID (1) Block number Data CRC16 Request EOF\n- 8 bits 21h 64 bits 8 bits 32 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number\n• Data\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 85/197\nTable 114. Write Single Block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the writing cycle.\nTable 115. Write Single Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 12h: the specified block is locked or protected and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nNote: For more details, see Figure 7. Memory organization .\nFigure 37. Write Single Block frame exchange between VCD and ST25DVxxx\nSOFWrite Single \nBlock requestVCD EOF\nST25DVxxx t1 SOFWrite Single\nBlock responseEOF\nSOFWrite Single\nBlock responseEOF ST25DVxxx WtWrite sequence \nwhen error\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 86/197\n7.6.9 Extended Write Single Block\nOn receiving the Extended Write Single command, the ST25DVxxx writes the data contained in the request to the\ntargeted block and reports whether the write operation was successful in the response. When the Option_flag is\nset, wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not program correctly the data into the memory. The W t time is equal to t 1nom + N × 302 µs (N is an integer).\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 116. Extended Write Single request format\nRequest SOF Request_flags Extended Write Single Block UID (1)Block number Data CRC16 Request EOF\n- 8 bits 31h 64 bits 16 bits 32 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number (from LSB byte to MSB byte)\n• Data (from LSB byte to MSB byte)\nTable 117. Extended Write Single response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the writing cycle.\nTable 118. Extended Write Single response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 12h: the specified block is locked and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 87/197\nFigure 38. Extended Write Single frame exchange between VCD and ST25DVxxx\nSOFExtended Write \nSingle requestVCD EOF\nST25DVxxx t1 SOFExtended Write \nSingle responseEOF\nSOFExtended Write \nSingle responseEOF ST25DVxxx WtWrite sequence \nwhen error\n7.6.10 Lock Block\nOn receiving the Lock block request, the ST25DVxxx locks the single block value permanently and protects its\ncontent against new writing.\nThis command is only applicable for the blocks 0 and 1 which may include a CC file.\nFor a global protection of a area, update accordingly the RFA iSS bits in the system area. The Option_flag is\nsupported, when set wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not lock correctly the single block value in memory. The W t time is equal to t 1nom + N × 302 µs (N is an\ninteger).\nTable 119. Lock block request format\nRequest SOF Request_flags Lock block UID (1) block number CR7C16 Request EOF\n- 8 bits 22h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request Flags\n• UID (optional)\n• Only block numbers 0 and 1 are allowed to protect the CCFile in case of NDEF (from LSB byte to MSB\nbyte)\nTable 120. Lock block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nTable 121. Lock block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 88/197\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option not supported\n– 10h: block not available\n– 11h: the specified block is already locked and thus cannot be locked again\n– 14h: the specified block was not successfully locked\nFigure 39. Lock Block frame exchange between VCD and ST25DVxxx\nSOFLock Block \nrequestVCD EOF\nST25DVxxx t1 SOFLock Block  \nresponseEOF\nSOFLock Block  \nresponseEOF ST25DVxxx WtLock sequence \nwhen error\n7.6.11 Extended Lock block\nOn receiving the extended Lock block request, the ST25DVxxx locks the single block value permanently and\nprotects its content against new writing.\nThis command is only applicable for the blocks 0 and 1 which may include a CC file.\nFor a global protection of a area, update accordingly the AiSS bits in the system area. When the Option_flag is\nset, wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not lock correctly the single block value in memory. The W t time is equal to t 1nom + N × 302 µs (N is an\ninteger).\nTable 122. Extended Lock block request format\nRequest SOF Request_flags Extended Lock block UID (1) block number CRC16 Request EOF\n- 8 bits 32h 64 bits 16 bits 16 bits -\n \n1. The field is optional.\n \nRequest parameter:\n• Request Flags\n• UID (optional)\n• Only block numbers 0 and 1 are allowed to protect the CCFile in case of NDEF (from LSB byte to MSB\nbyte)\nTable 123. Extended Lock block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 89/197\nResponse parameter:\n• No parameter\nTable 124. Extended Lock block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option not supported\n– 10h: block not available\n– 11h: the specified block is already locked and thus cannot be locked again\n– 14h: the specified block was not successfully locked\nFigure 40. Extended Lock block frame exchange between VCD and ST25DVxxx\nSOFExtended \nLock block \nrequestVCD EOF\nST25DVxxx t1 SOFExtended \nLock block \nresponseEOF\nSOFExtended \nLock block \nresponseEOF ST25DVxxx WtLock sequence \nwhen error\n7.6.12 Read Multiple Blocks\nWhen receiving the Read Multiple Block command, the ST25DVxxx reads the selected blocks and sends back\ntheir value in multiples of 32 bits in the response. The blocks are numbered from 00h to FFh in the request and\nthe value is minus one (–1) in the field. For example, if the “Number of blocks” field contains the value 06h, seven\nblocks are read. The maximum number of blocks is fixed at 256 assuming that they are all located in the same\narea. If the number of blocks overlaps areas or overlaps the end of user memory, the ST25DVxxx returns an error\ncode. When the Option_flag is set, the response returns the Block Security Status.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 125. Read Multiple Block request format\nRequest SOF Request_flagsRead Multiple\nBlockUID (1)First block\nnumberNumber of blocks CRC16 Request EOF\n- 8 bits 23h 64 bits 8 bits 8 bits 16 bits -\n \n1. The field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 90/197\n• First block number\n• Number of blocks\nTable 126. Read Multiple Block response format when Error_flag is NOT set\nResponse SOFResponse_\nflagsBlock security\nstatus (1)Data CRC16 Response EOF\n- 8 bits 8 bits (2)32 bits(2) 16 bits -\n \n1. The field is optional.\n2. Repeated as needed.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 127. Block security status )\n• N blocks of data\nTable 127. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use.\nAll at 0.0: Current block not locked\n1: Current block locked\nTable 128. Read Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 41. Read Multiple Block frame exchange between VCD and ST25DVxxx\nSOFRead Multiple\n Block requestVCD\nST25DVxxxEOF\nSOFRead Multiple  \nBlock responseEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 91/197\n7.6.13 Extended Read Multiple Blocks\nWhen receiving the Extended Read multiple block command, the ST25DVxxx reads the selected blocks and\nsends back their value in multiples of 32 bits in the response. The blocks are numbered from 00h to last block\nof memory in the request and the value is minus one (-1) in the field. For example, if the “Number of blocks”\nfield contains the value 06h, seven blocks are read. The maximum number of blocks is fixed at 2047 assuming\nthat they are all located in the same area. If the number of blocks overlaps areas or overlaps the end of user\nmemory, the ST25DVxxx returns an error code. When the Option_flag is set, the response returns the Block\nSecurity Status.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 2 Bytes so all memory blocks of ST25DV16K-xx and ST25DV64K-xx can be addressed\nusing this command.\nTable 129. Extended Read Multiple Block request format\nRequest\nSOFRequest_flagsExtended\nRead\nMultiple\nBlockUID (1)First block\nnumberNumber of\nblocksCRC16Request\nEOF\n- 8 bits 33h 64 bits 16 bits 16 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• First block number (from LSB byte to MSB byte)\n• Number of blocks (from LSB byte to MSB byte)\nTable 130. Extended Read Multiple Block response format when Error_flag is NOT set\nResponse SOFResponse_\nflagsBlock security\nstatus (1)Data CRC16 Response EOF\n- 8 bits 8 bits (2)32 bits (2) 16 bits -\n \n1. This field is optional.\n2. Repeated as needed.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 131. Block security status )\n• N blocks of data\nTable 131. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use.\nAll at 00: Current block not locked\n1: Current block locked\nTable 132. Extended Read Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 92/197\n• Error code as Error_flag is set:\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 42. Extended Read Multiple Block frame exchange between VCD and ST25DVxxx\nSOFExtended \nRead Multiple\n Block requestVCD\nST25DVxxxEOF\nSOFExtended \nRead Multiple  \nBlock responseEOF t1\n7.6.14 Write Multiple Blocks\nOn receiving the Write Multiple Block command, the ST25DVxxx writes the data contained in the request to the\nrequested blocks, and reports whether the write operation were successful in the response. ST25DVxxx supports\nup to 4 blocks, data field must be coherent with the number of blocks to program.\nIf some blocks overlaps areas, or overlap end of user memory, the ST25DVxxx returns an error code and none of\nthe blocks are programmed. When the Option_flag is set, wait for EOF to respond. During the RF write cycle Wt,\nthere should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx may not program correctly the\ndata into the memory. The W t time is equal to t 1nom + m × 302  μs < 20 ms. (m is an integer, it is function of Nb\nnumber of blocks to be programmed).\nThe Inventory_flag must be set to 0.\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 133. Write Multiple Block request format\nRequest\nSOFRequest_flagsWrite\nMultiple\nBlockUID (1)First Block\nnumberNumber of\nblock (2)Data CRC16Request\nEOF\n- 8 bits 24h 64 bits 8 bits 8 bitsBlock length\n(3)16 bits -\n \n1. This field is optional.\n2. The number of blocks in the request is one less than the number of blocks that the VICC shall write.\n3. Repeated as needed\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• First Block number\n• Number of blocks\n• Data\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 93/197\nTable 134. Write Multiple Block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the writing cycle.\nTable 135. Write Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 12h: the specified block is locked and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nFigure 43. Write Multiple Block frame exchange between VCD and ST25DVxxx\nSOFWrite Multiple \nblock requestVCD EOF\nST25DVxxx t1 SOFWrite Multiple \nblock responseEOF\nSOFWrite Multiple \nblock responseEOF ST25DVxxx WtWrite sequence \nwhen error\n7.6.15 Extended Write Multiple Blocks\nOn receiving this command, the device writes the data contained in the request to the targeted blocks and reports\nwhether the write operation was successful in the response. ST25DVxxx supports up to four blocks, data field\nmust be coherent with number of blocks to program.\nIf some blocks overlap, or overlap end of user memory, the device returns an error code, and none of the blocks\nare programmed.\nWhen the Option_flag is set, wait for EOF to respond. During the RF write cycle Wt, there should be no\nmodulation (neither 100% nor 10%), otherwise the ST25DVxxx may not program correctly the data into the\nmemory. The W t time is equal to t 1nom + m × 302 μs < 20 ms (m is an integer function of Nb number of blocks to\nbe programmed).\nThe inventory_flag must be set to 0.\nBlock number is coded on 2 bytes, so all memory blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 94/197\nTable 136. Extended Write Multiple Block request format\nRequest\nSOFRequest_flagsExtended\nWrite multiple\nblockUID (1)First block\nnumberNumber of\nblock (2)Data CRC16Request\nEOF\n- 8 bits 34h 64 bits 16 bits 16 bitsBlock\nlength (3)16 bits -\n \n1. This field is optional.\n2. The number of blocks in the request is one less than the number of blocks that the VICC must write.\n3. Repeated as needed\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• First block number (from LSB byte to MSB byte)\n• Number of block (from LSB byte to MSB byte)\n• Data (from first to last blocks, from LSB bytes to MSB bytes)\nTable 137. Extended Write Multiple Block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the writing cycle.\nTable 138. Extended Write Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 12h: the specified block is locked and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 95/197\nFigure 44. Extended Write Multiple Block frame exchange between VCD and ST25DVxxx\nSOFExtended Write \nMultiple Block \nrequestVCD EOF\nST25DVxxx t1 SOFExtended Write \nMultiple Block \nresponseEOF\nSOFExtended Write \nMultiple Block \nresponseEOF ST25DVxxx WtWrite sequence \nwhen error\n7.6.16 Select\nWhen receiving the Select command:\n• If the UID is equal to its own UID, the ST25DVxxx enters or stays in the Selected state and sends a\nresponse.\n• If the UID does not match its own UID, the selected ST25DVxxx returns to the Ready state and does not\nsend a response.\nThe ST25DVxxx answers an error code only if the UID is equal to its own UID. If not, no response is generated. If\nan error occurs, the ST25DVxxx remains in its current state.\nThe Option_flag is not supported, and the Inventory_flag must be set to 0.\nTable 139. Select request format\nRequest SOF Request_flags Select UID CRC16 Request EOF\n- 8 bits 25h 64 bits 16 bits -\nRequest parameter:\n• UID\nTable 140. Select Block response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nTable 141. Select response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: the option is not supported\n– 0Fh: error with no information given\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 96/197\nFigure 45. Select frame exchange between VCD and ST25DVxxx\nSOF Select request VCD\nST25DVxxxEOF\nSOF Select response EOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 97/197\n7.6.17 Reset to Ready\nOn receiving a Reset to Ready command, the ST25DVxxx returns to the Ready state if no error occurs. In the\nAddressed mode, the ST25DVxxx answers an error code only if the UID is equal to its own UID. If not, no\nresponse is generated.\nThe Option_flag is not supported, and the Inventory_flag must be set to 0.\nTable 142. Reset to Ready request format\nRequest SOF Request_flags Reset to Ready UID (1) CRC16 Request EOF\n- 8 bits 26h 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• UID (optional)\nTable 143. Reset to Ready response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nTable 144. Reset to ready response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: the option is not supported\n– 0Fh: error with no information given\nFigure 46. Reset to Ready frame exchange between VCD and ST25DVxxx\nSOFReset to Ready \nrequestVCD\nST25DVxxxEOF\nSOFReset to Ready \nresponseEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 98/197\n7.6.18 Write AFI\nOn receiving the Write AFI request, the ST25DVxxx programs the 8-bit AFI value to its memory. When the\nOption_flag is set, wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not write correctly the AFI value into the memory. The W t time is equal to t 1nom +  N × 302 µs (N is an\ninteger).\nTable 145. Write AFI request format\nRequest SOF Request_flags Write AFI UID (1) AFI CRC16 Request EOF\n- 8 bits 27h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• AFI\nTable 146. Write AFI response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nTable 147. Write AFI response format when Error_flag is set\nResponse SOFResponse_\nflagsError code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 12h: the specified block is locked and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 99/197\nFigure 47. Write AFI frame exchange between VCD and ST25DVxxx\nSOFWrite AFI \nrequestVCD EOF\nST25DVxxx t1 SOFWrite AFI \nresponseEOF\nSOF EOF ST25DVxxx WtWrite sequence \nwhen error\nWrite AFI \nresponse\n7.6.19 Lock AFI\nOn receiving the Lock AFI request, the ST25DVxxx locks the AFI value permanently. When the Option_flag is set,\nwait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not lock correctly the AFI value in memory. The W t time is equal to t 1nom + N × 302 µs (N is an integer).\nTable 148. Lock AFI request format\nRequest SOF Request_flags Lock AFI UID (1) CRC16 Request EOF\n- 8 bits 28h 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request Flags\n• UID (optional)\nTable 149. Lock AFI response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nTable 150. Lock AFI response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 100/197\n• Error code as Error_flag is set\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 11h: the specified block is already locked and thus cannot be locked again\n– 14h: the specified block was not successfully locked\nFigure 48. Lock AFI frame exchange between VCD and ST25DVxxx\nSOFLock AFI \nrequestVCD EOF\nST25DVxxx t1 SOFLock AFI \nresponseEOF\nSOF EOF ST25DVxxx WtLock sequence \nwhen error\nLock AFI \nresponse\n7.6.20 Write DSFID\nOn receiving the Write DSFID request, the ST25DVxxx programs the 8-bit DSFID value to its memory. When the\nOption_flag is set, wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not write correctly the DSFID value in memory. The W t time is equal to t 1nom +  N × 302 µs (N is an integer).\nTable 151. Write DSFID request format\nRequest SOF Request_flags Write DSFID UID (1) DSFID CRC16 Request EOF\n- 8 bits 29h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• DSFID\nTable 152. Write DSFID response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 101/197\nTable 153. Write DSFID response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 12h: the specified block is locked and its contents cannot be changed\n– 13h: the specified block was not successfully programmed\nFigure 49. Write DSFID frame exchange between VCD and ST25DVxxx\nSOFWrite DSFID \nrequestVCD EOF\nST25DVxxx t1 SOFWrite DSFID \nresponseEOF\nSOF EOF ST25DVxxx WtWrite sequence \nwhen error\nWrite DSFID \nresponse\n7.6.21 Lock DSFID\nOn receiving the Lock DSFID request, the ST25DVxxx locks the DSFID value permanently. When the Option_flag\nis set, wait for EOF to respond.\nThe Inventory_flag must be set to 0.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not lock correctly the DSFID value in memory. The W t time is equal to t 1nom + N × 302 µs (N is an integer).\nTable 154. Lock DSFID request format\nRequest SOF Request_flags Lock DSFID UID (1) CRC16 Request EOF\n- 8 bits 2Ah 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\nTable 155. Lock DSFID response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 102/197\nResponse parameter:\n• No parameter.\nTable 156. Lock DSFID response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 11h: the specified block is already locked and thus cannot be locked again\n– 14h: the specified block was not successfully locked\nFigure 50. Lock DSFID frame exchange between VCD and ST25DVxxx\nSOFLock DSFID \nrequestVCD EOF\nST25DVxxx t1 SOFLock DSFID \nresponseEOF\nSOF EOF ST25DVxxx WtLock sequence \nwhen error\nLock DSFID \nresponse\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 103/197\n7.6.22 Get System Info\nWhen receiving this command, the device sends back its information data in the response.\nThe Option_flag is not supported. The Inventory_flag must be set to 0. The command can be issued in both\nAddressed and Non Addressed modes.\nTable 157. Get System Info request format\nRequest SOF Request_flags Get System Info UID (1) CRC16 Request EOF\n- 8 bits 2Bh 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\nTable 158. Get System Info response format Error_flag is NOT set\nDeviceResponse\nSOFResponse\nflagsInformation\nflagsUID DSFID AFIMemory\nsizeIC ref CRC16Response\nEOF\nST25DV64K-xx\nST25DV16K-xx - 00h0Bh 64\nbits8 bits 8 bitsNA (1) 26h 16\nbits-\nST25DV04K-xx 0Fh 037Fh 24h\n \n1. Field not present in this configuration\n \nResponse parameters:\n• Information flags set to 0Bh/0Fh. DSFID, AFI and IC reference fields are present\n• UID code on 64 bits\n• DSFID value\n• AFI value\n• MemSize: Block size in bytes and memory size in number of blocks (only present for ST25DV04K-xx\nconfigurations)\nTable 159. Memory size\nMSB LSB\n16 1413 98 1\nRFU Block size in byte Number of blocks\n0h 03h 7Fh\n• ST25DVxxx IC reference: the 8 bits are significant.\nTable 160. Get System Info response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 01h 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: Option not supported\n– 0Fh: Error with no information given\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 104/197\nFigure 51. Get System Info frame exchange between VCD and ST25DVxxx\nSOFGet System info \nrequestVCD\nST25DVxxxEOF\nSOFGet System info \nresponseEOF t1\n7.6.23 Extended Get System Info\nWhen receiving this command, the device sends back its information data in the response.\nThe Option_flag is not supported. The Inventory_flag must be set to 0. The command can be issued in both\nAddressed and Non Addressed modes.\nTable 161. Extended Get System Info request format\nRequest SOF Request_flags Extended Get System Info Parameter request field UID (1)CRC16 Request EOF\n- 8 bits 3Bh 8 bits (0xx1xxxxb) 64 bits 16 bits -\n \n1. This field is optional.\n \n• Request flags\n• Request parameters\n• UID (optional)\nTable 162. Parameter request list\nBit Flag name Value Description\nb1 DSFID0 No request of DSFID\n1 Request of DSFID\nb2 AFI0 No request of AFI\n1 Request of AFI\nb3 VICC memory size0 No request of data field on VICC memory size\n1 Request of data field on VICC memory size\nb4 IC reference0 No request of information on IC reference\n1 Request of information on IC reference\nb5 MOI 1 Information on MOI always returned in response flag\nb6 VICC command list0 No request of Data field of all supported commands\n1 Request of Data field of all supported commands\nb7 CSI Information0 No request of CSI list\n1 Request of CSI list\nb8Extended Get System\nInfo parameter Field0One byte length of Extended Get System\nInfo parameter field\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 105/197\nTable 163. Extended Get System Info response format when Error_flag is NOT set\nResponse\nSOFResponse_flagsInformation\nflagsUID DSFID (1) (2)AFI(2) (1)Other field(2) (1)CRC16Response\nEOF\n- 00h 8 bits(1) 64 bits 8 bits 8 bits Up to 64 bits (3)16 bits -\n \n1. See Table 164. Response Information Flag .\n2. This field is optional.\n3. The number of bytes is a function of the selected parameter list.\n \nResponse parameters:\n• Information flag defining which fields are present\n• UID code on 64 bits\n• DSFID value (if requested in Parameters request field)\n• AFI value (if requested in Parameters request field)\n• Other fields:\n– VICC memory size (if requested in Parameters request field)\n– ICRef (if requested in Parameters request field)\n– VICC Command list (if requested in Parameters request field)\nTable 164. Response Information Flag\nBit Meaning if bit is set Comment\nb1 DSFID0 DSFID field is not present\n1 DSFID field is present\nb2 AFI0 AFI field is not present\n1 AFI field is present\nb3 VICC memory size0 Data field on VICC memory size is not present.\n1 Data field on VICC memory size is present.\nb4 IC reference0 Information on IC reference field is not present.\n1 Information on IC reference field is present\nb5 MOI0 1-byte addressing\n1 2-byte addressing\nb6 VICC Command list0 Data field of all supported commands is not present\n1 Data field of all supported commands is present\nb7 CSI Information 0 CSI list is not present\nb8 Info flag filed 0 One byte length of Info flag field\nTable 165. Response other field: ST25DVxxx VICC memory size\nMSB LSB\n24 2221 1716 01\nRFU Block size in byte Number of blocks\n0h 03h07FFh (ST25DV64K-xx)\n01FFh (ST25DV16K-xx)\n007Fh (ST25DV04K-xx)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 106/197\nTable 166. Response other field: ST25DVxxx IC Ref\n1 byte\nICRef\n24h (ST25DV04K-xx) or 26h (ST25DV16K-xx and ST25DV64K-xx)\nTable 167. Response other field: ST25DVxxx VICC command list\nMSB LSB\n32 2524 1716 0908 01\nByte 4 Byte3 Byte 2 Byte 1\n00h 3Fh 3Fh FFh\nTable 168. Response other field: ST25DVxxx VICC command list Byte 1\nBit Meaning if bit is set Comment\nb1 Read single block is supported -\nb2 Write single block is supported -\nb3 Lock single block is supported -\nb4 Read multiple block is supported -\nb5 Write multiple block is supported -\nb6 Select is supported Including Select state\nb7 Reset to Ready is supported -\nb8 Get multiple block security status is supported -\nTable 169. Response other field: ST25DVxxx VICC command list Byte 2\nBit Meaning if bit is set Comment\nb1 Write AFI is supported -\nb2 Lock AFI is supported -\nb3 Write DSFID is supported -\nb4 Lock DSFID is supported -\nb5 Get System Information is supported -\nb6 Custom commands are supported -\nb7 RFU 0 shall be returned\nb8 RFU 0 shall be returned\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 107/197\nTable 170. Response other field: ST25DVxxx VICC command list Byte 3\nBit Meaning if bit is set Comment\nb1 Extended read single block is supported -\nb2 Extended write single block is supported -\nb3 Extended lock single block is supported -\nb4 Extended read multiple block is supported -\nb5 Extended write multiple block is supported -\nb6 Extended Get Multiple Security Status is supported -\nb7 RFU 0 shall be returned\nb8 RFU 0 shall be returned\nTable 171. Response other field: ST25DVxxx VICC command list Byte 4\nBit Meaning if bit is set Comment\nb1 Read Buffer is supported Means Response Buffer is supported\nb2 Select Secure State is supported Means VCD or Mutual authentication are supported\nb3 Final Response always includes crypto result Means that flag b3 will be set in the Final response\nb4 AuthComm crypto format is supported -\nb5 SecureComm crypto format is supported -\nb6 KeyUpdate is supported -\nb7 Challenge is supported -\nb8 If set to 1 a further Byte is transmitted 0 shall be returned\nTable 172. Extended Get System Info response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 01h 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: option not supported\n– 0Fh: error with no information given\nFigure 52. Extended Get System Info frame exchange between VCD and ST25DVxxx\nSOFExtended Get \nSystem Info \nrequestVCD\nST25DVxxxEOF\nSOFExtended Get \nSystem Info \nresponseEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 108/197\n7.6.24 Get Multiple Block Security Status\nWhen receiving the Get Multiple Block Security Status command, the ST25DVxxx sends back its security status\nfor each address block: 0 when block is writable else 1 when block is locked for writing. The blocks security\nstatus are defined by the area security status (and by LCK_CCFILE register for blocks 0 and 1). The blocks are\nnumbered from 00h up to the maximum memory block number in the request, and the value is minus one (–1)\nin the field. For example, a value of “06” in the “Number of blocks” field requests will return the security status of\nseven blocks. This command does not respond an error if number of blocks overlap areas or overlap the end of\nthe user memory.\nThe number of blocks is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 173. Get Multiple Block Security Status request format\nRequest SOF Request_flagsGet Multiple Block\nSecurity StatusUID (1)First block\nnumberNumber of\nblocksCRC16 Request EOF\n- 8 bits 2Ch 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• First block number\n• Number of blocks\nTable 174. Get Multiple Block Security Status response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status CRC16 Response EOF\n- 8 bits 8 bits (1) 16 bits -\n \n1. Repeated as needed.\n \nResponse parameters:\n• Block security status\nTable 175. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use\nAll at 00: Current block not locked\n1: Current block locked\nTable 176. Get Multiple Block Security Status response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: the option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 109/197\nFigure 53. Get Multiple Block Security Status frame exchange between VCD and ST25DVxxx\nSOFGet Multiple Block \nSecurity  request \nstatusVCD\nST25DVxxxEOF\nSOFGet Multiple Block \nSecurity  response \nstatusEOF t1\n7.6.25 Extended Get Multiple Block Security Status\nWhen receiving this command, the device sends back the security status for each address block: 0 when the\nblock is writable, 1 when block is locked for writing. The block security statuses are defined by the area security\nstatus. The blocks are numbered from 00h up to the maximum memory block number in the request, and the\nvalue is minus one (–1) in the field. For example, a value '06' in the “Number of blocks” field requests to return the\nsecurity status of seven blocks.\nThis command does not return an error if number of blocks overlap areas or overlap the end of the user memory.\nThe number of blocks is coded on two bytes, so all memory blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 177. Extended Get Multiple Block Security Status request format\nRequest\nSOFRequest_flagsExtended Get\nMultiple Block\nSecurity\nStatusUID (1)First block\nnumberNumber of\nblocksCRC16Request\nEOF\n- 8 bits 3Ch 64 bits 16 bits 16 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• First block number (from LSB to MSB)\n• Number of blocks (from LSB to MSB)\nTable 178. Extended Get Multiple Block Security Status response format when Error_flags NOT set\nResponse SOF Response_flags Block security status CRC16 Response EOF\n- 8 bits 8 bits (1) 16 bits -\n \n1. Repeated as needed.\n \nResponse parameters:\n• Block security status\nTable 179. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use\nAll at 00: Current block not locked\n1: Current block locked\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 110/197\nTable 180. Extended Get Multiple Block Security Status response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 03h: the option is not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\nFigure 54. Extended Get Multiple Block Security Status frame exchange\nSOFExtended Get \nMultiple Block \nSecurity  request \nstatusVCD\nST25DVxxxEOF\nSOFExtended Get \nMultiple Block \nSecurity  response \nstatusEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 111/197\n7.6.26 Read Configuration\nOn receiving the Read Configuration command, the ST25DVxxx reads the static system configuration register at\nthe Pointer address and sends back its 8-bit value in the response.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 181. Read Configuration request format\nRequest SOF Request_flags Read Configuration IC Mfg code UID (1) Pointer CRC16 Request EOF\n- 8 bits A0h 02h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nNote: Please refer to Table 11. System configuration memory map  for details on register addresses.\nRequest parameters:\n• System configuration register pointer\n• UID (optional)\nTable 182. Read Configuration response format when Error_flag is NOT set\nResponse SOF Response_flags Register value CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameters:\n• One byte of data: system configuration register\nTable 183. Read Configuration response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set\n– 02h: command not recognized\n– 03h: the option is not supported\n– 10h: block not available\n– 0Fh: error with no information given\nFigure 55. Read Configuration frame exchange between VCD and ST25DVxxx\nSOFRead \nConfiguration \nrequestVCD\nST25DVxxxEOF\nSOFRead \nConfiguration \nresponseEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 112/197\n7.6.27 Write Configuration\nThe Write Configuration command is used to write static system configuration register. The Write Configuration\nmust be preceded by a valid presentation of the RF configuration password (00) to open the RF configuration\nsecurity session.\nOn receiving the Write Configuration command, the ST25DVxxx writes the data contained in the request to the\nsystem configuration register at the Pointer address and reports whether the write operation was successful in the\nresponse or not.\nWhen the Option_flag is set, wait for EOF to respond. The Inventory_flag is not supported.\nDuring the RF write cycle W t, there should be no modulation (neither 100% nor 10%), otherwise the ST25DVxxx\nmay not program correctly the data into the Configuration byte. The W t time is equal to t 1nom +  N × 302 µs (N is\nan integer).\nTable 184. Write Configuration request format\nRequest\nSOFRequest_flagsWrite\nConfigurationIC Mfg\ncodeUID (1)PointerRegister\nvalue(2)CRC16Request\nEOF\n- 8 bits A1h 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n2. Before updating the register value, check the meaning of each bit in previous sections.\n \nRequest parameters:\n• Request flags\n• Register pointer\n• Register value\n• UID (optional)\nTable 185. Write Configuration response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nNote: Please refer to Table 11. System configuration memory map  for details on register addresses.\nResponse parameter:\n• No parameter. The response is sent back after the writing cycle.\nTable 186. Write configuration response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option is not supported\n– 0Fh: error with no information given\n– 10h: block not available\n– 12h: block already locked, content can't change\n– 13h: the specified block was not successfully programmed\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 113/197\nFigure 56. Write Configuration exchange between VCD and ST25DVxxx\nSOFWrite \nConfiguration \nrequestVCD EOF\nST25DVxxx t1 SOFWrite \nConfiguration \nresponseEOF\nST25DVxxx WtWrite Configuration \nsequence when error\nSOFWrite \nConfiguration \nresponseEOF\n7.6.28 Read Dynamic Configuration\nOn receiving the Read Dynamic Configuration command, the ST25DVxxx reads the Dynamic register address\nindicated by the pointer and sends back its 8-bit value in the response.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 187. Read Dynamic Configuration request format\nRequest SOF Request_flagsRead Dynamic\nConfigurationIC Mfg code UID (1)Pointer address CRC16 Request EOF\n- 8 bits ADh 02h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• UID (Optional)\nTable 188. Read Dynamic Configuration response format when Error_flag is NOT set\nResponse SOF Response_flags Data CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameters:\n• One byte of data\nNote: Please refer to Table 11. System configuration memory map for details on register addresses.\nTable 189. Read Dynamic Configuration response format when Error_flag is set\nResponse SOF Response_flags error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error given with no information\n– 10h: block not available\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 114/197\nFigure 57. Read Dynamic Configuration frame exchange between VCD and ST25DVxxx\nSOFRead Dynamic \nConfiguration \nrequestVCD\nST25DVxxxEOF\nSOFRead Dynamic \nConfiguration \nresponseEOF t1\n7.6.29 Write Dynamic Configuration\nOn receiving the Write Dynamic Configuration command, the ST25DVxxx updates the Dynamic register\naddressed by the pointer.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 190. Write Dynamic Configuration request format\nRequest\nSOFRequest_flagsWrite Dynamic\nConfigurationIC Mfg\ncodeUID (1)Pointer\naddressRegister\nvalueCRC16Request\nEOF\n- 8 bits AEh 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (Optional)\n• Pointer address\n• Register value\nTable 191. Write Dynamic Configuration response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameters:\n• No parameter. The response is sent back after t 1.\nTable 192. Write Dynamic Configuration response format when Error_flag is set\nResponse SOF Response_flags error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: block not available\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 115/197\nFigure 58. Write Dynamic Configuration frame exchange between VCD and ST25DVxxx\nSOFWrite Dynamic \nConfiguration \nrequestVCD\nST25DVxxxEOF\nSOFWrite Dynamic \nConfiguration \nresponseEOF t1\nSOFWrite Dynamic \nConfiguration \nresponseEOF t1 ST25DVxxxWrite Dynamic \nConfiguration sequence \nwhen no error  \nWrite Dynamic \nConfiguration sequence \nwhen error  \n7.6.30 Manage GPO\nOn receiving the Manage GPO command. Depending on the command argument, the ST25DV force the GPO\noutput level if RF_USER interrupt is enabled, or send a pulse on GPO output if RF_INTERRUPT is enabled. If\nneither RF_USER nor RF_INTERRUPT was enabled, the command is not executed and ST25DVxxx responds\nan Error code “0F”.\nThe IT duration is defined by IT_TIME register and occurs just after the command response.\nFor the ST25DVxx-JF (CMOS output), a set means that the GPO pin is driven to a High level (V DCG) and a Reset\npulls the GPO pin to a low level (V SS).\nThe IT corresponds to a transmission of a positive pulse on the GPO pin.\nFor the ST25DVxx-IE (open drain output), a Set means that the GPO pin is driven to a low level (V SS) and a\nReset releases the GPO (High impedance).\nIT corresponds to the GPO pin driven to ground during the IT duration, then pin is released. Thanks to an external\npull up, the high level will be recovered.\nOption_flag is not supported. The Inventory_flag must be set to 0.\nTable 193. ManageGPO request format\nRequest SOF Request_ flags ManageGPO IC Mfg code UID (1)GPO VAL(2) CRC16 Request EOF\n- 8 bits A9h 02h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n2. See Table 194\n \nTable 194. GPOVAL\nGPOVAL IT ST25DVxx-IE (OD) ST25DVxx-JF (CMOS)\n0xxxxxx0b RF_USER enabled Pin pull to 0 GPO Pin set to logic One (V DCG)\n0xxxxxx1b RF_USER enabled Pin released (HZ) GPO Pin reset to logic zero\n1xxxxxxxb RF_INTERRUPT enabled GPO pin pulled to 0 during IT Time then released (HZ) GPO Pin drives a positive pulse\nAny other conditions GPO released (Hz) GPO pin reset to logic zero\nRequest parameters:\n• Request flag\n• UID (optional)\n• Data: Define static or dynamic Interrupt\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 116/197\nTable 195. ManageGPO response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the write cycle.\nTable 196. ManageGPO response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 13h: the specified block was not successfully programmed (this error is generated if the ManageCPO\nGPOVAL value is not in line with the GPO interrupts setting as specified in Table 194. GPOVAL )\nFigure 59. Manage GPO frame exchange between VCD and ST25DVxxx\nSOFManageGPO \nrequestVCD EOF\nST25DVxxx t1 SOFManageGPO \nresponseEOF\n7.6.31 Write Message\nOn receiving the Write Message command, the ST25DVxxx puts the data contained in the request into the\nMailbox buffer, update the MB_LEN_Dyn register, and set bit RF_PUT_MSG in MB_CTRL_Dyn register. It then\nreports if the write operation was successful in the response. The ST25DVxxx Mailbox contains up to 256 data\nbytes which are filled from the first location '00'. MSGlength parameter of the command is the number of Data\nbytes minus - 1 (00 for 1 byte of data, FFh for 256 bytes of data). Write Message could be executed only when\nMailbox is accessible by RF (fast transfer mode is enabled, previous RF message was read or time-out occurs,\nno I2C message to be read). User can check it by reading b1 of MB_CTRL_Dyn “HOST_PUT_MSG” which must\nbe reset to “0”. The Option_flag is not supported. (refer to Section 5.1  Fast transfer mode (FTM) )\nTable 197. Write Message request format\nRequest\nSOFRequest_\nflagsWrite\nMessageIC Mfg\ncodeUID (1)MSGLengthMessage\nDataCRC16Request\nEOF\n- 8 bits AAh 02h 64 bits 1 byte(MSGLength + 1)\nbytes16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Message Length\n• Message Data\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 117/197\nTable 198. Write Message response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the write cycle.\nTable 199. Write Message response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\nFigure 60. Write Message frame exchange between VCD and ST25DVxxx\nSOFWrite Message \nrequestVCD EOF\nST25DVxxx t1 SOFWrite Message \nresponseEOF\nSOF EOF ST25DVxxx t1Write sequence \nwhen error\nWrite Message \nresponse\n7.6.32 Read Message Length\nOn receiving the Read Message Length command, the ST25DVxxx reads the MB_LEN_Dyn register which\ncontains the Mailbox message length and sends back its 8-bit value in the response.\nThe value of MB_LEN_Dyn returned is the (size of the message length in Bytes - 1).\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 200. Read Message Length request format\nRequest SOF Request_flags Read Message Length IC Mfg code UID (1) CRC16 Request EOF\n- 8 bits ABh 02h 64 bits 16 bits -\n \n1. The field is optional.\n \nRequest parameters:\n• UID (Optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 118/197\nTable 201. Read Message Length response format when Error_flag is NOT set\nResponse SOF Response_flags Data CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameters:\n• One byte of data: MB_LEN_Dyn register value\nTable 202. Read Message Length response format when Error_flag is set\nResponse SOF Response_flags error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error given with no information\nFigure 61. Read Message Length frame exchange between VCD and ST25DVxxx\nSOFRead Message \nLength requestVCD\nST25DVxxxEOF\nSOFRead Message \nLength responseEOF t1\n7.6.33 Read Message\nOn receiving the Read Message command, the ST25DVxxx reads up to 256 byte in the Mailbox from the location\nspecified by MBpointer and sends back their value in the response. First MailBox location is '00’. When Number\nof bytes is set to 00h and MBPointer is equals to 00h, the MB_LEN bytes of the full message are returned.\nOtherwise, Read Message command returns (Number of Bytes + 1) bytes (i.e. 01h returns 2 bytes, FFh returns\n256 bytes).\nAn error is reported if (Pointer + Nb of bytes + 1) is greater than the message length. RF Reading of the last byte\nof the mailbox message automatically clears b1 of MB_CTRL_Dyn “HOST_PUT_MSG”, and allows RF to put a\nnew message.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nTable 203. Read Message request format\nRequest\nSOFRequest_flagsRead\nMessageIC Mfg\ncodeUID (1)MBpointerNumber of\nBytesCRC16Request\nEOF\n- 8 bits ACh 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (Optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 119/197\n• Pointer (start at 00h)\n• Number of bytes is one less then the requested data\nTable 204. Read Message response format when Error_flag is NOT set\nResponse SOF Response_flags Mailbox content CRC16 Response EOF\n- 8 bits (Number of bytes + 1) bytes (1) 16 bits -\n \n1. Number of message Bytes when Number of Bytes is set to 00h.\n \nResponse parameters:\n• (number of data + 1 ) data bytes\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\nFigure 62. Read Message frame exchange between VCD and ST25DVxxx\nSOFRead Message \nrequestVCD\nST25DVxxxEOF\nSOFRead Message \nresponseEOF t1\n7.6.34 Fast Read Message\nOn receiving the Fast Read Message command, the ST25DVxxx reads up to 256 byte in the Mailbox from the\nlocation specified by MBpointer and sends back their value in the response. First MailBox location is '00’. When\nNumber of bytes is set to 00h and MBPointer is equals to 00h, the MB_LEN bytes of the full message are\nreturned. Otherwise, Fast Read Message command returns (Number of Bytes + 1) bytes (i.e. 01h returns 2 bytes,\nFFh returns 256 bytes).\nAn error is reported if (Pointer + Nb of bytes + 1) is greater than the message length..\nRF Reading of the last byte of mailbox message automatically clears b1 of MB_CTRL_Dyn “HOST_PUT_MSG”\nand allows RF to put a new message.\nThe data rate of the response is multiplied by 2 compated to Read Message.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code. The Option_flag is\nnot supported, and the Inventory_flag must be set to 0.\nTable 205. Fast Read Message request format\nRequest\nSOFRequest_flagsFast Read\nMessageIC Mfg\ncodeUID(1)MBpointerNumber of\nBytesCRC16Request\nEOF\n- 8 bits CCh 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional\n \nRequest parameters:\n• Request flag\n• UID (Optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 120/197\n• Pointer (start at 00h)\n• Number of bytes is one less than the requested data\nTable 206. Fast Read Message response format when Error_flag is NOT set\nResponse SOF Response_flags Mailbox content CRC16 Response EOF\n- 8 bits (Number of bytes + 1) bytes(1) 16 bits 64 bits\n \n1. Number of message Bytes when Number of Bytes is set to 00h\n \nResponse parameters:\n• (number of bytes + 1) data bytes\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\nFigure 63. Fast Read Message frame exchange between VCD and ST25DVxxx\nSOFFast Read \nMessage requestVCD\nST25DVxxxEOF\nSOFFast Read \nMessage responseEOF t1\n7.6.35 Write Password\nOn receiving the Write Password command, the ST25DVxxx uses the data contained in the request to write\nthe password and reports whether the operation was successful in the response. It is possible to modify a\nPassword value only after issuing a valid Present password command (of the same password number). When\nthe Option_flag is set, wait for EOF to respond. Refer to Section 5.6  Data Protection  for details on password\nManagement. The Inventory_flag must be set to 0.\nDuring the RF write cycle time, W t, there must be no modulation at all (neither 100% nor 10%), otherwise the\nST25DVxxx may not correctly program the data into the memory.\nThe W t time is equal to t 1nom + N × 302 µs (N is an integer). After a successful write, the new value of the\nselected password is automatically activated. It is not required to present the new password value until the\nST25DVxxx power-down.\nCaution: If ST25DVxxx is powered through V CC, removing V CC during Write Password command can abort the\ncommand. As a consequence, before writing a new password, RF user should check if V CC is ON, by reading\nEH_CTRL_Dyn register bit 3 (VCC_ON), and eventually ask host to maintain or to shut down V CC, during the\nWrite Password command in order to avoid password corruption.\nTo make the application more robust, it is recommended to use addressed or selected mode during write\npassword operations to get the traceability of which tags/UID have been programmed\nTable 207. Write Password request format\nRequest\nSOFRequest_flagsWrite\npasswordIC Mfg code UID (1)Password\nnumberData CRC16Request\nEOF\n- 8 bits B1h 02h 64 bits 8 bits 64 bits 16 bits -\n \nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 121/197\n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• Password number:\n– 00h = RF configuration password RF_PWD_0,\n– 01h = RF_PWD_1,\n– 02h = RF_PWD_2,\n– 03h = RF_PWD_3,\n– other = Error\n• Data\nTable 208. Write Password response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• no parameter.\nTable 209. Write Password response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 10h: the password number is incorrect\n– 12h: update right not granted, Present Password command not previously executed successfully\n– 13h: the specified block was not successfully programmed\nFigure 64. Write Password frame exchange between VCD and ST25DVxxx\nSOFWrite \nPassword \nrequestVCD EOF\nST25DVxxx t1 SOFWrite \nPassword \nresponseEOF\nSOF EOF ST25DVxxx WtWrite sequence \nwhen error\nWrite \nPassword  \nresponse\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 122/197\n7.6.36 Present Password\nOn receiving the Present Password command, the ST25DVxxx compares the requested password with the\ndata contained in the request and reports if the operation has been successful in the response. Refer to\nSection 5.6  Data Protection  for details on password Management. After a successful command, the security\nsession associate to the password is open as described in Section 5.6  Data Protection .\nThe Option_flag is not supported, and the Inventory_flag must be set to 0.\nTable 210. Present Password request format\nRequest\nSOFRequest_flagsPresent\nPasswordIC Mfg\ncodeUID (1)Password\nnumberPassword CRC16Request\nEOF\n- 8 bits B3h 02h 64 bits 8 bits 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameter:\n• Request flags\n• UID (optional)\n• Password Number:\n– 00h = RF configuration password RF_PWD_0\n– 01h = RF_PWD_1\n– 02h = RF_PWD_2\n– 03h = RF_PWD_3\n– other = Error\n• Password\nTable 211. Present Password response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameter:\n• No parameter. The response is sent back after the write cycle.\nTable 212. Present Password response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: the present password is incorrect\n– 10h: the password number is incorrect\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 123/197\nFigure 65. Present Password frame exchange between VCD and ST25DVxxx\nSOFPresent \nPassword\nrequestVCD\nST25DVxxxEOF\nSOFPresent \nPassword \nresponseEOF t1\n7.6.37 Fast Read Single Block\nOn receiving the Fast Read Single Block command, the ST25DVxxx reads the requested block and sends back\nits 32-bit value in the response. When the Option_flag is set, the response includes the Block Security Status. The\ndata rate of the response is multiplied by 2.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nTable 213. Fast Read Single Block request format\nRequest SOF Request_flags Fast Read Single Block IC Mfg code UID (1)Block number CRC16 Request EOF\n- 8 bits C0h 02h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number\nTable 214. Fast Read Single Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits 32 bits 16 bits -\n \n1. This field is optional.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 215. Block security status )\n• Four bytes of block data\nTable 215. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use\nAll at 00: Current Block not locked\n1: Current Block locked\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 124/197\nTable 216. Fast Read Single Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 66. Fast Read Single Block frame exchange between VCD and ST25DVxxx\nSOFFast Read \nSingle Block \nrequestVCD\nST25DVxxxEOF\nSOFFast Read \nSingle Block \nresponseEOF t1\n7.6.38 Fast Extended Read Single Block\nOn receiving the Fast Extended Read Single Block command, the ST25DVxxx reads the requested block and\nsends back its 32-bit value in the response. When the Option_flag is set, the response includes the Block Security\nStatus. The data rate of the response is multiplied by 2.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 2 Bytes so all memory blocks of ST25DV16K-xx and ST25DV64K-xx can be addressed\nusing this command\nTable 217. Fast Extended Read Single Block request format\nRequest\nSOFRequest_flagsFast\nExtended\nRead Single\nBlockIC Mfg code UID (1)Block\nnumberCRC16Request\nEOF\n- 8 bits C4h 02h 64 bits 16 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flags\n• UID (optional)\n• Block number (from LSB byte to MSB byte)\nTable 218. Fast Extended Read Single Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits 32 bits 16 bits -\n \nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 125/197\n1. This field is optional.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 219. Block security status )\n• Four bytes of block data\nTable 219. Block security status\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use\nAll at 00: Current Block not locked\n1: Current Block locked\nTable 220. Fast Extended Read Single Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: the specified block is not available\n– 15h: the specified block is read-protected\nFigure 67. Fast Extended Read Single Block frame exchange between VCD and ST25DVxxx\nSOFFast Extended \nRead Single Block \nrequestVCD\nST25DVxxxEOF\nSOFFast Extended \nRead Single Block \nresponseEOF t1\n7.6.39 Fast Read Multiple Blocks\nOn receiving the Fast Read Multiple Blocks command, the ST25DVxxx reads the selected blocks and sends back\ntheir value in multiples of 32 bits in the response. The blocks are numbered from 00h up to the last block of user\nmemory in the request, and the value is minus one (–1) in the field. For example, if the “Number of blocks” field\ncontains the value 06h, seven blocks are read. The maximum number of blocks is fixed to 256 assuming that they\nare all located in the same area. If the number of blocks overlaps area or overlaps the end of user memory, the\nST25DVxxx returns an error code.\nWhen the Option_flag is set, the response includes the Block Security Status. The data rate of the response is\nmultiplied by 2.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 1 Byte and only first 256 blocks of ST25DV16K-xx and ST25DV64K-xx can be\naddressed using this command.\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 126/197\nTable 221. Fast Read Multiple Block request format\nRequest\nSOFRequest_flagsFast Read\nMultiple BlockIC Mfg\ncodeUID (1)First block\nnumberNumber of\nblocksCRC16Request\nEOF\n- 8 bits C3h 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (Optional)\n• First block number\n• Number of blocks\nTable 222. Fast Read Multiple Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits (2)32 bits(2) 16 bits -\n \n1. This field is optional.\n2. Repeated as needed.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 223. Block security status if Option_flag is set )\n• N block of data\nTable 223. Block security status if Option_flag is set\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future use\nAll at 00: Current not locked\n1: Current locked\nTable 224. Fast Read Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 0Fh: error with no information given\n– 03h: the option is not supported\n– 10h: block address not available\n– 15h: block read-protected\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 127/197\nFigure 68. Fast Read Multiple Block frame exchange between VCD and ST25DVxxx\nSOFFast Read \nMultiple block \nrequestVCD\nST25DVxxxEOF\nSOFFast Read \nMultiple block \nresponseEOF t1\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 128/197\n7.6.40 Fast Extended Read Multiple Block\nOn receiving the Fast Extended Read Multiple Block command, the ST25DVxxx reads the selected blocks and\nsends back their value in multiples of 32 bits in the response. The blocks are numbered from 00h to up to the last\nblock of memory in the request and the value is minus one (–1) in the field. For example, if the “Number of blocks”\nfield contains the value 06h, seven blocks are read. The maximum number of blocks is fixed to 2047 assuming\nthat they are all located in the same area. If the number of blocks overlaps several areas or overlaps the end of\nuser memory, the ST25DVxxx returns an error code.\nWhen the Option_flag is set, the response includes the Block Security Status. The data rate of the response is\nmultiplied by 2.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe Inventory_flag must be set to 0.\nBlock number is coded on 2 Bytes so all memory blocks of ST25DV16K-xx and\nST25DV64K-xx can be addressed using this command.\nTable 225. Fast Extended Read Multiple Block request format\nRequest\nSOFRequest_flagsFast Extended\nRead Multiple\nBlockIC Mfg\ncodeUID (1)First block\nnumberBlock\nNumberCRC16Request\nEOF\n- 8 bits C5h 02h 64 bits 16 bits 16 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (Optional)\n• First block number (from LSB byte to MSB byte)\n• Number of blocks (from LSB byte to MSB byte)\nTable 226. Fast Extended Read Multiple Block response format when Error_flag is NOT set\nResponse SOF Response_flags Block security status (1) Data CRC16 Response EOF\n- 8 bits 8 bits (2)32 bits(2) 16 bits -\n \n1. This field is optional.\n2. Repeated as needed.\n \nResponse parameters:\n• Block security status if Option_flag is set (see Table 223. Block security status if Option_flag is set )\n• N block of data\nTable 227. Block security status if Option_flag is set\nb7 b6 b5 b4 b3 b2 b1 b0\nReserved for future\nuse All at 00: Current not locked\n1: Current locked\nTable 228. Fast Read Multiple Block response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 129/197\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: the option is not supported\n– 0Fh: error with no information given\n– 10h: block address not available\n– 15h: block read-protected\nFigure 69. Fast Extended Read Multiple Block frame exchange between VCD and ST25DVxxx\nSOFFast Extended \nRead Multiple \nBlock requestVCD\nST25DVxxxEOF\nSOFFast Extended \nRead Multiple \nBlock responseEOF t1\n7.6.41 Fast Write Message\nOn receiving the Fast Write Message command, the ST25DVxxx puts the data contained in the request into the\nmailbox buffer, updates the Message Length register MB_LEN_Dyn, and set Mailbox loaded bit RF_PUT_MSG.\nIt then reports if the write operation was successful in the response. The ST25DVxxx mailbox contains up to 256\ndata bytes which are filled from the first location '00'. MSGlength parameter of the command is the number of\nData bytes minus - 1 (00 for 1 byte of data, FFh for 256 bytes of data). Fast Write Message can be executed\nonly when Mailbox is accessible by RF (previous RF message was read or time-out occurs, no I2C message to be\nread). User can check it by reading b1 of MB_CTRL_Dyn “HOST_PUT_MSG”, which must be reset to “0”. (refer\nto Section 5.1  Fast transfer mode (FTM) ).\n• The data rate of the response is multiplied by 2 compared to Write Message command.\n• The Option_flag is not supported.\n• The Inventory_flag must be set to 0.\n• The subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nTable 229. Fast Write Message request format\nRequest\nSOFRequest_flagsFast Write\nMessageIC Mfg\ncodeUID (1)MSGLength Message Data CRC16Request\nEOF\n- 8 bits CAh 02h 64 bits 1 byte(MsgLenght + 1)\nbytes16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (optional)\n• Message Lenght\n• Message Data\nTable 230. Fast Write Message response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 130/197\nResponse parameters:\n• No parameter. The response is sent back after the write cycle.\nTable 231. Fast Write Message response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\nFigure 70. Fast Write Message frame exchange between VCD and ST25DVxxx\nSOFFast Write \nMessage \nrequestVCD EOF\nST25DVxxx t1 SOFFast Write \nMessage \nresponseEOF\nSOF EOF ST25DVxxx t1Write sequence \nwhen error\nFast Write \nMessage \nresponseWrite sequence \nwhen  no error\n7.6.42 Fast Read Message Length\nOn receiving the Fast Read Message Length command, the ST25DV reads the MB_LEN_dyn register which\ncontains the mailbox message length and sends back its 8-bit value in the response.\nThe value of MB_LEN_Dyn returned is the (size of the message length in Bytes - 1).\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe data rate of the response is multiplied by 2 compared to Read Message Length command.\nTable 232. Fast Read Message Length request format\nRequest SOF Request_flags Fast Read Message Length IC Mfg code UID (1) CRC16 Request EOF\n- 8 bits CBh 02h 64 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 131/197\nTable 233. Fast Read Message Length response format when Error_flag is NOT set\nResponse SOF Response_flags Data CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameters:\n• One byte of data: volatile Control register.\nTable 234. Fast Read Message Length response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command option not recognized\n– 03h: command not supported\n– 0Fh: error with no information given\nFigure 71. Fast Read Message Length frame exchange between VCD and ST25DVxxx\nSOFFast Read \nMessage Length \nrequestVCD\nST25DVxxxEOF\nSOFFast Read \nMessage Length \nresponseEOF t1\n7.6.43 Fast Read Dynamic configuration\nOn receiving the Fast Read Dynamic configuration command, the ST25DVxxx reads the Dynamic register\naddress by the pointer and sends back its 8-bit value in the response.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nThe subcarrier_flag should be set to 0, otherwise the ST25DVxxx answers with an error code.\nThe data rate of the response is multiplied by 2 compared to Read Dynamic configuration command.\nTable 235. Fast Read Dynamic configuration request format\nRequest SOF Request_flagsFast Read Dynamic\nconfigurationIC Mfg code UID (1)Pointer address CRC16 Request EOF\n- 8 bits CDh 02h 64 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (optional)\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 132/197\nTable 236. Fast Read Dynamic configuration response format when Error_flag is NOT set\nResponse SOF Response_flags Data CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameters:\n• One byte of data\nTable 237. Fast Read Dynamic configuration response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: block not available\nFigure 72. Fast Read Dynamic configuration frame exchange between VCD and ST25DVxxx\nSOFFast Read \nDynamic configuration \nrequestVCD\nST25DVxxxEOF\nt1 SOFFast Read \nDynamic configuration \nrequestEOF\n7.6.44 Fast Write Dynamic Configuration\nOn receiving the Fast Write Dynamic Configuration command, the ST25DV updates the Dynamic register\naddressed by the pointer.\nThe Option_flag is not supported. The Inventory_flag must be set to 0.\nThe data rate of the response is multiplied by 2 compared to Write Dynamic Configuration command.\nTable 238. Fast Write Dynamic Configuration request format\nRequest\nSOFRequest_flagsFast Write\nDynamic\nConfigurationIC Mfg\ncodeUID (1)Pointer\naddressRegister\nValueCRC16Request\nEOF\n- 8 bits CEh 02h 64 bits 8 bits 8 bits 16 bits -\n \n1. This field is optional.\n \nRequest parameters:\n• Request flag\n• UID (optional)\n• Pointer address\n• Register value\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 133/197\nTable 239. Fast Write Dynamic Configuration response format when Error_flag is NOT set\nResponse SOF Response_flags CRC16 Response EOF\n- 8 bits 16 bits -\nResponse parameters:\n• No parameter. The response is sent back after t 1.\nTable 240. Fast Write Dynamic Configuration response format when Error_flag is set\nResponse SOF Response_flags Error code CRC16 Response EOF\n- 8 bits 8 bits 16 bits -\nResponse parameter:\n• Error code as Error_flag is set:\n– 02h: command not recognized\n– 03h: command option not supported\n– 0Fh: error with no information given\n– 10h: block not available\nFigure 73. Fast Write Dynamic Configuration frame exchange between VCD and ST25DVxxx\nSOFFast Write \nDynamic configuration \nrequestVCD\nST25DVxxxEOF\nt1 SOFFast Write \nDynamic configuration \nrequestEOF\nST25DVxxx t1 SOFFast Write \nDynamic configuration \nrequestEOFWrite sequence \nwhen error\nWrite sequence \nwhen no error\nST25DV04K ST25DV16K ST25DV64K\nRF commands\nDS10925  - Rev 11 page 134/197\n8 Unique identifier (UID)\nThe ST25DVxxx is uniquely identified by a 64-bit unique identifier (UID). This UID complies with ISO/IEC 15963\nand ISO/IEC 7816-6. The UID is a read-only code and comprises:\n• eight MSBs with a value of E0h,\n• the IC manufacturer code “ST 02h” on 8 bits (ISO/IEC 7816-6/AM1),\n• a unique serial number on 48 bits.\nTable 241. UID format\nMSB LSB\n63                                    56 55                                  48 47                                  40 39                                   0\n0xE0 0x02 ST product code (1) Unique serial number\n \n1. See Table 85. UID  for ST product code value definition.\n \nWith the UID, each ST25DVxxx can be addressed uniquely and individually during the anticollision loop and for\none-to-one exchanges between a VCD and an ST25DVxxx.\nST25DV04K ST25DV16K ST25DV64K\nUnique identifier (UID)\nDS10925  - Rev 11 page 135/197\n9 Device parameters\n9.1 Maximum ratings\nStressing the device above the ratings listed in Table 242  may cause permanent damage to the device. These\nare stress ratings only, and operation of the device, at these or any other conditions above those indicated in\nthe operating sections of this specification, is not implied. Exposure to absolute maximum rating conditions for\nextended periods may affect the device reliability. Device mission profile (application conditions) is compliant with\nJEDEC JESD47 qualification standard. Extended mission profiles can be assessed on demand.\nRefer also to the STMicroelectronics SURE program and other relevant quality documents.\nTable 242. Absolute maximum ratings\nSymbol Parameter Min. Max. Unit\nTA Ambient operating temperatureRange 6 All packagesRF and\nI2C interfaces-40 85\n°C\nRange 8UFDFPN8, UFDFPN12RF and\nI2C interfaces-40 105\nSO8N, TSSOPRF interface -40 105\nI2C interface -40 125\nTSTG Storage temperatureSawn wafer on UV tape, kept in its original packing form 15 25\n°C\nUFDFPN8 (MLP8),SO8N, TSSOP8, UFDFPN12, WLCSP10 -65 150\ntSTG Retain Sawn wafer on UV tape, kept in its original packing form - 9 (1)months\nTLEAD Lead temperature during soldering See note (2) °C\nVIO I2C input or output range - 0.50 6.5\nV VDCG Supply GPO CMOS driver - 0.50 6.5\nVCC I2C supply voltage - 0.50 6.5\nIOL_MAX_SDA DC output current on pin SDA (when = equal to 0) - 5\nmA\nIOL_MAX_GPO_OD DC output current on pin GPO open drain (when equal to 0) - 1.5\nVMAX_1  (3) RF input voltage amplitude peak to peak between AC0 and AC1, V SS pin left floating VAC0 - VAC1 - 11\nV VMAX_2  (3) AC voltage between AC0 and V SS, or AC1 and V SSVAC0 - VSS,\nor V AC1 - VSS- 0.50 5.5\nVESD Electrostatic discharge voltage (human body model) (4) All pins - 2000\n \n1. Counted from ST production date.\n2.Compliant with JEDEC Std J-STD-020C (for small body, Sn-Pb or Pb assembly), the ST ECOPACK® 7191395 specification, and the\nEuropean directive on Restrictions on Hazardous Substances (RoHS) 2002/95/EU.\n3. Evaluated by characterization, not tested in production.\n4. AEC-Q100-002 (compliant with JEDEC Std JESD22-A114, C1 = 100 pF, R1 = 1500 Ω, R2 = 500 Ω)\n \nST25DV04K ST25DV16K ST25DV64K\nDevice parameters\nDS10925  - Rev 11 page 136/197\n9.2 I2C parameters\nThis section summarizes the operating and measurement conditions, and the DC and AC characteristics of\nthe device in I2C mode. The parameters are derived from tests performed under the measurement conditions\nsummarized in the relevant tables. Check that the operating conditions in the circuit match the measurement\nconditions when relying on the quoted parameters.\nTable 243. I2C operating conditions\nSymbol Parameter Min. Max. Unit\nVCC Supply voltage 1.8 5.5 V\nTA Ambient operating temperatureRange 6 All packages -40 85\n°C\nRange 8UFDFPN8, UFDFPN12 -40 105\nSO8N, TSSOP8 -40 125\nTable 244. AC test measurement conditions\nSymbol Parameter Min. Max. Unit\nCL Load capacitance 100 pF\ntr, tf Input rise and fall times - 50 ns\nVhi-lo Input levels 0.2 V CC to 0.8 V CC\nV\nVref(t) Input and output timing reference levels 0.3 V CC to 0.7 V CC\nFigure 74. AC test measurement I/O waveform\n0.8VCC\n0.2VCC0.7VCC\n0.3VCCInput and Output\nTiming Reference LevelsInput Levels\nTable 245. Input parameters\nSymbol Parameter Min. Max. Unit\nCIN Input capacitance (SDA) - 8\npF\nCIN Input capacitance (other pins) - 6\ntNS (1)Pulse width ignored (input filter on SCL and SDA) - 80 ns\n \n1. Evaluated by characterization, not tested in production.\n \nTable 246. I2C DC characteristics (up to 85 °C)\nSymbol Parameter Test conditions Min. Typ. Max. Unit\nILIInput leakage current (SCL,\nSDA)VIN = V SS or V CC\ndevice in Standby mode- 0.03 ± 0.1\nμA\nILI Input leakage current (LPD)VIN = V SS\ndevice in Standby mode- 0.1 ± 0.5\nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 137/197\nSymbol Parameter Test conditions Min. Typ. Max. Unit\nILO μAOperating leakage current\n(SDA)SDA in Hi-Z, external voltage applied on\nSDA: V SS or V CC- 0.03 ± 0.1\nICC_E2Operating supply current\n(device select E2 address)\nRead(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 116 160\nμA VCC = 3.3 V - 220 240\nVCC = 5.5 V - 510 550\nICC_MBOperating supply current\n(device select MB address)\nRead(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 116 160\nμA VCC = 3.3 V - 220 240\nVCC = 5.5 V - 510 550\nICC0Operating supply current\n(device select E2 address)\nWrite(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 110 300\nμA VCC = 3.3 V - 110 330\nVCC = 5.5 V - 130 430\nICC0_MBOperating supply current\n(device select MB address)\nWrite(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 170 200\nμA VCC = 3.3 V - 280 300\nVCC = 5.5 V - 520 600\nICC1\n(LPD = 1)Low power down supply currentVCC = 1.8 V - 0.84 1.5\nμA VCC = 3.3 V - 1.3 2.0\nVCC = 5.5 V - 1.7 3.0\nICC1_PON\n(LPD = 0)Static standby supply current\nafter power ON, or device select\nstop, or time outVCC = 1.8 V - 72 100\nμA VCC = 3.3 V - 76 100\nVCC = 5.5 V - 87 120\nVIL Input low voltage (SDA, SCL)VCC = 1.8 V\n-0.45- 0.25 V CC\nV VCC = 3.3 V - 0.30 V CC\nVCC = 5.5 V - 0.30 V CC\nVIL_LPD Input low voltage (LPD) VCC = 3.3 V -0.45 - 0.20 V CC V\nVIH Input high voltage (SDA, SCL)VCC = 1.8 V\n0.75 V CC-\nVCC + 1 V VCC = 3.3 V -\nVCC = 5.5 V -\nVIH Input high voltage (LPD)VCC = 1.8 V\n0.85 V CC-\nVCC + 1 V VCC = 3.3 V -\nVCC = 5.5 V -\nVOL_SDA Ouput low voltage SDA (1 MHz)VCC = 1.8 V, I OL = 1.0 mA - 50\n400 mV VCC = 3.3 V, I OL = 2.1 mA - 75\nVCC = 5.5 V, I OL = 3.0 mA - 90\nVCC_Power_up Device select acknowledge fC = 100 kHz(2)- 1.48 1.7 V\n \n1. SCL, SDA connected to ground or V CC. SDA connected to V CC through a pull-up resistor.\n2. Evaluated by characterization, not tested in production.\n \nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 138/197\nTable 247. I2C DC characteristics (up to 125 °C)\nSymbol Parameter Test conditions Min. Typ. Max. Unit\nILIInput leakage current (SCL,\nSDA)VIN = V SS or V CC\ndevice in Standby mode- 0.03 ± 0.1\nμA ILI Input leakage current (LPD)VIN = V SS\ndevice in Standby mode- 0.1 ± 0.5\nILOOperating leakage current\n(SDA)SDA in Hi-Z, external voltage applied on\nSDA: V SS or V CC- 0.03 ± 0.1\nICC_E2Operating supply current\n(device select E2 address)\nRead(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 126 180\nμA VCC = 3.3 V - 230 260\nVCC = 5.5 V - 510 550\nICC_MBOperating supply current\n(device select MB address)\nRead(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 126 180\nμA VCC = 3.3 V - 230 260\nVCC = 5.5 V - 510 550\nICC0Operating supply current\n(device select E2 address)\nWrite(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 120 310\nμA VCC = 3.3 V - 120 350\nVCC = 5.5 V - 140 450\nICC0_MBOperating supply current\n(device select MB address)\nWrite(1)VCC = 1.8 V\nfC = 1 MHz\n(rise/fall time < 50 ns)- 180 220\nμA VCC = 3.3 V - 290 320\nVCC = 5.5 V - 520 600\nICC1\n(LPD = 1)Low power down supply currentVCC = 1.8 V - 2.5 5\nμA VCC = 3.3 V - 3.0 6\nVCC = 5.5 V - 4.0 7\nICC1_PON\n(LPD = 0)Static standby supply current\nafter power ON, or device select\nstop, or time outVCC = 1.8 V - 78 110\nV VCC = 3.3 V - 82 110\nVCC = 5.5 V - 95 130\nVIL Input low voltage ((SDA, SCL)VCC = 1.8 V\n-0.45- 0.25 V CC\nV VCC = 3.3 V - 0.30 V CC\nVCC = 5.5 V - 0.30 V CC\nVIL_LPD Input low voltage (LPD) VCC = 3.3 V -0.45 - 0.20 V CC V\nVIH Input high voltage (SDA, SCL)VCC = 1.8 V\n0.75 V CC-\nVCC + 1 V VCC = 3.3 V -\nVCC = 5.5 V -\nVIH_LPD Input high voltage (LPD)VCC = 1.8 V\n0.85 V CC-\nVCC + 1 V VCC = 3.3 V -\nVCC = 5.5 V -\nVOL_SDA Ouput low voltage SDA (1 MHz)VCC = 1.8 V, I OL = 1.0 mA - 50\n400 mV VCC = 3.3 V, I OL = 2.1 mA - 80\nVCC = 5.5 V, I OL = 3.0 mA - 100\nVCC_Power_up Device select acknowledge fC = 100 kHz(2)- 1.48 1.7 V\n \nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 139/197\n1. SCL, SDA connected to ground or V CC. SDA connected to V CC through a pull-up resistor.\n2. Evaluated by characterization, not tested in production.\n \nTable 248. I2C AC characteristics (up to 85 °C)\nTest conditions specified in Table 243\nSymbol Alt. Parameter Min. Max. Unit\nfC fSCL Clock frequency 0.05 1000 kHz\ntCHCL tHIGH Clock pulse width high(1) 0.26 25000 (2)\nµs\ntCLCH tLOW Clock pulse width low(1) 0.5 25000 (3)\ntSTART_OUT - I²C timeout on Start condition(1) 35 - ms\ntXH1XH2 tR Input signal rise time(1) (4) (4)\nnstXL1XL2 tF Input signal fall time(1) (4) (4)\ntDL1DL2 tF SDA (out) fall time(1) 20 120\ntDXCX tSU:DAT Data in set up time(1) 0 -\ntCLDX tHD:DAT Data in hold time 0 -\ntCLQX(5) tDH Data out hold time 100 -\ntCLQV(6) tAA Clock low to next data valid (access time) - 450\ntCHDX(7) tSU:STA Start condition set up time 250 -\ntDLCL tHD:STA Start condition hold time 0.25 35000 (8) µs\ntCHDH tSU:STO Stop condition set up time 250 -\nns\ntDHDL tBUF Time between Stop condition and next Start condition 500 -\ntW - I²C write time(9) - 5\nms tbootDC - RF OFF and LPD = 0(1) - 0.6\ntbootLPD - RF OFF(1) - 0.6\n \n1. Evaluated by characterization, not tested in production.\n2. t CHCL  timeout.\n3. t CLCH  timeout.\n4.There are no min. or max. values for the input signal rise and fall times. The I2C specification recommends that they are less than 120 ns\nwhen f C < 1 MHz.\n5. To avoid spurious Start and Stop conditions, a minimum delay is put between SCL=1 and the falling or rising edge of SDA.\n6.tCLQV  is the time (from the falling edge of SCL) required by the SDA bus line to reach 0.8 V CC in a compatible way with the I2C specification\n(tSU:DAT  (min) = 100 ns), assuming that the R bus × C bus time constant is less than 150 ns (as specified in Figure 76 ).\n7. For a restart condition, or following a write cycle.\n8. t DLCL timeout.\n9.I2C write time for 1, 2, 3, or 4 bytes in EEPROM (user memory and system configuration), provided they are all located in the same memory\npage, that is, the most significant memory address bits (b16-b2) are the same.\n \nTable 249. I2C AC characteristics (up to 125 °C)\nTest conditions specified in Table 243\nSymbol Alt. Parameter Min. Max. Unit\nfC fSCL Clock frequency 0.05 1000 kHz\ntCHCL tHIGH Clock pulse width high(1) 0.26 25000(2)\nµs\ntCLCH tLOW Clock pulse width low(1) 0.5 25000(3)\nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 140/197\nTest conditions specified in Table 243\nSymbol Alt. Parameter Min. Max. Unit\ntSTART_OUT - I²C timeout on Start condition(1) 35 - ms\ntXH1XH2 tR Input signal rise time(1) (4) (4)\nnstXL1XL2 tF Input signal fall time(1) (4) (4)\ntDL1DL2 tF SDA (out) fall time(1) 20 120\ntDXCX tSU:DAT Data in set up time(1) 0 -\ntCLDX tHD:DAT Data in hold time(1) 0 -\ntCLQX(5) tDH Data out hold time 100 -\ntCLQV(6) tAA Clock low to next data valid (access time) - 450\ntCHDX(7) tSU:STA Start condition set up time 250 -\ntDLCL tHD:STA Start condition hold time 0.25 35000(8) µs\ntCHDH tSU:STO Stop condition set up time 250 -\nns\ntDHDL tBUFTime between Stop condition and next Start\ncondition500 -\ntW - I²C write time (9) - 5.5\nms tbootDC - RF OFF and LPD = 0(1) - 0.6\ntbootLPD - RF OFF(1) - 0.6\n \n1. Evaluated by characterization, not tested in production.\n2. t CHCL  timeout.\n3. t CLCH  timeout.\n4.There are no min. or max. values for the input signal rise and fall times. The I2C specification recommends that they are less than 120 ns\nwhen f C < 1 MHz.\n5. To avoid spurious Start and Stop conditions, a minimum delay is put between SCL = 1 and the falling or rising edge of SDA.\n6.tCLQV  is the time (from the falling edge of SCL) required by the SDA bus line to reach 0.8 V CC in a compatible way with the I2C specification\n(tSU:DAT  (min) = 100 ns), assuming that the R bus × C bus time constant is less than 150 ns (as specified in Figure 76  ).\n7. For a restart condition, or following a write cycle.\n8. t DLCL timeout.\n9.I2C write time for 1, 2, 3, or 4 bytes in EEPROM (user memory and system configuration), provided they are all located in the same page,\nthat is, the most significant memory address bits (b16-b2) are the same.\n \nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 141/197\nFigure 75. I2C AC waveforms\nSCL\nSDA in\nSCL\nSDA outSCL\nSDA intCHCL\ntDLCL\ntCHDX\nStart\nconditiontCLCH\ntDXCX tCLDX\nSDA\ninputSDA\nchangetCHDH tDHDL\nData validtCLQV tCLQXtCHDH\nStop\nconditiontCHDX\nStart\nconditionWrite cycletWStop\ncondition\ntCHCLtXH1XH2\ntXH1XH2tXL1XL2\ntXL1XL2\nData validtDL1DL2\nDT56269Start\ncondition\nFigure 76  shows how to calculate the value of the pull-up resistor. In applications where this method of\nsynchronization is not employed, the pull-up resistor is not necessary, provided that the bus master has a\npush-pull (rather than open drain) output.\nFigure 76. I2C Fast mode (f C = 1 MHz): maximum R bus value versus bus parasitic capacitance (C bus)\n110\n10 100\nBus line capacitor (pF)Bus line pull-up resistor (K W)\nI²C bus \nmasterST25DVRbusVCC\nCbusSCL\nSDA\nHere,\nRbus×Cbus= 120 nsR\nbus×C\nbus= 150 ns\n4\n30The R bus x C bus time constant \nmust be below 150 ns. \nThe time constant line is \nrepresented on the left.100\nST25DV04K ST25DV16K ST25DV64K\nI2C parameters\nDS10925  - Rev 11 page 142/197\n9.3 GPO characteristics\nThis section summarizes the operating and measurement conditions of the GPO feature. The parameters in the\nDC and AC characteristic tables that follow are derived from tests performed under the measurement conditions\nsummarized in the relevant tables.\nTable 250. GPO DC characteristics up to 85°C\nSymbol Parameter Condition Min Typ Max Unit\nVOL_GPO_CMOSOutput low voltage\n(GPO CMOS)VDCG = 1.8 V, I OL = 0.5 mA - - 0.4\nV VDCG = 3.3 V, I OL = 0.5 mA - - 0.4\nVDCG = 5.5 V, I OL =  0.5 mA - - 0.4\nVOH_GPO_CMOSOutput high voltage\n(GPO CMOS)VDCG = 1.8 V, I OH = - 0.5 mA VDCG - 0.4 - -\nV VDCG = 3.3 V, I OH = - 0.5 mA VDCG - 0.4 - -\nVDCG = 5.5 V, I OH = - 0.5 mA VDCG - 0.4 - -\nVOL_GPO_ODOutput low voltage\n(GPO open drain)IOL = 1 mA, VCC = 1.8 V - 0.28 0.4\nV IOL = 1 mA, VCC = 3.3 V - 0.20 0.4\nIOL = 1 mA, VCC = 5.5 V - 0.20 0.4\nIL_GPO_ODOutput leakage\n(GPO open drain)GPO in Hi-Z, external\nvoltage applied on:\nGPO, V SS or V CC- 0.15 0.06 0.15 µA\nILI_VDGC Input leakage (V DGC) VDGC = 5.5 V - - 0.1 µA\nTable 251. GPO DC characteristics up to 125°C\nSymbol Parameter Condition Min Typ Max Unit\nVOL_GPO_CMOSOutput low voltage\n(GPO CMOS)VDCG = 1.8 V, I OL = 0.5 mA - - 0.4\nV VDCG = 3.3 V, I OL = 0.5 mA - - 0.4\nVDCG = 5.5 V, I OL =  0.5 mA - - 0.4\nVOH_GPO_CMOSOutput high voltage\n(GPO CMOS)VDCG = 1.8 V, I OH = - 0.5 mA VDCG - 0.4 - -\nV VDCG = 3.3 V, I OH = - 0.5 mA VDCG - 0.4 - -\nVDCG = 5.5 V, I OH = - 0.5 mA VDCG - 0.4 - -\nVOL_GPO_ODOutput low voltage\n(GPO open drain)IOL = 1 mA, VCC = 1.8 V - 0.28 0.4\nV IOL = 1 mA, VCC = 3.3 V - 0.22 0.4\nIOL = 1 mA, VCC = 5.5 V - 0.21 0.4\nIL_GPO_ODOutput leakage\n(GPO open drain)GPO in Hi-Z, external voltage applied on\nGPO: V SS or V CC- 0.15 0.06 0.15 µA\nILI_VDGC Input leakage (V DGC) VDGC = 5.5 V - - 0.1 µA\nTable 252. GPO AC characteristics\nSymbol Parameter Condition Min Max Unit\ntr_GPO_CMOS Output rise time CL = 30 pF, V DCG = 1.8 V to 5.5 V - 50\nns\ntf_GPO_CMOS Output fall time CL = 30 pF, V DCG = 1.8 V to 5.5 V - 50\nST25DV04K ST25DV16K ST25DV64K\nGPO characteristics\nDS10925  - Rev 11 page 143/197\n9.4 RF electrical parameters\nThis section summarizes the operating and measurement conditions, and the DC and AC characteristics of the\ndevice in RF mode.\nThe parameters in the following tables are derived from tests performed under the measurement conditions\nsummarized in the relevant tables. Check that the operating conditions in the circuit match the measurement\nconditions when relying on the quoted parameters.\nTable 253. RF characteristics\nSymbol Parameter Condition Min Typ Max Unit\nfCC External RF signal frequency - 13.553 13.56 13.567 MHz\nH_ISO Operating field according to ISO(1)Range 6 TA = -40 °C to 85 °C\n150 - 5000 mA/m\nRange 8 TA = -40 °C to 105 °C\nMICARRIER10% carrier modulation index \nMI = (A - B) / (A + B)150 mA/m > H_ISO > 1000  mA/m 10 - 30\n%\n100% carrier modulation index(1) MI= (A - B) / (A + B) 95 - 100\ntMINCDMinimum time from carrier generation to\nfirst data(1)From H-field min - - 1 ms\nfSH Subcarrier frequency high(1) fCC/32 - 423.75 -\nkHz\nfSL Subcarrier frequency low(1) fCC/28 - 484.28 -\nt1 Time for ST25DVxxx response(1) 4352/f C 318.6 320.9 323.3\nµs t2 Time between commands(1) 4192/f C 309 311.5 314\nt3 Time between commands(1) 4384/f C 323.3 - -\nWt_BlockRF user memory write time (including\ninternal Verify) (1)(2)1 block - 5.2 -\nms\n4 blocks - 19.7 -\nWt_ByteRF system memory write time including\ninternal Verify)(1)(2)1 byte - 4.9 - ms\nWt_MBRF mailbox write time (from VCD request\nSOF to ST25DVxxx response EOF)(2)(3)256 bytes - 80.7 - ms\ntRead_MBRF mailbox read time (from VCD request\nSOF to ST25DVxxx response EOF) (2)(3)256 bytes - 81 - ms\nCTUN Internal tuning capacitor(3) f = 13.56 MHz 26.5 28.5 30.5 pF\nVBACKBackscattered level, as defined by ISO\ntest(1)- 10 - - mV\nVMIN_1  (1)RF input voltage amplitude between AC0\nand AC1, V SS pin left floating, VAC0 - VAC1\npeak to peak(1)Inventory and Read operations - 4.8 -\nV\nWrite operations - 5.25 -\nVMIN_2  (1)AC voltage between AC0 and V SS, or\nbetween AC1 and V SS (1)Inventory and Read operations - 2.25 -\nV\nWrite operations - 2.7 -\ntBootRF Without DC supply (no V CC) Set up time - 0.6 -\nms\ntRF_OFF RF OFF time Chip reset 2 - -\n \n1. Evaluated by characterization, not tested in production.\n2. For VCD request coded in 1 out of 4 and ST25DVxxx response in high data rate, single sub carrier.\n3. Evaluated by characterization at 25 °C. Tested in production at 25 °C, by correlating industrial tester measures with characterization data.\n \nST25DV04K ST25DV16K ST25DV64K\nRF electrical parameters\nDS10925  - Rev 11 page 144/197\nNote: T A= -40 to 105°C. Characterized only.\nAll timing characterization performed on a reference antenna witht the following characteristics:\n• ISO antenna class 1\n• Tuning frequency = 13.7 MHz.\nTable 254. Operating conditions\nSymbol Parameter Min. Max. Unit\nTA Ambient operating temperatureRange 6 -40 85\n°C\nRange 8 -40 105\nFigure 77  shows an ASK modulated signal from the VCD to the ST25DVxxx. The test conditions for the AC/DC\nparameters are:\n• Close coupling condition with tester antenna (1 mm)\n• ST25DVxxx performance measured at the tag antenna\n• ST25DVxxx synchronous timing, transmit and receive\nFigure 77. ASK modulated signal\nDT19784V1A\nBtRFF\ntRFR\ntRFSBL\ntMIN CDfCC\nST25DV04K ST25DV16K ST25DV64K\nRF electrical parameters\nDS10925  - Rev 11 page 145/197\n10 Package information\nIn order to meet environmental requirements, ST offers these devices in different grades of ECOPACK packages,\ndepending on their level of environmental compliance. ECOPACK specifications, grade definitions and product\nstatus are available at: www.st.com . ECOPACK is an ST trademark.\n10.1 SO8N package information\nThis SO8N is an 8-lead, 4.9 x 6 mm, plastic small outline, 150 mils body width, package.\nFigure 78. SO8N – Outline\nO7_SO8_ME_V2E18ccc b\nDc\n1Eh x 45˚\nA2\nk0.25 mm\nLA1GAUGE  PLANEeA\nL1CSEATING  \nPLANE\n1. Drawing is not to scale.\nST25DV04K ST25DV16K ST25DV64K\nPackage information\nDS10925  - Rev 11 page 146/197\nTable 255. SO8N – Mechanical data\nSymbolmillimeters inches (1)\nMin. Typ. Max. Min. Typ. Max.\nA - - 1.750 - - 0.0689\nA1 0.100 - 0.250 0.0039 - 0.0098\nA2 1.250 - - 0.0492 - -\nb 0.280 - 0.480 0.0110 - 0.0189\nc 0.170 - 0.230 0.0067 - 0.0091\nD(2) 4.800 4.900 5.000 0.1890 0.1929 0.1969\nE 5.800 6.000 6.200 0.2283 0.2362 0.2441\nE1(3) 3.800 3.900 4.000 0.1496 0.1535 0.1575\ne - 1.270 - - 0.0500 -\nh 0.250 - 0.500 0.0098 - 0.0197\nk 0° - 8° 0° - 8°\nL 0.400 - 1.270 0.0157 - 0.0500\nL1 - 1.040 - - 0.0409 -\nccc - - 0.100 - - 0.0039\n \n1. Values in inches are converted from mm and rounded to four decimal digits.\n2. Dimension “D” does not include mold flash, protrusions or gate burrs. Mold flash, protrusions or gate burrs shall not exceed\n0.15 mm per side\n3. Dimension “E1” does not include interlead flash or protrusions. Interlead flash or protrusions shall not exceed 0.25 mm per\nside.\n \nNote: The package top may be smaller than the package bottom. Dimensions D and E1 are determinated at the\noutermost extremes of the plastic body exclusive of mold flash, tie bar burrs, gate burrs and interleads flash,\nbut including any mismatch between the top and bottom of plastic body. Measurement side for mold flash,\nprotusions or gate burrs is bottom side.\nFigure 79. SO8N - Footprint example\nO7_SO8N_FP_V2 1.270.6 (x8)\n3.9\n6.7\n1. Dimensions are expressed in millimeters.\n10.2 TSSOP8 package information\nThis TSSOP is an 8-lead, 3 x 6.4 mm, 0.65 mm pitch, thin shrink small outline package.\nST25DV04K ST25DV16K ST25DV64K\nTSSOP8 package information\nDS10925  - Rev 11 page 147/197\nFigure 80. TSSOP8 – Outline\n6P_TSSOP8_ME_V31\ncLED\nk\ne4L1E1\nA2 A\nb8 5\nA1\n1. Drawing is not to scale.\nTable 256. TSSOP8 – Mechanical data\nSymbolmillimeters inches (1)\nMin. Typ. Max. Min. Typ. Max.\nA - - 1.200 - - 0.0472\nA1 0.050 - 0.150 0.0020 - 0.0059\nA2 0.800 1.000 1.050 0.0315 0.0394 0.0413\nb 0.190 - 0.300 0.0075 - 0.0118\nc 0.090 - 0.200 0.0035 - 0.0079\nD(2) 2.900 3.000 3.100 0.1142 0.1181 0.1220\ne - 0.650 - - 0.0256 -\nE 6.200 6.400 6.600 0.2441 0.2520 0.2598\nE1(3) 4.300 4.400 4.500 0.1693 0.1732 0.1772\nL 0.450 0.600 0.750 0.0177 0.0236 0.0295\nL1 - 1.000 - - 0.0394 -\nk 0° - 8° 0° - 8°\naaa - - 0.100 - - 0.0039\n \n1. Values in inches are converted from mm and rounded to four decimal digits.\n2. Dimension “D” does not include mold flash, protrusions or gate burrs. Mold flash, protrusions or gate burrs shall not exceed\n0.15 mm per side\n3. Dimension “E1” does not include interlead flash or protrusions. Interlead flash or protrusions shall not exceed 0.25 mm per\nside.\n \nNote: The package top may be smaller than the package bottom. Dimensions D and E1 are determinated at the\noutermost extremes of the plastic body exclusive of mold flash, tie bar burrs, gate burrs and interleads flash,\nbut including any mismatch between the top and bottom of plastic body. Measurement side for mold flash,\nprotusions or gate burrs is bottom side.\nST25DV04K ST25DV16K ST25DV64K\nTSSOP8 package information\nDS10925  - Rev 11 page 148/197\nFigure 81. TSSOP8 – Footprint example\n6P_TSSOP8_FP_V2\n2.351.55\n0.65\n0.40\n5.80\n7.35\n1. Dimensions are expressed in millimeters.\nST25DV04K ST25DV16K ST25DV64K\nTSSOP8 package information\nDS10925  - Rev 11 page 149/197\n10.3 UFDFN8 package information\nUFDFPN8 is an 8-lead, 2 × 3 mm, 0.5 mm pitch ultra thin profile fine pitch dual flat package.\nFigure 82. UFDFN8 - Outline\nTop viewPin #1 \nID marking\nSide viewSeating planeeeeccc\nCC\nCC\nCBA\n12ND\nE\naaa\naaaA\nA1\nA3\n2x2x\nDatum A\nTerminal tip\nDetail “A”\nEven terminalL1L3L\nee/2Pin #1 \nID marking\nBottom viewSee Detail “A”e\ne12\nND-1 xD2\nL1L3\nE2\nK\nLb\n1. Max. package warpage is 0.05 mm.\n2. Exposed copper is not systematic and can appear partially or totally according to the cross section.\n3. Drawing is not to scale.\nST25DV04K ST25DV16K ST25DV64K\nUFDFN8 package information\nDS10925  - Rev 11 page 150/197\nTable 257. UFDFN8 - Mechanical data\nSymbolmillimeters inches (1)\nMin Typ Max Min Typ Max\nA 0.450 0.550 0.600 0.0177 0.0217 0.0236\nA1 0.000 0.020 0.050 0.0000 0.0008 0.0020\nb(2) 0.200 0.250 0.300 0.0079 0.0098 0.0118\nD 1.900 2.000 2.100 0.0748 0.0787 0.0827\nD2 1.200 - 1.600 0.0472 - 0.0630\nE 2.900 3.000 3.100 0.1142 0.1181 0.1220\nE2 1.200 - 1.600 0.0472 - 0.0630\ne - 0.500 - 0.0197\nK 0.300 - - 0.0118 - -\nL 0.300 - 0.500 0.0118 - 0.0197\nL1 - - 0.150 - - 0.0059\nL3 0.300 - - 0.0118 - -\naaa - - 0.150 - - 0.0059\nbbb - - 0.100 - - 0.0039\nccc - - 0.100 - - 0.0039\nddd - - 0.050 - - 0.0020\neee (3) - - 0.080 - - 0.0031\n \n1. Values in inches are converted from mm and rounded to 4 decimal digits.\n2. Dimension b applies to plated terminal and is measured between 0.15 and 0.30 mm from the terminal tip.\n3. Applied for exposed die paddle and terminals. Exclude embedding part of exposed die paddle from measuring.\n \n10.4 UFDFPN12 package information\nUFDFPN12 is an 12-lead, 3 x 3 mm, 0.5 mm pitch ultra thin profile fine pitch dual flat package.\nST25DV04K ST25DV16K ST25DV64K\nUFDFPN12 package information\nDS10925  - Rev 11 page 151/197\nFigure 83.  UFDFPN12 - Outline\ne\nb\nBOTTOM VIEWDE\nTOP VIEW\nSIDE VIEWD2\nLE2\nkPin #1 ID marking\nA\n1. Drawing is not to scale.\nTable 258. UFDFPN12 - Mechanical data\nSymbolmillimeters inches (1)\nMin Typ Max Min Typ Max\nA(2) 0.45 0.55 0.60 0.0177 0.0217 0.0236\nb 0.20 0.25 0.30 0.0079 0.0098 0.0118\nD 2.95 3.00 3.10 0.1161 0.1181 0.1220\nD2 1.35 1.40 1.45 0.0531 0.0551 0.0571\ne 0.50 0.0197\nE 2.95 3.00 3.10 0.1161 0.1181 0.1220\nE2 2.50 2.55 2.60 0.0984 0.1004 0.1024\nL 0.25 0.30 0.35 0.0098 0.0118 0.0138\nk 0.40 0.0157\n \n1. Values in inches are converted from mm and rounded to 4 decimal digits.\n2. Package total thickness.\n \nST25DV04K ST25DV16K ST25DV64K\nUFDFPN12 package information\nDS10925  - Rev 11 page 152/197\n10.5 WLCSP10 package information\nFigure 84. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale package outline\nX\nA3A2Abbb Z\neI\nH\ne1D\nGDETAIL AOrientation referenceY\nE\naaa\n(4X)\nSIDE VIEW BOTTOM  VIEW TOP  VIEW\nDETAIL A\nROTATED 90\nccc M Z X Y\ndddMZZA1\nb(10x)eeeZ\nSEATING PLANEBUMPJ\nF\n1. Drawing is not to scale.\n2. Dimension is measured at the maximum bump diameter parallel to primary datum Z.\n3. Primary datum Z and seating plane are defined by the spherical crowns of the bump.\n4. Bump position designation per JESD 95-1, SPP-010.\nTable 259. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale mechanical data\nSymbolmillimeters inches (1)\nMin Typ Max Min Typ Max\nA 0.265 0.295 0.325 0.0104 0.0116 0.0128\nA1 - 0.095 - - 0.0037 -\nA2 - 0.175 - - 0.0069 -\nA3 - 0.025 - - 0.0010 -\nb - 0.185 - - 0.0073 -\nD - 1.649 1.669 - 0.0649 0.0657\nE - 1.483 1.503 - 0.0584 0.0592\ne - 0.400 - - 0.0157 -\ne1 - 0.800 - - 0.0315 -\nH - 0.346 - - 0.0136 -\nI - 1.039 - - 0.0409 -\nJ - 0.200 - - 0.0079 -\nST25DV04K ST25DV16K ST25DV64K\nWLCSP10 package information\nDS10925  - Rev 11 page 153/197\nSymbolmillimeters inches (1)\nMin Typ Max Min Typ Max\nF - 0.314 - - 0.0124 -\nG - 0.342 - - 0.0135 -\naaa - 0.110 - - 0.0043 -\nbbb - 0.110 - - 0.0043 -\nccc - 0.110 - - 0.0043 -\nddd - 0.060 - - 0.0024 -\neee - 0.060 - - 0.0024 -\n \n1. Values in inches are converted from mm and rounded to 4 decimal digits.\n \nFigure 85. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale recommended footprint\nDpad\nDsm\nTable 260. WLCSP10 recommended PCB design rules\nDimension Recommended values\nPitch 0.4 mm\nDpad 0,225 mm\nDsm 0.290 mm typ. (depends on soldermask registration tolerance)\nStencil opening 0.250 mm\nStencil thickness 0.100 mm\nST25DV04K ST25DV16K ST25DV64K\nWLCSP10 package information\nDS10925  - Rev 11 page 154/197\n11 Ordering information\nTable 261. Ordering information scheme\nExample: ST25DV 64K -JF R 6 D 3\nDevice type\nST25DV = Dynamic NFC/RFID tag based on ISO\n15693 and NFC T5T\nMemory size\n04K = 4 Kbits\n16K = 16 Kbits\n64K = 64 Kbits\nDevice features\nIE = I2C and GPO open drain, fast transfer mode and energy harvesting\nJF = I2C and GPO CMOS, fast transfer mode, energy harvesting and low power mode\nOperating voltage\nR = V CC = 1.8 to 5.5 V\nDevice grade\n6 = Industrial: device tested with standard test flow over the - 40 to 85 °C range\n8 = Industrial: device tested with standard test flow over the -40 to 105 °C range (UFDFPN8 and UFDFPN12), or over\nthe -40 to 125 °C range (SO8N and TSSOP8 only, 105 °C for the RF interface)\nPackage\nD = UFDFPN12\nS = SO8N\nT = TSSOP8\nC = UFDFPN8 (only for 04K version)\nU = 725 µm ± 20 µm unsawn wafer (only for 04K version)\nL = WLCSP thin 10 balls (only for 04K version)\nCapacitance\n3 = 28.5 pF\nNote: Parts marked as “ES” or “E” are not yet qualified and therefore not approved for use in production. ST is\nnot responsible for any consequences resulting from such use. In no event will ST be liable for the customer\nusing any of these engineering samples in production. ST’s Quality department must be contacted prior to any\ndecision to use these engineering samples to run a qualification activity.\nFor a list of available options (speed, package, etc.), or for further information on any aspect of this device,\ncontact your nearest ST sales office.\nST25DV04K ST25DV16K ST25DV64K\nOrdering information\nDS10925  - Rev 11 page 155/197\nAppendix A Bit representation and coding for fast commands\nData bits are encoded using Manchester coding, according to the following schemes. For the low data rate, same\nsubcarrier frequency or frequencies is/are used. In this case, the number of pulses is multiplied by 4 and all times\nincrease by this factor. For the Fast commands using one subcarrier, all pulse numbers and times are divided by\n2.\nA.1 Bit coding using one subcarrier\nA.1.1 High data rate\nFor the fast commands, a logic 0 starts with four pulses at 423.75 kHz (f C/32) followed by an unmodulated time of\n9.44 µs, as shown in Figure 86 .\nFigure 86. Logic 0, high data rate, fast commands\nDT12066bV118.88 µs\nFor the Fast commands, a logic 1 starts with an unmodulated time of 9.44 µs followed by four pulses of 423.75\nkHz (f C/32), as shown in Figure 87 .\nFigure 87. Logic 1, high data rate, fast commands\nDT12067bV118.88 µs\nA.1.2 Low data rate\nFor the Fast commands, a logic 0 starts with 16 pulses at 423.75 kHz (f C/32) followed by an unmodulated time of\n37.76 µs, as shown in Figure 88 .\nFigure 88. Logic 0, low data rate, fast commands\nDT12069bV175.52 µs\nFor the Fast commands, a logic 1 starts with an unmodulated time of 37.76 µs followed by 16 pulses at 423.75\nkHz (f C/32), as shown in Figure 89 .\nST25DV04K ST25DV16K ST25DV64K\nBit representation and coding for fast commands\nDS10925  - Rev 11 page 156/197\nFigure 89. Logic 1, low data rate, fast commands\nDT12071bV175.52 µs\nNote: For fast commands, bit coding using two subcarriers is not supported.\nA.2 ST25DVxxx to VCD frames\nFrames are delimited by an SOF and an EOF. They are implemented using code violation. Unused options are\nreserved for future use. For the low data rate, the same subcarrier frequency or frequencies is/are used. In this\ncase, the number of pulses is multiplied by 4. For the Fast commands using one subcarrier, all pulse numbers\nand times are divided by 2.\nA.3 SOF when using one subcarrier\nA.3.1 High data rate\nFor the Fast commands, the SOF comprises an unmodulated time of 28.32 µs, followed by 12 pulses at 423.75\nkHz (f C/32), and a logic 1 that consists of an unmodulated time of 9.44 µs followed by four pulses at 423.75 kHz,\nas shown in Figure 90 .\nFigure 90. Start of frame, high data rate, one subcarrier, fast commands\nDT12079bV156.64 µs 18.88 µs\nA.3.2 Low data rate\nFor the Fast commands, the SOF comprises an unmodulated time of 113.28 µs, followed by 48 pulses at 423.75\nkHz (f C/32), and a logic 1 that includes an unmodulated time of 37.76 µs followed by 16 pulses at 423.75 kHz, as\nshown in Figure 91 .\nFigure 91. Start of frame, low data rate, one subcarrier, fast commands\nDT12081bV1226.56 µs 75.52 µs\nST25DV04K ST25DV16K ST25DV64K\nST25DVxxx to VCD frames\nDS10925  - Rev 11 page 157/197\nA.4 EOF when using one subcarrier\nA.4.1 High data rate\nFor the Fast commands, the EOF comprises a logic 0 that includes four pulses at 423.75 kHz and an\nunmodulated time of 9.44 µs, followed by 12 pulses at 423.75 kHz (f C/32) and an unmodulated time of 37.76\nµs, as shown in Figure 92 .\nFigure 92. End of frame, high data rate, one subcarrier, fast commands\nDT12085bV156.64 µs 18.88 µs\nA.4.2 Low data rate\nFor the Fast commands, the EOF comprises a logic 0 that includes 16 pulses at 423.75 kHz and an unmodulated\ntime of 37.76 µs, followed by 48 pulses at 423.75 kHz (f C/32) and an unmodulated time of 113.28 µs, as shown in\nFigure 93 .\nFigure 93. End of frame, low data rate, one subcarrier, fast commands\nDT12087bV1226.56 µs 75.52 µs\nNote: For SOF and EOF in fast commands, bit coding using two subcarriers is not supported.\nST25DV04K ST25DV16K ST25DV64K\nEOF when using one subcarrier\nDS10925  - Rev 11 page 158/197\nAppendix B I²C sequences\nB.1 Device select codes\nTable 262. Device select usage\nDevice select value\nComment\nHexadecimal Binary\n- 1010 E211 R/ WDevice select generic\nE2 = 0b User memory, Dynamic registers, FTM mailbox\nE2 = 1b System memory\nA6h 1010 0110b User memory, Dynamic registers, FTM mailbox writing\nA7h 1010 0111b User memory, Dynamic registers, FTM mailbox reading\nAEh 1010 1110b System memory writing\nAFh 1010 1111b System memory reading\nB.2 I²C Byte writing and polling\nB.2.1 I2C byte write in user memory\nTable 263. Byte Write in user memory when write operation allowed\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA - Send Data (1 Byte)\n- ACK 9th bit\nStop - Start of Programming\nST25DV04K ST25DV16K ST25DV64K\nI²C sequences\nDS10925  - Rev 11 page 159/197\nTable 264. Polling during programming after byte writing in user memory\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- NoACK 9th bit Device Busy\nStart  A6h - Device select for writing\n- NoACK 9th bit Device Busy\n... ... Device select for writing\n... ... ... 9th bit Device Busy\nStart  A6h - Device select for writing\n- ACK9th bit Device ready\nPrograming completed\nStop - End of Polling\nTable 265. Byte Write in user memory when write operation is not allowed\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA - Send Data\n- NoACK 9th bit: Write access not granted or FTM activated.\nStop -No Programming\nDevice return in Standby\nST25DV04K ST25DV16K ST25DV64K\nI²C Byte writing and polling\nDS10925  - Rev 11 page 160/197\nB.2.2 I²C byte writing in dynamic registers and polling\nTable 266. Byte Write in Dynamic Register (if not Read Only)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nDynamic Register ADDRESS_LSB -Send Address LSB (1 Byte)\nDynamic register are located from address\n2000h to 2007h , some are only readable\n- ACK 9th bit\nDATA - Send Data\n- ACK 9th bit\nStop - Immediate  update of Dynamic register\nTable 267. Polling during programming after byte write in Dynamic Register\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK9th bit Device Busy\nDynamic register updates is immediate\nStop - End of Polling\nTable 268. Byte Write in Dynamic Register if Read Only\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send Address MSB (1 Byte)\n- NoACK 9th bit\nRO Dynamic Register ADDRESS_LSB -Send Address LSB (1 Byte)\nAddresses 2001h, 2004h, 2005h and 2007h are Read Only\nregisters.\n- ACK 9th bit\nDATA - Send Data\n- NoACK 9th bit\nStop -No Programming\nDevice return in Standby\nST25DV04K ST25DV16K ST25DV64K\nI²C Byte writing and polling\nDS10925  - Rev 11 page 161/197\nB.2.3 I2C byte write in mailbox and polling\nTable 269. Byte Write in mailbox when mailbox is free from RF message and fast transfer mode is\nactivated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send mailbox address MSB (1 Byte)\n- ACK 9th bit\n08h -Send Address LSB (1 Byte)\nWrite must be done at first address of mailbox\n- ACK 9th bit\nDATA - Send Data\n- ACK 9th bit\nStop - Immediate update of mailbox\nTable 270. Byte Write in mailbox when mailbox is not free from RF message fast transfer mode is not\nactivated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send mailbox address MSB (1 Byte)\n- ACK 9th bit\n08h -Send Address LSB (1 Byte)\nWrite must be done at first address of mailbox\n- ACK 9th bit\nDATA - Send Data\n- NoACK9th bit Access\nMailbox busy or FTM not activated\nStop -No Programming\nDevice return in Standby\nST25DV04K ST25DV16K ST25DV64K\nI²C Byte writing and polling\nDS10925  - Rev 11 page 162/197\nB.2.4 I2C byte write and polling in system memory\nTable 271. Byte Write in System memory if I2C security session is open and register is not RO\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA - Send Data\n- ACK 9th bit\nStop - Start of Programming\nTable 272. Polling during programing after byte write in System memory if I2C security session is open\nand register is not RO\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- NoACK 9th bit Device Busy\nStart  AEh - Device select for writing\n- NoACK 9th bit Device Busy\nStart  AEh - Device select for writing\n- ... 9th bit\nStart  AEh - Device select for writing\n- ACK9th bit Device ready\nPrograming completed\nStop - end of Polling\nST25DV04K ST25DV16K ST25DV64K\nI²C Byte writing and polling\nDS10925  - Rev 11 page 163/197\nTable 273. Byte Write in System memory if I2C security session is closed or register is RO\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA - Send Data\n- NoACK 9th bit\nStop -No Programming\nDevice return in Standby\nB.3 I2C sequential writing and polling\nB.3.1 I2C sequential write in user memory and polling\nTable 274. Sequential write User memory when write operation allowed and all bytes belong to same area\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA 0 - Send Data 0\n- ACK 9th bit\nDATA 1 - Send Data 1\n- ACK 9th bit\n... - ...\n- ... ...\nDATA n -Send Data n\nn ≤ 256\n- ACK 9th bit\nStop - Start of Programming\nST25DV04K ST25DV16K ST25DV64K\nI2C sequential writing and polling\nDS10925  - Rev 11 page 164/197\nTable 275. Polling during programing after sequential write in User memory when write operation allowed\nand all bytes belong to same area.\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- NoACK 9th bit Device Busy\nStart  A6h - Device select for writing\n- NoACK 9th bit Device Busy\nStart  A6h - Device select for writing\n- ... 9th bit Device Busy\nStart  A6h - Device select for writing\n- ACK9th bit Device ready\nPrograming completed\nStop - End of Polling\nTable 276. Sequential write in User memory when write operation allowed and crossing over area border\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nDATA 0 - Send Data 0\n- ACK 9th bit\nDATA 1 - Send Data 1\n- ACK 9th bit\n... - ...\n- ... ...\nDATA n -Send Data n\nAddress is located in next memory area\n- NoACK 9th bit\nStop -No programming\nDevice return in Standby\nST25DV04K ST25DV16K ST25DV64K\nI2C sequential writing and polling\nDS10925  - Rev 11 page 165/197\nTable 277. Polling during programming after sequential write in User memory when write operation\nallowed and crossing over area border\nMaster drives SDA Slave drives SDA\nComment\nRequest/Response Frame\nStart  A6h - Device select for writing\n- ACK9th bit Device ready\nNo programming\nStop - End of Polling\nB.3.2 I2C sequential write in mailbox and polling\nTable 278. Sequential write in mailbox when mailbox is free from RF message and fast transfer mode is\nactivated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send mailbox Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send mailbox Address LSB (1 Byte)\n- ACK 9th bit\nDATA 0 - Send Data 0\n- ACK 9th bit\nDATA 1 - Send Data 1\n- ACK 9th bit\n... - ...\n- ... ...\nDATA n -Send Data n\nn ≤ 256\n- ACK 9th bit\nStop - Immediate mailbox content update\nTable 279. Polling during programing after sequential write in mailbox\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK9th bit Device ready\nMailbox is immediately updated\nStop - End of Polling\nST25DV04K ST25DV16K ST25DV64K\nI2C sequential writing and polling\nDS10925  - Rev 11 page 166/197\nB.4 I²C Read current address\nB.4.1 I2C current address read in User memory\nTable 280. Current byte Read in User memory if read operation allowed (depending on area protection and\nRF user security session)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A7h - Device select for reading\n- ACK 9th bit\nDATAReceive Data located on last pointed address+1, or at address 0 after power-up, in\nuser memory\nNO_ACK - 9th bit\nStop - End of Reading\nTable 281. Current Read in User memory if read operation not allowed (depending on area protection and\nRF user security session)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A7h - Device select for reading\n- ACK 9th bit\nFFhRead of data not allowed\nST25DV release SDA\nNO_ACK 9th bit\nStop - End of Reading\nST25DV04K ST25DV16K ST25DV64K\nI²C Read current address\nDS10925  - Rev 11 page 167/197\nB.5 I²C random address read\nB.5.1 I2C random address read in user memory\nTable 282. Random byte read in User memory if read operation allowed (depending on area protection and\nRF user security session)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart A7h - Device select for reading\n- ACK 9th bit\n- DATA Receive Data\nNO_ACK - 9th bit\nStop - End of Reading\nTable 283. Random byte read in User memory if operation not allowed (depending on area protection and\nRF user security)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart A7h - Device select for reading\n- ACK 9th bit\n- FFhRead of data not allowed\nrelease SDA\nNO_ACK - 9th bit\nStop - End of Reading\nST25DV04K ST25DV16K ST25DV64K\nI²C random address read\nDS10925  - Rev 11 page 168/197\nB.5.2 I2C Random address read in system memory\nTable 284. Byte Read System memory (Static register or I2C Password after a valid Present I2C Password)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart  AFh - Device select for reading\n- ACK 9th bit\n- DATA Receive Data\nNO_ACK - 9th bit\nStop - End of reading\nB.5.3 I2C Random address read in dynamic registers\nTable 285. Random byte read in Dynamic registers\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Adress LSB (1 Byte)\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- DATA Receive Data\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C random address read\nDS10925  - Rev 11 page 169/197\nB.6 I²C sequential read\nB.6.1 I2C sequential read in user memory\nTable 286. Sequential Read User memory if read operation allowed (depending on area protection and RF\nuser security session) and all bytes belong to the same area\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart A7h0 - Device select for reading\n- ACK 9th bit\n- DATA 0 Receive Data 0\nACK - 9th bit\n- DATA 1 Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- DATA n Receive Data n\nNO_ACK - 9th bit\nStop - End of Reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 170/197\nTable 287. Sequential Read User memory if read operation allowed (depending on area protection and RF\nuser security session) but crossing area border\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- DATA 0 Receive Data 0\nACK - 9th bit\n- DATA 1 Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- DATA n Receive Data last Address available\nACK - 9th bit\n- FFhData is located in next memory area\nST25DV release SDA\nACK - 9th bit\n- ... ...\n... - ...\n- FFhData is located in next memory area\nST25DV release SDA\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 171/197\nTable 288. Sequential Read User memory if read operation allowed (depending on area protection and RF\nuser security session)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- FFhST25DV release SDA\nReading access not granted\nACK - 9th bit\n- ... ...\n... - ...\n- FFhST25DV release SDA\nReading access not granted\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 172/197\nB.6.2 I2C sequential read in system memory\nTable 289. Sequential in Read System memory (I2C security session open if reading I2C_PWD)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\nADDRESS_MSB - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart AF7h - Device select for reading\n- ACK 9th bit\n- DATA Receive Data 0\nACK - 9th bit\n- DATA Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- DATA Receive Data n\nNO_ACK - 9th bit\nStop - End of Reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 173/197\nTable 290. Sequential Read system memory when access is not granted (I2C password I2C_PWD)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\n90h - Send Address MSB (1 Byte)\n- ACK 9th bit\nADDRESS_LSB - Send Address LSB (1 Byte)\n- ACK 9th bit\nStart  AFh - Device select for reading\n- ACK 9th bit\n- DATA Receive Data 0\n- FFhST25DV release SDA\nReading access is not granted\nACK - 9th bit\n- ... ...\n... - ...\n- FFhST25DV release SDA\nReading access is not granted\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 174/197\nB.6.3 I2C sequential read in dynamic registers\nTable 291. Sequential read in dynamic register\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send Address MSB (1 Byte)\n- ACK 9th bit\nDynamic register ADDRESS_LSB -Send Address LSB (1 Byte)\nFynamic register are located form address\n2000h to 2007\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- DATA Receive Data 0\nACK - 9th bit\n- DATA Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- Data Receive Data n\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 175/197\nTable 292. Sequential read in Dynamic register and mailbox continuously if fast transfer mode is activated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h - Send Address MSB (1 Byte)\n- ACK 9th bit\nDynamic Register\nADDRESS_LSB-Send Address LSB (1 Byte)\nDynamic register are located from address\n2000h to 2007h\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- DATA 0 Receive Data 0\nACK - 9th bit\n- DATA 1 Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- DATA nReceive Data n (n ≤ 8)\nLast Dynamic register address 2007h\nACK - 9th bit\n- DATA n + 1 Mailbox byte 0\nACK - 9th bit\n- DATA n + 2 Mailbox byte 1\nACK - 9th bit\n- ... ...\n... - ...\n- Data n + i Mailbox byte i (i < 256)\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 176/197\nB.6.4 I2C sequential read in mailbox\nTable 293. Sequential in mailbox if fast transfer mode is activated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h or 21h -Send Address MSB (1 Byte)\n2007h < @ 2108h\n- ACK 9th bit\nADDRESS_LSB -Send Address LSB (1 Byte)\n2007h < @ 2108h\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- DATA 0 Receive Data 0\nACK - 9th bit\n- DATA 1 Receive Data 1\nACK - 9th bit\n- ... ...\n... - ...\n- Data n Receive Data n\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 177/197\nTable 294. Sequential read in mailbox if fast transfer mode is not activated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  A6h - Device select for writing\n- ACK 9th bit\n20h or 21h -Send Address MSB (1 Byte)\n2007h < @ 2108h\n- ACK 9th bit\nADDRESS_LSB -Send Address LSB (1 Byte)\n2007h < @ 2108h\n- ACK 9th bit\nStart  A7h - Device select for reading\n- ACK 9th bit\n- FFh release SDA\nACK - 9th bit\n- FFh release SDA\nACK - 9th bit\n- ... ...\n... - ...\n- FFh release SDA\nNO_ACK - 9th bit\nStop - End of reading\nST25DV04K ST25DV16K ST25DV64K\nI²C sequential read\nDS10925  - Rev 11 page 178/197\nB.7 I²C password relative sequences\nB.7.1 I2C write password\nTable 295. Write Password when I2C security session is already open and fast transfer mode is not\nactivated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\n09h - Send I2C_PWD MSB address\n- ACK 9th bit\n00h - Send I2C_PWD LSB address\n- ACK 9th bit\nI2C_PWD_BYTE_7 - Send I2C_PWD MSB\n- ACK 9th bit\nI2C_PWD_BYTE_6 DATA 0 Send Data\n- ACK 9th bit\n... - ...\n- ... ...\nI2C_PWD_BYTE_0 - Send I2C_PWD LSB\n- ACK 9th bit\n07h - Write password command\n- ACK 9th bit\nI2C_PWD_BYTE_7 - Send I2C_PWD MSB\n- ACK 9th bit\nI2C_PWD_BYTE_6 DATA 0 Send Data\n- ACK 9th bit\n... - ...\n- ... ...\nI2C_PWD_BYTE_0 - Send I2C_PWD LSB\n- ACK 9th bit\nStop - Start of I2C password programming\nST25DV04K ST25DV16K ST25DV64K\nI²C password relative sequences\nDS10925  - Rev 11 page 179/197\nTable 296. Write Password when I2C security session is not open or fast transfer mode activated\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\n09h - Send I2C_PWD MSB address\n- ACK 9th bit\n00h - Send I2C_PWD LSB address\n- NoACK 9th bit\nStop -No PWD Programming\nDevice return in Standby\nST25DV04K ST25DV16K ST25DV64K\nI²C password relative sequences\nDS10925  - Rev 11 page 180/197\nB.7.2 I2C present password\nTable 297. Present Password (whatever status of I2C security session or fast transfer mode)\nRequest/Response Frame\nComment\nMaster drives SDA Slave drives SDA\nStart  AEh - Device select for writing\n- ACK 9th bit\n09h - Send I2C_PWD MSB address\n- ACK 9th bit\n00h - Send I2C_PWD LSB address\n- ACK 9th bit\nI2C_PWD_BYTE_7 - Send I2C_PWD MSB\n- ACK 9th bit\nI2C_PWD_BYTE_6 DATA 0 Send Data\n- ACK 9th bit\n... - ...\n- ... ...\nI2C_PWD_BYTE_0 - Send I2C_PWD LSB\n- ACK 9th bit\n09h - Present password command\n- ACK 9th bit\nI2C_PWD_BYTE_7 - Send I2C_PWD MSB\n- ACK 9th bit\nI2C_PWD_BYTE_6 - Send Data\n- ACK 9th bit\n... - ...\n- ... ...\nI2C_PWD_BYTE_0 - Send I2C_PWD LSB\n- ACK 9th bit\nStop -ST25DV with active I2C_PWD.\nResult is immediate.\nST25DV04K ST25DV16K ST25DV64K\nI²C password relative sequences\nDS10925  - Rev 11 page 181/197\nRevision history\nTable 298. Document revision history\nDate Revision Changes\n23-Feb-2017 1 Initial release.\n20-Sep-2017 2Updated:\n• Features\n• Section 4  Memory management\n• Section 5  ST25DVxxx specific features\n• Section 5.6.4  System memory protection\n• Section 6.4.2  I2C Sequential write\n• Section 6  I2C operation\n• Section 7  RF operation\n• Section 9.1  Maximum ratings\n• Table 158. Get System Info response format Error_flag is NOT set\n• Table 242. Absolute maximum ratings\n• Table 244. AC test measurement conditions\n• Table 246. I2C DC characteristics (up to 85 °C)\n• Table 248. I2C AC characteristics (up to 85 °C)\n• Table 250. GPO DC characteristics up to 85°C\n• Table 253. RF characteristics\n• Table 254. Operating conditions\n• Table 256. TSSOP8 – Mechanical data\n• Table 261. Ordering information scheme\n• Figure 30. I2C Present Password Sequence\n• Figure 31. I2C Write Password Sequence\n• Figure 80. TSSOP8 – Outline\nAdded Table 159. Memory size , Table 243. I2C operating conditions , Table 247. I2C DC characteristics (up\nto 125 °C) , Table 249. I2C AC characteristics (up to 125 °C) , and Table 251. GPO DC characteristics up to\n125°C .\n04-Oct-2017 3Updated Features  and Section 10  Package information .\nAdded NFC certified logo.\n19-Dec-2017 4Added:\n• Figure 4. 10-ball WLCSP package: connections with CMOS Interrupt output (GPO)\n• Section 10.5  WLCSP10 package information\n• Table 259. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale mechanical data\n• Figure 84. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale package outline\n• Figure 85. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale recommended\nfootprint\nUpdated Features , Section 1  Description , Section 2.5  Energy harvesting analog output (V_EH) ,\nSection 5.3.2  Energy harvesting feature description , Section 6.4.1  I2C Byte write , and Section 6.4.2  I2C\nSequential write .\nUpdated Figure 21. Arbitration between RF and I2C.\nUpdated Table 242. Absolute maximum ratings , Table 243. I2C operating conditions , and Table 261. Ordering\ninformation scheme .\nDeleted Device summary.\n14-Jun-2018 5Updated:\n• Table 21. MB_LEN_Dyn\n• Section 5.1.2  Fast transfer mode usage , Section 5.6.2  Passwords and security sessions ,\nSection 7.6.2  Command codes list , Section 7.6.35  Write Password , and Section 10.5  WLCSP10\npackage information\n• Figure 84. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale package\noutline  and Figure 85. WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale\nrecommended footprint\nAdded Table 260. WLCSP10 recommended PCB design rules .\nST25DV04K ST25DV16K ST25DV64K\nDS10925  - Rev 11 page 182/197\nDate Revision Changes\n01-Aug-2018 6Updated:\n• Section 2.2.2  Low power down (LPD)\n• Section 5.1.2  Fast transfer mode usage\n• Section 5.2.3  GPO registers\n• Figure 22. RF security sessions management\n• Section 7.6.7  Extended Read Single Block\n• Section 7.6.9  Extended Write Single Block\n• Section 7.6.10  Lock Block\n• Section 7.6.11  Extended Lock block\n• Section 7.6.13  Extended Read Multiple Blocks\n• Section 7.6.15  Extended Write Multiple Blocks\n• Section 7.6.25  Extended Get Multiple Block Security Status\n• Section 7.6.38  Fast Extended Read Single Block\n• Section 7.6.40  Fast Extended Read Multiple Block\n• Section 9.1  Maximum ratings\n08-Nov-2018 7Updated Table 205. Fast Read Message request format  and Table 206. Fast Read Message response format\nwhen Error_flag is NOT set .\n04-May-2020 8Updated:\n• Section 2.2.2  Low power down (LPD)\n• Section 5.4.2  RF management feature description\n• Section 5.6.2  Passwords and security sessions\n• Table 79. MEM_SIZE\n• Table 161. Extended Get System Info request format\n• Table 231. Fast Write Message response format when Error_flag is set\n19-Feb-2021 9Updated:\n• Section 4.2.1  User memory areas\n• Section 5.2.2  GPO and power supply\n• Section 5.2.3  GPO registers\n• Section 5.4.2  RF management feature description\n• Section 6.4  I2C write operations\n• Section 6.6.1  I2C present password command description\n• Table 253. RF characteristics\n11-Jan-2023 10Updated Section 1  Description , Section 1.2  ST25DVxxx packaging , Section 3.2  Contactless interface , and\nSection 7.1.1  Access to an ISO/IEC 15693 device .\nUpdated Table 246. I2C DC characteristics (up to 85 °C) , Table 247. I2C DC characteristics (up to 125\n°C), Table 248. I2C AC characteristics (up to 85 °C) ,Table 249. I2C AC characteristics (up to 125 °C) ,\nTable 253. RF characteristics , and their footnotes.\nUpdated Table 255. SO8N – Mechanical data .\nUpdated Figure 5. Power-up sequence (no RF field, LPD pin tied to V SS or package without LPD pin) ,\nFigure 6. RF power-up sequence (no DC supply) , and Figure 75. I2C AC waveforms .\nMinor text edits across the whole document.\n24-Jan-2023 11Updated Table 161. Extended Get System Info request format .\nMinor text edits across the whole document.\nST25DV04K ST25DV16K ST25DV64K\nDS10925  - Rev 11 page 183/197\nContents\n1 Description ........................................................................ 3\n1.1 ST25DVxxx block diagram ....................................................... 3\n1.2 ST25DVxxx packaging .......................................................... 4\n2 Signal descriptions ................................................................ 6\n2.1 Serial link (SCL, SDA) .......................................................... 6\n2.1.1 Serial clock (SCL) ........................................................ 6\n2.1.2 Serial data (SDA) ........................................................ 6\n2.2 Power control (V CC, LPD, V SS)................................................... 6\n2.2.1 Supply voltage (V CC)...................................................... 6\n2.2.2 Low power down (LPD) .................................................... 6\n2.2.3 Ground (V SS)........................................................... 6\n2.3 RF link (AC0 AC1) .............................................................. 7\n2.3.1 Antenna coil (AC0, AC1) ................................................... 7\n2.4 Process control (V DCG, GPO) .................................................... 7\n2.4.1 Driver supply voltage (V DCG)................................................ 7\n2.4.2 General purpose output (GPO) .............................................. 7\n2.5 Energy harvesting analog output (V_EH) ........................................... 7\n3 Power management ................................................................ 8\n3.1 Wired interface ................................................................ 8\n3.2 Contactless interface ........................................................... 9\n4 Memory management ............................................................. 10\n4.1 Memory organization overview .................................................. 10\n4.2 User memory ................................................................. 11\n4.2.1 User memory areas ...................................................... 13\n4.3 System configuration area ...................................................... 17\n4.4 Dynamic configuration ......................................................... 19\n4.5 Fast transfer mode mailbox ..................................................... 20\n5 ST25DVxxx specific features ...................................................... 21\n5.1 Fast transfer mode (FTM) ...................................................... 22\n5.1.1 Fast transfer mode registers ............................................... 22\n5.1.2 Fast transfer mode usage ................................................. 23\n5.2 GPO ........................................................................ 26\n5.2.1 Interrupt capabilities on RF events .......................................... 26\n5.2.2 GPO and power supply ................................................... 34\nST25DV04K ST25DV16K ST25DV64K\nContents\nDS10925  - Rev 11 page 184/197\n5.2.3 GPO registers .......................................................... 35\n5.2.4 Configuring GPO ........................................................ 38\n5.3 Energy harvesting (EH) ........................................................ 39\n5.3.1 Energy harvesting registers ................................................ 39\n5.3.2 Energy harvesting feature description ........................................ 39\n5.3.3 EH delivery state diagram ................................................. 41\n5.3.4 EH delivery sequence .................................................... 42\n5.4 RF management feature ....................................................... 43\n5.4.1 RF management registers ................................................. 43\n5.4.2 RF management feature description ......................................... 44\n5.5 Interface arbitration ............................................................ 45\n5.6 Data Protection ............................................................... 46\n5.6.1 Data protection registers .................................................. 46\n5.6.2 Passwords and security sessions ........................................... 53\n5.6.3 User memory protection .................................................. 56\n5.6.4 System memory protection ................................................ 57\n5.7 Device parameter registers ..................................................... 58\n6 I2C operation ..................................................................... 62\n6.1 I2C protocol .................................................................. 62\n6.1.1 Start condition .......................................................... 62\n6.1.2 Stop condition .......................................................... 63\n6.1.3 Acknowledge bit (ACK) ................................................... 63\n6.1.4 Data input ............................................................. 63\n6.2 I2C timeout ................................................................... 63\n6.2.1 I2C timeout on Start condition .............................................. 63\n6.2.2 I2C timeout on clock period ................................................ 63\n6.3 Device addressing ............................................................. 64\n6.4 I2C write operations ........................................................... 64\n6.4.1 I2C Byte write .......................................................... 65\n6.4.2 I2C Sequential write ..................................................... 65\n6.4.3 Minimizing system delays by polling on ACK .................................. 67\n6.5 I2C read operations ........................................................... 68\n6.5.1 Random Address Read ................................................... 68\n6.5.2 Current Address Read ................................................... 68\n6.5.3 Sequential Read access .................................................. 69\n6.5.4 Acknowledge in Read mode ............................................... 70\n6.6 I2C password management ..................................................... 70\nST25DV04K ST25DV16K ST25DV64K\nContents\nDS10925  - Rev 11 page 185/197\n6.6.1 I2C present password command description ................................... 70\n6.6.2 I2C write password command description ..................................... 70\n7 RF operation ..................................................................... 72\n7.1 RF communication ............................................................ 72\n7.1.1 Access to an ISO/IEC 15693 device ......................................... 72\n7.2 RF communication and energy harvesting ......................................... 72\n7.3 Fast transfer mode mailbox access in RF ......................................... 72\n7.4 RF protocol description ......................................................... 73\n7.4.1 Protocol description ...................................................... 73\n7.4.2 ST25DVxxx states referring to RF protocol .................................... 73\n7.4.3 Modes ................................................................ 74\n7.4.4 Request format ......................................................... 75\n7.4.5 Request flags .......................................................... 75\n7.4.6 Response format ........................................................ 77\n7.4.7 Response flags ......................................................... 77\n7.4.8 Response and error code ................................................. 78\n7.5 Timing definition .............................................................. 78\n7.6 RF commands ................................................................ 80\n7.6.1 RF command code list ................................................... 80\n7.6.2 Command codes list ..................................................... 81\n7.6.3 General command rules .................................................. 81\n7.6.4 Inventory .............................................................. 82\n7.6.5 Stay Quiet ............................................................. 82\n7.6.6 Read Single Block ....................................................... 83\n7.6.7 Extended Read Single Block ............................................... 84\n7.6.8 Write Single Block ....................................................... 85\n7.6.9 Extended Write Single Block ............................................... 87\n7.6.10 Lock Block ............................................................ 88\n7.6.11 Extended Lock block ..................................................... 89\n7.6.12 Read Multiple Blocks ..................................................... 90\n7.6.13 Extended Read Multiple Blocks ............................................. 92\n7.6.14 Write Multiple Blocks ..................................................... 93\n7.6.15 Extended Write Multiple Blocks ............................................. 94\n7.6.16 Select ................................................................ 96\n7.6.17 Reset to Ready ......................................................... 98\n7.6.18 Write AFI .............................................................. 99\n7.6.19 Lock AFI ............................................................. 100\n7.6.20 Write DSFID .......................................................... 101\nST25DV04K ST25DV16K ST25DV64K\nContents\nDS10925  - Rev 11 page 186/197\n7.6.21 Lock DSFID .......................................................... 102\n7.6.22 Get System Info ....................................................... 104\n7.6.23 Extended Get System Info ............................................... 105\n7.6.24 Get Multiple Block Security Status ......................................... 109\n7.6.25 Extended Get Multiple Block Security Status ................................. 110\n7.6.26 Read Configuration ..................................................... 112\n7.6.27 Write Configuration ..................................................... 113\n7.6.28 Read Dynamic Configuration ............................................. 114\n7.6.29 Write Dynamic Configuration .............................................. 115\n7.6.30 Manage GPO ......................................................... 116\n7.6.31 Write Message ........................................................ 117\n7.6.32 Read Message Length .................................................. 118\n7.6.33 Read Message ........................................................ 119\n7.6.34 Fast Read Message .................................................... 120\n7.6.35 Write Password ........................................................ 121\n7.6.36 Present Password ...................................................... 123\n7.6.37 Fast Read Single Block .................................................. 124\n7.6.38 Fast Extended Read Single Block .......................................... 125\n7.6.39 Fast Read Multiple Blocks ................................................ 126\n7.6.40 Fast Extended Read Multiple Block ......................................... 129\n7.6.41 Fast Write Message .................................................... 130\n7.6.42 Fast Read Message Length .............................................. 131\n7.6.43 Fast Read Dynamic configuration .......................................... 132\n7.6.44 Fast Write Dynamic Configuration .......................................... 133\n8 Unique identifier (UID) .......................................................... 135\n9 Device parameters .............................................................. 136\n9.1 Maximum ratings ............................................................. 136\n9.2 I2C parameters .............................................................. 137\n9.3 GPO characteristics .......................................................... 143\n9.4 RF electrical parameters ...................................................... 144\n10 Package information ............................................................ 146\n10.1 SO8N package information .................................................... 146\n10.2 TSSOP8 package information .................................................. 147\n10.3 UFDFN8 package information .................................................. 150\n10.4 UFDFPN12 package information ............................................... 151\n10.5 WLCSP10 package information ................................................ 153\n11 Ordering information ........................................................... 155\nST25DV04K ST25DV16K ST25DV64K\nContents\nDS10925  - Rev 11 page 187/197\nAppendix A Bit representation and coding for fast commands ...................... 156\nA.1 Bit coding using one subcarrier ................................................. 156\nA.1.1 High data rate ......................................................... 156\nA.1.2 Low data rate ......................................................... 156\nA.2 ST25DVxxx to VCD frames .................................................... 157\nA.3 SOF when using one subcarrier ................................................ 157\nA.3.1 High data rate ......................................................... 157\nA.3.2 Low data rate ......................................................... 157\nA.4 EOF when using one subcarrier ................................................ 158\nA.4.1 High data rate ......................................................... 158\nA.4.2 Low data rate ......................................................... 158\nAppendix B I²C sequences ......................................................... 159\nB.1 Device select codes .......................................................... 159\nB.2 I²C Byte writing and polling .................................................... 159\nB.2.1 I2C byte write in user memory ............................................. 159\nB.2.2 I²C byte writing in dynamic registers and polling ............................... 161\nB.2.3 I2C byte write in mailbox and polling ........................................ 162\nB.2.4 I2C byte write and polling in system memory .................................. 163\nB.3 I2C sequential writing and polling ............................................... 164\nB.3.1 I2C sequential write in user memory and polling ............................... 164\nB.3.2 I2C sequential write in mailbox and polling ................................... 166\nB.4 I²C Read current address ...................................................... 167\nB.4.1 I2C current address read in User memory .................................... 167\nB.5 I²C random address read ...................................................... 168\nB.5.1 I2C random address read in user memory .................................... 168\nB.5.2 I2C Random address read in system memory ................................. 169\nB.5.3 I2C Random address read in dynamic registers ............................... 169\nB.6 I²C sequential read ........................................................... 170\nB.6.1 I2C sequential read in user memory ........................................ 170\nB.6.2 I2C sequential read in system memory ...................................... 173\nB.6.3 I2C sequential read in dynamic registers ..................................... 175\nB.6.4 I2C sequential read in mailbox ............................................ 177\nB.7 I²C password relative sequences ............................................... 179\nB.7.1 I2C write password ..................................................... 179\nB.7.2 I2C present password ................................................... 181\nRevision history ..................................................................... 182\nST25DV04K ST25DV16K ST25DV64K\nContents\nDS10925  - Rev 11 page 188/197\nList of tables\nTable 1.  Signal names ...................................................................... 4\nTable 2.  User memory as seen by RF and by I2C................................................... 12\nTable 3.  Maximum user memory block and byte addresses and ENDA i value ................................ 13\nTable 4.  Areas and limit calculation from ENDA i registers ............................................. 14\nTable 5.  ENDA1 access .................................................................... 15\nTable 6.  ENDA1 .......................................................................... 16\nTable 7.  ENDA2 access .................................................................... 16\nTable 8.  ENDA2 .......................................................................... 16\nTable 9.  ENDA3 access .................................................................... 16\nTable 10.  ENDA3 .......................................................................... 16\nTable 11.  System configuration memory map ...................................................... 17\nTable 12.  Dynamic registers memory map ......................................................... 19\nTable 13.  Fast transfer mode mailbox memory map .................................................. 20\nTable 14.  MB_MODE access .................................................................. 22\nTable 15.  MB_MODE ....................................................................... 22\nTable 16.  MB_WDG access .................................................................. 22\nTable 17.  MB_WDG ........................................................................ 22\nTable 18.  MB_CTRL_Dyn access ............................................................... 22\nTable 19.  MB_CTRL_Dyn .................................................................... 23\nTable 20.  MB_LEN_Dyn access ................................................................ 23\nTable 21.  MB_LEN_Dyn ..................................................................... 23\nTable 22.  FIELD_CHANGE when RF is disabled or in sleep mode ........................................ 30\nTable 23.  GPO interrupt capabilities in function of RF field .............................................. 34\nTable 24.  GPO interrupt capabilities in function of V CC power supply ...................................... 34\nTable 25.  GPO access ...................................................................... 35\nTable 26.  GPO ........................................................................... 35\nTable 27.  IT_TIME access .................................................................... 36\nTable 28.  IT_TIME ......................................................................... 36\nTable 29.  GPO_CTRL_Dyn access ............................................................. 36\nTable 30.  GPO_CTRL_Dyn ................................................................... 36\nTable 31.  IT_STS_Dyn access ................................................................. 37\nTable 32.  IT_STS_Dyn ...................................................................... 37\nTable 33.  Enabling or disabling GPO interruptions ................................................... 38\nTable 34.  EH_MODE access .................................................................. 39\nTable 35.  EH_MODE ....................................................................... 39\nTable 36.  EH_CTRL_Dyn access ............................................................... 39\nTable 37.  EH_CTRL_Dyn .................................................................... 39\nTable 38.  Energy harvesting at power-up ......................................................... 40\nTable 39.  RF_MNGT access .................................................................. 43\nTable 40.  RF_MNGT ....................................................................... 43\nTable 41.  RF_MNGT_Dyn access .............................................................. 43\nTable 42.  RF_MNGT_Dyn .................................................................... 43\nTable 43.  RFA1SS access .................................................................... 46\nTable 44.  RFA1SS ......................................................................... 46\nTable 45.  RFA2SS access .................................................................... 46\nTable 46.  RFA2SS ......................................................................... 47\nTable 47.  RFA3SS access .................................................................... 47\nTable 48.  RFA3SS ......................................................................... 47\nTable 49.  RFA4SS access .................................................................... 47\nTable 50.  RFA4SS ......................................................................... 48\nTable 51.  I2CSS access ..................................................................... 48\nTable 52.  I2CSS .......................................................................... 49\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 189/197\nTable 53.  LOCK_CCFILE access ............................................................... 50\nTable 54.  LOCK_CCFILE .................................................................... 50\nTable 55.  LOCK_CFG access ................................................................. 50\nTable 56.  LOCK_CFG ...................................................................... 50\nTable 57.  I2C_PWD access ................................................................... 51\nTable 58.  I2C_PWD ........................................................................ 51\nTable 59.  RF_PWD_0 access ................................................................. 51\nTable 60.  RF_PWD_0 ....................................................................... 51\nTable 61.  RF_PWD_1 access ................................................................. 52\nTable 62.  RF_PWD_1 ....................................................................... 52\nTable 63.  RF_PWD_2 access ................................................................. 52\nTable 64.  RF_PWD_2 ....................................................................... 52\nTable 65.  RF_PWD_3 access ................................................................. 52\nTable 66.  RF_PWD_3 ....................................................................... 53\nTable 67.  I2C_SSO_Dyn access ............................................................... 53\nTable 68.  I2C_SSO_Dyn ..................................................................... 53\nTable 69.  Security session type ................................................................ 54\nTable 70.  LOCK_DSFID access ................................................................ 58\nTable 71.  LOCK_DSFID ..................................................................... 58\nTable 72.  LOCK_AFI access .................................................................. 58\nTable 73.  LOCK_AFI ....................................................................... 58\nTable 74.  DSFID access ..................................................................... 59\nTable 75.  DSFID .......................................................................... 59\nTable 76.  AFI access ....................................................................... 59\nTable 77.  AFI............................................................................. 59\nTable 78.  MEM_SIZE access .................................................................. 59\nTable 79.  MEM_SIZE ....................................................................... 60\nTable 80.  BLK_SIZE access .................................................................. 60\nTable 81.  BLK_SIZE ........................................................................ 60\nTable 82.  IC_REF access .................................................................... 60\nTable 83.  IC_REF ......................................................................... 60\nTable 84.  UID access ....................................................................... 61\nTable 85.  UID ............................................................................ 61\nTable 86.  IC_REV access .................................................................... 61\nTable 87.  IC_REV ......................................................................... 61\nTable 88.  Device select code .................................................................. 64\nTable 89.  Operating modes ................................................................... 64\nTable 90.  Address most significant byte .......................................................... 64\nTable 91.  Address least significant byte .......................................................... 64\nTable 92.  ST25DVxxx response depending on Request_flags ........................................... 74\nTable 93.  General request format ............................................................... 75\nTable 94.  Definition of request flags 1 to 4 ......................................................... 76\nTable 95.  Request flags 5 to 8 when inventory_flag, Bit 3 = 0 ............................................ 76\nTable 96.  Request flags 5 to 8 when inventory_flag, Bit 3 = 1 ............................................ 76\nTable 97.  General response format ............................................................. 77\nTable 98.  Definitions of response flags 1 to 8 ....................................................... 77\nTable 99.  Response error code definition ......................................................... 78\nTable 100.  Timing values ..................................................................... 79\nTable 101.  Command codes ................................................................... 81\nTable 102.  Inventory request format .............................................................. 82\nTable 103.  Inventory response format ............................................................. 82\nTable 104.  Stay Quiet request format ............................................................. 83\nTable 105.  Read Single Block request format ....................................................... 83\nTable 106.  Read Single Block response format when Error_flag is NOT set ................................... 83\nTable 107.  Block security status ................................................................. 83\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 190/197\nTable 108.  Read Single Block response format when Error_flag is set ...................................... 84\nTable 109.  Extended Read Single Block request format ................................................ 84\nTable 110.  Extended Read Single Block response format when Error_flag is NOT set ........................... 84\nTable 111.  Block security status ................................................................. 85\nTable 112.  Extended Read Single Block response format when Error_flag is set ............................... 85\nTable 113.  Write Single Block request format ....................................................... 85\nTable 114.  Write Single Block response format when Error_flag is NOT set ................................... 86\nTable 115.  Write Single Block response format when Error_flag is set ...................................... 86\nTable 116.  Extended Write Single request format ..................................................... 87\nTable 117.  Extended Write Single response format when Error_flag is NOT set ................................ 87\nTable 118.  Extended Write Single response format when Error_flag is set .................................... 87\nTable 119.  Lock block request format ............................................................. 88\nTable 120.  Lock block response format when Error_flag is NOT set ........................................ 88\nTable 121.  Lock block response format when Error_flag is set ............................................ 88\nTable 122.  Extended Lock block request format ...................................................... 89\nTable 123.  Extended Lock block response format when Error_flag is NOT set ................................. 89\nTable 124.  Extended Lock block response format when Error_flag is set ..................................... 90\nTable 125.  Read Multiple Block request format ...................................................... 90\nTable 126.  Read Multiple Block response format when Error_flag is NOT set ................................. 91\nTable 127.  Block security status ................................................................. 91\nTable 128.  Read Multiple Block response format when Error_flag is set ..................................... 91\nTable 129.  Extended Read Multiple Block request format ............................................... 92\nTable 130.  Extended Read Multiple Block response format when Error_flag is NOT set .......................... 92\nTable 131.  Block security status ................................................................. 92\nTable 132.  Extended Read Multiple Block response format when Error_flag is set .............................. 92\nTable 133.  Write Multiple Block request format ...................................................... 93\nTable 134.  Write Multiple Block response format when Error_flag is NOT set .................................. 94\nTable 135.  Write Multiple Block response format when Error_flag is set ..................................... 94\nTable 136.  Extended Write Multiple Block request format ............................................... 95\nTable 137.  Extended Write Multiple Block response format when Error_flag is NOT set .......................... 95\nTable 138.  Extended Write Multiple Block response format when Error_flag is set .............................. 95\nTable 139.  Select request format ................................................................ 96\nTable 140.  Select Block response format when Error_flag is NOT set ....................................... 96\nTable 141.  Select response format when Error_flag is set ............................................... 96\nTable 142.  Reset to Ready request format ......................................................... 98\nTable 143.  Reset to Ready response format when Error_flag is NOT set ..................................... 98\nTable 144.  Reset to ready response format when Error_flag is set ......................................... 98\nTable 145.  Write AFI request format .............................................................. 99\nTable 146.  Write AFI response format when Error_flag is NOT set ......................................... 99\nTable 147.  Write AFI response format when Error_flag is set ............................................. 99\nTable 148.  Lock AFI request format ............................................................. 100\nTable 149.  Lock AFI response format when Error_flag is NOT set ........................................ 100\nTable 150.  Lock AFI response format when Error_flag is set ............................................ 100\nTable 151.  Write DSFID request format .......................................................... 101\nTable 152.  Write DSFID response format when Error_flag is NOT set ...................................... 101\nTable 153.  Write DSFID response format when Error_flag is set ......................................... 102\nTable 154.  Lock DSFID request format ........................................................... 102\nTable 155.  Lock DSFID response format when Error_flag is NOT set ...................................... 102\nTable 156.  Lock DSFID response format when Error_flag is set .......................................... 103\nTable 157.  Get System Info request format ........................................................ 104\nTable 158.  Get System Info response format Error_flag is NOT set ....................................... 104\nTable 159.  Memory size ..................................................................... 104\nTable 160.  Get System Info response format when Error_flag is set ....................................... 104\nTable 161.  Extended Get System Info request format ................................................. 105\nTable 162.  Parameter request list .............................................................. 105\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 191/197\nTable 163.  Extended Get System Info response format when Error_flag is NOT set ............................ 106\nTable 164.  Response Information Flag ........................................................... 106\nTable 165.  Response other field: ST25DVxxx VICC memory size ......................................... 106\nTable 166.  Response other field: ST25DVxxx IC Ref ................................................. 107\nTable 167.  Response other field: ST25DVxxx VICC command list ........................................ 107\nTable 168.  Response other field: ST25DVxxx VICC command list Byte 1 ................................... 107\nTable 169.  Response other field: ST25DVxxx VICC command list Byte 2 ................................... 107\nTable 170.  Response other field: ST25DVxxx VICC command list Byte 3 ................................... 108\nTable 171.  Response other field: ST25DVxxx VICC command list Byte 4 ................................... 108\nTable 172.  Extended Get System Info response format when Error_flag is set ................................ 108\nTable 173.  Get Multiple Block Security Status request format ........................................... 109\nTable 174.  Get Multiple Block Security Status response format when Error_flag is NOT set ....................... 109\nTable 175.  Block security status ................................................................ 109\nTable 176.  Get Multiple Block Security Status response format when Error_flag is set .......................... 109\nTable 177.  Extended Get Multiple Block Security Status request format ..................................... 110\nTable 178.  Extended Get Multiple Block Security Status response format when Error_flags NOT set ................. 110\nTable 179.  Block security status ................................................................. 110\nTable 180.  Extended Get Multiple Block Security Status response format when Error_flag is set .................... 111\nTable 181.  Read Configuration request format ....................................................... 112\nTable 182.  Read Configuration response format when Error_flag is NOT set .................................. 112\nTable 183.  Read Configuration response format when Error_flag is set ...................................... 112\nTable 184.  Write Configuration request format ....................................................... 113\nTable 185.  Write Configuration response format when Error_flag is NOT set .................................. 113\nTable 186.  Write configuration response format when Error_flag is set ...................................... 113\nTable 187.  Read Dynamic Configuration request format ................................................ 114\nTable 188.  Read Dynamic Configuration response format when Error_flag is NOT set ........................... 114\nTable 189.  Read Dynamic Configuration response format when Error_flag is set ............................... 114\nTable 190.  Write Dynamic Configuration request format ................................................ 115\nTable 191.  Write Dynamic Configuration response format when Error_flag is NOT set ........................... 115\nTable 192.  Write Dynamic Configuration response format when Error_flag is set ............................... 115\nTable 193.  ManageGPO request format ........................................................... 116\nTable 194.  GPOVAL ......................................................................... 116\nTable 195.  ManageGPO response format when Error_flag is NOT set ...................................... 117\nTable 196.  ManageGPO response format when Error_flag is set .......................................... 117\nTable 197.  Write Message request format .......................................................... 117\nTable 198.  Write Message response format when Error_flag is NOT set ..................................... 118\nTable 199.  Write Message response format when Error_flag is set ......................................... 118\nTable 200.  Read Message Length request format .................................................... 118\nTable 201.  Read Message Length response format when Error_flag is NOT set ................................ 119\nTable 202.  Read Message Length response format when Error_flag is set ................................... 119\nTable 203.  Read Message request format .......................................................... 119\nTable 204.  Read Message response format when Error_flag is NOT set .................................... 120\nTable 205.  Fast Read Message request format ..................................................... 120\nTable 206.  Fast Read Message response format when Error_flag is NOT set ................................ 121\nTable 207.  Write Password request format ........................................................ 121\nTable 208.  Write Password response format when Error_flag is NOT set ................................... 122\nTable 209.  Write Password response format when Error_flag is set ....................................... 122\nTable 210.  Present Password request format ...................................................... 123\nTable 211.  Present Password response format when Error_flag is NOT set .................................. 123\nTable 212.  Present Password response format when Error_flag is set ..................................... 123\nTable 213.  Fast Read Single Block request format ................................................... 124\nTable 214.  Fast Read Single Block response format when Error_flag is NOT set .............................. 124\nTable 215.  Block security status ................................................................ 124\nTable 216.  Fast Read Single Block response format when Error_flag is set .................................. 125\nTable 217.  Fast Extended Read Single Block request format ............................................ 125\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 192/197\nTable 218.  Fast Extended Read Single Block response format when Error_flag is NOT set ....................... 125\nTable 219.  Block security status ................................................................ 126\nTable 220.  Fast Extended Read Single Block response format when Error_flag is set ........................... 126\nTable 221.  Fast Read Multiple Block request format .................................................. 127\nTable 222.  Fast Read Multiple Block response format when Error_flag is NOT set ............................. 127\nTable 223.  Block security status if Option_flag is set .................................................. 127\nTable 224.  Fast Read Multiple Block response format when Error_flag is set ................................. 127\nTable 225.  Fast Extended Read Multiple Block request format ........................................... 129\nTable 226.  Fast Extended Read Multiple Block response format when Error_flag is NOT set ...................... 129\nTable 227.  Block security status if Option_flag is set .................................................. 129\nTable 228.  Fast Read Multiple Block response format when Error_flag is set ................................. 129\nTable 229.  Fast Write Message request format ..................................................... 130\nTable 230.  Fast Write Message response format when Error_flag is NOT set ................................ 130\nTable 231.  Fast Write Message response format when Error_flag is set .................................... 131\nTable 232.  Fast Read Message Length request format ................................................ 131\nTable 233.  Fast Read Message Length response format when Error_flag is NOT set ........................... 132\nTable 234.  Fast Read Message Length response format when Error_flag is set ............................... 132\nTable 235.  Fast Read Dynamic configuration request format ............................................ 132\nTable 236.  Fast Read Dynamic configuration response format when Error_flag is NOT set ....................... 133\nTable 237.  Fast Read Dynamic configuration response format when Error_flag is set ........................... 133\nTable 238.  Fast Write Dynamic Configuration request format ............................................ 133\nTable 239.  Fast Write Dynamic Configuration response format when Error_flag is NOT set ....................... 134\nTable 240.  Fast Write Dynamic Configuration response format when Error_flag is set ........................... 134\nTable 241.  UID format ...................................................................... 135\nTable 242.  Absolute maximum ratings ........................................................... 136\nTable 243.  I2C operating conditions ............................................................. 137\nTable 244.  AC test measurement conditions ....................................................... 137\nTable 245.  Input parameters .................................................................. 137\nTable 246.  I2C DC characteristics (up to 85 °C) ..................................................... 137\nTable 247.  I2C DC characteristics (up to 125 °C) .................................................... 139\nTable 248.  I2C AC characteristics (up to 85 °C) ..................................................... 140\nTable 249.  I2C AC characteristics (up to 125 °C) .................................................... 140\nTable 250.  GPO DC characteristics up to 85°C ..................................................... 143\nTable 251.  GPO DC characteristics up to 125°C .................................................... 143\nTable 252.  GPO AC characteristics ............................................................. 143\nTable 253.  RF characteristics ................................................................. 144\nTable 254.  Operating conditions ............................................................... 145\nTable 255.  SO8N – Mechanical data ............................................................ 147\nTable 256.  TSSOP8 – Mechanical data .......................................................... 148\nTable 257.  UFDFN8 - Mechanical data ........................................................... 151\nTable 258.  UFDFPN12 - Mechanical data ......................................................... 152\nTable 259.  WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale mechanical data ............... 153\nTable 260.  WLCSP10 recommended PCB design rules ............................................... 154\nTable 261.  Ordering information scheme .......................................................... 155\nTable 262.  Device select usage ................................................................ 159\nTable 263.  Byte Write in user memory when write operation allowed ...................................... 159\nTable 264.  Polling during programming after byte writing in user memory ................................... 160\nTable 265.  Byte Write in user memory when write operation is not allowed .................................. 160\nTable 266.  Byte Write in Dynamic Register (if not Read Only) ........................................... 161\nTable 267.  Polling during programming after byte write in Dynamic Register ................................. 161\nTable 268.  Byte Write in Dynamic Register if Read Only ............................................... 161\nTable 269.  Byte Write in mailbox when mailbox is free from RF message and fast transfer mode is activated .......... 162\nTable 270.  Byte Write in mailbox when mailbox is not free from RF message fast transfer mode is not activated ........ 162\nTable 271.  Byte Write in System memory if I2C security session is open and register is not RO .................... 163\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 193/197\nTable 272.  Polling during programing after byte write in System memory if I2C security session is open and register is not RO\n.............................................................................. 163\nTable 273.  Byte Write in System memory if I2C security session is closed or register is RO ....................... 164\nTable 274.  Sequential write User memory when write operation allowed and all bytes belong to same area ............ 164\nTable 275.  Polling during programing after sequential write in User memory when write operation allowed and all bytes belong\nto same area. .................................................................... 165\nTable 276.  Sequential write in User memory when write operation allowed and crossing over area border ............. 165\nTable 277.  Polling during programming after sequential write in User memory when write operation allowed and crossing over\narea border ...................................................................... 166\nTable 278.  Sequential write in mailbox when mailbox is free from RF message and fast transfer mode is activated ...... 166\nTable 279.  Polling during programing after sequential write in mailbox ..................................... 166\nTable 280.  Current byte Read in User memory if read operation allowed (depending on area protection and RF user security\nsession) ........................................................................ 167\nTable 281.  Current Read in User memory if read operation not allowed (depending on area protection and RF user security\nsession) ........................................................................ 167\nTable 282.  Random byte read in User memory if read operation allowed (depending on area protection and RF user security\nsession) ........................................................................ 168\nTable 283.  Random byte read in User memory if operation not allowed (depending on area protection and RF user security)168\nTable 284.  Byte Read System memory (Static register or I2C Password after a valid Present I2C Password) ........... 169\nTable 285.  Random byte read in Dynamic registers .................................................. 169\nTable 286.  Sequential Read User memory if read operation allowed (depending on area protection and RF user security\nsession) and all bytes belong to the same area ............................................. 170\nTable 287.  Sequential Read User memory if read operation allowed (depending on area protection and RF user security\nsession) but crossing area border ...................................................... 171\nTable 288.  Sequential Read User memory if read operation allowed (depending on area protection and RF user security\nsession) ........................................................................ 172\nTable 289.  Sequential in Read System memory (I2C security session open if reading I2C_PWD) ................... 173\nTable 290.  Sequential Read system memory when access is not granted (I2C password I2C_PWD) ................ 174\nTable 291.  Sequential read in dynamic register ..................................................... 175\nTable 292.  Sequential read in Dynamic register and mailbox continuously if fast transfer mode is activated ............ 176\nTable 293.  Sequential in mailbox if fast transfer mode is activated ........................................ 177\nTable 294.  Sequential read in mailbox if fast transfer mode is not activated .................................. 178\nTable 295.  Write Password when I2C security session is already open and fast transfer mode is not activated .......... 179\nTable 296.  Write Password when I2C security session is not open or fast transfer mode activated .................. 180\nTable 297.  Present Password (whatever status of I2C security session or fast transfer mode) ..................... 181\nTable 298.  Document revision history ............................................................ 182\nST25DV04K ST25DV16K ST25DV64K\nList of tables\nDS10925  - Rev 11 page 194/197\nList of figures\nFigure 1.  ST25DVxxx block diagram ............................................................ 3\nFigure 2.  8-pin packages: connections with open drain Interrupt output .................................... 4\nFigure 3.  12-pin package: connections with CMOS Interrupt output (GPO) .................................. 5\nFigure 4.  10-ball WLCSP package: connections with CMOS Interrupt output (GPO) ........................... 5\nFigure 5.  Power-up sequence (no RF field, LPD pin tied to V SS or package without LPD pin) ..................... 8\nFigure 6.  RF power-up sequence (no DC supply) ................................................... 9\nFigure 7.  Memory organization ............................................................... 11\nFigure 8.  ST25DVxxx user memory areas ....................................................... 13\nFigure 9.  RF to I2C fast transfer mode operation ................................................... 24\nFigure 10.  I2C to RF fast transfer mode operation ................................................... 24\nFigure 11.  Fast transfer mode mailbox access management. ........................................... 26\nFigure 12.  RF_USER sequence ............................................................... 27\nFigure 13.  RF_ACTIVITY sequence ............................................................ 28\nFigure 14.  RF_INTERRUPT sequence .......................................................... 29\nFigure 15.  FIELD_CHANGE sequence .......................................................... 30\nFigure 16.  RF_PUT_MSG sequence ............................................................ 31\nFigure 17.  RF_GET_MSG sequence ........................................................... 32\nFigure 18.  RF_WRITE sequence .............................................................. 33\nFigure 19.  EH delivery state diagram ........................................................... 41\nFigure 20.  ST25DVxxx Energy Harvesting Delivery Sequence .......................................... 42\nFigure 21.  Arbitration between RF and I2C....................................................... 45\nFigure 22.  RF security sessions management ..................................................... 55\nFigure 23.  I2C security sessions management ..................................................... 56\nFigure 24.  I2C bus protocol .................................................................. 62\nFigure 25.  I²C timeout on Start condition ......................................................... 63\nFigure 26.  Write mode sequences when write is not inhibited ........................................... 66\nFigure 27.  Write mode sequences when write is inhibited ............................................. 66\nFigure 28.  Write cycle polling flowchart using ACK .................................................. 67\nFigure 29.  Read mode sequences ............................................................. 69\nFigure 30.  I2C Present Password Sequence ...................................................... 70\nFigure 31.  I2C Write Password Sequence ........................................................ 71\nFigure 32.  ST25DVxxx protocol timing .......................................................... 73\nFigure 33.  ST25DVxxx state transition diagram .................................................... 74\nFigure 34.  Stay Quiet frame exchange between VCD and ST25DVxxx .................................... 83\nFigure 35.  Read Single Block frame exchange between VCD and ST25DVxxx ............................... 84\nFigure 36.  Extended Read Single Block frame exchange between VCD and ST25DVxxx ....................... 85\nFigure 37.  Write Single Block frame exchange between VCD and ST25DVxxx ............................... 86\nFigure 38.  Extended Write Single frame exchange between VCD and ST25DVxxx ............................ 88\nFigure 39.  Lock Block frame exchange between VCD and ST25DVxxx .................................... 89\nFigure 40.  Extended Lock block frame exchange between VCD and ST25DVxxx ............................. 90\nFigure 41.  Read Multiple Block frame exchange between VCD and ST25DVxxx ............................. 91\nFigure 42.  Extended Read Multiple Block frame exchange between VCD and ST25DVxxx ...................... 93\nFigure 43.  Write Multiple Block frame exchange between VCD and ST25DVxxx .............................. 94\nFigure 44.  Extended Write Multiple Block frame exchange between VCD and ST25DVxxx ...................... 96\nFigure 45.  Select frame exchange between VCD and ST25DVxxx ....................................... 97\nFigure 46.  Reset to Ready frame exchange between VCD and ST25DVxxx ................................. 98\nFigure 47.  Write AFI frame exchange between VCD and ST25DVxxx .................................... 100\nFigure 48.  Lock AFI frame exchange between VCD and ST25DVxxx .................................... 101\nFigure 49.  Write DSFID frame exchange between VCD and ST25DVxxx .................................. 102\nFigure 50.  Lock DSFID frame exchange between VCD and ST25DVxxx .................................. 103\nFigure 51.  Get System Info frame exchange between VCD and ST25DVxxx ............................... 105\nFigure 52.  Extended Get System Info frame exchange between VCD and ST25DVxxx ........................ 108\nST25DV04K ST25DV16K ST25DV64K\nList of figures\nDS10925  - Rev 11 page 195/197\nFigure 53.  Get Multiple Block Security Status frame exchange between VCD and ST25DVxxx .................... 110\nFigure 54.  Extended Get Multiple Block Security Status frame exchange ................................... 111\nFigure 55.  Read Configuration frame exchange between VCD and ST25DVxxx .............................. 112\nFigure 56.  Write Configuration exchange between VCD and ST25DVxxx .................................. 114\nFigure 57.  Read Dynamic Configuration frame exchange between VCD and ST25DVxxx ....................... 115\nFigure 58.  Write Dynamic Configuration frame exchange between VCD and ST25DVxxx ....................... 116\nFigure 59.  Manage GPO frame exchange between VCD and ST25DVxxx .................................. 117\nFigure 60.  Write Message frame exchange between VCD and ST25DVxxx ................................. 118\nFigure 61.  Read Message Length frame exchange between VCD and ST25DVxxx ............................ 119\nFigure 62.  Read Message frame exchange between VCD and ST25DVxxx ................................ 120\nFigure 63.  Fast Read Message frame exchange between VCD and ST25DVxxx ............................ 121\nFigure 64.  Write Password frame exchange between VCD and ST25DVxxx ............................... 122\nFigure 65.  Present Password frame exchange between VCD and ST25DVxxx .............................. 124\nFigure 66.  Fast Read Single Block frame exchange between VCD and ST25DVxxx .......................... 125\nFigure 67.  Fast Extended Read Single Block frame exchange between VCD and ST25DVxxx ................... 126\nFigure 68.  Fast Read Multiple Block frame exchange between VCD and ST25DVxxx ......................... 128\nFigure 69.  Fast Extended Read Multiple Block frame exchange between VCD and ST25DVxxx .................. 130\nFigure 70.  Fast Write Message frame exchange between VCD and ST25DVxxx ............................ 131\nFigure 71.  Fast Read Message Length frame exchange between VCD and ST25DVxxx ....................... 132\nFigure 72.  Fast Read Dynamic configuration frame exchange between VCD and ST25DVxxx ................... 133\nFigure 73.  Fast Write Dynamic Configuration frame exchange between VCD and ST25DVxxx ................... 134\nFigure 74.  AC test measurement I/O waveform ................................................... 137\nFigure 75.  I2C AC waveforms ............................................................... 142\nFigure 76.  I2C Fast mode (f C = 1 MHz): maximum R bus value versus bus parasitic capacitance (C bus)............. 142\nFigure 77.  ASK modulated signal ............................................................. 145\nFigure 78.  SO8N – Outline ................................................................. 146\nFigure 79.  SO8N - Footprint example .......................................................... 147\nFigure 80.  TSSOP8 – Outline ............................................................... 148\nFigure 81.  TSSOP8 – Footprint example ........................................................ 149\nFigure 82.  UFDFN8 - Outline ................................................................ 150\nFigure 83.  UFDFPN12 - Outline .............................................................. 152\nFigure 84.  WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale package outline .............. 153\nFigure 85.  WLCSP - 10 balls, 1.649x1.483 mm, 0.4 mm pitch, wafer level chip scale recommended footprint ......... 154\nFigure 86.  Logic 0, high data rate, fast commands ................................................. 156\nFigure 87.  Logic 1, high data rate, fast commands ................................................. 156\nFigure 88.  Logic 0, low data rate, fast commands .................................................. 156\nFigure 89.  Logic 1, low data rate, fast commands .................................................. 157\nFigure 90.  Start of frame, high data rate, one subcarrier, fast commands .................................. 157\nFigure 91.  Start of frame, low data rate, one subcarrier, fast commands .................................. 157\nFigure 92.  End of frame, high data rate, one subcarrier, fast commands .................................. 158\nFigure 93.  End of frame, low data rate, one subcarrier, fast commands ................................... 158\nST25DV04K ST25DV16K ST25DV64K\nList of figures\nDS10925  - Rev 11 page 196/197\nIMPORTANT NOTICE – READ CAREFULLY\nSTMicroelectronics NV and its subsidiaries (“ST”) reserve the right to make changes, corrections, enhancements, modifications, and improvements to ST\nproducts and/or to this document at any time without notice. Purchasers should obtain the latest relevant information on ST products before placing orders. ST\nproducts are sold pursuant to ST’s terms and conditions of sale in place at the time of order acknowledgment.\nPurchasers are solely responsible for the choice, selection, and use of ST products and ST assumes no liability for application assistance or the design of\npurchasers’ products.\nNo license, express or implied, to any intellectual property right is granted by ST herein.\nResale of ST products with provisions different from the information set forth herein shall void any warranty granted by ST for such product.\nST and the ST logo are trademarks of ST. For additional information about ST trademarks, refer to www.st.com/trademarks . All other product or service names\nare the property of their respective owners.\nInformation in this document supersedes and replaces information previously supplied in any prior versions of this document.\n© 2023 STMicroelectronics – All rights reserved\nST25DV04K ST25DV16K ST25DV64K\nDS10925  - Rev 11 page 197/197\n"}]
!==============================================================================!
### Component Summary: ST25DV04K-IER6C3

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Operating voltage: 1.8 to 5.5 V
- **Current Ratings**: 
  - I2C supply current: Up to 550 µA (depending on voltage)
  - GPO output current: Up to 1.5 mA (open drain)
- **Power Consumption**: 
  - Low power mode: < 1 µA
- **Operating Temperature Range**: 
  - Range 6: -40 to 85 °C
  - Range 8: -40 to 105 °C (for UFDFPN8 and UFDFPN12)
  - Range 8: -40 to 125 °C (for SO8N and TSSOP8)
- **Package Type**: 
  - Available in SO8, TSSOP8, UFDFPN8, UFDFPN12, and WLCSP10 packages.
- **Special Features**: 
  - Supports I2C and RF interfaces (ISO/IEC 15693, NFC Forum Type 5).
  - Energy harvesting capability.
  - Fast transfer mode with a 256-byte buffer.
  - Data protection with configurable areas and password protection.
- **Moisture Sensitive Level (MSL)**: 
  - MSL according to JEDEC J-STD-020E is typically Level 1 for all packages.

#### Description:
The **ST25DV04K** is a dynamic NFC/RFID tag IC that features 4 Kbits of EEPROM memory. It operates with two interfaces: a wired I2C interface and a contactless RF interface. The device is designed for applications requiring secure data storage and retrieval, with the ability to operate in low power modes and utilize energy harvesting techniques.

#### Typical Applications:
- **Data Storage**: Used in applications where secure and non-volatile data storage is required, such as in smart labels, tickets, and tags.
- **Access Control**: Can be utilized in systems requiring secure access control, such as electronic locks and identification systems.
- **Inventory Management**: Ideal for tracking and managing inventory in retail and logistics.
- **Energy Harvesting Applications**: Suitable for applications that benefit from energy harvesting, allowing the device to operate without a dedicated power source.
- **IoT Devices**: Can be integrated into Internet of Things (IoT) devices for data exchange and communication.

This summary provides a comprehensive overview of the ST25DV04K-IER6C3 component, highlighting its key specifications, functionality, and applications.