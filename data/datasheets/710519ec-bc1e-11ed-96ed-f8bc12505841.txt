[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of SJA1000T/N1 production of NXP from the text:DATA SHEET\nProduct speciﬁcation\nSupersedes data of 1999 Aug 17File under Integrated Circuits, IC182000 Jan 04INTEGRATED CIRCUITS\nSJA1000\nStand-alone CAN controller\n2000Jan 04 2Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nCONTENTS\n1 FEATURES\n2 GENERAL DESCRIPTION3 ORDERING INFORMATION4 BLOCK DIAGRAM5 PINNING6 FUNCTIONAL DESCRIPTION6.1 Description of the CAN controller blocks\n6.1.1 Interface Management Logic (IML)6.1.2 Transmit Buffer (TXB)6.1.3 Receive Buffer (RXB, RXFIFO)6.1.4 Acceptance Filter (ACF)6.1.5 Bit Stream Processor (BSP)6.1.6 Bit Timing Logic (BTL)6.1.7 Error Management Logic (EML)6.2 Detailed description of the CAN controller6.2.1 PCA82C200 compatibility6.2.2 Differences between BasicCAN and PeliCAN\nmode\n6.3 BasicCAN mode6.3.1 BasicCAN address layout6.3.2 Reset values6.3.3 Control Register (CR)6.3.4 Command Register (CMR)6.3.5 Status Register (SR)6.3.6 Interrupt Register (IR)6.3.7 Transmit buffer layout6.3.8 Receive buffer6.3.9 Acceptance filter6.4 PeliCAN mode6.4.1 PeliCAN address layout6.4.2 Reset values6.4.3 Mode Register (MOD)6.4.4 Command Register (CMR)6.4.5 Status Register (SR)6.4.6 Interrupt Register (IR)6.4.7 Interrupt Enable Register (IER)6.4.8 Arbitration Lost Capture register (ALC)6.4.9 Error Code Capture register (ECC)6.4.10 Error Warning Limit Register (EWLR)6.4.11 RX Error Counter Register (RXERR)6.4.12 TX Error Counter Register (TXERR)6.4.13 Transmit buffer6.4.14 Receive buffer6.4.15 Acceptance filter6.4.16 RX Message Counter (RMC)6.4.17 RX Buffer Start Address register (RBSA)6.5 Common registers6.5.1 Bus Timing Register 0 (BTR0)6.5.2 Bus Timing Register 1 (BTR1)6.5.3 Output Control Register (OCR)\n6.5.4 Clock Divider Register (CDR)\n7 LIMITING VALUES8 THERMAL CHARACTERISTICS9 DC CHARACTERISTICS10 AC CHARACTERISTICS10.1 AC timing diagrams\n10.2 Additional AC information\n11 PACKAGE OUTLINES12 SOLDERING12.1 Introduction\n12.2 DIP12.2.1 Soldering by dipping or by wave12.2.2 Repairing soldered joints12.3 SO12.3.1 Reflow soldering12.3.2 Wave soldering12.3.3 Repairing soldered joints\n13 DEFINITIONS14 LIFE SUPPORT APPLICATIONS\n2000Jan 04 3Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n1 FEATURES\n•Pin compatibility to the PCA82C200 stand-alone CAN\ncontroller\n•Electrical compatibility to the PCA82C200 stand-alone\nCAN controller\n•PCA82C200 mode (BasicCAN mode is default)\n•Extended receive buffer (64-byte FIFO)\n•CAN 2.0B protocol compatibility (extended frame\npassive in PCA82C200 compatibility mode)\n•Supports 11-bit identifier as well as 29-bit identifier\n•Bit rates up to 1 Mbits/s\n•PeliCAN mode extensions:\n– Error counters with read/write access– Programmable error warning limit– Last error code register– Error interrupt for each CAN-bus error– Arbitration lost interrupt with detailed bit position– Single-shot transmission (no re-transmission)– Listen only mode (no acknowledge, no active error\nflags)\n– Hot plugging support (software driven bit rate\ndetection)\n– Acceptance filter extension (4-byte code, 4-byte\nmask)\n– Receptionof‘own’messages(selfreceptionrequest)\n•24 MHz clock frequency\n•Interfaces to a variety of microprocessors\n•Programmable CAN output driver configuration\n•Extended ambient temperature range ( −40 to+125 °C).2 GENERAL DESCRIPTION\nTheSJA1000isastand-alonecontrollerfortheController\nArea Network (CAN) used within automotive and generalindustrial environments. It is the successor of thePCA82C200 CAN controller (BasicCAN) from PhilipsSemiconductors.Additionally,anewmodeofoperationisimplemented (PeliCAN) which supports the CAN 2.0Bprotocol specification with several new features.\n3 ORDERING INFORMATION\nTYPE NUMBERPACKAGE\nNAME DESCRIPTION VERSION\nSJA1000 DIP28 plastic dual in-line package; 28 leads (600 mil) SOT117-1\nSJA1000T SO28 plastic small outline package; 28 leads; body width 7.5 mm SOT136-1\n2000Jan 04 4Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n4 BLOCK DIAGRAM\nFig.1  Block diagram.handbook, full pagewidth\nMGK623INTERFACE MANAGEMENT LOGIC7\n8address/datacontrol\nMESSAGE BUFFER\nTRANSMIT\nBUFFER\nRECEIVE\nBUFFERRECEIVE\nFIFOBIT\nSTREAM\nPROCESSOR\nACCEPTANCE\nFILTERBIT TIMING\nLOGIC\nERROR\nMANAGEMENT\nLOGIC\nRESET OSCILLATORXTAL19\nXTAL210TX0\nTX1\nRX0\nRX1\n171821201914131512822\ninternal bus\nVDD3\nVSS3VDD1\nVSS1\nVSS2\nVDD2AD7 to AD0\n2, 1,\n28 to 233 to 7,\n11, 16ALE/AS, CS,\nRD/E, WR,\nCLKOUT,\nMODE, INT \nRSTSJA1000\n2000Jan 04 5Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n5 PINNING\nNote\n1. XTAL1 and XTAL2 pins should be connected to V SS1 via 15 pF capacitors.SYMBOL PIN DESCRIPTION\nAD7 to AD0 2,1, 28 to23 multiplexed address/data bus\nALE/AS 3 ALE input signal (Intel mode), AS input signal (Motorola mode)\nCS 4 chip select input, LOW level allows access to the SJA1000\nRD/E 5 RD signal (Intel mode) or E enable signal (Motorola mode) from the microcontroller\nWR 6 WR signal (Intel mode) or RD/ WR signal (Motorola mode) from the microcontroller\nCLKOUT 7 clock output signal produced by the SJA1000 for the microcontroller; the clock\nsignal is derived from the built-in oscillator via the programmable divider; the clockoff bit within the clock divider register allows this pin to disable\nV\nSS1 8 ground for logic circuits\nXTAL1 9 input to the oscillator ampliﬁer; external oscillator signal is input via this pin; note 1XTAL2 10 output from the oscillator ampliﬁer; the output must be left open-circuit when an\nexternal oscillator signal is used; note 1\nMODE 11 mode select input\n1 =selects Intel mode0 =selects Motorola mode\nV\nDD3 12 5 V supply for output driver\nTX0 13 output from the CAN output driver 0 to the physical bus lineTX1 14 output from the CAN output driver 1 to the physical bus lineV\nSS3 15 ground for output driver\nINT 16 interruptoutput,usedtointerruptthemicrocontroller; INTisactiveLOWifanybitof\nthe internal interrupt register is set; INT is an open-drain output and is designed to\nbeawired-ORwithother INToutputswithinthesystem;aLOWlevelonthispinwill\nreactivate the IC from sleep mode\nRST 17 resetinput,usedtoresettheCANinterface(activeLOW);automaticpower-onreset\ncan be obtained by connecting RST via a capacitor to V SS and a resistor to V DD\n(e.g. C =1 µF; R = 50 k Ω)\nVDD2 18 5 V supply for input comparator\nRX0, RX1 19, 20 input from the physical CAN-bus line to the input comparator of the SJA1000;\na dominant level will wake up the SJA1000 if sleeping; a dominant level is read, ifRX1 is higher than RX0 and vice versa for the recessive level; if the CBP bit (seeTable 49) is set in the clock divider register, the CAN input comparator is bypassedto achieve lower internal delays if an external transceiver circuitry is connected totheSJA1000;inthiscaseonlyRX0isactive;HIGHisinterpretedasrecessiveleveland LOW is interpreted as dominant level\nV\nSS2 21 ground for input comparator\nVDD1 22 5 V supply for logic circuits\n2000Jan 04 6Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.2  Pin configuration (DIP28).handbook, halfpage\nAD6\nAD7\nALE/AS\nCLKOUT\nVSS1\nXTAL1\nXTAL2\nMODE\nVDD3\nTX0\nTX1AD5\nAD4AD3AD2\nAD0\nVDD1AD1\nVSS2\nRX1\nRX0\nVDD2\nRST\nINT\nVSS31\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n1328\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15 14SJA1000\nMGK616CS\nRD/E\nWR\nFig.3  Pin configuration (SO28).handbook, halfpage\nAD6\nAD7\nALE/AS\nCLKOUT\nVSS1\nXTAL1\nXTAL2\nMODE\nVDD3\nTX0\nTX1AD5\nAD4AD3AD2\nAD0\nVDD1AD1\nVSS2\nRX1\nRX0\nVDD2\nRST\nINT\nVSS31\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n1328\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15 14SJA1000T\nMGK617CS\nRD/E\nWR\n2000Jan 04 7Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6 FUNCTIONAL DESCRIPTION\n6.1 Description of the CAN controller blocks6.1.1 I\nNTERFACE MANAGEMENT LOGIC(IML)\nThe interface management logic interprets commands\nfrom the CPU, controls addressing of the CAN registersandprovides interruptsandstatusinformationtothehostmicrocontroller.\n6.1.2 T\nRANSMITBUFFER(TXB)\nThe transmit buffer is an interface between the CPU and\nthe Bit Stream Processor (BSP) that is able to store acomplete message for transmission over the CANnetwork.Thebufferis13 byteslong,writtentobytheCPUand read out by the BSP.\n6.1.3 R\nECEIVEBUFFER(RXB, RXFIFO)\nThereceivebufferisaninterfacebetweentheacceptance\nfilter and the CPU that stores the received and acceptedmessages from the CAN-bus line. The Receive Buffer(RXB)representsaCPU-accessible13-bytewindowoftheReceive FIFO (RXFIFO), which has a total length of64 bytes.WiththehelpofthisFIFOtheCPUisabletoprocessonemessage while other messages are being received.\n6.1.4 A\nCCEPTANCE FILTER(ACF)\nTheacceptancefiltercomparesthereceivedidentifierwith\nthe acceptance filter register contents and decideswhether this message should be accepted or not. In theeventofapositiveacceptancetest,thecompletemessageis stored in the RXFIFO.\n6.1.5 B\nITSTREAMPROCESSOR (BSP)\nThebitstreamprocessorisasequencerwhichcontrolsthe\ndatastreambetweenthetransmitbuffer,RXFIFOandtheCAN-bus. It also performs the error detection, arbitration,stuffing and error handling on the CAN-bus.\n6.1.6 B\nITTIMINGLOGIC(BTL)\nThe bit timing logic monitors the serial CAN-bus line and\nhandlesthebusline-relatedbittiming.Itissynchronizedtothe bit stream on the CAN-bus on a‘recessive-to-dominant’buslinetransitionatthebeginningofamessage(hardsynchronization)andre-synchronizedon further transitions during the reception of a message(soft synchronization). The BTL also providesprogrammable time segments to compensate for thepropagation delay times and phase shifts (e.g. due tooscillator drifts) and to define the sample point and the\nnumber of samples to be taken within a bit time.\n6.1.7 E\nRRORMANAGEMENT LOGIC(EML)\nThe EML is responsible for the error confinement of the\ntransfer-layer modules. It receives error announcementsfrom the BSP and then informs the BSP and IML abouterror statistics.\n6.2 Detailed description of the CAN controller\nThe SJA1000 is designed to be software and\npin-compatible to its predecessor, the PCA82C200stand-alone CAN controller. Additionally, a lot of newfunctions are implemented. To achieve the softwarecompatibility, two different modes of operation areimplemented:\n•BasicCAN mode; PCA82C200 compatible\n•PeliCAN mode; extended features.\nThemodeofoperationisselectedwiththeCAN-modebit\nlocated within the clock divider register. Default modeupon reset is the BasicCAN mode.\n6.2.1 PCA82C200\nCOMPATIBILITY\nIn BasicCAN mode the SJA1000 emulates all known\nregisters from the PCA82C200 stand-alone CANcontroller. The characteristics, as described in Sections6.2.1.1to 6.2.1.4 are different from the PCA82C200design with respect to software compatibility.\n6.2.1.1 Synchronization mode\nThe SYNC bit in the control register is removed (CR.6 inthe PCA82C200). Synchronization is only possible by arecessive-to-dominanttransitionontheCAN-bus. Writingtothisbithasnoeffect.Toachievecompatibilitytoexistingapplication software, a read access to this bit will reflectthe previously written value (flip-flop without effect).\n6.2.1.2 Clock divider register\nTheclockdividerregisterisusedtoselecttheCANmodeof operation (BasicCAN/PeliCAN). Therefore one of thereserved bits within the PCA82C200 is used. Writing avalue between 0 and 7, as allowed for the PCA82C200,will enter the BasicCAN mode. The default state is divideby 12 for Motorola mode and divide by 2 for Intel mode.Anadditionalfunctionisimplementedwithinanotherofthereserved bits. Setting of bit CBP (see Table 49) enablesthe internal RX input comparator to be bypassed therebyreducing the internal delays if an external transceivercircuit is used.\n2000Jan 04 8Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.2.1.3 Receive buffer\nThe dual receive buffer concept of the PCA82C200 is\nreplacedbythereceiveFIFOfromthePeliCANcontroller.Thishasnoeffecttotheapplicationsoftwareexceptforthedata overrun probability. Now more than two messagesmay be received (up to 64 bytes) until a data overrunoccurs.\n6.2.1.4 CAN 2.0B\nThe SJA1000 is designed to support the full CAN 2.0Bprotocol specification, which means that the extendedoscillator tolerance is implemented as well as theprocessing of extended frame messages. In BasicCANmodeitispossibletotransmitandreceivestandardframemessages only (11-bit identifier). If extended framemessages(29-bitidentifier)aredetectedontheCAN-bus,they are tolerated and an acknowledge is given if themessage was correct, but there is no receive interruptgenerated.\n6.2.2 D\nIFFERENCES BETWEEN BASICCANANDPELICAN\nMODE\nIn the PeliCAN mode the SJA1000 appears with a\nre-organized register mapping with a lot of new features.All known bits from the PCA82C200 design are availableas well as several new ones. In the PeliCAN mode thecomplete CAN 2.0B functionality is supported (29-bitidentifier).\nMain new features of the SJA1000 are:\n•Reception and transmission of standard and extended\nframe format messages\n•Receive FIFO (64-byte)\n•Single/dual acceptance filter with mask and code\nregister for standard and extended frame\n•Error counters with read/write access\n•Programmable error warning limit\n•Last error code register\n•Error interrupt for each CAN-bus error\n•Arbitration lost interrupt with detailed bit position\n•Single-shottransmission(nore-transmissiononerroror\narbitration lost)\n•Listen only mode (monitoring of the CAN-bus, no\nacknowledge, no error flags)\n•Hot plugging supported (disturbance-free software\ndriven bit rate detection)\n•Disable CLKOUT by hardware.6.3 BasicCAN mode\n6.3.1 B\nASICCANADDRESS LAYOUT\nThe SJA1000 appears to a microcontroller as a\nmemory-mappedI/O device.AnindependentoperationofbothdevicesisguaranteedbyaRAM-likeimplementationof the on-chip registers.\nThe address area of the SJA1000 consists of the control\nsegmentandthemessagebuffers.Thecontrolsegmentisprogrammed during an initialization download in order toconfigure communication parameters (e.g. bit timing).Communication over the CAN-bus is also controlled viathis segment by the microcontroller. During initializationthe CLKOUT signal may be programmed to a valuedetermined by the microcontroller.\nAmessage,whichshouldbetransmitted,hastobewritten\nto the transmit buffer. After a successful reception themicrocontroller may read the received message from thereceive buffer and then release it for further use.\nThe exchange of status, control and command signals\nbetween the microcontroller and the SJA1000 isperformed in the control segment. The layout of thissegmentisshowninTable 3.Afteraninitialdownload,thecontents of the registers acceptance code, acceptancemask, bus timing registers 0 and1 and output controlshould not be changed. Therefore these registers mayonlybeaccessedwhentheresetrequestbitinthecontrolregister is set HIGH.\nFor register access, two different modes have to be\ndistinguished:\n•Reset mode\n•Operating mode.\nThe reset mode (see Table 3, control register, bit Reset\nRequest) is entered automatically after a hardware resetor when the controller enters the bus-off state (seeTable 5, status register, bit Bus Status). The operatingmodeisactivatedbyresettingoftheresetrequestbitinthecontrol register.\n2000Jan 04 9Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 1 BasicCAN address allocation; note 1\nNotes\n1. It should be noted that the registers are repeated within higher CAN address areas (the most significant bits of the\n8-bit CPU address are not decoded: CAN address 32 continues with CAN address 0 and so on).\n2. Testregisterisusedforproductiontestingonly.Usingthisregisterduringnormaloperationmayresultinundesired\nbehaviour of the device.\n3. Some bits are writeable in reset mode only (CAN mode and CBP).CAN\nADDRESSSEGMENTOPERATING MODE RESET MODE\nREAD WRITE READ WRITE\n0 control control control control control\n1 (FFH) command (FFH) command2 status − status −\n3 interrupt − interrupt −\n4 (FFH) − acceptance code acceptance code\n5 (FFH) − acceptance mask acceptance mask\n6 (FFH) − bus timing 0 bus timing 0\n7 (FFH) − bus timing 1 bus timing 1\n8 (FFH) − output control output control\n9 test test; note 2 test test; note 210 transmit\nbufferidentiﬁer (10 to3) identiﬁer (10 to3) (FFH) −\n11 identiﬁer (2 to 0),\nRTR and DLCidentiﬁer (2 to0),\nRTR and DLC(FFH) −\n12 data byte1 data byte1 (FFH) −\n13 data byte2 data byte2 (FFH) −\n14 data byte3 data byte3 (FFH) −\n15 data byte4 data byte4 (FFH) −\n16 data byte5 data byte5 (FFH) −\n17 data byte6 data byte6 (FFH) −\n18 data byte7 data byte7 (FFH) −\n19 data byte8 data byte8 (FFH) −\n20 receive\nbufferidentiﬁer (10 to3) identiﬁer (10 to3) identiﬁer (10 to3) identiﬁer (10 to3)\n21 identiﬁer (2 to 0),\nRTR and DLCidentiﬁer (2 to0),\nRTR and DLCidentiﬁer (2 to0),\nRTR and DLCidentiﬁer (2 to0),\nRTR and DLC\n22 data byte1 data byte1 data byte1 data byte123 data byte2 data byte2 data byte2 data byte224 data byte3 data byte3 data byte3 data byte325 data byte4 data byte4 data byte4 data byte426 data byte5 data byte5 data byte5 data byte527 data byte6 data byte6 data byte6 data byte628 data byte7 data byte7 data byte7 data byte729 data byte8 data byte8 data byte8 data byte830 (FFH) − (FFH) −\n31 clock divider clock divider; note 3 clock divider clock divider\n2000Jan 04 10Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.3.2 R ESET VALUES\nDetectionofa‘resetrequest’resultsinabortingthecurrenttransmission/receptionofamessageandenteringthereset\nmode. On the ‘1-to-0’ transition of the reset request bit, the CAN controller returns to the operating mode.\nTable 2 Reset mode conﬁguration; notes 1 and 2\nREGISTER BIT SYMBOL NAMEVALUE\nRESET BY\nHARDWARESETTING\nBIT CR.0 BY\nSOFTWAREOR\nDUE TO\nBUS-OFF\nControl CR.7 − reserved 0 0\nCR.6 − reserved X X\nCR.5 − reserved 1 1\nCR.4 OIE Overrun Interrupt Enable X XCR.3 EIE Error Interrupt Enable X XCR.2 TIE Transmit Interrupt Enable X XCR.1 RIE Receive Interrupt Enable X XCR.0 RR Reset Request 1 (reset mode) 1 (reset mode)\nCommand CMR.7 − reserved note 3 note 3\nCMR.6 − reserved\nCMR.5 − reserved\nCMR.4 GTS Go To SleepCMR.3 CDO Clear Data OverrunCMR.2 RRB Release Receive BufferCMR.1 AT Abort TransmissionCMR.0 TR Transmission Request\nStatus SR.7 BS Bus Status 0 (bus-on) X\nSR.6 ES Error Status 0 (ok) XSR.5 TS Transmit Status 0 (idle) 0 (idle)SR.4 RS Receive Status 0 (idle) 0 (idle)SR.3 TCS Transmission Complete Status 1 (complete) XSR.2 TBS Transmit Buffer Status 1 (released) 1 (released)SR.1 DOS Data Overrun Status 0 (absent) 0 (absent)SR.0 RBS Receive Buffer Status 0 (empty) 0 (empty)\nInterrupt IR.7 − reserved 1 1\nIR.6 − reserved 1 1\nIR.5 − reserved 1 1\nIR.4 WUI Wake-Up Interrupt 0 (reset) 0 (reset)IR.3 DOI Data Overrun Interrupt 0 (reset) 0 (reset)IR.2 EI Error Interrupt 0 (reset) X; note 4IR.1 TI Transmit Interrupt 0 (reset) 0 (reset)IR.0 RI Receive Interrupt 0 (reset) 0 (reset)\n2000Jan 04 11Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nAcceptance code AC.7to 0 AC Acceptance Code X X\nAcceptance mask AM.7to 0 AM Acceptance Mask X XBus timing 0 BTR0.7 SJW.1 Synchronization Jump Width 1 X X\nBTR0.6 SJW.0 Synchronization Jump Width 0 X XBTR0.5 BRP.5 Baud Rate Prescaler 5 X XBTR0.4 BRP.4 Baud Rate Prescaler 4 X XBTR0.3 BRP.3 Baud Rate Prescaler 3 X XBTR0.2 BRP.2 Baud Rate Prescaler 2 X XBTR0.1 BRP.1 Baud Rate Prescaler 1 X XBTR0.0 BRP.0 Baud Rate Prescaler 0 X X\nBus timing 1 BTR1.7 SAM Sampling X X\nBTR1.6 TSEG2.2 Time Segment 2.2 X XBTR1.5 TSEG2.1 Time Segment 2.1 X XBTR1.4 TSEG2.0 Time Segment 2.0 X XBTR1.3 TSEG1.3 Time Segment 1.3 X XBTR1.2 TSEG1.2 Time Segment 1.2 X XBTR1.1 TSEG1.1 Time Segment 1.1 X XBTR1.0 TSEG1.0 Time Segment 1.0 X X\nOutput control OC.7 OCTP1 Output Control Transistor P1 X X\nOC.6 OCTN1 Output Control Transistor N1 X XOC.5 OCPOL1 Output Control Polarity 1 X XOC.4 OCTP0 Output Control Transistor P0 X XOC.3 OCTN0 Output Control Transistor N0 X XOC.2 OCPOL0 Output Control Polarity 0 X XOC.1 OCMODE1 Output Control Mode 1 X XOC.0 OCMODE0 Output Control Mode 0 X X\nTransmit buffer − TXB Transmit Buffer X X\nReceive buffer − RXB Receive Buffer X; note 5 X; note 5\nClock divider − CDR Clock Divider Register 00000000\n(Intel);00000101(Motorola)XREGISTER BIT SYMBOL NAMEVALUE\nRESET BY\nHARDWARESETTING\nBIT CR.0 BY\nSOFTWAREOR\nDUE TO\nBUS-OFF\n2000Jan 04 12Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. X means that the value of these registers or bits is not influenced.2. Remarks in brackets explain functional meaning.3. Reading the command register will always reflect a binary ‘11111111’.4. On bus-off the error interrupt is set, if enabled.5. Internal read/write pointers of the RXFIFO are reset to their initial values. A subsequent read access to the RXB\nwould show undefined data values (parts of old messages). If a message is transmitted, this message is written inparalleltothereceivebufferbutnoreceiveinterruptisgeneratedandthereceivebufferareaisnotlocked.So,evenifthereceivebufferisempty,thelasttransmittedmessagemaybereadfromthereceivebufferuntilitisoverriddenby the next received or transmitted message.Uponahardwarereset,theRXFIFOpointersareresettothephysicalRAMaddress‘0’.SettingCR.0bysoftwareordue to the bus-off event will reset the RXFIFO pointers to the currently valid FIFO start address which is differentfrom the RAM address ‘0’ after the first release receive buffer command.\n6.3.3 C\nONTROLREGISTER(CR)\nThecontentsofthecontrolregisterareusedtochangethebehaviouroftheCAN controller.Bitsmaybesetorresetby\nthe attached microcontroller which uses the control register as a read/write memory.\nTable 3 Bit interpretation of the control register (CR); CAN address 0\nBIT SYMBOL NAME VALUE FUNCTION\nCR.7 −− − reserved; note 1\nCR.6 −− − reserved; note 2\nCR.5 −− − reserved; note 3\nCR.4 OIE Overrun Interrupt Enable 1 enabled; if the data overrun bit is set, the\nmicrocontroller receives an overrun interruptsignal (see also status register; Table 5)\n0 disabled; the microcontroller receives no overrun\ninterrupt signal from the SJA1000\nCR.3 EIE Error Interrupt Enable 1 enabled; if the error or bus status change, the\nmicrocontroller receives an error interrupt signal(see also status register; Table 5)\n0 disabled; the microcontroller receives no error\ninterrupt signal from the SJA1000\nCR.2 TIE TransmitInterruptEnable 1 enabled; when a message has been successfully\ntransmitted or the transmit buffer is accessibleagain,(e.g.afteranaborttransmissioncommand)the SJA1000 transmits a transmit interrupt signalto the microcontroller\n0 disabled; the microcontroller receives no transmit\ninterrupt signal from the SJA1000\n2000Jan 04 13Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. Any write access to the control register has to set this bit to logic 0 (reset value is logic 0).2. In the PCA82C200 this bit was used to select the synchronization mode. Because this mode is not longer\nimplemented,settingthisbithasnoinfluenceonthemicrocontroller.Duetosoftwarecompatibilitysettingthisbitisallowed. This bit will not change after hardware or software reset. In addition the value written by users software isreflected.\n3. Reading this bit will always reflect a logic 1.4. During a hardware reset or when the bus status bit is set to logic 1 (bus-off), the reset request bit is set to logic 1\n(present). If this bit is accessed by software, a value change will become visible and takes effect first with the nextpositiveedgeoftheinternalclockwhichoperateswith\n1⁄2oftheexternaloscillatorfrequency.Duringanexternalreset\nthemicrocontrollercannotsettheresetrequestbittologic 0(absent).Therefore,afterhavingsettheresetrequestbit to logic 0, the microcontroller must check this bit to ensure that the external reset pin is not being held LOW.Changes of the reset request bit are synchronized with the internal divided clock. Reading the reset request bitreflects the synchronized status.After the reset request bit is set to logic 0 theSJA1000 will wait for:\na) One occurrence of bus-free signal (11 recessive bits), if the preceding reset request has been caused by a\nhardware reset or a CPU-initiated reset\nb) 128 occurrencesofbus-free,iftheprecedingresetrequesthasbeencausedbyaCAN controllerinitiatedbus-off,\nbeforere-enteringthebus-onmode;itshouldbenotedthatseveralregistersaremodifiediftheresetrequestbitwas set (see also Table 2).\n6.3.4 C\nOMMANDREGISTER(CMR)\nA command bit initiates an action within the transfer layer of the SJA1000. The command register appears to the\nmicrocontroller as a write only memory. If a read access is performed to this address the byte ‘11111111’ is returned.Betweentwocommandsatleastoneinternalclockcycleisneededtoprocess.Theinternalclockisdividedbytwofromthe external oscillator frequency.CR.1 RIE Receive Interrupt Enable 1 enabled; when a message has been received\nwithout errors, the SJA1000 transmits a receiveinterrupt signal to the microcontroller\n0 disabled; the microcontroller receives no transmit\ninterrupt signal from the SJA1000\nCR.0 RR Reset Request; note 4 1 present; detection of a reset request results in\naborting the current transmission/reception of amessage and entering the reset mode\n0 absent; on the ‘1-to-0’ transition of the reset\nrequest bit, the SJA1000 returns to the operatingmodeBIT SYMBOL NAME VALUE FUNCTION\n2000Jan 04 14Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 4 Bit interpretation of the command register (CMR); CAN address 1\nNotes\n1. TheSJA1000willentersleepmodeifthesleepbitissettologic 1(sleep);thereisnobusactivityandnointerruptis\npending. Setting of GTS with at least one of the previously mentioned exceptions valid will result in a wake-upinterrupt. After sleep mode is set, the CLKOUT signal continues until at least 15 bit times have passed, to allow ahost microcontroller clocked via this signal to enter its own standby mode before the CLKOUT goes LOW.The SJA1000willwakeupwhenoneofthethreepreviouslymentionedconditionsisnegated:after‘GoToSleep’isset LOW (wake-up), there is bus activity or\nINT is driven LOW (active). On wake-up, the oscillator is started and a\nwake-up interrupt is generated. A sleeping SJA1000 which wakes up due to bus activity will not be able to receivethismessageuntilitdetects11 consecutiverecessivebits(bus-freesequence).ItshouldbenotedthatsettingofGTSisnotpossibleinresetmode.Afterclearingofresetrequest,settingofGTSispossiblefirst,whenbus-freeisdetectedagain.\n2. Thiscommandbitisusedtoclearthedataoverrunconditionindicatedbythedataoverrunstatusbit.Aslongasthe\ndataoverrunstatusbitissetnofurtherdataoverruninterruptisgenerated.Itisallowedtogivethecleardataoverruncommand at the same time as a release receive buffer command.\n3. After reading the contents of the receive buffer, the microcontroller can release this memory space of the RXFIFO\nby setting the release receive buffer bit to logic 1. This may result in another message becoming immediatelyavailable within the receive buffer. This event will force another receive interrupt, if enabled. If there is no othermessage available no further receive interrupt is generated and the receive buffer status bit is cleared.\n4. TheaborttransmissionbitisusedwhentheCPUrequiresthesuspensionofthepreviouslyrequestedtransmission,\ne.g.totransmitamoreurgentmessagebefore.Atransmissionalreadyinprogressisnotstopped.Inordertoseeifthe original message had been either transmitted successfully or aborted, the transmission complete status bitshould be checked. This should be done after the transmit buffer status bit has been set to logic 1 (released) or atransmit interrupt has been generated.\n5. If the transmission request was set to logic 1 in a previous command, it cannot be cancelled by setting the\ntransmission request bit to logic 0. The requested transmission may be cancelled by setting the abort transmissionbit to logic 1.BIT SYMBOL NAME VALUE FUNCTION\nCMR.7 −− − reserved\nCMR.6 −− − reserved\nCMR.5 −− − reserved\nCMR.4 GTS Go To Sleep; note 1 1 sleep; the SJA1000 enters sleep mode if no CAN\ninterrupt is pending and there is no bus activity\n0 wake up; SJA1000 operates normal\nCMR.3 CDO Clear Data Overrun;\nnote 21 clear; data overrun status bit is cleared\n0 no action\nCMR.2 RRB Release Receive Buffer;\nnote 31 released; the receive buffer, representing the\nmessage memory space in the RXFIFO isreleased\n0 no action\nCMR.1 AT Abort Transmission;\nnote 41 present; if not already in progress, a pending\ntransmission request is cancelled\n0 absent; no action\nCMR.0 TR Transmission Request;\nnote 51 present; a message will be transmitted\n0 absent; no action\n2000Jan 04 15Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.3.5 S TATUSREGISTER(SR)\nThe content of the status register reflects the status of the SJA1000. The status register appears to the microcontroller\nas a read only memory.\nTable 5 Bit interpretation of the status register (SR); CAN address 2\nBIT SYMBOL NAME VALUE FUNCTION\nSR.7 BS Bus Status; note 1 1 bus-off; the SJA1000 is not involved in bus\nactivities\n0 bus-on; the SJA1000 is involved in bus activities\nSR.6 ES Error Status; note 2 1 error; at least one of the error counters has\nreached or exceeded the CPU warning limit\n0 ok;botherrorcountersarebelowthewarninglimit\nSR.5 TS Transmit Status; note 3 1 transmit; the SJA1000 is transmitting a message\n0 idle; no transmit message is in progress\nSR.4 RS Receive Status; note 3 1 receive; the SJA1000 is receiving a message\n0 idle; no receive message is in progress\nSR.3 TCS Transmission Complete\nStatus; note 41 complete; the last requested transmission has\nbeen successfully completed\n0 incomplete;thepreviouslyrequestedtransmission\nis not yet completed\nSR.2 TBS Transmit Buffer Status;\nnote 51 released; the CPU may write a message into the\ntransmit buffer\n0 locked; the CPU cannot access the transmit\nbuffer; a message is waiting for transmission or isalready in process\nSR.1 DOS Data Overrun Status;\nnote 61 overrun; a message was lost because there was\nnotenoughspaceforthatmessageintheRXFIFO\n0 absent; no data overrun has occurred since the\nlast clear data overrun command was given\nSR.0 RBS Receive Buffer Status;\nnote 71 full; one or more messages are available in the\nRXFIFO\n0 empty; no message is available\n2000Jan 04 16Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. When the transmit error counter exceeds the limit of 255 [the bus status bit is set to logic 1 (bus-off)] the\nCAN controllerwillsettheresetrequestbittologic 1(present)andanerrorinterruptisgenerated,ifenabled.Itwillstay in this mode until the CPU clears the reset request bit. Once this is completed the CAN controller will wait theminimum protocol-defined time (128 occurrences of the bus-free signal). After that the bus status bit is cleared(bus-on), the error status bit is set to logic 0 (ok), the error counters are reset and an error interrupt is generated, ifenabled.\n2. Errors detected during reception or transmission will affect the error counters according to the CAN 2.0B protocol\nspecification. The error status bit is set when at least one of the error counters has reached or exceeded the CPUwarning limit of 96. An error interrupt is generated, if enabled.\n3. If both the receive status and the transmit status bits are logic 0 (idle) the CAN-bus is idle.4. The transmission complete status bit is set to logic 0 (incomplete) whenever the transmission request bit is set to\nlogic 1. The transmission complete status bit will remain at logic 0 (incomplete) until a message is transmittedsuccessfully.\n5. IftheCPUtriestowritetothetransmitbufferwhenthetransmitbufferstatusbitisatlogic 0(locked),thewrittenbyte\nwill not be accepted and will be lost without being indicated.\n6. When a message that shall be received has passed the acceptance filter successfully (i.e. earliest after arbitration\nfield), the CAN controller needs space in the RXFIFO to store the message descriptor. Accordingly there must beenoughspaceforeachdatabytewhichhasbeenreceived.Ifthereisnotenoughspacetostorethemessage,thatmessagewillbedroppedandthedataoverrunconditionwillbeindicatedtotheCPUonly,ifthisreceivedmessagehas no errors until the last but one bit of end of frame (message becomes valid).\n7. AfterreadingamessagestoredintheRXFIFOandreleasingthismemoryspacewiththecommandreleasereceive\nbuffer, this bit is cleared. If there is another message available within the FIFO this bit is set again with the next bitquantum (t\nscl).\n2000Jan 04 17Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.3.6 I NTERRUPT REGISTER(IR)\nThe interrupt register allows the identification of an interrupt source. When one or more bits of this register are set, the\nINT pin is activated (LOW). After this register is read by the microcontroller, all bits are reset what results in a floating\nlevel atINT. The interrupt register appears to the microcontroller as a read only memory.\nTable 6 Bit interpretation of the interrupt register (IR); CAN address 3\nNotes\n1. Reading this bit will always reflect a logic 1.2. A wake-up interrupt is also generated if the CPU tries to set go to sleep while the CAN controller is involved in bus\nactivities or a CAN interrupt is pending.\n3. The overrun interrupt bit (if enabled) and the data overrun status bit are set at the same time.4. The receive interrupt bit (if enabled) and the receive buffer status bit are set at the same time.\nIt should be noted that the receive interrupt bit is cleared upon a read access, even if there is another messageavailablewithintheFIFO.Themomentthereleasereceivebuffercommandisgivenandthereisanothermessagevalid within the receive buffer, the receive interrupt is set again (if enabled) with the next t\nscl.BIT SYMBOL NAME VALUE FUNCTION\nIR.7 −− − reserved; note 1\nIR.6 −− − reserved; note 1\nIR.5 −− − reserved; note 1\nIR.4 WUI Wake-Up Interrupt;\nnote 21 set; this bit is set when the sleep mode is left\n0 reset;thisbitiscleared by anyreadaccessofthe\nmicrocontroller\nIR.3 DOI Data Overrun Interrupt;\nnote 31 set;thisbitissetona ‘0-to-1’transitionofthedata\noverrunstatusbit,whenthedataoverruninterruptenable is set to logic 1 (enabled)\n0 reset;thisbitiscleared by anyreadaccessofthe\nmicrocontroller\nIR.2 EI Error Interrupt 1 set; this bit is set on a change of either the error\nstatus or bus status bits if the error interruptenable is set to logic 1 (enabled)\n0 reset;thisbitiscleared by anyreadaccessofthe\nmicrocontroller\nIR.1 TI Transmit Interrupt 1 set; this bit is set whenever the transmit buffer\nstatus changes from logic 0 tologic 1 (released)and transmit interrupt enable is set to logic 1(enabled)\n0 reset;thisbitiscleared by anyreadaccessofthe\nmicrocontroller\nIR.0 RI Receive Interrupt; note 4 1 set; this bit is set while the receive FIFO is not\nempty and the receive interrupt enable bit is settologic 1 (enabled)\n0 reset;thisbitiscleared by anyreadaccessofthe\nmicrocontroller\n2000Jan 04 18Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.3.7 T RANSMIT BUFFER LAYOUT\nThegloballayoutofthetransmitbufferisshowninTable 7.Thebufferservestostoreamessagefromthemicrocontroller\nto be transmitted by the SJA1000. It is subdivided into a descriptor and data field. The transmit buffer can be written toand read out by the microcontroller in operating mode only. In reset mode a ‘FFH’ is reflected for all bytes.\nTable 7 Layout of transmit buffer\nCAN\nADDRESSFIELD NAMEBITS\n76543210\n10 descriptor identiﬁer byte 1 ID.10 ID.9 ID.8 ID.7 ID.6 ID.5 ID.4 ID.3\n11 identiﬁer byte 2 ID.2 ID.1 ID.0 RTR DLC.3 DLC.2 DLC.1 DLC.012 data TX data 1 transmit data byte113 TX data 2 transmit data byte214 TX data 3 transmit data byte315 TX data 4 transmit data byte416 TX data 5 transmit data byte517 TX data 6 transmit data byte618 TX data 7 transmit data byte719 TX data 8 transmit data byte8\n6.3.7.1 Identiﬁer (ID)\nThe identifier consists of 11 bits (ID.10 toID.0). ID.10 is\nthemostsignificantbit,whichistransmittedfirstonthebusduring the arbitration process. The identifier acts as themessage’s name. It is used in a receiver for acceptancefiltering and also determining the bus access priorityduringthe arbitrationprocess.Thelowerthebinaryvalueof the identifier the higher the priority. This is due to alarger number of leading dominant bits during arbitration.\n6.3.7.2 Remote Transmission Request (RTR)\nIf this bit is set, a remote frame will be transmitted via thebus.Thismeansthatnodatabytesareincludedwithinthisframe.Nevertheless,itisnecessarytospecifythecorrectdata length code which depends on the correspondingdata frame with the same identifier coding.\nIftheRTRbitisnotset,adataframewillbesentincluding\nthe number of data bytes as specified by the data lengthcode.\n6.3.7.3 Data Length Code (DLC)\nThe number of bytes in the data field of a message iscoded by the data length code. At the start of a remoteframetransmissionthedatalengthcodeisnotconsidereddue to the RTR bit being at logic 1 (remote). This forcesthe number of transmitted/received data bytes to belogic 0. Nevertheless, the data length code must bespecified correctly to avoid bus errors if two\nCAN controllersstartaremoteframetransmissionwiththesame identifier simultaneously.\nThe range of the data byte count is 0 to8 bytes and is\ncoded as follows:\nDataByteCount = 8 ×DLC.3 +4 ×DLC.2 + 2 ×DLC.1 +\nDLC.0\nForreasonsofcompatibilitynodatalengthcode>8should\nbeused.Ifavalue>8isselected,8 bytesaretransmittedin the data frame with the data length code specified inDLC.\n6.3.7.4 Data ﬁeld\nThenumberoftransferreddatabytesisdeterminedbythedata length code. The first bit transmitted is the mostsignificant bit of data byte 1 at address 12.\n6.3.8 R\nECEIVE BUFFER\nThegloballayoutofthereceivebufferisverysimilartothe\ntransmit buffer described in Section 6.3.7. The receivebufferistheaccessiblepartoftheRXFIFOandislocatedin the range between CAN address20 and 29.\n2000Jan 04 19Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.4  Example of the message storage within the RXFIFO.Message 1 is now available in the receive buffer.handbook, full pagewidth\nMGK618release\nreceive\nbuffer\ncommand64-byte\nFIFO\nincoming\nmessagesmessage 3\nmessage 2\nmessage 129\n28\n27\n26\n25\n24\n23\n22\n21\n20receive\nbuffer\nwindow\nCAN address\nIdentifier,remotetransmissionrequestbitanddatalength\ncodehavethesamemeaningandlocationasdescribedinthe transmit buffer but within the address range 20 to 29.\nAs illustrated in Fig.4 the RXFIFO has space for\n64 message bytes in total. The number of messages thatcan be stored in the FIFO at any particular momentdependsonthelengthoftheindividualmessages.Ifthereis not enough space for a new message within theRXFIFO, the CAN controller generates a data overruncondition. A message which is partly written into theRXFIFO, when the data overrun condition occurs, isdeleted. This situation is indicated to the microcontrollervia the status register and the data overrun interrupt, ifenabled and the frame was received without any errorsuntil the last but one bit of end of frame (RX messagebecomes valid).6.3.9 A\nCCEPTANCE FILTER\nWiththehelpoftheacceptancefiltertheCAN controlleris\nabletoallowpassingofreceivedmessagestotheRXFIFOonly when the identifier bits of the received message areequal to the predefined ones within the acceptance filterregisters. The acceptance filter is defined by theacceptancecoderegister(ACR;seeSection 6.3.9.1)andtheacceptancemaskregister(AMR;seeSection 6.3.9.2).\n2000Jan 04 20Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.3.9.1 Acceptance Code Register (ACR)\nTable 8 ACR bit allocation; can address 4\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nAC.7 AC.6 AC.5 AC.4 AC.3 AC.2 AC.1 AC.0\nThis register can be accessed (read/write), if the reset\nrequest bit is set HIGH (present). When a message isreceived which passes the acceptance test and there isreceive buffer space left, then the respective descriptorand data field are sequentially stored in the RXFIFO.Whenthecompletemessagehasbeencorrectlyreceivedthe following occurs:\n•The receive status bit is set HIGH (full)\n•IfthereceiveinterruptenablebitissetHIGH(enabled),\nthe receive interrupt is set HIGH (set).The acceptance code bits (AC.7 to AC.0) and the eight\nmost significant bits of the message’s identifier(ID.10to ID.3) must be equal to those bit positions whichare marked relevant by the acceptance mask bits(AM.7 toAM.0). If the conditions as described in thefollowing equation are fulfilled, acceptance is given:\n(ID.10to ID.3) ≡(AC.7 to AC.0)] ∨(AM.7 to AM.0)\n≡11111111\n6.3.9.2 Acceptance Mask Register (AMR)\nTable 9 AMR bit allocation; CAN address 5\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nAM.7 AM.6 AM.5 AM.4 AM.3 AM.2 AM.1 AM.0\nThis register can be accessed (read/write), if the reset\nrequest bit is set HIGH (present). The acceptance maskregister qualifies which of the corresponding bits of theacceptance code are ‘relevant’ (AM.X = 0) or ‘don’t care’(AM.X= 1) for acceptance filtering.\n6.3.9.3 Other registers\nThe other registers are described in Section 6.5.6.4 PeliCAN mode\n6.4.1 P ELICANADDRESS LAYOUT\nTheCAN controller’sinternalregistersappeartotheCPU\nason-chipmemorymappedperipheralregisters.Becausethe CAN controller can operate in different modes(operating/reset; see also Section 6.4.3), one has todistinguish between different internal address definitions.\nStartingfromCAN address 32thecompleteinternalRAM\n(80-byte) is mapped to the CPU interface.\n2000Jan 04 21Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 10 PeliCAN address allocation; note 1\nCAN\nADDRESSOPERATING MODE RESET MODE\nREAD WRITE READ WRITE\n0 mode mode mode mode\n1 (00H) command (00H) command\n2 status − status −\n3 interrupt − interrupt −\n4 interrupt enable interrupt enable interrupt enable interrupt enable\n5 reserved (00H) − reserved (00H) −\n6 bus timing 0 − bus timing 0 bus timing 0\n7 bus timing 1 − bus timing 1 bus timing 1\n8 output control − output control output control\n9 test test; note 2 test test; note 210 reserved (00H) − reserved (00H) −\n11 arbitration lost capture − arbitration lost\ncapture−\n12 error code capture − error code\ncapture−\n13 error warning limit − error warning\nlimiterror warning\nlimit\n14 RX error counter − RXerrorcounter RXerrorcounter\n15 TX error counter − TX error counter TX error counter\n16 RX frame\ninformationSFF; note 3RX frame\ninformationEFF; note 4TX frame\ninformationSFF; note 3TX frame\ninformationEFF; note 4acceptance\ncode 0acceptance\ncode 0\n17 RX identiﬁer 1 RX identiﬁer 1 TX identiﬁer 1 TX identiﬁer 1 acceptance\ncode 1acceptance\ncode 1\n18 RX identiﬁer 2 RX identiﬁer 2 TX identiﬁer 2 TX identiﬁer 2 acceptance\ncode 2acceptance\ncode 2\n19 RX data1 RX identiﬁer 3 TX data 1 TX identiﬁer 3 acceptance\ncode 3acceptance\ncode 3\n20 RX data2 RX identiﬁer 4 TX data 2 TX identiﬁer 4 acceptance\nmask 0acceptance\nmask 0\n21 RX data3 RX data 1 TX data 3 TX data 1 acceptance\nmask 1acceptance\nmask 1\n22 RX data4 RX data 2 TX data 4 TX data 2 acceptance\nmask 2acceptance\nmask 2\n23 RX data5 RX data 3 TX data 5 TX data 3 acceptance\nmask 3acceptance\nmask 3\n24 RX data6 RX data 4 TX data 6 TX data 4 reserved (00H) −\n25 RX data7 RX data 5 TX data 7 TX data 5 reserved (00H) −\n26 RX data8 RX data 6 TX data 8 TX data 6 reserved (00H) −\n2000Jan 04 22Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. It should be noted that the registers are repeated within higher CAN address areas (the most significant bit of the\n8-bit CPU address is not decoded: CAN address 128continues with CAN address 0 and so on).\n2. Testregisterisusedforproductiontestingonly.Usingthisregisterduringnormaloperationmayresultinundesired\nbehaviour of the device.\n3. SFF= Standard Frame Format.4. EFF= Extended Frame Format.5. TheseaddressallocationsreflecttheFIFO RAMspacebehindthecurrentmessage.Thecontentsarerandomafter\npower-up and contain the beginning of the next message which is received after the current one. If no furthermessage is received, parts of old messages may occur here.\n6. Some bits are writeable in reset mode only (CAN mode, CBP, RXINTEN and clock off).27 (FIFO RAM);\nnote 5RX data 7 − TX data 7 reserved (00H) −\n28 (FIFO RAM);\nnote 5RX data 8 − TX data 8 reserved (00H) −\n29 RX message counter − RX message\ncounter−\n30 RX buffer start address − RX buffer start\naddressRX buffer start\naddress\n31 clock divider clock divider; note 6 clock divider clock divider\n32 internalRAMaddress 0(FIFO) − internal RAM\naddress 0internal RAM\naddress 0\n33 internalRAMaddress 1(FIFO) − internal RAM\naddress 1internal RAM\naddress 1\n↓↓ ↓ ↓ ↓\n95 internal RAM address 63\n(FIFO)− internal RAM\naddress 63internal RAM\naddress 63\n96 internal RAM address 64\n(TX buffer)− internal RAM\naddress 64internal RAM\naddress 64\n↓↓ ↓ ↓ ↓\n108 internal RAM address 76\n(TX buffer)− internal RAM\naddress 76internal RAM\naddress 76\n109 internalRAMaddress 77(free) − internal RAM\naddress 77internal RAM\naddress 77\n110 internalRAMaddress 78(free) − internal RAM\naddress 78internal RAM\naddress 78\n111 internalRAMaddress 79(free) − internal RAM\naddress 79internal RAM\naddress 79\n112 (00H) − (00H) −\n↓↓ ↓ ↓ ↓\n127 (00H) − (00H) −CAN\nADDRESSOPERATING MODE RESET MODE\nREAD WRITE READ WRITE\n2000Jan 04 23Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.2 R ESET VALUES\nDetection of a set reset mode bit results in aborting the current transmission/reception of a message and entering the\nreset mode. On the ‘1-to-0’ transition of the reset mode bit, the CAN controller returns to the mode defined within themode register.\nTable 11 Reset mode conﬁguration; notes 1 and 2\nREGISTER BIT SYMBOL NAMEVALUE\nRESET BY\nHARDWARESETTINGMOD.0\nBY SOFTWARE\nOR DUE TO\nBUS-OFF\nMode MOD.7 to5 − reserved 0 (reserved) 0 (reserved)\nMOD.4 SM Sleep Mode 0 (wake-up) 0 (wake-up)MOD.3 AFM Acceptance Filter Mode 0 (dual) XMOD.2 STM Self Test Mode 0 (normal) XMOD.1 LOM Listen Only Mode 0 (normal) XMOD.0 RM Reset Mode 1 (present) 1 (present)\nCommand CMR.7 to5 − reserved 0 (reserved) 0 (reserved)\nCMR.4 SRR Self Reception Request 0 (absent) 0 (absent)CMR.3 CDO Clear Data Overrun 0 (no action) 0 (no action)CMR.2 RRB Release Receive Buffer 0 (no action) 0 (no action)CMR.1 AT Abort Transmission 0 (absent) 0 (absent)CMR.0 TR Transmission Request 0 (absent) 0 (absent)\nStatus SR.7 BS Bus Status 0 (bus-on) X\nSR.6 ES Error Status 0 (ok) XSR.5 TS Transmit Status 1 (wait idle) 1 (wait idle)SR.4 RS Receive Status 1 (wait idle) 1 (wait idle)SR.3 TCS Transmission Complete\nStatus1 (complete) X\nSR.2 TBS Transmit Buffer Status 1 (released) 1 (released)\nSR.1 DOS Data Overrun Status 0 (absent) 0 (absent)SR.0 RBS Receive Buffer Status 0 (empty) 0 (empty)\nInterrupt IR.7 BEI Bus Error Interrupt 0 (reset) 0 (reset)\nIR.6 ALI Arbitration Lost Interrupt 0 (reset) 0 (reset)IR.5 EPI Error Passive Interrupt 0 (reset) 0 (reset)IR.4 WUI Wake-Up Interrupt 0 (reset) 0 (reset)IR.3 DOI Data Overrun Interrupt 0 (reset) 0 (reset)IR.2 EI Error Warning Interrupt 0 (reset) X; note 3IR.1 TI Transmit Interrupt 0 (reset) 0 (reset)IR.0 RI Receive Interrupt 0 (reset) 0 (reset)\n2000Jan 04 24Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nInterrupt\nenableIER.7 BEIE Bus Error Interrupt\nEnableXX\nIER.6 ALIE ArbitrationLostInterrupt\nEnableXX\nIER.5 EPIE Error Passive Interrupt\nEnableXX\nIER.4 WUIE Wake-Up Interrupt\nEnableXX\nIER.3 DOIE Data Overrun Interrupt\nEnableXX\nIER.2 EIE Error Warning Interrupt\nEnableXX\nIER.1 TIE Transmit Interrupt\nEnableXX\nIER.0 RIE Receive Interrupt Enable X X\nBus timing 0 BTR0.7 SJW.1 Synchronization Jump\nWidth 1XX\nBTR0.6 SJW.0 Synchronization Jump\nWidth 0XX\nBTR0.5 BRP.5 Baud Rate Prescaler 5 X X\nBTR0.4 BRP.4 Baud Rate Prescaler 4 X XBTR0.3 BRP.3 Baud Rate Prescaler 3 X XBTR0.2 BRP.2 Baud Rate Prescaler 2 X XBTR0.1 BRP.1 Baud Rate Prescaler 1 X XBTR0.0 BRP.0 Baud Rate Prescaler 0 X X\nBus timing 1 BTR1.7 SAM Sampling X X\nBTR1.6 TSEG2.2 Time Segment 2.2 X XBTR1.5 TSEG2.1 Time Segment 2.1 X XBTR1.4 TSEG2.0 Time Segment 2.0 X XBTR1.3 TSEG1.3 Time Segment 1.3 X XBTR1.2 TSEG1.2 Time Segment 1.2 X XBTR1.1 TSEG1.1 Time Segment 1.1 X XBTR1.0 TSEG1.0 Time Segment 1.0 X XREGISTER BIT SYMBOL NAMEVALUE\nRESET BY\nHARDWARESETTINGMOD.0\nBY SOFTWARE\nOR DUE TO\nBUS-OFF\n2000Jan 04 25Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nOutput control OCR.7 OCTP1 Output Control\nTransistor P1XX\nOCR.6 OCTN1 Output Control\nTransistor N1XX\nOCR.5 OCPOL1 Output Control Polarity 1 X X\nOCR.4 OCTP0 Output Control\nTransistor P0XX\nOCR.3 OCTN0 Output Control\nTransistor N0XX\nOCR.2 OCPOL0 Output Control Polarity 0 X X\nOCR.1 OCMODE1 Output Control Mode 1 X XOCR.0 OCMODE0 Output Control Mode 0 X X\nArbitration lost\ncapture− ALC Arbitration Lost Capture 0 X\nError code\ncapture− ECC Error Code Capture 0 X\nError warning\nlimit− EWLR Error Warning Limit\nRegister96 X\nRX error\ncounter− RXERR Receive Error Counter 0 (reset) X; note 4\nTX error\ncounter− TXERR Transmit Error Counter 0 (reset) X; note 4\nTX buffer − TXB Transmit Buffer X X\nRXbuffer − RXB Receive Buffer X; note 5 X; note 5\nACR 0 to 3 − ACR0 toACR3 Acceptance Code\nRegistersXX\nAMR 0 to 3 − AMR0to AMR3 Acceptance Mask\nRegistersXX\nRX message\ncounter− RMC RX Message Counter 0 0\nRX buffer start\naddress− RBSA RX Buffer Start Address 00000000 X\nClock divider − CDR Clock Divider Register 00000000 Intel;\n00000101MotorolaXREGISTER BIT SYMBOL NAMEVALUE\nRESET BY\nHARDWARESETTINGMOD.0\nBY SOFTWARE\nOR DUE TO\nBUS-OFF\n2000Jan 04 26Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. X means that the value of these registers or bits is not influenced.2. Remarks in brackets explain functional meaning.3. On bus-off the error warning interrupt is set, if enabled.4. Iftheresetmodewasenteredduetoabus-offcondition,thereceiveerrorcounterisclearedandthetransmiterror\ncounter is initialized to 127 to count-down the CAN-defined bus-off recovery time consisting of 128 occurrences of11 consecutive recessive bits.\n5. Internal read/write pointers of the RXFIFO are reset to their initial values. A subsequent read access to the RXB\nwould show undefined data values (parts of old messages).Ifamessageistransmitted,thismessageiswritteninparalleltothereceivebuffer.Areceiveinterruptisgeneratedonly if this transmission was forced by the self reception request. So, even if the receive buffer is empty, the lasttransmitted message may be read from the receive buffer until it is overwritten by the next received or transmittedmessage.Uponahardwarereset,theRXFIFOpointersareresettothephysicalRAMaddress‘0’.SettingCR.0bysoftwareordue to the bus-off event will reset the RXFIFO pointers to the currently valid FIFO start address (RBSA register)which is different from the RAM address ‘0’ after the first release receive buffer command.\n6.4.3 M\nODEREGISTER(MOD)\nThe contents of the mode register are used to change the behaviour of the CAN controller. Bits may be set or reset by\nthe CPU which uses the control register as a read/write memory. Reserved bits are read as logic 0.\nTable 12 Bit interpretation of the mode register (MOD); CAN address ‘0’\nBIT SYMBOL NAME VALUE FUNCTION\nMOD.7 −− − reserved\nMOD.6 −− − reserved\nMOD.5 −− − reserved\nMOD.4 SM Sleep Mode; note 1 1 sleep; the CAN controller enters sleep mode if no\nCAN interrupt is pending and if there is no busactivity\n0 wake-up; the CAN controller wakes up if sleeping\nMOD.3 AFM Acceptance Filter Mode;\nnote 21 single; the single acceptance ﬁlter option is\nenabled (one ﬁlter with the length of 32 bit isactive)\n0 dual; the dual acceptance ﬁlter option is enabled\n(two ﬁlters, each with the length of 16 bit areactive)\nMOD.2 STM Self Test Mode; note 2 1 self test; in this mode a full node test is possible\nwithoutanyotheractivenodeonthebususingtheself reception request command; theCAN controller will perform a successfultransmission, even if there is no acknowledgereceived\n0 normal;anacknowledgeisrequiredforsuccessful\ntransmission\n2000Jan 04 27Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. The SJA1000willentersleepmodeifthesleepmodebitissettologic 1(sleep);thenthereisnobusactivityandno\ninterrupt is pending. Setting of SM with at least one of the previously mentioned exceptions valid will result in awake-upinterrupt.Aftersleepmodeisset,theCLKOUTsignalcontinuesuntilatleast15 bittimeshavepassed,toallow a host microcontroller clocked via this signal to enter its own standby mode before the CLKOUT goes LOW.TheSJA1000willwakeupwhenoneofthethreepreviouslymentionedconditionsisnegated:afterSMissetLOW(wake-up), there is bus activity or\nINT is driven LOW (active). On wake-up, the oscillator is started and a wake-up\ninterrupt is generated. A sleeping SJA1000 which wakes up due to bus activity will not be able to receive thismessageuntilitdetects11 consecutiverecessivebits(bus-freesequence).ItshouldbenotedthatsettingofSMisnot possible in reset mode. After clearing of reset mode, setting of SM is possible first, when bus-free is detectedagain.\n2. A write access to the bits MOD.1 to MOD.3 is only possible, if the reset mode is entered previously.3. This mode of operation forces the CAN controller to be error passive. Message transmission is not possible.\nThe listenonlymodecanbeusede.g.forsoftwaredrivenbitratedetectionand‘hotplugging’.Allotherfunctionscanbe used like in normal mode.\n4. Duringahardwareresetorwhenthebusstatusbitissettologic 1(bus-off),theresetmodebitisalsosettologic 1\n(present). If this bit is accessed by software, a value change will become visible and takes effect first with the nextpositiveedgeoftheinternalclockwhichoperatesathalfoftheexternaloscillatorfrequency.Duringanexternalresetthemicrocontrollercannotsettheresetmodebittologic 0(absent).Therefore,afterhavingsettheresetmodebittologic 1,themicrocontrollermustcheckthisbittoensurethattheexternalresetpinisnotbeingheldHIGH.Changesof the reset request bit are synchronized with the internal divided clock. Reading the reset request bit reflects thesynchronized status. After the reset mode bit is set to logic 0 the CAN controller will wait for:\na) Oneoccurrenceofbus-freesignal(11 recessivebits),iftheprecedingresethasbeencausedbyahardwarereset\nor a CPU-initiated reset.\nb) 128 occurrencesofbus-free,iftheprecedingresethasbeencausedbyaCAN controllerinitiatedbus-off,before\nre-entering the bus-on mode.MOD.1 LOM Listen Only Mode;\nnotes 2 and 31 listen only; in this mode the CAN controller would\ngive no acknowledge to the CAN-bus, even if amessage is received successfully; the errorcounters are stopped at the current value\n0 normal\nMOD.0 RM Reset Mode; note 4 1 reset; detection of a set reset mode bit results in\naborting the current transmission/reception of amessage and entering the reset mode\n0 normal;onthe‘1-to-0’ transitionoftheresetmode\nbit, the CAN controller returns to the operatingmodeBIT SYMBOL NAME VALUE FUNCTION\n2000Jan 04 28Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.4 C OMMANDREGISTER(CMR)\nA command bit initiates an action within the transfer layer of the CAN controller. This register is write only, all bits will\nreturnalogic 0whenbeingread.Betweentwocommandsatleastoneinternalclockcycleisneededinordertoproceed.Theinternal clock is half of the external oscillator frequency.\nTable 13 Bit interpretation of the command register (CMR); CAN address 1\nNotes\n1. Upon self reception request a message is transmitted and simultaneously received if the acceptance filter is set to\nthe corresponding identifier. A receive and a transmit interrupt will indicate correct self reception (see also self testmode in mode register).\n2. Setting the command bits CMR.0 and CMR.1 simultaneously results in sending the transmit message once.\nNore-transmission will be performed in the event of an error or arbitration lost (single-shot transmission).SettingthecommandbitsCMR.4andCMR.1simultaneouslyresultsinsendingthetransmitmessageonceusingtheself reception feature. No re-transmission will be performed in the event of an error or arbitration lost.SettingthecommandbitsCMR.0,CMR.1andCMR.4simultaneouslyresultsinsendingthetransmitmessageonceas described for CMR.0 and CMR.1.The moment the transmit status bit is set within the status register, the internal transmission request bit is clearedautomatically.Setting CMR.0 and CMR.4 simultaneously will ignore the set CMR.4 bit.\n3. Thiscommandbitisusedtoclearthedataoverrunconditionindicatedbythedataoverrunstatusbit.Aslongasthe\ndata overrun status bit is set no further data overrun interrupt is generated.\n4. After reading the contents of the receive buffer, the CPU can release this memory space in the RXFIFO by setting\nthereleasereceivebufferbittologic 1.Thismayresultinanothermessagebecomingimmediatelyavailablewithinthe receive buffer. If there is no other message available, the receive interrupt bit is reset.BIT SYMBOL NAME VALUE FUNCTION\nCMR.7 − reserved −−\nCMR.6 − reserved −−\nCMR.5 − reserved −−\nCMR.4 SRR Self Reception Request;\nnotes 1 and 21 present; a message shall be transmitted and\nreceived simultaneously\n0 − (absent)\nCMR.3 CDO Clear Data Overrun;\nnote 31 clear; the data overrun status bit is cleared\n0 − (no action)\nCMR.2 RRB Release Receive Buffer;\nnote 41 released; the receive buffer, representing the\nmessage memory space in the RXFIFO isreleased\n0 − (no action)\nCMR.1 AT Abort Transmission;\nnotes 5 and 21 present; if not already in progress, a pending\ntransmission request is cancelled\n0 − (absent)\nCMR.0 TR Transmission Request;\nnotes 6 and 21 present; a message shall be transmitted\n0 − (absent)\n2000Jan 04 29Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n5. TheaborttransmissionbitisusedwhentheCPUrequiresthesuspensionofthepreviouslyrequestedtransmission,\ne.g.totransmitamoreurgentmessagebefore.Atransmissionalreadyinprogressisnotstopped.Inordertoseeifthe original message has been either transmitted successfully or aborted, the transmission complete status bitshould be checked. This should be done after the transmit buffer status bit has been set to logic 1 or a transmitinterrupt has been generated.Itshouldbenotedthatatransmitinterruptisgeneratedevenifthemessagewasabortedbecausethetransmitbufferstatus bit changes to ‘released’.\n6. If the transmission request was set to logic 1 in a previous command, it cannot be cancelled by setting the\ntransmission request bit to logic 0. The requested transmission may be cancelled by setting the abort transmissionbit to logic 1.\n6.4.5 S\nTATUSREGISTER(SR)\nThecontentofthestatusregisterreflectsthestatusoftheCAN controller.ThestatusregisterappearstotheCPUasa\nread only memory.\nTable 14 Bit interpretation of the status register (SR); CAN address 2\nBIT SYMBOL NAME VALUE FUNCTION\nSR.7 BS Bus Status; note 1 1 bus-off; the CAN controller is not involved in bus\nactivities\n0 bus-on; the CAN controller is involved in bus\nactivities\nSR.6 ES Error Status; note 2 1 error; at least one of the error counters has\nreached or exceeded the CPU warning limitdeﬁned by the Error Warning Limit Register(EWLR)\n0 ok;botherrorcountersarebelowthewarninglimit\nSR.5 TS Transmit Status; note 3 1 transmit; the CAN controller is transmitting a\nmessage\n0 idle\nSR.4 RS Receive Status; note 3 1 receive; the CAN controller is receiving a\nmessage\n0 idle\nSR.3 TCS Transmission Complete\nStatus; note 41 complete; last requested transmission has been\nsuccessfully completed\n0 incomplete; previously requested transmission is\nnot yet completed\nSR.2 TBS Transmit Buffer Status;\nnote 51 released; the CPU may write a message into the\ntransmit buffer\n0 locked; the CPU cannot access the transmit\nbuffer; a message is either waiting fortransmission or is in the process of beingtransmitted\n2000Jan 04 30Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. When the transmit error counter exceeds the limit of 255, the bus status bit is set to logic 1 (bus-off), the\nCAN controllerwillsettheresetmodebittologic 1(present)andanerrorwarninginterruptisgenerated,ifenabled.Thetransmiterrorcounterissetto 127andthereceiveerrorcounteriscleared.ItwillstayinthismodeuntiltheCPUclears the reset mode bit. Once this is completed the CAN controller will wait the minimum protocol-defined time(128 occurrences of the bus-free signal) counting down the transmit error counter. After that the bus status bit iscleared(bus-on),theerrorstatusbitissettologic 0(ok),theerrorcountersareresetandanerrorwarninginterruptis generated, if enabled. Reading the TX error counter during this time gives information about the status of thebus-off recovery.\n2. Errors detected during reception or transmission will effect the error counters according to the CAN 2.0B protocol\nspecification. The error status bit is set when at least one of the error counters has reached or exceeded the CPUwarninglimit(EWLR).Anerrorwarninginterruptisgenerated,ifenabled.ThedefaultvalueofEWLRafterhardwarereset is 96.\n3. If both the receive status and the transmit status bits are logic 0 (idle) the CAN-bus is idle. If both bits are set the\ncontrolleriswaitingtobecomeidleagain.Afterahardwarereset11 consecutiverecessivebitshavetobedetecteduntil the idle status is reached. After bus-off this will take 128 of 11 consecutive recessive bits.\n4. Thetransmissioncompletestatusbitissettologic 0(incomplete)wheneverthetransmissionrequestbitortheself\nreception request bit is set to logic 1. The transmission complete status bit will remain at logic 0 until a message istransmitted successfully.\n5. If the CPU tries to write to the transmit buffer when the transmit buffer status bit is logic 0 (locked), the written byte\nwill not be accepted and will be lost without this being indicated.\n6. When a message that is to be received has passed the acceptance filter successfully, the CAN controller needs\nspaceintheRXFIFOtostorethemessagedescriptorandforeachdatabytewhichhasbeenreceived.Ifthereisnotenoughspacetostorethemessage,thatmessageisdroppedandthedataoverrunconditionisindicatedtotheCPUatthemomentthismessagebecomesvalid.Ifthismessageisnotcompletedsuccessfully(e.g.duetoanerror),nooverrun condition is indicated.\n7. AfterreadingallmessageswithintheRXFIFOandreleasingtheirmemoryspacewiththecommandreleasereceive\nbuffer this bit is cleared.SR.1 DOS Data Overrun Status;\nnote 61 overrun; a message was lost because there was\nnotenoughspaceforthatmessageintheRXFIFO\n0 absent; no data overrun has occurred since the\nlast clear data overrun command was given\nSR.0 RBS Receive Buffer Status;\nnote 71 full;oneormorecompletemessagesareavailable\nin the RXFIFO\n0 empty; no message is availableBIT SYMBOL NAME VALUE FUNCTION\n2000Jan 04 31Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.6 I NTERRUPT REGISTER(IR)\nTheinterruptregisterallowstheidentificationofaninterruptsource.Whenoneormorebitsofthisregisterareset,aCAN\ninterruptwillbeindicatedtotheCPU.AfterthisregisterisreadbytheCPUallbitsareresetexceptforthereceiveinterruptbit.\nThe interrupt register appears to the CPU as a read only memory.\nTable 15 Bit interpretation of the interrupt register (IR); CAN address 3\nBIT SYMBOL NAME VALUE FUNCTION\nIR.7 BEI Bus Error Interrupt 1 set;thisbitissetwhentheCAN controllerdetects\nan error on the CAN-bus and the BEIE bit is setwithin the interrupt enable register\n0 reset\nIR.6 ALI Arbitration Lost Interrupt 1 set;thisbitissetwhentheCANcontrollerlostthe\narbitration and becomes a receiver and the ALIEbit is set within the interrupt enable register\n0 reset\nIR.5 EPI Error Passive Interrupt 1 set;thisbitissetwhenevertheCANcontrollerhas\nreached the error passive status (at least oneerrorcounterexceedstheprotocol-deﬁnedlevelof127)oriftheCANcontrollerisintheerrorpassivestatusandenterstheerroractivestatusagainandthe EPIE bit is set within the interrupt enableregister\n0 reset\nIR.4 WUI Wake-Up Interrupt;\nnote 11 set; this bit is set when the CAN controller is\nsleeping and bus activity is detected and theWUIE bit is set within the interrupt enable register\n0 reset\nIR.3 DOI Data Overrun Interrupt 1 set;thisbitissetona‘0-to-1’transitionofthedata\noverrun status bit and the DOIE bit is set withinthe interrupt enable register\n0 reset\nIR.2 EI Error Warning Interrupt 1 set; this bit is set on every change (set and clear)\nofeithertheerrorstatusorbusstatusbitsandtheEIE bit is set within the interrupt enable register\n0 reset\nIR.1 TI Transmit Interrupt 1 set; this bit is set whenever the transmit buffer\nstatus changes from ‘0-to-1’ (released) and theTIE bit is set within the interrupt enable register\n0 reset\nIR.0 RI Receive Interrupt; note 2 1 set; this bit is set while the receive FIFO is not\nempty and the RIE bit is set within the interruptenable register\n0 reset; no more message is available within the\nRXFIFO\n2000Jan 04 32Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. Awake-upinterruptisalsogenerated,iftheCPUtriestosetthesleepbitwhiletheCANcontrollerisinvolvedinbus\nactivities or a CAN interrupt is pending.\n2. The behaviour of this bit is equivalent to that of the receive buffer status bit with the exception, that RI depends on\nthe corresponding interrupt enable bit (RIE). So the receive interrupt bit is not cleared upon a read access to theinterruptregister.Givingthecommand‘releasereceivebuffer’willclearRItemporarily.Ifthereisanothermessageavailable within the FIFO after the release command, RI is set again. Otherwise RI remains cleared.\n6.4.7 I\nNTERRUPT ENABLEREGISTER(IER)\nThe register allows to enable different types of interrupt sources which are indicated to the CPU.The interrupt enable register appears to the CPU as a read/write memory.\nTable 16 Bit interpretation of the interrupt enable register (IER); CAN address 4\nBIT SYMBOL NAME VALUE FUNCTION\nIER.7 BEIE Bus Error Interrupt\nEnable1 enabled; if an bus error has been detected, the\nCAN controller requests the respective interrupt\n0 disabled\nIER.6 ALIE Arbitration Lost Interrupt\nEnable1 enabled; if the CAN controller has lost arbitration,\nthe respective interrupt is requested\n0 disabled\nIER.5 EPIE Error Passive Interrupt\nEnable1 enabled; if the error status of the CAN controller\nchanges from error active to error passive or viceversa, the respective interrupt is requested\n0 disabled\nIER.4 WUIE Wake-Up Interrupt\nEnable1 enabled; if the sleeping CAN controller wakes up,\nthe respective interrupt is requested\n0 disabled\nIER.3 DOIE Data Overrun Interrupt\nEnable1 enabled; if the data overrun status bit is set (see\nstatus register; Table 14), the CAN controllerrequests the respective interrupt\n0 disabled\nIER.2 EIE Error Warning Interrupt\nEnable1 enabled; if the error or bus status change (see\nstatus register; Table 14), the CAN controllerrequests the respective interrupt\n0 disabled\nIER.1 TIE TransmitInterruptEnable 1 enabled; when a message has been successfully\ntransmitted or the transmit buffer is accessibleagain(e.g.afteranaborttransmissioncommand),the CAN controller requests the respectiveinterrupt\n0 disabled\nIER.0 RIE Receive Interrupt\nEnable; note 11 enabled;whenthereceivebufferstatusis‘full’the\nCAN controller requests the respective interrupt\n0 disabled\n2000Jan 04 33Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNote\n1. Thereceiveinterruptenablebithasdirectinfluencetothereceiveinterruptbitandtheexternalinterruptoutput INT.\nIf RIE is cleared, the external INT pin will become HIGH immediately, if there is no other interrupt pending.\n6.4.8 A RBITRATION LOSTCAPTURE REGISTER (ALC)\nThisregistercontainsinformationaboutthebitpositionoflosingarbitration.Thearbitrationlostcaptureregisterappears\nto the CPU as a read only memory. Reserved bits are read as logic 0.\nTable 17 Bit interpretation of the arbitration lost capture register (ALC); CAN address 11\nOn arbitration lost, the corresponding arbitration lost interrupt is forced, if enabled. At the same time, the current bit\nposition of the bit stream processor is captured into the arbitration lost capture register. The content within this registeris fixed until the users software has read out its contents once. The capture mechanism is then activated again.\nThecorrespondinginterruptflaglocatedintheinterruptregisterisclearedduringthereadaccesstotheinterruptregister.\nA new arbitration lost interrupt is not possible until the arbitration lost capture register is read out once.BIT SYMBOL NAME VALUE FUNCTION\nALC.7to\nALC.5− reserved For value and function see Table 18\nALC.4 BITNO4 bit number4\nALC.3 BITNO3 bit number3ALC.2 BITNO2 bit number2ALC.1 BITNO1 bit number1ALC.0 BITNO0 bit number0\nFig.5  Arbitration lost bit number interpretation.handbook, full pagewidth\nMGK619ID.28ID.27ID.26ID.25ID.24ID.23ID.22ID.21ID.20ID.19ID.18SRTRIDE\n00standard frame and\nextended frame messages\nextended frame\nmessages01 02 03 04 05 06 07 08 09 10 11 12\nID.16ID.15ID.14ID.13ID.12ID.11ID.10ID.9ID.8ID.7ID.6ID.5ID.4\n14ID.17\n13start of frame\n15 16 17 18 19 20 21 22 23 24 25 26ID.3ID.2ID.1ID.0RTR\n27 28 29 30 31\n2000Jan 04 34Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.6  Example of arbitration lost bit number interpretation; result: ALC = 08.handbook, full pagewidth\nMGK620ID.28 ID.27 ID.26 ID.25 ID.24 ID.23 ID.22 ID.21 ID.20 ID.19 ID.18 SRTR IDETX\nRXstart of frame arbitration lost\n2000Jan 04 35Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 18 Function of bits 4 to 0 of the arbitration lost capture register\nNotes\n1. Binary coded frame bit number where arbitration was lost.2. Bit RTR for standard frame messages.3. Extended frame messages only.BITS\n(1)DECIMAL\nVALUEFUNCTION\nALC.4 ALC.3 ALC.2 ALC.1 ALC.0\n0 0 0 0 0 00 arbitration lost in bit 1 of identiﬁer\n0 0 0 0 1 01 arbitration lost in bit 2 of identiﬁer0 0 0 1 0 02 arbitration lost in bit 3 of identiﬁer0 0 0 1 1 03 arbitration lost in bit 4 of identiﬁer0 0 1 0 0 04 arbitration lost in bit 5 of identiﬁer0 0 1 0 1 05 arbitration lost in bit 6 of identiﬁer0 0 1 1 0 06 arbitration lost in bit 7 of identiﬁer0 0 1 1 1 07 arbitration lost in bit 8 of identiﬁer0 1 0 0 0 08 arbitration lost in bit 9 of identiﬁer0 1 0 0 1 09 arbitration lost in bit 10 of identiﬁer0 1 0 1 0 10 arbitration lost in bit 11 of identiﬁer0 1 0 1 1 11 arbitration lost in bit SRTR; note 20 1 1 0 0 12 arbitration lost in bit IDE0 1 1 0 1 13 arbitration lost in bit 12 of identiﬁer; note 30 1 1 1 0 14 arbitration lost in bit 13 of identiﬁer; note 30 1 1 1 1 15 arbitration lost in bit 14 of identiﬁer; note 31 0 0 0 0 16 arbitration lost in bit 15 of identiﬁer; note 31 0 0 0 1 17 arbitration lost in bit 16 of identiﬁer; note 31 0 0 1 0 18 arbitration lost in bit 17 of identiﬁer; note 31 0 0 1 1 19 arbitration lost in bit 18 of identiﬁer; note 31 0 1 0 0 20 arbitration lost in bit 19 of identiﬁer; note 31 0 1 0 1 21 arbitration lost in bit 20 of identiﬁer; note 31 0 1 1 0 22 arbitration lost in bit 21 of identiﬁer; note 31 0 1 1 1 23 arbitration lost in bit 22 of identiﬁer; note 31 1 0 0 0 24 arbitration lost in bit 23 of identiﬁer; note 31 1 0 0 1 25 arbitration lost in bit 24 of identiﬁer; note 31 1 0 1 0 26 arbitration lost in bit 25 of identiﬁer; note 31 1 0 1 1 27 arbitration lost in bit 26 of identiﬁer; note 31 1 1 0 0 28 arbitration lost in bit 27 of identiﬁer; note 31 1 1 0 1 29 arbitration lost in bit 28 of identiﬁer; note 31 1 1 1 0 30 arbitration lost in bit 29 of identiﬁer; note 31 1 1 1 1 31 arbitration lost in bit RTR; note 3\n2000Jan 04 36Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.9 E RRORCODECAPTURE REGISTER (ECC)\nThis register contains information about the type and location of errors on the bus. The error code capture register\nappears to the CPU as a read only memory.\nTable 19 Bit interpretation of the error code capture register (ECC); CAN address 12\nNotes\n1. For bit interpretation of bits ECC.7 and ECC.6 see Table 20.2. For bit interpretation of bits ECC.4 toECC.0 see Table 21.\nTable 20 Bit interpretation of bits ECC.7 and ECC.6BIT SYMBOL NAME VALUE FUNCTION\nECC.7\n(1)ERRC1 Error Code 1 −−\nECC.6(1)ERRC0 Error Code 0 −−\nECC.5 DIR Direction 1 RX; error occurred during reception\n0 TX; error occurred during transmission\nECC.4(2)SEG4 Segment 4 −−\nECC.3(2)SEG3 Segment 3 −−\nECC.2(2)SEG2 Segment 2 −−\nECC.1(2)SEG1 Segment 1 −−\nECC.0(2)SEG0 Segment 0 −−\nBIT ECC.7 BIT ECC.6 FUNCTION\n0 0 bit error\n0 1 form error1 0 stuff error1 1 other type of error\n2000Jan 04 37Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 21 Bit interpretation of bits ECC.4 to ECC.0; note 1\nNote\n1. Bit settings reflect the current frame segment to distinguish between different error events.BIT ECC.4 BIT ECC.3 BIT ECC.2 BIT ECC.1 BIT ECC.0 FUNCTION\n00011 start of frame\n00010 I D . 2 8 t o I D . 2 100110 I D . 2 0 t o I D . 1 800100 bit SRTR\n00101 bit IDE\n00111 I D . 1 7 t o I D . 1 301111 I D . 1 2 t o I D . 501110 I D . 4 t o I D . 001100 bit RTR\n01101 reserved bit 1\n01001 reserved bit 0\n01011 data length code\n01010 data ﬁeld\n01000 CRC sequence\n11000 CRC delimiter\n11001 a c k n o wledge slot\n11011 a c k n o wledge delimiter\n11010 end of frame\n10010 intermission\n10001 active error ﬂag\n10110 passive error ﬂag\n10011 tolerate dominant bits\n10111 error delimiter\n11100 o v e r load ﬂag\nIfabuserroroccurs,thecorrespondingbuserrorinterrupt\nisalwaysforced,ifenabled.Atthesametime,thecurrentposition of the bit stream processor is captured into theerrorcodecaptureregister.Thecontentwithinthisregisteris fixed until the users software has read out its contentonce. The capture mechanism is then activated again.\nThe corresponding interrupt flag located in the interrupt\nregister is cleared during the read access to the interruptregister.Anewbuserrorinterruptisnotpossibleuntilthecapture register is read out once.6.4.10 E\nRRORWARNINGLIMITREGISTER(EWLR)\nTheerrorwarninglimitcanbedefinedwithinthisregister.\nThe default value (after hardware reset) is 96. In resetmode this register appears to the CPU as a read/writememory. In operating mode it is read only.\nNote,thatacontentchangeoftheEWLRisonlypossible,\nif the reset mode was entered previously. An error statuschange (see status register; Table 14) and an errorwarninginterruptforcedbythenewregistercontentwillnotoccur until the reset mode is cancelled again.\n2000Jan 04 38Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 22 Bit interpretation of the error warning limit register (EWLR); CAN address 13\n6.4.11 RXE RRORCOUNTERREGISTER(RXERR)\nTheRXerrorcounterregisterreflectsthecurrentvalueofthereceiveerrorcounter.Afterahardwareresetthisregister\nisinitializedtologic 0.InoperatingmodethisregisterappearstotheCPUasareadonlymemory.Awriteaccesstothisregister is possible only in reset mode.\nIfabus-offeventoccurs,theRXerrorcounterisinitializedtologic 0.Thetimebus-offisvalid,writingtothisregisterhas\nno effect.\nNote, that a CPU-forced content change of the RX error counter is only possible, if the reset mode was entered\npreviously. An error status change (see status register; Table 14), an error warning or an error passive interrupt forcedby the new register content will not occur, until the reset mode is cancelled again.\nTable 23 Bit interpretation of the RX error counter register (RXERR); CAN address 14\n6.4.12 TXE\nRRORCOUNTERREGISTER(TXERR)\nThe TX error counter register reflects the current value of the transmit error counter.In operating mode this register appears to the CPU as a read only memory. A write access to this register is possible\nonly in reset mode. After a hardware reset this register is initialized to logic 0. If a bus-off event occurs, the TX errorcounterisinitializedto 127tocounttheminimumprotocol-definedtime(128 occurrencesofthebus-freesignal).Readingthe TX error counter during this time gives information about the status of the bus-off recovery.\nIfbus-offisactive,awriteaccesstoTXERRintherangefrom0 to254clearsthebus-offflagandthecontrollerwillwait\nfor one occurrence of 11 consecutive recessive bits (bus-free) after the reset mode has been cleared.\nTable 24 Bit interpretation of the TX error counter register (TXERR); CAN address 15\nWriting 255toTXERRallowstoinitiateaCPU-drivenbus-offevent.ItshouldbenotedthataCPU-forcedcontentchange\nof the TX error counter is only possible, if the reset mode was entered previously. An error or bus status change (seestatusregister;Table 14),anerrorwarningoranerrorpassiveinterruptforcedbythenewregistercontentwillnotoccuruntiltheresetmodeiscancelledagain.Afterleavingtheresetmode,thenewTXcountercontentisinterpretedandthebus-offeventisperformedinthesameway,asifitwasforcedbyabuserrorevent.Thatmeans,thattheresetmodeisenteredagain,theTXerrorcounterisinitializedto 127,theRXcounterisclearedandallconcernedstatusandinterruptregister bits are set.\nClearingofresetmodenowwillperformtheprotocol-definedbus-offrecoverysequence(waitingfor128 occurrencesof\nthe bus-free signal).\nIftheresetmodeisenteredagainbeforetheendofbus-offrecovery(TXERR > 0),bus-offkeepsactiveandTXERRis\nfrozen.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nEWL.7 EWL.6 EWL.5 EWL.4 EWL.3 EWL.2 EWL.1 EWL.0\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nRXERR.7 RXERR.6 RXERR.5 RXERR.4 RXERR.3 RXERR.2 RXERR.1 RXERR.0\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nTXERR.7 TXERR.6 TXERR.5 TXERR.4 TXERR.3 TXERR.2 TXERR.1 TXERR.0\n2000Jan 04 39Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.13 T RANSMIT BUFFER\nThe global layout of the transmit buffer is shown in Fig.7.\nOne has to distinguish between the Standard FrameFormat (SFF) and the Extended Frame Format (EFF)configuration. The transmit buffer allows the definition ofone transmit message with up to eight data bytes.\n6.4.13.1 Transmit buffer layout\nThetransmitbufferlayoutissubdividedintodescriptoranddatafieldswherethefirstbyteofthedescriptorfieldistheframe information byte (frame information). It describestheframeformat(SFForEFF),remoteordataframeandthedata length.Twoidentifier bytes forSFForfourbytesfor EFF messages follow. The data field contains up toeight data bytes.Thetransmitbufferhasalengthof13 bytesandislocated\nin the CAN address range from 16 to28.\nNote, that a direct access to the transmit buffer RAM is\npossible using the CAN address space from 96 to108.This RAM area is reserved for the transmit buffer.Thethree following bytes may be used for generalpurposes (CAN address 109, 110 and 111).\nFig.7  Transmit buffer layout for standard and extended frame format configurations.a.  Standard frame format. b.  Extended frame format.handbook, full pagewidth\nMGK621CAN address 16TX frame information\n17TX identifier 1\n18TX identifier 2\n19TX data byte 1\n20TX data byte 2\n21TX data byte 3\n22TX data byte 4\n23TX data byte 5\n24TX data byte 6\n25TX data byte 7\n26TX data byte 8\n27 unused\n28 unusedCAN address 16TX frame information\n17TX identifier 1\n18TX identifier 2\n19TX identifier 3\n20TX identifier 4\n21TX data byte 1\n22TX data byte 2\n23TX data byte 3\n24TX data byte 4\n25TX data byte 5\n26TX data byte 6\n27TX data byte 7\n28TX data byte 8\n6.4.13.2 Descriptor ﬁeld of the transmit buffer\nThe bit layout of the transmit buffer is represented in\nTables 25 to 27 for SFF and Tables 28 to 32 for EFF.Thegiven configuration is chosen to be compatible withthe receive buffer layout (see Section 6.4.14.1).\n2000Jan 04 40Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 25 TX frame information (SFF); CAN address 16\nNotes\n1. Frame format.2. Remote transmission request.3. Don’tcare;recommendedtobecompatibletoreceivebuffer(0)incaseofusingtheselfreceptionfacility(selftest).4. Data length code bit.\nTable 26 TX identiﬁer1 (SFF); CAN address 17; note 1\nNote\n1. ID.X means identifier bit X.\nTable 27 TX identiﬁer2 (SFF); CAN address 18; note 1\nNotes\n1. ID.X means identifier bit X.2. Don’t care; recommended to be compatible to receive buffer (RTR) in case of using the self reception facility (self\ntest).\n3. Don’tcare;recommendedtobecompatibletoreceivebuffer(0)incaseofusingtheselfreceptionfacility(selftest).\nTable 28 TX frame information (EFF); CAN address 16\nNotes\n1. Frame format.2. Remote transmission request.3. Don’tcare;recommendedtobecompatibletoreceivebuffer(0)incaseofusingtheselfreceptionfacility(selftest).4. Data length code bit.\nTable 29 TX identiﬁer1 (EFF); CAN address 17; note 1\nNote\n1. ID.X means identifier bit X.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nFF\n(1) RTR(2) X(3) X(3) DLC.3(4)DLC.2(4)DLC.1(4)DLC.0(4)\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.28 ID.27 ID.26 ID.25 ID.24 ID.23 ID.22 ID.21\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.20 ID.19 ID.18 X(2) X(3) X(3) X(3) X(3)\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nFF(1)RTR(2)X(3)X(3)DLC.3(4)DLC.2(4)DLC.1(4)DLC.0(4)\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.28 ID.27 ID.26 ID.25 ID.24 ID.23 ID.22 ID.21\n2000Jan 04 41Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 30 TX identiﬁer2 (EFF); CAN address 18; note 1\nNote\n1. ID.X means identifier bit X.\nTable 31 TX identiﬁer3 (EFF); CAN address 19; note 1\nNote\n1. ID.X means identifier bit X.\nTable 32 TX identiﬁer4 (EFF); CAN address 20; note 1\nNotes\n1. ID.X means identifier bit X.2. Don’t care; recommended to be compatible to receive buffer (RTR) in case of using the self reception facility (self\ntest).\n3. Don’tcare;recommendedtobecompatibletoreceivebuffer(0)incaseofusingtheselfreceptionfacility(selftest).\nTable 33 Frame Format (FF) and Remote Transmission Request (RTR) bitsBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.20 ID.19 ID.18 ID.17 ID.16 ID.15 ID.14 ID.13\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.12 ID.11 ID.10 ID.9 ID.8 ID.7 ID.6 ID.5\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.4 ID.3 ID.2 ID.1 ID.0 X\n(2) X(3) X(3)\nBIT VALUE FUNCTION\nFF 1 EFF; extended frame format will be transmitted by the CAN controller\n0 SFF; standard frame format will be transmitted by the CANcontroller\nRTR 1 remote; remote frame will be transmitted by the CAN controller\n0 data; data frame will be transmitted by the CAN controller\n6.4.13.3 Data Length Code (DLC)\nThe number of bytes in the data field of a message is\ncoded by the data length code. At the start of a remoteframetransmissionthedatalengthcodeisnotconsidereddue to the RTR bit being logic 1 (remote). This forces thenumber of transmitted/received data bytes to be 0.Nevertheless, the data length code must be specifiedcorrectlytoavoidbuserrors,iftwoCAN controllersstartaremote frame transmission with the same identifiersimultaneously.\nThe range of the data byte count is 0 to 8 bytes and is\ncoded as follows:\nDataByteCount = 8 ×DLC.3 +4 ×DLC.2 +2 ×DLC.1 +\nDLC.0Forreasonsofcompatibilitynodatalengthcode >8should\nbeused.Ifavalue >8isselected,8 bytesaretransmittedin the data frame with the Data Length Code specified inDLC.\n6.4.13.4 Identiﬁer (ID)\nInStandardFrameFormat(SFF)theidentifierconsistsof11 bits (ID.28 toID.18) and in Extended Frame Format(EFF) messages the identifier consists of 29 bits(ID.28to ID.0). ID.28 is the most significant bit, which istransmittedfirstonthebusduringthearbitrationprocess.The identifier acts as the message’s name, used in areceiver for acceptance filtering, and also determines thebus access priority during the arbitration process.\n2000Jan 04 42Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nThelower the binary value of the identifier the higher the\npriority. This is due to the larger number of leadingdominant bits during arbitration.\n6.4.13.5 Data ﬁeld\nThe number of transferred data bytes is defined by thedata length code. The first bit transmitted is the mostsignificant bit of data byte 1 at CAN address 19 (SFF) orCAN address 21 (EFF).6.4.14 R\nECEIVE BUFFER\nThegloballayoutofthereceivebufferisverysimilartothe\ntransmit buffer described in the previous section.Thereceive buffer is the accessible part of the RXFIFOand is located in the range between CAN address16 and28. Each message is subdivided into a descriptorand a data field.\nFig.8  Example of the message storage within the RXFIFO.handbook, full pagewidth\nMGK622release\nreceive\nbuffer\ncommand64-byte\nFIFO\nincoming\nmessagesmessage 3\nmessage 2\nmessage 125\n24\n23\n22\n21\n20\n19\n18\n17\n1628\n27\n26\nreceive\nbuffer\nwindow\nCAN address\nMessage 1 is now available in the receive buffer.\n6.4.14.1 Descriptor ﬁeld of the receive buffer\nThe bit layout of the receive buffer is represented in Tables 34 to 36 for SFF and Tables 37 to41 for EFF. The given\nconfiguration is chosen to be compatible with the transmit buffer layout (see Section 6.4.13.2).\nTable 34 RX frame information (SFF); CAN address 16\nNotes\n1. Frame format.2. Remote transmission request.3. Data length code bit.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nFF\n(1) RTR(2) 0 0 DLC.3(3)DLC.2(3)DLC.1(3)DLC.0(3)\n2000Jan 04 43Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 35 RX identiﬁer 1 (SFF); CAN address 17; note 1\nNote\n1. ID.X means identifier bit X.\nTable 36 RX identiﬁer 2 (SFF); CAN address 18; note 1\nNotes\n1. ID.X means identifier bit X.2. Remote transmission request.\nTable 37 RX frame information (EFF); CAN address 16\nNotes\n1. Frame format.2. Remote transmission request.3. Data length code bit.\nTable 38 RX identiﬁer 1 (EFF); CAN address 17; note 1\nNote\n1. ID.X means identifier bit X.\nTable 39 RX identiﬁer 2 (EFF); CAN address 18; note 1\nNote\n1. ID.X means identifier bit X.\nTable 40 RX identiﬁer 3 (EFF); CAN address 19; note 1\nNote\n1. ID.X means identifier bit X.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.28 ID.27 ID.26 ID.25 ID.24 ID.23 ID.22 ID.21\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.20 ID.19 ID.18 RTR\n(2)0000\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nFF(1) RTR(2) 0 0 DLC.3(3)DLC.2(3)DLC.1(3)DLC.0(3)\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.28 ID.27 ID.26 ID.25 ID.24 ID.23 ID.22 ID.21\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.20 ID.19 ID.18 ID.17 ID.16 ID.15 ID.14 ID.13\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.12 ID.11 ID.10 ID.9 ID.8 ID.7 ID.6 ID.5\n2000Jan 04 44Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 41 RX identiﬁer 4 (EFF); can address 20; note 1\nNotes\n1. ID.X means identifier bit X.2. Remote transmission request.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nID.4 ID.3 ID.2 ID.1 ID.0 RTR\n(2) 00\nRemark: the received data length code located in the\nframeinformationbyterepresentstherealsentdatalengthcode, which may be greater than 8 (depends on sender).Neverthelessthemaximumnumberofreceiveddatabytesis 8. This should be taken into account by reading amessage from the receive buffer.\nAs described in Fig.8 the RXFIFO has space for\n64 message bytes in total. It depends on the data lengthhowmanymessagescanfitinitatonetime.IfthereisnotenoughspaceforanewmessagewithintheRXFIFO,theCAN controller generates a data overrun condition themomentthismessagebecomesvalidandtheacceptancetest was positive. A message which is partly written intothe RXFIFO, when the data overrun situation occurs, isdeleted. This situation is indicated to the CPU via thestatus register and the data overrun interrupt, if enabled.\n6.4.15 A\nCCEPTANCE FILTER\nWiththehelpoftheacceptancefiltertheCAN controlleris\nabletoallowpassingofreceivedmessagestotheRXFIFOonly when the identifier bits of the received message areequal to the predefined ones within the acceptance filterregisters.\nThe acceptance filter is defined by the Acceptance Code\nRegisters (ACRn) and the Acceptance Mask Registers(AMRn). The bit patterns of messages to be received aredefined within the acceptance code registers.Thecorresponding acceptance mask registers allow todefine certain bit positions to be ‘don’t care’.\nTwo different filter modes are selectable within the mode\nregister (MOD.3, AFM; see Section 6.4.3):\n•Single filter mode (bit AFM is logic 1)\n•Dual filter mode (bit AFM is logic 0).6.4.15.1 Single ﬁlter conﬁguration\nInthisfilterconfigurationonelongfilter(4-bytes)couldbe\ndefined.Thebitcorrespondencesbetweenthefilterbytesand the message bytes depend on the currently receivedframe format.\nStandard frame:  if a standard frame format message is\nreceived,thecompleteidentifierincludingtheRTRbitandthe first two data bytes are used for acceptance filtering.MessagesmayalsobeacceptediftherearenodatabytesexistingduetoasetRTRbitorifthereisnoneoronlyonedatabytebecauseofthecorrespondingdatalengthcode.\nFor a successful reception of a message, all single bit\ncomparisons have to signal acceptance.Note, that the 4 least significant bits of AMR1 and ACR1arenotused.Inordertobecompatiblewithfutureproductsthese bits should be programmed to be ‘don’t care’ bysettingAMR1.3,AMR1.2,AMR1.1andAMR1.0tologic 1.\n2000Jan 04 45Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.9  Single filter configuration, receiving standard frame messages.DBX.Y means data byteX, bitY.handbook, full pagewidth\nMGK6247MSB LSB\n6543210CAN ADDRESS 16; ACR0\n7MSB LSB\n6543\nunused\nunused\n(1)210CAN ADDRESS 17; ACR1\n7MSB LSB\n6543210CAN ADDRESS 18; ACR2\n7MSB LSB\n6543210CAN ADDRESS 19; ACR3\n76543210CAN ADDRESS 20; AMR0\n76543210CAN ADDRESS 21; AMR1\n76543210CAN ADDRESS 22; AMR2\n76543210CAN ADDRESS 23; AMR3ID.28\nID.27\nID.26\nID.25\nID.24\nID.23\nID.22\nID.21\nID.20\nID.19\nID.18\nRTR\nDB1.7\nDB1.6\nDB1.5\nDB1.4\nDB1.3\nDB1.2\nDB1.1\nDB1.0\nDB2.7\nDB2.6\nDB2.5\nDB2.4\nDB2.3\nDB2.2\nDB2.1\nDB2.0\n&1= 1\nlogic 1 = accepted\nlogic 0 = not acceptedmessage bit\nacceptance code bit\nacceptance mask bitACR = Acceptance Code Register\nAMR = Acceptance Mask Register\nExtendedframe: ifanextendedframeformatmessageis\nreceived, the complete identifier including the RTR bit isused for acceptance filtering.\nFor a successful reception of a message, all single bit\ncomparisons have to signal acceptance.Itshouldbenotedthatthe2 leastsignificantbitsofAMR3\nand ACR3 are not used. In order to be compatible withfuture products these bits should be programmed to be‘don’t care’ by setting AMR3.1 and AMR3.0 to logic 1.\n2000Jan 04 46Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.10  Single filter configuration, receiving extended frame messages.handbook, full pagewidth\nMGK625 7MSB LSB\n6543210CAN ADDRESS 16; ACR0\n7MSB LSB\n6543\nunused\nunused210CAN ADDRESS 17; ACR1\n7MSB LSB\n6543210CAN ADDRESS 18; ACR2\n7MSB LSB\n6543210CAN ADDRESS 19; ACR3\n76543210CAN ADDRESS 20; AMR0\n76543210CAN ADDRESS 21; AMR1\n76543210CAN ADDRESS 22; AMR2\n76543210CAN ADDRESS 23; AMR3ID.28\nID.27\nID.26\nID.25\nID.24\nID.23\nID.22\nID.21\nID.20\nID.19\nID.18\nID.16\nID.14ID.15\nID.13ID.17\nID.12\nID.11\nID.10\nID.9\nID.8\nID.7\nID.6\nID.5\nID.4\nID.3\nID.2\nID.1\nID.0\nRTR\n&1= 1\nlogic 1 = accepted\nlogic 0 = not acceptedmessage bit\nacceptance code bit\nacceptance mask bitACR = Acceptance Code Register\nAMR = Acceptance Mask Register\n6.4.15.2 Dual ﬁlter conﬁguration\nIn this filter configuration two short filters can be defined.\nA received message is compared with both filters todecide, whether this message should be copied into thereceivebufferornot.Ifatleastoneofthefilterssignalsanacceptance,thereceivedmessagebecomesvalid.Thebitcorrespondences between the filter bytes and themessage bytes depends on the currently received frameformat.\nStandardframe: ifastandardframemessageisreceived,\nthe two defined filters are looking different. The first filtercompares the complete standard identifier including theRTRbitandthefirstdatabyteofthemessage.Thesecondfilter just compares the complete standard identifierincluding the RTR bit.For a successful reception of a message, all single bit\ncomparisons of at least one complete filter have to signalacceptance.IncaseofasetRTRbitoradatalengthcodeoflogic 0nodatabyteisexisting.Neverthelessamessagemay pass filter 1, if the first part up to the RTR bit signalsacceptance.\nIfnodatabytefilteringisrequiredforfilter 1,thefourleast\nsignificant bits of AMR1 and AMR3 have to be set tologic 1 (don’t care). Then both filters are workingidenticallyusingthestandardidentifierrangeincludingtheRTR bit.\n2000Jan 04 47Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.11  Dual filter configuration, receiving standard frame messages.DBX.Y = data byteX, bit Y.handbook, full pagewidth\n7MSB\nfilter 1LSB LSB LSB\n6543210CAN ADDRESS 16; ACR0\n7MSB\nMSB LSB MSB654CA 17; ACR1\n76543210CAN ADDRESS 20; AMR0\n7654CA 21; AMR1\n76543210CAN ADDRESS 22; AMR2\n7654(1)\nCA 23; AMR3\n76543210CAN ADDRESS 18; ACR2\n7654CA 19; ACR3ID.28\nID.27\nID.26\nID.25\nID.24\nID.23\nID.22\nID.21\nID.20\nID.19\nID.18\nRTR3210CA 17; ACR1\n3210CA 21; AMR1\nDB1.7\nDB1.6\nDB1.5\nDB1.43210CA 19; ACR3\n3210CA 23; AMR3\nDB1.3\nDB1.2\nDB1.1\nDB1.0\nACR = Acceptance Code RegisterCA    = CAN Address\nAMR = Acceptance Mask Register\nMGK626&&\n11\n= 11= 1\nlogic 1 = accepted\nlogic 0 = not acceptedmessage bit\nacceptance code bitacceptance code bit\nacceptance mask bitacceptance mask bit\nfilter 1\nfilter 2filter 2message\n2000Jan 04 48Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nExtended frame:  if an extended frame message is received, the two defined filters are looking identically. Both filters\nare comparing the first two bytes of the extended identifier range only.\nFor a successful reception of a message, all single bit comparisons of at least one complete filter have to indicate\nacceptance.\nFig.12  Dual filter configuration, receiving extended frame messages.handbook, full pagewidth\n7MSB\nfilter 1LSB\n6543210CAN ADDRESS 16; ACR0\n7MSB LSB\nMSB LSB MSB LSB6543210CAN ADDRESS 17; ACR1\n76543210CAN ADDRESS 20; AMR0\n76543210CAN ADDRESS 21; AMR1\n76543210CAN ADDRESS 22; AMR2\n76543210CAN ADDRESS 23; AMR3\n76543210CAN ADDRESS 18; ACR2\n76543210CAN ADDRESS 19; ACR3ID.28\nID.27\nID.26\nID.25\nID.24\nID.23\nID.22\nID.21\nID.20\nID.19\nID.18\nID.16\nID.14ID.15\nID.13ID.17\nACR = Acceptance Code Register\nAMR = Acceptance Mask Register\nMGK627&&\n11\n= 11= 1\nlogic 1 = accepted\nlogic 0 = not acceptedmessage bit\nacceptance code bitacceptance code bit\nacceptance mask bitacceptance mask bit\nfilter 1\nfilter 2filter 2message\n2000Jan 04 49Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.4.16 RXM ESSAGECOUNTER(RMC)\nThe RMC register (CAN address 29) reflects the number of messages available within the RXFIFO. The value is\nincremented with each receive event and decremented by the release receive buffer command. After any reset event,this register is cleared.\nTable 42 Bit interpretation of the RX message counter (RMC); CAN address 29\nNote\n1. This bit cannot be written. During read-out of this register always a zero is given.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\n(0)\n(1) (0)(1) (0)(1) RMC.4 RMC.3 RMC.2 RMC.1 RMC.0\n6.4.17 RXB UFFERSTARTADDRESS REGISTER (RBSA)\nTheRBSAregister(CAN address 30)reflectsthecurrently\nvalid internal RAM address, where the first byte of thereceivedmessage, whichismappedtothe receivebufferwindow, is stored. With the help of this information it ispossible to interpret the internal RAM contents.TheinternalRAMaddressareabeginsatCAN address 32andmaybeaccessedbytheCPUforreadingandwriting(writing in reset mode only).\nExample:  if RBSA is set to 24 (decimal), the current\nmessage visible in the receive buffer window(CANaddress 16 to 28) is stored within the internal RAMbeginning at RAM address 24. Because the RAM is alsomapped directly to the CAN address space beginning atCAN address 32 (equal to RAM address 0) this messagemay also be accessed using CAN address 56 and thefollowing bytes(CANaddress = RBSA +32 > 24 +32 =56).If a message exceeds RAM address 63, it continues at\nRAM address 0.\nThereleasereceivebuffercommandisalwaysgivenwhile\nthere is at least one more message available within theFIFO. RBSA is updated to the beginning of the nextmessage.\nOnhardwarereset,thispointerisinitializedto ‘00H’.Upon\nasoftwarereset(settingofresetmode)thispointerkeepsits old value, but the FIFO is cleared; this means that theRAM contents are not changed, but the next received (ortransmitted) message will override the currently visiblemessage within the receive buffer window.\nThe RX buffer start address register appears to the CPU\nas a read only memory in operating mode and asread/writememoryinresetmode.Itshouldbenotedthatawrite access to RBSA takes effect first after the nextpositiveedgeoftheinternalclockfrequency,whichishalfof the external oscillator frequency.\nTable 43 Bit interpretation of the RX buffer start address register (RBSA); CAN address 30\nNote\n1. This bit cannot be written. During read-out of this register always a zero is given.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\n(0)\n(1) (0)(1) RBSA.5 RBSA.4 RBSA.3 RBSA.2 RBSA.1 RBSA.0\n2000Jan 04 50Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.5 Common registers\n6.5.1 B USTIMINGREGISTER0 (BTR0)\nThecontentsofthebustimingregister 0definesthevaluesoftheBaudRatePrescaler(BRP)andtheSynchronization\nJump Width (SJW). This register can be accessed (read/write) if the reset mode is active.\nIn operating mode this register is read only, if the PeliCAN mode is selected. In BasicCAN mode a ‘FFH’ is reflected.\nTable 44 Bit interpretation of bus timing register 0 (BTR0); CAN address 6\n6.5.1.1 Baud Rate Prescaler (BRP)\nTheperiodoftheCANsystemclockt sclisprogrammableanddeterminestheindividualbittiming.TheCANsystemclock\nis calculated using the following equation:\ntscl=2×tCLK×(32×BRP.5 +16 ×BRP.4 + 8 ×BRP.3 + 4 ×BRP.2 + 2 ×BRP.1 + BRP.0 +1)\nwhere t CLK= time period of the XTAL frequency =\n6.5.1.2 Synchronization Jump Width (SJW)\nTo compensate for phase shifts between clock oscillators of different bus controllers, any bus controller must\nre-synchronize on any relevant signal edge of the current transmission. The synchronization jump width defines themaximum number of clock cycles a bit period may be shortened or lengthened by one re-synchronization:\nt\nSJW=tscl×(2×SJW.1 + SJW.0 + 1)\n6.5.2 B USTIMINGREGISTER1 (BTR1)\nThecontentsofbustimingregister 1definesthelengthofthebitperiod,thelocationofthesamplepointandthenumber\nof samples to be taken at each sample point. This register can be accessed (read/write) if the reset mode is active.\nIn operating mode, this register is read only, if the PeliCAN mode is selected. In BasicCAN mode a ‘FFH’ is reflected.\nTable 45 Bit interpretation of bus timing register 1 (BTR1); CAN address 7\n6.5.2.1 Sampling (SAM)BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nSJW.1 SJW.0 BRP.5 BRP.4 BRP.3 BRP.2 BRP.1 BRP.0\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nSAM TSEG2.2 TSEG2.1 TSEG2.0 TSEG1.3 TSEG1.2 TSEG1.1 TSEG1.0\nBIT VALUE FUNCTION\nSAM 1 triple; the bus is sampled three times; recommended for low/medium speed buses\n(class A and B) where ﬁltering spikes on the bus line is beneﬁcial\n0 single; the bus is sampled once; recommended for high speed buses (SAE class C)1\nfXTAL-------------\n2000Jan 04 51Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.5.2.2 Time Segment 1 (TSEG1) and Time Segment 2 (TSEG2)\nTSEG1 and TSEG2 determine the number of clock cycles per bit period and the location of the sample point, where:\ntSYNCSEG=1×tscl\ntTSEG1=tscl×(8×TSEG1.3 + 4 ×TSEG1.2 + 2 ×TSEG1.1+ TSEG1.0 +1)\ntTSEG2=tscl×(4×TSEG2.2 + 2 ×TSEG2.1 + TSEG2.0 +1)\nFig.13  General structure of a bit period.handbook, full pagewidth\nMGK628tTSEG2tTSEG1tSYNCSEGtscltCLK\nnominal bit time\nSYNC\nSEGTSEG1 TSEG2 TSEG1 SYNC\nSEG\nsample point(s)XTAL\nCANBaud Rate Prescaler (BRP)\nPossible values are BRP= 000001, TSEG1= 0101 and TSEG2= 010.\n6.5.3 O UTPUTCONTROLREGISTER(OCR)\nThe output control register allows the set-up of different\noutput driver configurations under software control.Thisregister may be accessed (read/write) if the reset\nmode is active. In operating mode, this register is readonly,ifthePeliCANmodeisselected.InBasicCANmodea ‘FFH’ is reflected.\nTable 46 Bit interpretation of the output control register (OCR); CAN address 8\nBIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nOCTP1 OCTN1 OCPOL1 OCTP0 OCTN0 OCPOL0 OCMODE1 OCMODE0\n2000Jan 04 52Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.14  Transceiver input/output control logic.handbook, full pagewidth\nMGK629OCTP1\nOCTN1OCPOL1\nOCTN0\nOCPOL0OCMODE1OCMODE0\nTXCLK\nTXDOCTP0\nTRANSMIT\nLOGICVDD\nVSS\nVDD\nVSSTP0\nTN0\nTP1\nTN1TX0\nTX1transmitter\nIf the SJA1000 is in the sleep mode a recessive level is output on the TX0 and TX1 pins with respect to the contents\nwithintheoutputcontrolregister.IftheSJA1000isintheresetstate(resetrequest = HIGH)ortheexternalresetpin RST\nis pulled LOW the outputs TX0 and TX1 are floating.\nThe transmit output stage is able to operate in different modes. Table 47 shows the output control register settings.\nTable 47 Interpretation of OCMODE bits\nNote\n1. In test output mode TXn will reflect the bit, detected on RX pins, with the next positive edge of the system clock.\nTN1, TN0, TP1 and TP0 are configured in accordance with the setting of OCR.\n6.5.3.1 Normal output mode\nInnormaloutputmodethebitsequence(TXD)issentviaTX0andTX1.ThevoltagelevelsontheoutputdriverpinsTX0and TX1 depend on both the driver characteristic programmed by OCTPx, OCTNx (float, pull-up, pull-down, push-pull)and the output polarity programmed by OCPOLx.OCMODE1 OCMODE0 DESCRIPTION\n0 0 bi-phase output mode\n0 1 test output mode; note 11 0 normal output mode1 1 clock output mode\n2000Jan 04 53Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.5.3.2 Clock output mode\nFortheTX0pinthisisthesameasinnormaloutputmode.However,thedatastreamtoTX1isreplacedbythetransmit\nclock(TXCLK).Therisingedgeofthetransmitclock(non-inverted)marksthebeginningofabitperiod.Theclockpulsewidth is 1 ×t\nscl.\nFig.15  Example of clock output mode.handbook, full pagewidth\nMGK630\n1 bit timeHIGH\nHIGHLOW\nLOWTX0\nTX1\n6.5.3.3 Bi-phase output mode\nIn contrast to the normal output mode the bit\nrepresentation is time variant and toggled. If the buscontrollersaregalvanicallydecoupledfromthebuslinebya transformer, the bit stream is not allowed to contain aDCcomponent.Thisisachievedbythefollowingscheme.Duringrecessivebitsalloutputsaredeactivated(floating).\nDominantbitsaresentwithalternatinglevelsonTX0andTX1, i.e. the first dominant bit is sent on TX0, the secondissentonTX1,andthethirdoneissentonTX0again,andsoon.Onepossibleconfigurationexampleofthebi-phaseoutput mode timing is shown in Fig.16.\n2000Jan 04 54Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.16  Bi-phase output mode example (output control register =F8H).handbook, full pagewidth\nMGK631HIGH\nHIGHLOWrecessive\ndominant\nLOWTX0bitstream\nTX1\n6.5.3.4 Test output mode\nIn test output mode the level connected to RX is reflected at TXn with the next positive edge of the system clock\ncorresponding to the programmed polarity in the output control register.\nTable 48 shows the relationship between the bits of the output control register and the output pins TX0 and TX1.fosc\n2--------\n2000Jan 04 55Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nTable 48 Output pin conﬁguration; note 1\nNotes\n1. X =don’t care.2. TPX is the on-chip output transistor X, connected to V\nDD.\n3. TNX is the on-chip output transistor X, connected to V SS.\n4. TXXistheserialoutputlevelonpinTX0orTX1.ItisrequiredthattheoutputlevelontheCAN-buslineisdominant\nwhen TXD =0 and recessive when TXD =1.DRIVE TXD OCTPX OCTNX OCPOLX TPX(2) TNX(3) TXX(4)\nFloat X 0 0 X off off ﬂoat\nPull-down 0 0 1 0 off on LOW\n1 0 1 0 off off ﬂoat0 0 1 1 off off ﬂoat1 0 1 1 off on LOW\nPull-up 0 1 0 0 off off ﬂoat\n1 1 0 0 on off HIGH0 1 0 1 on off HIGH1 1 0 1 off off ﬂoat\nPush-pull 0 1 1 0 off on LOW\n1 1 1 0 on off HIGH0 1 1 1 on off HIGH1 1 1 1 off on LOW\nThe bit sequence (TXD) is sent via TX0 and TX1.\nThevoltage levels on the output driver pins depends onboth the driver characteristics programmed by OCTP,OCTN(float,pull-up,pull-down,push-pull)andtheoutputpolarity programmed by OCPOL.\n6.5.4 C\nLOCKDIVIDERREGISTER(CDR)\nTheclockdividerregistercontrolstheCLKOUTfrequency\nfor the microcontroller and allows to deactivate theCLKOUT pin. Additionally a dedicated receive interruptpulse on TX1, a receive comparator bypass and theselectionbetweenBasicCANmodeandPeliCANmodeis\nmadehere.Thedefaultstateoftheregisterafterhardwarereset is divide-by-12 for Motorola mode (00000101) anddivide-by-2 for Intel mode (00000000).\nOnsoftwarereset(resetrequest/resetmode)thisregister\nis not influenced.\nThe reserved bit (CDR.4) will always reflect a logic 0.\nTheapplication software should always write a logic 0 tothisbitinordertobecompatiblewithfuturefeatures,whichmay be 1-active using this bit.\nTable 49 Bit interpretation of the clock divider register (CDR); CAN address 31\nNote\n1. This bit cannot be written. During read-out of this register always a zero is given.BIT 7 BIT 6 BIT 5 BIT 4 BIT 3 BIT 2 BIT 1 BIT 0\nCAN mode CBP RXINTEN (0)\n(1) clock off CD.2 CD.1 CD.0\n2000Jan 04 56Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n6.5.4.1 CD.2 to CD.0\nThebits CD.2 to CD.0areaccessiblewithoutrestrictionsinresetmodeaswellasinoperatingmode.Thesebitsareused\nto define the frequency at the external CLKOUT pin. For an overview of selectable frequencies see Table 50.\nTable 50 CLKOUT frequency selection; note 1\nNote\n1. fosc is the frequency of the external oscillator (XTAL).CD.2 CD.1 CD.0 CLKOUT FREQUENCY\n000\n001010011100101110\n111 f\noscfosc\n2--------\nfosc\n4--------\nfosc\n6--------\nfosc\n8--------\nfosc\n10--------\nfosc\n12--------\nfosc\n14--------\n6.5.4.2 Clock off\nSetting this bit allows the external CLKOUT pin of the\nSJA1000tobedisabled.Awriteaccessispossibleonlyinresetmode.Ifthisbitisset,CLKOUTisLOWduringsleepmode, otherwise it is HIGH.\n6.5.4.3 RXINTEN\nThis bit allows the TX1 output to be used as a dedicatedreceive interrupt output. When a received message haspassed the acceptance filter successfully, a receiveinterrupt pulse with the length of one bit time is alwaysoutput at the TX1 pin (during the last bit of end of frame).Thetransmitoutputstageshouldoperateinnormaloutputmode.Thepolarityandoutputdriveareprogrammableviatheoutputcontrolregister(seealsoSection6.5.3).Awriteaccess is only possible in reset mode.6.5.4.4 CBP\nSetting of CDR.6 allows to bypass the CAN inputcomparator and is only possible in reset mode. This isuseful in the event that the SJA1000 is connected to anexternal transceiver circuit. The internal delay of theSJA1000isreduced,whichwillresultinalongermaximumpossiblebuslength.IfCBPisset,onlyRX0isactive.TheunusedRX1inputshouldbeconnectedtoadefinedlevel(e.g. V\nSS).\n6.5.4.5 CAN mode\nCDR.7 defines the CAN mode. If CDR.7 is at logic 0 theCAN controller operates in BasicCAN mode. If set tologic 1 the CAN controller operates in PeliCAN mode.Write access is only possible in reset mode.\n2000Jan 04 57Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n7 LIMITING VALUES\nIn accordance with the Absolute Maximum Rating System (IEC 134); all voltages referenced to V SS.\nNotes\n1. IOT is allowed in case of a bus failure condition because then the TX outputs are switched off automatically after a\nshorttime(bus-offstate).DuringnormaloperationI OTisapeakcurrent,permittedfort <100 ms.Theaverageoutput\ncurrent must not exceed 10 mA for each TX output.\n2. This value is based on the maximum allowable die temperature and the thermal resistance of the package, not on\ndevice power consumption.\n3. Human body model: equivalent to discharging a 100 pF capacitor through a 1.5 k Ω resistor.\n4. Machine model: equivalent to discharging a 200 pF capacitor through a 25 Ω plus 2.5 µH circuit.\n8 THERMAL CHARACTERISTICS\n9 DC CHARACTERISTICS\nVDD= 5 V (±10%); V SS=0V ;  T amb=−40 to +125 °C; all voltages referenced to V SS; unless otherwise speciﬁed.SYMBOL PARAMETER CONDITIONS MIN. MAX. UNIT\nVDD supply voltage −0.5 +6.5 V\nII, IOinput/output current on all pins except\nTX0and TX1−± 4m A\nIOT(sink) sink current of TX0 and TX1 together note 1 − 30 mA\nIOT(source) source current of TX0 and TX1\ntogethernote 1 −− 20 mA\nTamb operating ambient temperature −40 +125 °C\nTstg storage temperature −65 +150 °C\nPtot total power dissipation note 2 − 1.0 W\nVesd electrostatic discharge on all pins note 3 −1500 +1500 V\nnote 4 −200 +200 V\nSYMBOL PARAMETER CONDITION VALUE UNIT\nRth(j-a) thermal resistance from junction to ambient in free air 67 K/W\nSYMBOL PARAMETER CONDITIONS MIN. MAX. UNIT\nSupplies\nVDD supply voltage 4.5 5.5 V\nIDD operating supply current f osc=24 MHz; note 1 − 15 mA\nIsm sleep mode supply current oscillator inactive; note 2 − 40 µA\n2000Jan 04 58Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNotes\n1. AD0 to AD7 = ALE = RD=WR =CS= V DD;RST = MODE = V SS; RX0 =2.7 V; RX1 =2.3 V;\nXTAL1 =0.5 V orV DD−0.5 V; all outputs unloaded.\n2. AD0 to AD7 = ALE = RD=WR =INT =RST =CS= MODE = RX0 = V DD; RX1 =XTAL1 = V SS; all outputs\nunloaded.\n3. VI(D)= input voltage on all digital input pins.\n4. VI(RX)= input voltage on pins RX0 and RX1.\n5. Only if comparator bypass mode is active.6. Not tested during production.Inputs\nV\nIL1 LOW-levelinputvoltageonpins ALE/AS,\nCS,RD/E,WR and MODE−0.5 +0.8 V\nVIL2 LOW-level input voltage on pins XTAL1\nandINT− 0.3VDDV\nVIL3 LOW-level input voltage on pins RST,\nAD0 to AD7 and RX0(5)−0.5 +0.6 V\nVIH1 HIGH-level input voltage on\npins ALE/AS, CS,RD/E,WR and MODE2.0 V DD+ 0.5 V\nVIH2 HIGH-level input voltage on pins XTAL1\nandINT0.7VDD− V\nVIH3 HIGH-level input voltage on pins RST,\nAD0 to AD7 and RX0(5)2.4 V DD+ 0.5 V\nhysRSTinput hysteresis at pins RST,\nAD0 to AD7 and RX0(5)500 − mV\nILI input leakage current on all pins except\nXTAL1, RX0 and RX10 . 4 5V<V I(D)<VDD; note 3 −± 2 µA\nOutputs\nVOL LOW-level output voltage for\npins AD0 to AD7, CLKOUT and INTIOL=4m A − 0.4 V\nVOH HIGH-level output voltage for\npins AD0 to AD7 and CLKOUTIOH=−4m A V DD−0.4− V\nCAN input comparator (see also Fig.22)\nVth(i)(diff) differential input threshold voltage V DD=5V±10%;\n1.4 V <V I(RX)<VDD−1.4 V;\nnotes 4 and6−± 32 mV\nVhys hysteresis voltage 8 30 mV\nII input current −± 400 nA\nCAN output driver\nVOL(TX) LOW-level output voltage at pins TX0\nand TX1VDD=5V±10%\nIO=1.2 mA; note 6 − 0.05 V\nIO=1 0m A − 0.4 V\nVOH(TX) HIGH-level output voltage at pins TX0\nand TX1VDD=5V±10%\nIO=1.2 mA; note 6 V DD−0.05− V\nIO=1 0m A V DD−0.4− VSYMBOL PARAMETER CONDITIONS MIN. MAX. UNIT\n2000Jan 04 59Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n10 AC CHARACTERISTICS\nVDD=5V±10%; V SS=0V ;  C L=50 pF (output pins); T amb=−40 to+125 °C; unless otherwise speciﬁed; note 1.\nNotes\n1. AC characteristics are not tested during production.2. The analog input comparator may be bypassed internally using the CBP bit in the clock divider register, if external\ntransceiver circuitry is used. This results in reduced delays (<26 ns). V\nI(RX)= input voltage on pins RX0 and RX1.SYMBOL PARAMETER CONDITIONS MIN. MAX. UNIT\nfosc oscillator frequency − 24 MHz\ntsu(A-AL) address set-up to ALE/AS LOW 8 − ns\nth(AL-A) address hold after ALE LOW 2 − ns\ntW(AL) ALE/AS pulse width 8 − ns\ntRLQV RD LOW to valid data output Intel mode − 50 ns\ntEHQV E HIGH to valid data output Motorola mode − 50 ns\ntRHDZ data ﬂoat after RD HIGH Intel mode − 30 ns\ntELDZ data ﬂoat after E LOW Motorola mode − 30 ns\ntDVWH input data valid to WR HIGH Intel mode 8 − ns\ntWHDX input data hold after WR HIGH Intel mode 8 − ns\ntWHLH WR HIGH to next ALE HIGH 15 − ns\ntELAH E LOW to next AS HIGH Motorola mode 15 − ns\ntsu(i)(D-EL) input data set-up to E LOW Motorola mode 8 − ns\nth(i)(EL-D) input data hold after E LOW Motorola mode 8 − ns\ntLLWL ALE LOW to WR LOW Intel mode 10 − ns\ntLLRL ALE LOW to RD LOW Intel mode 10 − ns\ntLLEH AS LOW to E HIGH Motorola mode 10 − ns\ntsu(R-EH) set-up time of RD/ WR to E\nHIGHMotorola mode 5 − ns\ntW(W) WR pulse width Intel mode 20 − ns\ntW(R) RD pulse width Intel mode 40 − ns\ntW(E) E pulse width Motorola mode 40 − ns\ntCLWL CS LOW to WR LOW Intel mode 0 − ns\ntCLRL CS LOW to RD LOW Intel mode 0 − ns\ntCLEH CS LOW to E HIGH Motorola mode 0 − ns\ntWHCH WR HIGH to CS HIGH Intel mode 0 − ns\ntRHCH RD HIGH to CS HIGH Intel mode 0 − ns\ntELCH E LOW to CS HIGH Motorola mode 0 − ns\ntW(RST) RST pulse width 100 − ns\nInput comparator/output driver\ntSD sum of input and output delays V DD=5V±10%;\nVDIF=±32 mV;\n1 . 4V<V I(RX)<VDD−1.4 V;\nnote 2− 40 ns\n2000Jan 04 60Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n10.1 AC timing diagrams\nFig.17  Read cycle timing diagram; Intel mode.handbook, full pagewidth\nMGK632tW(R)\ntCLRLtRHCHtRLQVtRHDZ\ntW(AL)tsu(A-AL)th(AL-A)\ntLLRLA7 to A0 D7 to D0 AD7 to AD0\nALE\n(pin ALE/AS)\nWR\nCSRD\n(pin RD/E)\nFig.18  Read cycle timing diagram; Motorola mode.handbook, full pagewidth\nMGK633tsu(R-EH)\ntCLEHtEHQVtELDZ\ntW(AL)tsu(A-AL)th(AL-A)\ntLLEH\ntW(E)A7 to A0 D7 to D0 AD7 to AD0\nAS\n(pin ALE/AS)\nCSRD/WR\n(pin WR)\nE\n(pin RD/E)\ntELCH\n2000Jan 04 61Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nFig.19  Write cycle timing diagram; Intel mode.handbook, full pagewidth\nMGK634tW(W)\ntCLWLtDVWHtWHDX\ntW(AL)tsu(A-AL)th(AL-A)\ntLLWLtWHLHA7 to A0 D7 to D0 AD7 to AD0\nALE\n(pin ALE/AS)\nWR\nCSRD\n(pin RD/E)\ntWHCH\nFig.20  Write cycle timing diagram; Motorola mode.handbook, full pagewidth\nMGK635tsu(R-EH)\ntCLEHtsu(i)(D-EL)th(i)(EL-D)\ntW(AL)tsu(A-AL)th(AL-A)\ntLLEHtELAH\ntW(E)A7 to A0 D7 to D0 AD7 to AD0\nAS\n(pin ALE/AS)\nCSRD/WR\n(pin WR)\nE\n(pin RD/E)\ntELCH\n2000Jan 04 62Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n10.2 Additional AC information\nTo provide optimum noise immunity under worst case conditions, the chip is powered by three separate pins and\ngrounded by three separate pins.\nFig.21  Optimized noise immunity block diagram.handbook, full pagewidth\nMGK636LOGICINPUT\nCOMPARATORTX0\nTX1RX1RX0VDD2VDD1VDD3\nVSS2VSS1 VSS3\nFig.22  Input comparator definitions.Absolute input voltage at RX pins: 1.4V < V RX<VDD−1.4 V.\nThe minimum differential input voltage at the RX pins has to be greater than ±32 mV under all conditions to obtain a defined RXD output level.handbook, full pagewidth\nMGK637−32 0VRXD\nVOLVOH\nVRX0 − VRX1 (mV)+32\n8 to 30 mV\n2000Jan 04 63Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n11 PACKAGE OUTLINES\nUNITA\nmax.1 2b1(1)(1) (1)cD E w eM H L\n REFERENCES OUTLINE\nVERSIONEUROPEAN\nPROJECTIONISSUE DATE\n IEC  JEDEC  EIAJmm\ninchesDIMENSIONS (inch dimensions are derived from the original mm dimensions)\nSOT117-195-01-14\n99-12-27A  \nmin.A  \nmax.bZ\nmax.ME e1\n1.7\n1.30.53\n0.380.32\n0.2336.0\n35.014.1\n13.73.9\n3.40.25 2.54 15.2415.80\n15.2417.15\n15.901.7 5.1 0.51 4.0\n0.066\n0.0510.020\n0.0140.013\n0.0091.41\n1.340.56\n0.540.15\n0.130.01 0.10 0.600.62\n0.600.68\n0.630.067 0.20 0.020 0.16\n051G05 MO-015 SC-510-28MHc\n(e  )1ME\nA\nLseating plane\nA1\nwMb1eD\nA2\nZ\n28\n115\n14b\nEpin 1 index\n0 5 10 mm\nscale\n Note\n1. Plastic or metal protrusions of 0.25 mm maximum per side are not included. handbook, full pagewidthDIP28: plastic dual in-line package; 28 leads (600 mil) SOT117-1\n2000Jan 04 64Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nUNITA\nmax.A1A2A3bpcD(1)E(1) (1)eH ELL pQ Zywv θ\n REFERENCES OUTLINE\nVERSIONEUROPEAN\nPROJECTIONISSUE DATE\n IEC  JEDEC  EIAJmm\ninches2.650.30\n0.102.45\n2.250.49\n0.360.32\n0.2318.1\n17.77.6\n7.41.2710.65\n10.001.1\n1.00.9\n0.48\n0o\no0.25 0.1DIMENSIONS (inch dimensions are derived from the original mm dimensions)\nNote\n1. Plastic or metal protrusions of 0.15 mm maximum per side are not included.  1.1\n0.4\n SOT136-1X\n1428\nwMθAA1A2\nbpD\nHE\nLpQ\ndetail XE\nZc\nLvMA\ne15\n1(A  )3A\ny\n0.25\n 075E06  MS-013pin 1 index\n0.100.012\n0.0040.096\n0.0890.019\n0.0140.013\n0.0090.71\n0.690.30\n0.290.0501.4\n0.0550.419\n0.3940.043\n0.0390.035\n0.0160.010.25\n0.01 0.0040.043\n0.0160.010 5 10 mm\nscaleSO28: plastic small outline package; 28 leads; body width 7.5 mm SOT136-1\n97-05-22\n99-12-27 \n2000Jan 04 65Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n12 SOLDERING\n12.1 IntroductionThistextgivesaverybriefinsighttoacomplextechnology.\nAmorein-depthaccountofsolderingICs canbefoundinour\n“Data Handbook IC26; Integrated Circuit Packages”\n(document order number 9398 652 90011).\nThere is no soldering method that is ideal for all IC\npackages. Wave soldering is often preferred whenthrough-holeandsurfacemountcomponentsaremixedonone printed-circuit board. However, wave soldering is notalwayssuitableforsurfacemountICs,orforprinted-circuitboards with high population densities. In these situationsreflow soldering is often used.\n12.2 Through-hole mount packages\n12.2.1 S\nOLDERING BY DIPPING OR BY SOLDER WAVE\nThe maximum permissible temperature of the solder is\n260°C; solder at this temperature must not be in contact\nwith the joints for more than 5 seconds. The total contacttime of successive solder waves must not exceed5 seconds.\nThe device may be mounted up to the seating plane, but\nthe temperature of the plastic body must not exceed thespecified maximum storage temperature (T\nstg(max)). If the\nprinted-circuit board has been pre-heated, forced coolingmaybenecessaryimmediatelyaftersolderingtokeepthetemperature within the permissible limit.\n12.2.2 M\nANUAL SOLDERING\nApplythesolderingiron(24 Vorless)tothelead(s)ofthe\npackage,eitherbelowthe seatingplaneornotmorethan2 mm above it. If the temperature of the soldering iron bitis less than 300 °C it may remain in contact for up to\n10 seconds. If the bit temperature is between300 and400 °C, contact may be up to 5 seconds.\n12.3 Surface mount packages\n12.3.1 R\nEFLOW SOLDERING\nReflow soldering requires solder paste (a suspension of\nfinesolderparticles,fluxandbindingagent)tobeappliedtotheprinted-circuitboardbyscreenprinting,stencillingorpressure-syringe dispensing before package placement.\nSeveral methods exist for reflowing; for example,\ninfrared/convection heating in a conveyor type oven.Throughputtimes(preheating,solderingandcooling)varybetween 100 and 200seconds depending on heatingmethod.Typical reflow peak temperatures range from\n215to 250 °C. The top-surface temperature of the\npackages should preferable be kept below 230 °C.\n12.3.2 W\nAVE SOLDERING\nConventional single wave soldering is not recommended\nforsurfacemountdevices(SMDs)orprinted-circuitboardswith a high component density, as solder bridging andnon-wetting can present major problems.\nTo overcome these problems the double-wave soldering\nmethod was specifically developed.\nIfwavesolderingisusedthefollowingconditionsmustbe\nobserved for optimal results:\n•Use a double-wave soldering method comprising a\nturbulentwavewithhighupwardpressurefollowedbyasmooth laminar wave.\n•For packages with leads on two sides and a pitch (e):\n– larger than or equal to 1.27 mm, the footprint\nlongitudinal axis is preferred  to be parallel to the\ntransport direction of the printed-circuit board;\n– smaller than 1.27 mm, the footprint longitudinal axis\nmust be parallel to the transport direction of the\nprinted-circuit board.\nThe footprint must incorporate solder thieves at the\ndownstream end.\n•Forpackageswithleadsonfoursides,thefootprintmust\nbeplacedata45 °angletothetransportdirectionofthe\nprinted-circuit board. The footprint must incorporatesolder thieves downstream and at the side corners.\nDuringplacementandbeforesoldering,thepackagemust\nbe fixed with a droplet of adhesive. The adhesive can beapplied by screen printing, pin transfer or syringedispensing. The package can be soldered after theadhesive is cured.\nTypical dwell time is 4 seconds at 250 °C.\nA mildly-activated flux will eliminate the need for removalof corrosive residues in most applications.\n12.3.3 M\nANUAL SOLDERING\nFix the component by first soldering two\ndiagonally-oppositeendleads.Usealowvoltage(24 Vorless) soldering iron applied to the flat part of the lead.Contact time must be limited to 10 seconds at up to300°C.\nWhen using a dedicated tool, all other leads can be\nsoldered in one operation within 2 to5 seconds between270and 320 °C.\n2000Jan 04 66Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\n12.4 Suitability of IC packages for wave, reﬂow and dipping soldering methods\nNotes\n1. All surface mount (SMD) packages are moisture sensitive. Depending upon the moisture content, the maximum\ntemperature (with respect to time) and body size of the package, there is a risk that internal or external packagecracksmayoccurduetovaporizationofthemoistureinthem(thesocalledpopcorneffect).Fordetails,refertotheDrypack information in the\n“Data Handbook IC26; Integrated Circuit Packages; Section: Packing Methods” .\n2. For SDIP packages, the longitudinal axis must be parallel to the transport direction of the printed-circuit board.3. Thesepackagesarenotsuitableforwavesolderingasasolderjointbetweentheprinted-circuitboardandheatsink\n(at bottom version) can not be achieved, and as solder may stick to the heatsink (on top version).\n4. If wave soldering is considered, then the package must be placed at a 45 ° angle to the solder wave direction.\nThe package footprint must incorporate solder thieves downstream and at the side corners.\n5. WavesolderingisonlysuitableforLQFP,QFPandTQFPpackageswithapitch(e)equaltoorlargerthan0.8 mm;\nit is definitely not suitable for packages with a pitch (e) equal to or smaller than 0.65 mm.\n6. WavesolderingisonlysuitableforSSOPandTSSOPpackageswithapitch(e)equaltoorlargerthan0.65 mm;it is\ndefinitely not suitable for packages with a pitch (e) equal to or smaller than 0.5 mm.\n13 DEFINITIONS\n14 LIFE SUPPORT APPLICATIONS\nThese products are not designed for use in life support appliances, devices, or systems where malfunction of these\nproducts can reasonably be expected to result in personal injury. Philips customers using or selling these products foruseinsuchapplicationsdosoattheirownriskandagreetofullyindemnifyPhilipsforanydamagesresultingfromsuchimproper use or sale.MOUNTING PACKAGESOLDERING METHOD\nWAVE REFLOW\n(1)DIPPING\nThrough-hole mount DBS, DIP, HDIP, SDIP, SIL suitable(2) − suitable\nSurface mount BGA, SQFP not suitable suitable −\nHLQFP, HSQFP, HSOP, HTSSOP, SMS not suitable(3) suitable −\nPLCC(4), SO, SOJ suitable suitable −\nLQFP, QFP, TQFP not recommended(4)(5)suitable −\nSSOP, TSSOP, VSO not recommended(6)suitable −\nData sheet status\nObjective speciﬁcation This data sheet contains target or goal speciﬁcations for product development.\nPreliminary speciﬁcation This data sheet contains preliminary data; supplementary data may be published later.Product speciﬁcation This data sheet contains ﬁnal product speciﬁcations.\nLimiting values\nLimiting values given are in accordance with the Absolute Maximum Rating System (IEC 134). Stress above one or\nmore of the limiting values may cause permanent damage to the device. These are stress ratings only and operationof the device at these or at any other conditions above those given in the Characteristics sections of the speciﬁcationis not implied. Exposure to limiting values for extended periods may affect device reliability.\nApplication information\nWhere application information is given, it is advisory and does not form part of the speciﬁcation.\n2000Jan 04 67Philips Semiconductors Product speciﬁcation\nStand-alone CAN controller SJA1000\nNOTES\n© Philips Electronics N.V. SCA\nAll rights are reserved. Reproduction in whole or in part is prohibited without the prior written consent of the copyright owne r.\nTheinformationpresentedinthisdocumentdoesnotformpartofanyquotationorcontract,isbelievedtobeaccurateandreliableandmaybechanged\nwithout notice. No liability will be accepted by the publisher for any consequence of its use. Publication thereof does not con vey nor imply any license\nunder patent- or other industrial or intellectual property rights.Internet: http://www.semiconductors.philips.com\n2000 69Philips Semiconductors – a worldwide company\nFor all other countries apply to:  Philips Semiconductors,\nInternationalMarketing & Sales Communications, BuildingBE-p, P.O.Box 218,5600 MD EINDHOVEN, TheNetherlands,Fax. +3140 27 24825Argentina:  see South America\nAustralia:  3 Figtree Drive, HOMEBUSH, NSW2140,\nTel. +6129704 8141, Fax. +6129704 8139\nAustria:Computerstr. 6, A-1101 WIEN, P.O. Box213,\nTel. +43160 1011248, Fax. +431 60 1011210\nBelarus: Hotel Minsk Business Center, Bld.3, r. 1211, Volodarski Str.6,\n220050MINSK, Tel. +375 172 200733, Fax. +375 172 20 0773\nBelgium:  see The Netherlands\nBrazil:see South America\nBulgaria: Philips Bulgaria Ltd., Energoproject, 15thfloor,\n51 James BourchierBlvd., 1407SOFIA,Tel. +359 268 9211, Fax. +359 268 9102\nCanada: PHILIPS SEMICONDUCTORS/COMPONENTS,\nTel. +1 800234 7381, Fax. +1800 943 0087\nChina/Hong Kong:  501Hong Kong Industrial Technology Centre,\n72 Tat CheeAvenue, Kowloon Tong, HONG KONG,Tel. +852 2319 7888, Fax. +852 2319 7700\nColombia:  see South America\nCzech Republic:  see Austria\nDenmark:  Sydhavnsgade23, 1780 COPENHAGENV,\nTel. +4533 29 3333, Fax. +4533 29 3905\nFinland: Sinikalliontie 3, FIN-02630ESPOO,\nTel. +358 9615 800,Fax. +358 96158 0920\nFrance: 51 Rue Carnot, BP317, 92156SURESNES Cedex,\nTel. +3314099 6161, Fax. +3314099 6427\nGermany:  Hammerbrookstraße69, D-20097HAMBURG,\nTel. +4940 2353 60, Fax. +4940 2353 6300\nHungary: see Austria\nIndia: Philips INDIA Ltd, Band Box Building, 2nd floor,\n254-D, Dr. Annie BesantRoad, Worli, MUMBAI400 025,Tel. +9122 493 8541, Fax. +9122 493 0966\nIndonesia: PTPhilipsDevelopmentCorporation,SemiconductorsDivision,\nGedung Philips, Jl. Buncit Raya Kav.99-100, JAKARTA 12510,Tel. +6221 794 0040 ext. 2501, Fax. +6221 794 0080\nIreland: Newstead, Clonskeagh, DUBLIN14,\nTel. +353 17640 000, Fax. +3531 7640 200\nIsrael: RAPAC Electronics, 7Kehilat SalonikiSt, PO Box 18053,\nTEL AVIV 61180, Tel. +972 3645 0444, Fax. +9723 649 1007\nItaly:PHILIPSSEMICONDUCTORS,ViaCasati,23 - 20052MONZA(MI),\nTel. +39039 2036838, Fax +39 039203 6800\nJapan: Philips Bldg13-37, Kohnan 2-chome, Minato-ku,\nTOKYO108-8507, Tel. +813 3740 5130, Fax. +8133740 5057\nKorea: Philips House, 260-199Itaewon-dong, Yongsan-ku, SEOUL,\nTel. +822709 1412, Fax. +822 7091415\nMalaysia:  No. 76 Jalan Universiti, 46200PETALINGJAYA, SELANGOR,\nTel. +60 3750 5214, Fax. +603 7574880\nMexico: 5900 Gateway East, Suite200, EL PASO, TEXAS 79905,\nTel. +9-5 800 2347381, Fax +9-5 800 943 0087\nMiddle East:  seeItalyNetherlands:  Postbus90050, 5600 PB EINDHOVEN, Bldg. VB,\nTel. +3140 27 82785, Fax. +3140 27 88399\nNew Zealand:  2 Wagener Place, C.P.O.Box 1041, AUCKLAND,\nTel. +649 8494160, Fax. +649 8497811\nNorway: Box1, Manglerud 0612, OSLO,\nTel. +4722 74 8000, Fax. +4722 74 8341\nPakistan:  see Singapore\nPhilippines:  Philips Semiconductors Philippines Inc.,\n106Valero St. SalcedoVillage, P.O. Box 2108 MCC,MAKATI,MetroMANILA, Tel.+63 2816 6380, Fax. +632 8173474\nPoland: Al.Jerozolimskie195 B, 02-222WARSAW,\nTel. +4822 5710 000, Fax. +4822 5710 001\nPortugal:  see Spain\nRomania:  see Italy\nRussia: Philips Russia, Ul. Usatcheva35A, 119048MOSCOW,\nTel. +7 095755 6918, Fax. +7095 7556919\nSingapore:  Lorong1, Toa Payoh, SINGAPORE319762,\nTel. +65350 2538, Fax. +652516500\nSlovakia:  see Austria\nSlovenia:  see Italy\nSouth Africa:  S.A. PHILIPS Pty Ltd., 195-215Main Road Martindale,\n2092 JOHANNESBURG, P.O.Box 58088 Newville 2114,Tel. +2711 471 5401, Fax. +2711 4715398\nSouth America:  Al. Vicente Pinzon,173, 6thfloor,\n04547-130SÃO PAULO, SP, Brazil,Tel. +5511 821 2333, Fax. +5511 8212382\nSpain: Balmes 22, 08007 BARCELONA,\nTel. +3493 301 6312, Fax. +3493 3014107\nSweden: Kottbygatan 7, Akalla, S-16485STOCKHOLM,\nTel. +468 5985 2000, Fax. +4685985 2745\nSwitzerland:  Allmendstrasse140, CH-8027 ZÜRICH,\nTel. +411 4882741 Fax. +411 4883263\nTaiwan: Philips Semiconductors, 6F, No.96, Chien Kuo N. Rd., Sec. 1,\nTAIPEI, Taiwan Tel.+886 22134 2886, Fax. +886 22134 2874\nThailand:  PHILIPS ELECTRONICS (THAILAND) Ltd.,\n209/2 Sanpavuth-BangnaRoad Prakanong, BANGKOK10260,Tel. +662 7454090, Fax. +662 3980793\nTurkey: Yukari Dudullu, Org. San. Blg., 2.Cad. Nr. 28 81260Umraniye,\nISTANBUL, Tel.+90 216522 1500, Fax. +90216 5221813\nUkraine: PHILIPS UKRAINE, 4 Patrice Lumumba str., BuildingB, Floor 7,\n252042KIEV, Tel. +380 44 264 2776, Fax. +38044 268 0461\nUnited Kingdom:  Philips Semiconductors Ltd., 276Bath Road, Hayes,\nMIDDLESEXUB3 5BX, Tel.+44 208730 5000, Fax. +44208 7548421\nUnited States:  811EastArques Avenue, SUNNYVALE, CA94088-3409,\nTel. +1 800234 7381, Fax. +1800 9430087\nUruguay:  see South America\nVietnam:  seeSingapore\nYugoslavia:  PHILIPS, TrgN. Pasica5/v, 11000 BEOGRAD,\nTel. +381 11 3341 299,Fax.+381 11 3342 553\nPrinted in The Netherlands 285002/03/pp 68  Date of release: 2000 Jan 04 Document order number:  939775006634\n'}]
!==============================================================================!
### Component Summary: SJA1000T/N1

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - Supply Voltage (VDD): 4.5V to 5.5V
- **Current Ratings**: 
  - Operating Supply Current (IDD): Up to 15 mA
  - Sleep Mode Supply Current (Ism): 40 µA
  - Sink Current (IOT): Up to 30 mA (TX0 and TX1 together)
- **Power Consumption**: 
  - Total Power Dissipation: 1.0 W (max)
- **Operating Temperature Range**: 
  - -40°C to +125°C
- **Package Type**: 
  - SOT136-1 (SO28) - plastic small outline package; 28 leads; body width 7.5 mm
- **Special Features**: 
  - Supports CAN 2.0B protocol
  - Extended receive buffer (64-byte FIFO)
  - Programmable error warning limit
  - Hot plugging support
  - Single-shot transmission mode
  - Listen-only mode
- **Moisture Sensitive Level**: 
  - Level 1 (according to JEDEC J-STD-020E)

#### Description:
The **SJA1000** is a stand-alone CAN (Controller Area Network) controller designed for automotive and industrial applications. It serves as an interface between a microcontroller and the CAN bus, enabling communication in a networked environment. The SJA1000 is compatible with the PCA82C200 CAN controller and supports both BasicCAN and PeliCAN modes, allowing for flexible operation depending on the application requirements.

#### Typical Applications:
- **Automotive Systems**: Used in vehicle communication systems for managing data between various electronic control units (ECUs).
- **Industrial Automation**: Facilitates communication in industrial control systems, enabling real-time data exchange between devices.
- **Robotics**: Employed in robotic systems for coordinating actions and sharing sensor data.
- **Building Automation**: Utilized in smart building systems for managing lighting, HVAC, and security systems through a networked approach.

The SJA1000 is particularly beneficial in environments where robust communication is critical, such as in vehicles and industrial machinery, due to its error management features and ability to handle high-speed data transmission (up to 1 Mbit/s).