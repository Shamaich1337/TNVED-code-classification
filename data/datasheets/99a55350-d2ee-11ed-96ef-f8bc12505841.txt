[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of W25Q32JWSSIQ production of WINBOND from the text:W25Q32JW  \n \nPublication Release Date:  March 17, 2020  \n -Revision H  \n \n \n \n \n \n \n \n \n1.8V 32M-BIT \nSERIAL FLASH MEMORY WITH  \nDUAL , QUAD  SPI \nFor Industrial & Industrial Plus Grade  \n \n     \n \n \n \n \n     \n \n \n \n \n \n \n \n \n \n \n \n\nW25 Q32JW  \n \n \n- 1 - \nTable of Contents  \n1. GENERAL DESCRIPTIONS  ................................ ................................ ................................ .............  4 \n2. FEATURES  ................................ ................................ ................................ ................................ ....... 4 \n3. PACKAGE TYPES AND PI N CONFIGURATIONS  ................................ ................................ ..........  5 \n3.1 Pin Configuration SOIC 150 -mil / 208 -mil ................................ ................................ ............  5 \n3.2 Pad Configuration WSON 6x5 -mm, XSON 4x4 -mm, USON4x3 -mm ................................ .. 5 \n3.3 Pin Description SOIC 150/208 -mil, WSON 6x5 -mm, XSON 4x4 -mm, USON4x3 -mm ........  5 \n3.4 Ball Configuration  TFBGA 8x6 -mm (5x5 or 6x4 Ball Array)  ................................ .................  6 \n3.5 Ball Description TFBGA 8x6 -mm ................................ ................................ .........................  6 \n3.6 Ball Configuration WLCSP  ................................ ................................ ................................ ... 7 \n3.7 Ball Description WLCSP12  ................................ ................................ ................................ ... 7 \n4. PIN DESCRIPTIONS  ................................ ................................ ................................ ........................  8 \n4.1 Chip Select (/CS)  ................................ ................................ ................................ ..................  8 \n4.2 Serial Data Input, Output and IOs (DI, DO and IO0, IO1, IO2, IO3)  ................................ .... 8 \n4.3 Write Protect (/WP)  ................................ ................................ ................................ ...............  8 \n4.4 HOLD (/HOLD)  ................................ ................................ ................................ .....................  8 \n4.5 Serial Clock (CLK)  ................................ ................................ ................................ ................  8 \n4.6 Reset (/RESET)(1) ................................ ................................ ................................ .................  8 \n5. BLOCK DIAGRAM  ................................ ................................ ................................ ............................  9 \n6. FUNCTIONAL DESCRIPTI ONS  ................................ ................................ ................................ ..... 10 \n6.1 Standard SPI Instructions  ................................ ................................ ................................ ... 10 \n6.2 Dual SPI Instructions  ................................ ................................ ................................ ..........  10 \n6.3 Quad SPI Instructions ................................ ................................ ................................ .........  10 \n6.4 Software Reset & Hardware /RESET pin  ................................ ................................ ...........  10 \n6.5 Write Protection  ................................ ................................ ................................ ..................  11 \n Write Protect Features  ................................ ................................ ................................ ..........  11 \n7. STATUS AND CONFIGURA TION REGISTERS  ................................ ................................ ............  12 \n7.1 Status Registers  ................................ ................................ ................................ .................  12 \n Erase/Write In Progress (BUSY) – Status Only  ................................ ................................ . 12 \n Write Enable Latch (WEL) – Status Only  ................................ ................................ ...........  12 \n Block Protect Bits (BP2, BP1, BP0) – Volatile/Non -Volatile Writable  ................................ . 12 \n Top/Bottom Block Protect  (TB) – Volatile/Non -Volatile Writable  ................................ ........  13 \n Sector/Block Protect Bit (SEC)  – Volatile/Non -Volatile Writable  ................................ ........  13 \n Complement Protect (CMP) – Volatile/Non -Volatile Writable  ................................ ............  13 \n Status Register Protect (SRP , SRL) – Volatile/Non -Volatile Writable  ................................  14 \n Erase/Program Suspend Status (SUS) – Status Only  ................................ .......................  15 \n Security Register Lock Bits (LB3, LB2, LB1) – Volatile/Non -Volatile OTP Writable  ...........  15 \n Quad Enable  (QE) – Volatile/Non -Volatile Writable  ................................ ...........................  15 \n Write Protect Selection (WPS) – Volatile/Non -Volatile Writable  ................................ ........  16 \n Output Driver Strength (DRV1, DRV0) – Volatile/Non -Volatile Writable  ............................  16 \n Reserved Bits – Non Functional  ................................ ................................ ........................  16 \n Status Register Memory Protection (WPS = 0, CMP = 0)  ................................ .....................  17 \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 2 -                                 -Revision H  \n Status Register Memory Protection (WPS = 0, CMP = 1)  ................................ .....................  18 \n Individual Block Memory Protection (WPS=1)  ................................ ................................ .... 19 \n8. INSTRUCTIONS  ................................ ................................ ................................ .............................  20 \n8.1 Device ID and Instruction Set Tables  ................................ ................................ .................  20 \n Manufacturer and Device Identification  ................................ ................................ .................  20 \n Instruction Set Table 1 (Standard SPI Instru ctions)(1) ................................ ...........................  21 \n Instruction Set Table 2 (Dual/Quad SPI Instructions)(1) ................................ .........................  22 \n8.2 Instruction Descriptions  ................................ ................................ ................................ ...... 23 \n Write Enable (06h)  ................................ ................................ ................................ ................  23 \n Write Enable for Volatile Status Register (50h)  ................................ ................................ ..... 23 \n Write Disable (04h)  ................................ ................................ ................................ ...............  24 \n Read Status Register -1 (05h), Status Register -2 (35h) & Status Register -3 (15h)  ...............  24 \n Write Status Register -1 (01h), Status Register -2 (31h) & Status Register -3 (11h)  ...............  25 \n Read Data (03h)  ................................ ................................ ................................ ...................  27 \n Fast Read (0Bh)  ................................ ................................ ................................ ...................  28 \n Fast Read Dual Output (3Bh)  ................................ ................................ ...............................  29 \n Fast Read Quad Output (6Bh)  ................................ ................................ ..............................  30 \n Fast Read Dual I/O (BBh)  ................................ ................................ ................................ ... 31 \n Fast Read Quad I/O (EBh)  ................................ ................................ ................................ .. 32 \n Page Program (02h)  ................................ ................................ ................................ ...........  33 \n Quad Input Page Program ( 32h) ................................ ................................ .........................  34 \n Sector Erase (20h)  ................................ ................................ ................................ ..............  35 \n 32KB Block Erase (52h)  ................................ ................................ ................................ ...... 36 \n 64KB Block Erase (D8h)  ................................ ................................ ................................ ..... 37 \n Chip Erase (C7h / 60h ) ................................ ................................ ................................ ....... 38 \n Erase / Program Suspend (75h)  ................................ ................................ .........................  39 \n Erase / Program Resume (7Ah)  ................................ ................................ ..........................  40 \n Power -down (B9h)  ................................ ................................ ................................ ..............  41 \n Release Power -down  / Device ID (ABh)  ................................ ................................ .............  42 \n Read Manufacturer / Device ID (90h)  ................................ ................................ .................  43 \n Read Manufacturer / Device ID Dual I/O (92h)  ................................ ................................ ... 44 \n Read Manufacturer / Device ID Quad I/O (94h)  ................................ ................................ .. 45 \n Read Unique ID Number (4Bh)  ................................ ................................ ...........................  46 \n Read JEDEC ID (9Fh)  ................................ ................................ ................................ ........  47 \n Read SFDP Register (5Ah)  ................................ ................................ ................................ . 48 \n Erase Security Registers (44h)  ................................ ................................ ...........................  49 \n Program Security Registers (42h)  ................................ ................................ .......................  50 \n Read Security Registers (48h)  ................................ ................................ ............................  51 \n Individual Block/Sector Lock (36h)  ................................ ................................ ......................  52 \n Individual Block/Sector Unlock (39h)  ................................ ................................ ..................  53 \n Read Block/Sector Lock (3Dh)  ................................ ................................ ............................  54 \n Global Block/Sector Lock (7Eh)  ................................ ................................ ..........................  55 \n Global Block/Sector Unlock (98h)  ................................ ................................ .......................  55 \n Enable Reset (66h) and Reset Device (99h)  ................................ ................................ ...... 56 \n9. ELECTRICAL CHARACTER ISTICS ................................ ................................ ...............................  57 \nW25 Q32JW  \n \n \n- 3 - \n9.1 Absolute Maximum Ratings (1) ................................ ................................ ..........................  57 \n9.2 Operating Ranges  ................................ ................................ ................................ ..............  57 \n9.3 Powe r-Up Power -Down Timing and Requirements  ................................ ...........................  58 \n Power Cycle Requirement  ................................ ................................ ................................ .... 59 \n9.4 DC Electrical Characteristics - ................................ ................................ .............................  60 \n9.5 AC Measurement Conditions  ................................ ................................ .............................  61 \n9.6 AC Electrical Characteristics(6) ................................ ................................ ...........................  62 \n9.7 Serial Output Timing  ................................ ................................ ................................ ...........  64 \n9.8 Serial Input Timing  ................................ ................................ ................................ ..............  64 \n9.9 /WP Timing  ................................ ................................ ................................ .........................  64 \n10. PACKAGE SPECIFICATIONS  ................................ ................................ ................................ ....... 65 \n10.1  8-Pin SOIC 150 -mil (Package Code SN)  ................................ ................................ ...........  65 \n10.3  8-Pin SOIC 208 -mil (Package Code SS)  ................................ ................................ ............  66 \n10.4  8-Pad WSON 6x5 -mm (Package Code ZP)  ................................ ................................ ....... 67 \n10.5  8-Pad XSON 4x4x0.45 -mm (Package Code XG)  ................................ ..............................  68 \n10.6  24-Ball TFBGA 8x6 -mm (Package Code TB, 5x5 Ball Array)  ................................ ............  69 \n10.7  24-Ball TFBGA 8x6 -mm (Package Code TC, 6x4 ball array) ................................ .............  70 \n10.8  8-Pad USON 4x3 -mm (Package Code UU)  ................................ ................................ ....... 71 \n10.9  12-Ball WLCSP (Package Code BY)  ................................ ................................ ..................  72 \n11. ORDERING INFORMATION  ................................ ................................ ................................ ..........  73 \n11.1  Valid Part Numbers and Top Side Marking  ................................ ................................ ........  74 \n12. REVISION HISTORY  ................................ ................................ ................................ ......................  77 \n \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 4 -                                 -Revision H  \n1. GENERAL DESCRIPTIONS  \nThe W25 Q32JW  (32M -bit) Serial Flash memory provides a storage solution for systems with limited space, \npins and power. The 25Q series offers flexibility and performance well beyond ordinary Serial Flash devices. \nThey are ideal for code shadowing to RAM,  executing code  directly from D ual/Quad SPI  (XIP)  and storing \nvoice, text and data. The device operates on 1.7V to 1.95V power supply with current consumption as low \nas 0.1µA for power -down.   \nThe W25 Q32JW  array is organized into 16,384 programmable pages of 256 -bytes eac h. Up to 256 bytes \ncan be programmed at a time. Pages can be erased in groups of 16 (4KB sector erase), groups of 128 \n(32KB block erase), groups of 256 (64KB block erase) or the entire chip (chip erase). The W25 Q32JW  has \n1,024 erasable sectors and 64 erasa ble blocks respectively. The small 4KB sectors allow for greater \nflexibility in applications that require data and parameter storage. (See Figure 2.)  \nThe W25 Q32JW  supports the standard Serial Peripheral Interface (SPI), and a high performance \nDual/Quad ou tput as well as Dual/Quad I/O SPI: Serial Clock, Chip Select, Serial Data I/O0 (DI), I/O1 (DO), \nI/O2,  and I/O3. SPI clock frequencies of up to 133MHz are supported allowing equivalent clock rates of \n532MHz (133MHz x 4) for Quad I/O when using the SPI Fast Read Quad I/O instructions. These transfer \nrates can outperform standard Asynchronous 8 and 16 -bit Parallel Flash memories.   \nAdditionally, the device supports JEDEC standard manufacturer and device ID and SFDP Register, a 64 -\nbit Unique Serial Number and t hree 256 -bytes Security Registers.  \n \n2. FEATURES  \n\uf0b7 New Family of SpiFlash Memories                                                                                                                               \n– W25 Q32JW : 32M -bit / 4M -byte \n– Standard SPI: CLK,  /CS, DI, DO  \n– Dual SPI:  CLK,  /CS, IO 0, IO 1, \n– Quad SPI:  CLK,  /CS, IO 0, IO 1, IO 2, IO 3 \n– Software & Hardware Reset(1)  \n\uf0b7 Highest Performance Serial Flash  \n– 133MHz Quad  I/O SPI clocks  \n– 66MB/S continuous data transfer rate  \n– Min. 100K Program -Erase cycles  \n– More than 20 -year data retention  \n\uf0b7 Low Power, Wide Temperature Range  \n– Single  1.7V to 1.95V supply   \n– <0.1µA Power -down (typ.)  \n– -40°C to +85 /105°C operating range  \n \uf0b7 Flexible Architecture with 4KB sectors  \n– Uniform Sector/Block Erase (4K/32K/64K -Byte)  \n– Program 1 to 256 byte per programmable page  \n– Erase/Program Suspend & Resume  \n\uf0b7 Advanced Security Features  \n– Software and Hardware Write -Protect  \n– Special OTP protection(2) \n– Top/Bottom, Complement array protection  \n– Individual Block/Sector array protection  \n– 64-Bit Unique ID for each device  \n– Discoverable Parameters (SFDP) Register  \n– 3X256 -Bytes Security Registers  \n– Volatile & Non -volatile Status Register Bits \n\uf0b7 Space Efficient Packaging  \n  – 8-pin SOIC 150/208-mil \n– 8-pad XSON 4x4 -mm \n– 8-pad WSON 6x5 -mm / USON  4x3-mm \n– 24-ball TFBGA 8x6 -mm (6x4/5x5 ball array)  \n– 12-ball WLCSP  \n– Contact Winbond for KGD and other options  \n  \n \n \nNote: 1. Hardware /RESET pin is only available on SOIC -16 & TFBGA packages  \n     2. Please contact Winbond for details.   \nW25 Q32JW  \n \n \n- 5 - \n3. PACKA GE TYPES AND PIN CONFIGURATIONS  \n3.1 Pin Configuration  SOIC 150-mil / 208-mil \n \nFigure 1a. W25Q32JW  Pin Assignments, 8 -pin SOIC 150-mil/ 208-mil (Package Code S N, SS) \n3.2 Pad Configuration WSON 6x5 -mm, XSON 4x4 -mm, USON4x3 -mm \n \nFigure 1 b. W25Q32JW  Pad Assignm ents, 8 -pad WSON 6x5-mm (Package Code ZP , XG, UU) \n3.3 Pin Description SOIC 150/208-mil, WSON 6x5 -mm, XSON 4x4 -mm, USON4x3 -mm \nPAD NO.  PAD NAME  I/O FUNCTION  \n1 /CS I Chip Select Input  \n2 DO (IO1)  I/O Data Output ( Data Input Output 1)(1) \n3 /WP (IO2)  I/O Write Protect Input  ( Data Input Output 2)(2) \n4 GND   Ground  \n5 DI (IO0)  I/O Data Input ( Data Input Output 0)(1) \n6 CLK I Serial Clock Input  \n7 /HOLD or /RESET  \n(IO3)  I/O Hold or Reset Input  (Data Input Output 3)(2) \n8 VCC   Power Supply  \nNotes:  \n1. IO0 and IO1 are used for Standard and Dual SPI instructions  \n2. IO0 – IO3 are used for Quad SPI instructions, /HOLD (or /RESET ) function is only available for Standard/Dual SPI.  \n1\n2\n3\n48\n7\n6\n5/CS\nDO (IO1)\n/WP (IO2)\nGNDVCC\n/HOLD or /RESET\n(IO3)\nDI (IO0)CLKTop View\n  \n1\n2\n3\n4/CS\nDO (IO1)\n/WP (IO2)\nGNDVCC\n/HOLD or /RESET\n(IO3)\nDI (IO0)CLKTop View\n  8\n7\n6\n5\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 6 -                                 -Revision H  \n3.4 Ball Configuration TFBGA 8x6 -mm (5x5 or 6x4 Ball Array)  \n \nFigure 1 c. W25 Q32JW  Ball Assignments, 24 -ball TFBGA 8x6 -mm, 5X5 and 6x4 (Package Code TB, TC)  \n3.5 Ball Description TFBGA 8x6 -mm \nBALL NO.  PIN NAME  I/O FUNCTION  \nA4 /RESET  I Reset Input(3) \nB2 CLK I Serial Clock Input  \nB3 GND   Ground  \nB4 VCC   Power Supply  \nC2 /CS I Chip Select Input  \nC4 /WP (IO2)  I/O Write Protect Input  (Data Input Output 2)(2) \nD2 DO (IO1)  I/O Data Output (Data Input Output 1)(1) \nD3 DI (IO0)  I/O Data Input (Data Input Output 0)(1) \nD4 /HOLD  or /RESET  \n(IO3)  I/O Hold or Reset Input  (Data Input Output 3)(2) \nMultiple  NC  No Connect  \n \nNotes:  \n1. IO0 and IO1 are used for Standard and Dual SPI instructions  \n2. IO0 – IO3 are used for Quad SPI instructions , /HOLD (or /RESET) function  is only available for Standard/Dual SPI.  \n 3.   The /RESET pin is a dedicated hardware reset pin regardless of device settings or operation states.  \n      If the hardware reset function is not used, this pin can be left floating or connected to VCC in the system  \nD1\n/HOLD(IO3) DI(IO0) DO(IO1)/WP (IO2)\nD2 D3 D4\nNC\nE1\nNC NC NCE2 E3 E4\nNC\nF1\nNC NC NCF2 F3 F4\nNCA1\n/RESET NC NCA2 A3 A4\nNC\nB1\nVCC GND CLKB2 B3 B4\nNC\nC1\nNC /CSC2 C3 C4\nNCTop View\nPackage Code CTop View\nD1\n/HOLD(IO3) DI(IO0) DO(IO1)/WP (IO2)\nD2 D3 D4\nNC\nE1\nNC NC NCE2 E3 E4\nNC/RESET NC NCA2 A3 A4\nB1\nVCC GND CLKB2 B3 B4\nNC\nC1\nNC /CSC2 C3 C4\nNC\nD5\nE5A5\nB5\nC5\nNCNCNCNCNC\nPackage Code B\nW25 Q32JW  \n \n \n- 7 - \n3.6 Ball Configuration WLCSP  \n \nFigure 1 d. W25 Q32JW  Ball Assignments, 12-ball WLCSP  (Package Code BY) \n \n3.7 Ball Description WLCSP12  \nBALL NO.  PIN NAME  I/O FUNCTION  \nA2 VCC   Power Supply  \nB2 /HOLD  or /RESET  \n(IO3)  I/O Hold Input  or /RESET (Data Input Output 3)(2) \nC2 CLK I Serial  Clock Input  \nD2 DI (IO0)  I/O Data Input (Data Input Output 0)(1) \nA3 /CS I Chip Select Input  \nB3 DO (IO1)  I/O Data Output (Data Input Output 1)(1) \nC3 /WP (IO2)  I/O Write Protect Input  (Data Input Output 2)(2) \nD3 GND   Ground  \nMultiple  NC  No Connect  \nNotes:  \n  1. IO0 and IO1 are used for Standard and Dual SPI instructions  \n2. IO0 – IO3 are used for Quad SPI instructions, /WP & /HOLD (or /RESET) functions are only available for Standard/Dual SPI.  \n \n \n \n \nTop View  Bottom View  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 8 -                                 -Revision H  \n4. PIN DESCRIPTIONS  \n4.1 Chip Select (/CS)  \nThe SPI Chip Select (/CS) pin enables and disables device operation. When /CS  is high the device is \ndeselected and the Serial Data Output (DO, or IO0, IO1, IO2, IO3) pins are at high impedance. When \ndeselected, the devices power consumption will be at standby levels unless an  internal erase, program or \nwrite status register cycle is in progress. When /CS  is brought low the device will be selected, power \nconsumption will increase to active levels and instructions can be written to and data read from the device. \nAfter power -up, /CS must transition from high to low before a new instruction will be accepted. The /CS \ninput must track the VCC supply level at power -up and power -down (see “Write Protection” and Figure 58). \nIf needed a pull -up resister on the /CS pin can be used to acco mplish this.  \n4.2 Serial Data Input, Output and IOs (DI, DO and IO0, IO1, IO2, IO3)   \nTheQ32JW  supports standard SPI, Dual SPI and Quad SPI operation. Standard SPI instructions use the \nunidirectional DI (input) pin to serially write instructions, addresses or data to the device on the rising edge \nof the Serial Clock (CLK) input pin. Standard SPI al so uses the unidirectional DO (output) to read data or \nstatus from the device on the falling edge of CLK.  \nDual and Quad SPI instructions use the bidirectional IO pins to serially write instructions, addresses or data \nto the device on the rising edge of CL K and read data or status from the device on the falling edge of CLK. \nQuad SPI instructions require the non -volatile Quad Enable bit (QE) in Status Register -2 to be set. When \nQE=1, the /WP pin becomes IO2 and the /HOLD pin becomes IO3.  \n  \n4.3 Write Protect (/W P) \nThe Write Protect (/WP) pin can be used to prevent the Status Register from being written. Used in \nconjunction with the Status Register’s Block Protect (CMP, SEC, TB, BP2, BP1 and BP0) bits and Status \nRegister Protect (SRP) bits, a portion as small as a  4KB sector or the entire memory array can be hardware \nprotected. The /WP pin is active low.  \n4.4 HOLD (/HOLD)  \nThe /HOLD pin allows the device to be paused while it is actively selected. When /HOLD is brought low, \nwhile /CS is low, the DO pin will be at high i mpedance and signals on the DI and CLK pins will be ignored \n(don’t care). When /HOLD is brought high, device operation can resume. The /HOLD function can be useful \nwhen multiple devices are sharing the same SPI signals. The /HOLD pin is active low. When th e QE bit of \nStatus Register -2 is set for Quad I/O, the /HOLD pin function is not available since this pin is used for IO3. \nSee Figure 1a -c for the pin configuration of Quad I/O operation.  \n \n4.5 Serial Clock (CLK)  \nThe SPI Serial Clock Input (CLK) pin provides th e timing for serial input and output operations. ("See SPI \nOperations")  \n \n4.6 Reset (/RESET)(1) \nA dedicated hardware /RESET pin is available on SOIC -16 and TFBGA packages. When it’s driven low for \na minimum period of ~1µS, this device will terminate any external or internal operations and return to its \npower -on state.  \nNote:  \n1. Hardware /RESET pin is available on SOIC -16 or TFBGA; please contact Winbond for this package.  \n  \nW25 Q32JW  \n \n \n- 9 - \n5. BLOCK DIAGRAM  \nFigure 2. W25 Q32JW  Serial Flash Memory Block Diagram  \n \n \n003000h                                                0030FFh\n002000h                                                0020FFh\n001000h                                                0010FFh\nColumn Decode\nAnd 256 -Byte Page BufferBeginning\nPage AddressEnding\nPage Address\nW25Q32FV\nSPI\nCommand &\nControl Logic\nByte Address\nLatch / CounterStatus\nRegisterWrite Control\nLogic\nPage Address\nLatch / Counter\nDO (IO1)DI (IO0)/CSCLK/WP (IO2)\nHigh Voltage\nGeneratorsxx0F00h                                    xx0FFFh\n•           Sector 0 (4KB)            •\nxx0000h                                    xx00FFhxx1F00h                                    xx1FFFh\n•           Sector 1 (4KB)            •\nxx1000h                                    xx10FFhxx2F00h                                    xx2FFFh\n•           Sector 2 (4KB)            •\nxx2000h                                    xx20FFh•\n•\n•xxDF00h                                    xxDFFFh\n•           Sector 13 (4KB)            •\nxxD000h                                    xxD0FFhxxEF00h                                    xxEFFFh\n•           Sector 14 (4KB)            •\nxxE000h                                    xxE0FFhxxFF00h                                    xxFFFFh\n•           Sector 15 (4KB)            •\nxxF000h                                    xxF0FFhBlock Segmentation\nDataSecurity Register 1 -3Write Protect Logic and Row Decode000000h                                   0000FFhSFDP Register\n00FF00h                                  00FFFFh\n•            Block 0 (64KB)             •\n000000h                                   0000FFh•\n•\n•0FFF00h                                  0FFFFFh\n•           Block 15 (64KB)            •\n0F0000h                                   0F00FFh10FF00h                                  10FFFFh\n•           Block 16 (64KB)            •\n100000h                                   1000FFh•\n•\n•1FFF00h                                  1FFFFFh\n•           Block 31 (64KB)            •\n1F0000h                                   1F00FFh20FF00h                                  20FFFFh\n•           Block 32 (64KB)            •\n200000h                                   2000FFh•\n•\n•3FFF00h                                  3FFFFFh\n•           Block 63 (64KB)            •\n3F0000h                                   3F00FFh\n/HOLD (IO3) or\n/RESET (IO3)\nW25Q32JW\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 10 -                                 -Revision H  \n6. FUNCTIONAL DESCRIPTIONS  \n6.1 Standard SPI Instructions  \nThe W25 Q32JW  is accessed through an SPI compatible bus consisting of four signals: Serial Clock (CLK), \nChip Select (/CS), Serial Data Input (DI) and Serial Data Output (DO). Standard SPI instructions use the DI \ninput pin to serially write instructions, addresses or data to the device on the rising edge of CLK. The DO \noutput pin is used to read data or status from the device on the falling edge of CLK.  \nSPI bus operation Mode 0 (0,0) and 3 (1,1) are supported. The prima ry difference between Mode 0 and \nMode 3 concerns the normal state of the CLK signal when the SPI bus master is in standby and data is not \nbeing transferred to the Serial Flash. For Mode 0, the CLK signal is normally low on the falling and rising \nedges of / CS. For Mode 3, the CLK signal is normally high on the falling and rising edges of /CS.  \n6.2 Dual SPI Instructions  \nThe W25 Q32JW  supports Dual SPI operation when using instructions such as “Fast Read Dual Output \n(3Bh)” and “Fast Read Dual I/O (BBh)”. These instructions allow data to be transferred to or from the device \nat two to three times the rate of ordinary Serial Flash devices . The Dual SPI Read instructions are ideal for \nquickly downloading code to RAM upon power -up (code -shadowing) or for executing non -speed -critical \ncode directly from the SPI bus (XIP) . When using Dual SPI instructions, the DI and DO pins become \nbidirectiona l I/O pins: IO0 and IO1.  \n6.3 Quad SPI Instructions  \nThe W25 Q32JW  supports Quad  SPI operation when using instructions such as “Fast Read Quad  Output \n(6Bh)”,  and “Fast Read Quad  I/O (EBh). These instructions allow data to be transferred to or from the device \nfour to six times the rate of ordinary Serial Flash. When using Quad SPI instructions, the DI and DO pins \nbecome bidirectional IO0 and IO1, with the additional I/O pins: IO2, IO3.   \n6.4 Software Reset & Hardware /RESET pin  \nThe W25 Q32JW  can be reset to the initial p ower -on state by a software Reset sequence. This sequence \nmust include two consecutive instructions: Enable Reset (66h) & Reset (99h). If the instruction sequence \nis successfully accepted, the device will take approximately 30 µS (tRST) to reset. No instruc tion will be \naccepted during the reset period. For the SOIC -16 and TFBGA packages, W25 Q32JW  provides a \ndedicated hardware /RESET pin. Drive the /RESET pin low for a minimum period of ~ 1µS (tRESET*) will \ninterrupt any on -going external/internal operations  and reset the device to its initial power -on state. \nHardware /RESET pin has higher priority than other SPI input signals (/CS, CLK, IOs).  \n \nNote:  \n1. Hardware /RESET pin is available on SOIC -16 or TFBGA; please contact Winbond for his package.  \n2. While a faster /RESET pulse (as short as a few hundred nanoseconds) will often reset the device, a 1us minimum is recommended \nto ensure reliable operation.  \n3. There is an internal pull -up resistor for the dedicated /RESET pin on the SOIC -16 package. If the reset function is  not needed, \nthis pin can be left floating in the system . \n \nW25 Q32JW  \n \n \n- 11 - \n6.5 Write Protection  \nApplications that use non -volatile memory must take into consideration the possibility of noise and other \nadverse system conditions that may compromise data integrity. To address this concern, the W25 Q32JW  \nprovides several means to protect the data from inadvertent writes.  \n Write Protect Features  \n\uf0b7 Device resets when VCC is below threshold  \n\uf0b7 Time delay write disable after Power -up \n\uf0b7 Write enable/disable instructions and automatic write di sable after erase or program  \n\uf0b7 Software and Hardware (/WP pin) write protection using Status Registers  \n\uf0b7 Additional Individual Block/Sector Locks for array protection  \n\uf0b7 Write Protection using Power -down instruction  \n\uf0b7 Lock Down write protection for Status Register  until the next power -up \n\uf0b7 One Time Program (OTP) write protection for array and Security Registers using Status Register* \n* Note:  This feature is available upon special order. Please contact Winbond for details.  \n \nUpon power -up or at power -down, the W25 Q32JW  will maintain a reset condition while VCC is below the \nthreshold value of V WI, (See Power -up Timing and Voltage Levels and Figure 43). While reset, all \noperations are disabled and no instructions are recognized. During power -up and after the VCC voltage \nexceeds V WI, all program and erase related instructions are further disabled for a time delay of t PUW. This \nincludes the Write Enable, Page Program, Sector Erase, Block Erase, Chip Erase and the Write Status \nRegister instructions. Note that the chip select pin (/CS) must track the VCC supply level at power -up until \nthe VCC -min level and t VSL time delay is reached, and it must also track the VCC supply level at power -\ndown to prevent adverse command sequence. If needed a pull -up resister on /CS can be used to \naccomplish this.  \nAfter power -up the device is automatically placed in a write -disabled state with the Status Register Write \nEnable Latch (WEL) set to a 0. A Write Enable instruction must be issued before a Page Program, Sector \nErase, Block Erase, Chip Era se or Write Status Register instruction will be accepted. After completing a \nprogram, erase or write instruction the Write Enable Latch (WEL) is automatically cleared to a write -disabled \nstate of 0.  \nSoftware controlled write protection is facilitated using  the Write Status Register instruction and setting the \nStatus Register Protect (SRP , SRL ) and Block Protect (CMP , TB, BP[2 :0]) bits. These settings allow a \nportion or the entire memory array to be configured as read only. Used in conjunction with the Write  Protect \n(/WP) pin, changes to the Status Register can be enabled or disabled under hardware control. See Status \nRegister section for further information. Additionally, the Power -down instruction offers an extra level of \nwrite protection as all instruction s are ignored except for the Release Power -down instruction.  \nThe W25 Q32JW  also provides another Write Protect method using the Individual Block Locks. Each 64KB \nblock (except the top and bottom blocks, total of 62 blocks) and each 4KB sector within the top /bottom \nblocks (total of 32 sectors) are equipped with an Individual Block Lock bit. When the lock bit is 0, the \ncorresponding sector or block can be erased or programmed; when the lock bit is set to 1, Erase or Program \ncommands issued to the corresponding  sector or block will be ignored. When the device is powered on, all \nIndividual Block Lock bits will be 1, so the entire memory array is protected from Erase/Program. An \n“Individual Block Unlock (39h)” instruction must be issued to unlock any specific sect or or block.  \nThe WPS bit in Status Register -3 is used to decide which Write Protect scheme should be used. When \nWPS=0 (factory default), the device will only utilize CMP, SEC, TB, BP[2:0] bits to protect specific areas of \nthe array; when WPS=1, the device will utilize the Individual Block Locks for write protection.  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 12 -                                 -Revision H  \n7. STATUS AND CONFIGURA TION REGISTERS  \nThree Status and Configuration Registers are provided for W25 Q32JW . The Read Status Register -1/2/3 \ninstructions can be used to provide status on the availability of the flash memory array, whether the \ndevice is write enabled or disabled, the state of write protection, Quad SPI setting, Security Register lock \nstatus, Eras e/Program Suspend status, and output driver strength. The Write Status Register instruction \ncan be used to configure the device write protection features, Quad SPI setting, Security Register OTP \nlocks, and output driver strength. Write access to the Status  Register is controlled by the state of the  non-\nvolatile Status Register Protect bits ( SRL), the Write Enable instruction, and during Standard/Dual SPI \noperations.  \n7.1 Status Registers  \n \nFigure 4 a. Status Register -1 \n Erase/Write In Progress (BUSY) – Status Only   \nBUSY is a read only bit in the status register (S0) that is set to a 1 state when the device is executing a \nPage Program, Quad Page Program, Sector Erase, Block Erase, Chip Erase, Write Status Register or \nErase/Program Security Register instruction. During this time the device will ignore further instructions \nexcept for the Read Status Register and Erase/Program Suspend instruction (see t W, tPP, tSE, tBE, and t CE \nin AC Characteristics). When the program, erase or write status/security register instruction has completed, \nthe BUSY bit will be cleared to a 0 state indicating the device is ready for further instructions.   \n Write Enable Latch (WEL) – Status Only  \nWrite E nable Latch (WEL) is a read only bit in the status register (S1) that is set to 1 after executing a Write \nEnable Instruction. The WEL status bit is cleared to 0 when the device is write disabled. A write disable \nstate occurs upon power -up or after any of t he following instructions: Write Disable, Page Program, Quad \nPage Program, Sector Erase, Block Erase, Chip Erase, Write Status Register, Erase Security Register and \nProgram Security Register.  \n Block Protect Bits (BP2, BP1, BP0) – Volatile/Non -Volatile Writa ble \nThe Block Protect Bits (BP2, BP1, BP0) are non -volatile read/write bits in the status register (S4, S3, and \nS2) that provide Write Protection control and status. Block Protect bits can be set using the Write Status \nRegister Instruction (see t W in AC ch aracteristics). All, none or a portion of the memory array can be \nprotected from Program and Erase instructions (see Status Register Memory Protection table). The factory \ndefault setting for the Block Protection Bits is 0, none of the array protected.  \n \nSRP SE C TB BP2BP1BP0WEL BUS Y\nTOP/BOTTOM PROTECT\nWRITE E NABLE LATCH\n S7 S6 S5 S4 S3 S2 S1 S0\nSE CTOR PROTECT\nBLOCK PROTECT B ITS\nERA SE /WRITE IN P ROGRESS(Volatile /Non-Volatile Writable )\n(Status -Only)\n(Status -Only)(Volatile /Non-Volatile Writable )\n(Volatile /Non-Volatile Writable )\nW25 Q32JW  \n \n \n- 13 - \n Top/Bottom Block Protect  (TB) – Volatile/Non -Volatile Writable  \nThe non -volatile Top/Bottom bit (TB) controls if the Block Protect Bits (BP2, BP1, BP0) protect from the Top \n(TB=0) or the Bottom (TB=1) of the array as shown in the Status Register Memory Protect ion table. The \nfactory default setting is TB=0. The TB bit can be set with the Write Status Register Instruction depending \non the state of the SRL and WEL bits.  \n Sector /Block  Protect Bit (SEC)  – Volatile/Non -Volatile Writable   \nThe non -volatile Sector /Block  Protect bit (SEC)  controls if the Block Protect Bits (BP2, BP1, BP0) protect \neither 4KB Sectors (SEC=1) or 64KB Blocks (SEC=0) in the Top (TB=0) or the Bottom (TB=1) of the array \nas shown in the Status Register Memory Protection table. The  default setting  is SEC=0. \n Complement Protect (CMP) – Volatile/Non -Volatile Writable  \nThe Complement Protect bit (CMP) is a non -volatile read/write bit in the status register (S14). It is used in \nconjunction with SEC, TB, BP2, BP1 and BP0 bits to provide more flexibility f or the array protection. Once \nCMP is set to 1, previous array protection set by SEC, TB, BP2, BP1 and BP0 will be reversed. For instance, \nwhen CMP=0, a top 64KB block can be protected while the rest of the array is not; when CMP=1, the top \n64KB block will become unprotected while the rest of the array become read -only. Please refer to the Status \nRegister Memory Protection table for details. The  default setting is CMP =0. \n  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 14 -                                 -Revision H  \n Status Register Protect (SRP , SRL) – Volatile/Non -Volatile Writable  \nThree Status and Configuration Registers are provided for W25 Q32JW . The Read Status Register -1/2/3 \ninstructions can be used to provide status on the availability of the flash memory array, whether the device \nis write enabled or disabled, the state of write protection, Quad  SPI setting, Security Register lock status,  \nErase/Program Suspend status,  and output driver strength, The Write Status Register instruction can be \nused to configure the device write protection features, Quad SPI setting,  Security Register OTP locks,  \noutput driver. Write access to the Status Register is controlled by the state of the  non-volatile Status Register \nProtect bits (SRP , SRL ), the Write Enable instruction, and during Standard/Dual SPI operations, the /WP \npin.  \nSRL  SRP /WP Status  \nRegister  Descri ption  \n0 0 X Software  \nProtection  /WP pin has no control. The Status register can be written to \nafter a Write Enable instruction, WEL=1. [Factory Default]  \n0 1 0 Hardware  \nProtected  When /WP pin is low the Status Register locked and cannot be \nwritten to.  \n0 1 1 Hardware  \nUnprotected  When /WP pin is high the Status register is unlocked and can \nbe written to after a Write Enable instruction, WEL=1.  \n1 X X Power Supply  \nLock -Down  Status Register is protected and cannot be written to again \nuntil the next power -down, power -up cycle.(1)  \n1 X X One Time  \nProgram(2) Status Register is permanently protected and cannot be written \nto. (enabled by adding prefix command AAh, 55h)  \n \n1.  When SR L =1 , a power -down, power -up cycle will change SR L =0 state.  \n2.  Please  contact Winbond for details regarding the special instruction sequence.  \n \nW25 Q32JW  \n \n \n- 15 - \n \nFigure 4 b. Status Register -2 \n \n Erase/Program Suspend Status (SUS) – Status Only  \nThe Suspend Status bit is a read only bit in the status register (S15) that is set to 1 after executing a \nErase/Program Suspend (75h) instruction. The SUS status bit is cleared to 0 by Erase/Program Resume \n(7Ah) instruction as well as a power -down, power -up cycle.  \n Security Register Lock Bits (LB3, LB2, LB1) – Volatile/Non -Volatile OTP Writable  \nThe Security Register Lock Bits (LB3, LB2, LB1) are non -volatile One Time Program (OTP) bits in Status \nRegister (S13, S12, S11) that provide the write protect control  and status to the Security Registers. The \ndefault state of LB3 -1 is 0, Security Registers are unlocked. LB3 -1 can be set to 1 individually using the \nWrite Status Register instruction. LB3 -1 are One Time Programmable (OTP), once it’s set to 1, the \ncorrespo nding 256 -Byte Security Register will become read -only permanently.  \n Quad Enable  (QE) – Volatile/Non -Volatile Writable  \nThe Quad Enable (QE ) bit is a non -volatile read/write bit in the status register (S 9) that enables Quad SPI \noperation . When the QE bit is set to a 0 state ( factory default  for part numbers with ordering options “IM”  & \n“JM”), the /HOLD are enabled, the device operates in Standard/Dual SPI modes . When the QE bit is set to \na 1 (factory fixed default  for part numbers with ordering options “IQ”  & “JQ”), the Quad IO2 and IO3 pins \nare enabled, and /HOLD function  is disabled, the device operates in Standard/Dual/Quad SPI modes.  \n \n \nS15 S14 S13 S12 S11 S10 S9 S8\nSUS CMP LB3LB2LB1 (R) QE\nSUS PEND S TA TUS\n(Status -Only)\nCOMPLEM ENT PROTECT\n(Volatile /Non-Volatile Writable )\nSE CURITY RE GISTE R LOCK B ITS\n(Volatile /Non-Volatile Writable )S15 S14 S13 S12 S11 S10 S9\nSUS CMP LB3LB2LB1 SRL\n QUAD E NABLE\n(Volatile /Non-Volatile Writable )\nSTATUS RE GISTER Lock\n(Volatile /Non-Volatile Writable )Reserved\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 16 -                                 -Revision H  \n \nFigure 4 c. Status Register -3 \n Write Protect Selection (WPS) – Volatile/Non -Volatile Writable  \nThe WPS bit is used to select which Write Protect scheme should be used. When WPS=0, the device will \nuse the combination of CMP, SEC, TB, BP[2:0] bits to protect a specific ar ea of the memory array. When \nWPS=1, the device will utilize the Individual Block Locks to protect any individual sector or blocks. The \ndefault value for all Individual Block Lock bits is 1 upon device power on or after reset.  \n \n \n Output Driver Strength (DRV1 , DRV0) – Volatile/Non -Volatile Writable  \nThe DRV1 & DRV0 bits are used to determine the output driver strength for the Read operations.  \nDRV1, DRV0  Driver Strength  \n0, 0 100%  \n0, 1 75% \n1, 0 50% \n1, 1 25% (default)  \n Reserved Bits – Non Functional  \nThere are a few reserved Status Register bits that may be read out as a “0” or “1”. It is recommended to \nignore the values of those bits. During a “Write Status Register” instruction, the Reserved Bits can be written \nas “0”, but there will not be any effects.  \n  \n S \n16 \nDRV \n1 \nDRV \n0 \nReserved  \nS \n17 \n S \n19 \n S \n20 \n S \n21 \n S \n22 \n S \n23 \n S \n18 \nWPS \n ( \nR \n) \nReserved  \nReserved  \nOutput Driver Strength  \n( \nVolatile  \n/ \nNon \n- \nVolatile Writable  \n) \nWrite Protect Selection  \n( \nVolatile  \n/ \nNon \n- \nVolatile Writable  \n) \nReserved  \n( \nR \n) \n ( \nR \n) \n ( \nR \n) \n( \nR \n) \nW25 Q32JW  \n \n \n- 17 - \n Status Register Memory Protection (WPS = 0, CMP = 0)  \n \nSTATUS REGISTER(1) W25Q32JW  (32M -BIT) MEMORY PROTECTI ON(3) \nSEC TB BP2 BP1 BP0 PROTECTED  \nBLOCK(S)  PROTECTED  \nADDRESSES  PROTECTED  \nDENSITY  PROTECTED  \nPORTION(2) \nX X 0 0 0 NONE  NONE  NONE  NONE  \n0 0 0 0 1 63 3F0000h – 3FFFFFh  64KB  Upper 1/64  \n0 0 0 1 0 62 and 63  3E0000h – 3FFFFFh  128KB  Upper 1/32  \n0 0 0 1 1 60 thru 63  3C0000h – 3FFFFFh  256KB  Upper 1/16  \n0 0 1 0 0 56 thru 63  380000h – 3FFFFFh  512KB  Upper 1/8  \n0 0 1 0 1 48 thru 63  300000h – 3FFFFFh  1MB Upper 1/4  \n0 0 1 1 0 32 thru 63  200000h – 3FFFFFh  2MB Upper 1/2  \n0 1 0 0 1 0 000000h – 00FFFFh  64KB  Lower 1/64  \n0 1 0 1 0 0 and 1  000000h – 01FFFFh  128KB  Lower 1/32  \n0 1 0 1 1 0 thru 3  000000h – 03FFFFh  256KB  Lower 1/16  \n0 1 1 0 0 0 thru 7  000000h – 07FFFFh  512KB  Lower 1/8  \n0 1 1 0 1 0 thru 15  000000h – 0FFFFFh  1MB Lower 1/4  \n0 1 1 1 0 0 thru 31  000000h – 1FFFFFh  2MB Lower 1/2  \nX X 1 1 1 0 thru 63  000000h – 3FFFFFh  4MB ALL \n1 0 0 0 1 63 3FF000 h – 3FFFFFh  4KB U - 1/1024  \n1 0 0 1 0 63 3FE000 h – 3FFFFFh  8KB U - 1/512  \n1 0 0 1 1 63 3FC000 h – 3FFFFFh  16KB  U - 1/256  \n1 0 1 0 X 63 3F8000 h – 3FFFFFh  32KB  U - 1/128  \n1 1 0 0 1 0 000000h – 000FFFh  4KB L - 1/1024  \n1 1 0 1 0 0  000000h – 001FFFh  8KB L - 1/512  \n1 1 0 1 1 0  000000h – 003FFFh  16KB  L - 1/256  \n1 1 1 0 X 0  000000h – 007FFFh  32KB  L - 1/128  \n \nNotes:  \n1. X = don’t care  \n2. L = Lower; U = Upper  \n3. If any Erase or Program command specifies a memory region that contains protected data portion, this command \nwill be ignored.  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 18 -                                 -Revision H  \n Status Register Memory Protection (WPS = 0, CMP = 1)  \n \nSTATUS REGISTER(1) W25Q32JW  (32M -BIT) MEMORY PROTECTI ON(3) \nSEC TB BP2 BP1 BP0 PROTECTED  \nBLOCK(S)  PROTECTED  \nADDRESSES  PROTECTED  \nDENSITY  PROTECTED  \nPORTION(2) \nX X 0 0 0 0 thru 63  000000h – 3FFFFFh  4MB ALL \n0 0 0 0 1 0 thru 62  000000h – 3EFFFFh  4,032KB  Lower  63/64  \n0 0 0 1 0 0 and 61  000000h – 3DFFFFh  3,968KB  Lower 31/32  \n0 0 0 1 1 0 thru 59  000000h – 3BFFFFh  3,840KB  Lower 15/16  \n0 0 1 0 0 0 thru 55  000000h – 37FFFFh  3,584KB  Lower 7/8  \n0 0 1 0 1 0 thru 47  000000h – 2FFFFFh  3MB Lower 3/4  \n0 0 1 1 0 0 thru 31  000000h – 1FFFFFh  2MB Lower 1/2  \n0 1 0 0 1 1 thru 63  010000h – 3FFFFFh  4,032KB  Upper 63/64  \n0 1 0 1 0 2 and 63  020000h – 3FFFFFh  3,968KB  Upper 31/32  \n0 1 0 1 1 4 thru 63  040000h – 3FFFFFh  3,840KB  Upper 15/16  \n0 1 1 0 0 8 thru 63  080000h – 3FFFFFh  3,584KB  Upper 7/8  \n0 1 1 0 1 16 thru 63  100000h – 3FFFFFh  3MB Upper 3/4  \n0 1 1 1 0 32 thru 63  200000h – 3FFFFFh  2MB Upper 1/2  \nX X 1 1 1 NONE  NONE  NONE  NONE  \n1 0 0 0 1 0 thru 63  000000h – 3FEFFFh  4,092 KB L - 1023/1024  \n1 0 0 1 0 0 thru 63  000000h – 3FDFFFh  4,088KB L - 511/512  \n1 0 0 1 1 0 thru 63  000000h – 3FBFFFh  4,080 KB L - 255/256  \n1 0 1 0 X 0 thru 63  000000h – 3F7FFFh  4,064 KB L - 127/128  \n1 1 0 0 1 0 thru 63  001000h – 3FFFFFh  4,092 KB U - 1023/1024  \n1 1 0 1 0 0 thru 63  002000h – 3FFFFFh  4,088KB U - 511/512  \n1 1 0 1 1 0 thru 63  004000h – 3FFFFFh  4,080 KB U - 255/256  \n1 1 1 0 X 0 thru 63  008000h – 3FFFFFh  4,064 KB U - 127/128  \n \nNotes:  \n1. X = don’t care  \n2. L = Lower; U = Upper  \n3. If any Erase or Program command specifies a memory region that contains protected data portion, this command \nwill be ignored . \nW25 Q32JW  \n \n \n- 19 - \n Individual Block Memory Protection (WPS=1)   \n \n \n \nFigure 4 d. Individual Block/Sector Locks  \n \nNotes:  \n1. Individual Block/Sector protection is only valid when WPS=1.  \n2. All individual block/sector lock bits are set to 1 by default after power up, all memory array is protected.  \n \n  \nSector 0 (4KB)Sector 1 (4KB)Sector 14 (4KB)Sector 15 (4KB)Block 1 (64KB)Block 62 (64KB)Sector 0 (4KB)Sector 1 (4KB)Sector 14 (4KB)Sector 15 (4KB)Block 0 (64KB)\nBlock 63 (64KB)\nIndividual Block Locks:\n32 Sectors (Top/Bottom)\n62 Blocks\nIndividual Block Lock: \n36h + Address\nIndividual Block Unlock: \n39h + Address\nRead Block Lock:\n3Dh + Address\nGlobal Block Lock:\n7Eh\nGlobal Block Unlock:\n98h\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 20 -                                 -Revision H  \n8. INSTRUCTIONS  \nThe Standard/Dual/Quad SPI instruction set of the W25 Q32JW  consists of 48 basic instructions that are \nfully controlled through the SPI bus (see Instruction Set Table1 -2). Instructions are ini tiated with the falling \nedge of Chip Select (/CS). The first byte of data clocked into the DI input provides the instruction code. \nData on the DI input is sampled on the rising edge of clock with most significant bit (MSB) first.  \nInstructions vary in lengt h from a single byte to several bytes and may be followed by address bytes, data \nbytes, dummy bytes (don’t care), and in some cases, a combination. Instructions are completed with the \nrising edge of edge /CS. Clock relative timing diagrams for each instruc tion are included in Figures 5 through \n57. All read instructions can be completed after any clocked bit. However, all instructions that Write, \nProgram or Erase must complete on a byte boundary (/CS driven high after a full 8 -bits have been clocked) \notherwi se the instruction will be ignored. This feature further protects the device from inadvertent writes. \nAdditionally, while the memory is being programmed or erased, or when the Status Register is being written, \nall instructions except for Read Status Regist er will be ignored until the program or erase cycle has \ncompleted.  \n8.1 Device ID and Instruction Set Tables  \n Manufacturer and Device Identification  \nMANUFACTURER ID  (MF7 - MF0)   \nWinbond Serial Flash  EFh \n \nDevice ID  (ID7 - ID0) (ID15 - ID0) \nInstruction   ABh,  90h, 92h, 94h  9Fh \nW25Q32JW -IQ 15h 6016h  \nW25Q32JW -IM* 15h 8016h  \n \nNote: For DTR, QPI supporting, please refer to W25Q32JW  DTR datasheet.  \nW25 Q32JW  \n \n \n- 21 - \n Instruction Set Table 1 (Standard SPI Instructions)(1) \nData Input Output  Byte 1  Byte 2  Byte 3  Byte 4  Byte 5  Byte 6  Byte 7  \nNumber  of Clock (1-1-1) 8 8 8 8 8 8 8 \nWrite Enable  06h  \nVolatile SR Write Enable  50h  \nWrite Disable  04h  \nRelease Power -down  ABh      \nDevice ID  ABh Dummy  Dummy  Dummy  (ID7-ID0)(2)  \nManufacturer/Device ID  90h Dummy  Dummy  00h (MF7 -MF0)  (ID7-ID0)  \nJEDEC ID  9Fh (MF7 -MF0)  (ID15 -ID8) (ID7-ID0)  \nRead Unique ID  4Bh Dummy  Dummy  Dummy  Dummy  (UID63 -0)  \nRead Data  03h A23-A16 A15-A8 A7-A0 (D7-D0)  \nFast Read  0Bh A23-A16 A15-A8 A7-A0 Dummy  (D7-D0)  \nPage Program  02h A23-A16 A15-A8 A7-A0 D7-D0 D7-D0(3)  \nSector Erase (4KB)  20h A23-A16 A15-A8 A7-A0  \nBlock Erase (32KB)  52h A23-A16 A15-A8 A7-A0  \nBlock Erase (64KB)  D8h A23-A16 A15-A8 A7-A0  \nChip Erase  C7h/60h  \nRead Status Register -1 05h (S7-S0)(2)  \nWrite Status Register -1(4) 01h (S7-S0)(4)  \nRead Status Register -2 35h (S15 -S8)(2)  \nWrite Status Register -2 31h (S15 -S8)  \nRead Status Register -3 15h (S23 -S16)(2)  \nWrite Status Register -3 11h (S23 -S16)   \nRead SFDP Register  5Ah A23-A16 A15-A8 A7–A0 dummy   (D7-0)  \nErase Security Register(5) 44h A23-A16 A15-A8 A7-A0  \nProgram Security Register(5) 42h A23-A16 A15-A8 A7-A0 D7-D0 D7-D0(3)  \nRead Security Register(5) 48h A23-A16 A15-A8 A7-A0 Dummy  (D7-D0)  \nGlobal Block Lock  7Eh  \nGlobal Block Unlock  98h  \nRead Block Lock  3Dh A23-A16 A15-A8 A7-A0 (L7-L0)  \nIndividual Block Lock  36h A23-A16 A15-A8 A7-A0  \nIndividual Block Unlock  39h A23-A16 A15-A8 A7-A0  \nErase / Program Suspend  75h  \nErase / Program  Resume  7Ah  \nPower -down  B9h  \nEnable Reset  66h  \nReset Device  99h  \n \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 22 -                                 -Revision H  \n Instruction Set Table 2 (Dual/Quad SPI Instructions)(1) \nData Input Output  Byte 1  Byte 2  Byte 3  Byte 4  Byte 5  Byte 6  Byte 7  Byte 8  Byte 9  \nNumber of Clock (1-1-2) 8 8 8 8 4 4 4 4 4 \nFast Read Dual Output  3Bh A23-A16 A15-A8 A7-A0 Dummy  Dummy  (D7-D0)(7) … \nNumber of Clock (1-2-2) 8 4 4 4 4 4 4 4 4 \nFast Read Dual I/O  BBh A23-A16(6) A15-A8(6) A7-A0(6) Dummy(11) (D7-D0)(7) … \nMftr./Device ID Dual I/O  92h A23-A16(6) A15-A8(6) 00(6) Dummy(11) (MF7 -MF0)  (ID7-ID0)(7)  \nNumber of Clock (1-1-4) 8 8 8 8 2 2 2 2 2 \nQuad Input Page Program  32h A23-A16 A15-A8 A7-A0 (D7-D0)(9) (D7-D0)(3) … \nFast Read Quad Output  6Bh A23-A16 A15-A8 A7-A0 Dummy  Dummy  Dummy  Dummy  (D7-D0)(10)… \nNumber of Clock (1-4-4) 8 2(8) 2(8) 2(8) 2 2 2 2 2 \nMftr./Device ID Quad I/O  94h A23-A16 A15-A8 00 Dummy(11) Dummy  Dummy  (MF7 -MF0)  (ID7-ID0) \nFast Read Quad I/O  EBh A23-A16 A15-A8 A7-A0 Dummy(11) Dummy  Dummy  (D7-D0)  \n \nNotes:  \n1. Data bytes are shifted with Most Significant Bit first. Byte fields with data in parenthesis “( )” indicate data \noutput from the device on either 1, 2 or 4 IO pins.  \n2. The Status Register contents and Device ID will repeat continuously until /CS terminates the instruction.  \n3. At least one byte of data input is required fo r Page Program, Quad Page Program and Program Security \nRegisters, up to 256 bytes of data input. If more than 256 bytes of data are sent to the device, the \naddressing will wrap to the beginning of the page and overwrite previously sent data.  \n4. Write Status R egister -1 (01h) can also be used to program Status Register -1&2, see section 8.2.5.  \n5. Security Register Address:  \n          Security Register 1:  A23 -16 = 00h;  A15 -8 = 10h;  A7 -0 = byte address  \n          Security Register 2:  A23 -16 = 00h;  A15 -8 = 20h;  A7 -0 = byte address  \n          Security Register 3:  A23 -16 = 00h;  A15 -8 = 30h;  A7 -0 = byte address  \n6. Dual SPI address input format:  \n          IO0 = A22, A20, A18, A16, A14, A12, A10, A8  A6, A4, A2, A0, M6, M4, M2, M0  \n          IO1 = A23, A21, A19, A17, A15, A13, A11, A9  A7, A5, A3, A1, M7, M5, M3, M1  \n7. Dual SPI data output format:  \n          IO0 = (D6, D4, D2, D0)  \n          IO1 = (D7, D5, D3, D1)  \n8. Quad SPI address input format:                                    \n          IO0 = A20, A16, A12, A8,  A4, A0, M4, M0           \n          IO1 = A21, A17, A13, A9,  A5, A1, M5, M1           \n          IO2 = A22, A18, A14, A10,  A6, A2, M6, M2           \n          IO3 = A23, A19, A15, A11,  A7, A3, M7, M3           \n9. Quad SPI data input/output format:  \n          IO0 = (D4, D0, …..)  \n          IO1 = (D5, D1, …..)  \n          IO2 = (D6, D2, …..)  \n          IO3 = (D7, D3, …..)  \n10. Fast Read Quad I/O data output format:  \n          IO0 = (x, x, x, x, D4, D0, D4, D0)  \n          IO1 = (x, x, x, x, D5, D1, D5, D1)  \n          IO2 = (x, x, x, x, D6, D2, D6, D2)  \n          IO3 = (x, x, x, x, D7, D3, D7, D3)  \n11. The first dummy is M7 -M0 should be set to Fxh. \n \nW25 Q32JW  \n \n \n- 23 - \n8.2 Instruction Descriptions  \n Write Enable (06h)  \nThe Write Enable ins truction (Figure 5) sets the Write Enable Latch (WEL) bit in the Status Register to a 1. \nThe WEL bit must be set prior to every Page Program, Quad Page Program, Sector Erase, Block Erase, \nChip Erase, Write Status Register and Erase/Program Security Registe rs instruction. The Write Enable \ninstruction is entered by driving /CS low, shifting the instruction code “06h” into the Data Input (DI) pin on \nthe rising edge of CLK, and then driving /CS high.  \n  \nFigure 5. Write Enable Instruction  \n \n Write Enable for Volatile Status Register (50h)  \nThe non -volatile Status Register bits described in section 7.1 can also be written to as volatile bits. This \ngives more flexibility to change the system configuration and memory protection schemes quickly without \nwaiting for the typical non -volatile bit write cycles or affecting the endurance of the Status Register non -\nvolatile bits. To write the volatile values into the Status Register bits, the Write Enable for Volatile Status \nRegister (50h) instruction must be issued prior to a Write Status Register (01h) instruction. Write Enable for \nVolatile Status Register instruction (Figure 6) will not set the Write Enable Latch (WEL) bit, it is only valid \nfor the Write Status Register instruction to change the volatile Status Register bit values.  \n  \nFigure 6. Write Enable for Volatile Status Register Instruction  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nMode 0Mode 3\nInstruction (06h)\nHigh Impedance\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nMode 0Mode 3\nInstruction (50h)\nHigh Impedance\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 24 -                                 -Revision H  \n Write Disable (04h)  \nThe Write Disable instruction (Figure 7) resets the Write Enable Latch (WEL) bit in the Status Register to a \n0. The Write Disable instruction is entered by  driving  /CS low, shifting the instruction code “04h” into the DI \npin and then driving /CS high. Note that the WEL bit is automatically reset after Power -up and upon \ncompletion of the Write Status Register, Erase/Program Security Registers, Page Program, Q uad Page \nProgram, Sector Erase, Block Erase, Chip Erase and Reset instructions.  \n  \nFigure 7. Write Disable Instruction  \n Read Status Register -1 (05h), Status Register -2 (35h) & Status Register -3 (15h)  \nThe Read Status Register instructions allow the 8 -bit Status Registers to be read. The instruction is entered \nby driving /CS low and shifting the instruction code “05h” for Status Register -1, “35h” for Status Register -2 \nor “15h” for Status Register -3 into the DI pin on the rising edge of CLK. The status register bits are then \nshifted out on the DO pin at the falling edge of CLK with most significant bit (MSB) first as shown in Figure \n8. Refer to section 7.1 for Status Register descriptions.  \nThe Read Status  Register instruction may be used at any time, even while a Program, Erase or Write Status \nRegister cycle is in progress. This allows the BUSY status bit to be checked to determine when the cycle \nis complete and if the device can accept another instruction . The Status Register can be read continuously, \nas shown in Figure 8. The instruction is completed by driving /CS high.  \n \nFigure 8. Read Status Register Instruction  \n \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nMode 0Mode 3\nInstruction (04h)\nHigh Impedance\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (05h/35h/15h)\nHigh Impedance8 9 1011121314151617181920212223\n7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7Status Register-1/2/3 out Status Register-1/2/3 out\n* *= MSB*\nW25 Q32JW  \n \n \n- 25 - \n Write Status Register -1 (01h), Status Register -2 (31h) & Status Register -3 (11h)  \nThe Write Status Register instruction allows the Status Registers to be written. The writable Status Register \nbits include: SEC, TB, BP[2:0] in Status Register -1; CMP, LB[3:1], QE, SRL in Status Register -2; DRV1, \nDRV0, WPS in Status Register -3. All other S tatus Register bit locations are read -only and will not be \naffected by the Write Status Register instruction. LB[3:1] are non -volatile OTP bits, once it is set to 1, it \ncannot be cleared to 0.  \nTo write non -volatile Status Register bits, a standard Write Enable (06h) instruction must previously have \nbeen executed for the device to accept the Write Status Register instruction (Status Register bit WEL must \nequal 1). Once write enabled, the instruction is entered by driving /CS low, sending the instruction co de \n“01h/31h/11h”, and then writing the status register data byte as illustrated in Figure 9a . \nTo write volatile Status Register bits, a Write Enable for Volatile Status Register (50h) instruction must have \nbeen executed prior to the Write Status Register i nstruction (Status Register bit WEL remains 0). However, \nSRL and LB[3:1] cannot be changed from “1” to “0” because of the OTP protection for these bits. Upon \npower off or the execution of a Software/Hardware Reset  or Power -down instruction , the volatile St atus \nRegister bit values will be lost, and the non -volatile Status Register bit values will be restored.  \nDuring non -volatile Status Register write operation (06h combined with 01h/31h/11h), after /CS is driven \nhigh, the self -timed Write Status Register cyc le will commence for a time duration of t W (See AC \nCharacteristics). While the Write Status Register cycle is in progress, the Read Status Register instruction \nmay still be accessed to check the status of the BUSY bit. The BUSY bit is a 1 during the Write Status \nRegister cycle and a 0 when the cycle is finished and ready to accept other instructions again. After the \nWrite Status Register cycle has finished, the Write Enable Latch (WEL) bit in the Status Register will be \ncleared to 0.  \nDuring volatile Status Register write operation (50h combined with 01h/31h/11h), after /CS is driven high, \nthe Status Register bits will be refreshed to the new values within the time period of t SHSL2  (See AC \nCharacteristics). BUSY bit will remain 0 during the Status Register bi t refresh period.  \nRefer to section 7.1 for Status Register descriptions.  \n \nFigure 9a. Write Status Register -1/2/3 Instruction  \n  \n \n \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction\n(01h/31h/11h)\nHigh Impedance8 9 101112131415\n7 6 5 4 3 2 1 0Register-1/2/3 inMode 0Mode 3\n*\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 26 -                                 -Revision H  \nThe W25 Q32JW  is also backward compatible to Winbond’s  previous generations of serial flash memories, \nin which the Status Register -1&2 can be written using a single “Write Status Register -1 (01h)” command. \nTo complete the Write Status Register -1&2 instruction, the /CS pin must be driven high after the sixteen th \nbit of data that is clocked in as shown in Figure 9 b. If /CS is driven high after the eighth clock, the Write \nStatus Register -1 (01h) instruction will only program the Status Register -1, the Status Register -2 will not \nbe affected (Previous generations w ill clear CMP and QE bits).  \n \nFigure 9 b. Write Status Register -1/2 Instruction  \n  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (01h)\nHigh Impedance8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n7 6 5 4 3 2 1 0 15 14 13 12 11 10 9 8Status Register 1 in Status Register 2 inMode 0Mode 3\n* *\n= MSB*\nW25 Q32JW  \n \n \n- 27 - \n Read Data (03h)  \nThe Read Data instruction allows one or more data bytes to be sequentially read from the memory. The \ninstruction is initiated by driving the /CS pin low and then shifting the instruction code “03h” followed by a \n24-bit address (A23 -A0) into the DI pin. The code and address bits are latched on the rising edge of the \nCLK pin. After the address is received, the data byte of the addressed memory location will be s hifted out \non the DO pin at the falling edge of CLK with most significant bit (MSB) first. The address is automatically \nincremented to the next higher address after each byte of data is shifted out allowing for a continuous \nstream of data. This means that the entire memory can be accessed with a single instruction as long as the \nclock continues. The instruction is completed by driving /CS high.  \nThe Read Data instruction sequence is shown in Figure 14. If a Read Data instruction is issued while an \nErase, Pro gram or Write cycle is in process (BUSY=1) the instruction is ignored and will not have any \neffects on the current cycle. The Read Data instruction allows clock rates from D.C. to a maximum of f R \n(see AC Electrical Characteristics).  \n \n \nFigure 14. Read Data Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (03h)\nHigh Impedance8 9 10 28 29 30 31 32 33 34 35 36 37 38 39\n7 6 5 4 3 2 1 0 724-Bit Address\n23 22 21 3 2 1 0\nData Out 1\n**\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 28 -                                 -Revision H  \n Fast Read (0Bh)  \nThe Fast Read instruction is similar to the Read Data instruction except that it can operate at the highest \npossible frequency of F R (see AC Electrical Characteristics). This is accomplished by adding eig ht “dummy” \nclocks after the 24 -bit address as shown in Figure 16. The dummy clocks allow the devices internal circuits \nadditional time for setting up the initial address. During the dummy clocks the data value on the DO pin is \na “don’t care”.  \n \nFigure 16 . Fast Read Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (0Bh)\nHigh Impedance8 9 10 28 29 30 31\n24-Bit Address\n23 22 21 3 2 1 0\nData Out 1*\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)32 33 34 35 36 37 38 39\nDummy Clocks\nHigh Impedance40 41 42 44 45 46 47 48 49 50 51 52 53 54 55\n7 6 5 4 3 2 1 0 7Data Out 2\n*7 6 5 4 3 2 1 0\n*43 31\n0= MSB*\nW25 Q32JW  \n \n \n- 29 - \n Fast Read Dual Output (3Bh)  \nThe Fast Read Dual Output (3Bh) instruction is similar to the standard Fast Read (0Bh) instruction except \nthat data is output on two pins; IO 0 and IO 1. This allows data to be transferred at twice the rate of standard \nSPI devices. The Fast Read Dual Output instruction is ideal for quickly downloading code from Flash to \nRAM upon power -up or for applications that cache code -segments to RAM for execution.  \nSimilar to the Fast Read instruction, the Fast Read Dual Output instruction can operate at the highest \npossible frequency of F R (see AC Electrical Characteristics). This is accomplished by adding eight “dummy” \nclocks after the 24 -bit address as shown in Fi gure 18. The dummy clocks allow the device\'s internal circuits \nadditional time for setting up the initial address. The input data during the dummy clocks is “don’t care”. \nHowever, the IO 0 pin should be high -impedance prior to the falling edge of the first data out clock.  \n \nFigure 18. Fast Read Dual Output Instruction  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (3Bh)\nHigh Impedance8 9 10 28 29 30\n32 33 34 35 36 37 38 39\n6 4 2 024-Bit Address\n23 22 21 3 2 1 0\n**31\n31/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Dummy Clocks\n040 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55\n7 5 3 1High Impedance6 4 2 0\n7 5 3 16 4 2 0\n7 5 3 16 4 2 0\n7 5 3 1IO0 switches from\nInput to Output\n6\n7\nData Out 1 *Data Out 2 *Data Out 3 *Data Out 4= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 30 -                                 -Revision H  \n Fast Read Quad Output (6Bh)  \nThe Fast Read Quad Output (6Bh) instruction is similar to the Fast Read Dual Output (3Bh) instruction \nexcept that data is output on four pins, IO 0, IO 1, IO 2, and IO 3. The Quad Enable (QE) bit in Status Register -\n2 must be set to 1 before the device will accept the Fast Read  Quad Output Instruction . The Fast Read \nQuad Output Instruction allows data to be transferred at four times the rate of standard SPI devices.  \nThe Fast Read Quad Output instruction can operate at the highest possible frequency of F R (see AC \nElectrical Characteristics). This is accomplished by adding eight “dummy” clocks after the 24 -bit address \nas shown in Figure 20. The dummy clocks allow the de vice\'s internal circuits additional time for setting up \nthe initial address. The input data during the dummy clocks is “don’t care”. However, the IO pins should be \nhigh-impedance prior to the falling edge of the first data out clock.  \n \nFigure 20. Fast Read Quad Output Instruction  \n/CS\nCLK Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (6Bh)\nHigh Impedance8 9 10 28 29 30\n32 33 34 35 36 37 38 39\n4 024-Bit Address\n23 22 21 3 2 1 0\n*31\n31/CS\nCLK\nDummy Clocks\n040 41 42 43 44 45 46 47\n5 1High Impedance4\n5\nByte 1High Impedance\nHigh Impedance\n6 2\n7 3High Impedance6\n7High Impedance4 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 3\nByte 2 Byte 3 Byte 4IO0 switches from\nInput to Output\nIO0\nIO1\nIO2\nIO3IO0\nIO1\nIO2\nIO3\n= MSB*\nW25 Q32JW  \n \n \n- 31 - \n Fast Read Dual I/O (BBh)  \nThe Fast Read Dual I/O (BBh) instruction allows for improved random access while maintaining two IO \npins, IO 0 and IO 1. It is similar to the Fast Read Dual Output (3Bh) instruction but with the capability to input \nthe Address bits (A23 -0) two bits per clock. This reduced instruction overhead may allow for code execution \n(XIP) directly from the D ual SPI in some applications.   \nSimilar to the Fast Read Dual Output (3Bh) instruction, the Fast Read Dual I/O instruction can operate at \nthe highest possible frequency of F R (see AC Electrical Characteristics). This is accomplished by adding \nfour “dummy” clocks after the 24 -bit addres s as shown in Figure 22. The dummy clocks allow the device\'s \ninternal circuits additional time for setting up the initial address. The input data during the dummy clocks is \n“don’t care”. However, the IO 0 pin should be high -impedance prior to the falling ed ge of the first data out \nclock.  \n \n \n \n \nFigure 22. Fast Read Dual I/ O Instruction (M7-M0 should be set to Fxh) \n \n  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (BBh)8 9 10 12 13 14\n24 25 26 27 28 29 30 31\n6 4 2 0\n**\n23/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)032 33 34 35 36 37 38 39\n7 5 3 1\n*6 4 2 0\n7 5 3 16 4 2 0\n7 5 3 16 4 2 0\n7 5 3 1\n* *IOs switch from\nInput to Output\n6\n722 20 18 16\n23 21 19 1714 12 10 8\n15 13 11 96 4 2 0\n7 5 3 16 4 2 0\n7 5 3 111 15 16 17 18 20 21 22 19 23\n1A23-16 A15-8 A7-0 M7-0\nByte 1 Byte 2 Byte 3 Byte 4= MSB**\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 32 -                                 -Revision H  \n \n  Fast Read Quad I/O (EBh)  \nThe Fast Read Quad I/O (EBh) instruction is similar to the Fast Read Dual I/O (BBh) instruction except that \naddress and data bits are input and output through four pins IO 0, IO 1, IO 2 and IO 3 and four Dummy clocks \nare required in SPI mode prior to the data output. The Quad I/O dramatically reduces instruction overhead \nallowing faster random access for code execution (XIP ) directly from the Quad SPI. The  Quad Enable bit \n(QE) of Status Register -2 must be set to enable the Fast Read Quad I/O  Instruction .  \n \nFigure 24. Fast Read Quad I/O Instruction (M7-M0 should be set to Fxh) \n \n \n \n   \nM7-0/CS\nCLK Mode 0Mode 3 0 1\nIO0\nIO1\nIO2\nIO32 3 4 5\n20 16 12 8\n21 17\n22 18\n23 1913 9\n14 10\n15 11A23-166 7 8 9\n4 0\n5 1\n6 2\n7 3A15-8 A7-0\nByte 1 Byte 24 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 310 11 12 13 14\n4\n5\n6\n7IOs switch from\nInput to Output\nByte 315 16 17 18 19 20 21 22 23\nDummy Dummy Instruction (EBh)\nW25 Q32JW  \n \n \n- 33 - \n Page Program (02h)  \nThe Page Program instruction allows from one byte to 256 bytes (a page) of data to be programmed at \npreviously erased  (FFh) memory locations. A Write Enable instruction must be executed before the device \nwill accept the Page Program Instruction (Status Register bit WEL= 1) . The instruction is initiated by driving \nthe /CS pin low then shifting the instruction code “02h” followed by a 24 -bit address (A23 -A0) and at least \none data byte, into the DI pin. The  /CS pin must be held low for the entire length of the instruction whil e \ndata is being sent to the device. The Page Program instruction sequence is shown in Figure 29.  \nIf an entire 256 byte page is to be programmed, the last address byte (the 8 least significant address bits) \nshould be set to 0. If the last address byte is no t zero, and the number of clocks exceeds the remaining \npage length, the addressing will wrap to the beginning of the page. In some cases, less than 256 bytes (a \npartial page) can be programmed without having any effect on other bytes within the same page. One \ncondition to perform a partial page program is that the number of clocks cannot exceed the remaining page \nlength. If more than 256 bytes are sent to the device the addressing will wrap to the beginning of the page \nand overwrite previously sent data.  \nAs with the write and erase instructions, the /CS pin must be driven high after the eighth bit of the last byte \nhas been latched. If this is not done the Page Program instruction will not be executed. After /CS is driven \nhigh, the self -timed Page Program ins truction will commence for a time duration of tpp (See AC \nCharacteristics). While the Page Program cycle is in progress, the Read Status Register instruction may \nstill be accessed for checking the status of the BUSY bit. The BUSY bit is a 1 during the Page  Program \ncycle and becomes a 0 when the cycle is finished and the device is ready to accept other instructions again. \nAfter the Page Program cycle has finished the Write Enable Latch (WEL) bit in the Status Register is cleared \nto 0. The Page Program instru ction will not be executed if the addressed page is protected by the Block \nProtect (CMP, SEC, TB, BP2, BP1, and BP0) bits or the Individual Block/Sector Locks.  \n \nFigure 29. Page Program Instruction  \n \n \n \n \n \n \n/CS\nCLK\nDI\n(IO0)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (02h)8 9 10 28 29 30 39\n24-Bit Address\n23 22 21 3 2 1\n*\n/CS\nCLK\nDI\n(IO0)40 41 42 43 44 45 46 47\nData Byte 248 49 50 52 53 54 55\n2072\n7 6 5 4 3 2 1 051 39\n031\n032 33 34 35 36 37 38\nData Byte 1\n7 6 5 4 3 2 1\n*\nMode 0Mode 3\nData Byte 3\n2073\n2074\n2075\n2076\n2077\n2078\n20790\nData Byte 256\n*7 6 5 4 3 2 1 0\n*7 6 5 4 3 2 1 0\n*= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 34 -                                 -Revision H  \n Quad Input Page Program ( 32h)  \nThe Quad Page Program instruction allows up to 256 bytes of data to be programmed at previously erased \n(FFh) memory locations using four pins: IO 0, IO 1, IO 2, and IO 3.  The Quad Page Program can improve \nperformance for PROM Programmer and applications that have slow clock speeds <5MHz. Systems with \nfaster clock speed will not realize much benefit for the Quad Page Program instruction since the inherent \npage program time is much greater than the time it take to clock -in the data.  \nTo use Quad Page Program the Quad Enabl e (QE) bit in Status Register -2 must be set to 1. A Write Enable \ninstruction  must be executed before the device will accept the Quad Page Program instruction (Status \nRegister -1, WEL=1). The instruction is initiated by driving the  /CS pin low then shifting the instruction code \n“32h” followed by a 24 -bit address (A23 -A0) and at least one data byte, into the IO pins. The  /CS pin must \nbe held low for the entire length of the instruction while data is being sent to the device. All other functions \nof Quad Page Pr ogram are identical to standard Page Program. The Quad Page Program instruction \nsequence is shown in Figure 30.  \n \n \nFigure 30. Quad  Input Page Program Instruction  \n \n \n/CS\nCLK Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (32h)8 9 10 28 29 30\n32 33 34 35 36 37\n4 024-Bit Address\n23 22 21 3 2 1 0\n*31\n31/CS\nCLK\n5 1Byte 1\n6 2\n7 34 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 3Byte 2 Byte 3Byte\n256\n0 4 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 34 0\n5 1\n6 2\n7 3\n536\n537\n538\n539\n540\n541\n542\n543\nMode 0Mode 3\nByte\n253Byte\n254Byte\n255\nIO0\nIO1\nIO2\nIO3IO0\nIO1\nIO2\nIO3\n* * * * * * *= MSB*\nW25 Q32JW  \n \n \n- 35 - \n Sector Erase (20h)  \nThe Sector Erase instruction sets all memory within a specified sector  (4K-bytes) to the erased state of all \n1s (FFh). A Write Enable instruction must be executed before the device will accept the Sector Erase \nInstruction (Status Register bit WEL must equal 1). The instruction is initiated by driving the /CS pin low \nand shif ting the instruction code “20h” followed a 24 -bit sector address (A23 -A0). The Sector Erase \ninstruction sequence is shown in Figure 31. \nThe /CS pin must be driven high after the eighth bit of the last byte has been latched. If this is not done the \nSector E rase instruction will not be executed. After /CS is driven high, the self -timed Sector Erase instruction \nwill commence for a time duration of t SE (See AC Characteristics). While the Sector Erase cycle is in \nprogress, the Read Status Register instruction ma y still be accessed for checking the status of the BUSY \nbit. The BUSY bit is a 1 during the Sector Erase cycle and becomes a 0 when the cycle is finished and the \ndevice is ready to accept other instructions again. After the Sector Erase cycle has finished the Write Enable \nLatch (WEL) bit in the Status Register is cleared to 0. The Sector Erase instruction will not be executed if \nthe addressed page is protected by the Block Protect (CMP, SEC, TB, BP2, BP1, and BP0) bits or the \nIndividual Block/Sector Locks. \n \nFigure 31. Sector Erase Instruction  \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (20h)\nHigh Impedance8 9 29 30 31\n24-Bit Address\n23 22 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 36 -                                 -Revision H  \n 32KB Block Erase (52h)  \nThe Block Erase instruction sets all memory within a specified block (32K -bytes) to the erased state of all \n1s (FFh). A Write Enable instruction must be executed before the device will accept the Block Erase \nInstruction (Status Register bit WEL must equal 1). The instruction is initiated by driving the /CS pin low \nand shifting the instruction code “52h” followed a 24 -bit block address (A23 -A0). The Block Erase instruction \nsequence is sho wn in Figure 32.  \nThe /CS pin must be driven high after the eighth bit of the last byte has been latched. If this is not done the \nBlock Erase instruction will not be executed. After /CS is driven high, the self -timed Block Erase instruction \nwill commence for a time duration of t BE1 (See AC Characteristics). While the Block Erase cycle is in \nprogress, the Read Status Register instruction may still be accessed for checking the status of the BUSY \nbit. The BUSY bit is a 1 during the Block Erase cycle and becom es a 0 when the cycle is finished and the \ndevice is ready to accept other instructions again. After the Block Erase cycle has finished the Write Enable \nLatch (WEL) bit in the Status Register is cleared to 0. The Block Erase instruction will not be executed  if \nthe addressed page is protected by the Block Protect (CMP, SEC, TB, BP2, BP1, and BP0) bits or the \nIndividual Block/Sector Locks. \n \nFigure 32. 32KB Block Erase Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (52h)\nHigh Impedance8 9 29 30 31\n24-Bit Address\n23 22 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \n \n- 37 - \n 64KB Block Erase (D8h)  \nThe Block Erase instruction sets all memory within a  specified block (64K -bytes) to the erased state of all \n1s (FFh). A Write Enable instruction must be executed before the device will accept the Block Erase \nInstruction (Status Register bit WEL must equal 1). The instruction is initiated by driving the /CS pin low \nand shifting the instruction code “D8h” followed a 24 -bit block address (A23 -A0). The Block Erase \ninstruction sequence is shown in Figure 33.  \nThe /CS pin must be driven high after the eighth bit of the last byte has been latched. If this is not don e the \nBlock Erase instruction will not be executed. After /CS is driven high, the self -timed Block Erase instruction \nwill commence for a time duration of t BE (See AC Characteristics). While the Block Erase cycle is in \nprogress, the Read Status Register ins truction may still be accessed for checking the status of the BUSY \nbit. The BUSY bit is a 1 during the Block Erase cycle and becomes a 0 when the cycle is finished and the \ndevice is ready to accept other instructions again. After the Block Erase cycle has finished the Write Enable \nLatch (WEL) bit in the Status Register is cleared to 0. The Block Erase instruction will not be executed if \nthe addressed page is protected by the Block Protect (CMP, SEC, TB, BP2, BP1, and BP0) bits or the \nIndividual Block/Sector  Locks. \n \nFigure 33. 64KB Block Erase Instruction  \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (D8h)\nHigh Impedance8 9 29 30 31\n24-Bit Address\n23 22 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 38 -                                 -Revision H  \n Chip Erase (C7h / 60h )  \nThe Chip Erase instruction sets all memory within the device to the erased state of all 1s (FFh). A Write \nEnable instruction must be executed before the device will accept the Chip Erase Instruction (Status \nRegister bit WEL must equal 1). The instruction is initiated by driving the /CS pin low and shifting the \ninstruction code “C7h”  or “60h” . The Chip Erase instruction sequence is shown in Figure 34.  \nThe /CS pin must be driven h igh after the eighth bit has been latched. If this is not done the Chip Erase \ninstruction will not be executed. After /CS is driven high, the self -timed Chip Erase instruction will commence \nfor a time duration of t CE (See AC Characteristics). While the Chi p Erase cycle is in progress, the Read \nStatus Register instruction may still be accessed to check the status of the BUSY bit. The BUSY bit is a 1 \nduring the Chip Erase cycle and becomes a 0 when finished and the device is ready to accept other \ninstructions  again. After the Chip Erase cycle has finished the Write Enable Latch (WEL) bit in the Status \nRegister is cleared to 0. The Chip Erase instruction will not be executed if any memory region is protected \nby the Block Protect (CMP, SEC, TB, BP2, BP1, and BP0 ) bits or the Individual Block/Sector Locks.  \n \nFigure 34. Chip Erase Instruction Sequence Diagram  \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (C7h/60h)\nHigh ImpedanceMode 0Mode 3\nW25 Q32JW  \n \n \n- 39 - \n Erase / Program Suspend (75h)  \nThe Erase/Program Suspend instruction “75h”, allows the system to interrupt a Sector or Block Erase \noperation or a Page Program operation and then read from or program/erase data to, any other sectors or \nblocks. The Erase/Program Suspend instruction sequence is shown in Figure 35.  \nThe Write Status Register instruction (01h) and Erase instructions (20h, 52h, D8h, C7h, 60h, 4 4h) are not \nallowed during Erase Suspend. Erase Suspend is valid only during the Sector or Block erase operation. If \nwritten during the Chip Erase operation, the Erase Suspend instruction is ignored. The Write Status \nRegister instruction (01h) and Program instructions (02h, 32h, 42h) are not allowed during Program \nSuspend. Program Suspend is valid only during the Page Program or Quad Page Program operation.  \nThe Erase/Program Suspend instruction “75h” will be accepted by the device only if the SUS bit in the  \nStatus Register equals to 0 and the BUSY bit equals to 1 while a Sector or Block Erase or a Page Program \noperation is on -going. If the SUS bit equals to 1 or the BUSY bit equals to 0, the Suspend instruction will \nbe ignored by the device. A maximum of tim e of “t SUS” (See AC Characteristics) is required to suspend the \nerase or program operation. The BUSY bit in the Status Register will be cleared from 1 to 0 within “t SUS” \nand the SUS bit in the Status Register will be set from 0 to 1 immediately after Erase /Program Suspend. \nFor a previously resumed Erase/Program operation, it is also required that the Suspend instruction “75h” is \nnot issued earlier than a minimum of time of “t SUS” following the preceding Resume instruction “7Ah”.  \nUnexpected power off during the Erase/Program suspend state will reset the device and release the \nsuspend state. SUS bit in the Status Register will also reset to 0. The data within the page, sector or block \nthat was being suspended may become corrupted. It is recommended for the use r to implement system \ndesign techniques against the accidental power interruption and preserve data integrity during \nerase/program suspend state.  \n \n \nFigure 35. Erase/Program Suspend  Instruction  \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (75h)\nHigh ImpedanceMode 0Mode 3tSUS\nAccept instructions\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 40 -                                 -Revision H  \n Erase / Program Resume (7Ah)  \nThe Erase/Program Resume instruction “7Ah” must be written to resume the Sector or Block Erase \noperation or the Page Program operation after an Erase/Program Suspend. The Resume instruction “7Ah” \nwill be accepted by the device only if the SUS bit in the Status Register equals to 1  and the BUSY bit equals \nto 0. After issued the SUS bit will be cleared from 1 to 0 immediately, the BUSY bit will be set from 0 to 1 \nwithin 200ns and the Sector or Block will complete the erase operation or the page will complete the \nprogram operation. If  the SUS bit equals to 0 or the BUSY bit equals to 1, the Resume instruction “7Ah” will \nbe ignored by the device. The Erase/Program Resume instruction sequence is shown in Figure 36.  \nResume instruction is ignored if the previous Erase/Program Suspend opera tion was interrupted by \nunexpected power off. It is also required that a subsequent Erase/Program Suspend instruction not to be \nissued within a minimum of time of “t SUS” following a previous Resume instruction.  \n \nFigure 36. Erase/Program Resume  Instruction  \n \n/CS\nCLK\nDI\n(IO0)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (7Ah)Mode 0Mode 3\nResume previously\nsuspended Program or\nErase\nW25 Q32JW  \n \n \n- 41 - \n Power -down (B9h)  \nAlthough the standby current during normal operation is relatively low, standby current can be further \nreduced with the Power -down instruction. The lower power consumption makes the Power -down instruction \nespecially useful for battery powered applications (See ICC1 and ICC2 in AC Characteristics). The \ninstruction is initiated by driving the /CS pin low and shifting the instruction code “B9h” as shown in Figure \n37.  \nThe /CS pin must be driven high after the eighth bit has bee n latched. If this is not done the Power -down \ninstruction will not be executed. After /CS is driven high, the power -down state will entered within the time \nduration of t DP (See AC Characteristics). While in the power -down stat e only the Release Power -down \n(ABh) instruction, which restores the device to normal operation, will be recognized. All other instructions \nare ignored. This includes the Read Status Register instruction, which is always available during normal \noperation. Ignoring all but one instruction makes the Power Down state a useful condition for securing \nmaximum write protection. The device always powers -up in the normal operation with the standby current \nof ICC1.  \n \n \nFigure 37. Deep Power -down Instruction  \n \n/CS\nCLK\nDI\n(IO0)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (B9h)Mode 0Mode 3tDP\nPower-down current Stand-by current\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 42 -                                 -Revision H  \n Release Power -down  / Device  ID (ABh)  \nThe Release from Power -down  / Device ID instruction is a multi -purpose instruction. It can be used to \nrelease the device from the power -down state , or obtain the devices electronic identification (ID) number.  \nTo release the device from the powe r-down state, the instruction is issued by driving the /CS pin low, shifting \nthe instruction code “ABh” and driving /CS high as shown in Figure 38a. Release from power -down will take \nthe time duration of t RES1 (See AC Characteristics) before the device wil l resume normal operation and \nother instructions are accepted. The /CS pin must remain high during the t RES1 time duration.  \nWhen used only to obtain the Device ID while not in the power -down state, the instruction is initiated by \ndriving the /CS pin low an d shifting the instruction code “ABh” followed by 3 -dummy bytes. The Device ID \nbits are then shifted out on the falling edge of CLK with most significant bit (MSB) first. The Device ID value \nfor the W25 Q32JW  is listed in Manufacturer and Device Identificat ion table. The Device ID can be read \ncontinuously. The instruction is completed by driving /CS high.  \nIf the Release from Power -down/ Device ID instruction is issued while an Erase, Program or Write cycle is \nin process (when BUSY equals 1) the instruction is ignored and will not have any effects on the current \ncycle. \n \nFigure 38a. Release Power -down Instruction  \n \n \n \nFigure 38b. Device ID Instruction   \n/CS\nCLK\nDI\n(IO0)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (ABh)Mode 0Mode 3tRES1\nPower-down current Stand-by current\ntRES2/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (ABh)\nHigh Impedance8 9 29 30 31\n3 Dummy Bytes\n23 22 2 1 0\n*Mode 0Mode 3\n7 6 5 4 3 2 1 0\n*32 33 34 35 36 37 38\nDevice ID\nPower-down current Stand-by current = MSB*\nW25 Q32JW  \n \n \n- 43 - \n Read Manufacturer / Device ID (90h)  \nThe Read Manufacturer/Device ID instruction is an alternative to the Release from Power -down / Device \nID instruction that provides both the JEDEC assigned manufacturer ID and the specific device ID.  \nThe Read Manufacturer/Device ID instruction is very simi lar to the Release from Power -down / Device ID \ninstruction. The instruction is initiated by driving the /CS pin low and shifting the instruction code “90h” \nfollowed by a 24 -bit address (A23 -A0) of 000000h. After which, the Manufacturer ID for Winbond (EFh)  and \nthe Device ID are shifted out on the falling edge of CLK with most significant bit (MSB) first as shown in \nFigure 39. The Device ID values for the W25 Q32JW  are listed in Manufacturer and Device Identification \ntable. The instruction is completed by dri ving /CS high. \n \nFigure 39. Read Manufacturer / Device ID Instruction  \n  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (90h)\nHigh Impedance8 9 10 28 29 30 31\nAddress (000000h)\n23 22 21 3 2 1 0\nDevice ID*\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)32 33 34 35 36 37 38 39\nManufacturer ID (EFh)40 41 42 44 45 46\n7 6 5 4 3 2 1 0\n*43 31\n0Mode 0Mode 3= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 44 -                                 -Revision H  \n Read Manufacturer / Device ID Dual I/O (92h)  \nThe Read Manufacturer / Device ID Dual I/O instruction is an alternative to the Read Manufacturer / Device \nID instruction that provides  both the JEDEC assigned manufacturer ID and the specific device ID at 2x \nspeed.  \nThe Read Manufacturer / Device ID Dual I/O instruction is similar to the Fast Read Dual I/O instruction. The \ninstruction is initiated by driving the /CS pin low and shifting t he instruction code “92h” followed by a 24 -bit \naddress (A23 -A0) of 000000h, but with the capability to input the Address bits two bits per clock . After \nwhich, the Manufacturer ID for Winbond (EFh) and the Device ID are shifted out 2 bits per clock on the \nfalling edge of CLK with most significant bits (MSB) first as shown in Figure 40. The Device ID values for \nthe W25 Q32JW  are listed in Manufacturer and Device Identification table. The Manufacturer and Device \nIDs can be read continuously, alternating from one to the other. The instruction is completed by driving /CS \nhigh. \n \nFigure 40. Read Manufacturer / Device ID Dual I/O  Instruction  \n \nNote:  \nThe bits M(7 -0) must be set to Fxh to be compatible with Fast Read Dual I/O instruction.  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (92h)\nHigh Impedance8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n7 5 3 1\n* *6 4 2 0\n7 5 3 16 4 2 0\n7 5 3 16 4 2 0\n7 5 3 16 4 2 023\n* *A23-16 A15-8 A7-0 (00h) M7-0\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)24 25 26 27 28 29 30 31 32 33 34 36 37 38 35 23\n0Mode 0Mode 3\n7 5 3 16 4 2 0\n7 5 3 16 4 2 0\n7 5 3 16 4 2 0\n7 5 36 4 2\n10\n1\nMFR ID Device IDMFR ID\n(repeat)Device ID\n(repeat)IOs switch from\nInput to Output\n* * * *= MSB*\nW25 Q32JW  \n \n \n- 45 - \n Read Manufacturer / Device ID Quad I/O (94h)  \nThe Read Manufacturer / Device ID Quad I/O instruction is an alternative to the Read Manufacturer / Device \nID instruction that provides both the JEDEC assigned manufacturer ID and the specific device ID at 4x \nspeed.  \nThe Read Manufacturer / Device ID Quad I/O instruction is similar to the Fast Read Quad I/O instruction. \nThe instruction is initiated by dr iving the /CS pin low and shifting the instruction code “94h” followed by a \nfour clock dummy cycles and then a 24 -bit address (A23 -A0) of 000000h, but with the capability to input \nthe Address bits four bits per clock . After which, the Manufacturer ID for W inbond (EFh) and the Device ID \nare shifted out four bits per clock on the falling edge of CLK with most significant bit (MSB) first as shown \nin Figure 41. The Device ID values for the W25 Q32JW  are listed in Manufacturer and Device Identification \ntable. The  Manufacturer and Device IDs can be read continuously, alternating from one to the other. The \ninstruction is completed by driving /CS high. \n \nFigure 41. Read Manufacturer / Device ID Quad I/O Instruction  \n \nNote:  \nThe “ Read Command B ypass Mode” bits M( 7-0) must be set to Fxh to be compatible with Fast Read Quad I/O instruction.  \nMode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (94h)\nHigh Impedance8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n5 14 023\nMode 0Mode 3IOs switch from\nInput to Output\nHigh Impedance\n7 36 2/CS\nCLK\nIO0\nIO1\nIO2\nIO3High ImpedanceA23-16 A15-8A7-0\n(00h)M7-0\nMFR ID Device IDDummy Dummy\n/CS\nCLK\nIO0\nIO1\nIO2\nIO323\n0\n1\n2\n35 14 0\n7 36 25 14 0\n7 36 25 14 0\n7 36 25 14 0\n7 36 25 14 0\n7 36 2\n5 14 0\n7 36 25 14 0\n7 36 25 14 0\n7 36 25 14 0\n7 36 224 25 26 27 28 29 30\nMFR ID\n(repeat)Device ID\n(repeat)MFR ID\n(repeat)Device ID\n(repeat)\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 46 -                                 -Revision H  \n Read Unique ID Number (4Bh)  \nThe Read Unique ID Number instruction accesses a factory -set read -only 64 -bit number that is unique to \neach W25 Q32JW  device. The ID number can be use d in conjunction with user software methods to help \nprevent copying or cloning of a system. The Read Unique ID instruction is initiated by driving the /CS pin \nlow and shifting the instruction code “4Bh” followed by a four bytes of dummy clocks. After which , the 64 -\nbit ID is shifted out on the falling edge of CLK as shown in Figure 42. \n \n \nFigure 42. Read Unique ID Number  Instruction  \n \n \n \n \n \n \n \n \n \n \n \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (4Bh)\nHigh Impedance8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)24 25 26 27 28 29 30 31 32 33 34 36 37 38 35 23\nMode 0Mode 3\n*Dummy Byte 1 Dummy Byte 2\n39 40 41 42\nDummy Byte 3 Dummy Byte 4\n63 62 61 2 1 0\n64-bit Unique Serial Number\n100\n101\n102\nHigh Impedance\n= MSB*\nW25 Q32JW  \n \n \n- 47 - \n Read JEDEC ID (9Fh)  \nFor compatibility reasons, the W25 Q32JW  provides several instructions to electronically determine the \nidentity of the device. The Read JEDEC ID instruction is compatible with the JEDEC standard for SPI \ncompatible serial memories that was adopted in 2003. The instruction is initiated by driving the /CS pin low \nand shifting the instruction code “9Fh”. The JEDEC assigned Manufacturer ID byte for Winbond (EFh) and \ntwo Device ID bytes, Memory Type (ID15 -ID8) and Capacity (ID7 -ID0) are then shifted out on the falling \nedge of CLK with most significant bit (MSB) first as shown in Figure 43. For memory type and capacity \nvalues refer to Manufacturer and Device Identification table.  \n \nFigure 43. Read JEDEC ID Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (9Fh)\nHigh Impedance8 9 10 12 13 14 15\nCapacity ID7-0/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)16 17 18 19 20 21 22 23Manufacturer ID (EFh)\n24 25 26 28 29 30\n7 6 5 4 3 2 1 0\n*27 15\nMode 0Mode 311\n7 6 5 4 3 2 1 0\n*Memory Type ID15-8= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 48 -                                 -Revision H  \n Read SFDP Register (5Ah)  \nThe W25 Q32JW  features a 256 -Byte Serial Flash Discoverable Parameter (SFDP) register that contains \ninformation about device configurations, available instructions and other features. The SFDP parameters \nare stored in one or more Parameter Identification (PID) tables. Currently only one PID table is specified, \nbut more may be added in the future. The Read SFDP Register instruction is compatible with the SFDP \nstandard initially established in 2010 for PC and other applications, as well as the JEDEC standard \nJESD216 -seria ls that is published in 2011. Most Winbond SpiFlash Memories shipped after June 2011 \n(date code 1124 and beyond) support the SFDP feature as specified in the applicable datasheet.  \nThe Read SFDP instruction is initiated by driving the /CS pin low and shift ing the instruction code “5Ah” \nfollowed by a 24 -bit address (A23 -A0)(1) into the DI pin. Eight “dummy” clocks are also required before the \nSFDP register contents are shifted out on the falling edge of the 40th CLK with most significant bit (MSB) \nfirst as s hown in Figure 34. For SFDP register values and descriptions, please refer to the Winbond \nApplication Note for SFDP Definition Table.  \nNote 1: A23 -A8 = 0; A7 -A0 are used to define the starting byte address for the 256 -Byte SFDP Register.  \n \nFigure 34. Read  SFDP Register Instruction Sequence Diagram  \n \n  \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (5Ah)\nHigh Impedance8 9 10 28 29 30 31\n24-Bit Address\n23 22 21 3 2 1 0\nData Out 1*\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)32 33 34 35 36 37 38 39\nDummy Byte\nHigh Impedance40 41 42 44 45 46 47 48 49 50 51 52 53 54 55\n7 6 5 4 3 2 1 0 7Data Out 2\n*7 6 5 4 3 2 1 0\n*7 6 5 4 3 2 1 043 31\n0\n= MSB*\nW25 Q32JW  \n \n \n- 49 - \n Erase Security Registers (44h)  \nThe W25 Q32JW  offers three 256 -byte Security Registers which can be erased and programmed \nindividually. These registers may be used by the system manufacturers to store security a nd other important \ninformation separately from the main memory array.  \nThe Erase Security Register instruction is similar to the Sector Erase instruction. A Write Enable instruction \nmust be executed before the device will accept the Erase Security Register Instruction (Status Register bit \nWEL must equal 1). The instruction is initiated by driving the /CS pin low and shifting the instruction code \n“44h” followed by a 24 -bit address (A23 -A0) to erase one of the three security registers.  \n \nADDRESS  A23-16 A15-12 A11-8 A7-0 \nSecurity Register #1  00h 0 0 0 1  0 0 0 0  Don’t Care  \nSecurity Register #2  00h 0 0 1 0  0 0 0 0  Don’t Care  \nSecurity Register #3  00h 0 0 1 1  0 0 0 0  Don’t Care  \nThe Erase Security Register instruction sequence is shown in Figure 45. The /CS pin must be driven high \nafter the eighth bit of the last byte has been latched. If this is not done the instruction will not be executed. \nAfter /CS is driven high, the self -timed Erase Security Register operation will commence for a time duration  \nof tSE (See AC Characteristics). While the Erase Security Register cycle is in progress, the Read Status \nRegister instruction may still be accessed for checking the status of the BUSY bit. The BUSY bit is a 1 \nduring the erase cycle and becomes a 0 when th e cycle is finished and the device is ready to accept other \ninstructions again. After the Erase Security Register cycle has finished the Write Enable Latch (WEL) bit in \nthe Status Register is cleared to 0. The Security Register Lock Bits (LB3 -1) in the Sta tus Register -2 can be \nused to OTP protect the security registers. Once a lock bit is set to 1, the corresponding security register \nwill be permanently locked, Erase Security Register instruction to that register will be ignored (Refer to \nsection 7.1.9 for detail descriptions).  \n \n \nFigure 45. Erase Security Registers Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (44h)\nHigh Impedance8 9 29 30 31\n24-Bit Address\n23 22 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 50 -                                 -Revision H  \n Program Security Registers (42h)  \nThe Program Security Register instruction is similar to the Page Program instruction. It allows from one \nbyte to 256 bytes of security register data to be programmed at previously erased  (FFh) memory locations. \nA Write Enable instruction must be executed before the device will accept the Program Security Register \nInstruction (Status Register bit WEL= 1). The instruction is initiated by driving the  /CS pin low then shifting \nthe instruction code “42h” followed by a 24 -bit address (A23 -A0) and at least one data byte, into the DI pin. \nThe /CS pin must be held low for the entire length of the instruction while data is being sent to the device.  \n \nADDRESS  A23-16 A15-12 A11-8 A7-0 \nSecurity Register #1  00h 0 0 0 1  0 0 0 0  Byte Address  \nSecurity Register #2  00h 0 0 1 0  0 0 0 0  Byte Address  \nSecurity Register #3  00h 0 0 1 1  0 0 0 0  Byte Address  \n \nThe Program Security Register instruction sequence is shown in Figure 46. The Security Register Lock Bits \n(LB3 -1) in the Status Register -2 can be used to OTP protect the security registers. Once a lock bit is set to \n1, the corresponding security register w ill be permanently locked, Program Security Register instruction to \nthat register will be ignored (See 7.1.9 for detail descriptions).  \n \n \nFigure 46. Program Security Registers Instruction  \n \n/CS\nCLK\nDI\n(IO0)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (42h)8 9 10 28 29 30 39\n24-Bit Address\n23 22 21 3 2 1\n*\n/CS\nCLK\nDI\n(IO0)40 41 42 43 44 45 46 47\nData Byte 248 49 50 52 53 54 55\n2072\n7 6 5 4 3 2 1 051 39\n031\n032 33 34 35 36 37 38\nData Byte 1\n7 6 5 4 3 2 1\n*\nMode 0Mode 3\nData Byte 3\n2073\n2074\n2075\n2076\n2077\n2078\n20790\nData Byte 256\n*7 6 5 4 3 2 1 0\n*7 6 5 4 3 2 1 0\n*= MSB*\nW25 Q32JW  \n \n \n- 51 - \n Read Security Registers (48h)  \nThe Read Security Register instruction is similar to the Fast Read instruction and allows one or more data \nbytes to be sequentially read from one of the four security registers. The instruction is initiated by driving \nthe /CS pin low and then shifting the instruction code “48h” followed by a 24 -bit address (A23 -A0) and eight \n“dummy” clocks into the DI pin. The code and address bits are latched on the rising edge of the CLK pin. \nAfter the address is received, the data byte of the addressed memory location wi ll be shifted out on the DO \npin at the falling edge of CLK with most significant bit (MSB) first. The byte address is automatically \nincremented to the next byte address after each byte of data is shifted out. Once the byte address reaches \nthe last byte of the register (byte address FFh), it will reset to address 00h, the first byte of the register, and \ncontinue to increment. The instruction is completed by driving /CS high. The Read Security Register \ninstruction sequence is shown in Figure 47. If a Read Sec urity Register instruction is issued while an Erase, \nProgram or Write cycle is in process (BUSY=1) the instruction is ignored and will not have any effects on \nthe current cycle. The Read Security Register instruction allows clock rates from D.C. to a maxim um of F R \n(see AC Electrical Characteristics).  \n \nADDRESS  A23-16 A15-12 A11-8 A7-0 \nSecurity Register #1  00h 0 0 0 1  0 0 0 0  Byte Address  \nSecurity Register #2  00h 0 0 1 0  0 0 0 0  Byte Address  \nSecurity Register #3  00h 0 0 1 1  0 0 0 0  Byte Address  \n \n \nFigure 47. Read Security Registers Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (48h)\nHigh Impedance8 9 10 28 29 30 31\n24-Bit Address\n23 22 21 3 2 1 0\nData Out 1*\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)32 33 34 35 36 37 38 39\nDummy Byte\nHigh Impedance40 41 42 44 45 46 47 48 49 50 51 52 53 54 55\n7 6 5 4 3 2 1 0 7Data Out 2\n*7 6 5 4 3 2 1 0\n*7 6 5 4 3 2 1 043 31\n0= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 52 -                                 -Revision H  \n Individual Block/Sector Lock (36h)  \nThe Individual Block/Sector Lock provides an alternative way to protect the memory array from adverse \nErase/Program. In order to use the Individual Block/Sector Locks, the WPS bit in Status Register -3 must \nbe set to 1. If WPS=0, the write protection will b e determined by the combination of CMP, SEC, TB, BP[2:0] \nbits in the Status Registers. The Individual Block/Sector Lock bits are volatile bits. The default values after \ndevice power up or after a Reset are 1, so the entire memory array is being protected.  \nTo lock a specific block or sector as illustrated in Figure 4d, an Individual Block/Sector Lock command must \nbe issued by driving /CS low, shifting the instruction code “36h” into the Data Input (DI) pin on the rising \nedge of CLK, followed by a 24 -bit addr ess and then driving /CS high. A Write Enable instruction must be \nexecuted before the device will accept the Individual Block/Sector Lock Instruction (Status Register bit \nWEL= 1).  \n \nFigure 5 3. Individual Block/Sector Lock  Instruction  \n \n \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (36h)\nHigh Impedance8 9 293031\n24-Bit Address\n2322 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \n \n- 53 - \n Individual Bloc k/Sector Unlock (39h)  \nThe Individual Block/Sector Lock provides an alternative way to protect the memory array from adverse \nErase/Program. In order to use the Individual Block/Sector Locks, the WPS bit in Status Register -3 must \nbe set to 1. If WPS=0, the w rite protection will be determined by the combination of CMP, SEC, TB, BP[2:0] \nbits in the Status Registers. The Individual Block/Sector Lock bits are volatile bits. The default values after \ndevice power up or after a Reset are 1, so the entire memory arra y is being protected.  \nTo unlock a specific block or sector as illustrated in Figure 4d, an Individual Block/Sector Unlock command \nmust be issued by driving /CS low, shifting the instruction code “39h” into the Data Input (DI) pin on the \nrising edge of CLK,  followed by a 24 -bit address and then driving /CS high. A Write Enable instruction must \nbe executed before the device will accept the Individual Block/Sector Unlock Instruction (Status Register \nbit WEL= 1).  \n \nFigure 5 4. Individual Block Unlock  Instructio n  \n \n \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (39h)\nHigh Impedance8 9 293031\n24-Bit Address\n2322 2 1 0\n*Mode 0Mode 3\n= MSB*\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 54 -                                 -Revision H  \n Read Block/Sector Lock (3Dh)  \nThe Individual Block/Sector Lock provides an alternative way to protect the memory array from adverse \nErase/Program. In order to use the Individual Block/Sector Locks, the WPS bit in Status Register -3 must \nbe set to 1. If WPS=0, the write protection will b e determined by the combination of CMP, SEC, TB, BP[2:0] \nbits in the Status Registers. The Individual Block/Sector Lock bits are volatile bits. The default values after \ndevice power up or after a Reset are 1, so the entire memory array is being protected.  \nTo read out the lock bit value of a specific block or sector as illustrated in Figure 4d, a Read Block/Sector \nLock command must be issued by driving /CS low, shifting the instruction code “3Dh” into the Data Input \n(DI) pin on the rising edge of CLK, follow ed by a 24 -bit address. The Block/Sector Lock bit value will be \nshifted out on the DO pin at the falling edge of CLK with most significant bit (MSB) first as shown in Figure \n55. If the least significant bit (LSB) is 1, the corresponding block/sector is loc ked; if LSB=0, the \ncorresponding block/sector is unlocked, Erase/Program operation can be performed.  \n \nFigure 5 5. Read Block Lock Instruction  \n \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (3Dh)\nHigh Impedance8 9 10 282930313233343536373839\nX X X X X X X 024-Bit Address\n232221 3 2 1 0\nLock Value Out\n**\n= MSB*Mode 0Mode 3\nW25 Q32JW  \n \n \n- 55 - \n Global Block/Sector Lock (7Eh)  \nAll Block/Sector Lock bits can be set to 1 by the Global Block/Sector Lock ins truction. The command must \nbe issued by driving /CS low, shifting the instruction code “7Eh” into the Data Input (DI) pin on the rising \nedge of CLK, and then driving /CS high. A Write Enable instruction must be executed before the device will \naccept the Gl obal Block/Sector Lock Instruction (Status Register bit WEL= 1).  \n  \nFigure 5 6. Global Block Lock Instruction  \n \n Global Block/Sector Unlock (98h)  \nAll Block/Sector Lock bits can be set to 0 by the Global Block/Sector Unlock instruction. The command \nmust be issued by driving /CS low, shifting the instruction code “98h” into the Data Input (DI) pin on the \nrising edge of CLK, and then driving /CS high. A Write Enable instruction must be executed before the \ndevice will accept the Global Block/Sector Unlock Instr uction (Status Register bit WEL= 1).  \n  \nFigure 5 7. Global Block Unlock Instruction  \n \n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nMode 0Mode 3\nInstruction (7Eh)\nHigh Impedance\n/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nMode 0Mode 3\nInstruction (98h)\nHigh Impedance\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 56 -                                 -Revision H  \n Enable Reset (66h) and Reset Device (99h)  \nBecause of the small package and the limitation on the number of pins, the W25 Q32JW  provide a software \nReset instruction instead of a dedicated RESET pin. Once the Reset instruction is accepted, any on -going \ninternal operations will be terminated and the device will return to its default power -on state and lose all the \ncurrent volatile s ettings, such as Volatile Status Register bits, Write Enable Latch (WEL) status, \nProgram/Erase Suspend status, Read parameter setting (P7 -P0), Read Command Bypass Mode  bit setting \n(M7-M0).  \n“Enable Reset (66h)” and “Reset (99h)” instructions can be issued in SPI. To avoid accidental reset, both \ninstructions must be issued in sequence. Any other commands other than “Reset (99h)” after the “Enable \nReset (66h)” command will disable the “Reset Enable” state. A new sequence of “Enable Reset (66h)” and \n“Reset (99 h)” is needed to reset the device. Once the Reset command is accepted by the device, the device \nwill take approximately tRST=30us to reset. During this period, no command will be accepted.  \nData corruption may happen if there is an on -going or suspended int ernal Erase or Program operation when \nReset command sequence is accepted by the device. It is recommended to check the BUSY bit and the \nSUS bit in Status Register before issuing the Reset command sequence.  \n \nFigure 58. Enable Reset and Reset Instruction Sequence  \n \n  \nMode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (99h)Mode 0Mode 3/CS\nCLK\nDI\n(IO0)\nDO\n(IO1)Mode 0Mode 3 0 1 2 3 4 5 6 7\nInstruction (66h)\nHigh Impedance\nW25 Q32JW  \n \n \n- 57 - \n9. ELECTRICAL CHARACTER ISTICS  \n9.1 Absolute Maximum Ratings (1) \nPARAMETERS  SYMBOL  CONDITIONS  RANGE  UNIT  \nSupply Voltage  VCC   –0.6 to  2.5 V \nVoltage Applied to Any Pin  VIO Relative to Ground  –0.6 to VCC+0.4  V \nTransient Voltage on any Pin  VIOT <20nS Transient  \nRelative to Ground  –2.0V to VCC+2.0V  V \nStorage Temperature  TSTG  –65 to +150  °C \nLead Temperature  TLEAD  See Note (2) °C \nElectrostatic Discharge Voltage VESD Human Body Model(3) –2000 to +2000  V \n \nNotes:  \n1. This device has been designed and tested for the specified operation ranges. Proper operation outside \nof these levels is not guaranteed. Exposure to absolute maximum ratings may affect device reliability. \nExposure beyond absolute maximum ratings may cau se permanent damage.  \n2. Compliant with JEDEC Standard J -STD-20C for small body Sn -Pb or Pb -free (Green) assembly and the \nEuropean directive on restrictions on hazardous substances (RoHS) 2002/95/EU.  \n3. JEDEC Std JESD22 -A114A (C1=100pF, R1=1500 ohms, R2=500  ohms).  \n9.2 Operating Ranges  \nPARAMETER  SYMBOL  CONDITIONS  SPEC  \n UNIT  \nMIN MAX  \nSupply Voltage(1) VCC  FR = 133MHz , fR = 50MHz (<85℃) \n1.7 1.95 V \nFR = 104MHz , fR = 50MHz (<105℃)  \nAmbient Temperature, \nOperating  TA Industrial                   –40 +85 \n°C \nIndustrial  Plus –40 +105 \n \nNote:  \n1. VCC voltage during Read can operate across the min and max range but should not exceed ±10% of \nthe programming (erase/write) voltage.  \n \n \n \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 58 -                                 -Revision H  \n9.3 Power -Up Power -Down Timing and Requirements  \nPARAMETER  SYMBOL  SPEC  \nUNIT  \nMIN MAX  \nVCC (min) to /CS Low  tVSL(1)  20  µs \nTime Delay Before Write Instruction  tPUW(1)  5  ms \nWrite Inhibit Threshold Voltage  VWI(1)  1.0 1.4 V \nThe minimum duration for ensuring \ninitialization will occur  tPWD(1) 100  µs \nVCC voltage needed to below V PWD for \nensuring initialization will occur  VPWD(1)  0.8 V \n \nNote:  \n1. These parameters are characterized only.  \n \n \nFigure 58a. Power -up Timing and Voltage Levels  \n \n \nFigure 58b. Power -up, Power -Down Requirement  \nVCC\ntVSL Read Instructions\nAllowedDevice is fully\nAccessible\ntPUW/CS must track VCCProgram, Erase and Write Instructions are ignored\nReset\nStateVCC  (max)\nVCC  (min)\nVWI\nTime\nV C C\nT im e/C S  m u s t tra c k  V C C\nd u rin g  V C C  R a m p  U p /D o w n\n/CS\nW25 Q32JW  \n \n \n- 59 - \n \n Power Cycle Requirement  \nFor power cycle, the system must not initial the power -up sequence until Vcc drops down to V PWD  and                    \nkeeps a t PWD for device to initialize correctly.  \n  \nFigure 58c. Power Cycle Requirement  \n \nVCC \nt \nVSL \nDevice is fully accessible  \n \nVCC \n( \nmax \n) \nVCC \n( \nmin \n) \nTime \nV \nPWD  \n(max) \nt \nPWD \nChip select is not  \nacceptable  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 60 -                                 -Revision H  \n9.4 DC Electrical Characteristics -  \nPARAMETER  SYMBOL  CONDITIONS  SPEC  \nUNIT  \nMIN TYP MAX  \nInput Capacitance  CIN(1) VIN = 0V   6 pF \nOutput Capacitance  Cout(1) VOUT = 0V   8 pF \nInput Leakage  ILI    ±2 µA \nI/O Leakage  ILO    ±2 µA \nStandby Current  ICC1 /CS = VCC,  \nVIN = GND or VCC (85℃)  \n10 25 µA \n/CS = VCC,  \nVIN = GND or VCC (105℃)  100 µA \nPower -down Current  ICC2 /CS = VCC,  \nVIN = GND or VCC (85℃)  \n0.1 5 µA \n/CS = VCC,  \nVIN = GND or VCC (105℃)  15 µA \nCurrent Read Data / \nDual /Quad 1MHz  ICC3(2) C = 0.1 VCC / 0.9 VCC  \nDO = Open   1 3 mA \nCurrent Read Data / \nDual /Quad  50MHz ICC3(2) C = 0.1 VCC / 0.9 VCC  \nDO = Open   8 10 mA \nCurrent Read Data / \nDual Output  / Quad \nOutput Read  104MHz Icc3(2) C = 0.1 VCC / 0.9 VCC  \nDO = Open   10 12 mA \nCurrent Write Status \nRegister  Icc4 /CS = VCC   15 20 mA \nCurrent Page Program  Icc5 /CS = VCC   15 20 mA \nCurrent Sector/Block \nErase  Icc6 /CS = VCC   15 20 mA \nCurrent Chip Erase  Icc7 /CS = VCC   15 20 mA \nInput Low Voltage  Vil  -0.5  VCC x 0.3  V \nInput High Voltage  Vih  VCC x 0.7    V \nOutput Low Voltage  Vol Iol = 100 µA    0.2 V \nOutput High Voltage  Voh Ioh = –100 µA  VCC – 0.2   V \n \nNotes:  \n1. Tested on sample basis and specified through design and characterization data. TA = 25° C, VCC = 1.8V. \n2. Checker Board Pattern.  \nW25 Q32JW  \n \n \n- 61 - \n9.5 AC Measurement Conditions  \nPARAMETER  SYMBOL  SPEC  \nUNIT  \nMIN MAX  \nLoad Capacitance  CL  30 pF \nInput Rise and Fall Times  TR, TF  5 ns \nInput Pulse Voltages  VIN 0.1 VCC to 0.9 VCC  V \nInput Timing Reference Voltages  IN 0.3 VCC to 0.7 VCC  V \nOutput Timing Reference Voltages  OUT 0.5 VCC to 0. 5 VCC  V \n \nNote:  \n1. Output Hi -Z is defined as the point where data out is no longer driven.  \n \n \nFigure 59. AC Measurement I/O Waveform  \n \nInput and Output\nTiming Reference Levels Input Levels\n0.9 VCC\n0.1 VCC0.5 VCC\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 62 -                                 -Revision H  \n9.6 AC Electrical Characteristics(6)  \n \nDESCRIPTION  SYMBOL  ALT SPEC  \nUNIT  \nMIN TYP MAX  \nClock frequency for SPI-EBh i nstruction  (< 85℃) FR fC1 D.C.  133(6) MHz \nClock frequency except for Read Data (03h)  FR fC2 D.C.  104 MHz \nClock frequency for Read Data instruction (03h) fR  D.C.  50 MHz \nClock High, Low Time  \nfor all instructions except for Read Data (03h)  tCLH, \ntCLL(1)  \n45%P C   ns \nClock High, Low Time  \nfor Read Data (03h) instruction  tCRLH , \ntCRLL(1)  45%P C   ns \nClock Rise Time peak to peak  tCLCH(2)  0.1   V/ns \nClock Fall Time peak to peak  tCHCL(2)  0.1   V/ns \n/CS Active Setup Time relative to CLK  tSLCH  tCSS 3   ns \n/CS Not Active Hold Time relative to CLK  tCHSL   3   ns \nData In Setup Time  tDVCH  tDSU 1   ns \nData In Hold Time  tCHDX  tDH 2   ns \n/CS Active Hold Time relative to CLK  tCHSH   3   ns \n/CS Not Active Setup Time relative to CLK  tSHCH   3   ns \n/CS Deselect Time (for Read)   tSHSL 1 tCSH 10   ns \n/CS Deselect Time (for Erase or Program or Write)  tSHSL 2 tCSH 50   ns \nOutput Disable Time  tSHQZ(2) tDIS   7 ns \nClock Low t o Output Valid  tCLQV  tV   6 ns \nOutput Hold Time  tCLQX  tHO 1.5   ns \n \nContinued – next page  \n \n \n \n \n \n \n \n \n \nW25 Q32JW  \n \n \n- 63 - \n \nAC Electrical Characteristics ( cont’d)  \nDESCRIPTION  SYMBOL  ALT SPEC  \nUNIT  \nMIN TYP MAX  \nWrite Protect Setup Time Before /CS Low  tWHSL(3)  20   ns \nWrite Protect Hold Time After /CS High  tSHWL(3)  100   ns \n/CS High to Power -down Mode  tDP(2)    3 µs \n/CS High to Standby Mode without ID Read  tRES1(2)    30 µs \n/CS High to  next Instruction after Suspend  tSUS(2)    20 µs \n/CS High to  next Instruction after Reset  tRST(2)    30 µs \n/RESET pin Low period to reset the device  tRESET(2)  1(5)   µs \nWrite Status Register Time  tW   2 30 ms \nPage Program Time  tPP   0.8 5 ms \nSector Erase Time (4KB)  tSE   45 400 ms \nBlock Erase Time ( 32KB) tBE1   120 1,600  ms \nBlock Erase Time (64KB)  tBE2   200 2,000  ms \nChip Erase Time  tCE   10 50 s \n \n \nNotes:  \n1. Clock high or Clock low must be more  than or equal to 45%Pc. Pc=1/f C(MAX). \n2. Value guaranteed by design and/or characterization, not 100% tested in production.  \n3. It’s possible to reset the device with shorter t RESET (as short as a few hundred ns), a 1us minimu m is recommended to ensure reliable \noperation.  \n4. Typ. value t ested on sample basis and specified through design and characterization data. T A = 25° C, VCC = 1.8V, 25% driver \nstrength.  \n5. 4-bytes address alignment for Quad Read , start address from [A1,A0]=(0,0).  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 64 -                                 -Revision H  \n9.7 Serial Output Timing  \n \n9.8 Serial Input Timing  \n \n9.9 /WP Timing  \n \n \n \n \n \n \n/CS\nCLK\nIO\noutputtCLQXtCLQV\ntCLQXtCLQV tSHQZ tCLL\nLSB OUTtCLH\nMSB OUT\n/CS\nCLK\nIO\ninputtCHSL\nMSB INtSLCH\ntDVCH tCHDXtSHCH tCHSH\ntCLCH tCHCL\nLSB INtSHSL\n/CS\nCLK/WPtWHSL tSHWL\nIO\ninput\nWrite Status Register is allowed Write Status Register is not allowed\nW25 Q32JW  \n \n \n- 65 - \n10. PACKAGE SPECIFICATIO NS \n10.1 8-Pin SOIC 150 -mil (Package Code SN)  \n \n \n \nSYMBOL  MILLIMETERS  INCHES  \nMin Nom  Max Min Nom  Max \nA 1.35 1.60 1.75 0.053  0.062  0.069  \nA1 0.10 0.15 0.25 0.004  0.006  0.010  \nb 0.33 0.41 0.51 0.013  0.016  0.020  \nC 0.19 0.20 0.25 0.0075  0.0078  0.010  \nD(3) 4.80 4.85 5.00 0.188  0.190  0.196  \nE(3) 3.80 3.90 4.00 0.150  0.153  0.157  \nHE 5.80 6.00 6.20 0.228  0.236  0.244  \ne(2) 1.27 BSC  0.050 BSC  \nL 0.40 0.71 1.27 0.016  0.027  0.050  \nY(4) --- --- 0.10 --- --- 0.004  \nθ 0° --- 10° 0° --- 10° \n \n \n \nNotes:  \n1. Controlling dimensions: millimeters, unless otherwise specified.  \n2. BSC = Basic lead spacing between centers.  \n3. Dimensions D and E do not include mold flash protrusions and should be measured from the bottom of the package.  \n4. Formed leads coplanarity with respect to seating plane shall be within 0.004 inches.  \n  \nL\nθc\nD\nA1A\ne\nbSEATING PLANEY0.25\nGAUGE PLANEEHE\n4 15 8\nL\nθc\nD\nA1A\ne\nbbbSEATING PLANEY0.25\nGAUGE PLANEEHEEHE\n4 15 8\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 66 -                                 -Revision H  \n10.3 8-Pin SOIC 208 -mil (Package Code SS)  \n \n \n \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA 1.75 1.95 2.16 0.069  0.077  0.085  \nA1 0.05 0.15 0.25 0.002  0.006  0.010  \nA2 1.70 1.80 1.91 0.067  0.071  0.075  \nb 0.35 0.42 0.48 0.014  0.017  0.019  \nC 0.19 0.20 0.25 0.007  0.008  0.010  \nD 5.18 5.28 5.38 0.204  0.208  0.212  \nD1 5.13 5.23 5.33 0.202  0.206  0.210  \nE 5.18 5.28 5.38 0.204  0.208  0.212  \nE1 5.13 5.23 5.33 0.202  0.206  0.210  \ne 1.27 BSC  0.050 BSC  \nH 7.70 7.90 8.10 0.303  0.311  0.319  \nL 0.50 0.65 0.80 0.020  0.026  0.031  \ny \n --- --- 0.10 --- --- 0.004  \nθ 0° --- 8° 0° --- 8° \n \n \n  \nθ\nW25 Q32JW  \n \n \n- 67 - \n10.4 8-Pad WSON 6x5 -mm (Package Code ZP)  \n \n \n \n \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA 0.70 0.75 0.80 0.028  0.030  0.031  \nA1 0.00 0.02 0.05 0.000  0.001  0.002  \nb 0.35 0.40 0.48 0.014  0.016  0.019  \nC --- 0.20 REF  --- --- 0.008 REF  --- \nD 5.90 6.00 6.10 0.232  0.236  0.240  \nD2 3.35 3.40 3.45 0.132  0.134  0.136  \nE 4.90 5.00 5.10 0.193  0.197  0.201  \nE2 4.25 4.30 4.35 0.167  0.169  0.171  \ne 1.27 BSC  0.050 BSC  \nL 0.55 0.60 0.65 0.022  0.024  0.026  \ny 0.00 --- 0.075  0.000  --- 0.003  \n \n \nNote:  \nThe metal pad area on the bottom center of the package is not connected to any internal electrical signals. It can be \nleft floating or connected to the device ground (GND pin). Avoid placement of exposed PCB vias under the pad.  \n \n \n \n \n \n \n \n \n \n\nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 68 -                                 -Revision H  \n10.5 8-Pad XSON 4x4x0.45 -mm (Package Code XG)  \n \n \n \n \n \n \n \n \n \n \nW25 Q32JW  \n \n \n- 69 - \n10.6 24-Ball TFBGA 8x6 -mm (Package Code TB, 5x5 Ball Array)  \n \n \n          \n \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA --- --- 1.20 --- --- 0.047  \nA1 0.26  0.31  0.36  0.010  0.012  0.014  \nA2 --- 0.85 --- --- 0.033  --- \nb 0.35 0.40 0.45 0.014  0.016  0.018  \nD 7.90 8.00 8.10 0.311  0.315  0.319  \nD1 4.00 BSC  0.157 BSC  \nE 5.90 6.00 6.10 0.232  0.236  0.240  \nE1 4.00 BSC 0.157 BSC  \nSE 1.00 TYP  0.039 TYP  \nSD 1.00 TYP  0.039 TYP  \ne 1.00 BSC  0.039 BSC  \nccc  ---  --- 0.10 --- --- 0.0039  \n \n \n \nNote:  \nBall land: 0.45mm.   Ball Opening: 0.35mm  \nPCB ball land suggested <= 0.35mm  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 70 -                                 -Revision H  \n10.7 24-Ball TFBGA 8x6 -mm (Package Code TC, 6x4 ball array)   \n \n \n          \n \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA --- --- 1.20 --- --- 0.047  \nA1 0.25 0.30 0.35 0.010  0.012  0.014  \nb 0.35 0.40 0.45 0.014  0.016  0.018  \nD 7.95 8.00 8.05 0.313  0.315  0.317  \nD1 5.00 BSC  0.197 BSC  \nE 5.95 6.00 6.05 0.234  0.236  0.238  \nE1 3.00 BSC  0.118 BSC  \ne 1.00 BSC  0.039 BSC  \n \n \n \nNote:  \nBall land: 0.45mm.   Ball Opening: 0.35mm  \nPCB ball land suggested <= 0.35mm  \nW25 Q32JW  \n \n \n- 71 - \n10.8 8-Pad USON 4x3 -mm (Package Code UU)  \n          \n \n \n \n \n \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA 0.50 0.55 0.60 0.020  0.022  0.024  \nA1 0.00 0.02 0.05 0.000  0.001  0.002  \nA3 --- 0.15 --- --- 0.006  --- \nb 0.25 0.30 0.35 0.010  0.012  0.014  \nD 3.90 4.00 4.10 0.153  0.157  0.161  \nD1 0.70 0.80 0.90 0.027  0.031  0.035  \nD2 0.70 0.80 0.90 0.027  0.031  0.035  \nE 2.90 3.00 3.10 0.114  0.118  0.122  \nE1 0.10 0.20 0.30 0.004  0.008  0.012  \ne 0.80 BSC  0.031 BSC  \nL 0.55 0.60 0.65 0.022  0.024  0.026  \nNote:  \nThe metal pad area on the bottom center of the package is not connected to any internal electrical signals. It can be \nleft floating or connected to the device ground (GND pin). Avoid placement of exposed PCB vias under the pad.  \n \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 72 -                                 -Revision H  \n10.9 12-Ball WLCSP (Package Code BY)   \n \n          \nSymbol  Millimeters  Inches  \nMin Nom  Max Min Nom  Max \nA 0.454  0.497  0.540 0.018  0.020 0.021  \nA1 0.152  0.167  0.182  0.006  0.007  0.007  \nc 0.302  0.330 0.358   0.012 0.013 0.017  \neD --- 0.500  --- --- 0.020  --- \neE --- 0.500  --- --- 0.020  --- \nb 0.240 0.300  0.360 0.009  0.012  0.014  \naaa 0.100  0.004  \nbbb 0.100  0.004  \nccc 0.030  0.001  \nddd 0.150  0.006  \n \nNote:  \nDimension b is measured at the maximum solder bump diameter, parallel to primary datum C.   \nDimension D /D1 and E /E1; please contact Winbond for details  \n\nW25 Q32JW  \n \n \n- 73 - \n11. ORDERING INFORMATION  \n \nNotes:  \n1. The “W” prefix is not included on the part marking.  \n2. Only the 2nd letter is used for the part mar king; WSON package type ZP is not used for the part marking.  \n3. Standard bulk shipments are in Tube (shape E). Please specify alternate packing method, such as Tape and \nReel (shape T) or Tray (shape S), when placing orders.   \n4. For shipments with OTP feature enabled, please specify when placing orders.  \n5. /HOLD function is disabled to support Standard, Dual and Quad I/O without user setting.  \n6. For DTR, QPI supporting, p lease refer to  W25 Q32JW  DTR datasheet . \n \n W(1) 25Q   32J  W xx(2)  I \nW  =  Winbond  \n25Q  =  SpiFlash Serial Flash Memory with 4 KB sectors, Dual /Quad I/O  \n32J  =  32M -bit \n \nW  =  1.7V to 1.95V  \n \n I  =  Industrial  (-40°C to +85°C)          J  =  Industrial Plus  (-40°C to + 105°C) \n \n                 (3,4) \n \nQ(5)  =  Green Package (Lead -free, RoHS Compliant, Halogen -free (TBBA), Antimony -Oxide -free Sb 2O3) \n with QE = 1 (fixed)  in Status register -2. Backward compatible to FW family.  \nM(6)  =  Green Package (Lead -free, RoHS Compliant, Halogen -free (TBBA), Antimony -Oxide -free Sb 2O3) \n with QE = 0 (programmable) in Status register -2. New device ID is used to identify JW family  \nSN  =  8 -pin SOIC 150-mil   SS  =  8-pin SOIC 208 -mil  \nXG  =  XSON 4x4x0.45 -mm      ZP  =  WSON8 6x5 -mm        \nUU   =  USON8 4x3mm    TB  =  TFBGA 8x6 -mm (5x5 ball array)   \nTC  =  TFBGA 8x6 -mm (6x4 ball array)  BY  =  12-ball WLCSP    \n  \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 74 -                                 -Revision H  \n11.1 Valid Part Numbers and Top Side Marking  \nThe following table provides the valid part numbers for the W25 Q32JW  SpiFlash Memory.  Please contact \nWinbond  for specific availability by density and package type. Winbond  SpiFlash memories use a 12 -digit \nProduct Number for ordering. However, due to limited space, the Top Side Marking on all packages uses \nan abbreviated 10 -digit number.  \n W25Q32JW -IQ valid part numbers:  \nPACKAGE TYPE  DENSITY  PRODUCT NUMBER  TOP SIDE MARKING  \nSN                          \nSOIC -8 150mil  32M-bit W25Q32JW SNIQ 25Q32JW NIQ \nSS                          \nSOIC -8 208 -mil 32M-bit W25Q32JW SSIQ  25Q32JW SIQ \nZP(2)                                               \nWSON -8 6x5 -mm 32M-bit W25Q32JW ZPIQ  25Q32JW IQ \nXG                      \nXSON -8  \n4x4x0.45 -mm 32M-bit W25Q32JW XGIQ  Q32JW XGIQ  \nTB(1)                          \nTFBGA -24 8x6 -mm \n(5x5 Ball Array)  32M-bit W25Q32JW TBIQ  25Q32JW BIQ \nTC(1)                          \nTFBGA -24 8x6 -mm \n(6x4 Ball Array)  32M-bit W25Q32JW TCIQ  25Q32JW CIQ \nUU                          \nUSON -8 4x3mm  32M-bit W25Q32JWUU IQ Q32JWUUI Q \nBY(3)                       \n12-ball WLCSP  32M-bit W25Q32JWBY IQ 5AJI \n•Qyw \n  \n  \nW25 Q32JW  \n \n \n- 75 - \nW25Q32JW -JQ valid part numbers:  \nPACKAGE TYPE  DENSITY  PRODUCT NUMBER  TOP SIDE MARKING  \nSN                          \nSOIC -8 150mil  32M-bit W25Q32JW SNJQ 25Q32JWNJ Q \nSS                          \nSOIC -8 208 -mil 32M-bit W25Q32JW SSJQ 25Q32JW SJQ \nZP(2)                                               \nWSON -8 6x5 -mm 32M-bit W25Q32JW ZPJQ 25Q32JWJ Q \nXG                      \nXSON -8  \n4x4x0.45 -mm 32M-bit W25Q32JW XGJQ  Q32JW XGJQ \nTB(1)                          \nTFBGA -24 8x6 -mm \n(5x5 Ball Array)  32M-bit W25Q32JW TBJQ 25Q32JW BJQ \nTC(1)                          \nTFBGA -24 8x6 -mm \n(6x4 Ball Array)  32M-bit W25Q32JW TCJQ 25Q32JW CJQ \nUU                          \nUSON -8 4x3mm  32M-bit W25Q32JWUUJQ  Q32JWUU JQ \n \n \nW25Q 32JW-IM(4) valid part numbers:  \nPACKAGE TYPE  DENSITY  PRODUCT NUMBER  TOP SIDE MARKING  \nSN                          \nSOIC -8 150mil  32M-bit W25Q32JWSNIM  25Q32JWNIM  \nSS                          \nSOIC -8 208 -mil 32M-bit W25Q32JWSSIM  25Q32JWSIM  \nST(1)                          \nVSOP -8 208 -mil 32M-bit W25Q32JWSTIM  25Q32JWTIM  \nZP                      \nWSON -8 6x5 -mm 32M-bit W25Q32JWZPIM  25Q32JWIM  \nXG \nXSON 4x4mm  32M-bit W25Q32JWXGIM  Q32JWXGIM  \nUU                         \nUSON -8 4x3mm  32M-bit W25Q32JWUUIM  Q32JWUUIM  \nTB                          \nTFBGA -24 8x6mm  \n(5x5-1 Ball Array)  32M-bit W25Q32JWTBIM  25Q32JWBM  \nTC                          \nTFBGA -24 8x6mm  \n(6x4 Ball Array)  32M-bit W25Q32JWTCIM  25Q32JWCM  \nBY(3)                       \n12-ball WLCSP  32M-bit W25Q32JWBYIM  5AJI \n*Myw  \n \nW25 Q32JW  \n \nPublication Release Date:  March 17, 2020  \n- 76 -                                 -Revision H  \nNote:  \n1. These package types are special order, please contact Winbond for more information.  \n2.   For WSON packages, the package type ZP is not used in the top side marking.  \n3. WLCSP package type BY has special top marking due to size limitation.  \n      5 = 32Mb; A = W25Q series; yw = date code (year, work week).  \n4. For DTR, QPI supporting, please refer to W25Q 32JW DTR datasheet.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \nW25 Q32JW  \n \n \n- 77 - \n12. REVISION HISTORY  \nVERSION  DATE  PAGE  DESCRIPTION  \nA 2017/05/31  \n5-8, 66, 73 -76 \n59 \n63 \n76 \n61 New Create Datasheet   \nAdded SNIQ,UUIQ,BYIQ information  \nAdded power cycle requirement  \nUpdated tPP & tW  value  \nModified typo  \nUpdated ICC1/2/3 value PP00  \nB 2017/12/19   Removed “Preliminary”  \nC 2018/01/3 1 62 \n16 \n62-63 Removed tHLCH & tCHHH  \nUpdated Figure 4c Status Register -3  \nUpdated tSLCH,tCHSL, tDVCH,tCHDX,tBE2  \nD 2018/04/26  72 Updated WLCSP D/D1 & E/E2 swap  \nE 2018/07/13  45,56  \n \n25, 39, 41  Modified Continuous Read as Read Command \nBypass  \nModified Power -down & Suspend discription  \nF 2018/09/04  63 Modified tRES1  \nG 2019/12/12  4 \n39,41  \n63 Updated cycling description  \nUpdated  Power -down &  Suspend discription  \nUpdated  EBh runs at 133MHz  \nH 2020/03/17  63 \n Added note 4 with “typical value”  \nAdded Industrial Plus Spec  \n \nTrademarks   \nWinbond  and SpiFlash  are trademarks of  Winbond Electronics Corporation.  \nAll other marks are the property of their respective owner.  \n \nImportant Notice  \nWinbond  products are not designed, intended, authorized or warranted for use as components in systems \nor equipment intended for surgical implantation, atomic energy control instruments, airplane or spaceship \ninstruments,  transportation instruments, traffic signal instruments, combustion control instruments, or for \nother applications intended to support or sustain life. Furthermore, Winbond  products are not intended for \napplications wherein failure of Winbond  products coul d result or lead to a situation wherein personal injury, \ndeath or severe property or environmental damage could occur. Winbond  customers using or selling these \nproducts for use in such applications do so at their own risk and agree to fully indemnify Winbo nd for any \ndamages resulting from such improper use or sales.  \nInformation in this document is provided solely in connection with Winbond products. Winbond \nreserves the right to make changes, corrections, modifications or improvements to this document \nand t he products and services described herein at any time, without notice.  \n \n \n\n'}]
!==============================================================================!
### Component Summary: W25Q32JWSSIQ (Winbond)

#### Key Specifications:
- **Voltage Ratings**: 
  - Operating Voltage: 1.7V to 1.95V
- **Current Ratings**: 
  - Power-down Current: <0.1µA (typical)
  - Read Current: 1-12 mA (depending on frequency)
  - Write Current: 15-20 mA
- **Power Consumption**: 
  - Standby Current: 10-100 µA (depending on temperature)
- **Operating Temperature Range**: 
  - Industrial: -40°C to +85°C
  - Industrial Plus: -40°C to +105°C
- **Package Type**: 
  - Available in multiple packages including 8-pin SOIC (150/208 mil), WSON, XSON, TFBGA, and WLCSP.
- **Special Features**: 
  - Supports Dual and Quad SPI modes for high-speed data transfer.
  - 4KB sector erase capability with multiple block erase options.
  - Advanced security features including write protection and unique ID.
- **Moisture Sensitive Level (MSL)**: 
  - MSL is typically classified according to JEDEC J-STD-020E standards, specific level may vary by package type.

#### Description:
The **W25Q32JW** is a 32M-bit (4M-byte) Serial Flash memory device designed for applications requiring high performance and low power consumption. It operates on a supply voltage of 1.7V to 1.95V and features a flexible architecture that allows for efficient data storage and retrieval. The device supports standard SPI, Dual SPI, and Quad SPI interfaces, enabling high-speed data transfer rates up to 133 MHz.

#### Typical Applications:
- **Code Shadowing**: The device can execute code directly from the flash memory, which is useful in embedded systems.
- **Data Storage**: Ideal for storing voice, text, and other data types in applications such as consumer electronics, automotive, and industrial devices.
- **Firmware Updates**: The ability to erase and program sectors allows for easy firmware updates in devices.
- **Low Power Applications**: With its low power consumption in power-down mode, it is suitable for battery-operated devices.

This component is particularly well-suited for applications in the industrial sector due to its wide operating temperature range and robust performance characteristics.