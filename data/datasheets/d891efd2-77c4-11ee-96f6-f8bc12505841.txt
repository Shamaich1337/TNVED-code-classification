[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADUC7061BCPZ32-RL production of ANALOG DEVICES from the text: Low Power, Precision Analog Microcontroller , \nDual Sigma -Delta ADCs,  Flash/EE, ARM7TDMI  \nData Sheet ADuC7060 /ADuC7061  \n \n Rev.  F Document Feedback  \nInformation furnished by Analog  Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change with out notice. No \nlicense is granted by implication or otherwise under any patent or patent rights of Analog Devices. \nTrademarks and registered trademarks are the property of their respective owners.    \n \nOne Technology Way, P.O. Box 9106,  Norwood, MA 02062- 910 6, U.S.A. \nTel: 781.329.4700  ©2009– 2017 Analog Devices, Inc. All rights reserved.  \nTechnical Support  www.a nalog.com   FEATURES  \nAnalog input/ou tput  \nDual (24- bit) ADCs  \nSingle -ended and differential input s \nProgrammable ADC output rate (4 Hz to 8 kHz)  \nProgrammable digital filters  \nBuilt -in system calibr ation  \nLow power operation mode  \nPrimary (24 -bit) ADC channel  \n2 differential pairs or 4 single -ended channels \nPGA (1  to 512)  input sta ge \nSelectable input range:  ±2.34  mV to ±1.2  V \n30 nV rms  noise \nAuxiliary (24- bit) ADC : 4 differential pairs or 7 single -\nended  channels  \nOn-chip precision reference (±10 ppm /°C)  \nProgrammable sensor excitation current sources \n200 μA to 2 mA current source range \nSingle 1 4-bit voltage outp ut DAC  \nMicrocontroller  \nARM7TDMI core, 16 -/32- bit RISC architecture  \nJTAG port supports code download and debug  \nMultiple c locking options  \nMemory  \n32 kB (16 kB × 16) Flash/EE m emory , including 2 kB kernel   \n4 kB (1  kB × 32) SRAM  \nTools  \nIn-circuit do wnload, JTAG based d ebug  \nLow cost, QuickStart ™ development sy stem  \nCommunications interfaces  \nSPI interface  (5 Mbps)  \n4-byte receive and  transmit FIFO s \nUART serial I/O and I2C (master/slave)  \nOn-chip peripherals  \n4× general -purpose (capture) timers including  \nWake -up timer  \nWatchdog timer  \nVectored interrupt controll er for FIQ and IRQ  \n8 priority le vels for each interrupt type  \nInterrupt on  edge or level ex ternal pin inputs  \n16-bit, 6 -channel PWM  \nGeneral -purpose inputs/ou tputs  \nUp to 14 GPIO pins  that  are fully 3.3 V compliant  \nPower  \nAVDD/DVDD s pecified for 2.5  V (±5%)  \nActive mode: 2. 74 mA (@ 640 kHz, ADC0  active)  \n10 mA (@ 10.24  MHz, both ADCs active)  Packages and temperature range  \nFully specified for − 40°C to +125°C operation  \n32-lead LFCSP (5 mm × 5 mm)  \n48-lead LFCSP  and LQFP  \nDerivatives  \n32-lead LFCSP  (ADuC7061)  \n48-lead LQFP  and 48-lead LFCSP  (ADuC7060)  \nAPPLICATIONS  \nIndustrial automation and process con trol  \nIntelligent, precision sensing syst ems, 4  mA  to 20 mA  \nloop -based smart sensors  \nGENERAL DESCRIPTION  \nThe ADuC7060 /ADuC7061 series  are fully integrated, 8  kSPS, \n24-bit data acquisition system s incorporating high performance \nmultichannel sigma- delta (Σ-Δ) analog -to-digital converters \n(ADCs), 16 -bit/ 32-bit ARM7TDMI® MCU, and Flash/EE memory \non a single chip.  \nThe ADCs consist  of a primary ADC with two differential pair s or \nfour single -ended channel s and an auxiliary ADC with up to seven \nchanne ls. The ADCs operate in single- ended or differential input \nmode . A single -channel buffered voltage output DAC is availab le \non chip. The DAC output range is programmable to one of four \nvoltage ranges.  \nThe devices operate from an on -chip oscillator and a PLL gene -\nrating an internal high frequency clock up to 10.24 MHz. The \nmicrocontroller core is an ARM7TDMI, 16 -bit/32 -bit RISC \nmachine offering up to 10 MIPS peak performance ; 4 kB of SRAM \nand 32  kB of nonvolatile Flash/EE memory are provided on  chip. \nThe ARM7TDMI core views all memory and registers as a single \nlinear array.  \nThe ADuC7060 /ADuC7061 contain s four timers. Timer1  is a \nwake -up timer with the ability to bring the part out of p ower saving \nmode. Timer2  is configur able as a watchdog ti mer. A 16 -bit PWM \nwith six output channels is also provided. The ADuC7060/  \nADuC7061 contain s an advanced i nterrupt controller. The \nvectored interrupt controller (VIC) allows every interrupt to be \nassigned a priority level. It also supports nested interrupts to a maximum level of eight  per IRQ and FIQ. When IRQ and FIQ \ninterrupt sources are combined, a total of  16 nested interrupt levels \nis supported . On-chip factory firmware supports in -circuit serial \ndownload via the UART serial interfa ce ports  and nonintrusive \nemulation via the JTAG interface. The parts operate from 2.375 V to 2.625 V over an industrial temperature range of −40°C to +125°C.  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 2  of 107 TABLE OF CONTENTS  \nFeatures  .............................................................................................. 1 \nApplications  ....................................................................................... 1 \nGeneral Description  ......................................................................... 1 \nRevision H istory  ............................................................................... 3 \nFunctional Block Diagram  .............................................................. 5 \nSpecifications  ..................................................................................... 6 \nElectrical Spe cifications  ............................................................... 6 \nTiming Specifications  ................................................................ 11 \nAbsolute Maximum Ratings  .......................................................... 15 \nESD Caution  ................................................................................ 15 \nPin Configurations and Function Descriptions  ......................... 16 \nTerminology  .................................................................................... 21 \nOverview of the ARM7TDMI Core ............................................. 22 \nThumb Mode (T)  ........................................................................ 22 \nMultiplier (M) ............................................................................. 22 \nEmbeddedICE (I)  ....................................................................... 22 \nARM Registers  ............................................................................ 22 \nInterrupt Latency  ........................................................................ 23 \nMemory Organization  ............................................................... 23 \nFlash/EE Control Interface  ........................................................ 24 \nMemory Mapped Registers  ....................................................... 28 \nComplete MMR Listing  ............................................................. 29 \nReset  ............................................................................................. 34 \nOscillator, PLL, and Power Control  ............................................. 35 \nClocking System  ......................................................................... 35 \nPower Control System  ................................................................ 35 \nADC Circ uit Information  .............................................................. 39 \nReference Sources  ....................................................................... 40 \nDiagnostic Current Sources  ...................................................... 40 \nSinc3 Filter  ................................................................................... 41 \nADC Chopping  ........................................................................... 41 \nProgrammable Gain Amplifier  ................................................. 41 \nExcitation Sources  ...................................................................... 41 \nADC Low Power Mode  .............................................................. 41 \nADC Comparator and Accumulator  ....................................... 42 \nTemperature Sensor  ................................................................... 42 \nADC MMR Interface  ................................................................. 42 \nExample Application Circuits  ................................................... 55 \nDAC Peripherals  ............................................................................. 57 \nDAC  .............................................................................................. 57 MMR Interface  ........................................................................... 57 \nUsing the DAC  ............................................................................ 58 \nNonvolatile Fl ash/EE Memory  ..................................................... 59 \nFlash/EE Memory Reliability  .................................................... 59 \nProgramming  .............................................................................. 59 \nProcessor Reference Peripherals  ................................................... 60 \nInterrupt System  ......................................................................... 60 \nIRQ  ............................................................................................... 60 \nFast Interrupt Request (FIQ)  .................................................... 61 \nProgrammed Interrupts ............................................................. 62 \nVectored Interrupt Controller (VIC)  ....................................... 62 \nVIC MMRs  .................................................................................. 62 \nTimers  .............................................................................................. 67 \nHR:MIN:SEC: 1/128 Format  .................................................... 67 \nTime r0.......................................................................................... 68 \nTimer1 or Wake -Up Timer  ....................................................... 70 \nTimer2 or Watchdog Timer  ...................................................... 72 \nTimer3 .......................................................................................... 74 \nPulse -Width Modulator  ................................................................. 76 \nPulse -Width Modulator General Overview  ........................... 76 \nUART Serial Interface  .................................................................... 81 \nBaud Rate Generation  ................................................................ 81 \nUART Reg ister Definitions  ....................................................... 81 \nI2C ..................................................................................................... 87 \nConfiguring External Pins for I2C Functionality  ................... 87 \nSerial Clock Generation  ............................................................ 88 \nI2C Bus Addresses  ....................................................................... 88 \nI2C Registers  ................................................................................ 88 \nSerial Peripheral Interface  ............................................................. 97 \nMISO (Master In, Slave Out) Pin  ............................................. 97 \nMOSI (Master Out, Slave In) Pin  ............................................. 97 \nSCLK (Serial Clock I/O) Pin  ..................................................... 97 \nSlave Select (P0.0/ SSE) Input Pin  ............................................... 97 \nConfiguring External Pins for SPI Functionality  ................... 97 \nSPI Registers  ................................................................................ 98 \nGeneral -Purpose I/O  ................................................................... 102 \nGPxCON Registers ................................................................... 102 \nGPxDAT Registers  ................................................................... 103 \nGPxSET Registers  ..................................................................... 103 \nGPxCLR Reg isters  .................................................................... 103 \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 3  of 107 GPxPAR Registers  .................................................................... 103 \nHardware Design Considerations  .............................................. 105 \nPower Supplies  .......................................................................... 105 Outline Dimensions  ...................................................................... 106 \nOrdering Guide  ......................................................................... 107 \n \n \nREVISION HISTORY  \n2/2017— Rev. E to Rev. F  \nChanged CP -32-4 to CP -32-11 .................................... Throughout  \nChanged CP -48-3 to CP -48-5 ...................................... Throughout  \nChanges to Table 5  .......................................................................... 13 \nChanges to Table 6  .......................................................................... 14 \nChanges to Serial Peripheral Interface  ......................................... 97 \nChanges to Figure 30  and Figure 31  ...........................................106 \nUpdated Outline Dimensions  ......................................................106 \nChanges to Ordering Guide  .........................................................107 \n \n10/2014— Rev. D to Rev. E  \nChanges to Table 1  ............................................................................ 6 \nChanged FEESIGN to FEESIG (Thro ughout)  ............................. 25 \nChanged FEEHIDE to FEEHID (Throughout)  .......................... 26 \nChanges to Table 36  ........................................................................ 40 \nChanges to Sinc3 Filter Section  ..................................................... 41 \nChanges to Table 43  ........................................................................ 46 \nChanges to ADC Filter Register Section  ...................................... 48 \nChanges to Table 94  ........................................................................ 85 \nChanges to I2C Section  ................................................................... 87 \nChanges to Table 97  ........................................................................ 89 \nChange d Regis ter I2CMSTA, Bit 7 from I2CMNA to I2CMND; \nTable 98 ............................................................................................. 90 \nChanges to Table 104.  ..................................................................... 93 \nChanges to Table 105 ...................................................................... 94 \nUpdated Figure 31, Outline Dimensions  ...................................106  \n 4/2012— Rev. C to Rev. D  \nChanges to Table 1  ............................................................................ 6 \nChanges to Table 7  .......................................................................... 14 \nChanges to Table 16  ........................................................................ 25 \nChange to Command Sequence for Executing a Mass Erase  \nSection  ............................................................................................... 26 \nChanges to Table 19  ........................................................................ 29 \nChanges to Power and Clock Control Registers  Section  ........... 35 \nChanges to Figure 20  ...................................................................... 55 \nChanges to Bit 5 in Table 63  ........................................................... 57 \nChanges to Timers Section; Added Hr:Min:Sec: 1/128 Format  \nSection and Table 79, Renumbered Sequenitially  ....................... 67 \nChanges to Timer 1 or Wake-Up Timer Section  ......................... 70 \nChanges to Timer2 Load Register  Section and Timer2 Value \nRegister  Section  ............................................................................... 71 \nAdded Table 108  .............................................................................. 98 \nUpdated  Outline Dimensions  ......................................................105 \n 5/2011— Rev. B to Rev. C  \nChange to F igure 1  ............................................................................ 4 \nChanges to Table 1  ............................................................................ 6 Add  Temporary Protection Section and Keyed Permanent \nProtection Section  ........................................................................... 25 \nAdded Permanent Protection Section and Sequence to Write the Software Protection Key and Set Permanent Protection Section  ... 26 \nChanges to Pow er Control System  Section  .................................. 35 \nChanges to Bit 9:6, Table 43  ........................................................... 45 \nChanges to Primary Channel ADC Data Register  Section and \nTable 49  ............................................................................................. 50 \nChanges to  IRQEN  Section  and IRQCLR Section  ..................... 59 \nChanges to Timer1 or Wake -Up Timer Section  ......................... 69 \nChanges to Table 108 .................................................................... 101 \n \n2/2010— Rev. A to Rev. B  \nChanges to Features Section  ............................................................ 1 \nChanges to Table 1  ............................................................................ 4 \nChanges to Digital I/O Voltage to DGND Parameter  ................ 14 \nChanges to Pin 19, Pin 20, and Pin 45 Descriptions (Table 8) .. 16 \nChanges to Pin 13 , Pin 14 , and Pin 29  Descriptions (Table 9) .. 18 \nChanges to Bit 8 in Table 14  .......................................................... 23 \nChanges to Table 20  ........................................................................ 28 \nChanges to Power Control System Section  .................................. 34 \nAdded Table 32  ................................................................................ 35 \nChanges to Endnote 2 and Endnote 3 of Table 34  ...................... 36 \nChanges to Table 4 2 ........................................................................ 42 \nChanges to Bit 12 and Bits[3:0] in Table 43  ................................. 44 \nChanges to Bit 12 in  Table 44  ........................................................ 45 \nChanges to Endnote 2 in Table 45  ................................................ 47 \nChanges to Bit 5 in Table 6 3 .......................................................... 55 \nChanges to Serial Downloading (In -Circuit Programming) \nSection  .............................................................................................. 57 \nChanges to Priority Registers Section  .......................................... 61 \nChanges to GPxPAR Registers Section  ...................................... 101 \n \n6/2009— Rev. 0 to Rev. A  \nAdd ed ADuC7061 .............................................................. Universal  \nAdded New Package CP -32-4 ........................................... Universal  \nChanges to Features Section  ............................................................ 1 \nChanges to General Description Section  ....................................... 1 \nChanges to Figure 1  .......................................................................... 4 \nChanges to Table 1  ............................................................................ 7 \nDeleted Endnote to Table 2  ............................................................ 10 \nChanges to Endnotes, Table 3 and Table 4  ................................... 11 \nChanges to  Endnotes, Table 5  ........................................................ 12 \nChanges to Endnotes, Table 6  ........................................................ 13 \nChanges to Figure 7  and Table 8  ................................................... 15 \nAdded Figure 8  and Table 9,  Renumbered Sequentially  ............ 18 \nChanges to Flash EE/Control Interface Section  .......................... 23 \nChange to Code 0x04 Description, Table 15  ............................... 24 \nChange to Bit 31 Description, Table 16  ........................................ 25 \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 4  of 107 Changes to Table 17  ........................................................................ 27 \nChanges to Table 19 T0CLRI and Table 20  ................................. 28 \nChanges to Endnote, Table 21  ....................................................... 29 \nChange to SPITX Default Value, Table 25  ................................... 30 \nChanges to External Clock Selection Section  ............................. 33 \nChanges to ADC Circuit Information Section  ........................... 36 \nChange to Column Heading Table 35  .......................................... 37 \nChange to Bit 6 Description, Table 39  ......................................... 40 \nChange to Bit 12 Description, Table 43  ....................................... 44 \nChanges to Primary Channel ADC Data Register Section  \nand Auxiliary Channel ADC Data Register Section .................. 48 \nChange to Table 59 and Figure  17 ................................................ 51 \nChanges to Using the DAC Section  ............................................. 55 \nChanges to Nonvolatile Flash/EE Memory Section  and \nProgramming Section  .................................................................... 56 \nChanges to Vectored Interrupt Controller (VIC) Section  ........ 59 \nChanges to Priority Registers Section  .......................................... 60 \nChange to Table 73  ......................................................................... 61 Changes to Figure 23 ...................................................................... 65 \nChanges Table 78  ............................................................................ 66 \nChanges to Figure 24 and Table 79  .............................................. 68 \nChanges to Timer2 Interface Section and Figure 25  ................. 69 \nChanges to Timer3 Capture Register Section  ............................. 71 \nChange to Bits[16:12] Description, Table 81  .............................. 72 \nChanges Pulse -Width Modulator General Overview Section, \nTable 82, and Figure 26 .................................................................. 73 \nChanges to Table 84 Column Headings  ...................................... 75 \nChanges to Table 92  ....................................................................... 82 \nChanges to Bit 1, Table 102  ........................................................... 90 \nChanges to Bit 11 Description, Table 105  ................................... 95 \nChanges to SPIMDE Bit Description, Table 106  ........................ 97 \nUpdated Outline Dimensions  ..................................................... 103 \nChanges to Ordering Guide  ........................................................ 104 \n \n4/2009— Revision 0: Initial Version  \n \n \nData Sheet ADuC7060/ADuC7061\n \nRev. F | Page 5 of 107 FUNCTIONAL BLOCK DIAGRAM \nPRECISION ANALOG PERIPHERALS\nPORMEMORY\n32kB FLASH\n4kB RAM\nARM7TDMI\nMCU\n10MHzON-CHIP\nOSC (3%)\nPLL\n4× TIMERS\nWDT\nW/U TIMER\nPWMGPIO PORT\nUART PORT\nSPI PORT\nI2C PORT\nVIC\n(VECTORED\nINTERRUPT\nCONTROLLER)MUXMUX\n24-BIT\nΣ-∆\nADCBUF24-BIT\nΣ-∆ADCPGA\nPRECISION\nREFERENCE\nTEMP\nSENSOR14-BIT\nDACRESET\nXTALOXTALIADC0\nADC1\nADC5ADC4ADC3ADC2\nADC6\nADC7\nADC8ADC9\nIEXC0\nIEXC1\nDAC0\nVREF+\nVREF–\nGND_SWADuC7060/\nADuC7061BUF\n07079-001 \nFigure 1.  \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 6  of 107 SPECIFICATIONS  \nELECTRICAL SPECIFICA TIONS  \nVDD = 2.5 V ±  5%, VREF+ = 1.2 V , VREF − = GND, f CORE = 10.24 MHz driven from an external 32.768 kHz watch crystal or on -chip oscillator,  all \nspecifications T A = −40°C to + 125°C, unless otherwise noted.  Output noise specifications can be found in Table 36 (primary ADC) and \nTable 38 (ADC auxiliary channel) . \nTable 1. ADuC7060/ ADuC7061 Specifications  \nParameter  Test Conditions/Comments  Min  Typ  Max  Unit  \nADC SPECIFICATIONS  For all ADC specifications, assume \nnormal operating mode unless \nspecifically stated otherwise      \nConversion Rate1 Chop off, ADC normal operating \nmode  50  8000  Hz \n Chop on, ADC normal operating mode  4  2600  Hz \n Chop on, ADC low power mode  1  650 Hz \nMain Channel       \nNo Missing Codes1 Chop off (f ADC ≤ 1 kHz)  24    Bits  \n Chop on (f ADC ≤ 666 Hz)  24    Bits  \nIntegral Nonlinearity1, 2 Gain = 4   ±15   ppm  of FSR \nOffset Error3, 4 Chop off, offset error is in the \norder of the noise for the pro -\ngrammed gain and update rate \nfollowing calibration  −27 ±8 +27 μV  \nOffset Error1, 3, 4 Chop on  −2.7 ±0.5  +2.7 μV  \nOffset Error Drift vs. \nTemperature5 Chop off (with gain ≤ 64)   650/PGA_GAIN   nV/°C  \n Chop on (with gain ≤ 64)   10  nV/°C  \nFull-Scale Error1, 6, 7, 8 Normal mode  −1 ±0.5  +1 mV  \nFull-Scale Error 6, 8 Low power mode  −2 ±1.0  +2 mV \nGain Drift vs. Temperature9   5  ppm/°C  \nPGA Gain Mismatch Error   ±0.1   % \nPower Supply Rejection1 Chop on, ADC = 1 V (gain = 1)   65  dB \n Chop on, ADC = 7.8 mV (gain = 128)  84.7  113  dB \n Chop off, ADC = 1 V (gain = 1)  56 65  dB \nAuxiliary Channel       \nNo Missing Codes1 Chop off (f ADC ≤ 1 kHz)  24    Bits  \n Chop on (f ADC ≤ 666 Hz)  24    Bits \nIntegral Nonlinearity1    ±15   ppm of FSR  \nOffset Error4 Chop off  −120 ±30  +100 μV  \nOffset Error1, 4 Chop on  −1.5 ±0.5  +3.2 μV \nOffset Error Drift vs. \nTemperature5 Chop off   200  nV/°C  \n Chop on   10  nV/°C  \nFull-Scale Error1, 6, 7, 8 Normal mode  −1 ±0.5  +1 mV  \nFull-Scale Error1, 6, 8 Low power mode  −2 ±1.0  +2 mV \nGain Drift vs. Temperature9   3  ppm/°C  \nPower Supply Rejection1 Chop on, ADC = 1 V  55 65  dB \n Chop off, ADC = 1 V  53 65  dB \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 7  of 107 Parameter  Test Conditions/Comments  Min  Typ  Max  Unit  \nADC SPECIFICATIONS: ANALOG \nINPUT  Internal V REF = 1.2 V      \nMain Channel       \nAbsolute Input Voltage Range  Applies to both VIN+ and VIN−  0.1  VDD − 0.7  V \nInput Voltage Range  Gain = 11  0  1.2 V \n(Differential Voltage Between \nAIN+ and AIN –) Gain = 21 0  600 mV \n Gain = 41 0  300 mV \n Gain = 81 0  150 mV \n Gain = 161 0  75 mV \n Gain = 321 0  37.5  mV \n Gain = 641 0  18.75  mV \n Gain = 1281 0  9.375  mV \nCommon Mode Voltage, V CM10 VCM = (AIN(+) + AIN(− ))/2,  \ngain = 4 to 128  0.5   V \nInput Leakage Current1 ADC0 and ADC1   10 181 nA \n ADC2, ADC3, ADC4, and ADC5   15 301 nA \n ADC6, ADC7, ADC8, and ADC9, VREF +, VREF − \nMeasurements are taken when the \nADC is not opearating   15 25\n1 nA \nCommon -Mode Rejection  DC1      \nOn ADC Input  ADC = 7.8 mV  113   dB \n ADC = 1 V1  95  dB \nCommon -Mode Rejection \n50 Hz/60 Hz1 50 Hz/60 Hz ± 1 Hz, 16.6 Hz and \n50 Hz update rate, chop on      \n ADC = 7.8 mV, range ± 20 mV  95   dB \n ADC = 1 V, range ± 1.2 V  90   dB \nNormal -Mode Rejection \n50 Hz/60 Hz1      \nOn ADC Input  50 Hz/60 Hz ± 1 Hz, 16.6 Hz f ADC, \nchop on  75   dB \n 50 Hz/60 Hz ± 1 Hz, 16.6 Hz f ADC, \nchop off  67   dB \nAuxiliary Channel       \nAbsolute Input Voltage \nRange1 Buffer enabled  0.1  AVDD  − 0.1 V \n Buffer disabled  AGND   AVDD V \nInput Voltage Range  Range -based reference source  0  1.2 V \nCommon -Mode Rejection  DC1      \nOn ADC Input  ADC = 1 V1  87  dB \nCommon -Mode Rejection \n50 Hz/60 Hz1 50 Hz/60 Hz ± 1 Hz, 16.6 Hz and 50 Hz update rate, chop on      \n ADC = 1 V, range ± 1.2 V  90   dB \nNormal -Mode Rejection \n50 Hz/60 Hz1      \nOn ADC Input  50 Hz/60 Hz ± 1 Hz, 16.6 Hz f ADC, \nchop on  75   dB \n 50 Hz/60 Hz ± 1 Hz, 16.6 Hz f ADC, \nchop off  67   dB \nVOLTAGE REFERENCE      \nADC Precision Reference       \nInternal V REF   1.2  V \nInitial Accuracy Measured at T A = 25°C  −0.1   +0.1  % \nReference Temperature \nCoefficient (Tempco)1, 11  −20  ±10  +20  ppm/°C  \nPower Supply Rejection1   70  dB \nExternal Reference Input Range12  0.1  AVDD V \nVREF Divide -by-2 Initial Error1   0.1  % \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 8  of 107 Parameter  Test Conditions/Comments  Min  Typ  Max  Unit  \nDAC CHANNEL SPECIFICATIONS  RL = 5 kΩ, C L = 100 pF      \nVoltage Range   0  VREF V \n  0  AVDD  − 0.2 V \nDAC 12 -BIT MODE       \nDC Specifications13      \nResolution   12   Bits \nRelative Accuracy    ±2  LSB \nDifferential Nonlinearity  Guaranteed monotonic   ±0.2  ±1 LSB \nOffset Error  1.2 V internal reference   ±2 ±15  mV \nGain Error VREF range (reference = 1.2 V)    ±1 % \n AVDD range    ±1 % \nGain Error Mismatch     0.1 % of full \nscale on \nDAC  \nDAC 16-BIT MODE1 Only monotonic to 14 bits      \nDC Specifications14      \nResolution   14   Bits \nRelative Accuracy  For 14 -bit resolution   ±3  LSB \nDifferential Nonlinearity  Guaranteed monotonic (14 bits)   ±0.5  ±1 LSB \nOffset Error  1.2 V internal reference   ±2 ±15  mV \nGain Error VREF range (reference = 1.2 V)   ±1  % \n AVDD range   ±1  % \nGain Error Mismatch    0.1  % of full \nscale on DAC  \nDAC AC CHARACTERISTICS       \nVoltage Output Settling Time    10  µs \nDigital -to-Analog Glitch Energy  1 LSB change at major carry \n(where maximum number of bits \nsimultaneously change in the \nDAC0DAT register)   ±20   nV-sec \nTEMPERATURE SENSOR1, 15 After user calibration      \nAccuracy  MCU in power -down or standby \nmode   ±4  °C  \nVoltage Output at 0°C  Typical value   96  mV \nVoltage Tempco  Typical value   0.28   mV/°C \nThermal Impedance  48-lead LFCSP   27  °C/W  \n 48-lead LQFP   55  °C/W  \n 32-lead LFCSP   30  °C/W  \nGROUND SWITCH1       \nRON   10  Ω \nInput Leakage    15   nA \nPOWER -ON RESET (POR)       \nPOR Trip Leve l1 Refers to voltage at DVDD pin      \n Power -on level   2.0  V \n Power -down level   2.25   V \nRESET  Timeout from POR  Maximum supply ramp between \n1.8 V and 2.25 V; after POR trip, \nDVDD must reach 2.25 V within \nthis time limit    128 ms \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 9  of 107 Parameter  Test Conditions/Comments  Min  Typ  Max  Unit  \nEXCITATION CURRENT SOURCES       \nOutput Current  Available from each current \nsource  200 1000   μA \nInitial Tolerance at 25°C   ±5  % \nDrift1   0.06   %/°C \nInitial Current Matching at 25°C  Matching between both current sources  ±0.5   % \nDrift Matching1   20  ppm/°C  \nLine Regulation (AVDD)1 AVDD = 2.5 V ± 5%   0.2  %/V  \nOutput Compliance1  AGND  − 30 mV  AVDD  − 0.7 V  V \nWATCHDOG TIMER (WDT)       \nTimeout Period1 32.768 kHz clock, 256 prescale  0.008   512 sec \nTimeout Step Size    7.8  ms \nFLASH/EE MEMORY1      \nEndurance16  10,000    Cycles  \nData Retention17  20   Years  \nDIGITAL INPUTS  All digital inputs except NTRST      \nInput Leakage Current  Input (high) = DVDD   ±1 ±10  µA \nInput Pull -Up Current  Input (low) = 0 V  10 20 80 µA \nInput Capacitance    10  pF \nInput Leakage Current  NTRST only: input (low) = 0 V   ±1 ±10  µA \nInput Pull -Down Current  NTRST only: input (high) = DVDD  30 55 100 µA \nLOGIC INPUTS1 All logic inputs      \nInput Low Voltage (VINL)     0.4 V  \nInput High Voltage (VINH)  2.0   V  \nLOGIC OUTPUTS1 All logic outputs except XTALO      \nOutput Low Voltage (VOL) ISOURCE  = 1.6 mA    0.6 V \nOutput High Voltage (VOH) ISOURCE  = 1.6 mA  2.0   V \nCRYSTAL OSCILLATOR1      \nLogic Inputs, XTALI Only       \nInput Low Voltage (VINL)     0.8 V \nInput High Voltage (VINH)  1.7   V \nXTALI Capacitance    12  pF \nXTALO Capacitance    12  pF \nON-CHIP  OSCILLATORS       \nOscillator    32,768   kHz  \nAccuracy   −3  +3 % \nMCU CLOCK RATE  Eight programmable core clock \nselections within this range: binary \ndivisions 1, 2, 4, 8 . . . 64, 128  0.08  1.28  10.24  MHz  \nUsing an External Clock to \nP2.0/EXTCLK Pin   0.08   10.24  MHz  \nMCU START -UP TIME       \nAt Power -On  Includes kernel power -on \nexecution time   134  ms \nAfter Reset Event  Includes kernel power -on \nexecution time   5  ms \nFrom MCU Power -Down       \nPLL On       \nWake -Up from Interrupt  CD = 0   4.8  μs \nPLL Off       \nWake -Up from Interrupt  CD = 0   66  μs \nInternal PLL Lock Time    1  ms \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 10 of 107 Parameter  Test Conditions/Comments  Min  Typ  Max  Unit  \nPOWER REQUIREMENTS       \nPower Supply Voltages       \nDVDD (±5%)   2.375  2.5 2.625  V \nAVDD (±5%)   2.375  2.5 2.625  V \nPower Consumption       \nIDD (MCU Normal Mode)18 MCU clock rate = 10.24 MHz, \nADC0 on  6 10 mA \n MCU clock rate = 640  kHz, \nADC0  on, G  = 4, ADC1/DAC off, SPI \non; POWCON 1 = 0x4      \n Full temperature range    3.1 mA \n Reduced temperature range \n−40°C to +85°C1   2.74  mA \nIDD (MCU Powered Down)1 Full temperature range   55 350 µA \n Reduced temperature range \n−40°C to +85°C   55 120 µA \nIDD (Primary ADC)  PGA enabled, normal mode/low power mode ; current is \ndependent on g ain setting   0.6/0.3   mA \n ADC0 on, G = 1, normal mode   0.03   mA \n ADC0 on, G = 4, normal mode   0.44   mA \n ADC0 on, G = >128, normal mode   0.63   mA \nIDD (Auxiliary  ADC ) Normal mode/low power mode   0.35/0.1   mA \nIDD (DAC)  DAC0CON = 0x10  0.33   mA \nPWM   0.34   mA \n \n1 These nu mbers are not production tested  but are guaranteed by design and/or characterization data at production release.  \n2 Valid for primary ADC gain setting of PGA = 4 to 64.  \n3 Tested at gain range = 4 after initial offset calibration.  \n4 Measured with an internal short. A system zero- scale calibration removes this error. ADC factory calibration done with chop off.  \n5 Measured with an internal short.  \n6 These numbers do not include internal reference temperature drift.  \n7 Factory calibrated at gain = 1.  \n8 System calibration at a sp ecific gain range removes the error at this gain range. ADC factory calibration done with chop off.  \n9 Measured using an external reference.  \n10 Ensure common mode voltage is set so VIN*Gain setting, which is the PGA output voltage , is between 0.1V and VDD  – 0.7V. 900 mV is an optimum value for the \ncommon mode voltage across all gains.  \n11 Measured using the box method . \n12 References u p to AVDD are accommodated by setting ADC0CON Bit 12.  \n13 Reference DAC linearity is calculated using a reduced code range of 1 71 to 4095. \n14 Reference DAC linearity is calculated  using a reduced code range of 2731  to 65,535.  \n15 Die temperature.  \n16 Endurance is qualified to 10,000 cycles as per JEDEC Std. 22 Method A117 and measured at −40°C, +25°C, and +125°C. Typical en durance at 25° C is 170,000 cycles.  \n17 Retention lifetime equivalent at junction temperature (T J) = 85°C as per JEDEC Std. 22 Method A117. Retention lifetime derates with junction temperature.  \n18 Typical  additional supply current consumed during Flash/EE memory program and  erase cycles is 7 mA and 5 mA, respectively.  \n \n \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 11 of 107 TIMING SPECIFICATION S \nI2C Timing \nTable 2. I2C® Timing in Standard Mode (100 kHz)  \n  Slave   \nParameter  Description  Min  Max  Unit  \ntL SCLOCK low pulse width  4.7  µs \ntH SCLOCK high pulse width  4.0  ns \ntSHD Start condition hold time  4.0  µs \ntDSU Data setup time  250  ns \ntDHD Data hold time  0 3.45 µs \ntRSU Setup time for repeated start  4.7  µs \ntPSU Stop condition setup time  4.0  µs \ntBUF Bus-free time between a stop condition and a start condition 4.7  µs \ntR Rise time for both CLOCK and SDATA   1 µs \ntF Fall time for both CLOCK and SDATA   300 ns \n \n07079-029SDATA (I/O)tBUF\nMSB LSB ACK MSB\n1 9 8 2–7 1 SCLK (I)\nP S\nSTOP\nCONDITIONSTART\nCONDITIONS(R)\nREPEATED\nSTARTtR\ntF\ntFtRtH\ntLtDSUtDHD\ntRSUtDHDtDSU\ntSHDtPSU\n \nFigure 2. I2C Compatible Interface Timing  \n \n  \n \n    \n \n \n \n   \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 12 of 107 SPI Timing \nTable 3. SPI Master Mode Timing (Phase  Mode = 1)  \nParameter  Description  Min  Typ  Max  Unit  \ntSL SCLOCK low pulse width   (SPIDIV + 1) × t HCLK  ns \ntSH SCLOCK high pulse width   (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLOCK edge    25 ns \ntDSU Data input setup time before SCLOCK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLOCK edge1 2 × t UCLK   ns \ntDF Data output fall time   30 40 ns \ntDR Data output rise time   30 40 ns \ntSR SCLOCK rise time   30 40 ns \ntSF SCLOCK fall time   30 40 ns \n \n1 tUCLK = 97.6 ns. It corresponds to the 10.24 MHz internal clock from the PLL . \n \n07079-030SCLOCK\n(POLARITY = 0)\nSCLOCK\n(POLARITY = 1)\nMOSI MSB BITS 6 TO 1 LSB\nMISO MSB IN BITS 6 TO 1 LSB INtSH\ntSL\ntSR tSF\ntDR tDFtDAV\ntDSU\ntDHD \nFigure 3. SPI Master Mode Timing (Phase  Mode = 1)  \n \nTable 4. SPI Master Mode Timing (Phase  Mode = 0)  \nParameter  Description  Min  Typ  Max  Unit  \ntSL SCLOCK low pulse width   (SPIDIV + 1) × t HCLK  ns \ntSH SCLOCK high pulse width   (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLOCK edge    25 ns \ntDOSU Data output setup before SCLOCK edge    90 ns \ntDSU Data input setup time before SCLOCK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLOCK edge1 2 × t UCLK   ns \ntDF Data output fall time   30 40 ns \ntDR Data output rise time   30 40 ns \ntSR SCLOCK rise time   30 40 ns \ntSF SCLOCK fall time   30 40 ns \n \n1 tUCLK = 97.6 ns. It corresponds to the 10.24 MHz internal clock from the PLL.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 13 of 107 \n07079-031SCLOCK\n(POLARITY = 0)\nSCLOCK\n(POLARITY = 1)tSH\ntSL\ntSR tSF\nMOSI MSB BITS 6 TO 1 LSB\nMISO MSB IN BITS 6 TO 1 LSB INtDR tDFtDAVtDOSU\ntDSU\ntDHD \nFigure 4. SPI Master Mode Timing (Phase  Mode = 0)  \nTable 5. SPI Slave Mode Timing (Phase  Mode = 1)  \nParameter  Description  Min  Typ  Max  Unit  \ntCS CS to SCLOCK edge1  (2 × t HCLK) + (2 × t UCLK)   ns \ntSL SCLOCK low pulse width  2 × t UCLK   ns \ntSH SCLOCK high pulse width  2 × t UCLK   ns \ntDAV Data output valid after SCLOCK edge    40 ns \ntDSU Data input setup time before SCLOCK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLOCK edge1 2 × t UCLK   ns \ntDF Data output fall time   30 40 ns \ntDR Data output rise time   30 40 ns \ntSR SCLOCK rise time  1   ns \ntSF SCLOCK fall time  1   ns \ntSFS CS high after SCLOCK edge  0   ns \n \n1 tUCLK = 97.6 ns. It corresponds to the 10.24 MHz internal clock from the PLL . \n \n07079-032SCLOCK\n(POLARITY = 0)CS\nSCLOCK\n(POLARITY = 1)tSH\ntSL\ntSR tSFtSFS\nMISO MSB BITS 6 TO 1 LSB\nMOSI MSB IN BITS 6 TO 1 LSB IN\ntDHDtDSUtDAV tDR tDFtCS\n \nFigure 5. SPI Slave Mode Timing (Phase  Mode = 1)  \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 14 of 107 Table 6. SPI Slave Mode Timing (Phase  Mode = 0)  \nParameter  Description  Min  Typ  Max  Unit  \ntCS CS to SCLOCK edge1  (2 × t HCLK) + (2 × t UCLK)   ns \ntSL SCLOCK low pulse width  2 × t UCLK   ns \ntSH SCLOCK high pulse width  2 × t UCLK   ns \ntDAV Data output valid after SCLOCK edge    40 ns \ntDSU Data input setup time before SCLOCK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLOCK edge1 2 × t UCLK   ns \ntDF Data output fall time   30 40 ns \ntDR Data output rise time   30 40 ns \ntSR SCLOCK rise time  1   ns \ntSF SCLOCK fall time  1   ns \ntDOCS Data output valid after CS edge    10 ns \ntSFS CS high after SCLOCK edge  0   ns \n \n1 tUCLK = 97.6 ns. It corresponds to the 10.24 MHz internal clock from the PLL . \n \n \n07079-033SCLOCK\n(POLARITY = 0)CS\nSCLOCK\n(POLARITY = 1)tSH tSL\ntSR tSFtSFS\nMISO\nMOSI MSB IN BITS 6 TO 1 LSB IN\ntDHDtDSUMSB BITS 6 TO 1 LSBtDOCStDAV\ntDR tDFtCS\n \nFigure 6. SPI Slave Mode Timing (Phase Mode = 0)  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 15 of 107 ABSOLUTE MAXIMUM RAT INGS \nTA = −40°C to + 125°C , unless otherwise noted . \nTable 7.  \nParameter  Rating  \nAGND to DGND to AVDD  to DVDD  −0.3 V to +0.3 V  \nDigital I/O Voltage to DGND  −0.3 V to +3.6 V \nVREF ± to AGND  −0.3 V to AVDD  + 0.3 V  \nADC Inputs to AGND  −0.3 V to AVDD  + 0.3 V \nESD (H uman Body Model ) Rating   \nAll Pins  ±2 kV \nStorage Temperature  125°C \nJunction Temperature   \nTransient  150°C \nContinuous  130°C \nLead Temperature   \nSoldering Reflow (15 sec)  260°C Stresses at or above those listed under Absolute Maximum \nRatings may cause permanent damage to the product. This is a \nstress rating only; functional operation of the product at these or any other conditions above those indicated in the operational section of this specification is not implied. Operation b eyond \nthe maximum operating conditions for extended periods may affect product reliability.  \n \nESD CAUTION \n \n \n \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 16 of 107 PIN CONFIGURATIONS  AND FUNCTION DESCRIPTIONS  TCK\nTDI\nTDO\nDVDD\nDGND\nP2.1/IRQ3/PWM5\nP1.6/PWM4\nP1.5/PWM3\nP1.4/PWM2\nP2.0/IRQ2/PWM0/EXTCLK\nP0.4/IRQ0/PWM1\nXTALO\nP0.3/MOSI/SDA\nP0.2/MISO\nDVDDP0.0/SSP0.1/SCLK/SCLXTALI\nDGND\nADC9\nADC8\nADC6ADC7TMS\nP1.0/IRQ1/SIN/T0\nP1.1/SOUT\nP0.5/CTSP1.3/TRIPP1.2/SYNC\nP0.6/RTS\nDVDD\nDGND\nADC5/EXT_REF2IN−DAC0\nADC4/EXT_REF2IN+\nADC3\nADC2\nIEXC1\nIEXC0\nGND_SW\nADC1\nADC0\nVREF+\nVREF−\nAGND\nAVDDRESET\n07079-00213\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n2448\n47\n46\n45\n44\n43\n42\n41\n40\n39\n38\n37\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n123536\n34\n33\n32\n31\n30\n29\n28\n27\n26\n25ADuC7060\nTOP VIEW\n(Not to Scale)PIN 1\nINDICATOR\nNOTES\n1.THE LFCSP_VQ ONLY HAS AN EXPOSED PADDLE THAT MUST BE LEFT UNCONNECTED.\nTHIS DOES NOT APPLY TO THE LQFP.\nNTRST/BM\n \nFigure 7. 48- Lead LQFP  and 48- Lead LFCSP _VQ  Pin Configuration  \nTable 8. ADuC7060 Pin Function Descriptions  \nPin  \nNo. Mnemonic  Type1 Description  \n0 EP  Exposed Paddle. The LFCSP_VQ only has an exposed paddle that must be left unconnected. \nThis does not apply to the LQFP .  \n1 RESET  I Reset. Input pin, active low. An external 1 kΩ pull -up resistor is recommended with this pin.  \n2 TMS  I JTAG Test Mode Select. Input pin used for debug and download. An external pull -up resistor \n(~100 kΩ) should be added to this pin.  \n3 P1.0/IRQ1/SIN/T0 I/O General -Purpose Input and General Purpose Output P1 .0/External I nterrupt Request 1/Serial \nInput /Timer0  Input. This is a m ultifunction input/ output pin offering four functions.  \n4 P1.1/SOUT  I/O General -Purpose Input and General -Purpose Output P1.1/Serial Output. This is a dual function \ninput/output pin.  \n5 P1.2/SYNC I/O General -Purpose Input and General -Purpose Output P1.2/ PWM External Sync Input. This is a \ndual function input/output p in. \n6 P1.3/TRIP  I/O General -Purpose Input and General -Purpose Output P1.3/PWM External Trip Input. This is a \ndual function input/output p in. \n7 P0.5/CTS  I/O General -Purpose Input and General -Purpose Output P0.5 /Clear -to-Send Sign al in UART Mode.  \n8 P0.6/ RTS I/O General -Purpose Input and General -Purpose Output P0.6 /Request -to-Send Signa l in UART  Mode.  \n9 DVDD  S Digital Supply Pin.  \n10 DGND  S Digital Ground.  \n11 DAC0  O DAC Output. Analog output pin. \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 17 of 107 Pin  \nNo. Mnemonic  Type1 Description  \n12 ADC5/EXT_REF2IN−  I Single -Ended or Differential Analog Input 5/ External Reference Negative In put. This is a dual \nfunction analog input pin. ADC5 serves as the analog input for the auxiliary ADC. EXT_REF2IN− \nserves as the external reference negative input by ADC for the a uxiliary channel.   \n13 ADC4/EXT_REF2IN+  I Multifunction Analog Input Pin. This pin can be used for the single -ended or differential \nAnalog Input 4, which is the analog input for the auxiliary ADC, or it can be used for the \nexternal reference positive input for the auxiliary channel.  \n14 ADC3  I Single -Ended or Differential Analog Input 3. Analog input for the primary and auxiliary ADC s. \n15 ADC2  I Single -Ended or Differenti al Analog Input 2. Analog input for the primary and a uxiliary ADC s. \n16 IEXC1  O Programmable Current Source. Analog output pin.  \n17 IEXC0  O Programmable Current Source. Analog output pin.  \n18 GND_SW  I Switch to Internal Analog Ground Reference. When this input pin is not used, connect it directly to the AGND system ground.  \n19 ADC1  I Single -Ended or Differential Analog Input 1. Analog input for the primary ADC. Negative  differential \ninput for p rimary ADC.  \n20 ADC0  I Single -Ended or Differential Analog Input 0. Analog input for the primary ADC. Positive  differential \ninput for p rimary ADC.  \n21 VREF+  I External Reference Positive Input for the Primary Channel. Analog input pin.  \n22 VREF − I External Reference Negative Input for the Primary Channel. Analog input pin.  \n23 AGND  S Analog Ground.  \n24 AVDD  S Analog Supply Pin.  \n25 ADC6  I Analog Input 6 for Auxiliary ADC. Single -ended or differential Analog Input 6.  \n26 ADC7  I Analog Input 7 for Auxiliary ADC. Single -ended or differential Analog Input 7.  \n27 ADC8  I Analog Input 8 for Auxiliary ADC. Single -ended or differential Analog Input 8.  \n28 ADC9  I Analog Input 9 for Auxiliary ADC. Single -ended or differential Analog Input 9.  \n29 DGND  S Digital Ground.  \n30 DVDD  S Digital Supply Pin.  \n31 P0.0/ SS I/O General -Purpose Input and General -Purpose Output P0.0/SPI Slave Select Pin  (Active Low). This \nis a dual function input/output pin.  \n32 P0.1/SCLK /SCL  I/O General -Purpose Input and General -Purpose Output P0.1/ SPI Clock Pi n/I2C Clock P in. This is a \ntriple function input/output pin.  \n33 P0.2/MISO  I/O General -Purpose Input and General -Purpose Output P0.2/SPI Master Input  Slave Outpu t. This is \na dual function input/output pin.  \n34 P0.3/MOSI /SDA  I/O General -Purpose Input and General -Purpose Output P0.3/ SPI Master Outp ut Slave Inp ut/I2C \nData Pi n. This is a  triple function input/output pin.  \n35 XTAL O O External Crystal Oscillator Output  Pin. \n36 XTAL I I External Crystal Oscillator Input P in.  \n37 P0.4/ IRQ0 /PWM1  I/O General -Purpose Input and General -Purpose Output P0.4/ External Interrupt Request 0 /PWM1 \nOutput.  This is a tri ple function input/output pin.  \n38 P2.0/IRQ2/ PWM0 /EXTCLK  I/O General -Purpose Input and General -Purpose Output P2.0 /External Interrupt Request 2 /PWM0 \nOutput/External Clock Input . This is a  multi function input/output pin.  \n39 P1.4/PWM2  I/O General -Purpose Input and General -Purpose Output P1.4/PWM2 O utput.  This is a dual function \ninput/output pin.  \n40 P1.5/PWM3  I/O General -Purpose Input and  General -Purpose Output P1.5/PWM3 O utput.  This is a dual function \ninput/output pin.  \n41 P1.6/PWM4  I/O General -Purpose Input and General -Purpose Output P1.6/PWM4 O utput.  This is a dual function \ninput/output pin.  \n42 P2.1/ IRQ3 /PWM5  I/O General -Purpose Input and General -Purpose Output P2.1/ External Interrupt Request  3/PWM5 \nOutput. This is a tri ple function input/output pin.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 18 of 107 Pin  \nNo. Mnemonic  Type1 Description  \n43 DGND  S Digital Ground.  \n44 DVDD  S Digital Supply P in. \n45 NTRST /BM I JTAG Reset /Boot Mode . Input pin u sed for debug and download only  and boot mode ( BM). The \nADuC7060 enters serial download mode if BM is low at reset and executes code if BM is pulled \nhigh at reset through a 13 kΩ resistor.  \n46 TDO  O JTAG Dat a Out . Output pin used for debug and download only.  \n47 TDI I JTAG Data In. Input pin used for debug and download only.  Add a n external p ull-up resistor \n(~100 kΩ) to this pin.  \n48 TCK  I JTAG Clock P in. Input pin  used for debug and download only.  Add a n external pull-up resistor \n(~100 kΩ) to this pin.  \n \n1 I = input, O = o utput, I/O = input/output, and S = s upply . \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 19 of 107 PIN 1\nINDICATOR1 RESET\n2 TMS\n3 P1.0/IRQ1/SIN/T0\n4 P1.1/SOUT\n5 DAC0\n6 ADC5/EXT_REF2IN−\n7 ADC4/EXT_REF2IN+\n8 ADC324XTALI\n23XTALO\n22P0.3/MOSI/SDA/ADC9\n21P0.2/MISO/ADC8\n20P0.1/SCLK/SCL/ADC7\n19P0.0/SS/ADC6\n18VREF–\n17VREF+9ADC2\n10IEXC1\n11IEXC0\n12GND_SW\n13ADC1\n14ADC0\n15AGND\n16AVDD\n32\nTCK31\nTDI30\nTDO29\nNTRST/BM28\nDVDD27\nDGND26\nP2.0/IRQ2/PWM025\nP0.4/IRQ0/PWM1\nADuC7061\nTOP VIEW\n(Not to Scale)\n07079-003NOTES\n1.THE 32-LEAD LFCSP_VQ HAS AN EXPOSED PADDLE. THIS EXPOSED\n    PADDLE MUST BE LEFT UNCONNECTED. \nFigure 8. 32 -Lead LFCSP Pin Configuration  \nTable 9. ADuC7061 Pin Function Descriptions  \nPin No. Mnemonic  Type1 Description  \n0 EP  Exposed Paddle. The 32-lead LFCSP_VQ has an exposed paddle that must be left unconnected.  \n1 RESET  I Reset Pin. Input pin, active low. An external 1 kΩ pull -up resistor is recommended with this pin.  \n2 TMS  I JTAG Test Mode Select. Input pin used for debug and download. An external pull -up resistor \n(~100 kΩ) should be added to this pin.  \n3 P1.0/IRQ1/SIN/T0 I/O General -Purpose Input and General -Purpose Output P1.0/External Interrupt R equest 1/Serial \nInput/Timer0  Input. This is a multifunction input/output pin offering four functions .  \n4 P1.1/SOUT  I/O General -Purpose Input and General -Purpose Output P1.1/Serial Output. This is a dual function \ninput/output pin.  \n5 DAC0  O DAC Output. Analog output pin.  \n6 ADC5/EXT_REF2IN−  I Single -Ended or Differential Analog Input 5/External Reference Negative Input. This is a dual \nfunction analog input pin. The ADC5 serves as the analog input for the auxiliary ADC. The \nEXT_REF2IN− serves as the external reference negative input by ADC for the auxiliary channel.  \n7 ADC4/EXT_RE F2IN+  I Multifunction Analog Input Pin. This pin can be used for the single -ended or differential Analog \nInput 4, which is the analog input for the auxiliary ADC, or it can be used for the external \nreference positive input for the auxiliary channel.  \n8 ADC3  I Single -Ended or Differential Analog Input 3. Analog input for primary and auxiliary ADCs.  \n9 ADC2  I Single -Ended or Differential Analog Input 2. Analog input for primary and auxiliary ADCs.  \n10 IEXC1  O Programmable Current Source. Analog output pin.  \n11 IEXC0  O Programmable Current Source. Analog output pin.  \n12 GND_SW  I Switch to Internal Analog Ground Reference. When this input pin is not used, connect it directly \nto the AGND system ground.  \n13 ADC1  I Single -Ended or Differential Analog Input 1. Analog input for the primary ADC. Negative  differential \ninput for primary ADC.  \n14 ADC0  I Single -Ended or Differential Analog Input 0. Analog input for the primary ADC. Positive  differential \ninput for primary ADC.  \n15 AGND  S Analog Ground.  \n16 AVDD  S Analog Supply Pin.  \n17 VREF+  I External Reference Positive Input for the Primary Channel. Analog input pin.  \n18 VREF−  I External Reference Negative Input for the Primary Channel. Analog input pin.  \n19 P0.0/ SS/ADC6  I/O General -Purpose Input and General -Purpose Output P0.0/SPI Slave Select (Active Low)/Input to \nAuxiliary ADC6. This is a multifunction input/output pin. Single -ended or differential Analog \nInput 6. Analog input for the auxiliary ADC.  \n20 P0.1/SCLK/SCL/ADC7  I/O General -Purpose Input and General -Purpose Output P0.1/SPI Clock/I2C Clock/Input to Auxiliary \nADC7. This is a multifunction input/output pin. Single -ended or differential Analog Input 7. \nAnalog input for the auxiliary ADC.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 20 of 107 Pin No. Mnemonic  Type1 Description  \n21 P0.2/MISO/ADC8 I/O General -Pur pose Input and General -Purpose Output P0.2/SPI Master Input Slave \nOutput/Auxiliary ADC8 Input. This is a triple function input/output pin. Single -ended or \ndifferential Analog Input 8. Analog input for the auxiliary ADC.  \n22 P0.3/MOSI/SDA/ADC9 I/O General -Purpose Input and General -Purpose Output P0.3/SPI Master Output Slave Input/I2C \nData Pin/Auxiliary ADC9 Input. This is a multifunction input/output pin. Single -ended or \ndifferential Analog Input 9. Analog input for the auxiliary ADC.  \n23 XTAL O O External Crystal Oscillator Output Pin.  \n24 XTAL I I External Crystal Oscillator Input Pin.  \n25 P0.4/IRQ0/PWM1 I/O General -Purpose Input and General -Purpose Output P0.4/ External Interrupt Request 0/ PWM1 \nOutput. This is a triple function input/output pin.  \n26 P2.0/IRQ2/PWM0  I/O General -Purpose Input and General -Purpose Output P2.0/External Interrupt Request 2/PWM0 \nOutput. This is a triple function input/output pin.  \n27 DGND  S Digital Ground.  \n28 DVDD  S Digital Supply Pin.  \n29 NTRST/ BM I JTAG Reset/Boot Mode. Input pin used for debug and download only and boot mode ( BM). The \nADuC7061 enters serial download mode if BM is low at reset and ex ecutes code if BM is pulled \nhigh at reset through a 13 kΩ resistor.  \n30 TDO  O JTAG Data Out. Output pin used for debug and download only.  \n31 TDI I JTAG Data In. Input pin used for debug and download only. Add a n external pull -up resistor \n(~100 kΩ) to this pin.  \n32 TCK  I JTAG Clock. Input pin used for debug and download only. Add a n external pull -up resistor \n(~100 kΩ) to this pin.  \n \n1 I = input, O = o utput, I/O = input/output, and S = s upply . \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 21 of 107 TERMINOLOGY  \nConversion Rate  \nThe conversion rate specifies the rate at which an output result \nis available from the ADC, when  the ADC has settled.  \nThe sigma -delta (Σ -Δ) conversion techniques used on this part \nmean that wh ereas  the ADC front- end signal is over sampled at \na relatively h igh sample rate, a subsequent digital filter is used to \ndecimate the output , giving a valid 24 -bit data conversion result \nat output rates from 1 Hz to 8 kHz.  \nNote that , when software switches from one input to another \n(on the same ADC), the digital filter  must first be cleared and \nthen allowed to average a new result. Depending on the con -\nfiguration of the ADC and the type of filter, this can take multiple conversion cycles.  \nIntegral Nonlinearity (INL)  \nINL is the maximum deviation of any code from a straight line \npassing through the endpoints of the transfer function. The end -\npoints of the transfer function are zero scale, a point ½ LSB \nbelow the first code transition, and full scale, a point ½ LSB \nabove the last code transition (111 . . . 110 to 111 . . . 111).  \nThe error is expressed as a percentage of full scale.  \nNo Missing Codes \nNo missing codes is a measure of the differential nonlinearity  \nof the ADC. The error is expressed in bits and specifies the number of codes (ADC results) as 2N bits, where N is no \nmissing codes  guaranteed to occur through the full ADC  \ninput range.  \nOffset Error  \nOffset error is the deviation of the first code transition ADC \ninput voltage from the ideal first code transition.  \nOffset Error Drift  \nOffset error drift is the var iation in absolute offset error with \nrespect to temperature. This error is expressed as least \nsignificant bits  per degree Celsius . \nGain Error  \nGain error is a measure of the span error of the ADC. It is a \nmeasure of the difference between the measured and t he ideal \nspan between any two points in the transfer function.  Output Noise  \nThe output noise is specified as the standard deviation (or 1 × Sigma) of the distribution of the ADC output codes collected when the ADC input voltage is at a dc voltage. It is expressed as \nmicro  root mean square. The output, or root mean square (rms)  \nnoise, can be used to calculate the effective resolution of the \nADC as defined by the following equation:  \nEffective Resolution  = log2 (Full- Scale R ange /rms Noise ) bits  \nThe peak -to-peak noise is defined as the deviation of codes that \nfall within 6.6 × Sigma of the distribution of ADC output codes \ncollec ted when the ADC input voltage is at dc. The peak -to-peak  \nnoise is , therefore , calculated as  \n6.6 × rms Noise  \nThe peak -to-peak noise can be used to calc ulate the ADC \n(noise free  code) resolution for which there is no code flicker \nwithin a 6.6 -Sigma limit as defined by the following equation:  \nNoise Free Code Resolution  = log2\n\uf8f7\uf8f7\n\uf8f8\uf8f6\n\uf8ec\uf8ec\n\uf8ed\uf8eb\n−−−\nNoise Peakto PeakRange Scale Fullbits  \nData Sheet Acronyms  \nADC  analog -to-digital converter  \nARM  advanced RISC machine  \nJTAG  joint test action group  \nLSB least significant byte/bit  \nLVF low voltage flag  \nMCU  microcontroller  \nMMR  memory mapped register  \nMSB  most significant byte/bit  \nPID protected identifier  \nPOR  power -on reset  \nPSM  power supply monitor  \nrms root mean square  \n \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 22 of 107 OVERVIEW OF THE ARM7TDMI CORE  \nThe ARM7 ® core is a 32 -bit, reduced instruction set computer \n(RISC), developed by ARM® Ltd. The ARM7TDMI is a \nvon Neumann -based architecture, meaning that it uses a single \n32-bit bus for instruction and data. The length of the data can \nbe 8, 16, or 32 bits , and the  length of the instruction word is \neither 16 bits or 32 bits, depending on the mode in which the \ncore is operating.  \nThe ARM7TDMI is an ARM7 core with four additional features, as listed in  Table 10. \nTable 10. ARM7TDMI Features  \nFeature  Description  \nT Support for the Thumb® (16 -bit) instruction set  \nD Support for debug  \nM Enhanced multiplier  \nI Includes the EmbeddedICE ® module to support \nembedded system debugging  \nTHUMB MODE (T)  \nAn ARM instruction is 32 bits long. The ARM7TDMI processor  \nsupports a second instruction set compressed into 16 bits, the \nThumb instruction set. Faster code execution from 16- bit memory  \nand great er code densi ty is achieved by using the Thum b instruc -\ntion set, making the ARM7TDMI core particularly suited for \nembedded applications.  \nHowever, the Thumb mode has three limitations.  \n• Relative to ARM, the Thumb code usually requires more \ninstructions to perform th e same task. Therefore, ARM \ncode is best for maximizing the performance of time -\ncritical code in most applications.  \n• The Thumb instruction set does not include some instructions that are needed for exception handling, so \nARM code can be required f or exception handling.  \n• When an interrupt occurs, the core vectors to the interrupt location in memory and executes the code present at that \naddress. The first command is required to be in ARM code.  \nMULTIPLIER (M)  \nThe ARM7TDMI instruction set includes an en hanced \nmultiplier, with four extra instructions to perform 32 -bit by \n32-bit multiplication with a 64 -bit result, and 32 -bit by 32 -bit \nmultiplication -accumulation (MAC) with a 64 -bit result.  \nEmbedded ICE (I)  \nThe Embedded ICE module provides integrated on -chip debug \nsupport  for the ARM7TDMI. The Embedded ICE module \ncontains the breakpoint and watc hpoint registers that allow \nnonintrusive user code debugging. These registers are con -\ntrolled through the JTAG test port. When a brea kpoint or \nwatchpoint is encountered, the processor halts and enters the \ndebug state. When  in a debug state, the processor registers can \nbe interrogated, as can the Flash/EE, SRAM, and memory \nmapped registers.  ARM7 Exceptions  \nThe ARM7 supports five types of  exceptions, with a privileged \nprocessing mode associated with each type. The five types of \nexceptions are as follows:  \nType 1: n ormal interrupt or IRQ . This is provided to service \ngeneral -purpose interrupt handling of int ernal and external \nevents. Note  that the ADuC7060/ ADuC7061 support s eight  \nconfigurable priority levels for all IRQ sources. \nType 2: f ast interrupt or FIQ . This is provided to service data \ntransfer or a communication channel with low latency.  FIQ  \nhas priority o ver IRQ. Note that  the ADuC7060 /ADuC7061 \nsupport s eight  configurable priority levels for all FIQ sources. \nType 3: m emory abort (prefetch and data).  \nType 4: a ttempted execution of an undefined instruction.  \nType 5: s oftware interrupts (SWI) instruction that can be used \nto make a call to an operating system.  \nTypically, the programmer defines interrupts as IRQ, but for \nhigher priority interrupts, the programmer can define interrupts as the FIQ type.  \nThe priority of these exceptions and vector address es are listed \nin Table 11. \nTable 11. Exception Priorities and Vector Addresses \nPriority  Exception  Address  \n1 Hardware reset  0x00 \n2 Memory abort (data)  0x10 \n3 FIQ 0x1C \n4 IRQ 0x18 \n5 Memory abort (prefetch)  0x0C \n6 Software interrupt1 0x08 \n6 Undefined instruction1 0x04 \n1 A software interrupt and an undefined instruction exception have the same \npriority and are mutually exclusive.  \nThe exceptions listed in Table 11 are located from 0x00 to 0x1C, \nwith a reserved location at 0x14.  \nARM REGISTERS \nThe ARM7TDMI has 16 standard registers. R0 to R12 are for \ndata manipulation, R13 is the stack pointer, R14 is t he link \nregister, and R15 is the program counter that indicates the \ninstruction currently being executed. The link register contains the address from which the user has branched ( when using  the \nbranch and link command) or the command during which an \nexcept ion occurred.  \nThe stack pointer contains the current location of the stack. \nGenerally , on an ARM7TDMI, the stack starts at the top of the \navailable RAM area and descends using the area as required. A separate stack is defined for each of the exceptions. T he size of \neach stack is user  configurable and is dependent on the target \napplication. When programming using high level languages, \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 23 of 107 such as C, it is necessary to ensure that the stack does not overflow.  \nThis is dependent on the performance of the compiler that is used.  \nWhen an exception occurs, some of the standard registers are \nreplaced with registers specific to the exception mode. All exception modes have replacement banked registers for the \nstack pointer (R13) and the link register (R14) as represented  \nin Figure 9. The FIQ mode has more registers (R8 to R12) \nsupporting faster interrupt processing. W ith the increased \nnumber of noncritical registers, the interrupt can be processed \nwithout the need to save or restore these registers, thereby \nreducing the response time of the interrupt handling process.  \nMore information relative to the programmer’s model and the \nARM7TDMI core architecture can be found in ARM7TDMI \ntechnical and ARM architecture manuals available directly  from \nARM Ltd.  \nUSABLE IN USER MODE\nSYSTEM MODES ONLY\nSPSR_UNDSPSR_IRQSPSR_ABTSPSR_SVCR8_FIQ\nR9_FIQ\nR10_FIQ\nR11_FIQ\nR12_FIQ\nR13_FIQ\nR14_FIQR13_UND\nR14_UNDR0\nR1\nR2\nR3\nR4\nR5\nR6\nR7\nR8\nR9\nR10\nR11\nR12\nR13\nR14\nR15 (PC)R13_IRQ\nR14_IRQR13_ABT\nR14_ABTR13_SVC\nR14_SVC\nSPSR_FIQCPSR\nUSER MODEFIQ\nMODESVC\nMODEABORT\nMODEIRQ\nMODEUNDEFINED\nMODE\n07079-004 \nFigure 9. Register Organization  \nINTERRUPT LATENCY  \nThe worst -case latency for an FIQ consists of the longest time \nthat the request can take to pass through th e synchronizer, plus \nthe time for the longest instruction to complete (the longest \ninstruction i s an LDM) that load s all the registers including the \nPC, plus  the time for the data abort entry, plus the time for FIQ \nentry. At the end of this time, the ARM7TDM I is executing the \ninstruc tion at 0x1C (FIQ interrupt vector address). The maximum  \ntotal time is 50 processor cycles, or just over 4.88  μs in a system \nusing a continuous 10.24 MHz processor clock. The maximum IRQ  latency calculation is similar  but must allow for the FIQ \nhaving higher priority , which can  delay entry into the IRQ \nhandling routine f or an arbitrary length of time. This time can be \nreduced  to 42 cycles if the LDM command is not used; some \ncompilers have an option to compile without using this command. \nAnother  option is to run the part in Thumb mode where this \ntime is reduced to 22 cycles.  \nThe minimum latency for FIQ or IRQ interrupts is five cycles. \nThis consists of the shortest time that the request can take through  \nthe synchronizer plus the time to enter the exce ption mode.  Note that the ARM7TDMI initially (first instruction) runs in \nARM (32 -bit) mode when an exception occurs. The user can \nimmediately switch from ARM mode to Thumb mode if required, \nfor example, when executing interrupt service routines.  \nMEMORY ORGANIZATION  \nThe ARM7, a von Neumann architecture MCU core , sees \nmemory as a linear array of 232 -byte locations. As shown in  \nFigure 10, the  ADuC7060/ ADuC7061 map s this into four \ndistinct user areas: a memory area that can be remapped, an \nSRAM area, a Flash/EE area, and a memory mapped register \n(MMR) area.  \nThe first 30  kB of this memory space is used as an area into \nwhich the on -chip Flash/EE or SRAM can be remapped.  Any \naccess, either reading or writing, to an area not defined in the memory map results in a data abort exception.  \nMemory Format  \nThe ADuC7060 /ADuC7061 memory organization is configured \nin little endian format: the least significant byte is located in the lowest byte address and the most sign ificant byte in the highest \nbyte address  (see Figure 11). \n0x00040FFF\n0x000400000xFFFFFFFF\n0xFFFF0000MMRs\n0x00087FFF\n0x00080000FLASH/EE\nSRAM\n0x00007FFF\n0x00000000REMAPPABLE MEMORY SPACE\n(FLASH/EE OR SRAM)RESERVED\nRESERVED\nRESERVED\n07079-005 \nFigure 10. Memory Map  \nBIT 31\nBYTE 2\nA\n6\n2.\n.\n.BYTE 3\nB\n7\n3.\n.\n.BYTE 1\n9\n5\n1.\n.\n.BYTE 0\n8\n4\n0.\n.\n.BIT 0\n32 BITS0xFFFFFFFF\n0x00000004\n0x00000000\n07079-006 \nFigure 11. Little Endian Format  \nSRAM \nThe ADuC7060 /ADuC7061 feature s 4 kB of SRAM, organized \nas 1024 ×  32 bits, that is, 1024 words located at 0x40000. The \nRAM sp ace can be used as data memory as well as volatile \nprogram space.  \nARM code can run directly from SRAM at full clock speed given that the SRAM array is configured as a 32 -bit wide memory \narray. SRAM is read/writ able in 8 -, 16-, and 32 -bit segments.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 24 of 107 Remap  \nThe ARM exception vectors are all situated at the bottom of the \nmemory array, from Address 0x00000000 to Address  0x00000020.  \nBy default, after a reset, the Flash/EE memory is logically \nmapped to Address 0x00000000. It is possible to logically remap \nthe SRAM  to Address  0x00000000 by setting Bit 0 of the remap  \nMMR located at 0xFFFF0220. To revert Flash/EE to 0x00000000, \nBit 0 of remap  is cleared.  \nIt is sometimes desirable to remap RAM to 0x00000000 to optimize \nthe interrupt latency of the  ADuC7060/ ADuC7061 because code \ncan run in full 32 -bit ARM mode and at maximum core speed. \nNote  that, when an exception o ccurs, the core defaults to ARM \nmode.  \nRemap Operation  \nWhen a reset occurs on the ADuC7060/ ADuC7061, execution \nstarts a utomati cally in the factory programmed internal \nconfiguration code. This so -called kernel is hidden and cannot \nbe accessed by user code. If the  ADuC7060/ ADuC7061 is in \nnormal mode, it executes the power -on configuration routine of \nthe kernel and then jumps to the reset vector, Address  0x00000000, to execute the user’s reset exception  routine. \nBecause  the Flash/EE is mirr ored at the bottom of the memory \narray at reset, the reset routine must always be written in \nFlash/EE.  \nThe remap command must be executed from the absolute Flash/EE \naddress  and not from the mirrored, remapped segment of memory,  \nbecause  this may be replaced  by SRAM. If a remap operation is \nexecuted while operating code from the mirrored location, pre -\nfetch/data aborts can occur , or the user can observe abnormal \nprogram operation.  Any kind of reset logically remaps the Flash/EE  \nmemory to the bottom of the memory array.  \nRemap  Register  \nName:  Remap  \nAddress:  0xFFFF0220  \nDefault  value:  0x0000 \nAccess:  Read and write   \nFunction:  This 8 -bit register allows user code to remap \neither RAM or Flash/EE space into the bottom \nof the ARM memory space starting at \nAddress  0x00000000.  \nTable 12. Remap  MMR Bit Designations  \nBit Description  \n7:1 Reserved. These bits are reserved and should be written \nas 0 by user code.  \n0 Remap bit. \n Set by user  to remap the SRAM to 0x00000000. \n Cleared automatically after reset to remap the Flash/EE \nmemory to 0x00000000. FLASH/EE CONTROL INT ERFACE  \nSerial and JTAG programming use the Flash/EE control \ninterface, which includes the eight MMRs outlined in this \nsection.  Note that the flash page size is 512 bytes.  \nFEESTA Register  \nFEESTA is a read -only register that reflects the status of the \nflash control interface as described in Table 13. \nName:  FEESTA  \nAddress:  0xFFFF0E00  \nDefault  value:  0x0020 \nAccess:  Read  \nTable 13. FEESTA MMR Bit Designations \nBit Description  \n15:6 Reserved.  \n5 Reserved.  \n4 Reserved.  \n3 Flash  interrupt status bi t. Set automatically when an \ninterrupt occurs, that is, when a command is complete \nand the Flash/EE interrupt enable bit in the FEEMOD \nregister is set. Cleared when reading the FEESTA \nregister.  \n2 Flash/EE controller bu sy. Set automatically when the \ncontro ller is busy. Cleared automatically when the \ncontroller is not busy.  \n1 Command fail. Set automatically when a command \ncompletes unsuccessfully. Cleared automatically when \nreading the FEESTA register.  \n0 Command pass. Set by the MicroConverter ® when a \ncomm and completes successfully. Cleared \nautomatically when reading the FEESTA register.  \nFEEMOD Register  \nFEEMOD sets the operating mode of the flash control interface.  \nTable  14 lists FEEMOD MMR bit designations.  \nName:  FEEMOD  \nAddress:  0xFFFF0 E04 \nDefault  value:  0x0000 \nAccess:  Read and write  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 25 of 107 Table 14. FEEMOD MMR Bit Designations \nBit Description  \n15:9 Reserved.  \n8 Reserved. Always set t his bit to 1. \n7:5 Reserved. Always set t hese bits to 0 except when \nwriting keys . \n4 Flash/EE interrupt enable.  \n Set by user to enable the Flash/EE interrupt. The \ninterrupt occurs when a command is complete.  \n Cleared by user to disable the Flash/EE interrupt.  \n3 Erase/ write command protect ion.  \n Set by user to enable the erase and write commands.  \n Cleared to protect the Flash /EE against the erase/write \ncommand.  \n2:0 Reserved. Always set t hese bits to 0.  FEECON Register  \nFEECON is an 8 -bit command register. The commands are \ndescribed in Table 15. \nName:  FEECON  \nAddress:  0xFFFF0 E08 \nDefaul t value:  0x07  \nAccess:  Read and write  \nTable 15. Command Codes in FEECON  \nCode  Command  Description  \n0x001 Null  Idle state.  \n0x011 Single read Load FEEDAT with the 16 -bit data. Indexed by FEEADR.  \n0x021 Single write Write FEEDAT at the address pointed to by FEEADR. This operation takes 50 μs . \n0x031 Erase/ write Erase the page indexed by FEEADR and write FEEDAT at the location pointed to by FEEADR. This operation takes \napproximately 24 ms.  \n0x041 Single verify  Compare the contents of the location pointed to by FEEADR to the data in FEEDAT. The result of the \ncomparison is returned in FEESTA Bit 0 and Bit 1 . \n0x051 Single erase  Erase the page indexed by FEEADR.  \n0x061 Mass erase  Erase 30 kB of user space. The 2 kB of kernel are protected. To prevent accidental execution, a command \nsequence is required to execute this instruction. See the Command Sequence for Ex ecuting a Mass Erase  \nsection.  \n0x07 Reserved  Reserved.  \n0x08 Reserved  Reserved.  \n0x09 Reserved  Reserved.  \n0x0A  Reserved  Reserved.  \n0x0B  Signature  This command result s in a 24 -bit LFSR -based signature be ing generated and loaded into the FEESIG  MMR.  This \noperation takes 16,389 clock cycles.  \n0x0C Protect  This command can run only once. The value of FEEPRO is saved and is removed only with a mass erase (0x06) \nor the key.  \n0x0D  Reserved  Reserved.  \n0x0E  Reserved  Reserved.  \n0x0F Ping  No operation; interrupt generated.  \n1 The FEECON register always reads 0x07 immediately after execution of any of these commands.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 26 of 107 FEEDAT Register  \nFEEDAT is a 16 -bit data register . This register holds the data \nvalue for f lash read and write commands . \nName:  FEEDAT  \nAddress:  0xFFFF0 E0C \nDefault value:  0xXXXX  \nAccess:  Read and write  \nFEEADR Register  \nFEEADR is a 16 -bit address register used for accessing \nindividual pages of the 32  kB flash block. The valid address \nrange for a u ser is: 0x0000 to 0x77FF. This represents the 30  kB \nflash us er memory space. A read or write access outside this \nboundary cause s a data abort exception to occur.  \nName :  FEEADR  \nAddress :  0xFFFF0 E10 \nDefault value:  0x0000 \nAccess:  Read and write  \nFEESIG Register  \nThe FEESIG  register is a 24- bit MMR. This register is updated \nwith the 24 -bit signature value after the s ignature command is  \nexecuted. This value is the result of the linear feedback shift \nregister  (LFSR ) operation initiated by the signature comm and.  \nName:  FEESIG  \nAddress:  0xFFFF0 E18 \nDefault value:  0xFFFFFF  \nAccess:  Read  \nFEEPRO Register  \nThe FEEPRO MMR provides protection following a subsequent \nreset of the MMR. It requires a software key (see Table 16). \nName:  FEEPRO  \nAddress:  0xFFFF0 E1C  \nDefault value:  0x00000000 \nAccess:  Read and write  FEEHID  Register  \nThe FEEHID  MMR provides immediate protection. It does not \nrequire any software key. Note that the protection settings in  \nFEEHID  are cleared by a reset  (see Table 16). \nName:  FEEHID  \nAddress:  0xFFFF0 E20 \nDefault value:  0xFFFFFFFF  \nAccess:  Read and write  \nTable 16. FEEPRO and FEEHID  MMR Bit Designations  \nBit Description  \n31 Read protection.  \nCleared by user to protect all code. N o JTAG read \naccesses for protected pages if this bit is cleared .  \nSet by the user to allow reading the code via JTAG.  \n30 Protection for Page 59 (0x00087600 to 0x000877FF) . \nSet by the user to allow writing to  Page 59. Cleared to \nprotect Page 59.   \n29 Protection for Page 58 (0x00087400 to 0x000875FF) . \nSet by the user to allow writing to  Page 58. Cleared to \nprotect Page 58.   \n28:0  Write protection for Page 57 to Page 0. Each bit \nrepresents two  pages. Each page is 512 bytes in size.  \nBit 0 is protection for Page 0 and Page 1 (0x00080000 \nto 0x000803FF) . Set by the user to allow writing Page  0 \nand Page 1. Cleared  to protect Page  0 and  Page 1. \nBit 1 is protection for Page  2 and Page 3 (0x00080400 \nto 0x000807FF. Set by the user to allow writing Page  2 \nand Page 3. Cleared  to protect Page  2 and Page 3. \n… \n… \nBit 27 is protection for page 54 and page 55 (0x86C00 \nto 0x86FFF) . Set by the user to allow writing to Page \n54 and Page 55. Cleared  to protect Page  54 and Page \n55. \nBit 28 is prote ction for page 56 and page 57 ( 0x87000 \nto 0x873FF) . Set by the user to allow writing to Page  \n56 and Page 57. Cleared to protect Page  56 and Page \n57. \nTemporary Protection  \nTemporary protection can be set and removed by writing \ndirectly into the FEEHID MMR. This register is volatile and, \ntherefore, protection is only in place for as long as the part \nremains powered on. The protection setting is not reloaded \nafter a power cycle.  \nKeyed Permanent Protection  \nKeyed permanent protection can be set via FEEPRO to lock the \nprotection configuration.  The software key used at the start of \nthe required FEEPRO write sequence is saved one time only \nand must be used for any subsequent access of the FEEHID or FEEPRO MMRs.  A mass erase sets the software protection key \nback to 0xFFFF but also erases the entir e user code space.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 27 of 107 Permanent Protection  \nPermanent protection can be set via FEEPRO, similar to how \nkeyed permanent protection is set, with the only difference \nbeing that the software key used is 0xDEADDEAD. When the \nFEEPRO write sequence is saved, only a m ass erase sets the \nsoftware protection key back to 0xFFFFFFFF. This also erases \nthe entire user code space.  \nSequence to Write the Software Protection Key and Set \nPermanent Protection  \n1. Write in FEEPRO corresponding to the pages to be \nprotected.  \n2. Write the new (user -defined) 32 -bit software protection \nkey in FEEADR (Bits[31:16]) and FEEDAT (Bits[15:0]).  \n3. Write 10 in FEEMOD (Bits[6:5]) and set FEEMOD (Bit  3). \n4. Run the protect command (Code 0x0C) in FEECON.  \nTo remove or modify the protection, the same sequence can be \nused with a modified value of FEEPRO.  \nThe previous sequence for writing the key and setting permanent  \nprotection is illustrated in the following example, this protects \nwriting Page 4 and Page 5 of the Flash/EE:  \nInt a = FEESTA;  // Ensure FEESTA \nis cleared \nFEEPRO = 0xFFFFFFFB;  // Protect Page 4 \nand Page 5 \nFEEADR = 0x66BB;  // 32-bit key \nvalue (Bits[31:16])  \nFEEDAT = 0xAA55;  // 32-bit key \nvalue (Bits[15:0]) \nFEEMOD = 0x0048   // Lock security \nsequence \nFEECON = 0x0C;  // Write key \ncommand while (FEESTA & 0x04){} // Wait for \ncommand to finish Command Sequence for Ex ecuting a Mass Erase  \nFEEDAT = 0x3CFF; \nFEEADR = 0xFFC3; \nFEEMOD = FEEMOD|0x8; //Erase key enable \nFEECON = 0x06; //Mass erase command \nADuC7060/ADuC7061 Data Sheet\n \nRev. F | Page 28 of 107 MEMORY MAPPED REGISTERS  \nThe memory mapped register (MMR) space is mapped into the \nupper two pages of the memory array and is accessed by \nindirect addressing through the ARM7 banked registers. \nThe MMR space provides an interface between the CPU and all \non-chip peripherals. All registers, except the core registers, reside  in the MMR area. All shaded locations shown in Figure 12 are \nunoccupied or reserved locations and should not be accessed by \nuser software. Figure 12 shows the full MMR memory map. \nThe access time for reading from or writing to an MMR \ndepends on the advanced microcontroller bus architecture (AMBA) bus used to access the peripheral. The processor has two AMBA buses: the advanced high performance bus (AHB) used for system modules and the advanced peripheral bus \n(APB) used for a lower performance peripheral. Access to the \nAHB is one cycle, and access to the APB is two cycles. All peripherals on the ADuC7060/ ADuC7061 are on the APB \nexcept for the Flash/EE memory, the GPIOs, and the PWM.  PWM0xFFFF0FC00xFFFFFFFF\n0xFFFF0F80\nFLASH CONTROL\nINTERFACE0xFFFF0E24\n0xFFFF0E00\nGPIO0xFFFF0D50\n0xFFFF0D00\nSPI0xFFFF0A14\n0xFFFF0A00\nI2C0xFFFF09480xFFFF0900\nUART0xFFFF07300xFFFF0700\nDAC0xFFFF06200xFFFF0600\nADC0xFFFF05700xFFFF0500\nBAND GAP\nREFERENCE0xFFFF0490\n0xFFFF048C\nSPI/I 2C\nSELECTION0xFFFF04700xFFFF0450\nPLL AND OSCILLATOR\nCONTROL0xFFFF04200xFFFF0404\nGENERAL-PURPOSE\nTIMER0xFFFF03940xFFFF0380\nWATCHDOG\nTIMER0xFFFF03700xFFFF0360\nWAKE-UP\nTIMER0xFFFF03500xFFFF0340\nGENERAL-PURPOSE\nTIMER0xFFFF03340xFFFF0320\nREMAP AND\nSYSTEM CONTROL0xFFFF0238\n0xFFFF0220\nINTERRUPT\nCONTROLLER0xFFFF0140\n0xFFFF0000\n07079-007 \nFigure 12. Memory  Mapped Registers \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 29 of 107 COMPLETE MMR LISTING  \nIn the following MMR tables, addresses are listed in hex adecimal  code. Access types include R for read, W for write, and R /W for read \nand write.  \nTable 17. IRQ Address Base = 0xFFFF0000  \nAddress  Name  Byte s Access \nType  Default  Value  Description  \n0x0000 IRQSTA  4 R 0x00000000 Active IRQ s ource  status . \n0x0004 IRQSIG 4 R  Current state of a ll IRQ sources (enabled and disabled) . \n0x0008 IRQEN  4 R/W 0x00000000 Enabled IRQ s ources.  \n0x000C IRQCLR  4 W 0x00000000 MMR to disable IRQ sources.  \n0x0010 SWICFG  4 W 0x00000000 Software interrupt configu ration MMR.  \n0x0014 IRQBASE  4 R/W  0x00000000 Base address of all ve ctors. Points to the start of the 64-byte memory block , \nwhich can contain up to 32 pointers to separate  subroutine handlers.  \n0x001C IRQVEC  4 R 0x00000000 This register contains the  subroutine address for the currently active \nIRQ source . \n0x0020 IRQP0  4 R/W 0x00000000 Contains the interrupt priority setting for I nterrupt Source  1 to Interrupt \nSource 7. An interrupt can have a priority setting of 0 to 7 . \n0x0024 IRQP1  4 R/W  0x00000000 Contains the interrupt prior ity setting for I nterrupt Source 8 to Interrupt \nSource 15. \n0x0028 IRQP2  4 R/W  0x00000000 Contains the interrupt pr iority setting for I nterrupt Source  16 to \nInterrupt Source 19. \n0x0030 IRQCONN  4 R/W  0x00000000 Used to enable IRQ and FIQ interrupt nesting . \n0x0034 IRQCONE  4 R/W  0x00000000 Configures the external interrupt sources as rising edge, falling edge , or \nlevel triggered.  \n0x0038 IRQCLRE  4 R/W  0x00000000 Used to clear an e dge -level -triggered interrupt source . \n0x003C IRQSTAN  4 R/W  0x00000000 This register indicates the priority level of an interrupt that has just \ncaused an interrupt exception.  \n0x0100 FIQSTA  4 R 0x00000000 Active FIQ s ource  status . \n0x0104 FIQSIG  4 R  Current state of al l FIQ sources (enabled and disable d). \n0x0108 FIQEN  4 R/W 0x00000000 Enabled FIQ s ources.  \n0x010C FIQCLR  4 W 0x00000000 MMR to disable FIQ sources.  \n0x011C  FIQVEC  4 R 0x00000000  This register contains the subroutine address for the currently active FIQ \nsource.  \n0x013C FIQSTAN  4 R/W 0x00000000 Indicates the priority level of an FIQ that has just caused an FIQ \nexception.  \n \nTable 18. System Control Address Base = 0xFFFF0200  \nAddress  Name  Byte s Access  \nType  Default  Value  Description  \n0x0220 REMAP1 1 R/W  0x00 Remap  control reg ister. See the Remap Operation section.  \n0x0230 RSTSTA  1 R/W  0x01 RSTSTA status  MMR. See the Reset  section.  \n0x0234 RSTCLR  1 W 0x00 Register  for clearing the RSTSTA register . \n1 Updated by the kernel.  \n \n \n \n \n    \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 30 of 107 Table 19. Timer Address Base = 0xFFFF0300  \nAddress  Name  Bytes Access \nType  Default Value  Description  \n0x0320 T0LD  4 R/W 0x00000000 Timer0 load re gister.  \n0x0324 T0VAL  4 R 0xFFFFFFFF  Timer0 value re gister.  \n0x0328  T0CON  4 R/W 0x01000000  Timer0 control  MMR.  \n0x032C T0CLRI  1 W N/A  Timer0  interrupt clear reg ister.  \n0x0330 T0CAP  4 R 0x00000000 Timer0 capture reg ister.  \n0x0340 T1LD  4 R/W 0x00000000 Timer1 load reg ister.  \n0x0344 T1VAL  4 R 0xFFFFFFFF  Timer1  value reg ister . \n0x0348 T1CON  2 R/W 0x0000 Timer1 control MMR.  \n0x034C T1CLRI  1 W N/A  Timer1 interrupt clear reg ister . \n0x0360 T2LD  2 R/W 0x3BF8  Timer2 load re gister.  \n0x0364 T2VAL  2 R 0x3BF8  Timer2 value re gister.  \n0x0368 T2CON  2 R/W 0x0000 Timer2 control MMR.  \n0x036C T2CLRI  1 W N/A  Timer2 interrupt clear regis ter.  \n0x0380  T3LD  2 R/W 0x0000  Timer3 load re gister.  \n0x0384 T3VAL  2 R 0xFFFF  Timer3 value re gister.  \n0x0388 T3CON  4 R/W 0x00000000 Timer3 control MMR.  \n0x038C T3CLRI  1 W N/A  Timer3 interrupt clear register.  \n0x0390 T3CAP  2 R 0x0000 Timer3 capture reg ister.  \nTable 20. PLL Base Address = 0xFFFF0400  \nAddress  Name  Byte s Access \nType  Default Value  Description  \n0x0404 POWKEY1  2 W 0xXXXX  POWCON0  prewrite k ey. \n0x0408 POWCON0  1 R/W 0x7B  Power control and core speed control regis ter.  \n0x040C POWKEY2  2 W 0xXXXX  POWCON0  postwrite key.  \n0x0410 PLLKEY1  2 W 0xXXXX  PLLCON prewrite k ey.  \n0x0414 PLLCON  1 R/W 0x00 PLL clock source sele ction MMR.  \n0x0418  PLLKEY2  2 W 0xXXXX  PLLCON  postwrite ke y.  \n0x0434 POWKEY3  2 W 0xXXXX  POWCON1 prewrite key.  \n0x0438 POWCON1  2 R/W  0x124 Power control register.  \n0x043C POWKEY4  2 W 0xXXXX  POWCON1 postwrite key.  \n0x0464 GP0KEY1  2 W 0xXXXX  GP0CON1 prewrite key.  \n0x0468  GP0CON1  1 R/W  0x00  Configures P0.0, P0.1, P0.2, and P0.3 as analog inputs or digital I/Os. Also \nenables SPI or I2C mode.  \n0x046C GP0KEY2  2 W 0xXXXX  GP0CON1 postwrite key.  \n \n  \n \n     \n \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 31 of 107 Table 21. ADC Address Base = 0xFFFF0500  \nAddress  Name  Byte s Access \nType  Default  Value  Description  \n0x0500 ADCSTA  2 R 0x0000 ADC status MMR.  \n0x0504 ADCMSKI  2 R/W  0x0000 ADC  interrupt source ena ble MMR.  \n0x0508  ADCMDE  1 R/W  0x03 ADC mode reg ister.  \n0x050C ADC0CON  2 R/W  0x8000 Primary ADC c ontrol MMR.  \n0x0510 ADC1CON  2 R/W  0x0000 Auxiliary  ADC control MMR.  \n0x0514 ADCFLT  2 R/W  0x0007 ADC filter c ontrol MMR.  \n0x0518 ADCCFG  1 R/W  0x00 ADC configuration MMR.  \n0x051C ADC0DAT  4 R 0x00000000 Primary ADC r esult MMR.  \n0x0520 ADC1DAT  4 R 0x00000000 Auxiliary  ADC result MMR  \n0x0524 ADC0OF1 2 R/W  0x0000, p art specific, factory \nprogrammed  Primary ADC offset calibration sett ing. \n0x0528 ADC1OF1 2 R/W  0x0000, part specific, factory \nprogrammed  Auxiliary  ADC offset MMR.  \n0x052C  ADC0GN1 2 R/W  0x5555  Primary ADC offset MMR.  \n0x0530 ADC1GN1 2 R/W  0x5555 Auxiliary  ADC offset MMR. See the ADC operation mode \nconfiguration bit (ADCLPMCFG[1:0]) in Table 42. \n0x0534 ADC 0RCR  2 R/W  0x0001 Primary ADC r esult  counter/relo ad MMR.  \n0x0538 ADC 0RCV  2 R 0x0000 Primary ADC r esult  counter MMR.  \n0x053C ADC 0TH  2 R/W  0x0000 Primary ADC 16 -bit comparator threshold MMR.  \n0x0540 ADC 0THC  2 R/W  0x0001 Primary ADC 16 -bit comparator threshold counter lim it. \n0x0544 ADC 0THV  2 R 0x0000 ADC0 8-bit threshold exceeded counter register  \n0x0548 ADC 0ACC  4 R 0x00000000 Primary ADC a ccumulator.  \n0x054C ADC 0ATH  4 R/W  0x00000000 Primary ADC 3 2-bit comparator threshold MMR.  \n0x0570 IEXCON  1 R/W  0x00 Excitation current sources control regist er. \n1 Updated by the kerne l to part specific calibration value .  \nTable 22. DAC Control Address Base = 0xFFFF0600  \nAddress  Name  Byte s Access  \nType  Default  Value  Description  \n0x0600 DAC0CON  2 R/W  0x0200 DAC  control reg ister.  \n0x0604 DAC0DAT  4 R/W  0x00000000 DAC output data register.  \nTable 23. UART Base Address = 0 xFFFF0700  \nAddress  Name  Byte s Access  \nType  Default  Value  Description  \n0x0700 COMTX  1 W N/A  UART transmit register.  \n0x0700 COMRX  1 R 0x00 UART  receive reg ister.  \n0x0700 COMDIV0  1 R/W 0x00 UART Standard Baud Rate Generator Divisor Value 0.  \n0x0704 COMIEN0  1 R/W 0x00 UART Interrupt Enable MMR 0.  \n0x0704 COMDIV1  1 R/W  0x00 UART Standard Baud Rate Generator Divisor Value 1.  \n0x0708 COMIID0  1 R 0x01 UART Interrupt Identification 0.  \n0x070C COMCON0  1 R/W 0x00 UART Control Register 0.  \n0x0710 COMCON1  1 R/W 0x00 UART Control Register 1.  \n0x0714 COMSTA0  1 R 0x60 UART Status Register 0.  \n0x0718  COMSTA1  1 R 0x00  UART Status Register 1.  \n0X072C  COMDIV2  2 R/W 0x0000 UART fractional divider MMR.  \n \n \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 32 of 107 Table 24. I2C Base Address = 0 xFFFF0900  \nAddress  Name  Byte s Access  Type  Default  Value  Description  \n0x0900 I2CMCON  2 R/W  0x0000 I2C master control regis ter. \n0x0904 I2CMSTA  2 R 0x0000 I2C master status reg ister.  \n0x0908 I2CMRX  1 R 0x00 I2C master  receive register.  \n0x090C I2CMTX  1 W 0x00 I2C master  transmit register.  \n0x0910 I2CMCNT0  2 R/W  0x0000 I2C master  read co unt register. Write the number of required bytes into \nthis register prior to reading from a slave  device.  \n0x0914 I2CMCNT1  1 R 0x00 I2C master  current read count register. This register contains the \nnumber of bytes already received d uring a read from slave  sequence.  \n0x0918 I2CADR0  1 R/W  0x00 Address byte register. Write the required slave  address here prior to \ncommunications.  \n0x091C I2CADR1  1 R/W  0x00 Address byte register. Write the required slave  address here prior to \ncommunications. Only used in 10 -bit mode.  \n0x0924 I2CDIV  2 R/W  0x1F1F I2C clock control register. Used to configure the SCLK frequency.  \n0x0928 I2CSCON  2 R/W  0x0000 I2C slave  control register.  \n0x092C I2CSSTA  2 R/W  0x0000 I2C slave  status register.  \n0x0930  I2CSRX  1 R 0x00  I2C slave  receive register.  \n0x0934 I2CSTX  1 W 0x00 I2C slave  transmit register.  \n0x0938 I2CALT  1 R/W  0x00 I2C hardware general call recognition register.  \n0x093C I2CID0  1 R/W  0x00 I2C Slave ID0 register. Slave bus ID register . \n0x0940 I2CID1  1 R/W  0x00 I2C Slave ID1 register. Slave bus ID register . \n0x0944 I2CID2  1 R/W  0x00 I2C Slave ID2 register. Slave bus ID register . \n0x0948 I2CID3  1 R/W  0x00 I2C Slave ID3 register. Slave bus ID register . \n0x094C I2CFSTA  2 R/W  0x0000 I2C FIFO status register. Used in both master  and  slave  modes . \nTable 25. SPI Base Address = 0xFFFF0A00  \nAddress  Name  Byte s Access \nType  Default Value  Description  \n0x0A00 SPISTA  4 R 0x00000000 SPI status MMR.  \n0x0A04 SPIRX  1 R 0x00 SPI receive MMR.  \n0x0A08 SPITX  1 W 0x00 SPI transmit MMR.  \n0x0A0C SPIDIV  1 W 0x1B  SPI baud rate se lect MMR.  \n0x0A10 SPICON  2 R/W 0x0000 SPI control MMR.  \nTable 26. GPIO Base Address = 0xFFFF0D00  \nAddress  Name  Byte s Access Type  Default Value  Description  \n0x0D00  GP0CON 0 4 R/W 0x00000000 GPIO Port  0 control MMR.  \n0x0D04 GP1CON  4 R/W 0x00000000 GPIO Port  1 control MMR.  \n0x0D08 GP2CON  4 R/W 0x00000000 GPIO Port  2 control MMR.  \n0x0D20 GP0DAT  4 R/W 0x000000XX  GPIO Port  0 data co ntrol MMR.  \n0x0D24 GP0SET  4 W 0x000000XX  GPIO Port  0 data set  MMR.  \n0x0D28 GP0CLR  4 W 0x000000XX  GPIO Port  0 data cl ear MMR.  \n0x0D2C  GP0PAR  4 R/W 0x00000000  GPIO Port  0 pull-up dis able MMR.  \n0x0D30 GP1DAT  4 R/W 0x000000XX  GPIO Port  1 data contr ol MMR.  \n0x0D34 GP1SET  4 W 0x000000XX  GPIO Port  1 data se t MMR.  \n0x0D38 GP1CLR  4 W 0x000000XX  GPIO Port  1 data cle ar MMR.  \n0x0D3C GP1PAR  4 R/W 0x00000000 GPIO Port  1 pull-up dis able MMR.  \n0x0D40 GP2DAT  4 R/W 0x000000XX  GPIO Port  2 data co ntrol MMR.  \n0x0D44 GP2SET  4 W 0x000000XX  GPIO Port  2 data s et MMR.  \n0x0D48 GP2CLR  4 W 0x000000XX  GPIO Port  2 data cle ar MMR.  \n0x0D4C GP2PAR  4 R/W 0x00000000 GPIO Port  2 pull-up di sable MMR.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 33 of 107 Table 27. Flash/EE Base Address = 0xFFFF0E00  \nAddress  Name  Byte s Access \nType  Default Value  Description  \n0x0E00 FEESTA  2 R 0x20 Flash/EE status MMR.  \n0x0E04 FEEMOD  2 R/W 0x0000 Flash/EE control  MMR.  \n0x0E08  FEECON  1 R/W 0x07  Flash/EE control MMR.  \n0x0E0C FEEDAT  2 R/W 0xXXXX  Flash/EE data MMR.  \n0x0E10 FEEADR  2 R/W 0x0000 Flash/EE address MMR.  \n0x0E18 FEESIG  3 R 0xFFFFFF  Flash/EE LFSR MMR.  \n0x0E1C FEEPRO  4 R/W 0x00000000 Flash/EE protection MMR.  \n0x0E20 FEEHID  4 R/W 0xFFFFFFFF  Flash/EE protection MMR.  \nTable 28. PWM Base Address = 0xFFFF0F80  \nAddress  Name  Byte s Access Type  Default Value  Description  \n0x0F80 PWMCON  2 R/W  0x0012 PWM control register. See the Pulse -Width Modulator  section  for full \ndetails.  \n0x0F84 PWM0COM0  2 R/W  0x0000 Compare Register 0 for PWM Output  0 and PWM Output 1.  \n0x0F88 PWM0COM1  2 R/W  0x0000 Compare Register 1 for PWM Output 0 and PWM Output 1.  \n0x0F8C PWM0COM2  2 R/W  0x0000 Compare Register 2  for PWM Output 0 and PWM Output 1.  \n0x0F90 PWM0LEN  2 R/W  0x0000 Frequency control for PWM O utpu t 0 and PWM Output 1. \n0x0F94 PWM1COM0  2 R/W  0x0000 Compare Register 0 for PWM Output 2 and PWM Output 3 . \n0x0F98 PWM1COM1  2 R/W  0x0000 Compare Register 1 for PWM Output 2 and PWM Output 3 . \n0x0F9C PWM1COM2  2 R/W  0x0000 Compare Register 2  for PWM Output 2 and PWM Output 3 . \n0x0FA0  PWM1LEN  2 R/W  0x0000  Frequency control for PWM Output  2 and PWM Output 3. \n0x0FA4 PWM2COM0  2 R/W  0x0000 Compare Register 0 for PWM Output 4 and PWM Output 5.  \n0x0FA8 PWM2COM1  2 R/W  0x0000 Compare Register 1 for PWM Output 4 and PWM Output 5.  \n0x0FAC PWM2COM2  2 R/W  0x0000 Compare Register 2  for PWM Output 4 and PWM Output 5.  \n0x0FB0  PWM2LEN  2 R/W  0x0000 Frequency control for PWM Output 4 and PWM Output 5. \n0x0FB8  PWMCLRI  2 W 0x0000 PWM interrupt clear register. Writing any value to this register clear s a \nPWM interrupt source.  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 34 of 107 RESET  \nThere are four kinds of reset s: external reset, power -on reset, \nwatchdog reset, and software reset. The RSTSTA register \nindicates the source of the last reset and can be written by user \ncode to initiate a software reset event.  \nThe bits in this register can be cleared to 0 by writing to the \nRSTCLR MMR at 0xFFFF0234. The bit designations in \nRSTCLR mirror those of RSTSTA. These registers can be used \nduring a reset exception service routine to identify the source of the reset. The im plica tions of all four kinds of reset event s are \ntabulated in Table 30. \nRSTSTA Register  \nName:  RSTSTA  \nAddress:  0xFFFF0230  \nDefault  value:  Depends on type of reset \nAccess:  Read and write   \nFunction:  This 8 -bit register indicates the source of t he \nlast reset event and can  be written by user code \nto initiate a software reset.  RSTCLR Register  \nName:  RSTCLR  \nAddress:  0xFFFF0234  \nAccess:  Write o nly \nFunction:  This 8 -bit write only register clears the corres -\nponding bit in RSTSTA.  \nTable 29. RSTSTA/RSTCLR MMR Bit Designations \nBit Description  \n7:4 Not used. These bits are not used and always  \nread as 0.  \n3 External reset.  \n Automatically set to 1 when an external reset \noccurs.  \n This bit is cleared by setting the corresponding bit \nin RSTCLR.  \n2 Software reset.  \n This bit is set to 1 by user code to generate a soft - \nware reset.  \n This bit is cleared by setting the corresponding bit \nin RSTCLR.1 \n1 Watchdog timeout.  \n Automatically set to 1 when a watchdog timeout occurs.  \n Cleared by setting the corresponding bit in RSTCLR.  \n0 Power -on r eset.  \n Automatically set when a power -on reset occurs.  \n Cleared by setting the corresponding bit in RSTCLR.  \n1 If the software reset bit in RSTSTA is set, any write to RSTCLR that does not \nclear this bit generates a software reset.  \n \nTable 30. Device Reset Implications \nRESET  Reset  \nExternal Pins to \nDefault State  Kernel Executed  Reset All  \nExternal MMRs (Excluding RSTSTA)  Peripherals Reset  Watchdog Timer Reset  RAM \nValid  RSTSTA  \n(Status After \nReset Event)  \nPOR  Yes Yes Yes Yes Yes Yes/No  RSTSTA[0] = 1  \nWatchdog  Yes Yes Yes Yes No Yes RSTSTA[1] = 1  \nSoftware  Yes Yes Yes Yes No Yes RSTSTA[2] = 1  \nExternal  Pin Yes Yes Yes Yes No Yes RSTSTA[3] = 1  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 35 of 107 OSCILLATOR, PLL, AND POWER CONTROL  \nCLOCKING SYSTEM  \nThe ADuC7060 /ADuC7061 integrates a 32.768 kHz ±3% oscillator, a \nclock divider, and a PLL. The PLL locks onto a multiple of t he inter - \nnal oscillator or an external 32.768  kHz crystal to provide a stable \n10.24 MHz clock (UCLK) for the system.  To allow power saving,  \nthe core can operate at this frequency or at binary submultiples  \nof it. The actual core operating frequency, UCLK/2CD, is refered  \nto as HCLK. The default core clock is the PLL clock divided by 8 \n(CD = 3) or 1.28 MHz.  \nPLL\nCORECD10.24MHz32.768kHz\n*32.768kHz ±3%HCLKUCLKOCLKWATCHDOG\nTIMER\nWAKE-UP\nTIMERINT. 32kHz\nOSCILLATOR*CRYSTAL\nOSCILLATORXCLKO\nXCLKI\nANALOG\nPERIPHERALS\n/2CDI2C\n07079-008P2.0/EXTCLK\n \nFigure 13. Clocking System  \nExternal Crystal Selection  \nTo switch to an external crystal, users must follow this procedur e: \n1. Enable the Timer1 interrupt and configure it for a timeout \nperiod of >120 µs.  \n2. Follow the write sequence to the PLLCON register, setting the \nOSEL bits to [10] and clearing the EXTCLK bit.  \n3. Force the part into nap mode by following the correct write \nseque nce to the POWCON register.  \n4. When the part is interrupted from nap mode by the Timer1 \ninterrupt source, the clock source has switched to the external crystal.  \nExample source code  \nT1LD  = 0x80;  // 32,768 clock ticks \nT1CON = 0xC0;  // Periodic mode, enable  \n// timer, 32,768 Hz clock/1 \nIRQEN |= 0x10; // Enable Timer1 interrupt \n // source \nPLLKEY1 = 0xAA;  // Switch to external crystal PLLCON = 0x2; \nPLLKEY2 = 0x55; \nPOWKEY1 = 0x1;   // Enter nap mode \nPOWCON0 = 0x73; \nPOWKEY2 = 0xF4; In case of crystal loss, the watchdog timer should be used. During  \ninitialization, a test on the RSTSTA can determine if the reset came \nfrom the watchdog timer.  \nExternal Clock Selection  \nTo switch to an external clock on P2.0, configure P2.0 in Mode  0. \nThe external clock can be up to 2 0.48 MHz, provided that the toler -\nance is 1%. The external clock is divided by 2 internally on the part.  \nExample source code  \nT1LD  = 0x80;  \nT1CON = 0xC0;  \nIRQEN |= 0x10;      // Enable Timer1 interrupt \nPLLKEY1 = 0xAA; // Switch to external clock \nPLLCON = 0x4; \nPLLKEY2 = 0x55; \n \nPOWKEY1 = 0x1; // Enter NAP mode \nPOWCON0 = 0x73; \nPOWKEY2 = 0xF4;  \nThe selection of the clock source is in the PLLCON register. By \ndefault, the part uses the internal oscillator feeding the PLL.  \nPOWER CONTROL SYSTEM  \nThe core clock frequency is changed by writing to the POWCON0 \nregister. This is a key protected register; therefore, Register  POWKEY1  \nand Register POWKEY2 must be written to immediately before and \nafter configuring the POWCON0 register. The following is a simple example showing how to configure the core clock for 10.24  MHz:  \nPOWKEY1 = 0x1; \nPOWCON0 = 0x78; //Set core to max CPU \n//speed of 10.24 MHz \nPOWKEY2 = 0xF4; \nA choice of operating modes is available on the ADuC7060/  \nADuC7061. Table 33 describes what part is powered  on in the \ndifferent modes and indicates the power -up time.  \nTable 34 gives some typical values for the total current consumption \n(analog + digital supply currents) in the different modes, depending  \non the clock divider bits. The ADC is turned off. Note that th ese \nvalues also include the current consumption of the regulator and \nother parts on the test board where these values are measured.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 36 of 107 By writing to POWCON1, it is possible to further reduce power \nconsumption in active mode by powering down the UART, PWM \nor I2C/SPI blocks. To access POWCON1, POWKEY3 must be set to \n0x76 in the instruction immediately before accessing POWCON1 \nand POWKEY4 must be set to 0xB1 in the instruction immediately \nafter.  \nFor example, the following code enables the SPI/I2C blocks but, \npow ers down the PWM and UART blocks.  \nPOWKEY3 =0x76; \nPOWCON1 =0x4;  //0x100 PWM; 0x20 \nUart; 0x4 SPI/I2C \nPOWKEY4 =0xB1; Power and Clock Control Registers  \nPOWKEY1 Register  \nName:  POWKEY1  \nAddress:  0xFFFF0404  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to POWCON0, the value of 0x01 \nmust be written to this register in the instruction \nimmediately before writing to POWCON0.  \nPOWCON0 Register  \nName:  POWCON0  \nAddress:  0xFFFF0408  \nDefault  value:  0x7B \nAccess:  Read and write  \nFunction:  This register controls the clock divide bits \ncontrolling the CPU clock (HCLK).  \n \nTable 31. POWCON0 MMR Bit Designations  \nBit Name  Description  \n7 Reserved  This bit must always be set to 0.  \n6 XPD  XTAL power -down.  \n  Cleared by user to power down the external crystal circuitry.  \n  Set by user to enable the external crystal circuitry.  \n5 PLLPD  PLL power -down.  Timer peripherals power down if driven from the PLL output clock. Timers driven from an active clock \nsource remain in normal power mode.  \n  This bit is cleared to 0 to power down the PLL. The PLL cannot be powered down if either the core or peripherals are \nenabled; Bit 3, Bit 4, and Bit 5 must be cleared simultaneously.  \n  Set by default, and set by hardware on a wake -up event.  \n4 PPD  Peripherals power -down. The peripherals that are powered down by this bit are as follows:  \nSRAM, Flash/EE memory and GPIO interfaces, and SPI/I2C and UART serial ports.  \n  Cleared to power down the peripherals. The peripherals cannot be powered down if the core is enabled; Bit 3 and Bit  4 \nmust be cleared simultaneously.  \n  Set by default and/or by hardware on a wake -up event. Wake -up timer (Timer1) can remain active.  \n3 COREPD  Core power -down. If user code powers down the MCU, include a dummy MCU cycle after the power -down command is \nwritten to POWCON0.  \n  Cleared to power down the ARM core.  \n  Set by default and set by hardware on a wake -up event.  \n2:0 CD[2:0]  Core clock depends on CD setting:  \n  [000] = 10.24 MHz  \n  [001] = 5.12 MHz  \n  [010] = 2.56 MHz  \n  [011] = 1.28 MHz [default value]  \n  [100] = 640 kHz  \n  [101] = 320 kHz  \n  [110] = 160 kHz  \n  [111] = 80 kHz  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 37 of 107 POWKEY2 Register  \nName:  POWKEY2  \nAddress:  0xFFFF040C  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to POWCON0, \nthe value of 0xF4 must be \nwritten to this register in the instruction immediately \nbefore  writing to POWCON0.  \nPOWKEY3 Register  \nName:  POWKEY3  \nAddress:  0xFFFF0434  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to POWCON1, the value of \n0x76 must be written to this register in the \ninstruction immediately before  writing to \nPOWCON1.  POWCON1 Register  \nName:  POWCON1  \nAddress:  0xFFFF0438  \nDefault  value:  0x124 \nAccess:  Read and write  \nFunction:  This register controls the clock signal to the \nPWM, UART and I2C/SPI blocks.  \nBy disabling the clock to these blocks, p ower \nconsumption is reduced.  \nPOWKEY4 Register  \nName:  POWKEY4  \nAddress:  0xFFFF043C  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to POWCON1, the value of \n0xB1 must be written to this register in the \ninstruction immediately after writing to \nPOWCON1.  \n \n \nTable 32. POWCON1 MMR Bit Designations  \nBit Name  Description  \n15:9 Reserved  This bit must always be set to 0.  \n8 PWMOFF  PWM power -down bit.  \n  Set by user to 1 to enable the PWM block. This bit is set by default . \n  Cleared by user to 0 to power down the PWM block.  \n7:6 Reserved  Reserved bits. Always clear these bits to 0.  \n5 UARTOFF  UART power -down bit.  \n  Set by user to 1 to enable the UART block. This bit is set by default . \n  Cleared by user to 0 to power down the UART block.  \n4:3 Reserved  Reserved bits. Always clear these bits to 0.  \n2 I2CSPIOFF I2C/SPI power -down bit.  \n  Set by user to 1 to enable the I2C/SPI blocks. This bit is set by default . \n  Cleared by user to 0 to power down the I2C/SPI blocks.  \n1:0 Reserved  Reserved Bits. Always clear these bits to 0.  \nTable 33. ADuC7060/ ADuC7061 Power Saving Modes  \nPOWCON0[6:3]  Mode  Core  Peripherals  PLL  XTAL/T 1/T2 IRQ0 to IRQ3  Start -Up/Power -On Time  \n1111 Active  Yes Yes Yes Yes Yes 130 ms at CD = 0 \n1110 Pause   Yes Yes Yes Yes 4.8 μs at CD = 0; 660 μs at CD = 7  \n1100  Nap    Yes Yes Yes 4.8 μs at CD = 0; 660 μs at CD = 7  \n1000 Sleep     Yes Yes 66 μs at CD = 0; 900 μs at CD  = 7 \n0000 Stop      Yes 66 μs at CD = 0; 900 μs at CD = 7  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 38 of 107 Table 34. Typical Current Consumption at 25°C in mA1 \nPOWCON0[6:3]  Mode  CD = 0  CD = 1  CD = 2  CD = 3  CD = 4  CD = 5  CD = 6  CD = 7  \n1111 Active2 5.22 4.04 2.69 2.01 1.67 1.51 1.42 1.38 \n1110 Pause3 2.6 1.95 1.6 1.49 1.4 1.33 1.31 1.3 \n1100 Nap3 1.33 1.29 1.29 1.29 1.29 1.29 1.29 1.29 \n1000 Sleep3 0.085 0.085 0.085 0.085 0.085 0.085 0.085 0.085 \n0000 Stop3 0.055 0.055 0.055 0.055 0.055 0.055 0.055 0.055 \n \n1 All values listed in Table 34 have been taken with both ADCs turned off.  \n2 In active mod e, GP0PAR bit 7 =1.  \n3 The values for pause, nap, sleep, and stop modes are measured with the NTRST pin low. To minimize I DD due to nTRST in all modes, set GP0PAR Bit 7 =1. This disables \nthe internal pull -down on the nTRST pin and means there is no ground path for the external pull -up resistor through the nTRST pin. By default, GP0PAR Bit 7 = 0, \ntherefore, setting this bit in user code will not affect the BMoperation.   \n \nName:  PLLKEY1  \nAddress:  0xFFFF0410  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to the PLLCON register, the \nvalue of 0xAA must be written to this register \nin the instruction immediately before writing \nto PLLCON.   \n \nName:  PLLCON  \nAddress:  0xFFFF0414  \nDefault  value:  0x00 \nAccess:  Read and write  \nFunction:  This register selects the clock input to the PLL.  \n  Table 35. PLLCON MMR Bit Designations  \nBit Name  Description  \n7:3 Reserved  These bits must always be set to 0.  \n2 EXTCLK  Set this bit to 1 to select external clock input \nfrom P2.0. \n  Clear this bit to disable the external clock.  \n1:0 OSEL  Oscillator selection bits.  \n  [00] = internal 32,768 Hz oscillator. \n  [01] = internal 32,768 Hz oscillator. \n  [10] = external crystal.  \n  [11] = internal 32,768 Hz oscillator. \n \nName:  PLLKEY2  \nAddress:  0xFFFF0418  \nDefault  value:  0xXXXX  \nAccess:  Write  \nFunction:  When writing to PLLCON, the value of 0x55 \nmust be written to this register in the \ninstruction immediately after writing to \nPLLCON.  \n \n \nData Sheet ADuC7060/ADuC7061\n \nRev. F | Page 39 of 107 ADC CIRCUIT INFORMATION \nIEXC0\nIEXC1\nADC2\nADC3ADC4\nADC5\nADC6ADC7\nADC8\nADC9\nGND_SW\n50ΩBUFΣ-∆\nMODULATORPROGRAMMABLE\nFILTERΣ-∆\nMODULATORPROGRAMMABLE\nFILTEROVERRANGE\nINTERFACE\nAND CONTROL\nCHOP\nMUXCHOP\nMUX\nAGND TEMPERATURE\nSENSORINTEGRATOR\nACCUMULATORCONVERSION\nCOUNTER\nCOMPARATORSTO ARM\n0.2Hz TO 8kHz0.5Hz TO 8kHzDACBUFINTERNAL\nREFERENCE\nAVDD\nAUX_REFP\nAUX_REFM\n0.2mA TO 1mAPGA50µA O/C\nDETECTVREF– VREF+ AVDD\nADC0\nADC1DAC0\n07079-009 \nFigure 14. Analog Block Diagram \nThe ADuC7060 /ADuC7061 incorporates two independent \nmultichannel Σ-Δ ADCs. The primary ADC is a 24-bit, \n4-channel ADC. The auxiliary ADC is a 24-bit Σ-Δ ADC,  \nwith up to seven single-ended input channels. \nThe primary ADC input has a mux and a programmable gain \namplifier on its input stage. The mux on the primary channel can be configured as two fully differential input channels or as \nfour single-ended input channels. \nThe auxiliary ADC incorporates a buffer on its input stage. \nDigital filtering is present on both ADCs, which allows measurement of a wide dynamic range and low frequency \nsignals such as those in pressure sensor, temperature sensor, \nweigh scale, or strain gage type applications.  \nThe ADuC7060 /ADuC7061 auxiliary ADC can be configured \nas four fully differential input channels or as seven single-ended \ninput channels. \nBecause of internal buffering, the internal channels can convert \nsignals directly from sensors without the need for external \nsignal conditioning. \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 40 of 107 Table 36. Primary ADC— Typical Output RMS Noise in Normal Mode  (μV)1 \nADC \nRegister  \nStatus  Data Update \nRate  Selectable Input Range  \n(PGA Settings)  \n±1.2 V  \n(PGA = 1) ±600 mV  \n(PGA  = 2) ±300 mV \n(PGA = 4) ±150 mV  \n(PGA  = 8) ±75 mV  \n(PGA = 16) ±37.5 mV  \n(PGA = 32) ±18.75 mV \n(PGA = 64) ±9.375 mV  \n(PGA  = 128)  ±4.68 mV  \n(PGA = 256)  ±2.34 mV  \n(PGA  = 512)  \nChop On  4 Hz  0.62 μV 0.648 μV 0.175 μV 0.109 μV 0.077 μV 0.041 μV 0.032 μV 0.0338 μV 0.032 μV 0.033 μV \nChop Off 50 Hz  1.97 μV 1.89 μV 0.570 μV 0.38 μV 0.27 μV 0.147 μV 0.123 μV 0.12 μV 0.098 μV 0.098 μV \nChop Off 1 kHz  8.54 μV 8.4 μV 2.55 μV 1.6 μV  1.17 μV 0.658 μV 0.53 μV 0.55 μV 0.56 μV 0.52 μV \nChop Off 8 kHz  54.97 μV 55.54 μV  14.30 μV  7.88 μV  4.59 μV  2.5 μV  1.71 μV  1.75 μV  0.915 μV 0.909 μV  \n \n1 The input voltage range is centered around the common -mode voltage and should meet the input voltage range specified in the Electrical Specifications  section.  \nTable 37. Primary ADC— Typical Output RMS Effective Number of B its in Normal Mode  (Peak -to-Peak Bits in P arentheses)  \nADC \nRegister  \nStatus  Data Update \nRate  Input Voltage Noise (mV)  \n±1.2  V \n(PGA = 1) ±600 mV \n(PGA = 2) ±300 mV \n(PGA = 4) ±150 mV \n(PGA  = 8) ±75  mV \n(PGA  = 16) ±37.5 mV  \n(PGA  = 32) ±18.75 mV \n(PGA  = 64) ±9.375 mV \n(PGA  = 128)  ±4.68  mV \n(PGA  = 256)  ±2.34  mV \n(PGA  = 512)  \nChop On  4 Hz  21.9  \n(19.1 p-p) 20.8  \n(18.1 p-p) 21.7  \n(19.0 p-p) 21.4  \n(18.7 p-p) 20.9  \n(18.2 p-p) 20.8  \n(18.1 p-p) 20.2  \n(17.4 p-p) 19.1  \n(16.4 p-p) 18.2  \n(15.4 p-p) 17.1  \n(14.4 p-p) \nChop Off  50 Hz  20.2  \n(17.5 p-p) 19.3  \n(16.6 p-p) 20.0  \n(17.3 p-p) 19.6  \n(16.9 p-p) 19.1  \n(16.4 p-p) 19.0  \n(16.2 p-p) 18.2  \n(15.5 p-p) 17.3  \n(14.6 p-p) 16.6  \n(13.8 p-p) 15.5  \n(12.8 p-p) \nChop Off  1 kHz  18.1  \n(15.3 p-p) 17.1  \n(14.4 p-p) 17.8  \n(15.1 p-p) 17.5  \n(14.8 p-p) 17.0  \n(14.2 p-p) 16.8  \n(14.1 p-p) 16.1  \n(13.4 p-p) 15.1  \n(12.3 p-p) 14.0  \n(11.3 p -p) 13.1  \n(10.4 p-p) \nChop Off  8 kHz  15.4  \n(12.7 p-p) 14.4  \n(11.7 p-p) 15.4  \n(12.6 p-p) 15.2  \n(12.5 p-p) 15.0  \n(12.3 p-p) 14.9  \n(12.2 p-p) 14.4  \n(11.7 p-p) 13.4  \n(10.7 p-p) 13.3  \n(10.6 p-p) 12.3  \n(9.6 p-p) \n \nTable 38. Auxil ary ADC —Typical Output RMS Noise  \nADC Register  Data  \nUpdate Rate  RMS Value  \nChop On  4 Hz 0.633 μV \nChop On  10 Hz 0.810 μV \nChop Off  1 kHz 7.4 μV \nChop Off  8 kHz 54.18 μV \nREFERENCE SOURCES  \nBoth the primary and auxiliary  ADCs  have the option of using \nthe internal ref erence voltage or  one of two external d ifferential \nreference sources. The first external reference is applied to the \nVREF+/VREF − pins. The second external reference is applied \nto the  ADC 4/EXT_ REF2 IN+ and ADC5 /EXT_ REF2 IN− pins. \nBy default, each ADC uses the internal 1.2  V reference source.  \nFor details on how to configure the external reference source for \nthe primary ADC, see the description of the ADC0REF[1:0] \nbits in the ADC0 control register, ADC0CON.  \nFor details on how to configure the external reference source for \nthe auxiliary ADC, s ee the description of the ADC1REF[2:0] \nbits in the ADC1 control register, ADC1CON.  \nIf an external reference source of greater than 1.35  V is needed \nfor ADC0, the HIGHEXTREF0 bit must be set in ADC0CON.  Similarly , if an external reference source of greater than 1.35  V \nis used for ADC1, the HIGHEXTREF1 bit must be set in \nADC1CON.  \nDIAGNOSTIC CUR RENT SOURCES  \nTo detect a connection failure to an external sensor, the  \nADuC7060/ ADuC7061 incorporate s a 50 μA constant current \nsource  on the selected analog input channels to both the \nprimary and au xiliary ADCs.  \nThe diagnostic current sources for the p rimary ADC analog \ninputs are controlled by the ADC0DIAG[1:0] bits in the \nADC0CON register.  \nSimilarly , the diagno stic current sources for the a uxiliary ADC \nanalog inputs are controlled by the ADC1DIAG[1:0]  bits in the \nADC1 CON register.  \nADC1 (–)ADC0 (+)\nAVDD R1A B\nR2A BVIN =\nADC0,\nADC1\n07079-010 \nFigure 15. Example Circuit Using Diagnostic Current Sourc es \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 41 of 107 Table 39. Example Scenarios for U sing Diagnostic Current S ource s \nDiagnostic Test  \nNormal Result  Fault Result  Detected  \nMeasurement  \nfor Fault  Register Setting  Description  \nADC0DIAG[1:0]  = 0 Convert ADC0/ADC1 as normal with \ndiagnostic currents disabled.   Expected differential result across ADC0/ADC1. Short circuit . Primary ADC reading ≈  0 \nV regardless of PGA \nsetting.  \nADC0DIAG[1:0] = 1  Enable a 50 μA diagnostic current \nsource on ADC0 by setting \nADC0DIAG[1:0] = 1. Convert ADC 0 and \nADC1.  Main ADC changes by  \nΔV = +50 μA × R1. For \nexample, ~100 mV for R1 = \n2 kΩ.  Short circuit between ADC0 \nand ADC1.  \nShort circuit \nbetween R1_a \nand R1_b.  Primary ADC reading ≈ 0 \nV regardless of PGA \nsetting.  \nConvert ADC0 in single -ended mode \nwith diagnostic currents disabled.  Expected voltage on ADC0.  ADC0 open \ncircuit or R1 \nopen circuit . Primary ADC reading  = \n+full scale, even on the lowest PGA setting.  \nADC0DIAG[1:0] = 3 Enable a 50 μA diagnostic current \nsource on both ADC0 and ADC1 by \nsetting ADC0DIAG[1:0]  = 3. Convert \nADC0 and ADC1.  Primary ADC changes by  ΔV \n= 50 μA × (R1 − R2), that is, \n~10 mV for 10% tolerance.  R1 does not \nmatch R2 . Primary ADC reading  > \n10 mV. \n \nSINC 3 FILTER  \nThe number entered into Bits [6:0] of the ADCFLT register sets \nthe decimation factor of the sinc3 filter. See Table 46 and Table 47 \nfor further details on the decimation factor values.  \nThe range of oper ation of the sinc 3 filter (SF) word depends on \nwhether the c hop function is enabled. With  chopping disabled, \nthe minimum SF word allowed is 0  and the maximum is 127 , \ngiving an ADC throughput range of 50  Hz to 8  kHz.  \nFor details on how to calculate the ADC  samplin g frequency \nbased on the value programmed to the SF[6:0] bits in the \nADCFLT register, refer to  Table 46. When changing conversions \nspeeds, put  ADC into idle mode before restarting.  \nADC C HOPPING  \nThe ADCs on the  ADuC7060/ ADuC7061 impleme nts a \nchopping scheme whereby the ADC re peatedly reverses its \ninputs. Therefore, the  decimated digital output values from the \nsinc3 filter have a positive and negative off set term associated \nwith them. This results in the ADC including a final summing \nstage that sums and averages each value from the filter with \nprevious filter output values. This new value is then sent to the ADC data MMR. This chopping  scheme results in ex cellent dc \noffset and offset drift specifications and is extremely beneficial \nin applications where drift and noise rejection are required.  \nPROGRAMMABLE GAIN AM PLIFIER  \nThe primary ADC incorporates an on -chip programmable gain \namplifier (PGA). The PGA can be programmed through 10 \ndifferent settings giving a range of 1 to 512. The gain is \ncontrolled by the AD C0PGA[3:0] bits  in the ADC0CON MMR.   \nEXCITATION SOURCES  \nThe ADuC7060 /ADuC7061 contain s two matched software \nconfigurable current sources. These e xcitation currents are \nsourced from AVDD. They are individually configurable to give a current range of 200  μA to  1 mA. The current step sizes are \n200 μA. These current sources can be used to excite an external \nresist ive bridge or RTD sensors. The IEXCON MMR controls \nthe excitation current sources . Bit 6 of IEXCON must be set to \nenable Excitation Cu rrent Source 0. Si milarly, Bit 7 must be set \nto enable Excitation Current Source 1. The o utput current of \neach current source is controlled by the IOUT[3:0] bits of this \nregister.  \nIt is also possible to configure the excitation current sources to \noutput current to a single output pin, either IEXC0 or IEXC1 , \nby using the IEXC0_DIR and IEXC1_DIR bits of IEXCON. This \nallows up to 2  mA to output current on a single excitation pin . \nADC LOW POWER MODE  \nThe ADuC7060 /ADuC7061 allow s the primary and auxiliary \nADCs to be placed in low pow er operating mode. When \nconfigured for this mode, the ADC  throughput time is reduced , \nbut the power consumpt ion of the p rimary ADC is reduced by a \nfactor of about 4; the  auxiliary ADC power consumption is \nreduced by a factor of roughly 3. The maximum ADC \nconversion rate in low  power mode is 2  kHz. The o perating \nmode of the ADCs is controlled by the ADCMDE regist er. This \nregister configures the part for either normal mode (default), \nlow power m ode, or low power  plus mode. Low  power plu s \nmode is the same as low  pow er mode except that the PGA is \ndisabled. To place the ADCs in to low pow er mode, the \nfollowing steps must be completed:  \n• ADCMDE [4:3]—Setting these bits enables n ormal  mode , \nlow pow er mode , or low power  plus mode.  \n• ADCMDE [5]—Setting this bit configures  the part for low \npower mode .  \n• ADCMDE[ 7]—Clearing this bit further reduce s power \nconsumption by reducing the  frequency of the ADC clock.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 42 of 107 ADC COMPARATOR AND A CCUMULATOR  \nEvery primary ADC  result can be compared to a preset \nthreshold  level (ADC0TH) as configured via ADCCFG[4:3]. An \nMCU interrupt is generated if the absolute (sign independent) \nvalue of the ADC result is greater than the preprogrammed \ncom parator threshold level. An  extended function of this \ncomparator  function allows u ser code to configure a threshold \ncounter (ADC0THV) to monitor the number of primary  ADC \nresults that have occurred above or below the preset threshold \nlevel. Again, an ADC interrupt is generated when the threshold \ncounter reaches a preset value (ADC0 RCR ). \nFinally, a 32 -bit accumulator (ADC0ACC) function can be \nconfigured (ADCCFG[6:5]) allowing the p rimary ADC to add \n(or subtract) multiple p rimary ADC sample results. User code \ncan read the accumulated value directly (ADC0ACC) without any further software pr ocessing.  \nTEMPERATURE SENSOR  \nThe ADuC7060 /ADuC7061 provides a voltage output from an \non-chip band gap reference propor tional to absolute \ntemperature. This voltage output can also be routed through the \nfront -end auxiliary ADC multiplexer (effectively, an additional  \nADC channel input) , facilitating an internal temperature sensor \nchannel that measures die temperature.  \nThe in ternal temperature sensor is not designed for use as  \nan absolute ambient temperature calculator. It is intended  \nfor use as an approximate indicator of the temperature of  \nthe ADuC7060 /ADuC7061 die.  \nThe typical temperature coefficient is 0.28 mV/°C.  \n07079-034ADC OUTPUT (mV)140\n120\n100\n80\n60\n40\n20\n0\n–60 –40 –20 0 20 40\nTEMPER ATURE (°C)60 80 140 100 120\n \nFigure 16. ADC Output vs. Temperature  ADC MMR INTERFACE \nThe ADCs are controlled and configured through a number of \nMMRs that are described in detail in the following sections.  \nIn response to an ADC interrupt, user code should interrogate \nthe ADCSTA MMR to determine the source of the interrupt. Each ADC interrupt source can be individually masked via the \nADCMSKI MMR described in  Table 41. \nAll primary ADC result ready bits are cleared by a read of the  \nADC0DAT MMR. If the primary channel  ADC is not enabled, \nall ADC result ready bits are cl eared by a read of the ADC1DAT \nMMR. To ensure that p rimary ADC and auxiliary ADC \nconversion data are synchronous, user code should first read \nthe ADC1DAT MMR and then the ADC0DAT MMR. New \nADC conversion results are not written to the ADCxDAT \nMMRs unless the respective ADC result ready bits are first \ncleared. The only exception to this rule is the data conversion \nresult updates when the ARM core is powered down. In this mode, ADCxDAT registers always contain the most recent ADC conversion result even though the ready bits are not  \ncleared.  \nADC Status Register  \nName:  ADCSTA  \nAddress:  0xFFFF0500  \nDefault  value:  0x0000 \nAccess:  Read only  \nFunction:  This read -only register hold s general status \ninformation related to the mode of operation or current status of the  ADuC7060/ ADuC7061  \nADCs.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 43 of 107 Table 40. ADCSTA MMR Bit Designations \nBit Name  Description  \n15 ADCCALSTA  ADC calibration sta tus. \n  This bit is set automatically in hardware to indicate that an ADC calibration cycle has been completed.  \n  This bit is cleared after ADCMDE is written to.  \n14  Not used.  \n  This bit is reserved for future functionality . \n13 ADC1CERR  Auxiliary  ADC conversion er ror. \n  This bit is set automatically in hardware to indicate that an a uxiliary  ADC conversion overrange or underrange has \noccurred. The conversion result is clamped to negative full scale (underrange error) or positive full scale (overrange \nerror) in this case.  \n  This bit is cleared when a valid (in -range) voltage conversion result is written to the ADC1DAT register.  \n12 ADC0CERR  Primary ADC conversion er ror. \n  This bit is set automatically in hardware to indicate that a p rimary ADC conversion overrange or underrange has \noccurred. The conversion result is clamped to negative full scale (underrange error) or positive full scale (overrange \nerror) in this case.  \n  This bit is cleared when a valid (in -range)  conversion result is written to the ADC0DAT register.  \n11:7  Not used. These  bits are reserved for future functionality and should not be monitored by user code.  \n6 ADC0ATHEX  ADC0 accumulator comparator threshold exce eded.  \n  This bit is set when the ADC0 a ccumulator value in ADC0ACC exceed s the threshold value programmed in the ADC0 \ncomparator thre shold register, ADC 0ATH.  \n  This bit is cleared when the value in ADC0A CC does not exceed the value in ADC0ATH . \n5  Not used. This bit is reserved for future functionality and should not be monitored by user code.  \n4 ADC0THEX  Primary channel ADC  comparator thresh old. This bit is valid only if the primary channel ADC comparator is enabled \nvia the ADCCFG MMR.  \n  This bit is set by hardware if the absolute value of the primary ADC conversion result exceeds the value written in the \nADC0TH MMR. If the ADC threshold counter is used (ADC0 RCR ), this bit is set only when the specified number of \nprimary ADC conversions equals the value in the ADC0THV MMR.  \n  Other wise, this bit is cleared.  \n3 ADC0OVR  Primary channel ADC  overrange bit . If the overrange detect function is enabled via the ADCCFG MMR, this bit is set by \nhardware if the primary  ADC input is grossly (>30% approximate) overrange. This bit is updated every 125  µs. After it \nis set, this bit ca n be cleared only by software when ADCCFG[2] is cleared to disable the function, or the ADC gain is \nchanged via the ADC0CON MMR.  \n2  Not used. Th is bit  is reserved for future functionality and should  not be monitored by user code.  \n1 ADC1RDY  Auxiliary  ADC result r eady bit.  \n  If the  auxiliary channel ADC is enabled, this bit is set by hardware as soon as a valid conversion result is written in the \nADC1DAT MMR. It is also set at the end of a calibration sequence.  \n  This bit is cleared by reading ADC1DAT followed by reading ADC0DAT. ADC0DAT must be read to clear this bit, even if \nthe primary ADC is not enabled.  \n0 ADC0RDY  Primary ADC  result rea dy bit.  \n  If the  primary channel ADC is enabled, this bit is set by hardware as soon as a valid conversion result is written in the \nADC0DAT MMR. It is also set at the end of a calibration sequence.  \n  This bit is cleared by reading ADC0DAT.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 44 of 107 ADC Interrupt Mask Register  \nName:  ADCMSKI  \nAddress:  0xFFFF0504  \nDefault value:  0x0000 \nAccess:  Read and write  \nFunction:  This register allows t he ADC interrupt sources to be enabled  individually . The bit positions in this register are the \nsame as the lower eight bits in the ADCSTA MMR. If  a bit is set by user code to 1, the respective interrupt is enabled. \nBy default, all bits are 0, meaning all ADC interrupt sources are disabled.  \nTable 41. ADCMSKI MMR Bit Designations \nBit Name  Description  \n7  Not used. Th is bit is  reserved for future functionality and should not be monitored by user code.  \n6 ADC0ATHEX_INTEN  ADC0 accumulator comparator threshold exceeded interrupt enable bit.  \n  When set to 1, this bit enables an interrupt when the ADC0ATHEX bit in the ADCSTA register is set.  \n  When this bit is cleared, this interrupt source is disabled.  \n5  Not used. Th is bit is reserved for future functionality and should not be monitored by user code.  \n4 ADC0THEX_INTEN  Primary channel ADC  comparator threshold exceeded interrupt enable b it.  \n  When set to 1, this bit enables an interrupt when the ADC0THEX bit in the ADCSTA register is set.  \n  When this bit is cleared, this interrupt source is disabled.  \n3 ADC0OVR_INTEN  When set to 1, this bit enables an interrupt when the ADC0OVR bit in the ADCSTA register is set.  \n  When this bit is cleared, this interrupt source is disabled.  \n2  Not used. Th is bit is reserved for future functionality and should  not be monitored by user code.  \n1 ADC1RDY_INTEN  Auxiliary  ADC result ready b it. \n  When set to 1, this bit enables an interrupt when the ADC1RDY bit in the ADCSTA register is set.  \n  When this bit is cleared, this interrupt source is disabled.  \n0 ADC0RDY_INTEN  Primary ADC  result ready bit.  \n  When set to 1, this bit enables an interrupt when the ADC0RDY bit in the ADCSTA register is set.  \n  When this bit is cleared, this interrupt source is disabled.  \nADC Mode Register  \nName:  ADCMDE  \nAddress:  0xFFFF0508  \nDefault value:  0x03  \nAccess:  Read and  write  \nFunction:  The ADC mode MMR is an 8 -bit register that configures the mode of operation of the ADC subsystem.  \nTable 42. ADCMDE MMR Bit Designations \nBit Name  Description  \n7 ADCCLKSEL  Set this bit to 1 to enable ADCCLK = 512 kHz. This bit should be set for normal ADC operation.  \n  Clear this bit to enable ADCCLK = 131 kHz. This bit should be cleared for low power ADC operation.  \n6  Not used. Th is bit is  reserved for future functionality and should not be monitored by user code.  \n5 ADCLPMEN  Enable  low power mode. This bit has no effect if ADCMDE[4:3]  = 00 (ADC is in normal mode).  \n  This bit must  be set to 1 in  low p ower mode.  \n  Clearing this bit in  low pow er mode result s in erratic ADC results.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 45 of 107 Bit Name  Description  \n4:3 ADCLPMCFG[1:0]  ADC power mode con figuration.  \n  [00] = ADC normal mode. If enabled, the ADC operates with normal current consumption yielding optimum \nelectrical performance.  \n  [01] = ADC low power mode.  \n  [10] = ADC normal mode , same as [0 0]. \n  [11] = ADC low power plus mode  (low pow er mode and  PGA off).  \n2:0 ADCMD[2:0]  ADC operation mode conf iguration.  \n  [000] = ADC power -down mode. All ADC circuits and the  input amp lifier are powered  down.  \n  [001]  = ADC continuous conversion mode. In this mode, any enabled ADC continuously converts at a \nfrequency equal  to f ADC. ADCxRDY must be cleared to enable new data to be written to ADC0DAT/ADC1DAT . \n  [010]  = ADC s ingle conversion mode. In this mode, any enabled ADC performs a single conversion. The ADC \nenters idle mode when the single shot conversion is complete. A single conversion takes two to three ADC clock \ncycles , depending on the chop mode.  \n  [011]  = ADC idl e mode. In this mode, the ADC is fully powered on but is held in reset. The part enter s this mode \nafter calibration.  \n  [100]  = ADC self -offset calibration. In this mode, an offset calibration is performed on any enabled ADC using \nan internally generated 0 V. The calibration is carried out at the user -programmed ADC settings; therefore, as \nwith a normal single ADC conversion, it  takes two to three ADC conversion cycles before a fully settled \ncalibration result is ready. The calibration result is automatically written to the ADCxOF MMR of the respective \nADC. The ADC returns to idle mode , and the calibration and conversion ready st atus bits are set at the end of \nan offset calibration cycle.  \nNote: Always use  ADC 0 for single -ended self -calibration cycles on the primary ADC. Always use  ADC 0/ADC 1 \nwhen self -calibrating for a differential input to the primary ADC.  \n  [101]  = ADC self -gain calibration. In this mode, a gain calibration against an internal reference voltage is \nperformed on all enabled ADCs. A gain calibration is a two -stage process and takes twice the time of an offset \ncalibration. The calibration result is automatically written to the ADCxGN MMR of the respective ADC. The ADC returns to idle mode and the calibration and conversion ready status bits are set at the end of a gain calibration \ncycle. An ADC self- gain calibration should only be carried out on the primary channe l ADC.  \nNote  that self -gain c alibration works only when the g ain = 1; do not use it  when the gain >  1. \n  [110]  = ADC system zero -scale calibration. In this mode, a zero -scale calibration is performed on enabled ADC \nchannels against an external zero -scale voltage driven at the ADC input pins. To do this, short the channel externally.  \n  [111]  = ADC system full-scale calibration. In this mode, a full -scale calibration is performed on enabled ADC \nchannels against an external full -scale voltage driven at the ADC input pins. The ADCxGN register is updated \nafter a full -scale calibration sequence.  \nPrimary ADC Control Register  \nName:  ADC0CON  \nAddress:  0xFFFF050C  \nDefault value:  0x8000 \nAccess:  Read and write  \nFunction:  The primary chann el ADC control MMR is a 16 -bit register.  If the primary ADC is reconfigured via ADC0CON, the \nauxiliary ADC is also reset.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 46 of 107 Table 43. ADC0CON MMR Bit Designations \nBit Name  Description  \n15 ADC0EN  Primary channel ADC e nable.  \n  This bit is set to 1 by user code to enable the primary ADC.  \n  Clearing this bit to 0 powers down the primary ADC and resets the respective ADC ready bit in the ADCSTA MMR \nto 0.  \n14:13 ADC 0DIAG[1:0]  Diagnostic current source enable bi ts. \n  [00] = current sources off.  \n  [01] = enables a 50 μA  current source on the selected positive input (for example,  ADC 0). \n  [10] = enables a 50 μA current source on the selected negative input  (for example , ADC 1). \n  [11] = enables a 50 μA current source on both selected inputs ( for example , ADC 0 and  ADC 1). \n12 HIGHEXTREF0  This bit must be set high if the external reference for ADC0 exceeds 1.35 V.  This results in the reference source \nbeing divided by 2.  \n  Clear this bit when using the internal reference or an external reference of less than 1.35 V.  \n11 AMP_CM  This bit is set to 1 by user to set the PGA output common -mode voltage to AVDD/2.  \n  This bit is cleared to 0 by user code to set the PGA output common-mode voltage to the PGA input common-\nmode voltage level.  \n10 ADC0CODE  Primary channel ADC  output cod ing.  \n  This bit is set to 1 by user code to configure p rimary ADC output coding as unipolar.  \n  This bit is cleared to 0 by user code to configure p rimary ADC output coding as twos complement.  \n9:6 ADC0CH[3:0]  Primary channel ADC input sel ect. Note  that s ingle -ended channels are selected with respect to ADC5. Bias \nADC5 to a minimum level of 0.1 V.  \n  [0000] =  ADC 0/ADC 1 (differential mode).  \n  [0001] =  ADC 0/ADC 5 (single -ended mode).  \n  [0010] =  ADC 1/ADC 5 (single -ended mode).  \n  [0011] = VREF+, VREF−. Note: This is the reference selected by the ADC0REF bits.  \n  [0100] = Not u sed. This bit combination is reserved for future functionality and should not be written. \n  [0101] =  ADC 2/ADC 3 (differential mode).  \n  [0110] =  ADC 2/ADC 5 (single -ended mode).  \n  [0111] =  ADC 3/ADC 5 (single -ended mode).  \n  [1000] = internal short to ADC 1. \n  [1001] = internal short to  ADC 1. \n5:4 ADC0REF[1:0]  Primary channel ADC reference select.  \n  [00] = internal reference selected. In ADC low power mode, the voltage reference selection is controlled by \nADCM DE[5].  \n  [01] = external reference inputs (VREF+, VREF −) selected. Set the HIGHEXTREF0 bit if the reference voltage \nexceeds 1.3  V. \n  [10] = auxiliary external reference inputs (ADC4/EXT_REF2IN+, ADC5/EXT_REF2IN−) selected. Set the \nHIGHEXTREF0 bit if the reference voltage exceeds 1.3 V.  \n  [11] = (AVDD, AGND)  divide -by-two selected.  \n3:0 ADC0PGA[3:0].  Primary channel ADC gain sele ct. Note, nominal primary ADC full -scale input voltage = (VREF/gain).   \n  [0000]  = ADC0 gain of 1. Buffer of negative input is bypassed.  \n  [000 1] = ADC0 gain of 2.  \n  [0010]  = ADC0 gain of 4 (default value). Enables the in-amp.  \n  [0011]  = ADC0 gain of 8.  \n  [0100]  = ADC0 gain of 16.  \n  [0101]  = ADC0 gain of 32.  \n  [0110]  = ADC0 gain of 64 (maximum PG A gain setting).  \n  [0111]  = ADC0 gain of 128 (extra gain implemented digitally).  \n  [1000]  = ADC0 gain of 256. \n  [1001]  = ADC0 gain of 512. \n  [1XXX ] = ADC0 gain is undefined.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 47 of 107 Auxiliary ADC Control Register  \nName:  ADC1CON  \nAddress:  0xFFFF0510  \nDefault value:  0x0000 \nAccess:  Read and write  \nFunction:  The auxiliary ADC control MMR is a 16- bit register.  \n \nTable 44. ADC1CON MMR Bit Designations \nBit Name  Description  \n15 ADC1EN  Auxiliary channel ADC e nable.  \n  This bit is set to 1 by user code to enable the a uxiliary  ADC.  \n  Clearing this bit to 0 powers down the auxiliary  ADC.  \n14:13 ADC1DIAG [1:0]  Diagnostic current source enable bi ts. This is the same current so urce as that used on ADC0DIAG[1:0] . The \nADCs cannot enable the diagnostic current sources at the same time.  \n  [00] = current sources off.  \n  [01] = enables a 50 μA current so urce on selected positive input  (for example , ADC 2). \n  [10] = enables a 50 μ A current so urce on selected negative input  (for example,  ADC 3). \n  [11] = enables a 50 μ A current  source on both selected inputs  (for example , ADC 2 and  ADC 3). \n12 HIGHEXTREF1  This bit must be set high if  the external re ference for ADC 1 exceeds 1.35 V. This results in the reference \nsource being divided by 2.  \n  Clear this bit when using the internal reference or an external reference of less than 1.35 V.  \n11 ADC1CODE Auxiliary channel ADC  output co ding.  \n  This bit is set to 1 by user code to configure a uxiliary  ADC output coding as unipolar.  \n  This bit is cleared to 0 by user code to configure a uxiliary  ADC output coding as twos complement.  \n10:7 ADC1CH[3:0]  Auxiliary channel ADC input selec t. Note: Single -ended channels are selected with respect to  ADC 5. Bias  \nADC 5 to a minimum level of 0.1  V. \n  [0000] =  ADC 2/ADC 3 (differential mode).  \n  [0001] =  ADC 4/ADC 5 (differential mode).  \n  [0010] =  ADC 6/ADC 7 (differential mode).  \n  [0011] =  ADC 8/ADC 9 (differential mode).  \n  [0100] =  ADC 2/ADC 5 (single -end ed mode).  \n  [0101] =  ADC 3/ADC 5 (single -end ed mode).  \n  [0110] =  ADC 4/ADC 5 (single -end ed mode).  \n  [0111] =  ADC 6/ADC 5 (single -end ed mode).  \n  [1000] =  ADC 7/ADC 5 (single -ended mode).  \n  [1001] =  ADC 8/ADC 5 (single -ended mode).  \n  [1010] =  ADC 9/ADC 5 (single -ende d mode).  \n  [1011] = i nternal temp erature  sensor+/internal temp erature  sensor −. \n  [1100] = VREF+, VREF− . Note: This is the reference selected by the ADC1REF bits . \n  [1101] = DAC_OUT/AGND.  \n  [1110] = undefined.  \n  [1111] = i nternal short to ADC 3.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 48 of 107 Bit Name  Description  \n6:4 ADC1REF[2:0]  Auxiliary channel ADC reference sel ect. \n  [000] = internal reference selected. In ADC low power mode, the voltage reference selection is controlled by \nADCMODE[5].  \n  [001] = external reference inputs (VREF+, VREF −) selected. Set the HIGHEXTREF1 bit if reference voltage \nexceeds 1.3  V. \n  [010] = a uxiliary external reference inputs (ADC 4/EXT_REF2IN+ , ADC 5/EXT_REF2IN −) selected. S et the \nHIGHEXTREF1 bit if reference voltage exceeds  1.35 V. \n  [011] = (AVDD, AGND) divi de-by-2 selected. If this configuration is selected, the HIGHEXTREF1 bit is set \nautomatically.  \n  [100] = (AVDD, ADC 3). ADC 3 can be used as the negative input terminal for the reference source.  \n  [101] to [111] = reserved.  \n3:2 BUF_BYPASS[1:0]  Buffer bypass.  \n  [00] = full buffer on. Both positive and negative buffer inputs active.  \n  [01] = negative buffer is bypassed, positive buffer is on.  \n  [10] = negative bu ffer is on, positive buffer is bypassed.  \n  [11] = full buffer by pass. Both positive and negative b uffer inputs are off.  \n1:0  Digital gain. Select for a uxiliary ADC  inputs . \n  [00] = ADC1 gain = 1. \n  [01] = ADC1 gain =  2. \n  [10] = ADC1 gain =  4. \n  [11] = A DC1 gain =  8. \nADC Filter Register  \nName:  ADCFLT  \nAddress:  0xFFFF0514  \nDefault value:  0x0007 \nAccess:  Read and write  \nFunction:  The ADC f ilter MMR is a 16- bit register that controls the speed and resolution of both the on -chip ADCs. Note that , if \nADCFLT is modified, the primary and auxiliary ADCs ar e reset.  When changing conversions speeds, put the ADC \ninto idle mode before restarting.  \nTable 45. ADCFLT MMR Bit Designations \nBit Name  Description  \n15 CHOPEN  Chop enable. Set by user  to enable system chopping of all active ADCs. When this bit is set, the ADC has very low offset \nerrors and drift, but the ADC output rate is reduced by a factor of 3  if AF = 0 (see s inc3 decimation factor, Bits[6:0] in this \ntable). If AF > 0, then the ADC  output update rate is the same with chop on or off. When chop is enabled, the settling time \nis two output periods.  \n14 RAVG2  Running average -by-2 enable bi t. \n  Set by user  to enable a running -average -by-2 function, reducing ADC noise. This function is automatically enabled when \nchopping is active. It is an optional feature when chopping is inactive, and if enabled (when chopping is inactive) , does \nnot reduce the ADC output rate but does increase the settling time by  one conversion period.  \n  Cleared by user  to disable the running average function.  \n13:8 AF[5:0]  Averaging factor (AF). The values written to these bits are used to implement a programmable first -order sinc3 post filter . \nThe averaging factor can further reduce ADC noise at the expense of output rate as described in Bits[6:0] ( sinc3 \ndecimation factor ) in this table.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 49 of 107 Bit Name  Description  \n7 NOTCH2  Sinc3 modify. Set by user  to modify the standard sinc3 frequency response to increase the filter stop -band rejection by \napproximately 5 dB. This is achieved by inserting a second notch (NOTCH2) at  \nfNOTCH2  = 1.333 ×  fNOTCH  \nwhere fNOTCH  is the location of the first notch in the response.  \n6:0 SF[6:0]  Sinc3 decimation fac tor (SF) .1 The value (SF) written in these bits controls the oversampling (decimation factor) of the \nsinc3 filter. The output rate from the sinc3 filter is given by  \nfADC = (512,000/([ SF + 1] × 64)) Hz2  \nwhen the chop bit (Bit 15, chop enable) = 0 and the averaging factor (AF) = 0. T his is valid for all SF values ≤ 125.  \n  For SF = 126, f ADC is forced to 60 Hz.  \n  For SF = 127, f ADC is forced to 50 Hz.  \n  For information on calculating the f ADC for SF (other than 126 and 127) and AF values, refer to Table 46. \n \n1 Due to limitations on the digital filter internal data path, there are some limitations on  the combinations of the sinc3 decimation factor (SF) and averaging factor (AF) \nthat can be used to generate a required ADC output rate. This restriction limits the minimum ADC update in normal power mode to 4 Hz or 1 Hz in lower power mode.  \n2 In low power  mode, the ADC is driven directly by the low power oscillator (131 kHz) and not 512 kHz. All f ADC calculations should be divided by 4 (approximately).  \n \nTable 46. ADC Conversion Rates and Settling Times  \nChop \nEnabled  Averaging Factor  Running  \nAverage  f\nADC Normal Mode  fADC Low  Power Mode  tSETTLING1 \nNo No No \n64]1 [000,512\n×+SF \n64]1 [072,131\n×+SF ADCf3 \nNo No Yes \n64]1 [000,512\n×+SF \n64]1 [072,131\n×+SF ADCf4 \nNo Yes No \n] 3[ 64]1 [000,512\nAF SF +××+ \n] 3[64]1 [072,131\nAF SF +××+ \nADCf1 \nNo Yes Yes \n] 3[ 64]1 [000,512\nAF SF +××+ \n] 3[64]1 [072,131\nAF SF +××+ \nADCf2 \nYes N/A  N/A  \n3] 3[64]1 [000,512\n++××+ AF SF \n3] 3[64]1 [072,131\n++××+ AF SF \nADCf2 \n \n1 An additional time of approximately 60 µs per ADC is required before the first ADC is available.  \nTable 47. Allowable Combinations of SF and AF \n AF Range  \nSF 0 1 to 7  8 to 63  \n0 to 31 Yes Yes Yes \n32 to 63  Yes Yes No \n64 to 127  Yes No No \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 50 of 107 ADC Configuration Register  \nName:  ADCCFG  \nAddress:  0xFFFF0518  \nDefault value:  0x00 \nAccess:  Read and write  \nFunction:  The 8 -bit ADC c onfiguration MMR controls extended functionality related to the on- chip ADCs.  \nTable 48. ADCCFG MMR Bit Designations \nBit Name  Description  \n7 GNDSW_EN  Analog ground switch enable.   \n  This bit is set to 1 by user software to connect the external GND_SW pin to an internal analog ground \nreference point. This bit can be used to connect and disconnect external circuits and components to ground \nunder program control and thereby minimize dc current consu mption when the external circuit or \ncomponent is not being used. This bit is used in conjunction with ADCCFG[1] to select a 20 kΩ resistor to ground.  \n  When this bit is cleared, the analog ground switch is disconnected from the external pin.  \n6:5 ADC0ACCEN[1:0]  Primary channel (32 -bit) accumulator en able.  \n [00] = a ccumulator disabled and reset to 0. The accumulator must be dis abled for a full ADC conversion \n(ADCSTA[0] set twice) before the accumulator can be re -enabled to ensure that the accumulator is reset.  \n [01] = a ccumulator active.  Positive current values are added to the accumulator total; the accumulator can \noverflow if allowed to run for >65,535 conversions.  Negative current values are subtracted from the \naccumulator total; the accumulator is clamped to a minimum value of 0.  \n [10] = a ccumulator active. Same as [01] except that there is no clamp.  Positive current values are added to the \naccumulator total; the accumulator can overflow if allowed to run for >65,535 conversions.  The absolute \nvalues of negative current are subtracted from the accumulator total; the accumulator in this mode continues \nto accumulate negatively, below 0.  \n [11] = accumulator  and  comparator active. This causes an ADC0 interrupt if ADCMSK I[6] is set.  \n4:3 ADC0CMPEN[1:0]  Primary ADC comparator enable bit s. \n  [00] = comparator disabl ed. \n  [01] = comparator active. Interrupt asserted if absolute value of ADC0 conversion result |I| ≥ ADC0TH .  \n  [10] = c omparator count mode active. Interrupt asserted if absolute value of ADC0 conversion result |I| ≥ \nADC0TH  for the number of ADC0THC  conversions. A conversion value |I| < ADC0TH  resets the threshold \ncounter value ( ADC0THV ) to 0.  \n  [11] = comparator count mode active, interrupt asserted if absolute value of ADC0 conversion result |I| ≥ ADC0TH  for the number of ADC0THC  conversions. A conversion value |I| < ADC0TH  decrements the threshold \ncounter value ( ADC0THV ) toward  0. \n2 ADC0OREN  ADC0 overrange en able.  \n  Set by the user to enable a coarse comparator on the primary channel ADC. If the reading is grossly (>30% \napproximate) overrange for the active gain setting, the overrange  bit in the ADCSTA MMR is set. The ADC \nreading must be outside this range for greater than 125 µs for the flag to be set.  \n  Do not use this feature in ADC low power mode.  \n1 GNDSW_RES_EN  Set to 1 to enable  a 20 kΩ resistor in series with the ground switch.  \n  Clear this bit to disable this resistor.  \n0 ADCRCEN  ADC result counter enab le. \n  Set by user to enable the result count mode. ADC interrupts occur if ADC 0RCR = ADC 0RCV.  \n  Cleared to disable the result counter. ADC interrupts occur after every conversion.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 51 of 107 Primary Channel ADC Data Register  \nName:  ADC0DAT  \nAddress:  0xFFFF051C  \nDefault value:  0x00000000 \nAccess:  Read only  \nFunction:  This ADC data MMR holds the 24- bit \nconversion result from the p rimary ADC. The \nADC does not update this MMR if the ADC0 \nconversion result ready bit (ADCSTA[0]) is set. A read of this MMR by the MCU clears \nall asserted ready flags (ADCSTA[ 1:0]). \nTable 49. ADC0DAT MMR Bit Designations \nBit Description  \n23:0 ADC0 24 -bit conversion result . \nAuxiliary Channel ADC Data Register  \nName:  ADC1DAT  \nAddress:  0xFFFF0520  \nDefault value:  0x00000000 \nAccess:  Read only  \nFunction:  This ADC data MMR holds the 24- bit \nconversion result from the auxiliary ADC. \nThe ADC does not update this MMR if the \nADC0 conversion result ready bit \n(ADCSTA[1]) is set.  \nTable 50. ADC1DAT MMR Bit Designations \nBit Description  \n23:0 ADC1 24-bit conversion result . Primary Channel ADC Offset Calibration Register  \nName:  ADC0OF  \nAddress:  0xFFFF0524  \nDefault value:  Part specific, factory programmed  \nAccess:  Read and write   \nFunction:  This ADC o ffset MMR holds a 16 -bit offset \ncalibration coefficient for the p rimary ADC. \nThe register is configured at power -on with a \nfactory default value. However, this register \nautomatically overwrites if an offset calibration of the  primary ADC is initiated by \nthe user via bits in the AD CMDE MMR. User \ncode can write to this calibration register only if the ADC is in idle mode. An ADC must be enabled and in idle mode before being written to any offset or gain register. The \nADC must be in idle mode for at least 23 µs.  \nTable 51. ADC0OF MMR Bit Designations \nBit Description  \n15:0 ADC0 16-bit offset calibration value . \nAuxiliary Channel ADC Offset Calibration Register  \nName:  ADC1OF  \nAddress:  0xFFFF0528  \nDefault value:  Part specific, factory programmed  \nAccess:  Read and write   \nFunction:  This offset MMR holds a 16 -bit offset \ncalibration coefficient for the auxiliary \nchannel. The register is configured at power -\non with a factory default value. However, this \nregister is automatically overwritten if an \noffse t calibration of the auxiliary channel is \ninitiated by the user via bits in the ADCMDE \nMMR. User code can write to this calibration \nregister only if the ADC is in idle mode. An \nADC must be enabled and in idle mode \nbefore being written to any offset or gain  \nregister. The ADC must be in idle mode for \nat least 23 µs.  \nTable 52. ADC1OF MMR Bit Designations \nBit Description  \n15:0 ADC1 16-bit offset calibration value.  \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 52 of 107 Primary Channel ADC Gain Calibration Register  \nName:  ADC0GN  \nAddress:  0xFFFF052C  \nDefault value:  Part specific, factory programmed   \nAccess:  Read and write  \nFunction:  This gain MMR holds a 16 -bit gain  \ncalibration coefficient for scaling the p rimary \nADC conversion result. The register is \nconfigured at power -on with a factory default \nvalue. However, this register is automatically \noverwritten if a gain calibration of the \nprimary ADC  is initiated by the user via bits \nin the ADCMDE MMR. User code can write \nto this calibration register only if the ADC is \nin idle mode. An ADC must be enabled and in idle mode before being written to any offset or gain register. The ADC must be in \nidle mode for at least 23 μs.  \nTable 53. ADC0GN MMR Bit Des ignations \nBits Description  \n15:0 ADC0 16 -bit calibration gain value.  \nAuxiliary Channel Gain Calibration Register  \nName:  ADC1GN  \nAddress:  0xFFFF0530  \nDefault value:  Part specific, factory programmed    \nAccess:  Read and write  \nFunction:  This gain MMR holds a  16-bit gain calibra -\ntion coefficient for scaling an a uxiliary channel \nconversion result. The register is configured \nat power -on with a factory default value. \nHowever, this register is automatically over -\nwritten if a gain calibration of the a uxiliary \nchannel is initiated by the user via bits in the \nADCMDE MMR. User code can write to this \ncalibration register only if the ADC is in idle \nmode. An ADC must be enabled and in idle \nmode before being written to any offset or gain register. The ADC must be in idle mode for at \nleast 23 µs.  \nTable 54. ADC1GN  MMR Bit Designations \nBits Description  \n15:0 ADC1 16-bit gain calibration va lue. \n Primary Channel ADC Result Counter Limit Register  \nName:  ADC0 RCR  \nAddress:  0xFFFF0534  \nDefault value:  0x0001 \nAccess:  Read and write  \nFunction:  This 16 -bit MMR sets the number of \nconversions required before an ADC interrupt is generated. By default,  this \nregister is set to 0x01. The ADC counter function must be enabled via the AD C result \ncounter enable bit in the ADCCFG MMR.  \nTable 55. ADC0RCR MMR Bit Designations  \nBits Description  \n15:0 ADC0 result counter limit/reload re gister.  \nPrimary Channel ADC Result Count er Register  \nName:  ADC0 RCV  \nAddress:  0xFFFF0538  \nDefault value:  0x0000 \nAccess:  Read only  \nFunction:  This 16 -bit, read -only MMR holds the \ncurrent number of primary ADC conversion \nresults. It is used in conjunction with \nADC0RCR to mask  primary channel ADC \ninterrupts, generating a lower interrupt rate. When ADC0RCV = ADC0RCR, the value in \nADC0RCV resets to 0 and recommences counting. It can also be used in conjunction \nwith the accumulator (ADC0ACC) to allow \nan average calculation to be taken. The \nresult counter is enabled via ADCCFG[0]. \nThis MMR is also r eset to 0 when the \nprimary  ADC is reconfigured, that is, when \nthe ADC0CON or ADCMDE is  written.  \nTable 56. ADC 0RCV MMR Bit Designations \nBits Description  \n15:0 ADC0  result co unter register.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 53 of 107 Primary Channel ADC Threshold Register  \nName:  ADC0TH  \nAddress:  0xFFFF053C  \nDefault value:  0x0000 \nAccess:  Read and write  \nFunction:  This 16 -bit MMR sets the threshold against \nwhich the absolute value of the  primary ADC \nconversion result is compared. In u nipolar \nmode , ADC0TH[15:0] are compared, and in \ntwos complement mode, ADC0TH[14:0] are \ncompared.  \nTable 57. ADC0TH  MMR Bit Designations \nBit Description  \n15:0 ADC0 16 -bit comparator threshold register.  \nPrimary Channel ADC Threshold Count er Limit Register  \nName:  ADC0THC   \nAddress:  0xFFFF0540  \nDefault value:  0x0001   \nAccess:  Read and write  \nFunction:  This 8 -bit MMR determines how many \ncumulative (values below the threshold \ndecr ement or reset the count to 0) p rimary  \nADC conversion result readings above ADC0TH must occur before the p rimary  \nADC comparator threshold bit is set in the ADCSTA MMR , generating an ADC \ninterrupt. The primary  ADC comparator \nthreshold bit is asserted as soon as \nADC0THV = ADC0 RCR . \nTable 58. ADC 0THC MMR Bit Designations \nBit Description  \n15:8 Reserved . \n7:0 ADC0 8-bit threshold count er limit register.   Primary Channel ADC Threshold C ount er Register  \nName:  ADC0 THV  \nAddress:  0xFFFF0544  \nDefault value:  0x0000  \nAccess:  Read only  \nFunction:  This 8 -bit MMR is incremented every time \nthe absolute value of a p rimary  ADC \nconversion result |Result| ≥ ADC0TH. This \nregister is decremented or reset to 0 every \ntime the absolute value of a p rimary  ADC \nconversion result |Result| < ADC0TH.  The \nconfiguration of this function is enabled via the primary channel ADC comparator bits in \nthe ADCCFG MMR.  \nTable 59. ADC0THV  MMR Bit Designations \nBit Description  \n7:0 ADC0 8-bit threshold exceeded c ounter register .   \nPrimary Channel ADC Accumulator Register  \nName:  ADC0ACC  \nAddress:  0xFFFF0548  \nDefault  value:  0x00000000 \nAccess:  Read only  \nFunction:  This 32 -bit MMR holds the p rimary  ADC \naccumulator value. The p rimary  ADC ready bit \nin the ADCSTA MMR should be used to determine wh en it is safe to read this MMR. \nThe MMR value is reset to 0 by disabling the \naccumulator in the ADCCFG MMR or by \nreconfiguring the  primary c hannel ADC.  \nTable 60. ADC0ACC MMR Bit Designations \nBit Description  \n31:0 ADC0 32-bit  accumulator register.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 54 of 107 Primary Channel ADC Comparator Threshold Register  \nName:  ADC 0ATH  \nAddress:  0xFFFF054C  \nDefault  value:  0x00000000 \nAccess:  Read and write  \nFunction:  This 32 -bit MMR holds the t hreshold value for \nthe accumulator comparator  of the primary \nchannel . When the a ccumulator value in \nADC0ACC exceeds the value in ADC0ATH, \nthe ADC0ATHEX bit in ADCSTA is set. This \ncause s an interrupt if the corresponding bit in \nADCMSKI is also enabled.  Table 61. ADC0ATH MMR B it Designations \nBit Description  \n31:0 ADC0 32-bit comparator threshold register of the \naccumulator.   \n \nINTERRUPT\n(ADC0OVR)\n16\n|ABSVAL|\nINTERRUPT\n(ADC0RDY)(READABLE)\nCLEAR(READABLE)\n32\nOPTION: UP/RESETINTERRUPT\n(ADC0ATHEX)\nINTERRUPT\n(ADC0THEX)ADC0ATH≥\n≥ADC0ACC\nACCUMULATORfADC\nADC0THC≥ ≥\nADC0THADC0THV\nUP/DOWNADC0RCV\nCOUNTER\nADC0RCR\n(DEFAULT = 1)fADCfADCfADCPRIMARY\nADCADC0\nADC1FAST\nOVERRANGE\n07079-011 \nFigure 17. Primary ADC Accumulator/Comparator/Counter Block Diagram  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 55 of 107 Excitation Current Sources Control Register  \nName:  IEXCON  \nAddress:  0xFFFF0570  \nDefault value:  0x00 \nAccess:  Read and write  \nFunction:  This 8 -bit MMR controls the two excitation curr ent sources, IEXC0 and IEXC1.  \nTable 62. IEXCON MMR Bit Designations \nBit Name  Description  \n7 IEXC1_EN  Enable bit for IEXC1 current source.  \n  Set this bit to  1 to enable Excitation Current Source 1.  \n  Clear this bit to disable Excitation Current Source 1.  \n6 IEXC0_EN  Enable bit for IEXC0 current source.  \n  Set this bit to  1 to enable Excitation Current Source  0.  \n  Clear this bit to disable Excitation Current Source 0.  \n5 IEXC1_DIR  Set this bit to  1 to direct Excitation Current Source 1 to the IEXC 0 pin. \n  Set this bit to  0 to direct Excitation Current Source 1 to the IEXC1 pin.  \n4 IEXC0_DIR  Set this bit to  1 to direct Excitation Current Source 0 to the IEXC 1 pin. \n  Set this bit to  0 to direct Excitation Current Source 0 to the IEXC0 pin.  \n3:1 IOUT[3:1]  These bits control  the e xcitation current level for each source.  \n  IOUT[3:1] = 000, excitation current = 0 μA + (IOUT[0] × 10 μA).  \n  IOUT[3:1] = 001, excitation current = 200 μA + (IOUT[0] × 10 μA).  \n  IOUT[3:1] = 010, excitation current = 400 μA  + (IOUT[0] × 10 μA).  \n  IOUT[3:1] = 011, excitation current = 600 μA  + (IOUT[0] × 10 μA).  \n  IOUT[3:1] = 100, excitation current = 800 μA  + (IOUT[0] × 10 μA).  \n  IOUT[3:1] = 101, excitation current = 1 mA + (IOUT[0] × 10 μA).  \n  All other values are undefined.  \n0 IOUT[0]  Set this bit to  1 to enable 10 μA diagnostic current source . \n  Clear this bit to  0 to disable 10 μA diagnostic current source.  \nEXAMPLE APPLICATION C IRCUITS  \nFigure 18 shows a simple bridge sensor interface to the \nADuC7060/ ADuC7061,  including the RC filters on the analog \ninput channels. Notice that the sense lines from the bridge \n(connecting to the reference inputs) are wired separately from \nthe excitation li nes (going to D VDD /AVDD and ground). This \nresults in a total of  six wires going to the bridge.  This 6-wire \nconnection scheme is a feature of most off -the-shelf bridge \ntransducers (such as load cells) that helps to minimize errors \nthat would otherwise resul t from wire impedances.   \nIn Figure 19, the AD592 is an external temperature sensor u sed to \nmeasure the thermocouple  cold junction , and its output is con -\nnected to the auxiliary channel. The A DR280 is an external 1.2  V \nreference part —alternatively, the internal reference can be used. \nHere, the thermocouple is connected to the primary ADC as  \na differential input to  ADC0 /ADC 1. Note the resistor between \nVREF + and  ADC1 to bias the ADC inputs above 100  m V. \nFigure 20 shows a simple 4 -wire RTD interface circuit. As with \nthe bridge transducer implementati on in Figure 18, if a power \nsupply and a serial connection to the outside world are added, \nFigure 20 represents a complete system.  \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 56 of 107 +2.5VADuC7060/\nADuC7061\nADC0SPI\nI2C\nUART\nGPIOADC1\n07079-012VREF+\nAGND/DGNDAVDD/DVDD\nVREF–\n \nFigure 18. Bridge Interface Circuit  \n+2.5V\nADC0ADuC7060/\nADuC7061\nADC1\nSPI\nI2C\nUART\nGPIOADC4 AD592\nADR280\n07079-013VREF+\nAGND/DGNDAVDD/DVDD\nVREF–\n \nFigure 19. Example of a Thermocouple Interface Circuit  +2.5V\nIEXC1ADuC7060/\nADuC7061\nAGND/DGNDADC0\nSPI\nI2C\nUART\nGPIOADC1AVDD/DVDD\nRTD\nVREF–\n07079-014VREF+\n \nFigure 20. Example of an RTD Interface Circuit  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 57 of 107 DAC PERIPHERALS  \nDAC  \nThe ADuC7060 /ADuC7061 incorporate s a voltage output DAC \non chip. In normal mode, t he DAC resolution is 12 -bits. In \ninterpolation, the DAC resolution is 16 bits with 14 effective \nbits. The DAC has a rail -to-rail voltage output buffer capable of \ndriving 5  kΩ/100 pF.  \nThe DAC has four selectable ranges.  \n• 0 V to V REF (internal band gap 1.2 V reference)  \n• VREF − to VREF+  \n• ADC5/EXT_REF2IN−  to ADC4/EXT_REF2IN+   \n• 0 V to AVDD   \nThe maximum signal range is 0 V to AVDD.  Op Amp Mode  \nAs an option, the DAC  can be disabled and it s output buffer \nused as an op amp . \nMMR INTERFACE  \nThe DAC is configurable through a control register and a data \nregister.  \nDAC0CON Register  \nName:  DAC0CON  \nAddress:  0xFFFF0600  \nDefault  value:  0x0200 \nAccess:  Read and write  \nTable 63. DAC0CON MMR Bit Designations \nBit Name  Description  \n15:10  Reserved.  \n9 DACPD  Set to 1 to power down DAC output (DAC output is tristated).  \n  Clear this bit to enable the  DAC.  \n8 DACBUFLP  Set to 1 to place the DAC output buffer in low power mode. See the Normal DAC Mode  and Op Amp Mode  \nsections for further details on electrical specifications.  \n  Clear t his bit to enable the DAC buffer.  \n7 OPAMP  Set to 1 to place the DAC output buffer in op amp mode.  \n  Clear this bit to enable the DAC output buffer for normal DAC operation.  \n6 DACBUFBYPASS Set to 1 to bypass the output buffer and send the DAC output directly to the output pin.  \n  Clear this bit to buffer the DAC output.  \n5 DACCLK  Cleared  to 0 to update the DAC on the negative edge of HCLK.  \n  Set to 1 to update the DA C on the negative edge of Timer0 . This mode is ideally suited for waveform generation  \nwhere the next value in the waveform is written to DAC0DA T at regular intervals of Timer0 . \n4 DACCLR  Set to 1 for normal DAC operation.  \n  Set to 0 to clear the DAC output and to set DAC0DAT to 0. Writing to this bit has an immediate effect on the DAC \noutput.  \n3 DACMODE  Set to 1 to enable the DAC in 16- bit interpolation mode.  \n  Set to 0 to enable the DAC in normal 12 -bit mode.  \n2 Rate  Used with interpolation mode.  \n  Set to 1 to configure the interpolation clock as UCLK/16.  \n  Set to 0 to configure the interpolation clock as UCLK/32.  \n1:0 DAC range bits  [11] = 0 V to AVDD range.  \n  [10] = ADC5/EXT_REF2IN − to ADC4/EXT_REF2IN+.  \n  [01] = VREF − to VREF+.  \n  [00] = 0 V to V REF (1.2 V) range. Internal reference source.  \nADuC7060/ADuC7061 Data Sheet\n \nRev. F | Page 58 of 107 DAC0DAT Register \nName: DAC0DAT \nAddress: 0xFFFF0604 Default value: 0x00000000 Access: Read and write Function: This 32-bit MMR contains the DAC output \nvalue.  \nTable 64. DAC0DAT MMR Bit Designations \nBit Description \n31:28 Reserved. \n27:16 12-bit data for DAC0. \n15:12 Extra four bits used in interpolation mode. \n11:0 Reserved. \nUSING THE DAC \nThe on-chip DAC architecture cons ists of a resistor string DAC \nfollowed by an output buffer amplifier.  \nThe reference source for the DAC is user selectable in software. It \ncan be AVDD, VREF±, or ADCx/EXT_REF2IN±.  \n\uf0b7 In 0-to-AVDD mode, the DAC output transfer function \nspans from 0 V to the voltage at the AVDD pin.  \n\uf0b7 In VREF± and ADCx/EXT_REF2IN± modes, the DAC \noutput transfer function spans from negative input voltage \nto the voltage positive input pin. Note that these voltages must never go below 0 V or above AVDD.  \n\uf0b7 In 0-to-V\nREF mode, the DAC output transfer function spans \nfrom 0 V to the internal 1.2 V reference, V REF. \nThe DAC can be configured in three different user modes: normal mode, DAC interpolation mode, and op amp mode. \nNormal DAC Mode \nIn this mode of operation, the DAC is configured as a 12-bit \nvoltage output DAC. By default, the DAC buffer is enabled, but \nthe output buffer can be disabled. If the DAC output buffer is \ndisabled, the DAC is capable of driving a capacitive load of only \n20 pF. The DAC buffer is disabled by setting the DACBUFBYPASS \nbit in DAC0CON.  \nThe DAC output buffer amplifier features a true, rail-to-rail \noutput stage implementation. This means that when unloaded, each output is capable of swinging to within less than 5 mV of both AVDD and ground. Moreover, the linearity specification of \nthe DAC (when driving a 5 kΩ resistive load to ground) is guar-\nanteed through the full transfer function except for Code 0  to Code 100 and, in 0-to- AVDD mode only, Code 3995 to Code 4095. Linearity degradation near ground and AVDD is caused by saturation of the output amplifier, and a general representation of its effects (neglecting offset and gain error) is illustrated in Figure 21. The dotted line in Figure 21 indicates the \nideal transfer function, and the solid line represents what the \ntransfer function may look like with endpoint nonlinearities due to saturation of the output amplifier. Note that Figure 21 repre-sents a transfer function in 0-to-AVDD mode only. In 0-to-V\nREF \nor, VREF±, and ADCx/EXT_REF2IN± modes (with V REF < AVDD \nor ADCx/EXT_REF2IN± < AVDD), the lower nonlinearity is similar. However, the upper portion of the transfer function follows the ideal line all the way to the end (V\nREF in this case, not \nAVDD), showing no signs of endpoint linearity errors. \nAVDD\nAVDD – 100mV\n100mV\n0x00000000 0x0FFF0000\n07079-015 \nFigure 21. Endpoint Nonlineariti es Due to Amplifier Saturation \nThe endpoint nonlinearities conceptually illustrated in Figure 21 worsen as a function of output loading. Most of the \nADuC7060/ ADuC7061  data sheet specifications in normal \nmode assume a 5 kΩ resistive load to ground at the DAC \noutput. As the output is forced to source or sink more current, the nonlinear regions at the top or bottom (respectively) of Figure 21 become larger. With larger current demands, this can significantly limit output voltage swing. \nDAC Interpolation Mode \nIn interpolation mode, a higher DAC output resolution of 16 bits  \nis achieved with a longer update rate than normal mode. The \nupdate rate is controlled by the interpolation clock rate selected in the DAC0CON register. In this mode, an external RC filter is required to create a constant voltage. \nOp Amp Mode \nIn op amp mode, the DAC output buffer is used as an op amp with the DAC itself disabled. \nADC6 is the positive input to the op amp, ADC7 is the negative \ninput, and ADC8 is the output. In this mode, the DAC should \nbe powered down by setting Bit 9 of DAC0CON. \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 59 of 107 NONVOLATILE FLASH/EE MEMORY  \nThe ADuC7060 /ADuC7061 incorporate s Flash/EE memory \ntechnology on  chip to provide the user with nonvolatile, in -circuit \nreprogram mable  memory space.  \nLike EEPROM, flash memory can be programmed in -system  \nat a byte level, although it must first be erased. The erase is \nperformed in page blocks. As a result, flash memory is often  \nand, more correctly , referred to as Flash/EE memory.  \nOverall, Flash/EE memory represents a step closer to the  \nideal memory device that includes nonvolatility, in -circuit \nprogrammability, high density, and  low cost. Incorporated in \nthe ADuC7060 /ADuC7061, Flash/EE memory technology \nallows the user to update program code sp ace in -circuit, \nwithout the need to replace one time programmable (OTP) \ndevices at remote operating nodes.  \nThe ADuC7060 /ADuC7061 contain s a 32 kB array of Flash/EE \nmemory. The lower 30 kB are available to the user and the \nupper 2 kB contain permanently embedded firmware, allowing in-circuit serial download. These 2 kB of embedded firmware \nalso contain a power -on configuration routine that downloads \nfactory -calibrated coefficients to the various calibrated \nperipherals (such as ADC, temperature sensor, and band gap references). This 2 kB embedded firmware is hi dden from user \ncode.  \nFLASH/EE MEMORY RELI ABILITY  \nThe Flash/EE memory arrays on the parts are fully qualified for \ntwo key Flash/EE memory characteristics: Flash/EE memory \ncycling endurance and Flash/EE memory data retention.  \nEndurance quantifies the ability  of the Flash/EE memory to be \ncycled through many program, read, and erase cycles. A single \nendurance cycle is composed of four independent , sequential \nevents, defined as  \n• Initial page erase sequence  \n• Read/ve rify sequence for a single Flash/EE  \n• Byte program s equence memory  \n• Second read/ verify sequence endurance cycle  \nIn reliability qualification, every half word (16 -bit wide) \nlocation of the three pages (top, middle, and bottom) in the \nFlash/EE memory is cycled 10,000 times from 0x0000 to \n0xFFFF. The Flash/EE memory endurance qualification is carried out in accordance with JEDEC Retention Lifetime \nSpecification A117  over the industrial temperature range of \n−40° C to +125°C. The results allow the specification of a \nminimum endurance figure over a supply temperature of  \n10,000 cycles.  Retention quantifies the ability of t he Flash/EE memory to \nretain its programmed data over time. Again, the parts are \nqualified in accordance with the formal JEDEC Re tention \nLifetime Specification A117  at a specific junction temperature  \n(T\nJ = 85°C). As part of this qualification procedure, t he Flash/ \nEE memory is cycled to its specified endurance limit, described \npreviously, before data retention is characterized. This means \nthat the Flash/EE memory is guaranteed to retain its data for its fully specified retention lifetime every time that the Flash/EE \nmemory is reprogrammed. Also note that retention lifetime, based on activation energy of 0.6 eV , derates with T\nJ, as shown \nin Figure 22. \n150300450600\n30 40 55 70 85 100 125 135 150RETENTION (Years)\n0\nJUNCTION TEMPERATURE (°C)\n07079-016 \nFigure 22. Flash/EE Memory Data Retention  \nPROGRAMMING  \nThe 30 kB of Flash/EE memory can be programmed in -circuit, \nusing the serial download mode or the provided JTA G mode.  \nSerial Downloading (In -Circuit Programming)  \nThe ADuC7060 /ADuC7061 facilitate s code download via the \nstandard U ART serial port. The parts enter serial download \nmode after a reset or power cycle if the NTRST/ BM pin is \npulled low through an external 1 kΩ resistor. When  in serial \ndownload mode, the user can download code to the full 30 kB \nof Flash/EE memory while the device is in -circuit in its target \napplication hardware. An executable PC serial download is provided as part of the development system for serial \ndownloading via the UART .  \nWhen the ADuC7060/ ADuC7061 enters download mode, the \nuser should be aware that the internal watchdog is enabled with \na time -out period of 2 minutes. If the flash erase /write sequence \nis not completed in this period, a reset occur s. \nJTAG Access  \nThe JTAG protocol uses the on -chip JTAG interface to facilitate \ncode download and debug.  \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 60 of 107 PROCESSOR REFERENCE PERIPHERALS  \nINTERRUPT SYSTEM  \nThere are 15 interrupt sources on the ADuC7060/ ADuC7061 \nthat are con trolled by the interrupt contro ller. All interrupts are \ngenerated from the on -chip peripherals , except for the s oftware \ninter rupt (SWI) , which is programmable by the user. The \nARM7TDMI CPU core recognizes interrupts as one of two \ntypes  only : a normal interrupt request (IRQ) or  a fast interrupt \nrequest (FIQ). All the interrupts can be masked separately.  \nThe control and configuration of the interrupt system are  \nmanaged through a number of interrupt  related registers. The \nbits in each IRQ and FIQ register represent the same interr upt \nsource , as described in Table 65. \nEach ADuC7060/ ADuC7061 contains a vectored interrupt \ncontro ller (VIC) that supports nested interrupts up to eight \nlevels. The VIC also allows the programmer to assign priority levels to all interrupt sources. Interrupt nesting needs to be \nenabled by setting the ENIRQN bit in the IRQCONN register. A number of ext ra MMRs are used when the full vectored \ninterrupt controll er is enabled.  \nImmediately save IRQSTA/FIQSTA upon entering the interrupt service routine (ISR) to ensure that all  valid interrupt sources \nare serviced.  \nTable 65. IRQ/FIQ MMR  Bit Designations \nBit Description  Comments  \n0 All interrupts OR’ed \n(FIQ only)  This bit is set if any FIQ is active  \n1 Software  interrupt  User  programmable interr upt \nsource  \n2 Undefined  This bit is not used  \n3 Timer0  General -Purpose Timer0  \n4 Timer1 or wake -up \ntimer  General -Purpose Timer1  or \nwake-up timer  \n5 Timer2 or watchdog \ntimer  General -Purpose Timer2  or \nwatchdog timer  \n6 Timer3 or STI timer  General -Purpose Timer3  \n7 Undefined  This bit is not used  \n8 Undefined  This bit is not used  \n9 Undefined  This bit is not used  \n10 ADC  ADC interrupt source bit  \n11 UART  UART interrupt source bit  \n12 SPI  SPI interrupt source bit  \n13 XIRQ0 (GPIO IRQ0 )  External I nterrupt 0  \n14 XIRQ1 (GPIO IRQ1)  External I nterrupt 1  \n15 I2C master IRQ  I2C master interrupt source bit  \n16 I2C slave IRQ  I2C slave  interrupt source bit  \n17 PWM  PWM trip interrupt source bit  \n18 XIRQ2 (GPIO IRQ2 )  External I nterrupt 2  \n19 XIRQ3 (GPIO IRQ3)  External I nterrupt 3  IRQ  \nThe IRQ is the exception signal to enter the IRQ mode of the \nprocessor. It services general -purpose interrupt handling of \ninternal and external events.  \nAll 32 bits are logically OR’ ed to create a single IRQ signal to  \nthe ARM7TDMI core. Th e four 32- bit registers dedicated to \nIRQ are described in the following sections . \nIRQSIG  \nIRQSIG reflects the status of the different IRQ sources. If a \nperipheral generates an IRQ signal, the correspo nding bit in  \nthe IRQSIG is set;  otherwise , it is cleared . The IRQSIG bits clear  \nwhen the interrupt in the particular peripheral is cleared. All \nIRQ sources can be masked in the IRQEN MMR. IRQSIG is read only.  \nIRQSIG Register  \nName:  IRQSIG  \nAddress:  0xFFFF0004   \nDefault  value:  Undefined  \nAccess:  Read only  \nIRQEN  \nIRQEN provides the value of the current enable mask. When a \nbit is set to 1, the corresponding source request is enabled  \nto create an IRQ exception. The IRQEN register cannot be used \nto disable an interrupt.  Clear to 0 has no effect.  \nIRQEN Register  \nName:  IRQEN  \nAddress:  0xFFFF0008   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nIRQCLR \nIRQCLR is a write -only register that allows the IRQEN register \nto clear to mask an interrupt source. Each bit that is set to 1 clears the corresponding bit in the IRQEN register without affecting the remaining bits. The pair of reg isters, IRQEN and \nIRQCLR, allows  independent manipulation of the enable mask \nwithout requiring an atomic read -modify -write.  Clear to 0 has \nno effect . \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 61 of 107 IRQCLR Register  \nName:  IRQCLR  \nAddress:  0xFFFF000C   \nDefault  value:  0x00000000  \nAccess:  Write only  \nIRQSTA  \nIRQSTA is a read -only register that provides the current \nenabled IR Q source status (effectively a logic AND of the \nIRQSIG and IRQEN bits). When set to 1, that source generates \nan active IRQ request to the ARM7TDMI core. There is no priority encoder or interrupt vector generation. This function is implemented in software in a common interrupt handler \nroutine.  \nIRQ STA  Register  \nName:  IRQSTA  \nAddress:  0xFFFF0000  \nDefault value:  0x00000000 \nAccess:  Read only  \nFAST INTERRUPT REQUE ST (FIQ)  \nThe fast interrupt request (FIQ) is the exception signal to enter \nthe FIQ mode of the processor. It is provided to service data \ntransfer or communication channel tasks with low latency. The \nFIQ interface is identical to the IRQ interface and provides the \nsecond level interrupt (highest priority). Four 32 -bit registers \nare dedicated to FIQ: FIQSIG, FIQEN, FIQCLR, and FIQSTA.  \nBit 31 to Bit 1 of FIQSTA are logically OR’ ed to create the FIQ signal to the core and to Bit 0 of both the FIQ and IRQ registers \n(FIQ source).  \nThe logic for FIQEN and FIQCLR does not allow an interrupt \nsource to be enabled in both IRQ and FIQ masks. A bit set to 1 in FIQEN clears, as a side effect, the same bit in IRQEN. \nLikewise, a bit set to 1 in IRQEN clears, as a side effect, the \nsame bit in FIQEN. An interrupt source can be disabled in both \nIRQEN and FIQEN masks.  \nFIQSIG  \nFIQSIG reflects the status of the different FIQ sources. If a \nperipheral generates an FIQ signal, the correspo nding bit in  \nthe FIQSIG is set;  otherwise , it is cleared. The FIQSIG bits are \ncleared when the interrupt in the particular peripheral is \ncleared. All FIQ sources can be masked in the FIQEN MMR. \nFIQSIG is read only.  FIQSIG Register  \nName:  FIQSIG  \nAddress:  0xFFFF0104  \nDefault value:  Undefined  \nAccess:  Read only  \nFIQEN  \nFIQEN provides the value of the current enable mask. When a \nbit is set to 1, the corresponding source request is enabled  \nto create an FIQ exception. When a bit is set to 0, the corre-sponding source request is disabled or masked , which does not \ncreate an FIQ exception. The FIQEN register cannot be used to \ndisable an interrupt.  \nFIQEN Register  \nName:  FIQEN  \nAddress:  0xFFFF0108  \nDefault  value:  0x00000000 \nAccess:  Read and write  \nFIQCLR \nFIQCLR is a write -only register that allo ws the FIQEN register \nto clear in order  to mask an interrupt source. Each bit that is set \nto 1 clears the corresponding bit in the FIQEN register without \naffecting the remaining bits. The pair of reg isters, FIQEN and \nFIQCLR, al lows  independent manipulation of the enable mask \nwithout requiring an atomic read -modify -write.  \nFIQCLR Register  \nName:  FIQCLR  \nAddress:  0xFFFF010C  \nDefault  value:  0x00000000 \nAccess:  Write only  \nFIQSTA  \nFIQSTA is a read -only register that provides the current enabled \nFIQ source status (effectively a logic AND of the FIQSIG and \nFIQEN bits). When set to 1, that source generates an active FIQ request to the ARM7TDMI core. There is no priority encoder or interrupt vector generation. This function is impleme nted in \nsoftware in a common interrupt handler routine.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 62 of 107 FIQ STA  Register   \nName:  FIQSTA  \nAddress:  0xFFFF0100  \nDefault  value:  0x00000000 \nAccess:  Read only  \nPROGRAMMED INTERRUPT S \nBecause the programmed interrupts are not maskable, they are \ncontrolled by another registe r (SWICFG ) that writes into both \nIRQSTA and IRQSIG registers and/or the FIQSTA and FIQSIG \nregisters at the same time.  \nSWICFG \nSWICFG is a 32- bit register dedicated to software interrupt, \ndescribed in Table 66. This MMR allows control of a pro -\ngrammed source interrupt.  \nSWICFG Register  \nName:  SWICFG  \nAddress:  0xFFFF0010   \nDefault  value:  0x00000000 \nAccess:  Write only  \nTable 66. SWICFG MMR Bit Designations \nBit Description  \n31:3 Reserved.  \n2 Programmed interrupt FIQ.  Setting/clearing this bit \ncorresponds to setting/clearing Bit 1 of FIQSTA and \nFIQSIG.  \n1 Programmed interrupt IRQ.  Setting/clearing this bit \ncorresponds to setting/clearing Bit 1 of IRQSTA and \nIRQSIG.  \n0 Reserved.  \nAny interrupt signal must be active for at least the minimum \ninterrupt latency time to be detected by the interrupt controller \nand to be detected by the user in the IRQSTA/FIQSTA register.  \nVECTORED INTERRUPT C ONTROLLER (VIC)  \nEach  ADuC7060/ ADuC7061 incorporate s an enhanced \ninterrupt control system or vectored interrupt cont roller. The \nvectored interru pt controller for IRQ interrupt sources is \nenabled by setting B it 0 of the I RQCONN register. Similarly, B it \n1 of IRQCONN enables the vectored interrupt con troller for the \nFIQ interrupt sources. The vectored interrupt contro ller \nprovides the following enhancements to the standard IRQ/FIQ \ninterrupts:  • Vectored interrupts —allows a us er to define separate \ninterrupt service routine addresses for every interrupt \nsource. This is achieved by using the IRQBASE and  \nIRQVEC registers. \n• IRQ/FIQ interrupts —can be nested up to eight levels \ndepending on the p riority settings. An FIQ still has a \nhigher priority than an IRQ. There fore, if the VIC is \nenabled for both the FIQ and IRQ and prioritization is \nmaximized, it is possible to have 16 separate interrupt levels.  \n• Programmable interrupt pri orities —using the IRQP0 to \nIRQP2 registers, an interrupt so urce can be assigned an \ninterrupt priority level value from  0 to 7. \nVIC MMRS  \nIRQBASE  \nThe vector ba se register, IRQBASE , is used to point to the start \naddress of memory used to store 32 pointer addresses. These pointer addresses are the addresses of the individual interrupt \nservice routines.  \nIRQBASE Register  \nName:  IRQBASE  \nAddress:  0xFFFF0014  \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 67. IRQBASE MMR Bit Designations \nBit Access  Initial Value  Description  \n31:16 Read only  Reserved  Always read as 0 . \n15:0 R/W  0 Vector base address . \nIRQVEC  \nThe IRQ interrupt vector register, IRQVEC, points to a memory \naddress containing a pointer to the  interrupt service routi ne of \nthe currently active IRQ. This register should be read only when \nan IRQ occurs and IRQ interrupt nesting has been enabled by \nsetting Bit 0 of the IRQCONN register.  \nIRQVEC Register  \nName:  IRQVEC  \nAddress:  0xFFFF001C   \nDefault  value:  0x00000000 \nAccess:  Read only  \n \n  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 63 of 107 Table 68. IRQVEC MMR Bit Designations \nBit Access  Initial \nValue  Description  \n31:23 Read \nonly  0 Always read as 0.  \n22:7 Read only  0 IRQBASE register value . \n6:2 Read only  0 Highest priority  IRQ source. This  \nis a value between 0  to 19 repre -\nsenting the possible interrupt \nsources. For example, if the highest \ncurrently active IRQ is Timer1 , then \nthese bits ar e [01000] . \n1:0 Reserved  0 Reserved bits.  \nPriority Registers  \nThe interrupt priority registers, IRQP0, IRQP1, and IRQP2, \nallow each interrupt source to have its priority level configured \nfor a level between 0 and 7. Level 0  is the highest priority level.  \nIRQP0 Register  \nName:  IRQP0  \nAddress:  0xFFFF0020   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 69. IRQP0 MMR Bit Designations \nBit Name  Description  \n31:27 Reserved  Reserved bits.  \n26:24 T3PI  A priority level of 0 to 7 can be set for \nTimer3 . \n23 Reserved  Reserved bit.  \n22:20 T2PI  A priority level of 0 to 7 can be set for Timer2 . \n19 Reserved  Reserved bit.  \n18:16 T1PI  A priority level of 0 to 7 can be set for \nTimer1 . \n15 Reserved  Reserved bit.  \n14:12 T0PI  A priority level of 0 to 7 can be set for \nTimer0 . \n11:7 Reserved  Reserved bits.  \n6:4 SWINTP  A priority level of 0 to 7 can be set for the software interrupt source.  \n3:0 Reserved  Interrupt 0 cannot be prioritized.  IRQP1 Register  \nName:  IRQP1  \nAddress:  0xFFFF0024   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 70. IRQP1 MMR Bit Designation s \nBit Name  Description  \n31 Reserved  Reserved bit.  \n30:28 I2CMPI  A priority level of 0 to 7 can be set for I2C \nmaster.  \n27 Reserved  Reserved bit.  \n26:24 IRQ1PI  A priority level of 0 to 7 can be set for IRQ1.  \n23 Reserved  Reserved bit.  \n22:20 IRQ0PI  A priority level of 0 to 7 can be set for IRQ0.  \n19 Reserved  Reserved bit.  \n18:16 SPIMPI  A priority level of 0 to 7 can be set for SPI master.  \n15 Reserved  Reserved bit.  \n14:12 UARTPI  A priority level of 0 to 7 can be set for UART.  \n11 Reserved  Reserved bit.  \n10:8 ADCPI  A priority level of 0 to 7 can be set for the ADC interrupt source.  \n7:0 Reserved  Reserved bits.  \nIRQP2 Register  \nName:  IRQP2  \nAddress:  0xFFFF0028   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 71. IRQP2 MMR Bit Designations \nBit Name  Description  \n31:15 Reserved  Reserved bit.  \n14:12 IRQ3PI  A priority level of 0 to 7 can be set for IRQ3.  \n11 Reserved  Reserved bit.  \n10:8 IRQ2PI  A priority level of 0 to 7 can be set for IRQ2.  \n7 Reserved  Reserved bit.  \n6:4 SPISPI  A priority level of 0 to 7 can be set for SPI \nslave.  \n3 Reserved  Reserved bit.  \n2:0 I2CSPI  A priority level of 0 to 7 can be set for I2C \nslave.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 64 of 107 IRQCONN  \nThe IRQCONN register is the IRQ and FIQ control register. It \ncontains two active bits : the first to enable nesting and \nprioritization of IRQ interrupts , and  the other to enable nesting \nand prioritization of FIQ interrupts.  \nIf these bits are cleared, FIQs and IRQs can  still be used , but it is \nnot possible to nest IRQs or FIQs. Neither is it poss ible to set an \ninterrupt source  priority level. In this default state, an FIQ does \nhave a higher priority than an IRQ.  \nIRQCONN Register  \nName:  IRQCONN  \nAddress:  0xFFFF0030   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 72. IRQCONN MMR Bit Designations \nBit Name  Description  \n31:2 Reserved  These bits are reserved and should not be \nwritten to.  \n1 ENFIQN  Setting this bit to 1 enables nesting of FIQ \ninterrupts. Clearing this bit  means no nesting \nor prioriti zation of FIQs is allowed.  \n0 ENIRQN  Setting this bit to 1 enables nesting of IR Q \ninterrupts. Clearing this bit  means no nesting \nor prioriti zation of IRQs is allowed.  \nIRQSTAN  \nIf IRQCONN[ 0] is asserted and IRQVEC is read , then one of \nthese bits  is assert ed. The bit that asserts depend s on the \npriority of the IRQ. If the IRQ is of P riority 0 , then Bit 0 assert s; \nPriority  1, then Bit 1 asserts; and so forth . When a bit is set in \nthis register , all interrupts of that priority and lower are blocked.  \nTo clear a bit in this register , all bits of a higher priority must be \ncleared first. It is possible to clear only one bit a t a time. For \nexample , if this register is set to 0x09 , writing 0xFF change s the \nregister to 0x08 , and writing 0xFF a second time change s the \nregister to 0x00.  IRQSTAN Register  \nName:  IRQSTAN  \nAddress:  0xFFFF003C   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 73. IRQSTAN MMR Bit Designations \nBit Name  Description  \n31:8 Reserved  These bits are reserved and should not be \nwritten to.  \n7:0  Setting this bit to 1 enables nesting of FI Q \ninterrupts. Clearing this bit  means no nesting \nor prioritization  of FIQs is allowed.  \nFIQVEC \nThe FIQ interrupt vector register, FIQVEC, points to a memory \naddress containing a pointer to the interrupt service ro utine of \nthe currently active FIQ. This register should be read only when \nan FIQ occurs and FIQ interrupt nesting has been enabled by \nsetting Bit 1 of the IRQCONN register.  \nFIQVEC Register  \nName:  FIQVEC  \nAddress:  0xFFFF011C  \nDefault  value:  0x00000000 \nAccess:  Read only  \nTable 74. FIQVEC MMR Bit Designations \nBit Access  Initial \nValue  Description  \n31:23 Read  only  0 Always read as 0.  \n22:7 Read only  0 IRQBASE register value . \n6:2  0 Highest priority  FIQ source. This is  \na value between 0 to 19 that \nrepresent s the possible interrupt \nsources. For example, if the \nhighest currently active FIQ is \nTimer1 , then these bits ar e \n[01000] . \n1:0 Reserved  0 Reserved bits.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 65 of 107 FIQSTAN  \nIf IRQCONN [1] is asserted and FIQVEC is read , then one of \nthese bits assert s. The bit that asserts depend s on the priority of \nthe FIQ. If the FIQ is of P riority 0 , Bit 0 asserts; Priority 1 , Bit 1 \nassert s; and so forth . \nWhen a bit  is set in this register , all interrupts of that priority \nand lower are blocked.  \nTo clear a bit in this register , all bits of a higher priority must be \ncleared first. It is possible to clear only one bit as a time. For \nexample , if this register is set to 0 x09, writing 0xFF change s the \nregister to 0x08 , and writing 0xFF a second time change s the \nregister to 0x00.  \nFIQSTAN Register  \nName:  FIQSTAN  \nAddress:  0xFFFF013C   \nDefault  value:  0x00000000 \nAccess:  Read and write  \nTable 75. FIQSTAN MMR Bit Designations \nBit Name  Description  \n31:8 Reserved  These bits are reserved and should not be \nwritten to.  \n7:0  Setting this bit to 1 enables nesting of FI Q \ninterrupts. Clearing this bit  means no nesting \nor prioritization  of FIQs is allowed.  External Interrupts (IRQ0 to IRQ3)  \nThe ADuC7060 /ADuC7061 provide s up to four external \ninterrupt sources. These exter nal interrupts can be individually \nconfigured as level triggered or rising/falling edge triggered.  \nTo en able the external interrupt source, the appropriate bit must \nfirst be set in the FIQEN or IRQEN register. To select the \nrequired edge or level to trigger on, the IRQCONE register \nmust be appropriately configured.  \nTo properly clear an edg e based external IRQ interrupt, set the \nappropriate bit in the IRQCLRE  register.  \nIRQCONE Register  \nName:  IRQCONE  \nAddress:  0xFFFF0034   \nDefault  value:  0x00000000 \nAccess:  Read and write  \n \nTable 76. IRQCONE MMR Bit Designations \nBit Name  Description  \n31:8 Reserved  These bits are reserved and should not be written to.  \n7:6 IRQ3SRC[1:0]  [11] = External IRQ3 triggers on falling edge.  \n  [10] = External IRQ3 triggers on rising edge.  \n  [01] = External IRQ3 triggers on low level.  \n  [00] = External IRQ3 triggers on high level.  \n5:4 IRQ2SRC[1:0]  [11] = External IRQ2 triggers on falling edge.  \n  [10] = External IRQ2 triggers on rising edge.  \n  [01] = External IRQ2 triggers on low level.  \n  [00] = External IRQ2 triggers on high level.  \n3:2 IRQ1SRC[1:0]  [11] = External IRQ1 triggers on falling edge.  \n  [10] = External IRQ1 triggers on rising edge.  \n  [01] = External IRQ1 triggers on low level.  \n  [00] = External IRQ1 triggers on high level.  \n1:0 IRQ0SRC[1:0]  [11] = External IRQ0 triggers on falling edge.  \n  [10] = External IRQ0 triggers on rising edge.  \n  [01] = External IRQ0 triggers on low level.  \n  [00] = External IRQ0 triggers on high level.  \n \n \n  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 66 of 107 IRQCLRE Register  \nName:  IRQCLRE  \nAddress:  0xFFFF0038   \nDefault  value:  0x00000000 \nAccess:  Read and write  Table 77. IRQCLRE MMR Bit Designations \nBit Name  Description  \n31:20 Reserved  These bits are reserved and should not be \nwritten to.  \n19 IRQ3CLRI  A 1 must be written to this bit in the IRQ3 \ninterrupt service routine to clear an edge \ntriggered IRQ3 interrupt . \n18 IRQ2CLRI  A 1 must be written to this bit in the IRQ2 \ninterrupt service routine to clear an edge triggered IRQ2 interrupt . \n17:15 Reserved  These bits are reserved and should not be \nwritten to.  \n14 IRQ1CLRI  A 1 must be written to this bit in the IRQ1 \ninterrupt service routine to clear an edge \ntrigger ed IRQ1 interrupt . \n13 IRQ0CLRI  A 1 must be written to this bit in the IRQ0 \ninterrupt service routine to clear an edge \ntriggered IRQ0 interrupt . \n12:0 Reserved  These bits are reserved and should not be written to.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 67 of 107 TIMERS  \nThe ADuC7060 /ADuC7061 features four general -purpose \ntimer/counters.  \n• Timer0  \n• Timer1 or wake -up timer  \n• Timer2 or watchdog timer  \n• Timer3  \nThe four timers in their normal mode of operation can be either \nfree running or periodic.  \nIn free running mode, the counter decrements/increments from \nthe maximum  or minimum value until zero/full scale and sta rts \nagain at the maximum  or minimum value.  \nIn periodic mode, the counter decrements/increments from the value  in the load register (TxLD MMR) until zero/full scale and \nstarts again at the value stored in the load register. Note that the \nTxLD MMR should be configured before the TxCON MMR.  \nThe timer int erval is calculated as follows:  \nIf the timer is set to count down then  \nInterval = (TxLD x Prescaler) / Source Clock  \nIf the timer is set to count up then  \nInterval = ((Full Scale - TxLD) x Prescaler) / Source Clock.  \nThe value of a counter can be read at any time by accessing its \nvalue register (TxV AL). Timers are started by writing in the \ncontrol register of the corresponding timer (TxCON).  \nIn normal mode, an IRQ is gene rated each time that t he value \nof the cou nter reaches zero (if counting down) or full scale (if \ncounting up). An IRQ can be cleared by writing any value to the \nclear register of the particular timer (TxCLRI).  \nTable 78. Timer Event Capture  \nBit Description  \n0 Reserved  \n1 Timer0  \n2 Timer1 or wake -up timer  \n3 Timer2 or watchdog timer  \n4 Timer3  \n5 Reserved  \n6 Reserved  \n7 Reserved  \n8 ADC  \n9 UART  \n10 SPI \n11 XIRQ0  \n12 XIRQ1  \n13 I2C master  \n14 I2C slave  \n15 PWM  \n16 XIRQ2 (GPIO IRQ2 ) \n17 XIRQ3 (GPIO IRQ3 ) HR:MIN:SEC: 1/128 FORMAT  \nTo use the timer in Hr : Min : Sec : hundreds format the 32768 \nkHz clock and prescaler of 256 should be selected. The \nhundreds field does not represent milliseconds but 1/128 of a second (256/32768).The bits representing the Hour, minute and \nsecond  are not consecutive in the register. This arrangement \napplies to TxLd and TxV AL when using the Hr : Min : Sec : \nhundreds  format as set in TxCON[5:4]. See Table 79 for more \ndetails.  \nTable 79. Hr:Min:Sec: hundreds format  \nBit Value  Description  \n31:24 0 to 23 or 0 to 255 Hours  \n23:22 0 Reserved  \n21:16 0 to 59 Minutes  \n15:14 0 Reserved  \n13:8 0 to 59 Seconds  \n7 0 Reserved  \n6:0 0 to 127  1/128 of second  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 68 of 107 TIMER0  \nTimer0 is a 32 -bit, general -purpose timer, count down or count \nup, with a programmable prescaler. The prescaler source can be \nthe low power 32.768 kHz oscillator, the core clock, or from one of two external GPIOs. This source can be scaled by a factor of \n1, 16, 256, or 32,768. This gives a minimum resolution of 97.66  ns \nwith a prescaler of 1 (ignoring the external GPIOs).  \nThe counter can be formatted as a standard 32 -bit value or as \nhours:minutes:seconds:hundredths.  \nTimer0 has a capture register (T0CAP) that is triggered by a \nselected IRQ source initial assertion. When triggered, the current  \ntimer value is cop ied to T0CAP , and the timer con tinues to run. \nUse t his feature to determine the assertion of an event with \nincreased accuracy.  Note  that o nly peripherals that have their \nIRQ source enabled can be used with the timer capture feature.  \nThe Timer0 interf ace consists of five MMRS: T0LD, T0V AL, \nT0CAP , T0CLRI, and T0CON.  \n• T0LD, T0V AL, and T0CAP are 32 -bit registers and hold \n32-bit, unsigned integers  of which T0VAL and T0CAP are \nread only.   \n• T0CLRI is an 8 -bit register  and writing any value to this \nregister clears the Timer0 interrupt.   \n• T0CON is the configuration MMR , which is described in \nTable 80. \nTime r0 features a postscaler that allows  the user to count between  \n1 and 256 the number of Timer0 timeouts. To activate the post-scaler, the user sets Bit 18  and writes the desi red number to  count \ninto Bits[24:31] of T0CON. When that number of timeouts i s \nreached, Timer0 can generate an interrupt if T0CON[18 ] is set.  \nNote that , if the part is in a low power mode  and Timer0 is \nclocked from the GPIO or low power oscillator source, Timer0 \ncontinues to operate.  \nTimer0 reloads the value from T0LD when Timer0 overflows.  Timer0 Load Registers  \nName:  T0LD  \nAddress:  0xFFFF0320   \nDefault value:  0x00000000 \nAccess:  Read  and write  \nFunction:  T0LD is a 32 -bit register that holds the 32 -bit \nvalue that is loaded into the counter.  \nTimer0 Clear Register  \nName:  T0CLRI  \nAddress:  0xFFFF032C  \nAccess:  Write only  \nFunction:  This 8 -bit, write -only MMR is written  \n(with any value) by user code to clear the \ninterrupt.  \nTimer0 Value Register  \nName:  T 0 VA L  \nAddress:  0xFFFF0324  \nDefault value:  0xFFFFFFFF  \nAccess:  Read only  \nFunction:  T0V AL is a 32 -bit register that holds the \ncurrent value of Timer0.  \n \nTIMER0\nVALUE32.768kHz OSCILLATOR\nCORE CLOCK\nFREQUENCY/CD\nCORE CLOCK\nFREQUENCY\nGPIOPRESCALER\n1, 16, 256, OR 32,768\nTIMER0 IRQ32-BIT\nUP/DOWN COUNTER8-BIT\nPOSTSCALER32-BIT LOAD\nCAPTURE IRQ[31:0]\n07079-017 \nFigure 23. Timer0 Block Diagram  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 69 of 107 Timer0 Capture Register  \nName:  T0CAP  \nAddress:  0xFFFF0330  \nDefault value:  0x00000000 \nAccess:  Read only  \nFunction:  This 32 -bit register holds the 32 -bit value captured by an enabled IRQ event.  \nTimer0 Control Register  \nName:  T0CON  \nAddress:  0xFFFF0328  \nDefault value:  0x01000000 \nAccess:  Read  and write  \nFunction:  This 32 -bit MMR configures the mode of operation of Timer0.  \nTable 80. T0CON MMR Bit Designations  \nBit Name  Description  \n31:24 T0PVAL  8-bit postscaler.  \n  By writing to these eight bits, a value is written to the postscaler. Writing 0 is interpreted as a 1.  \n  By reading these eight bits, the current value of the counter is read.  \n23 T0PEN  Timer0  enable postsc aler.  \n  Set to enable the Timer0 postscaler. If enabled, interrupts are generated after T0CON[31:24] periods  \nas defined by T0LD.  \n  Cleared to disable the Timer0 postscaler.  \n22:20  Reserved. These bits are reserved and should be written as 0 by user code.  \n19 T0PCF  Postscaler  compare flag ; read only. Set if the number of Timer0 overflows is equal to the number written  \nto the postscaler.  \n18 T0SRCI  Timer0  interrupt so urce.  \n  Set to select interrupt generation from the postscaler counter.  \n  Cleared to select interrupt generation directly from Timer0.  \n17 T0CAPEN  Event  enable bit . \n  Set by user to enable time capture of an event.  \n  Cleared by user to disable time capture of an event.  \n16:12 T0CAPSEL  Event Select Bits[17:0] . The events are described in Table 78. \n11  Reserved bit.  \n10:9 T0CLKSEL  Clock select.  \n [00] = 32.768 kHz. \n [01] = 10.24  MHz /CD. \n [10] = 10.24 MHz. \n [11] = P1.0.  \n8 T0DIR  Count up. \n  Set by user for Timer0 to count up.  \n  Cleared by user for Timer0 to count down (default).  \n7 T0EN  Timer0  enable bit . \n  Set by user to enable Timer0.  \n  Cleared by user to disable Timer0 (default).  \n6 T0MOD  Timer0 mode.  \n  Set by user to operate in periodic mode.  \n  Cleared by user to operate in free running mode (default).  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 70 of 107 Bit Name  Description  \n5:4 T0FORMAT  Format.  \n [00] = binary (default).  \n [01] = reserved.  \n [10] = hours:minutes:seconds:hundredths (23 hours to 0 hours).  \n [11] = hours:minutes:seconds:hundredths  (255 hours to 0 hours).  \n3:0 T0SCALE  Prescaler.  \n [0000]  = source clock/1 (default).  \n [0100 ] = source clock/16.  \n [1000]  = source clock/256.  \n [1111]  = source clock/32,768. Note  that  all other values are undefined.  \nTIMER1  OR WAKE -UP TIMER  \nTimer1 i s a 32 -bit wake -up timer, count down or count up, with \na programmable pres caler. The prescaler is clocked directly from \none of four clock sources, namely, the core clock (which is the \ndefault selection), external  32.768 kHz watch crystal, or the \n32.768 kHz oscillator. The selected clock source can be scaled by a factor of 1, 16, 256, or 32,768. The wake -up timer \ncontinues to run when the core clock is disabled. This gives a \nminimum resolution of 97.66  ns when operating at CD zero, the \ncore is operating at 10.24 MHz, and with a prescaler of 1 \n(ignoring the external GPIOs).  \nThe counter can be formatted as a plain 32 -bit value or as \nhours:minutes:seconds:hundredths.  \nTimer1 reloads the value from T1LD either when Timer1 overflows or imm ediately when T1LD is written.  \nThe Timer1 interface consists of four MMRS.  \n• T1LD and T1VAL are 3 2-bit registers and hold 32 -bit, \nunsigned integers. T1V AL is read only.  \n• T1CLRI is an 8 -bit register. Writing any value to this \nregister clears the Timer1 interru pt. \n• T1CON is the configuration MMR , described in Table 81.  Timer1 Load Registers  \nName:  T1LD  \nAddress:  0xFFFF0340  \nDefault value:  0x00000000 \nAccess:  Read and write  \nFunction:  T1LD is a 32 -bit register that holds the 32 -bit \nvalue that is loaded into the counter.  \nTimer1 Clear Register  \nName:  T1CLRI  \nAddress:  0xFFFF034C  \nAccess:  Write only  \nFunction:  This 8-bit, write -only MMR is written (with \nany value) by user code to clear the interrupt.  \nTimer1 Value Register  \nName:  T 1 VA L  \nAddress:  0xFFFF0344  \nDefault value:  0xFFFFFFFF  \nAccess:  Read only  \nFunction:  T1V AL is a 32 -bit register that holds the \ncurrent value of Timer1.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 71 of 107 PRESCALER\n1, 16, 256, OR 32,768TIMER1 IRQ32-BIT\nUP/DOWN COUNTER32.768kHz OSCILLATOR\nCORE CLOCK\nFREQUENCY/CD\nCORE\nCLOCK\nEXTERNAL 32.768kHz\nWATCH CRYSTAL32-BIT LOAD\nTIMER1\nVALUE\n07079-018 \nFigure 24. Timer1 Block Diagram  \nTimer1 Control Register  \nName:  T1CON  \nAddress:  0xFFFF0348  \nDefault value:  0x0000 \nAccess:  Read  and write  \nFunction:  This 16 -bit MMR configures the mode of operation of  Timer1.  \nTable 81. T1CON MMR Bit Designations \nBit Name  Description  \n15:11  Reserved.  \n10: 9 T1CLKSEL  Clock source se lect.  \n [00] = 32.768 kHz oscillator . \n [01] = 10.24 MHz/CD. \n [10] = XTAL I. \n [11] = 10.24 MHz. \n8 T1DIR  Count up. \n  Set by user for Timer1 to count up.  \n  Cleared by user for Timer1 to count down (default).  \n7 T1EN  Timer1 enable bi t. \n  Set by user to enable Timer1.  \n  Cleared by user to disable Timer1  (default).  \n6 T1MOD  Timer1 mode.  \n  Set by user to operate in periodic mode.  \n  Cleared by user to operate in free running mode (default).  \n5:4 T1FORMAT  Format.  \n [00] = binary (default).  \n [01] = reserved.  \n [10] = hours:minutes:seconds:hundredths  (23 hours to 0 hours). This is only valid with a 32 kHz clock.  \n [11] = hours:minutes:seconds:hundredths (255 hours to 0 hours). This is only valid with a 32 kHz clock.  \n3:0 T1SCALE  Prescaler.  \n [0000]  = source clock/1 (default).  \n [0100]  = source clock/16.  \n [1000]  = source clock/256. This setting should be used in conjunction with Timer1 in the format \nhours:minutes:seconds:hundredths. See Format 10 and Format 11 listed with Bits[5:4] in this  table  (Table 81). \n [1111]  = source clock/32,768.  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 72 of 107 TIMER2 OR WATCHDOG T IMER  \nTimer2 has two modes of operation, normal mode and \nwatchdog mode. The watchdog timer is used to recover  \nfrom an illegal software state. When enabled, it requires periodic servicing to prevent it from forcing a reset of the processor.  \nTimer2 reloads the va lue from T2LD either when Timer2 \noverflows or immediately when T2CLRI is written.  \nNormal Mode  \nTimer2 in normal mode is identical to Timer0 in the 16-bit \nmode of operation, except for the clock source. The clock source is the low power, 32.768 kHz oscillato r scalable by a \nfactor of 1, 16, or 256.  \nWatchdog Mode  \nWatchdog m ode is entered by setting T2CON [Bit 5]. Timer2 \ndecrements from the timeout value present in the T2LD register until zero. The maximum timeout is 512 seconds, using a \nmaximum prescaler/256 and  full scale in T2LD.  \nUser software should not configure a timeout period of less \nthan 30 ms. This is to avoid any conflict with Flash/EE memory \npage erase cycles that require 20 ms to complete a single page \nerase cycle and kernel execution.  \nIf T2V AL reach es 0, a reset or an inter rupt occurs, depending \non T2CON [1]. To avoid a reset or an interrupt event, any value \nmust be written to T2CLRI before T2V AL reaches zero. This \nreloads the counter with T2LD and begins a new timeout period.  \nWhen watchdog mode is entered, T2LD and T2CON are  \nwrite protected. These two registers ca nnot be modified until  \na power -on reset event resets the watchdog timer. After any \nother reset event, the watchdog timer continues to count. To \navoid an infinite loo p of watchdog resets, configure t he \nwatchdog timer in the initial lines of user code. User software should configure a minimum timeout period of  30 ms  only. \nTimer2 halts  automatically during JTAG debug access and only \nrecommences counting after JTAG relinq uishe s control of the \nARM7 core. By default, Timer2 continues to count during \npower -down. T o disable this, set Bit 0 in T2CON. It is \nrecommended that the default value be used , that is, that the \nwatchdog timer continues to count during power -down.  Timer2 Interface  \nThe Timer2 interface consists of four MMRs.  \n• T2CON is the configuration MMR , described in ( Table 82). \n• T2LD and T2VAL are 16 -bit registers (Bi t 0 to Bit 15) and \nhold 16 -bit, unsigned integers. T2V AL is read only.  \n• T2CLRI is an 8 -bit register. Writing any value to this \nregister clears the Timer2 interrupt in normal mode or \nresets a new timeout period in watchdog mode.  \nTimer2 Load Register  \nName:  T2LD \nAddress:  0xFFFF0360  \nDefault  value:  0x3BF8 \nAccess:  Read  and write  \nFunction:  This 16 -bit MMR holds the Timer2  \nreload value.  \nTimer2 Clear Register  \nName:  T2CLRI  \nAddress:  0xFFFF036C  \nAccess:  Write only  \nFunction:  This 8 -bit, write -only MMR is written (with  \nany value) by user code to refresh (reload) Timer2 in watchdog mode to prevent a watchdog timer reset event.  \nTimer2 Value Register  \nName:  T 2 VA L  \nAddress:  0xFFFF0364  \nDefault  value:  0x3BF8 \nAccess:  Read only  \nFunction:  This 16 -bit, read -only MMR holds the \ncurrent Timer2 count value.  \n \nPRESCALER\n1, 16, 256TIMER2 IRQWATCHDOG RESET16-BIT\nUP/DOWN COUNTER32.768kHz16-BIT LOAD\nTIMER2\nVALUE\n07079-019 \nFigure 25. Timer2 Block Diagram  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 73 of 107 Timer2 Control Register  \nName:  T2CON  \nAddress:  0xFFFF0368  \nDefault value:  0x0000 \nAccess:  Read  and write  \nFunction:  This 16-bit MMR configures the mode of operation of Timer2 , as described in detail in Table 82. \nTable 82. T2CON MMR Bit Designations \nBit Name  Description  \n15:9  Reserved. These bits are reserved and should be written as 0 by user code.  \n8 T2DIR  Count up/count down enable.  \n  Set by user code to configure Timer2 to count up.  \n  Cleared by user code to configure Timer2 to count down.  \n7 T2EN  Timer2 enable.  \n  Set by user code to enable Timer2.  \n  Cleared by user code to disable Timer2.  \n6 T2MOD  Timer2 operating mo de. \n  Set by user code to configure Timer2 to operate in periodic mode.  \n  Cleared by user to configure Timer2 to operate in free running mode.  \n5 WDOGMDEN  Watchdog timer mode enabl e.  \n  Set by user code to enable watchdog mode.  \n  Cleared by user code to disable watchdog mode.  \n4  Reserved. This bit is reserved and should be written as 0 by user code.  \n3:2 T2SCALE  Timer2 clock (32.768 kHz) p rescaler.  \n  00 = 32.768 kHz (default) . \n  01 = source clock/16.  \n  10 = source clock/256.  \n  11 =  reserved.  \n1 WDOGENI  Watchdog timer IRQ e nable.  \n  Set by user code to produce an IRQ instead of a reset when the watchdog reaches 0.  \n  Cleared by user code to disable the IRQ option.  \n0 T2PDOFF  Stop Timer2 when power -down is enab led. \n  Set by user code to stop Timer2 when the peripherals are powered down using Bit 4 in the POWCON0  MMR.  \n  Cleared by user  code to enable Timer2 when the peripherals are powered down using Bit 4 in the  \nPOWCON0  MMR.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 74 of 107 TIMER3  \nTimer3 is a general -purpose, 16 -bit, count up/count down \ntimer with a programmable prescaler . Timer3 can be clocked \nfrom the core clock or the low power 32.768 kHz oscillator with \na prescaler of 1, 16, 256, or 32,768.  \nTimer3 has a capture register (T3CAP) that can be triggered by \na selected IRQ source initial assertion. Once triggered, the \ncurren t timer value is copied to T3CAP , and the timer continues \nto run. This feature can be used to determine the assertion of an \nevent with increased accuracy.  \nThe Timer3 interface consists of five MMRs.  \n• T3LD, T3V AL, and T3CAP are 16 -bit registers and hold \n16-bit, unsigned integers. T3VAL and T3CAP are read \nonly.  \n• T3CLRI is an 8 -bit register. Writing any value to this \nregister clears the interrupt.  \n• T3CON is the configuration MMR , described in Table 83. \nTimer3 Load Registers  \nName:  T3LD  \nAddress:  0xFFFF0380  \nDefault value:  0x0000   \nAccess:  Read  and write  \nFunction:  T3LD is a 16-bit register that holds the \n16-bit value that is loaded into the counter.  \nTimer3 Clear Register  \nName:  T3CLRI  \nAddress:  0xFFFF038C  \nAccess:  Write only  \nFunction:  This 8 -bit, write -only MMR is written (with \nany value) by user code to clear the \ninterrupt.  Timer3 Value Register  \nName:  T 3 VA L  \nAddress:  0xFFFF0384  \nDefault  value:  0xFFFF  \nAccess:  Read only  \nFunction:  T3V AL is a 16 -bit register that holds the \ncurrent value of Timer3.  \nTime3 Capture Register  \nName:  T3CAP  \nAddress:  0xFFFF0390  \nDefault  value:  0x0000 \nAccess:  Read only  \nFunction:  This is a 16 -bit register that holds the 16- bit \nvalue captured by an enabled IRQ event.  \nTimer3 Control Register  \nName:  T3CON  \nAddress:  0xFFFF0388  \nDefault  value:  0x00000000 \nAccess:  Read and write  \nFunction:  This 32 -bit MMR configures the mode of \noperation of Timer3.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 75 of 107 Table 83. T3CON MMR Bit Designations \nBit Name  Description  \n31:18  Reserved.  \n17 T3CAPEN  Event enable b it. \n  Set by user to enable time capture of an event.  \n  Cleared by user to disable time capture of an event.  \n16:12 T3CAPSEL  Event select r ange, 0 to 17. The events are described in Table 78. \n11  Reserved.  \n10:9 T3CLKSEL  Clock select.  \n [00] = 32.768 kHz oscillator . \n [01] = 10.24 MHz/CD. \n [10] = 10.24  MHz. \n [11] = reserved . \n8 T3DIR  Count up. \n  Set by user for Timer3 to count up.  \n  Cleared by user for Timer3 to count down (default).  \n7 T3EN  Timer3 enable bi t. \n  Set by user to enable Timer3.  \n  Cleared by user to disable Timer3 (default).  \n6 T3MOD  Timer3 mode.  \n  Set by user to operate in periodic mode.  \n  Cleared by user to operate in free running mode  (default mode ). \n5:4  Reserved.  \n3:0 T3SCALE  Prescaler.  \n [0000]  = source clock/1 (default).  \n [0100 ] = source clock/16.  \n [1000]  = source clock/256.  \n [1111]  = source clock/32,768.  \n \nADuC7060/ADuC7061 Data Sheet\n \nRev. F | Page 76 of 107 PULSE-WIDTH MODULATOR \nPULSE-WIDTH MODULATOR GENERAL OVERVIEW \nEach ADuC7060/ ADuC7061 integrates a 6-channel pulse-\nwidth modulator (PWM) interface. The PWM outputs can be \nconfigured to drive an H-bridge or can be used as standard PWM outputs. On power-up, the PWM outputs default to H-\nbridge mode. This ensures that the motor is turned off by \ndefault. In standard PWM mode, the outputs are arranged as three pairs of PWM pins. Users have control over the period of each pair of outputs and over the duty cycle of each individual \noutput. \nTable 84. PWM MMRs  \nMMR Name Description \nPWMCON PWM control. \nPWM0COM0 Compare Register 0 for PWM Output 0 and \nPWM Output 1. \nPWM0COM1 Compare Register 1 for PWM Output 0 and PWM Output 1. \nPWM0COM2 Compare Register 2 for PWM Output 0 and \nPWM Output 1. \nPWM0LEN Frequency control for PWM Output 0 and PWM \nOutput 1. \nPWM1COM0 Compare Register 0 for PWM Output 2 and PWM Output 3. \nPWM1COM1 Compare Register 1 for PWM Output 2 and PWM Output 3. \nPWM1COM2 Compare Register 2 for PWM Output 2 and PWM Output 3. \nPWM1LEN Frequency control for PWM Output 2 and PWM \nOutput 3. \nPWM2COM0 Compare Register 0 for PWM Output 4 and \nPWM Output 5. \nPWM2COM1 Compare Register 1 for PWM Output 4 and PWM Output 5. \nPWM2COM2 Compare Register 2 for PWM Output 4 and \nPWM Output 5. \nPWM2LEN Frequency control for PWM Output 4 and PWM \nOutput 5. \nPWMCLRI PWM interrupt clear. In all modes, the PWMxCOMx MMRs control the point at \nwhich the PWM outputs change state. An example of the first \npair of PWM outputs (PWM0 and PWM1) is shown in Figure 26.  \nHIGH SIDE\n(PWM0)\nLOW SIDE\n(PWM1)\nPWM0COM2\nPWM0COM1\nPWM0COM0\nPWM0LEN\n07079-020 \nFigure 26. PWM Timing \nThe PWM clock is selectable via PWMCON with one of the \nfollowing values: UCLK divided by 2, 4, 8, 16, 32, 64, 128, or 256. The length of a PWM period is defined by PWMxLEN. \nThe PWM waveforms are set by the count value of the 16-bit \ntimer and the compare registers contents, as shown with the \nPWM0 and PWM1 waveforms in Figure 26.  \nThe low-side waveform, PWM1, goes high when the timer \ncount reaches PWM0LEN, and it goes low when the timer count reaches the value held in PWM0COM2 or when the \nhigh-side waveform (PWM0) goes low. \nThe high-side waveform, PWM0, goes high when the timer \ncount reaches the value held in PWM0COM0, and it goes low \nwhen the timer count reaches the value held in PWM0COM1. \nPWMCON Control Register \nName: PWMCON \nAddress: 0xFFFF0F80 \nDefault value: 0x0012 \nAccess: Read and write Function: This is a 16-bit MMR that configures the \nPWM outputs. \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 77 of 107 Table 85. PWMCON MMR Bit Designations \nBit Name  Description  \n15 Reserved  This bit is reserved. Do not write to this bit.  \n14 Sync Enables PWM synchronization.  \n  Set to 1 by user  so that all PWM counters are reset on the next clock edge after the detection of a high-to -low \ntransition on the P1.2/ SYNC pin.  \n  Cleared by user to ignore transitions on the P1.2/ SYNC  pin. \n13 PWM5INV  Set to 1 by user  to invert PWM5.  \n  Cleared by user to use PWM5 in normal mode.  \n12 PWM3 INV Set to 1 by user  to invert PWM3.  \n  Cleared by user to use PWM3 in normal mode.  \n11 PWM1INV  Set to 1 by user  to invert PWM1.  \n  Cleared by user to  use PWM1 in normal mode.  \n10 PWMTRIP  Set to 1 by user  to enable PWM trip interrupt. When the PWM  trip input (Pin P1.3/TRIP) is low, the PWMEN bit is \ncleared and an interrupt is generated.  \n  Cleared by user to disable the PWMTRIP interrupt.  \n9 ENA  If HOFF  = 0 and HMODE = 1.  Note  that, if  not in H -bridge mode, this bit has no effect.  \n  Set to 1 by user  to enable PWM outputs.  \n  Cleared by user  to disable PWM outputs.  \n  If HOFF = 1 and HMODE = 1, see  Table 86.  \n8:6 PWMCP[2:0]  PWM clock prescaler bits.  Sets the UCLK divider.  \n [000] = UCLK /2.  \n[001] = UCLK /4. \n[010] = UCLK /8. \n[011] = UCLK /16. \n[100] = UCLK /32. \n[101] = UCLK /64. \n[110] = UCLK /128. \n[111] = UCLK /256. \n5 POINV  Set to 1 by user  to invert all PWM outputs.  \n  Cleared by user to use PWM outputs as normal.  \n4 HOFF  High side of f.  \n  Set to 1 by user  to force PWM0 and PWM2 outputs high. This also forces PWM1 and PWM3 low.  \n  Cleared by user to use the PWM outputs as normal.  \n3 LCOMP  Load compare re gisters.  \n  Set to 1 by user  to load the internal compare registers with the values in PWMxCOMx  on the next transition of the \nPWM timer from 0x00 to 0x01. \n  Cleared by user to use the values previously stored in the internal compare registers.  \n2 DIR Direction control.  \n  Set to 1 by user  to enable PWM0 and PWM1 as the output signals while PWM2 and PWM3 are held low.  \n  Cleared by user to enable PWM2 and PWM3 as the output signals while PWM0 and PWM1 are held low.  \n1 HMODE  Enables H -bridge mode.1 \n  Set to 1 by user  to enable H -bridge mode and Bit 1 to Bit 5 of PWMCON.  \n  Cleared by user to operate the PWMs in standard mode.  \n0 PWMEN  Set to 1 by user  to enable all PWM outputs.  \n  Cleared by user to disable all PWM outputs.  \n \n1 In H -bridge mode, HMODE = 1. See Table 86 to determine  the PWM outputs.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 78 of 107 On power -up, PWMCON defaults to 0x 0012 (HOFF = 1 and \nHMODE = 1). All GPIO pins associated with the PWM are \nconfigured in PWM mode by default (see Table 86). Clear the \nPWM trip interrupt by writing any value to the PWMCLRI  MMR. Note that when using the PWM trip interrupt, clear the \nPWM interrupt before exiting the ISR. This prevents generation \nof multiple interrupts.  \nTable 86. PWM Output Selection  \nPWMCO N MMR1 PWM Outputs2 \nENA  HOFF  POINV DIR  PWM0  PWM1  PWM 2 PWM3  \n0 0 X X 1 1 1 1 \nX 1 X X 1 0 1 0 \n1 0 0 0 0 0 HS1 LS1 \n1 0 0 1 HS1 LS1 0 0 \n1 0 1 0 HS1 LS1 1 1 \n1 0 1 1 1 1 HS1 LS1 \n1 X is don’t care.   \n2 HS = high side, LS = low side.  \nTable 87. Compare Register s \nName  Address   Default Value  Access  \nPWM0COM0  0xFFFF0F84 0x0000 R/W  \nPWM0COM1  0xFFFF0F88 0x0000 R/W  \nPWM0COM2  0xFFFF0F8C  0x0000 R/W  \nPWM1COM0  0xFFFF0F94 0x0000 R/W  \nPWM1COM1  0xFFFF0F98 0x0000 R/W  \nPWM1COM2  0xFFFF0F9C  0x0000 R/W  \nPWM2COM0  0xFFFF0FA4  0x0000 R/W  \nPWM2COM1  0xFFFF0FA8  0x0000  R/W  \nPWM2COM2  0xFFFF0FAC 0x0000 R/W  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 79 of 107 PWM0COM0 Compare Register  \nName:  PWM0COM0  \nAddress:  0xFFFF0F84   \nDefault value:  0x0000  \nAccess:  Read and write  \nFunction:  PWM0 output pin go es high when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM0COM1 Compare Register  \nName:  PWM0COM1  \nAddress:  0xFFFF 0F88 \nDefault value:  0x0000  \nAccess:  Read  and w rite \nFunction:  PWM0 output pin go es low when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM0COM2 Compare Register  \nName:  PWM0COM2  \nAddress:  0xFFFF 0F8C \nDefault value:  0x0000  \nAccess:  Read  and write \nFunction:  PWM1 output pin go es low when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM0LEN Register  \nName:  PWM0LEN  \nAddress:  0xFFFF 0F90 \nDefault value:  0x0000 \nAccess:  Read and write \nFunction:  PWM1 output pin go es high when the PWM \ntimer reaches the value stored in this register.  PWM1COM0 Compare Register  \nName:  PWM1COM0  \nAddress:  0xFFFF 0F94 \nDefault value:  0x0000  \nAccess:  Read and write  \nFunction:  PWM2 output pin goes  high when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM1COM1 Compare Register  \nName:  PWM1COM1  \nAddress:  0xFFFF 0F98 \nDefault value:  0x0000  \nAccess:  Read  and write \nFunction:  PWM2 output pin goes  low when the PWM \ntimer reaches the coun t value stored in this \nregister.  \nPWM1COM2 Compare Register  \nName:  PWM1COM2  \nAddress:  0xFFFF 0F9C \nDefault value:  0x0000  \nAccess:  Read  and w rite \nFunction:  PWM3 output pin goes  low when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM1LEN  Register  \nName:  PWM1LEN  \nAddress:  0xFFFF 0FA0 \nDefault value:  0x0000 \nAccess:  Read  and w rite \nFunction:  PWM3 output pin goes  high when the PWM \ntimer reaches the value stored in this register.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 80 of 107 PWM2COM0 Compare Register  \nName:  PWM2COM0  \nAddress:  0xFFFF 0FA4 \nDefault value:  0x0000 \nAccess:  Read and write  \nFunction:  PWM4 output pin goes  high when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM2COM1 Compare Register  \nName:  PWM2COM1  \nAddress:  0xFFFF 0FA8 \nDefault value:  0x0000 \nAccess:  Read  and write \nFunction:  PWM4 output pin goes  low when the PWM \ntimer reaches the count value stored in this \nregister.  \nPWM2COM2 Compare Register  \nName:  PWM2COM2  \nAddress:  0xFFFF 0FAC  \nDefault value:  0x0000 \nAccess:  Read  and write \nFunction:  PWM5 output pin goes  low when the PWM \ntimer reaches the count value stored in this \nregister.  PWM 2LEN Register  \nName:  PWM2LEN   \nAddress:  0xFFFF 0FB0 \nDefault value:  0x0000  \nAccess:  Read  and write \nFunction:  PWM5 output pin  goes high when the PWM \ntimer reaches the value stored in this register.  \nPWMCLRI Register  \nName:  PWMCLRI   \nAddress:  0xFFFF 0FB8 \nDefault value:  0x0000 \nAccess:  Write only   \nFunction:  Write any value to this register to clear a \nPWM interrupt source. This register must be \nwritten to before exiting a PWM interrupt \nservice routine; otherwise, multiple interrupts \noccur . \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 81 of 107 UART SERIAL INTERFAC E \nEach  ADuC7060/ ADuC7061 feature s a 16450 -compatible \nUART. The UART is a full -duplex, universal, asynchronous \nreceiver/transmitter. A UART performs serial -to-parallel \nconversion on data characters re ceived from a peripheral device  \nand parallel -to-serial conversion  on data characters received from \nthe ARM7TDMI. The UART features a fractional divider that \nfacilitates high accuracy baud rate generation and a network \naddressable mode. The UART functionality is available on the \nP1.0/IRQ1/SIN/T0 and P1.1/SOUT  pins of the  ADuC7060 / \nADuC7061.  \nThe serial communication adopts an asynchronous protocol \nthat supports various word length s, stop  bits, and parity genera -\ntion options selectable in the configuration register.  \nBAUD RATE GENERATION \nThe ADuC7060 /ADuC 7061 features two methods of generating \nthe UART baud rate: normal 450 UART baud rate generation \nand ADuC7060/ ADuC7061 fractional divider.  \nNormal 450 UART Baud Rate Generation  \nThe baud rate is a divided version of the core clock using the \nvalue in COMDIV0 and COMDIV1 MMRs (16- bit value, \ndivisor latch ( DL)). The standard baud rate generator formula is  \nDLRate Baud××=216MHz24.10 (1) \nTable 88 lists common baud rate values.  \nTable 88. Baud Rate Using the Standard Baud Rate Generator  \nBaud Rate  DL Actual B aud Rate  % Error \n9600 0x21 9696 1.01%  \n19,200 0x11 18,824 1.96%  \n115,200 0x3 106,667 7.41%  \nADuC7060/ ADuC7061 Fractional Divider  \nThe fractional divider combine d with the normal baud rate \ngenerator al lows the generation of accurate  high speed baud rates.  \n/2\n/(M + N/2048)/16DL UARTCORE\nCLOCKFBEN\n07079-021 \nFigure 27. Fractional Divider Baud Rate Generation  Calculation of the baud rate usi ng a fractional divider is as \nfollows: \n)2048(2 16MHz24.10\nNM DLRate Baud\n+×××=  (2) \n2 16MHz24.10\n2048 ×××=+DL Rate BaudNM  \nTable 89 lists common baud rate values.  \nTable 89. Baud Rate Using the Fractional Baud Rate Generator  \nBaud Rate  DL M N Actual Baud Rate  % Error \n9600 0x21 1 21 9598.55 0.015%  \n19,200 0x10 1 85 19,203 0.015%  \n115,200 0x2 1 796 115,218 0.015%  \nUART REGISTER DEFINI TIONS  \nThe UART interface consists of the following 11  registers:  \nCOMTX: 8 -bit transmit register  \nCOMRX: 8 -bit receive register  \nCOMDIV0: divisor latch (low byte)  \nCOMDIV1: divisor latch (high byte)  \nCOMCON0: line control register  \nCOMCON1: line control register  \nCOMSTA0: line status register  \nCOMSTA1: line status register  \nCOMIEN0: interrupt enable register  \nCOMIID0: interrupt identification register  \nCOMDIV2: 16- bit fractional bau d divide register  \nCOMTX, COMRX, and COMDIV0 share the same address location. COMTX and COMRX can be accessed when Bit 7 in the COMCON0 register is cleared. COMDIV0  or COMDIV1 \ncan be accessed when Bit 7 of COMCON0  or COMCON1, \nrespectively,  is set.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 82 of 107 UART T ransmit Register   \nWrite to this 8 -bit register (COMTX) to transmit data using  \nthe UART.  \nCOMTX Register  \nName:  COMTX  \nAddress:  0xFFFF0700   \nAccess:  Write only  \nUART Receive Register   \nThis 8 -bit register (COMRX) is read to receive data transmitted \nusing the UART.  \nCOMRX Register  \nName:  COMRX  \nAddress:  0xFFFF0700  \nDefault  value : 0x00 \nAccess:  Read only  \nUART Divisor Latch Register 0  \nThis 8 -bit register (COMDIV0) contains the least significant \nbyte of the divisor latch that controls the baud rate at which the \nUART operates.  \nCOMDIV0 Register  \nName:  COMDIV0  \nAddress:  0xFFFF0700  \nDefault  value:  0x00 \nAccess:  Read  and write  UART Divisor Latch Register 1  \nThis 8 -bit register contains the most significant byte of the \ndivisor latch that controls the baud rate at which the UART \noperates.  \nCOMDIV1 Register  \nName:  COMDIV1  \nAddress:  0xFFFF0704  \nDefault  value:  0x00 \nAccess:  Read  and write  \nUART Control Register 0  \nThis 8 -bit register (COMCON0) controls the operation of the \nUART in conjunction with COMCON1.  \nCOMCON0 Register  \nName:  COMCON0  \nAddress:  0xFFFF070C  \nDefault  value : 0x00 \nAccess:  Read  and write  \n \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 83 of 107 Table 90. COMCON0 MMR Bit Designations \nBit Name  Description  \n7 DLAB  Divisor  latch acces s. \n  Set by user to enable access to the COMDIV0 and COMDIV1 registers.  \n  Cleared by user to disable access to COMDIV0 and COMDIV1 and enable access to COMRX, \nCOMTX, and COMIEN0.  \n6 BRK Set break.  \n  Set by user to force transmit  to 0.  \n  Cleared to operate in normal mode.  \n5 SP Stick parity. Set by user to force parity to defined values.  \n  1 if EPS = 1 and PEN = 1.  \n  0 if EPS = 0 and PEN = 1.  \n4 EPS Even parity select bit . \n  Set for even parity.  \n  Cleared for odd parity.  \n3 PEN  Parity enable bit.  \n  Set by user to transmit and check the parity bit.  \n  Cleared by user for no parity transmission or checking.  \n2 Stop  Stop bit. \n  Set by user  to transmit 1.5 stop bits if the word length is 5 bits, or 2 stop bits if the word length is 6  \nbits, 7 bits, or 8 bits. The receiver checks the first stop bit only, regardless of the number of stop bits \nselected.  \n  Cleared by user  to generate one stop bit in the transmitted data.  \n1:0 WLS  Word length selec t. \n  [00] = 5 bits.  \n  [01] = 6 bits.  \n  [10] = 7 bits.  \n  [11] = 8 bits.  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 84 of 107 UART Control Register 1  \nThis 8 -bit register controls the operation of the UART in \nconjunction with COMCON0.  \nCOMCON1 Register  \nName:  COMCON1  \nAddress:  0xFFFF0710  \nDefault  value:  0x00 \nAccess:  Read and write  \nTable 91. COMCON1 MMR Bit Designations \nBit Name  Description  \n7:5  Reserved bits. Not used.  \n4 LOOPBACK  Loopback. Set by user to enable \nloopback mode. In loopback mode, \nthe transmit pin  is forced high.  \n3:2  Reserved bits. Not used.  \n1 RTS Request to send.   \n  Set by user to force the RTS output to 0.  \n  Cleared by user to force the RTS \noutput to 1.  \n0 DTR  Data terminal read y.  \n  Set by user to force the DTR output to 0.  \n  Cleared by user to force the DTR output to 1.  \nUART Status Register 0  \nCOMSTA0 Register  \nName:  COMSTA0  \nAddress:  0xFFFF0714  \nDefault  value:  0x60 \nAccess:  Read only  \nFunction:  This 8 -bit read -only register reflects the \ncurrent status on the UART.  Table 92. COMSTA0 MMR Bit Designations \nBit Name  Description  \n7  Reserved.  \n6 TEMT  COMTX and shift register empty status bit.  \n  Set automatically if COMTX and the shift register are empty. This bit indicates that \nthe data has been transmitted, that is, no \nmore data is present in the shift register.  \n  Cleared automatically when writing to \nCOMTX.  \n5 THRE  COMTX empty status bit.  \n  Set automatically if COMTX is empty. \nCOMTX can be written as soon as this bit \nis set ; the previous data might not have \nbeen transmitted yet and can still be present in the shift register.  \n  Cleared automatically when writing to \nCOMTX.  \n4 BI Break indicator.  \n  Set when P1.0/IRQ1/SIN/T0 pin is held \nlow for more than the maximum word \nlength.  \n  Cleared automatically.  \n3 FE Framing error.  \n  Set when the stop bit is invalid.  \n  Cleared automatically.  \n2 PE Parity error.  \n  Set when a parity error occurs.  \n  Cleared automatically.  \n1 OE Overrun error.  \n  Set automatically if data is  overwritten \nbefore being read.  \n  Cleared automatically.  \n0 DR Data ready.  \n  Set automatically when COMRX is full.  \n  Cleared by reading COMRX.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 85 of 107 UART Status Register 1  \nCOMSTA1 Register  \nName:  COMSTA1  \nAddress:  0xFFFF0718  \nDefault  value:  0x00 \nAccess:  Read only  \nFunction:  COMSTA1 is a modem status register . \nTable 93. COMSTA1 MMR Bit Designations \nBit Name  Description  \n7:5  Reserved. Not used.  \n4 CTS  Clear to s end.  \n3:1  Reserved. Not used.  \n0 DCTS  Delta CTS.  \n  Set automatically if CTS changed state since \nCOMSTA1 was last read.  \n  Cleared automatically by reading COMSTA1.  \nUART Interrupt Enable Register 0  \nCOMIEN0 Register  \nName:  COMIEN0  \nAddress:  0xFFFF0704  \nDefault  value:  0x00 \nAccess:  Read  and write  \nFunction:  This  8-bit register enables and disables the \nindividual UART interrupt sources.  Table 94. COMIEN0 MMR Bit Designations \nBit Name  Description  \n7:4  Reserved. Not used.  \n3 EDSSI  Modem status interrupt enable b it.  \n  Set by user to enable generation of an interrupt if COMSTA 1[4] or COMSTA1[0]  are set.  \n  Cleared by user.  \n2 ELSI  Receive status interrupt enable bit.  \n  Set by user  to enable generation of an \ninterrupt if any of the COMSTA0[3:1] register \nbits are set.  \n  Cleared by user . \n1 ETBEI  Enable transmit buffer empty inter rupt.  \n  Set by user  to enable an interrupt when the \nbuffer is empty during a transmission ; that is, \nwhen COMSTA 0[5] is set.  \n  Cleared by user . \n0 ERBFI  Enable receive buffer full interrup t. \n  Set by user  to enable an interrupt when the \nbuffer is full during a reception.  \n  Cleared by user . \nUART Interrupt Identification Register 0  \nCOMIID0 Register  \nName:  COMIID0  \nAddress:  0xFFFF0708  \nDefault  value:  0x01 \nAccess:  Read only  \nFunction:  This 8 -bit register reflects the source of the \nUART interrupt.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 86 of 107 Table 95. COMIID0 MMR Bit Designations \nStatus  \nBits[2:1]  Bit 0  Priority  Definition  Clearing \nOperation  \n00 1  No interrupt   \n11 0 1 Receive line \nstatus \ninterrupt  Read \nCOMSTA0  \n10 0 2 Receive \nbuffer full \ninterrupt  Read COMRX  \n01 0 3 Transmit \nbuffer empty \ninterrupt  Write data to \nCOMTX or \nread COMIID0  \n00 0 4 Modem status \ninterrupt  Read \nCOMSTA1 \nregister  \nUART Fractional Divider Register  \nThis 16 -bit register (COMDIV2) controls the operation of the \nfractional divider for the ADuC7060/ ADuC7061. \nCOMDIV2 Register  \nName:  COMDIV2  \nAddress:  0xFFFF072C  \nDefault  value:  0x0000 \nAccess:  Read  and write  Table 96. COMDIV2 MMR Bit Designations \nBit Name  Description  \n15 FBEN  Fractional  baud rate generator enable bit . \n  Set by user  to enable the fractional baud \nrate generator.  \n  Cleared by user  to generate the baud rate \nusing the standard 450 UART baud rate \ngenerator.  \n14:13  Reserved.  \n12:11 FBM[1:0]  M. If FBM = 0, M = 4. See Equation 2 for the \ncalculation of the baud rate using a \nfractional divider and  Table 88 for common \nbaud rate values.  \n10:0 FBN[10:0]  N. See Equation 2 for the calculation of the \nbaud rate using a fractional divider and \nTable 88 for common baud rate values.  \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 87 of 107 I2C  \nEach  ADuC7060/ ADuC7061 incorporates an I2C peripheral \nthat can be configured as a fully I2C-compatible I2C bus m aster \ndevice or  as a fully I2C bus -compatible slave device. The two \npins used for data transfer, SDA and SCL, are configured in a \nwire -AND ’e d format that allows arbitration in a multimaster \nsystem. These pins require external pull -up resistors. Typical \npull-up resistor values are between 4.7 kΩ and  10 kΩ.  \nUsers program t he I2C bus peripheral  (addressed in the I2C bus \nsystem ). This ID can be modified any time that a transfer is not \nin progress. The user can configure the interface to respond to \nfour slave addresses.  \nThe transfer sequence of an I2C system consists of a master \ndevice initiating a transfer by generating a start condition while \nthe bus is idle. The master transmits the slave device address \nand the direction of the data transfer ( read or  write ) during the \ninitial address transfer. If the master does not lose arbitration \nand the slave acknow ledges, the data transfer is initiated . This \ncontinues until the master issues a stop condition and the bus \nbecomes idle.  \nThe I2C peripheral can be configured only as a master or a slave \nat any given time. The same I2C channel cannot simultaneously \nsupport  master and slave modes.  \nThe I2C interface on the ADuC7060/ ADuC7061 includes the \nfollowing features: \n• Support for  repea ted start cond itions. In master mode, the  \nADuC7060/ ADuC7061 can be programmed to generate a \nrepeated start. In slave m ode, the  ADuC7060/ ADuC7061 \nrecognize s repeated start conditions.  \n• In master and slav e mode s, the part recognizes both 7 -bit \nand 10 -bit bus addresses.  • In I2C master mode, the ADuC7060/ ADuC7061 support s \ncontinuous reads from a single slav e up to 512 bytes in a \nsingle transfer sequence.  \n• Clock stretching can be enabled by other devices on  \nthe bus without causing any issues with the ADuC7060/  \nADuC7061. However, the ADuC7060/ ADuC7061 cannot \nenable clock stretching.  \n• In slave mode, the  ADuC7060/ ADuC7061 can be \nprogrammed to return a no acknowledge  (NACK) . This \nallows the valid ation of checksum bytes at the end of I2C \ntransfers.  \n• Bus arbitration in master mode is supported.  \n• Internal and external loopback modes are supported for \nI2C hardware testing.  \n• The transmit and receive circuits in both master and slav e \nmode s contain 2 -byte FIFOs. Status bits are available to the \nuser to control these FIFOs.  \nCONFIGURING EXTERNAL  PINS FOR I2C \nFUNCTIONALITY  \nThe I2C function s of the P0.1/SCLK/SCL and P0.3/MOSI/SDA \npins of the  ADuC7060/ ADuC7061 device are P0.1 and P0.3. \nThe function of P0.1 is the I2C clock signal (SCL) and the \nfunction of P0.3 is the I2C data signal  (SDA) . To configure P0.1 \nand P0.3 for I2C mode, Bit  4 and Bit 12 of the GP0CON0 \nregister must be set to 1. Bit 1 of the GP0CON1 register must \nalso be set to 1 to enable I2C mod e.  \nNote that, to write to GP0CON1, the GP0KEY1 register must \nbe set to 0x7 immediat ely before writing to GP0CON1. Also, \nthe GP0KEY2 register must be set to 0x13 immediatel y after \nwriting to GP0CON1. The following code example shows this \nin detail:  \nGP0CON0 = BIT4 + BIT12;  // Select SPI/I2C alternative function for P0.1 and P0.3 \nGP0KEY1 = 0x7;   // Write to GP0KEY1 \nGP0CON1 = BIT1;  // Select I2C functionality for P0.1 and P0.3 \nGP0KEY2 = 0x13;  // Write to GP0KEY2 \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 88 of 107 SERIAL CLOCK GENERAT ION  \nThe I2C master in the system generates the serial clock for a \ntransfer. The master channel can be configured to operate in \nfast mode (400 kHz) or standard mode (100 kHz).  \nThe bit rate is defined in the I2CDIV MMR as follows:  \n)   (2  ) 2( DIVL DIVH +++=UCLK\nCLOCK SERIALff\n  \nwhere:  \nfUCLK is the  clock before the clock divider.  \nDIVH  is the  high period of the clock.  \nDIVL  is the  low period of the clock.  \nThus, for 100 kHz operation  \nDIVH  = DIVL  = 0x33  \nand for 400 kHz  \nDIVH  = 0x0A, DIVL  = 0x0F  \nThe I 2CDIV register corresponds to DIVH:DIVL.  \nI2C BUS ADDRESSES  \nSlave Mode  \nIn slave mode, the I2CID0, I2CID1, I2CID2, and I2CID3 \nregisters contain the device IDs. The device compares the four \nI2CIDx registers to the address byte received from the bus \nmaster . To be correctly addressed, the 7  MSBs of any  ID register \nmust be identical to the 7  MSBs of the first received address \nbyte. The least significant bit  of the ID registers (the transfer \ndirection bit) is ignored in the process of address recognition.  \nThe ADuC7060 /ADuC7061 also su pport s 10-bit addressing \nmode. When Bit 1 of I2C SCON (ADR10EN bit) is set to 1,  then \none 10 -bit address is supported in slave mode and is stored in \nthe I2CID0 and I2CID1 registers . The 10 -bit address is derived \nas follows: \nI2CID0[0] is the  read/w rite bit  and is not  part of the I2C \naddress.  I2CID0[7:1] = Address Bits [6:0]. \nI2CID1[2:0] = Address Bits [9:7]. \nI2CID1[7:3] must be set to 11110 b. \nMaster Mode  \nIn m aster mode, the I2CADR0 register is programmed with the  \nI2C address  of the device .  \nIn 7-bit address mode, I2CADR0[7 :1] are set to the device \naddress. I2CADR0[0] is the read/wr ite bit.  \nIn 10 -bit address mode, t he 10 -bit address is created as follows: \nI2CADR0[7:3] must be set to 11110 b. \nI2CADR0[2:1] = Address Bits[9: 8]. \nI2CADR1[7:0] = Address Bits[7:0].  \nI2CADR0[0] is the read/w rite bit.  \nI2C REGISTERS  \nThe I2C peripheral interface consists overall of 19 MMRs. Nine  \nof these are master related only, nine  are slave related only , and \none MMR  is common to both master and sl ave m odes.  \nI2C Master Registers  \nI2C Master Control, I2CMCON Register  \nName:  I2CMCON  \nAddress:  0xFFFF0900  \nDefault \nvalue:  0x0000 \nAccess:  Read and write  \nFunction:  This 16 -bit MMR configures the I2C peripheral in \nmaster mode.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 89 of 107 Table 97. I2CMCON MMR Bit Designations  \nBit Name  Description  \n15:9  Reserved. These bits are reserved and should not be written to . \n8 I2CMCENI  I2C transmission complete interrupt enable bit . \n  Set this bit to enable an interrupt on detecting a stop condition on the I2C bus.  \n  Clear this interrupt source.  \n7 I2CNACKENI  I2C no acknowledge (NACK)  received interrupt enable bit.  \n  Set this bit to enable interrupts when the I2C master receives a no acknowledge.  \n  Clear this interrupt source.  \n6 I2CALENI  I2C arbitration lost interrupt enable bit.  \n  Set this bit to enable interrupts when the I2C master did not  gain control of the I2C bus.  \n  Clear this interrupt source.  \n5 I2CMTENI  I2C transmit interrupt enabl e bit.  \n  Set this bit to enable interrupts when the I2C master has transmitted a byte . \n  Clear this interrupt source.  \n4 I2CMRENI  I2C receive interrupt enable b it. \n  Set this bit to enable interrupts when the I2C master receives data . \n  Cleared by user  to disable interrupts when the I2C master is receiving data . \n3  Reserved. A value of 0 should be written to this bit.   \n2 I2CILEN  I2C internal loopback enable.  \n  Set this bit to enable loopback test mode. In this mode, the SCL and SDA signals are connected internally to their \nrespective input signals.  \n  Cleared by user to disable loopback mode.  \n1 I2CBD  I2C master backoff disable bit.  \n  Set this bit to allow the  device to compete for control of the bus even if another device is currently driving a start \ncondition.  \n  Clear this bit to back off until the I2C bus becomes free.  \n0 I2CMEN  I2C master enable bit.  \n  Set by user to enable the I2C master mode.  \n  Cleared  to disable the I2C master mode.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 90 of 107 I2C Master Status , I2CMSTA, Register  \nName:  I2CMSTA  \nAddress:  0xFFFF0904  \nDefault value:  0x0000 \nAccess:  Read  only  \nFunction:  This 16 -bit MMR is the I2C status register in m aster mode.  \nTable 98. I2CMSTA MMR Bit Designations  \nBit Name  Description  \n15:11  Reserved. These bits are reserved.  \n10 I2CBBUSY  I2C bus busy status bit.  \n  This bit is set to 1 when a s tart condition is detected on the I2C bus.  \n  This bit is cleared when a s top condition is detected on the bus . \n9 I2CMRxFO  Master  receive FIFO overflow.  \n  This bit is set to 1 when a byte is written to the  receive FIFO when it is already full.  \n  This bit is cleared in all other conditions.  \n8 I2CMTC  I2C transmission complete status bit . \n  This bit is set to 1 when a transmission is complete between the master  and the s lave with  which it was \ncommunicating.  If the I2CMCENI bit in I2CMCON is set, an interrupt is  generated when this bit is set.  \n  Clear this interrupt source.  \n7 I2CMN D I2C master no acknowl edge data bi t  \n  This bit is set to 1 when a no acknowledge  condition is received by the master in response to a data write transfer.  If \nthe I2CNACKENI bit in I2CMCON is set, an interrupt is  generated when this bit is set.  \n  This bit is  cleared in all other conditions.  \n6 I2CMBUSY  I2C master busy status b it. \n  Set to 1 when the m aster is busy processing a transaction.  \n  Cleared if the m aster is ready or if another m aster device has control  of the bus . \n5 I2CAL  I2C arbitration lost status b it. \n  This bit is set to 1 when the I2C master d oes not gain control of the I2C bus. If the I2CALENI bit in I2CMCON is set, an \ninterrupt is generated when this bit is set.  \n  This bit is  cleared in all other conditions.  \n4 I2CMNA  I2C master no acknowle dge address bi t. \n This bit is  set to 1 when a no acknowledge condition is received by the m aster in response to an a ddress.  If the \nI2CNACKENI bit in I2CMCON is set, an interrupt is  generated when this bit is set.  \n This bit is cleared  in all other conditions.  \n3 I2CMRXQ  I2C master receive request bit . \n  This bit is set to 1 wh en data enters the  receive FIFO. If the I2CMRENI in I2CMCON is set, an interrupt is  generated.  \n  This bit is  cleared in all other conditions.  \n2 I2CMTXQ  I2C master transmit request bit.  \n  This bit  goes  high if the  transmit FIFO is empty or contains only one  byte and the master  has transmitted an a ddress \n+ write. If the I2CMTENI bit in I2CMCON is set, an interrupt is generated when this bit is set.  \n  This bit is cleared in all other conditions.  \n1:0 I2CMTFSTA  I2C master  transmit FIFO status bi ts. \n  [00] = I2C master  transmit FIFO  empty . \n  [01] = 1 byte in m aster  transmit FIFO . \n  [10] = 1 byte in ma ster transmit FIFO . \n  [11] = I2C master  transmit FIFO full. \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 91 of 107 I2C Master Receive, I2CMRX,  Register  \nName:  I2CMRX  \nAddress:  0xFFFF0908  \nDefault  value:  0x00 \nAccess:  Read  only  \nFunction:  This 8 -bit MMR is the I2C master r eceive \nregister . \nI2C Master Transmit , I2CMTX, Register  \nName:  I2CMTX  \nAddress:  0xFFFF090C  \nDefault  value:  0x00 \nAccess:  Write  only  \nFunction:  This 8 -bit MMR is the I2C master tran smit \nregister . \nI2C Master  Read Count , I2CMCNT0,  Register  \nName:  I2CMCNT0  \nAddress:  0xFFFF0910  \nDefault  value:  0x0000 \nAccess:  Read  and write \nFunction:  This 16 -bit MMR holds the required number \nof bytes when the m aster begins a r ead \nsequence from a s lave device.  \nTable 99. I2CMCNT0 MMR Bit Designations \nBit Name  Description  \n15:9  Reserved.  \n8 I2CRECNT  Set this bit if more  than 256 bytes are \nrequired from the s lave.  \n  Clear this bit when reading 256 bytes or  \nfewer . \n7:0 I2CRCNT  These eight  bits hold the number of bytes \nrequired during a slave read sequence, \nminus 1. If only a single byte is required, set \nthese bits t o 0. I2C Master Current Read Count , I2CMCNT1,  Register  \nName:  I2CMCNT1  \nAddress:  0xFFFF0914  \nDefaul t value:  0x00 \nAccess:  Read  only  \nFunction:  This 8 -bit MMR holds the number of bytes \nreceived so far during a r ead sequence with a \nslave device.  \nI2C Address 0 , I2CADR0,  Register  \nName:  I2CADR0  \nAddress:  0xFFFF0918  \nDefault  value:  0x00 \nAccess:  Read  and write \nFunction:  This 8 -bit MMR holds the 7 -bit slave address \nand the read/wri te bit when the m aster begins \ncommunicating  with a slave.  \nTable 100. I2CADR0 MMR in 7 -Bit Address Mode \nBit Name  Description  \n7:1 I2CADR  These bits contain the  7-bit address of the \nrequired s lave device.  \n0 R/W Bit 0 is the read/wr ite bit.  \n  When this bit = 1, a read sequence is requested.  \n  When this bit = 0, a write sequence is requested.  \nTable 101.  I2CADR0 MMR in 10 -Bit Address M ode \nBit Name  Description  \n7:3  These bits must be set to [11110 b] in 10 -bit \naddress mode.  \n2:1 I2CMADR  These bits contain ADDR[9: 8] in 10 -bit \naddressing mode . \n0 R/W  Read/ write bit.  \n  When this bit = 1,  a read sequence is \nrequested.  \n  When this bit = 0, a write sequence is \nrequested.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 92 of 107 I2C Address 1 , I2CADR1,  Register  \nName:  I2CADR1  \nAddress:  0xFFFF091C  \nDefault  value:  0x00 \nAccess:  Read  and write \nFunction:  This 8 -bit MMR is used in 10 -bit addressing \nmode  only. This register contains the least \nsignificant byte of the address.  \nTable 102.  I2CADR1 MMR in 10 -Bit Address M ode \nBit Name  Description  \n7:0 I2CLADR  These bits contain ADDR[7 :0] in 10-bit \naddressing mode.  I2C Master Clock  Control,  I 2 C D I V,  Register  \nName:  I2CDIV  \nAddress:  0xFFFF0924  \nDefault  value:  0x1F1F  \nAccess:  Read  and write \nFunction:  This MMR controls the frequency of the I2C \nclock generated by the m aster on to the SCL \npin. For  further details, see the Serial Clock \nGeneration  section.  \nTable 103.  I2CDIV MMR Bit Designations \nBit Name  Description  \n15:8 DIVH  These bits control the duration of the h igh \nperiod of SCL.  \n7:0 DIVL  These bits control the duration of the low period \nof SCL. \nI2C Slave Registers  \nI2C Slave Control, I2CSCON, Register  \nName:  I2CSCON  \nAddress:  0xFFFF0928  \nDefault  value:  0x0000 \nAccess:  Read  and write  \nFunction:  This 16 -bit MMR configures the I2C peripheral \nin slave mode.  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 93 of 107 Table 104. I2CSCON MMR Bit Designations  \nBit Name  Description  \n15:11  Reserved bits.  \n10 I2CSTXENI  Slave transmit interrupt ena ble bit.  \n  Set this bit to enable an interrupt after a slave  transmits a byte.  \n  Clear this interrupt source.  \n9 I2CSRXENI  Slave  receive interrupt enable bit. \n  Set this bit to enable an interrupt after the slave  receives data.  \n  Clear this interrupt source.  \n8 I2CSSENI  I2C stop condition detected  interrupt ena ble bit . \n  Set this bit to enable an interrupt on detecting a stop condition on the I2C bus.  \n  Clear this interrupt source.  \n7 I2CNACKEN  I2C no acknowledge enable bit.  \n  Set this bit to no acknowledge  the next byte in the transmission sequence.  \n  Clear this bit to let the h ardware control the acknowledge /no acknowledge sequence.  \n6  Reserved. A value of 0 should be written to this bit.  \n5 I2CSETEN  I2C early transmit interrupt enable bit.  \n  Setting this bit enables a transmit request interrupt just after the positive edge of SCL during the read bit \ntransmission.  \n  Clear this bit to enable a transmit request interrupt just after the negative edge of SCL during the read bit \ntransmission.  \n4 I2CGCCLR  I2C general call status and ID clear bit.  \n  Writing a 1 to this bit clears the general call status and ID bits in the I2CSSTA register.  \n  Clear this bit at all other times.  \n3 I2CHGCEN  Hardware general call enable. When this bit and Bit 2 are set, and having received a general call (Address 0x00) \nand a data byte, the device checks the contents of the I2CALT against the receive register. If the contents match, \nthe device has received a ha rdware general call. This is used if a device needs urgent attention from a master \ndevice without knowing which master it needs to turn to. This is a “to whom it may concern” call. The ADuC7060/  \nADuC7061 watches for these addresses. The device that requires attention embeds its own address into the \nmessage. All masters listen, and the one that can handle the device contac ts its slave and acts appropriately. The \nLSB of the I2CALT register should always be written to 1, as per the I2C January 2000 bus specification.  \n2 I2CGCEN  General call enable bit. Set this bit to enable the slave device to acknowledge an I2C general call, Address 0x00 \n(write). The device then recognizes a data bit. If it receives a 0x06 (reset and write programmable part of the slave \naddress by hardware) as the data byte, the I2C interface resets as per the I2C January 2000 bus specification. This \ncom mand can be used to reset an entire I2C system. If it receives a 0x04 (write programmable part of the slave \naddress by hardware) as the data byte, the general call interrupt status bit sets on any general call. The user must \ntake corrective action by repro gramming the device address.  \n1 ADR10EN  I2C 10-bit address mode.  \n  Set to 1 to enable 10 -bit address mode.  \n  Clear to 0 to enable normal address mode.  \n0 I2CSEN  I2C slave enable bit.  \n  Set by user to enable I2C slave mode.  \n  Clear to disable I2C slave mode.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 94 of 107 I2C Slave Status , I2CSSTA,  Register  \nName:  I2CSSTA  \nAddress:  0xFFFF092C  \nDefault  value:  0x0000 \nAccess:  Read  and write \nFunction:  This 16 -bit MMR is the I2C status register in s lave mode.  \nTable 105. I2CSSTA MMR Bit Designations  \nBit Name  Description  \n15  Reserved bit.  \n14 I2CSTA  This bit is se t to 1 if  a start condition followed by a matching address is detected, a start byte (0x01) is received, or \ngeneral calls are enabled and a general call code of 0x00 is received.  \n  This bit is cleared on receiving a stop condition  \n13 I2CREPS  This bit is set to 1 if a  repeated sta rt condition is detected.  \n  This bit is cleared on receiving a stop condition. A read of the I2CSSTA register also clears this bit.  \n12:11 I2CID[1:0]  I2C address matching register. These bits indicate which I2CIDx register matches the received address.  \n  [00] = received address matches I2CID0 .  \n  [01] = received address matches I2CID1 . \n  [10] = received address matches I2CID2 . \n  [11] = received address matches I2CID3 . \n10 I2CSS I2C stop condition after start de tected bit.  \n  This bit is set to 1 when a s top condition is detected after a previous s tart and matching address.  When the \nI2CSSENI bit in I2CSCON is set, an interrupt is  generated.  \n  This bit is cleared by reading this register.  \n9:8 I2CGCID[1:0]  I2C general c all ID bits. \n  [00] = n o general c all received.  \n  [01] = general call reset and program address.  \n  [10] = general program address.  \n  [11] = general call matching alternative ID.  \n  Note that these bits are not cleared by a general call reset command.  \n  Clear  these bits by writing a 1  to the I2CGCCLR bit in I2CSCON.  \n7 I2CGC  I2C general call statu s bit . \n  This bit is set to 1 if the slave  receives a general call co mmand of any type.  If the command received was a r eset \ncommand, then all registers return to their default states . If the command received was a hardware general ca ll, \nthe receive FIFO  holds the second  byte of the command , and this  can be compared with the I2CALT register.  \n  Clear this bit by writing a 1  to the I2CGCCLR bit in I2CSCON. \n6 I2CSBUSY  I2C slave busy status bit. \n  Set to 1 when the s lave receives a s tart condition. \n  Cleared by hardware if  the received address does not match any of the I2CIDx registers , the slave  device receives \na stop condition , or a repeated start address does  not match any of the I2CIDx registers . \n5 I2CSNA  I2C slave no acknowledge data bit.  \n  This bit is  set to 1 when the s lave respond s to a bus address with a no acknowledge . This bit is asserted  under the \nfollowing conditions:  if a no acknowledge was returned because there was no data in the transmit  FIFO  or if the  \nI2CNACKEN bit was set in the I2CSCON register.  \n  This bit is  cleared in all other conditions.  \n4 I2CSRxFO  Slave  receive FIFO overflow.  \n  This bit is set to 1 when a byte is written to the  receive FIFO  when it is already full.  \n  This bit is  cleared in all other conditions.  \n3 I2CSRXQ  I2C slave receive r equest bit . \n This bit is set to 1 when the  receive FIFO  of the slave  is not empty.  This bit cause s an interrupt to occur if the \nI2CSRXENI bit in  I2CSCON is set. \n The receive FIFO  must be read or flushed to clear this bit . \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 95 of 107 Bit Name  Description  \n2 I2CSTXQ  I2C slave transmit request bit . \n  This bit is set to 1 when the slave receives a m atching address followed by a read. If the I2CSETEN bit in I2CSCON  \nis =0,  this bit go es high just after the negative edge of SCL during the read bit  transmission. If the I2CSETEN bit in \nI2CSCON is =1, this bit go es high just after the positive edge of SCL during the r ead bit  transmission. This bit \ncause s an interrupt to occur if the I2CSTXENI bit in  I2CSCON is set. \n  This bit is  cleared in all other conditions.  \n1 I2CSTFE  I2C slave FIFO underflow s tatus bit. \n  This bit go es high if the  transmit  FIFO is empty when a master  requests data from the slave . This bit is asserted at \nthe rising edge of SCL during the r ead bit.  \n  This bit is  cleared in all other conditions.  \n0 I2CETSTA  I2C slave early transm it FIFO status bit . \n  If the I2CSETEN bit in I2CSCON is =0, this bit go es high i f the slave  transmit FIFO is empty.  If the I2CSETEN bit in \nI2CSCON =  1, this bit goes  high just after the positive edge of SCL during the w rite bit  transmission. This bit \nasserts once only for a transfer.  \n  This bit is cleared after being read.  \nI2C Slave Receive, I2CSRX , Register  \nName:  I2CSRX  \nAddress:  0xFFFF0930  \nDefault  value:  0x00 \nAccess:  Read  only  \nFunction:  This 8 -bit MMR is the I2C slave receive register . \nI2C Slave Transmit , I2CSTX,  Register  \nName:  I2CSTX  \nAddress:  0xFFFF0934  \nDefaul t value:  0x00 \nAccess:  Write  only  \nFunction:  This 8 -bit MMR is the I2C slave tra nsmit \nregister . I2C Hardware General Call Recognition, I2CALT,  Register  \nName:  I2CALT  \nAddress:  0xFFFF0938  \nDefault  value:  0x00 \nAccess:  Read  and write \nFunction:  This 8 -bit MMR is used with hardware ge neral \ncalls when the I2CSCON Bit 3 is set to 1. This \nregister is used in cases where a master  is \nunable to generate an  address for a slave  and, \ninstead , the slave must generate the address  for \nthe master.  \nI2C Slave  Device ID , I2CIDx,  Registers \nName:  I2CIDx \nAddress es: 0xFFFF093C = I2CID0  \n 0xFFFF0940 = I2CID1  \n 0xFFFF0944 = I2CID2  \n 0xFFFF0948 = I2CID3  \nDefault  value:  0x00 \nAccess:  Read  and write \nFunction:  These 8 -bit MMRs are programmed with the \nI2C bus IDs of the slave. See the I 2C Bus \nAddresses  section for further details.  \n \n \n  \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 96 of 107 I2C Common R egisters  \nI2C FIFO Status , I2CFSTA,  Register  \nName:  I2CFSTA  \nAddress:  0xFFFF094C  \nDefault  value:  0x0000 \nAccess:  Read  and write \nFunction:  This 16-bit MMR contain s the status of the \nreceive/transmit  FIFOs in both master and \nslave mode s. Table 106. I2CFSTA MMR Bit Designations  \nBit Name  Description  \n15:10  Reserved bits. \n9 I2CFMTX  Set th is bit to 1 to flush the master  \ntransmit FIFO . \n8 I2CFSTX  Set this bit to 1 to flush the slave  transmit \nFIFO . \n7:6 I2CMRXSTA  I2C master  receive FIFO  status bits . \n  [00] = FIFO e mpty . \n  [01] = byte written to FIFO. \n  [10] = one  byte in FIFO. \n  [11] = FIFO full. \n5:4 I2CMTXSTA  I2C master  transmit FIFO status bits . \n  [00] = FIFO empty. \n  [01] = byte written to FIFO. \n  [10] = one  byte in FIFO. \n  [11] = FIFO f ull. \n3:2 I2CSRXSTA  I2C slave  receive FIFO  status bits . \n  [00] = FIFO empty  \n  [01] = byte written to FIFO  \n  [10] = one  byte in FIFO  \n  [11] = FIFO f ull \n1:0 I2CSTXSTA  I2C slave  transmit FIFO  status bi ts. \n  [00] = FIFO e mpty . \n  [01] = byte written to FIFO. \n  [10] = one  byte in FIFO. \n  [11] = FIFO full. \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 97 of 107 SERIAL PERIPHERAL IN TERFACE  \nThe ADuC7060 /ADuC7061 integrates a complete hardware \nserial peripheral interface (SPI) on chip. SPI is an indus try \nstandard, synchronous  serial interface that allows eight bits of \ndata to be synchronously transmitted and simultaneously \nreceived, that is, full duplex up to a maximum bit rate of \n2.56 Mbps.  \nThe SPI port can be configured for master or slave operation \nand typically consists o f four pins: MISO, MOSI, SCLK , and SS. \nMISO (MASTER IN, SLA VE OUT) PIN  \nThe MISO pin is configured as an input line in master mode \nand an output line in slave mode. The MISO line on the master \n(data in) should be connected to the MISO lin e in the slave \ndevice (data out). The data is transferred as byte wide (8 -bit) \nserial data, most significant bit  first.  \nMOSI (MASTER OUT, SL AVE IN) PIN  \nThe MOSI pin is configured as an output line in master mode and an input line in slave mode. The MOSI line on the master \n(data out) should be connected to the MOSI line in the slave device (data in). The data is transferred as byte wide (8 -bit) \nserial data , most significant bit  first.  \nSCLK (SERIAL CLOCK I/O) PIN  \nThe master serial clock (SCL) synchronize s the data being \ntransmitted and received through the MOSI SCLK period. \nTherefore, a byte is transmitted/received after eight SCLK periods. T he SCLK pin is c onfigured as an output in master \nmode and as an input in slave mode.  \nIn master mode, polarity and phase of the clock are controlled by the SPICON register, and the bit rate is defined in the \nSPIDIV register as follows: \n) 1(2 SPIDIVffUCLK\nCLOCK SERIAL+×=\n \nThe maximum sp eed of the SPI clock is independent o f the \nclock divider bits.  In slave  mode, the SPICON register must be configured with \nthe phase and polarity of the expected input clock. The slave accepts data from an external master up to 5.12 Mb ps. \nIn both master and  slave modes , data transmit on one ed ge of \nthe SCLK signal and sample  on the other. Therefore, it is \nimportant that the polarity and phase be  configured the same \nfor the master and slave devices.  \nSLAVE  SELECT ( P0.0/ SS) INPUT PIN  \nIn SPI slave mode, a transfer is initiated by the assertion of SS \non the P0.0/ SS pin, which is an active low input signal. The SPI \nport then transmits and receives 8 -bit data until the transfer is \nconcluded b y deassertion of SS. In slave mode, SS is always an \ninput.  \nIn SPI master mode, SS is an active low output signal.  It asserts \nitself automatically at the beginning of a transfer and dea sserts \nitself upon completion.  \nCONFIGURING EXTERNAL  PINS FOR SPI \nFUNCTIONALITY  \nThe SPI pins of the  ADuC7060/ ADuC7061 device are \nrepresented by the P0[0 :3] function of the following pins:  \n• P0.0 /SS is the slave chip sel ect pin. In slave mode, this pin \nis an input and must be driven low by the master . In \nmaster  mode, this pin is an output and goes  low at the \nbeginning of a transfer and high at the end of a transfer.  \n• P0.1 /SCLK/SCL is the SCL K pin. \n• P0.2 /MISO  is the master  in, slave  out (MISO) pin.  \n• P0.3 /MOSI/SDA  is the master  out, slave  in (MOSI) pin.  \nTo configure P0 .0 to P0.3 for SPI mode, B it 0, Bit 4, Bit 8, and \nBit 12 of the GP0CON0  register must be set to 1. Bit 1 of the \nGP0CON1  must be set to 1.  Note that to write to GP0CON1, \nthe GP0KEY1 register must be set to 0x7 immediatel y before \nwriting to GP0CON1. Also, the GP0KEY2 register must be set \nto 0x13 immediat ely after writing to GP0CON1. The following \ncode example shows this in detail:  \nGP0CON0 = BIT0 + BIT4 + BIT8 + BIT12; //Select SPI/I2C alternative function for P0[0...3] \nGP0KEY1 = 0x7;       //Write to GP0KEY1 \nGP0CON1 &=~ BIT1;    //Select SPI functionality for P0.0 to P0.3 \nGP0KEY2 = 0x13;    //Write to GP0KEY2 \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 98 of 107 SPI REGISTERS  \nThe following MMR registers control the SPI interface: SPISTA, SPIRX, SPITX, SPIDIV , and SPICON.  \nSPI Status Register  \nSPISTA Register  \nName:  SPISTA  \nAddress:  0xFFFF0A00   \nDefault  value:  0x00000000 \nAccess:  Read  only  \nFunction:  This 32 -bit MMR contains the status of the SPI interface in both  master and slave mo des. \nTable 107. SPISTA MMR Bit Designations  \nBit Name  Description  \n15:12  Reserved bits.  \n11 SPIREX  SPI receive FIFO  excess bytes present. This bit is set when there are more bytes in the receive FIFO  than \nindicated  in the SPI MDE bits in SPICON . \n  This bit is cleared when the number of bytes in the FIFO is equal to or less than the number in SPI MDE.  \n10:8 SPIRXFSTA[2:0]  SPI receive FIFO  status bi ts. \n  [000] =  receive FIFO  is empty . \n  [001] = 1 valid byte in the FIFO . \n  [010] = 2 valid byte s in the FIFO . \n  [011] = 3 valid byte s in the FIFO . \n  [100] = 4 valid byte s in the FIFO . \n7 SPIFOF SPI receive FIFO  overflow status bit . \n  Set when the  receive FIFO  was  already full when new data was loaded to the FIFO.  This bit generates  an \ninterrupt except when SPIRFLH is set in SPICON.  \n  Cleared when the SPISTA register is read.  \n6 SPIRXIRQ  SPI receive IRQ status bit.  \n  Set when a receive interrupt occurs.  This bit is set when SPITMDE in SPICON is cleared and the required \nnumber of bytes has  been received.  \n  Cleared when the SPISTA register is read.  \n5 SPITXIRQ  SPI transmit  IRQ status bit. \n Set whe n a transmit interrupt occurs. This bit is set when SPITMDE in SPICON is set and the required number \nof bytes has  been transmitted.  \n Cleared when the SPISTA register is read.  \n4 SPITXUF  SPI transmit FIFO  underflow . \n  This bit is set when a t ransmit is initiated without any valid data in the  transmit FIFO . This bit generates  an \ninterrupt except when SPITFLH is set in SPICON.  \n  Cleared when the SPISTA register is read.  \n3:1 SPITXFSTA[2:0]  SPI transmit  FIFO status bits . \n  [000] =  transmit FIFO is empty . \n  [001] = 1 valid byte s in the FIFO.  \n  [010] = 2 valid byte s in the FIFO.  \n  [011] = 3 valid byte s in the FIFO.  \n  [100] = 4 valid byte s in the FIFO.  \n0 SPIISTA  SPI interrupt status b it. \n  Set to 1 when an SPI based interrupt occurs.  \n  Cleared after reading SPISTA.  \n \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 99 of 107 SPI Receive Register  \nSPIRX Register  \nName:  SPIRX  \nAddress:  0xFFFF0A04  \nDefault  value:  0x00 \nAccess:  Read  only  \nFunction:  This 8 -bit MMR is the SPI r eceive register . \nSPI Transmit Register  \nSPITX Register  \nName:  SPITX  \nAddress:  0xFFFF0A08  \nDefault  value:  0x00 \nAccess:  Write  only  \nFunction:  This 8 -bit MMR is the SPI t ransmit register . \nSPI Baud Rate Selection Register  \nSPIDIV Register  \nName:  SPIDIV  \nAddress:  0xFFFF0A0C  \nDefault  value:  0x1B \nAccess:  Write  only  \nFunction:  This 8 -bit MMR is the SPI b aud rate selection  \nregister . Table 108. SPIDIV MMR Bit Designations \nBit Description  \n7:6 Reserved.  \n5:0 SPI Baud rate setting:  \n) SPIDIV+1(×2f= fUCLK\nCLOCK SERIAL \nSPI Control Register  \nSPICON Register  \nName:  SPICON  \nAddress:  0xFFFF0A10  \nDefault  value:  0x0000 \nAccess:  Read  and write \nFunction:  This 16 -bit MMR configures the SPI peripheral \nin both master and sl ave mode s. \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 100 of 107 Table 109.  SPICON MMR Bit Designations  \nBit Name  Description  \n15:14 SPIMDE  SPI IRQ mode bits. These bits are configure d when transmit /receive interrupts occur in a transfer . \n  [00] =  transmit interrupt occurs when 1 byte has been transferred. Receive interrupt occurs when one  or more bytes \nhave been received into the FIFO.  \n  [01] =  transmit interrupt occurs when 2 bytes have  been transferred. Receive interrupt occurs when two  or more \nbytes have been received into the FIFO.  \n  [10] =  transmit interrupt occurs when 3 bytes have  been transferred. Receive interrupt occurs when thr ee or more \nbytes have been received into the FIFO.  \n  [11] =  transmit interrupt occurs when 4 bytes have been transferred. Receive interrupt occurs when the  receive FIFO  \nis full or 4 bytes are present.  \n13 SPITFLH  SPI transmit FIFO flush enable bit.  \n  Set this bit to flush the  transmit FIFO . This bit does not clear itself and should be toggled if a single flush is required.  If \nthis bit is left high, then either the last transmitted value or 0x00  is transmitted , depending on the SPIZEN bit.  Any \nwrites to th e transmit FIFO are ignored while this bit is set.  \n  Clear this bit to disable  transmit FIFO  flushing.  \n12 SPIRFLH  SPI receive FIFO  flush enable bit.  \n  Set this bit to flush the  receive FIFO . This bit does not clear itself and should be toggle d if a single flush is required. If \nthis bit is set , all incoming data is ignored and no interrupts are generated.  If set and SPITMDE = 0, a read of the  \nreceive FIFO  initiates  a transfer.  \n  Clear this bit to disable  receive FIFO  flushing.  \n11 SPICONT  Continuous transfer enabl e. \nSet by user  to enable continuous transfer. In master mode, the transfer continues until no valid data is available in the  \ntransmit register. SS is asserted and remains asserted for the duration of each 8 -bit serial transfer until  the t ransmit \nregister is empty.  \nCleared by user  to disable continuous transfer. Each transfer consists of a single 8 -bit serial transfer.  If valid data exists \nin the SPITX register, then a new transfer is initiated after a stall period of one  serial clock cycle.  \n10 SPILP  Loopback enable bit.  \n  Set by user  to connect MISO to MOSI and test software.  \n  Cleared by user  to be in normal mode.  \n9 SPIOEN  Slave MISO  output enable bit.  \n  Set this bit for MISO to operate as normal.  \n  Clear this bit to disable the output driver on the MISO pin. The MISO pin is  open dr ain when this bit is clear ed. \n8 SPIROW SPIRX overflow overwrite ena ble. \n  Set by user , the valid data in the receive  register is overwritten by the new serial byte received.  \n  Cleared by user, the new serial byte received is discarded.  \n7 SPIZEN  SPI transmit z eros when  transmit FIFO is empty.  \n  Set this bit to transmit 0x00  when there is no valid data in the  transmit FIFO . \n  Clear this bit to transmit the last transmitted value when there is no valid data in the  transmit FIFO . \n6 SPITMDE  SPI transfer and interrupt mode.  \n  Set by user to initiate transfer with a write to the SPITX register. Interrupt occurs only when  the t ransmit  FIFO  is empty.  \n  Cleared by user to initiate transfer with a read of the SPI register. Interrupt occurs only when the r eceive  FIFO is full.  \n5 SPILF  LSB first transfer enable bi t.  \n  Set by user , the LSB is transmitted first . \n  Cleared by user , the MSB is transmitted first.  \n4 SPIWOM  SPI wired or mod e enable bit . \n  Set to 1 to enable the open- drai n data o utput enable. External pull -ups are required on data out pins.  \n  Clear for normal output levels.  \n3 SPICPO  Serial  clock polarity mode bit.  \nSet by user , the serial clock idles high . \nCleared by user , the serial clock idles low.  \n2 SPICPH  Serial clock phase mode bit.  \n  Set by user , the serial clock  pulses at the beginning of each serial bit transfer.  \n  Cleared by user , the serial clock pulses at the end of each serial bit transfer.  \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 101 of 107 Bit Name  Description  \n1 SPIMEN  Master  mode  enable  bit. \n  Set by user  to enable master mode . \n  Cleared by user  to enable slave mode . \n0 SPIEN  SPI enable bit.  \n  Set by user  to enable the SPI . \n  Cleared by user  to disable the SPI.  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 102 of 107 GENERAL -PURPOSE I/O  \nThe ADuC7060 /ADuC7061 feature s up to 16 general -purpose \nbidirectional input/output (GPIO) pins. In general, many of the \nGPIO pins have multiple functions that ar e configur able by user \ncode. By default, the GPIO pins are configured in GPIO mode. All \nGPIO pins have an internal pull -up resistor with a drive capability \nof 1.6  mA.  \nAll I/O pins are 3.3  V tolerant, meaning that the GPIOs support \nan input voltage of 3.3  V.   When the  ADuC7060/ ADuC7061 enter s power -saving mode, \nthe GPIO pins retain their state.  \nThe GPIO pins are grouped into three port  buses. \nTable 110 lists all the GPIO pins and their al ternative functions. \nA GPIO pin  alternative function can be selected by writing to \nthe correct bits of the GPxCON register.  \nTable 110. GPIO Multif unction Pin Descriptions \nPort  Configuration via GPxCON  Including GP0CON0  \nPin Mnemonic  00 01 \n0 P0.0/ SS GPIO  SS (SPI slave  select) . \n P0.1/SCLK/SCL  GPIO  SCLK/SCL ( serial clock/SPI clock) . \n P0.2 /MISO  GPIO  MISO (SPI —master in/slave o ut). \n P0.3/MOSI/SDA  GPIO  MOSI (SPI —master out/slave i n). \n P0.4/IRQ0/PWM1  GPIO/IRQ0  PWM1 (PWM Out put 1) . \n P0.5/CTS  GPIO  CTS. UART c lear to s end pin.  \n P0.6/RTS  GPIO  RTS. UART r equest  to send pin.  \n1 P1.0/IRQ1/SIN/T0  GPIO/IRQ1  SIN (s erial input) . \n P1.1/SOUT  GPIO  SOUT ( serial output) . \n P1.2/SYNC  GPIO  PWM  sync (PWM sync input pin) . \n P1.3/TRIP  GPIO  PWM  trip (PWM trip input pin) . \n P1.4/PWM2  GPIO  PWM2 (PWM Out put 2). \n P1.5/PWM3  GPIO  PWM3 (PWM Out put 3) . \n P1.6/PWM4  GPIO  PWM4 (PWM Out put 4) . \n2 P2.0/IRQ2/PWM0 /EXTCLK  GPIO/IRQ2 /EXTCLK  PWM0 (PWM Out put 0) . \n P2.1/IRQ3/PWM5  GPIO/IRQ3  PWM5 (PWM Out put 5) . \nGPxCON REGISTERS  \nGPxCON are the Po rt x (where x is  0, 1, or 2) control registers, which select the function of each pin of Port x as described in  Table 112. \nTable 111.  GPxCON Registers  \nName   Address  Default Value  Access  \nGP0CON0  0xFFFF0D00  0x00000000 R/W  \nGP1CON  0xFFFF0D04 0x00000000 R/W  \nGP2CON  0xFFFF0D08 0x00000000 R/W  \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 103 of 107 Table 112. GPxCON MMR Bit Designations  \nBit Description  \n31:30 Reserved.  \n29:28 Reserved.  \n27:26 Reserved.  \n25:24 Select s the  function of the P0.6/RTS and P1.6/PWM p ins. \n23:22 Reserved.  \n21:20 Select s the function of the P0.5/CTS and P1.5/PWM3  pins. \n19:18 Reserved.  \n17:16 Select s the  function of the P0.4/IRQ0/PWM1 and \nP1.4/PWM2 pins. \n15:14  Reserved.  \n13:12 Select s the  function of the P0.3/MOSI/SDA and P1.3/TRIP  \npins. \n11:10 Reserved.  \n9:8 Select s the  function of the P0.2/MISO and P1.2/SYNC pins. \n7:6 Reserved.  \n5:4 Select s the  function of the P0.1/SCLK/SCL, P1.1/SOUT, \nand P2.1/IRQ3/PWM5 pins. \n3:2 Reserved.  \n1:0 Select s the  function of the P0.0/ SS, P1.0/IRQ1/SIN/T0, \nP2.0/IRQ2/PWM0/EXTCLK  pins. \nGPxDAT REGISTERS  \nGPxDAT  are Port x configuration and data registers. They con -\nfigure the direction of the GPIO pins of Port x, set the output \nvalue for the pins that are configured as output, and store the \ninput value of the pins that are configured as input.  \nTable 113. GPxDAT Registers  \nName  Address  Default Value  Access  \nGP0DAT  0xFFFF0D20  0x000000XX  R/W  \nGP1DAT  0xFFFF0D30 0x000000XX  R/W  \nGP2DAT  0xFFFF0D40 0x000000XX  R/W  \nTable 114. GPxDAT MMR Bit Designations \nBit Description  \n31:24 Direction of the  data.  \n Set to 1 by user  to configure the GPIO pin as an output.  \n Cleared to 0 by  user  to configure the GPIO pin as an input.  \n23:16 Port x data ou tput.  \n15:8 Reflect the s tate of Port x pins at reset (read only).  \n7:0 Port x  data input (read only) . GPxSET REGISTERS  \nGPxSET are data set Port x registers.  \nTable 115. GPxSET Registers  \nName  Address  Default Value  Access  \nGP0SET  0xFFFF0D24 0x000000XX  W \nGP1SET  0xFFFF0D34 0x000000XX  W \nGP2SET  0xFFFF0D44 0x000000XX  W \nTable 116. GPxSET MMR Bit Designations \nBit Description  \n31:24 Reserved.  \n23:16 Data Port x set bi t.  \n Set to 1 by user to set bit on Port x; also sets the \ncorresponding bit in the GPxDAT MMR.  \n Cleared to 0 by user; does not affect the data output . \n15:0 Reserved.  \nGPxCLR REGISTERS  \nGPxCLR are data clear Port x registers.  \nTable 117. GPxCLR Registers  \nName  Address  Default Value  Access  \nGP0CLR  0xFFFF0D28 0x000000XX  W \nGP1CLR  0xFFFF0D38 0x000000XX  W \nGP2CLR  0xFFFF0D48 0x000000XX  W \nTable 118. GPxCLR MMR Bit Designations \nBit Description  \n31:24 Reserved.  \n23:16 Data Port x clear bit.  \n Set to 1 by user to clear the bit on Port x; also clears the corresponding bit in the GPxDAT  MMR.  \n Clea red to 0 by user; does not affect the data output.  \n15:0 Reserved.  \nGPxPAR REGISTERS  \nThe GPxPAR registers p rogram the parameters for  Port 0 , Port 1, \nand Port 2 . Note that the GPxDAT MMR must always be written  \nafter changing the GPxPAR MMR.  Note  that it is not possible to \ndisable the internal pull -up resistor on P0.2.  \nTable 119. GPxPAR Registers \nName  Address  Default Value  Access  \nGP0PAR  0xFFFF0D2C  0x00000000  R/W   \nGP1PAR  0xFFFF0D3C 0x00000000 R/W  \nGP2PAR  0xFFFF0D4C 0x00000000 R/W  \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 104 of 107 Table 120. GPxPAR MMR Bit Designations \nBit Name  Description  \n31:15  Reserved.  \n23:16  GPL[7:0]  General I/O port pin functionality lock \nregisters.  \n  GPL[7:0] = 0, normal operation.  \n  GPL[7:0] = 1, for each GPIO pin, if this bit is \nset, writing to the corresponding bit in \nGPxCON or GPxDAT register bit has  no \neffect.  \n15:8 GPDS[7:0]  Drive strength configuration. This bit is \nconfigurable.  \n  GPDS[x] = 0, maximum source current is 2  mA. \n  GPDS[x] = 1, maximum source current is 4  mA. \n7:0 GPPD[7:0]  Pull-Up Disable P ort x[7:0].  \n  GPPD[x] = 0, pull -up resistor is active.  \n  GPPD[x] = 1, pull -up resistor is disabled.  \nGP0CON1 Control Registers  \nThe GP0CON1 write values are as follows: GP0KEY1  = 0x7, \nGP0CON1 = user value, and GP0KEY2 = 0x13.  \nName:  GP0CON1  \nAddress:  0xFFFF0468  \nDefault  value:  0x00 \nAccess:  Read and write  \nFunction:  This register controls the P0.0, P0.1, P0.2 , and \nP0.3 functionality of the multifunction GPIO \npins.  \nTable 121. GP0CON1 Write Sequence  \nName  Value  \nGP0KEY1   0x7 \nGP0CON1   User value  \nGP0KEY2   0x13 Table 122. GP0CON1 MMR Bit Designations  \nBit Name  Description   \n7:2 Reserve\nd These bits must always be set to 0.  \n1 SPII2CSEL This bit configures the P0.0 to P0.3 functions \nin I\n2C or SPI mode. Note that Bit 0 of GP0CON1 \nmust be set to 0 for this bit to work.  \n  To select the P0.0, P0.1, P0.2, and P0.3 \nfunctions  in SPI mode, clear this bit to 0.  \n  To select the P0.0, P0.1, P0.2, and P0.3 \nfunctions  in I2C mode, set this bit to 1.  \n  This bit is cleared by default.  \n0 ADCSEL  This bit configures the P0.0 to P0.3 functions  \nas GPIO pins or as ADC input pins.  \n  To enable P0.0 , P0.1, P0.2 and P0.3 functions \nas ADC inputs, set this bit to 1.  \n  To enable P0.0 , P0.1, P0.2, and P0.3 functions \nas digital I/O, clear this bit to 0.  \n  This bit is cleared by default.  \n \nName  GP0KEY1  \nAddress:  0xFFFF0464  \nDefault  value:  0xXXXX  \nAccess:  Write only  \nFunction:  When writing to GP0CON1, the value of 0x07 \nmust be written to this register in the \ninstruction immediately before writing to \nGP0CON1.  \n \nName:  GP0KEY2  \nAddress:  0xFFFF046C  \nDefault  value:  0xXXXX   \nAccess:  Write  only  \nFunction:  When writing to GP0CON1, the value of 0x13 \nmust be written to this register in the instruction  \nimmediately after writing to GP0CON1 . \n \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 105 of 107 HARDWARE DESIGN CONS IDERATIONS  \nPOWER SUPPLIES  \nThe ADuC7060 /ADuC7061 operational power supply voltage \nrange is 2.3 75 V to 2.6 25  V.  Separate analog and digital power \nsupply pins ( AVDD  and DV DD, respectively) allow AVDD  to \nbe kept relatively free of noisy digital signals often present on \nthe system DV DD line. In this mode, the part can also operate \nwith split supplies; that is, it can use different voltage levels for \neach supply. For example, the system ca n be designed to \noperate wi th a DVDD  voltage level of 2.6 V, whereas  the AVDD  \nlevel can be at 2.5 V or vice versa. A typical split supply \nconfiguration is shown in Figure 28. \nADuC7060/\nADuC7061\n0.1µFANALOG\nSUPPLY\n10µF\nAVDD\nDVDD\nDGNDAGND0.1µF+–DIGITAL\nSUPPLY\n10µF+–\n07079-022 \nFigure 28. External Dual Supply Connections  \nAs an alternative to providing two separate power supplies, the \nuser can reduce noise on AVDD  by placing a small series \nresistor and/or ferrite bead between AVDD  and DVDD, and then \ndecoupling  AVDD  separately to ground. An example of this \nconfiguration is shown in Figure 29. With this configuration, \nother analog circuitry  (such  as op amps, voltage reference, and \nothers) can be powered  from the AVDD  supply line as well.  ADuC7060/\nADuC7061\n0.1µFANALOG\nSUPPLY\n10µF\nAVDD\nDVDD\nDGNDAGND0.1µFDIGITAL\nSUPPLYBEAD\n10µF+–\n07079-023 \nFigure 29. External Single Supply Connections  \nNotice that in both Figure 28 and Figure 29, a large value (10  µF) \nreservoir capacitor sits on DVDD , and a separ ate 10 µ F \ncapacitor sits on AVDD . In addition, local , small  value (0.1 µF) \ncapacitors are  located at each AVDD  and DVDD pin of the chip. \nAs per standard design practice, be sure to include all of these capacitors and ensure  that the smaller capacitors are close to the  \nAVDD  pin with trace lengths as short as possible. Connect the \nground terminal of each of these capacitors directly to the \nunderlying ground plane.  \nNote that the analog and digital ground pins on the  ADuC7060 / \nADuC7061 must be referenced to the same system ground \nreference point at all times.  \nFinally, note that , when the DVDD  supply reaches  1.8 V , it must \nramp to 2.25 V in less than 128  ms. This is a requirement of the \ninternal power -on reset circuitry.\n \n \n \nADuC7060/ADuC7061 Data Sheet \n \nRev. F | Page 106 of 107 OUTLINE DIMENSIONS \n \nCOMPLIANT TO JEDEC STANDARDS MO-220-WHHD.1\n0.50\nBSC\n3.50 REFBOTTOM VIEW TOP VIEWPIN 1\nINDIC ATOR\n32\n9 16172425\n8EXPOSED\nPADPIN 1\nINDIC ATOR\n3.65\n3.50 SQ\n3.45\nSEATING\nPLANE0.05 MAX\n0.02 NOM\n0.20 REFCOPLANARITY\n0.080.30\n0.25\n0.185.105.00 SQ4.90\n0.800.750.700.50\n0.40\n0.300.25 MIN\n04-02-2012- A\n \nFigure 30. 32 -Lead Lead Frame Chip Scale Pack age [LFCSP] \n5 mm × 5 mm Body  and 0.75 mm Package Height  \n(CP-32-11) \nDimensions shown in millimeters  \n \nFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TO\nTHE PINCONFIGURATION AND\nFUNCTION DESCRIPTI ONS\nSECTION OFTHIS DATA SHEET.\nCOMPLIANT TOJEDEC STANDARDS MO-220-WKKD.1\n0.50\nBSC\nBOTTOMVIEW TOPVIEWPIN1\nINDICA TOR7.00\nBSC SQ\n48\n13 24253637\n12EXPOSED\nPADPIN1\nINDICATOR\n4.25\n4.10 SQ\n3.95\n0.45\n0.40\n0.35\nSEATING\nPLANE0.800.750.70\n0.05 MAX\n0.02 NOM0.20 MIN\n0.20 REFCOPLANARITY\n0.080.30\n0.23\n0.18\n08-16- 2010-B\n \nFigure 31. 48-Lead Lead Fr ame Chip Scale Package [LFCSP]  \n7 mm × 7 mm Body  and 0.75 mm Package Height  \n(CP-48-5) \nDimensions shown in millimeters  \n \nData Sheet ADuC7060/ADuC7061 \n \nRev. F | Page 107 of 107 COMPLIANT TO JEDEC S TANDARDS MS-026-BBCTOP VIEW\n(PINS DOWN)1\n12\n1325\n243637 48\n0.27\n0.22\n0.170.50\nBSC\nLEAD PITCH1.60\nMAX0.75\n0.60\n0.45\nVIEW  APIN 1\n0.20\n0.091.45\n1.40\n1.35\n0.08\nCOPLANARIT Y\nVIEW  A\nROTATED 90° CCWSEATING\nPLANE7°\n3.5°\n0° 0.15\n0.059.20\n9.00 SQ\n8.80\n7.20\n7.00 SQ\n6.80\n051706- A\n \nFigure 32. 48-Lead Low Profile Quad Flat Package [LQFP]  \n(ST- 48) \nDimensions shown in millimeters  \n \nORDERING GUIDE  \nModel1 Temperature Range Package Description  Package \nOption  Ordering  \nQuantity  \nADuC7060BCPZ32 −40°C to +125°C 48-Lead Lead Fr ame Chip Scale Package [LFCSP ] CP-48-5  \nADuC7060BCPZ32-RL  −40°C to +125°C 48-Lead Lead Fr ame Chip Scale Package [LFCSP ] CP-48-5 2,500 \nADuC7060BSTZ32  −40°C to +125°C  48-Lead Low Profile Quad Flat Package [LQFP]  ST-48  \nADuC7060BSTZ32-RL  −40°C to +125°C 48-Lead Low Profile Quad Flat Package [LQFP]  ST-48 2,000 \nADuC7061BCPZ32 −40°C to +125°C 32-Lead Lead Frame Chip Scale Package [LFCSP]  CP-32-11  \nADuC7061BCPZ32 -RL −40°C to +125°C  32-Lead Lead Frame Chip Scale Package [LFCSP]  CP-32-11 5,000  \nEVAL -ADuC7060QSPZ   ADuC7060 Quick Start Plus Development System    \nEVAL -ADuC7061MKZ  ADuC7061 Quick Start Evaluation System    \n \n1 Z = RoHS Compliant Part.  \n \n \n \n \n©2009 –2017  Analog Devices, Inc. All rights reserved. Trademarks and   \n registered trademarks are the property of their respective owners.  \n  D07079- 0-2/17(F)  \n \n'}]
!==============================================================================!
### Component Summary: ADUC7061BCPZ32-RL

#### Key Characteristics and Specifications:
- **Voltage Ratings**: 
  - AVDD/DVDD: 2.5 V (±5%)
- **Current Ratings**: 
  - Active mode: 2.74 mA (@ 640 kHz, ADC0 active)
  - 10 mA (@ 10.24 MHz, both ADCs active)
- **Power Consumption**: 
  - Active mode: 2.74 mA (typical)
  - Power-down mode: 55 µA (typical)
- **Operating Temperature Range**: 
  - -40°C to +125°C
- **Package Type**: 
  - 32-lead LFCSP (5 mm × 5 mm)
- **Special Features**: 
  - Dual 24-bit Sigma-Delta ADCs
  - ARM7TDMI microcontroller core
  - On-chip Flash/EE memory (32 kB)
  - Programmable gain amplifier (PGA) with gain settings from 1 to 512
  - Integrated temperature sensor
  - Multiple communication interfaces (SPI, UART, I2C)
- **Moisture Sensitive Level (MSL)**: 
  - MSL Level 1 (JEDEC J-STD-020E)

#### Description:
The **ADUC7061BCPZ32-RL** is a low-power, precision analog microcontroller that integrates a dual Sigma-Delta ADC system, an ARM7TDMI microcontroller core, and Flash/EE memory on a single chip. It is designed for high-performance data acquisition applications, featuring high-resolution ADCs capable of processing both single-ended and differential inputs. The device is optimized for low power consumption, making it suitable for battery-operated devices.

#### Typical Applications:
- **Industrial Automation**: Used in process control systems for monitoring and controlling industrial processes.
- **Precision Sensing Systems**: Ideal for applications requiring accurate measurements, such as temperature, pressure, and strain gauge sensors.
- **Smart Sensors**: Supports 4 mA to 20 mA loop-based smart sensors, enabling remote monitoring and control.
- **Data Acquisition Systems**: Suitable for applications that require high-resolution data collection and processing.
- **Medical Devices**: Can be utilized in portable medical equipment for precise measurements and monitoring.

This component is particularly valuable in environments where precision and reliability are critical, such as industrial and medical applications, due to its robust design and extensive feature set.