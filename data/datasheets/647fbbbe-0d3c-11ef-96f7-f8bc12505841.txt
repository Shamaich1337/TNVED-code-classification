[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADSP-BF538BBCZ-4F8 production of ANALOG DEVICES from the text:Blackfin and the Blackfi n logo are registered tradem arks of Analog Devices, Inc.Blackfin\nEmbedded Processor\nADSP-BF538 /ADSP-BF538F\nRev. E Document Feedback\nInformation furnished by Analog Devices is  believed to be accurate and reliable.\nHowever, no responsibility is assumed by Analog Devices for its use, nor for anyinfringements of patents or other rights of third parties that may result from its use.Specifications subject to change without no tice. No license is granted by implication\nor otherwise under any patent or patent rights of Analog Devices. Trademarks andregistered trademarks are the property of their respective owners. One Technology Way, P.O. Box 9106, Norwood, MA  02062-9106 U.S.A.\nTel: 781.329.4700             ©2013 Analog Devices, Inc. All rights reserved.\nTechnical Support www.analog.comFEATURES\nUp to 533 MHz high performance Blackfin processor \nTwo 16-bit MACs, two 40-bit ALUs, four 8-bit video ALUs, \n40-bit shifter\nRISC-like register and instruction model for ease of \nprogramming and compil er friendly support\nAdvanced debug, trace, an d performance monitoring\nWide range of operating voltages (see Operating Conditions \non Page 23 )\nProgrammable on-chip voltage regulator316-ball Pb-free CSP_BGA package\nMEMORY\nUp to 148K bytes of on-chip memory (see Table 1 on Page 3 )\nOptional 8M bit parallel flash with boot optionMemory management unit providing memory protectionExternal memory controller with glueless support \nfor SDRAM, SRAM, flash, and ROM\nFlexible memory booting options from SPI and external \nmemoryPERIPHERALS\nParallel peripheral interface (PPI) supporting ITU-R 656 video \ndata formats\n4 dual-channel, full -duplex synchronous serial ports, \nsupporting 16 stereo I2S channels\n2 DMA controllers supporting 26 peripheral DMAs4 memory-to-memory DMAsController area network (CAN) 2.0B controller3 SPI-compatible portsThree 32-bit timer/counters with PWM support3 UARTs with support for IrDA2 TWI controllers compatible with I\n2C industry standard\nUp to 54 general-purpose I/O pins (GPIO)Real-time clock, watchdog timer, and 32-bit core timer\nOn-chip PLL capable of frequency multiplicationDebug/JTAG interface\nFigure 1. Function al Block DiagramB\nUART0\nSPORT0-1WATCHDOG\nTIMER\nRTC\nSPI0TIMER0-2PPI\nSPI1-2\nSPORT2-3UART1-2GPIO\nPORT\nFGPIO\nPORT\nDGPIO\nPORT\nC\nGPIO\nPORT\nE EXTERNAL PORT\nFLASH, SDRAM CONTROL\nBOOT ROMJTAG  TEST AND EMULATION VOLTAGE  REGULATOR\nDMA\nCONTROLLER0L1\nINSTRUCTION\nMEMORYL1\nDATA\nMEMORYINTERRUPT\nCONTROLLERPERIPHERAL ACCESS BUS\nDMA ACCESS BUS 0DMA\nCORE\nBUS 0DMA\nEXTERNAL\nBUS 1\nPERIPHERAL ACCESS BUSTWI0-1\nCAN 2.0B\nGPIO\n8M BIT PARALLEL FLASH\n(SEE TABLE 1)DMA\nCONTROLLER1DMA ACCESS BUS 1DMA\nCORE\nBUS 1DMA\nEXTERNAL\nBUS 0\n16\nRev. E | Page 2 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTABLE OF CONTENTS\nFeatures ................................................................. 1\nMemory ................................................................ 1Peripherals ............................................................. 1General Description ................................................. 3\nLow Power Architecture ......................................... 3System Integration ................................................ 3ADSP-BF538/ADSP-BF538F Processor Peripherals ....... 3\nBlackfin Processor Core .......................................... 4Memory Architecture ............................................ 5DMA Controllers .................................................. 8Real-Time Clock ................................................... 9Watchdog Timer .................................................. 9Timers ............................................................... 9Serial Ports (SPORTs) ..........................................  10Serial Peripheral Interface (SPI) Ports ......................  10\n2-Wire Interface .................................................  10\nUART Ports ......................................................  11General-Purpose Ports .........................................  11Parallel Peripheral Interface ...................................  11Controller Area Network (CAN) Interface ................  12Dynamic Power Management ................................  13Voltage Regulation ..............................................  14Clock Signals ...................................................... 14\nBooting Modes ................................................... 16Instruction Set Description .................................... 16Development Tools .............................................. 16Additional Information ........................................ 18Related Signal Chains ........................................... 18\nPin Descriptions .................................................... 19Specifications ........................................................ 23\nOperating Conditions ........................................... 23Electrical Characteristics ....................................... 25Absolute Maximum Ratings ................................... 27ESD Sensitivity ................................................... 27Package Information ............................................ 27Timing Specifications ........................................... 28Output Drive Currents ......................................... 47\nTest Conditions .................................................. 49\nThermal Characteristics ........................................ 53\n316-Ball CSP_BGA Ball Assignment .. ......................... 54\nOutline Dimensions ................................................ 57\nSurface-Mount Design .......................................... 57\nOrdering Guide ..................................................... 58\nREVISION HISTORY\n11/13—Rev. D to Rev. EUpdated Development Tools ....................................  16\nAdded footnote 3 to Operating Conditions ..................  23\nUpdated Table 33  in Serial Port Timing .......................  38\nAdded Timer Clock Timing ......................................  44\nAdded missing timing specifications to Table 39  in \nTimer Cycle Timing ...............................................  45\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 3 of 60 | November 2013GENERAL DESCRIPTION\nThe ADSP-BF538/ADSP-BF538F pr ocessors are members of \nthe Blackfin® family of products, incorporating the Analog \nDevices, Inc./Intel Micro Signal  Architecture (MSA). Blackfin \nprocessors combine a dual-MAC st ate-of-the-art signal process-\ning engine, the advantages of a clean, orthogonal RISC-like \nmicroprocessor instruction set,  and single-instruction, multi-\nple-data (SIMD) multimedia capabilities into a single \ninstruction set architecture.\nThe ADSP-BF538/ADSP-BF538F pr ocessors are completely \ncode compatible with other Blackfin processors, differing only with respect to performance, pe ripherals, and on-chip memory. \nSpecific performance, peripheral s, and memory configurations \nare shown in Table 1 .\nBy integrating a rich set of indu stry-leading system peripherals \nand memory, Blackfin processors are the platform of choice for \nnext generation applications that require RISC-like program-\nmability, multimedia support , and leading edge signal \nprocessing in one integrated package.\nLOW POWER ARCHITECTURE\nBlackfin processors provide wo rld class power management and \nperformance. They are designed using a low power and low voltage methodology and featur e dynamic power management, \nwhich is the ability to vary bo th the voltage and frequency of \noperation to significantly lowe r overall power consumption. \nVarying the voltage and frequenc y can result in a substantial \nreduction in power consumption, compared with just varying \nthe frequency of operation. This translates into longer battery \nlife and lower heat dissipation.SYSTEM INTEGRATION\nThe ADSP-BF538/ADSP-BF538F pr ocessors are highly inte-\ngrated system-on-a-ch ip solutions for the next generation of \nconsumer and industrial applications including audio and video \nsignal processing. By combining advanced memory configura-\ntions, such as on-chip flash memory, industry-standard interfaces, and a high performanc e signal processing core, cost-\neffective solutions can be quickly developed, without the need \nfor costly external components. The system peripherals include \nthree UART ports, three SPI port s, four serial ports (SPORTs), \none CAN interface, two 2-wire interfaces (TWI), four general-\npurpose timers (three with PWM capability), a real-time clock, a watchdog timer, a parallel peri pheral interface (PPI), and gen-\neral-purpose I/O pins.\nADSP-BF538/ADSP-BF538F PROCESSOR \nPERIPHERALS\nThe ADSP-BF538/ADSP-BF538F proc essors contai n a rich set \nof peripherals connected to the core via several high bandwidth \nbuses, providing flexibility in system configuration as well as \nexcellent overall system perfor mance (see the block diagram 1). \nThe general-purpose peripheral s include functions such as \nUART, timers with PWM (pulse-width modulation) and pulse \nmeasurement capability, general- purpose I/O pins, a real-time \nclock, and a watchdog timer. Th is set of functions satisfies a \nwide variety of typical system support needs and is augmented \nby the system expansion capabilities  of the device. In addition to \nthese general-purpose peripherals,  the processors contain high \nspeed serial and parallel ports fo r interfacing to a variety of \naudio, video, and modem codec functions. A CAN 2.0B control-ler is provided for automotive and industrial control networks. \nAn interrupt controller manages interrupts from the on-chip \nperipherals or from external sources. Power management con-\ntrol functions tailor the perfor mance and power characteristics \nof the processors and system to many application scenarios.\nAll of the peripherals, except for general-purpose I/O, CAN, \nTWI, real-time clock, and timers, are supported by a flexible DMA structure. There are also  four separate memory DMA \nchannels dedicated to data transfers between the processor’s \nvarious memory spaces, including external SDRAM and asyn-chronous memory. Multiple on-chip buses running at up to \n133 MHz provide enough bandwidth to keep the processor core \nrunning with activity on all of the on-chip and external peripherals.\nThe ADSP-BF538/ADSP-BF538F proc essors include an on-chip \nvoltage regulator in support of  the processor’s dynamic power \nmanagement capability. The volt age regulator provides a range \nof core voltage levels from V\nDDEXT . The voltage regulator can be \nbypassed as needed. Table 1. Processor Features\nFeature ADSP-BF538 ADSP-BF538F8\nSPORTs 4 4\nUARTs 3 3\nSPI 3 3TWI 2 2\nCAN 1 1\nPPI 1 1Internal 8M bit \nParallel Flash—1\nInstruction \nSRAM/Cache16K bytes 16K bytes\nInstruction SRAM 64K bytes 64K bytes\nData SRAM/Cache 32K bytes 32K bytesData SRAM 32K bytes 32K bytes\nScratchpad 4K bytes 4K bytes\nMaximum \nFrequency533 MHz \n1066 MMACS533 MHz \n1066 MMACS\nPackage Option BC-316 BC-316\nRev. E | Page 4 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nBLACKFIN PROCESSOR CORE\nAs shown in Figure 2 on Page 4 , the Blackfin processor core \ncontains two 16-bit mu ltipliers, two 40-bit accumulators, two \n40-bit ALUs, four video ALUs, an d a 40-bit shifter. The compu-\ntation units process 8-bit, 16- bit, or 32-bit data from the \nregister file.\nThe compute register file contains eight 32-bit registers. When \nperforming compute operations  on 16-bit operand data, the \nregister file operates as 16 independent 16-bit registers. All \noperands for compute operations come from the multiported register file and instruction constant fields.\nEach MAC can perform a 16-bit by 16-bit multiply in each \ncycle, accumulating the results into the 40-bit accumulators. \nSigned and unsigned formats, rounding, and saturation are supported.\nThe ALUs perform a traditional set of arithmetic and logical \noperations on 16-bit or 32-bit data. In addition, many special \ninstructions are included to acce lerate various signal processing \ntasks. These include bit operations such as field extract and pop-\nulation count, modulo 2\n32 multiply, divide primitives, saturation \nand rounding, and sign/exponent detection. The set of video instructions includes byte alignment and packing operations, \n16-bit and 8-bit adds with cli pping, 8-bit average operations, \nand 8-bit subtract/absolute value/accumulate (SAA) operations. The compare/select and vector search instructions are also \nprovided.\nFor certain instructions, two 16-bit ALU operations can be per-\nformed simultaneously on register  pairs (a 16-bit high half and \n16-bit low half of a compute regi ster). Quad 16-bit operations \nare possible using the second ALU.\nThe 40-bit shifter can perform shifts and rotates and is used to \nsupport normalization, field extract, and field deposit instructions.\nThe program sequencer controls the flow of instruction execu-\ntion, including instruction alignment and decoding. For \nprogram flow control, the sequ encer supports PC relative and \nindirect conditional jumps (with static branch prediction), and \nsubroutine calls. Hardware is pr ovided to support zero over-\nhead looping. The architecture is fully interlocked, meaning that the programmer need not manage  the pipeline when executing \ninstructions with data dependencies.\nFigure 2. Blackfin Processor CoreSEQUENCER\nALIGN\nDECODE\nLOOP BUFFER16 16\n8 88 8\n40 40\nA0 A1BARREL\nSHIFTER\nDATA ARITHMETIC UNITCONTROL\nUNITR7.H\nR6.H\nR5.H\nR4.H\nR3.H\nR2.H\nR1.H\nR0.HR7.L\nR6.L\nR5.L\nR4.L\nR3.L\nR2.L\nR1.L\nR0.LASTAT\n40 40\n323232\n3232\n32\n32 LD0LD1SDDAG0DAG1ADDRESS ARITHMETIC UNIT\nI3\nI2\nI1\nI0L3\nL2\nL1\nL0B3\nB2\nB1\nB0M3\nM2\nM1\nM0SP\nFP\nP5\nP4\nP3\nP2\nP1\nP0DA1\nDA0\n3232\n32\nPREG RAB32TO MEMORY\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 5 of 60 | November 2013The address arithmetic unit prov ides two addresses for simulta-\nneous dual fetches from memory. It contains a multiported \nregister file consisti ng of four sets of 32-bit index, modify, \nlength, and base registers (for circular buffering), and eight \nadditional 32-bit pointer regist ers (for C style indexed stack \nmanipulation).\nBlackfin processors support a modified Harvard architecture in \ncombination with a hierarchical memory structure. Level 1 (L1) \nmemories are those that typically operate at the full processor \nspeed with little or no latency. At the L1 level, the instruction \nmemory holds instructions only. The two data memories hold \ndata, and a dedicated scratchpad data memory stores stack and \nlocal variable information.\nIn addition, multiple L1 memory blocks are provided, offering a \nconfigurable mix of SRAM and cache. The memory manage-\nment Unit (MMU) provides memo ry protection for individual \ntasks that may be operating on the core and can protect system registers from unintended access.\nThe architecture provides three modes of operation: user mode, \nsupervisor mode, and emulation mode. User mode has \nrestricted access to certain system resources, thus providing a \nprotected software environment,  while supervisor mode has \nunrestricted access to the system and co re resources.\nThe Blackfin processor instruct ion set has been optimized so \nthat 16-bit opcodes represent the most frequently used instruc-\ntions, resulting in excellent co mpiled code density. Complex \nDSP instructions are encoded into 32-bit opcodes, representing fully featured multifunction instructions. Blackfin processors \nsupport a limited multi-issue ca pability, where a 32-bit instruc-\ntion can be issued in parallel with two 16-bit instructions, allowing the programmer to use ma ny of the core resources in a \nsingle instruction cycle.\nThe Blackfin processor assembly language uses an algebraic syn-\ntax for ease of coding and readability. The architecture has been optimized for use in conjunction with the C/C++ compiler, \nresulting in fast and effici ent software implementations.\nMEMORY ARCHITECTURE\nThe ADSP-BF538/ADSP-BF538F proc essors view memory as a \nsingle unified 4G byte address sp ace, using 32-bit addresses. All \nresources, including internal memory, external memory, and \nI/O control registers, occupy sepa rate sections of this common \naddress space. The me mory portions of th is address space are \narranged in a hierarchical structure to provide a good cost/per-\nformance balance of some ve ry fast, low latency on-chip \nmemory as cache or SRAM, and larger, lower cost and perfor-\nmance off-chip memory systems. See Figure 3 .\nThe L1 memory system is th e primary highest performance \nmemory available to the Blackfin processor. The off-chip mem-ory system, accessed through the External Bus Interface Unit \n(EBIU), provides expansion with SDRAM, flash memory, \nand SRAM, optionally accessing up to 132M bytes of physical memory.The memory DMA controllers pr ovide high bandwidth data \nmovement capability. They can perform block transfers of code \nor data between the internal  memory and the external \nmemory spaces.\nInternal (On-Chip) Memory\nThe ADSP-BF538/ADSP-BF538F proc essors have three blocks \nof on-chip memory, providing high bandwidth access to the core. \nThe first is the L1 instruction memory, consisting of 80K bytes \nSRAM, of which 16K bytes can be configured as a four way \nset-associative cache. This memory is accessed at full \nprocessor speed.\nThe second on-chip memory block is the L1 data memory, con-\nsisting of two banks of  up to 32K bytes each . Each memory bank \nis configurable, offering both two-way set-associative cache and SRAM functionality. This memory  block is accessed at full pro-\ncessor speed.\nThe third memory block is a 4K  byte scratchpad SRAM, which \nruns at the same speed as the L1  memories, but is only accessible \nas data SRAM and cannot be configured as cache memory. Figure 3. ADSP-BF538/ADSP-BF538F Internal/External Memory MapRESERVEDCORE MMR REGISTERS (2M BYTES)\nRESERVED\nSCRATCHPAD SRAM (4K BYTES)\nINSTRUCTION SRAM (64K BYTES)SYSTEM MMR REGISTERS (2M BYTES)\nRESERVED\nRESERVED\nDATA BANK B SRAM / CACHE (16K BYTES)\nDATA BANK B SRAM (16K BYTES)\nDATA BANK A SRAM / CACHE (16K BYTES)\nASYNC MEMORY BANK 3 (1M BYTES) OR\nON-CHIP FLASH (ADSP-BF538F8 ONLY)\nASYNC MEMORY BANK 2 (1M BYTES) OR\nON-CHIP FLASH (ADSP-BF538F8 ONLY)\nASYNC MEMORY BANK 1 (1M BYTES) OR\nON-CHIP FLASH (ADSP-BF538F8 ONLY)\nASYNC MEMORY BANK 0 (1M BYTES) OR\nON-CHIP FLASH (ADSP-BF538F8 ONLY)\nSDRAM MEMORY\n(16M BYTES TO 128M BYTES)INSTRUCTION SRAM / CACHE (16K BYTES)\nINTERNALMEMORYMAP\nEXTERNALMEMORYMAP0xFFFF FFFF\n0xFFE0 0000\n0xFFB0 0000\n0xFFA1 4000\n0xFFA1 0000\n0xFF90 8000\n0xFF90 4000\n0xFF80 8000\n0xFF80 4000\n0xEF00 0000\n0x2040 0000\n0x2030 0000\n0x2020 0000\n0x2010 0000\n0x2000 0000\n0x0800 0000\n0x0000 00000xFFC0 0000\n0xFFB0 1000\n0xFFA0 0000\nRESERVED\nRESERVEDDATA BANK A SRAM (16K BYTES)0xFF90 0000\n0xFF80 0000\nRESERVED\nRev. E | Page 6 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nExternal (Off-Chip) Memory\nExternal memory is accessed via the external bus interface unit \n(EBIU). This 16-bit interface provides a glueless connection to a \nbank of synchronous DRAM (SDRAM) as well as up to four \nbanks of asynchronous memory devices including flash, EPROM, ROM, SRAM, and memory mapped I/O devices.\nThe PC133-compliant SDRAM cont roller can be programmed \nto interface to up to 128M by tes of SDRAM. The SDRAM con-\ntroller allows one row to be open for each internal SDRAM \nbank, for up to four internal SDRAM banks, improving overall \nsystem performance.\nThe asynchronous memory cont roller can be programmed to \ncontrol up to four banks of devices with very flexible timing parameters for a wide variety of devices. Each bank occupies a \n1M byte segment regardless of th e size of the devices used, so \nthat these banks will only be cont iguous if each is fully popu-\nlated with 1M byte of memory.\nFlash Memory (ADSP-BF538F8 Only)\nThe ADSP-BF538F8 processor contains a separate flash die, connected to the EBIU bus, within  the package of the processor. \nFigure 4  shows how the flash memory die and Blackfin proces-\nsor die are connected.\nThe ADSP-BF538F8 contains an 8M bit (512K × 16-bit) bottom \nboot sector Spansion S29AL008J  known good die flash memory. \nFor additional information, visit www.spansion.com . Features \ninclude the following:\n• Access times as fast as 70 ns (EBIU registers must be set \nappropriately)\n• Sector protection• One million write cycles per sector• 20 year data retentionThe Blackfin processor connects to the flash memory die with \naddress, data, chip enable, write enable, and output enable con-\ntrols as if it were an external  memory device. Note that the \nwrite-protect input pin to the fl ash is not connected and inac-\ncessible, disabling this feature.\nThe flash chip enable pin FCE\n must be connected to AMS0  or \nAMS3–1  through a printed circuit board trace. When connected \nto AMS0 , the Blackfin processor can boot from the flash die. \nWhen connected to AMS3–1 , the flash memory appears as non-\nvolatile memory in the processor memory map, shown in Figure 3 .\nFlash Memory Programming\nThe ADSP-BF538F8 flash memory can be programmed before \nor after mounting on the printed circuit board. \nTo program the flash prior to mounting on the printed circuit \nboard, use a hardware programm ing tool that can provide the \ndata, address, and control stimuli to the flash die through the \nexternal pins on the package.  During this programming, V\nDDEXT  \nand GND must be provided to the package and the Blackfin must be held in rese t with bus request (BR\n) asserted and a \nCLKIN provided. \nThe VisualDSP++ tools can be used to program the flash mem-\nory after the device is mounted on a printed circuit board.\nFlash Memory Sector Protection\nTo use the sector protection fe ature, a high voltage (+12 V nom-\ninal) must be applied to the flash FRESET  pin. Refer to the flash \ndata sheet for details.\nI/O Memory Space\nBlackfin processors do not defi ne a separate I/O space. All \nresources are mapped through the flat 32-bit address space. On-\nchip I/O devices have their co ntrol registers mapped into mem-\nory mapped registers (MMRs) at addresses near the top of the \n4G byte address space. These are separated into two smaller \nblocks, one which contains the control MMRs for all core func-\ntions, and the other which contains the registers needed for \nsetup and control of the on-chip peripherals outside of the core. The MMRs are accessible only in supervisor mode and appear \nas reserved space to on-chip peripherals.\nBooting\nThe ADSP-BF538/ADSP-BF538F pr ocessors contain a small \nboot kernel, which configures the appropriate peripheral for \nbooting. If the processor is configured to boot from boot ROM memory space, the processor star ts executing from the on-chip \nboot ROM. For more information, see Booting Modes on \nPage 16 .\nEvent Handling\nThe event controller on the ADSP-BF538/ADSP-BF538F pro-\ncessors handle all asynchronous and synchronous events to the \nprocessors. The processor provid es event handling that sup-\nports both nesting and prioritization. Nesting allows multiple \nevent service routines to be active simultaneously. Prioritization Figure 4. Internal Connection of  Flash Memory (ADSP-BF538F8)VSSFRESETFCERESETDATA15 -0\nGND\nVDDEXTADDR19 -1\nARE\nAWE\nGNDDATA15 -0ARDY\nAWE\nVCC\nBYTE\nRESETCE AMS3 -0\nRESETARE\nARDYADDR19 -1\nOE\nWE\nRY/ BY\nVDDEXT\nADSP-BF538F \nPACKAGEB\nS29AL008J\nFLASH DIEAMS3 -0DQ15-0A18-0\nWPNC\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 7 of 60 | November 2013ensures that servicing of a high er priority event takes prece-\ndence over servicing of a lower priority event. The controller \nprovides support for five different types of events: \n• Emulation – An emulation ev ent causes the processor to \nenter emulation mode, allowing command and control of \nthe processor via the JTAG interface.\n• Reset – This event resets the processor.• Nonmaskable interrupt (NMI) – The NMI event can be \ngenerated by the software watchdog timer or by the NMI\n \ninput signal to the processor.  The NMI event is frequently \nused as a power-down indicator to initiate an orderly shut-\ndown of the system.\n• Exceptions – Events that occur synchronously to program \nflow (the exception is taken before the instruction is \nallowed to complete). Conditio ns such as data alignment \nviolations and undefined instructions cause exceptions.\n• Interrupts – Events that occur asynchronously to program \nflow. They are caused by in put pins, timers, and other \nperipherals, as well as by an explicit software instruction.\nEach event type has an  associated register to hold the return \naddress and an associated return-from-event instruction. When \nan event is triggered, the state of  the processors is saved on the \nsupervisor stack.\nThe ADSP-BF538/ADSP-BF538F pr ocessors’ event controllers \nconsist of two stages, the core event controller (CEC) and the \nsystem interrupt controller (SIC). The core event controller \nworks with the system interrupt controller to prioritize and con-\ntrol all system events. Concep tually, interrupts from the \nperipherals enter into the SIC and are then routed directly into \nthe general-purpose interrupts of the CEC. \nCore Event Controller (CEC)\nThe CEC supports nine general-purpose interrupts (IVG15–7), in addition to the dedicated interrupt and exception events. Of these general-purpose interrupts, the two lowest priority inter-\nrupts (IVG15–14) are recommended to be reserved for software \ninterrupt handlers, leaving seven prioritized interrupt inputs to \nsupport the peripherals of the processor. \nTable 2  describes the inputs to the CEC, identifies their names \nin the event vector table (EVT), and lists their priorities.\nSystem Interrupt Controller (SIC)\nThe system interrupt controllers  (SIC) provides the mapping \nand routing of events from th e many peripheral interrupt \nsources to the prioritized general-purpose interrupt inputs of the CEC. Although the ADSP-B F538/ADSP-BF538F processors \nprovide a default mapping, programs can alter the mappings \nand priorities of interrupt events  by writing the appropriate val-\nues into the interrupt assign ment registers (SIC_IARx). \nTable 3  describes the inputs into the SIC and the default map-\npings into the CEC. Table 2. Core Event Controller (CEC) \nPriority\n(0 is Highest) Event Class EVT Entry\n0E m u l a t i o n / T e s t  C o n t r o l E M U1 Reset RST\n2 Nonmaskable Interrupt NMI\n3E x c e p t i o n E V X\n4 Reserved —\n5 Hardware Error IVHW6C o r e  T i m e r I V T M R\n7 General Interrupt 7 IVG7\n8 General Interrupt 8 IVG89 General Interrupt 9 IVG9\n10 General Interrupt 10 IVG10\n11 General Interrupt 11 IVG1112 General Interrupt 12 IVG12\n13 General Interrupt 13 IVG13\n14 General Interrupt 14 IVG1415 General Interrupt 15 IVG15\nTable 3. System and Core Event Mapping\nEvent SourceCore \nEvent Name\nPLL Wake-Up Interrupt IVG7\nDMA Controller 0 Error IVG7DMA Controller 1 Error IVG7\nPPI Error Interrupt IVG7\nSPORT0 Error Interrupt IVG7SPORT1 Error Interrupt IVG7\nSPORT2 Error Interrupt IVG7\nSPORT3 Error Interrupt IVG7SPI0 Error Interrupt IVG7\nSPI1 Error Interrupt IVG7\nSPI2 Error Interrupt IVG7UART0 Error Interrupt IVG7\nUART1 Error Interrupt IVG7\nUART2 Error Interrupt IVG7CAN Error Interrupt IVG7\nReal-Time Clock Interrupts IVG8\nDMA0 Interrupt (PPI) IVG8\nDMA1 Interrupt (SPORT0 Rx) IVG9\nDMA2 Interrupt (SPORT0 Tx) IVG9DMA3 Interrupt (SPORT1 Rx) IVG9\nDMA4 Interrupt (SPORT1 Tx) IVG9\nDMA8 Interrupt (SPORT2 Rx) IVG9DMA9 Interrupt (SPORT2 Tx) IVG9\nRev. E | Page 8 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nEvent Control\nThe ADSP-BF538/ADSP-BF538F pr ocessors provide the user \nwith a very flexible mechanism to control the processing of \nevents. In the CEC, three register s are used to coordinate and \ncontrol events. Each regi ster is 32 bits wide:\n• CEC interrupt latch register (ILAT) – The ILAT register \nindicates when events have been latched. The appropriate \nbit is set when the processor has latched the event and \ncleared when the event has been  accepted into the system. \nThis register is updated automatically by the controller, but \nit may also be written to clea r (cancel) latched events. This \nregister may be read while in supervisor mode and may \nonly be written while in supervisor mode when the corre-\nsponding IMASK bit is cleared.\n• CEC interrupt mask register  (IMASK) – The IMASK regis-\nter controls the masking and unmasking of individual events. When a bit is set in the IMASK register, that event is \nunmasked and will be processe d by the CEC when asserted. \nA cleared bit in the IMASK register masks the event, pre-venting the processor from serv icing the event even though \nthe event may be latched in the ILAT register. This register may be read or written while in supervisor mode. General-\npurpose interrupts can be gl obally enabled and disabled \nwith the STI and CLI instructions, respectively.\n• CEC interrupt pending register (IPEND) – The IPEND \nregister keeps track of all ne sted events. A set bit in the \nIPEND register indicates the event is currently active or \nnested at some level. This re gister is updated automatically \nby the controller but may be read while in supervisor mode. \nThe SIC allows further control of  event processing by providing \nthree 32-bit interrupt control and st atus registers. Each register \ncontains a bit corresponding to ea ch of the peripheral interrupt \nevents shown in Table 3 on Page 7 .\n• SIC interrupt mask register s (SIC_IMASKx) – These regis-\nters control the masking and un masking of each peripheral \ninterrupt event. When a bit is set in these registers, that peripheral event is unmasked and will be processed by the \nsystem when asserted . A cleared bit in th ese registers masks \nthe peripheral event, preventi ng the processor from servic-\ning the event. \n• SIC interrupt status register s (SIC_ISRx) – As multiple \nperipherals can be mapped to a single event, these registers \nallow the software to determ ine which peripheral event \nsource triggered the interrupt. A set bit indicates the \nperipheral is asserting the inte rrupt, and a cleared bit indi-\ncates the peripheral is not asserting the event.\n• SIC interrupt wake-up enable registers (SIC_IWRx) – By \nenabling the corresponding bit in these registers, a periph-\neral can be configured to wake  up the processor, should the \ncore be idled or in sleep mode when the event is generated. \n(For more information, see Dynamic Power Management \non Page 13. )\nBecause multiple interrupt source s can map to a single general-\npurpose interrupt, multiple puls e assertions can occur simulta-\nneously, before or during interrupt processing for an interrupt \nevent already detected on this interrupt input. The IPEND register contents are monitored by the SICs as the interrupt \nacknowledgement.\nThe appropriate ILAT register bit is set when an interrupt rising \nedge is detected (detection requires two core clock cycles). The bit is cleared when the respective IPEND register bit is set. The \nIPEND bit indicates that the event has entered into the proces-\nsor pipeline. At this point the CEC will recognize and queue the \nnext rising edge event on the corresponding event input. The \nminimum latency from the rising edge transition of the general-\npurpose interrupt to the IPEND output asserted is three core \nclock cycles; however, the latenc y can be much higher, depend-\ning on the activity within and the state of the processor. \nDMA CONTROLLERS\nThe ADSP-BF538/ADSP-BF538F pr ocessors have two, inde-\npendent DMA controllers that su pport automated data transfers \nwith minimal overhead for the processor core. DMA transfers \ncan occur between the processor internal memories and any of its DMA capable peripherals. Ad ditionally, DMA transfers can \nbe accomplished between any of  the DMA capable peripherals \nand external devices connected to the external memory inter-DMA10 Interrupt (SPORT3 Rx) IVG9\nDMA11 Interrupt (SPORT3 Tx) IVG9\nDMA5 Interrupt (SPI0) IVG10\nDMA14 Interrupt (SPI1) IVG10\nDMA15 Interrupt (SPI2) IVG10DMA6 Interrupt (UART0 Rx) IVG10\nDMA7 Interrupt (UART0 Tx) IVG10\nDMA16 Interrupt (UART1 Rx) IVG10DMA17 Interrupt (UART1 Tx) IVG10\nDMA18 Interrupt (UART2 Rx) IVG10\nDMA19 Interrupt (UART2 Tx) IVG10Timer0, Timer1, Timer2 Interrupts IVG11\nTWI0 Interrupt IVG11\nTWI1 Interrupt IVG11CAN Receive Interrupt IVG11\nCAN Transmit Interrupt IVG11\nPort F GPIO Interrupts A and B IVG12MDMA0 Stream 0 Interrupt IVG13\nMDMA0 Stream 1 Interrupt IVG13\nMDMA1 Stream 0 Interrupt IVG13MDMA1 Stream 1 Interrupt IVG13\nSoftware Watchdog Timer IVG13Table 3. System and Core Event Mapping (Continued)\nEvent SourceCore \nEvent Name\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 9 of 60 | November 2013faces, including the SDRAM co ntroller and the asynchronous \nmemory controller. DMA capa ble peripherals include the \nSPORTs, SPI ports, UARTs, and PPI. Each individual DMA capable peripheral has at leas t one dedicated DMA channel. \nThe DMA controllers support both 1-dimensional (1-D) and\n2-dimensional (2-D) DMA transfer s. DMA transfer initializa-\ntion can be implemented from registers or from sets of parameters called de scriptor blocks.\nThe 2-D DMA capability suppor ts arbitrary row and column \nsizes up to 64K elements by 64K elements, and arbitrary row \nand column step sizes up to ±3 2K elements. Furthermore, the \ncolumn step size can be less th an the row step size, allowing \nimplementation of interleaved da ta streams. This feature is \nespecially useful in video applications where data can be deinterleaved on the fly.\nExamples of DMA types support ed by the processor DMA con-\ntroller include:\n• A single, linear buffer that stops upon completion\n• A circular, auto-refreshing bu ffer that interrupts on each \nfull or fractionally full buffer\n• 1-D or 2-D DMA using a linked list of descriptors•2 - D  D M A  u s i n g  a n  a r r a y  o f  d e s c riptors, specifying only the \nbase DMA address wi thin a common page\nIn addition to the dedicated peripheral DMA channels, there are \nfour memory DMA channels prov ided for transfers between the \nvarious memories of the AD SP-BF538/ADSP-BF538F proces-\nsor’s systems. This enables transf ers of blocks of data between \nany of the memories—including external SDRAM, ROM, SRAM, and flash memory—with minimal processor interven-\ntion. Memory DMA transfers ca n be controlled by a very \nflexible descriptor based methodology or by a standard register based autobuffer mechanism.\nREAL-TIME CLOCK\nThe ADSP-BF538/ADSP-BF538F processors’ real-time clock (RTC) provides a robust set of digital watch features, including \ncurrent time, stopwatch, and alarm. The RTC is clocked by a \n32.768 kHz crystal external to th e processor. The RTC periph-\neral has dedicated power supply pins so that it can remain \npowered up and clocked even when  the rest of the processors \nare in a low power state. The RTC provides several programma-\nble interrupt options, includin g interrupt per second, minute, \nhour, or day clock ticks, interrupt on programmable stopwatch \ncountdown, or interrupt at  a programmed alarm time.\nThe 32.768 kHz input clock frequency is divided down to a 1 Hz \nsignal by a prescaler. The counter function of the timer consists of four counters: a 60 second co unter, a 60 minute counter, a 24 \nhour counter, and a 32,768 day counter.\nWhen enabled, the alarm function generates an interrupt when \nthe output of the timer matches the programmed value in the alarm control register. There are two alarms: The first alarm is \nfor a time of day. The second alarm is for a day and time of that \nday.The stopwatch function counts down from a programmed \nvalue, with one second resolu tion. When the stopwatch is \nenabled and the counter underflows, an interrupt is generated.\nLike the other peripherals, the RTC can wake up the processors \nfrom sleep mode upon generati on of any RTC wake-up event. \nAdditionally, an RTC wake-up ev ent can wake up the processor \nfrom deep sleep mode and wake up the on-chip internal voltage regulator from the powered down hibernate state.\nConnect RTC pins RTXI and RTXO  with external components \nas shown in Figure 5 .\nWATCHDOG TIMER\nThe ADSP-BF538/ADSP-BF538F pr ocessors include a 32-bit \ntimer that can be used to impl ement a software watchdog func-\ntion. A software watchdog can im prove system availability by \nforcing the processor to a known state through generation of a \nhardware reset, nonmaskable in terrupt (NMI), or general-pur-\npose interrupt, if the timer ex pires before being reset by \nsoftware. The programmer initia lizes the count value of the \ntimer, enables the appropriate interrupt, then enables the timer. \nThereafter, the software must reload the counter before it \ncounts to zero from the progra mmed value. This protects the \nsystem from remaining in an unknown state where software, \nwhich would normally reset the timer, has stopped running due \nto an external noise condition or software error.\nIf configured to generate a hard ware reset, the watchdog timer \nresets both the core and the proc essor peripherals.  After a reset, \nsoftware can determine if the wa tchdog was the source of the \nhardware reset by interrogating a status bit in the watchdog \ntimer control register.\nThe timer is clocked by the syst em clock (SCLK) at a maximum \nfrequency of f SCLK. \nTIMERS\nThere are four general-purpose programmable timer units in \nthe ADSP-BF538/ADSP-BF538F proc essors. Three timers have \nan external pin that can be conf igured either as a pulse-width \nmodulator (PWM) or timer output, as an input to clock the Figure 5. External Components for RTCRTXO\nC1 C2X1\nSUGGESTED COMPONENTS:\nECLIPTEK EC38J (THROUGH-HOLE PACKAGE)\nEPSON MC405 12 pF LOAD (SURFACE-MOUNT PACKAGE)\nC1 = 22pF\nC2 = 22pF\nR1 = 10M :\nNOTE: C1 AND C2 ARE SPECIFIC TO CRYSTAL SPECIFIED FOR X1.\nCONTACT CRYSTAL MANUFACTURER FOR DETAILS. C1 AND C2\nSPECIFICATIONS ASSUME BOARD TRACE CAPACITANCE OF 3pF.RTXI\nR1\nRev. E | Page 10 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\ntimer, or as a mechanism for measuring pulse widths and peri-\nods of external events. These time rs can be synchronized to an \nexternal clock input to the PF1 pin (TACLK), an external clock input to the PPI_CLK pin (TMRCLK), or to the internal SCLK.\nThe timer units can be used in  conjunction with UART0 to \nmeasure the width of the pulses in  the data stream to provide an \nauto-baud detect function for a serial channel. \nThe timers can generate interrupt s to the processor core provid-\ning periodic events for synchron ization, either to the system \nclock or to a count of external signals.\nIn addition to the three general-purpose programmable timers, \na fourth timer is also provided. Th is extra timer is clocked by the \ninternal processor clock and is typically used as a system tick \nclock for generation of operating system periodic interrupts.\nSERIAL PORTS (SPORTs)\nThe ADSP-BF538/ADSP-BF538F pr ocessors incorporate four \ndual-channel synchronous serial ports for serial and multipro-\ncessor communications. The SP ORTs support the following \nfeatures:\n•I2S capable operation.\n• Bidirectional operation – Each SPORT has two sets of inde-\npendent transmit and receive pins, enabling 16 channels of \nI2S stereo audio.\n• Buffered (8-deep) transmit an d receive ports – Each port \nhas a data register for transfe rring data words to and from \nother processor components and shift registers for shifting \ndata in and out of the data registers.\n• Clocking – Each transmit and re ceive port can either use an \nexternal serial clock or generate its own, in frequencies \nranging from (f SCLK/131,070) Hz to (f SCLK/2) Hz.\n• Word length – Each SPORT supports serial data words \nfrom 3 bits to 32 bits in leng th, transferred mo st significant \nbit first or least significant bit first.\n• Framing – Each transmit and receive port can run with or \nwithout frame sync signals for each data word. Frame sync \nsignals can be generated internally or externally, active high or low, and with either of two pulse widths and early or late \nframe sync.\n• Companding in hardware – Each SPORT can perform \nA-law or μ-law companding according to ITU recommen-\ndation G.711. Companding can be  selected on the transmit \nand/or receive channel of the SPORT without additional \nlatencies.\n• DMA operations with single-cycle overhead – Each SPORT \ncan automatically receive and tr ansmit multiple buffers of \nmemory data. The processor can link or chain sequences of \nDMA transfers between a SPORT and memory.• Interrupts – Each transmit an d receive port generates an \ninterrupt upon completing the transfer of a data word or \nafter transferring an entire da ta buffer or buffers through \nDMA.\n• Multichannel capability – Each SPORT supports 128 chan-\nnels out of a 1024 channel wind ow and is compatible with \nthe H.100, H.110, MVIP-90,  and HMVIP standards. \nSERIAL PERIPHERAL INTERFACE (SPI) PORTS\nThe ADSP-BF538/ADSP-BF538F pr ocessors incorporate three \nSPI-compatible ports that enable  the processor to communicate \nwith multiple SPI compatible devices. \nThe SPI interface uses three pins for transferring data: two data \npins (master output-slave input, MOSIx, and master input-slave \noutput, MISOx) and a clock pin (serial clock, SCKx). An SPI \nchip select input pin (SPIxSS ) lets other SPI devices select the \nprocessor. For SPI0, seven SPI chip select output pins (SPI0-\nSEL7–1 ) let the processor select other SPI devices. SPI1 and \nSPI2 each have a single SPI ch ip select output pin (SPI1SEL1  \nand SPI2SEL1 ) for SPI point-to-point communication. Each of \nthe SPI select pins are reconf igured GPIO pins. Using these \npins, the SPI ports provide a full-duplex, synchronous serial \ninterface, which supports both master/slave modes and multi-\nmaster environments. \nThe SPI ports’ baud rate and clock phase/polarities are pro-\ngrammable, and they each have an integrated DMA controller, \nconfigurable to support transmit or receive data streams. Each \nSPI’s DMA controller can only serv ice unidirectional accesses at \nany given time.\nThe SPI port’s clock rate is calculated as:\nwhere the 16-bit SPIx_BAUD  register contains a value of 2 to \n65,535.\nDuring transfers, the SPI port  simultaneously transmits and \nreceives by serially shifting data in and out on its two serial data \nlines. The serial clock line sy nchronizes the shifting and sam-\npling of data on the two serial data lines.\n2-WIRE INTERFACE\nThe ADSP-BF538/ADSP-BF538F pr ocessors have two 2-wire \ninterface (TWI) modules that are compatible with the Philips Inter-IC bus standard. The TWI modules offer the capabilities \nof simultaneous master and slav e operation, support for 7-bit \naddressing and multimedia data arbitration. The TWI also includes master clock synchronization and support for clock \nlow extension.\nThe TWI interface uses two pins for transferring clock (SCLx) \nand data (SDAx) and supports the protocol at speeds up to 400 kbps.\nThe TWI interface pins are comp atible with 5 V logic levels.SPI Clock RatefSCLK\n2S P I x _ B A U D\uf0b4------------------------------------------=\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 11 of 60 | November 2013UART PORTS\nThe ADSP-BF538/ADSP-BF538F pr ocessors incorporate three \nfull-duplex universal asynchro nous receiver/transmitter \n(UART) ports, which are fully compatible with PC standard \nUARTs. The UART ports provide a simplified UART interface \nto other peripherals or hosts,  supporting full-duplex, DMA sup-\nported, asynchronous transfers of  serial data. The UART ports \ninclude support for 5 data bits to 8 data bits, 1 stop bit or 2 stop \nbits, and none, even, or odd pa rity. The UART ports support \ntwo modes of operation:\n• PIO (programmed I/O) – The processor sends or receives \ndata by writing or reading I/O mapped UART registers. \nThe data is double buffered on  both transmit and receive.\n• DMA (direct memory access) – The DMA controller trans-\nfers both transmit and receive data. This reduces the \nnumber and frequency of interr upts required to transfer \ndata to and from memory. Each UART has two dedicated DMA channels, one for transmit and one for receive. These \nDMA channels have lower default priority than most DMA \nchannels because of their re latively low service rates.\nEach UART port’s baud rate, seri al data format, error code gen-\neration and status, and interrupts are programmable:\n• Supporting bit rates ranging from (f\nSCLK/1,048,576) to \n(fSCLK/16) bits per second.\n• Supporting data formats from 7 to 12 bits per frame.• Both transmit and receive oper ations can be configured to \ngenerate maskable interrupts to the processor.\nEach UART port’s clock rate is calculated as:\nwhere the 16-bit UART_Divisor  comes from the UARTx_DLH \nregister (most significant 8 bits ) and UARTx_DLL register (least \nsignificant 8 bits).\nIn conjunction with the general-purpose timer functions, auto-\nbaud detection is supported on UART0. \nThe capabilities of the UARTs are further extended with sup-\nport for the Infrared Data Association (IrDA\n®) Serial Infrared \nPhysical Layer Link Specification (SIR) protocol. \nGENERAL-PURPOSE PORTS\nThe ADSP-BF538/ADSP-BF538F proc essors have up to 54 gen-\neral-purpose I/O pins that are multiplexed with other \nperipherals. They are arranged into Ports C, D, E, and F as \nshown in Table 4 .\nThe general-purpose I/O pins may be individually controlled by \nmanipulation of the control and status registers. These pins may \nbe polled to determine their status.\n• GPIO direction control register – Specifies the direction of \neach individual GPIO pin as input or output.\n• GPIO control and status registers – The processor employs \na “write one to modify” mechanism that allows any combi-\nnation of individual GPIO to  be modified in a single instruction, without affecting the level of any other GPIO. \nFour control registers and a da ta register are provided for \neach GPIO port. One register is written in order to set \nGPIO values, one register is written in order to clear GPIO \nvalues, one register is writte n in order to toggle GPIO val-\nues, and one register is writte n in order to specify a GPIO \ninput or output. Reading the GPIO data allows software to \ndetermine the state of the input GPIO pins.\nIn addition to the GPIO function described above, the 16 Port F \npins can be individually config ured to generate interrupts.\n• GPIO pin interrupt mask re gisters – The two GPIO pin \ninterrupt mask registers allow each individual PFx pin to \nfunction as an interrupt to the processor. Similar to the two \nGPIO control registers that ar e used to set and clear indi-\nvidual GPIO pin values, on e GPIO pin interrupt mask \nregister sets bits to enable interrupt function, and the other \nGPIO pin interrupt mask regist er clears bits to disable \ninterrupt function. PFx pins defined as inputs can be con-\nfigured to generate hardware interrupts, while output PFx \npins can be triggered by software interrupts.\n• GPIO pin interrupt sensitivity registers – The two GPIO \npin interrupt sensitivity regi sters specify whether individ-\nual PFx pins are level- or ed ge-sensitive and specify—if \nedge-sensitive—whether just the rising edge or both the ris-\ning and falling edges of the signal are significant. One \nregister selects the type of sensitivity, and one register \nselects which edges are signif icant for edge-sensitivity.\nPARALLEL PERIPHERAL INTERFACE\nThe ADSP-BF538/ADSP-BF538F pr ocessors provide a parallel \nperipheral interface (PPI) that can connect direct ly to parallel \nADC and DAC converters, video encoders and decoders, and \nother general-purpose peripherals.  The PPI consists of a dedi-\ncated input clock pin, up to 3 frame synchronization pins, and \nup to 16 data pins. The input clock supports parallel data rates at \nup to f SCLK/2 MHz, and the synchroni zation signals can be con-\nfigured as either inputs or outputs.UART Clock RatefSCLK\n16 UART_Divisor\uf0b4---------------------------------------------------=Table 4. GPIO Ports\nPeripheral Alternate GPIO Port Function\nPPI GPIO Port F15–3\nSPORT2 GPIO Port E7–0\nSPORT3 GPIO Port E15–8SPI0 GPIO Port F7–0\nSPI1 GPIO Port D4–0\nSPI2 GPIO Port D9–5UART1 GPIO Port D11–10\nUART2 GPIO Port D13–12\nCAN GPIO Port C1–0GPIO GPIO Port C9–4\n1\n1These pins are GPIO only and cannot be  reconfigured through software. PC1 \nand PC4 are open-drain when  configured as GPIO outputs.\nRev. E | Page 12 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nThe PPI supports a variety of general-purpose and ITU-R 656 \nmodes of operation. In general-purpose mode, the PPI provides \nhalf-duplex, bidirectional data tr ansfer with up to 16 bits of \ndata. Up to 3 frame synchronization signals are also provided. \nIn ITU-R 656 mode, the PPI prov ides half-duplex, bi-direc-\ntional transfer of 8- or 10-bit video data. Additionally, on-chip \ndecode of embedded start-of-line (SOL) and start-of-field (SOF) \npreamble packets is supported.\nGeneral-Purpose Mode Descriptions\nThe general-purpose modes of th e PPI are intended to suit a \nwide variety of data capture and transmission applications. \nThree distinct submodes are supported:\n• Input mode – frame syncs and data are inputs into the PPI.• Frame capture mode – frame syncs are outputs from the \nPPI, but data are inputs.\n• Output mode – frame syncs and data are outputs from the \nPPI.\nInput Mode\nInput mode is intended for ADC applications, as well as video communication with hardware sign aling. In its simplest form, \nPPI_FS1 is an external frame sync  input that controls when to \nread data. The PPI_DELAY MMR allows for a delay (in PPI_-\nCLK cycles) between reception of this frame sync and the \ninitiation of data reads. The nu mber of input data samples is \nuser programmable and defined by the contents of the \nPPI_COUNT register. The PPI supports 8-bit, and 10-bit through 16-bit data, and is programmable in the PPI_CON-\nTROL register.\nFrame Capture Mode\nFrame capture mode allows the video source(s) to act as a slave (e.g., for frame capture). Th e ADSP-BF538/ADSP-BF538F pro-\ncessors control when to read fr om the video source(s). PPI_FS1 \nis an HSYNC output and PPI_FS2 is a VSYNC output.\nOutput Mode\nOutput mode is used for transmitting video or other data with up to three output frame syncs. Typically, a single  frame sync is \nappropriate for data converter applications, whereas two or \nthree frame syncs could be used  for sending video with hard-\nware signaling.\nITU-R 656 Mode Descriptions\nThe ITU-R 656 modes of the PPI ar e intended to suit a wide \nvariety of video capture, proce ssing, and transmission applica-\ntions. Three distinct submodes are supported:\n• Active video only mode• Vertical blanking only mode• Entire field mode\nActive Video Only Mode\nActive video only mode is used when only the active video por-\ntion of a field is of interest and not any of the blanking intervals. \nThe PPI does not read in any da ta between the end of active video (EAV) and start of active video (SAV) preamble symbols, \nor any data present during the vertical blanking intervals. In this \nmode, the control byte sequence s are not stored to memory; \nthey are filtered by the PPI. Afte r synchronizing to the start of \nField 1, the PPI ignores incoming  samples until it sees an SAV \ncode. The user specifies the number of active video lines per frame (in PPI_COUNT register).\nVertical Blanking Interval Mode\nIn this mode, the PPI only transfers vertical blanking interval (VBI) data.\nEntire Field Mode\nIn this mode, the entire incoming bit stream is read in through the PPI. This includes active vide o, control preamble sequences, \nand ancillary data that may be embedded in horizontal and ver-\ntical blanking intervals. Data transfer starts immediately after synchronization to Field 1. \nCONTROLLER AREA NETWORK (CAN) INTERFACE\nThe ADSP-BF538/ADSP-BF538F processors provide a CAN \ncontroller that is a communicat ion controller implementing the \nController Area Network (CAN) V2.0B protocol. This protocol \nis an asynchronous communications protocol used in both industrial and automotive contro l systems. CAN is well suited \nfor control applications due to its capability to communicate \nreliably over a network since the protocol incorporates CRC checking, message error tracking, and fault node confinement.\nThe CAN controller is based on a 32-entry mailbox RAM and \nsupports both the stan dard and extended identifier (ID) mes-\nsage formats specified in the CAN protocol specification, \nrevision 2.0, part B. \nEach mailbox consists of eight 16-bit data words. The data is \ndivided into fields, which includes a message identifier, a time \nstamp, a byte count, up to 8 bytes of data, and several control bits. Each node monitors the messages being passed on the net-\nwork. If the identifier in the transmitted message matches an \nidentifier in one of its mailboxe s, then the module knows that \nthe message was meant for it, passe s the data into its appropriate \nmailbox, and signals the processor of message arrival with an \ninterrupt.\nThe CAN controller can wake up the processor from sleep mode \nupon generation of a wake-up even t, such that the processor can \nbe maintained in a low power mode during idle conditions. \nAdditionally, a CAN wake-up event can wake up the on-chip internal voltage regulato r from the powered-down \nhibernate state.\nThe electrical characteristics of each network connection are \nvery stringent, therefore the CA N interface is typically divided \ninto 2 parts: a controller and a tr ansceiver. This allows a single \ncontroller to support different drivers and CAN networks. The \nADSP-BF538/ADSP-BF538F CAN mo dule represents the con-\ntroller part of the interface. This module’s network I/O is a \nsingle transmit output and a single receive input, which connect \nto a line transceiver.\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 13 of 60 | November 2013The CAN clock is derived from the processor system clock \n(SCLK) through a programmable divider and therefore does not \nrequire an additional crystal.\nDYNAMIC POWER MANAGEMENT\nThe ADSP-BF538/ADSP-BF538F proc essors provide four oper-\nating modes, each with a different performance/power profile. \nIn addition, dynamic power management provides the control functions to dynamically alter the processor core supply voltage, \nfurther reducing power dissipation . Control of clocking to each \nof the processor peripherals al so reduces power consumption. \nSee Table 5  for a summary of the power settings for each mode.\nFull-On Operating Mode—Maximum Performance\nIn the full-on mode, the PLL is enabled and is not bypassed, \nproviding capability for maximum operational frequency. This \nis the power-up default execut ion state in which maximum per-\nformance can be achieved. The processor core and all enabled peripherals run at full speed.\nActive Operating Mode—Moderate Dynamic Power \nSavings\nIn the active mode, the PLL is enabled but bypassed. Because the \nPLL is bypassed, the processor’s core clock (CCLK) and system \nclock (SCLK) run at the input clock (CLKIN) frequency. DMA access is available to appropri ately configured L1 memories.\nIn the active mode, it is possible to disable the PLL through the \nPLL Control register (PLL_CTL). If disabled, the PLL must be \nre-enabled before transitioning to the full-on or sleep modes.\nSleep Operating Mode—High Dynamic Power Savings\nThe sleep mode reduces dynamic power dissipation  by disabling \nthe clock to the processor core  (CCLK). The PLL and system \nclock (SCLK), however, continue to operate in this mode. Typi-\ncally, an external event or RTC activity will wake up the \nprocessor. When in the sleep mode, assertion of a wake-up \nevent enabled in the SIC_IWRx re gister causes the processor to \nsense the value of the BYPASS bit in the PLL control register \n(PLL_CTL). If BYPASS is disabled, the processor transitions to the full on mode. If BYPASS is enabled, the processor will tran-\nsition to the active mode. When  in the sleep mode, system DMA \naccess to L1 memory is not supported.Deep Sleep Operating Mode—Maximum Dynamic Power \nSavings\nThe deep sleep mode maximizes dynamic power savings by dis-\nabling the clocks to the proc essor core (CCLK) and to all \nsynchronous peripherals (SCLK) . Asynchronous peripherals \nsuch as the RTC may still be ru nning, but will not be able to \naccess internal resources or external memory. This powered \ndown mode can only be exited by assertion of the reset interrupt \n(RESET ) or by an asynchronous interrupt generated by the \nRTC. When in deep sleep mode, an RTC asynchronous inter-\nrupt causes the processor to tr ansition to the active mode. \nAssertion of RESET  while in deep sleep mode causes the proces-\nsor to transition to the full-on mode after processor reset.\nHibernate State—Maximum Static Power Savings\nThe hibernate state maximizes stat ic power savings by disabling \nthe voltage and clocks to the proc essor core (CCLK) and to all of \nthe synchronous peripherals (SCL K). The internal voltage regu-\nlator for the processor can be sh ut off by writing b#00 to the \nFREQ bits of the VR_CTL regi ster. This disables both CCLK \nand SCLK. Also, disabling these cl ocks, sets the internal power \nsupply voltage (V DDINT ) to 0 V to provide the greatest power sav-\nings. To preserve the processor state, prior to removing power, \nany critical information stored  internally (memory contents, \nregister contents, and others) mu st be written to a nonvolatile \nstorage device.\nBecause V DDEXT  is still supplied in clocks-disabled state, all of the \nexternal pins three-state, unless otherwise specified. This state allows other devices that are conn ected to the processor to still \nhave power applied without drawing unwanted current.\nThere are a number of methods for wake up. The CAN module \ncan wake up the internal supply regulator. Additionally, the GPW\n pin can be pulled low by any other device to wake up the \nprocessor. Finally, the regulator ca n also be woken up by a real-\ntime clock wake-up event or by asserting the RESET  pin. All \nhibernate wake-up events initiate  the hardware reset sequence. \nIndividual sources are enable d by the VR_CTL register.\nWith the exception of the VR_CTL and the RTC registers, all \ninternal registers and memories lose their content in the hiber-\nnate state. State variables can be held in external SRAM or \nSDRAM. The SCKELOW bit in the VR_CTL register provides a \nmeans of waking from hibernate state without disrupting a self-refreshing SDRAM, provided there is also an external pull-\ndown on the SCKE pin.\nPower Savings\nAs shown in Table 6 , the ADSP-BF538/ADSP-BF538F proces-\nsors support three different powe r domains. The use of multiple \npower domains maximizes flexibility, while maintaining com-pliance with industry standards and conventions. The 3.3 V \nV\nDDRTC  power domain supplies the RTC I/O and logic so that \nthe RTC can remain functional when  the rest of the chip is pow-\nered off. The 1.25 V VDDINT po wer domain supplies all the Table 5. Power Settings \nMode PLLPLL \nBypassedCore \nClock \n(CCLK)System \nClock \n(SCLK)Internal \nPower\n(V DDINT )\nFull On Enabled No Enabled Enabled On\nActive Enabled/ \nDisabledYes Enabled Enabled On\nSleep Enabled — Disabled Enabled On\nDeep \nSleepDisabled — Disabled Disabled On\nHibernate Disabled — Disabled Disabled Off\nRev. E | Page 14 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\ninternal logic except for the RTC logic. The 3.3 V V DDEXT  power \ndomain supplies all the I/O exce pt for the RTC crystal. There \nare no sequencing requirements  for the various power domains.\nThe V DDRTC  should either be connecte d to a battery (if the RTC \nis to operate while the rest of the chip is powered down) or \nshould be connected to the V DDEXT  plane on the board. The \nVDDRTC  should remain powered when  the processor is in hiber-\nnate state, and should also be powered even if the RTC \nfunctionality is not being used in an application.\nThe power dissipated by a processo r is largely a function of the \nclock frequency of the processor and the square of the operating voltage. For example, reducing the clock frequency by 25% \nresults in a 25% reduction in dynamic power dissipation, while \nreducing the voltage by 25% reduces dynamic power dissipation \nby more than 40%. Further, thes e power savings are additive, in \nthat if the clock frequency and supply voltage are both reduced, the power savings can be dramatic.\nThe dynamic power management  feature of the processor \nallows both the processor’s input voltage (V\nDDINT ) and clock fre-\nquency (f CCLK) to be dynamically controlled. \nThe savings in power dissipation can be modeled using the \npower savings factor and % p ower savings calculations.\nThe power savings factor is calculated as\nwhere:\nfCCLKNOM  is the nominal core clock frequency. \nfCCLKRED  is the reduced core clock frequency.\nVDDINTNOM  is the nominal internal supply voltage.\nVDDINTRED  is the reduced internal supply voltage.\ntNOM is the duration running at fCCLKNOM .\ntRED is the duration running at fCCLKRED .\nThe power savings factor is calculated as\nVOLTAGE REGULATION\nThe Blackfin processors provid e an on-chip voltage regulator \nthat can generate appropriate V DDINT  voltage levels from the \nVDDEXT  supply. See Operating Conditions on Page 23  for regula-\ntor tolerances and acceptable V DDEXT  ranges for specific models.    The regulator controls the intern al logic voltage levels and is \nprogrammable with the voltag e regulator control register \n(VR_CTL) in increments of 50 mV. To reduce standby power \nconsumption, the internal voltag e regulator can be programmed \nto remove power to the processor core while I/O power (V DDRTC , \nVDDEXT ) is still supplied. While in the hibernate state, I/O power \nis still being applied, eliminating the need for external buffers. \nThe voltage regulator can be activated from this power-down state either through an RTC wake-up, a CAN wake-up, a \ngeneral-purpose wake-up, or by asserting RESET\n, all of which \nwill then initiate a boot sequence. The regulator can also be dis-abled and bypassed at the user’s discretion.\nVoltage Regulator Layout Guidelines\nRegulator external component pl acement, board routing, and \nbypass capacitors all have a significant effect on noise injected \ninto the other analog circuits on-chip. The VROUT1–0 traces \nand voltage regulator external components should be consid-ered as noise sources when doin g board layout and should not \nbe routed or placed near sensitive circuits or components on the \nboard. All internal and I/O power supplies should be well \nbypassed with bypass capacitors placed as close to the \nADSPBF538/ADSP-BF538F processors as possible.\nFor further details on the on-chi p voltage regulator and related \nboard design guidelines, see th e Switching Regulator Design \nConsiderations for ADSP-BF533 Blackfin Processor (EE-228) \napplications note on the Analog Devices website \n(www.analog.com)—use site  search on “EE-228”.\nCLOCK SIGNALS\nThe ADSP-BF538/ADSP-BF538F processors can be clocked by \nan external crystal, a sine wave input, or a buffered, shaped \nclock derived from an external clock oscillator.Table 6. Power Domains\nPower Domain V DD Range\nRTC Crystal I/O and Logic V DDRTC\nAll Internal Logic Except RTC V DDINT\nAll I/O Except RTC V DDEXT\nPower Savings Factor\nfCCLKRED\nfCCLKNOM-----------------------VDDINTRED\nVDDINTNOM----------------------------\uf0e8\uf0f8\uf0e6\uf0f62\n\uf0b4tRED\ntNOM------------\uf0e8\uf0e6\uf0b4\uf0f8\uf0f6=\n% Power Savings 1 Power Savings Factor –\uf028\uf029 100%\uf0b4 =Figure 6. Voltage Regulator CircuitVDDEXT\n(LOW-INDUCTANCE)\nVDDINT\nVROUT100μF\nVROUT\nGNDSHORT AND LOW-\nINDUCTANCE WIREVDDEXT\n+ ++\n100μF\n100μF\n10μF\nLOW ESR100nFSET OF DECOUPLING\nCAPACITORS\nFDS9431A\nZHCS1000\nNOTE: DESIGNER SHOULD MINIMIZE\nTRACE LENGTH TO FDS9431A.10μH\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 15 of 60 | November 2013If an external clock is used, it should be a TTL-compatible signal \nand must not be halted, changed,  or operated below the speci-\nfied frequency during normal operation. This signal is connected to the processor’s CL KIN pin. When an external \nclock is used, the XTAL pin must be left unconnected.\nAlternatively, beca use the ADSP-BF538/ADSP-BF538F proces-\nsors include an on-chip oscillato r circuit, an external crystal \nmay be used. For fundamental fr equency operation, use the cir-\ncuit shown in Figure 7 . A parallel-resonant, fundamental \nfrequency, microprocessor-grade crystal is connected across the \nCLKIN and XTAL pins. The on-c hip resistance between CLKIN \nand the XTAL pin is in the 500 kW  range. Further parallel resis-\ntors are typically no t recommended. The two capacitors and the \nseries resistor, shown in Figure 7 , fine tune the phase and ampli-\ntude of the sine frequency. The capacitor and resistor values, \nshown in Figure 7 , are typical values only . The capacitor values \nare dependent upon th e crystal manufacturer \'s load capacitance \nrecommendations and the physic al PCB layout. The resistor \nvalue depends on the drive level specified by the crystal manu-facturer. System designs should verify the customized values \nbased on careful investigation on multiple devices over the \nallowed temperature range.\nA third-overtone crystal can be used at frequencies above \n25 MHz. The circuit is then modified to ensure crystal operation \nonly at the third overtone, by adding a tuned inductor circuit as shown in Figure 7 .\nAs shown in Figure 8 , the core clock ( CCLK) and system \nperipheral clock (SCLK) are derived from the input clock \n(CLKIN) signal. An on-chip PLL is capable of multiplying the \nCLKIN signal by a user programmable 0.5 \uf0b4 to 64\uf0b4 multiplica-\ntion factor (bounded by specified minimum and maximum VCO frequencies). The default multiplier is 10 \uf0b4, but it can be \nmodified by a software instru ction sequence. On-the-fly fre-\nquency changes can be effected  by simply writing to the \nPLL_DIV register.All on-chip peripherals are clocked by the system clock (SCLK). \nThe system clock frequency is programmable by means of the \nSSEL3–0 bits of the PLL_DIV re gister. The values programmed \ninto the SSEL fields define a divide ratio between the PLL output \n(VCO) and the system clock. SCLK divider values are 1 through 15. \nTable 7  illustrates typical system clock ratios:\nThe maximum frequency of the system clock is f\nSCLK. Note that \nthe divisor ratio must be chosen  to limit the system clock fre-\nquency to its maximum of f SCLK. The SSEL value can be changed \ndynamically without any PLL lo ck latencies by writing the \nappropriate values to the PLL divisor register (PLL_DIV).\nNote that when the SSEL value is changed, it will affect all the \nperipherals that derive their cloc k signals from the SCLK signal.\nThe core clock (CCLK) freque ncy can also be dynamically \nchanged by means of the CSEL1–0 bits of the PLL_DIV register. \nSupported CCLK divider ratios are 1, 2, 4, and 8, as shown in \nTable 8 . This programmable core cloc k capability is useful for \nfast core frequency modifications.\nFigure 7. External Crystal ConnectionsCLKINCLKOUT\nXTALEN\n18pF* 18pF* FOR OVERTONE\nOPERATION ONLYVDDEXTTO PLL CIRCUITRY\nNOTE: VALUES MARKED WITH * MUST BE CUSTOMIZED\nDEPENDING ON THE CRYSTAL AND LAYOUT. PLEASE\nANALYZE CAREFULLY.Blackfin\n700:\n0:*1M:Figure 8. Frequency Mo dification Methods\nTable 7. Example System Clock Ratios\nSignal Name \nSSEL3–0Divider Ratio \nVCO/SCLKExample Frequency Ratios (MHz)\nVCO SCLK\n0001 1:1 100 1000110 6:1 300 50\n1010 10:1 500 50\nTable 8. Core Clock Ratios\nSignal Name \nCSEL1–0Divider Ratio \nVCO/CCLKExample Frequency Ratios \nVCO CCLK\n00 1:1 300 300\n01 2:1 300 150\n10 4:1 500 125\n11 8:1 200 25PLL\n0.5uTO 64u\n÷1 : 1 5÷1 ,2 ,4 ,8\nVCO\nSCLKdCCLK\nSCLKd133MHzCLKIN“FINE” ADJUSTMENT\nREQUIRES PLL SEQUENCING“COARSE” ADJUSTMENT\nON-THE-FLY\nCCLK\nSCLK\nRev. E | Page 16 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nBOOTING MODES\nThe ADSP-BF538/ADSP-BF538F pr ocessors have three mecha-\nnisms (listed in Table 9 ) for automatically loading internal L1 \ninstruction memory after a reset. A fourth mode is provided to \nexecute from external memory, bypassing the boot sequence.\nThe BMODE pins of the reset configuration register, sampled \nduring power-on resets and soft ware initiated resets, implement \nthe following modes:\n• Execute from 16-bit external memory – Execution starts \nfrom address 0x2000 0000 with 16-bit packing. The boot \nROM is bypassed in this mode. All configuration settings \nare set for the slowest device possible (3-cycle hold time; \n15-cycle R/W access time s; 4-cycle setup).\n• Boot from 8-bit or 16-bit external flash memory – The 8-bit \nflash boot routine located in boot ROM memory space is \nset up using asynchronous  memory bank 0. For \nADSP-BF538F processors, the on -chip flash is booted if \nFCE  is connected to AMS0 . All configuration settings are \nset for the slowest device possible (3-cycle hold time; \n15-cycle R/W access time s; 4-cycle setup).\n• Boot from SPI serial EEPROM /flash (8-, 16-, or 24-bit \naddressable, or Atmel AT45DB041, AT45DB081, or \nAT45DB161) connected to SPI0– SPI0 uses the PF2 output \npin to select a single SPI EEPROM/flash device, submits a read command and successive address bytes (0x00) until a \nvalid 8-, 16-, or 24-bit, or Atmel addressable device is \ndetected, and begins clocking da ta into the processor at the \nbeginning of L1 instruction memory.\n• Boot from SPI host device co nnected to SPI0 – The Black-\nfin processor operates in SPI slave mode and is configured \nto receive the bytes of the LDR file from an SPI host (mas-\nter) agent. To hold off the ho st device from  transmitting \nwhile the boot ROM is busy, the Blackfin processor asserts \na GPIO pin, called host wait (HWAIT), to signal the host \ndevice not to send any more bytes until the flag is deas-\nserted. The flag is chosen by the user and this information \nis transferred to the Blackfin processor via bits 10:5 of the \nFLAG header in the LDR image.\nFor each of the boot modes, a 10- byte header is first read from \nan external memory device. The header specifies the number of \nbytes to be transferred and th e memory destination address. Multiple memory blocks may be loaded by any boot sequence. \nOnce all blocks are loaded, pr ogram execution commences from \nthe start of L1 instruction SRAM.\nIn addition, Bit 4 of the reset configuration register can be set by \napplication code to bypass the normal boot sequence during a \nsoftware reset. For this case, th e processor jumps directly to the \nbeginning of L1 in struction memory.\nTo augment the boot modes, a se condary software loader is pro-\nvided that adds additional booting mechanisms. This secondary \nloader provides the capability to  boot from 16-bit flash memory, \nfast flash, variable baud rate, and other sources. In all boot \nmodes except bypass, program exec ution starts from on-chip L1 \nmemory address 0xFFA0 0000.\nINSTRUCTION SET DESCRIPTION\nThe Blackfin processor family a ssembly language instruction set \nemploys an algebraic syntax designed for ease of coding and \nreadability. The instructions have been specifically tuned to pro-\nvide a flexible, densely encoded instruction set that compiles to a very small final memory size. Th e instruction set also provides \nfully featured multifunction in structions that allow the pro-\ngrammer to use many of the proce ssor core resources in a single \ninstruction. Coupled with many features more often seen on \nmicrocontrollers, this instruction set is very efficient when com-piling C and C++ source code. In addition, the architecture \nsupports both user (algorithm/app lication code) and supervisor \n(O/S kernel, device drivers, debuggers, ISRs) modes of opera-tion, allowing multiple levels  of access to core processor \nresources.\nThe assembly language, which takes advantage of the proces-\nsor’s unique architecture, offe rs the following advantages:\n• Seamlessly integrated DSP/CP U features are optimized for \nboth 8-bit and 16-bit operations.\n• A multi-issue load/store modified Harvard architecture, \nwhich supports two 16-bit MAC or four 8-bit ALU plus \ntwo load/store plus two pointer updates per cycle.\n• All registers, I/O, and memory are mapped into a unified \n4G byte memory space, providing a simplified program-\nming model.\n• Microcontroller features, such as arbitrary bit and bit-field \nmanipulation, insertion, and extraction; integer operations on 8-, 16-, and 32-bit data ty pes; and separate user and \nsupervisor stack pointers.\n• Code density enhancements, which include intermixing of \n16- and 32-bit instructions (n o mode switching, no code \nsegregation). Frequently used instructions are encoded in \n16 bits.\nDEVELOPMENT TOOLS\nAnalog Devices supports its proce ssors with a complete line of \nsoftware and hardware development tools, including integrated \ndevelopment environments (which include CrossCore® Embed-\nded Studio and/or VisualDSP++®), evaluation products, \nemulators, and a wide variety of software add-ins.Table 9. Booting Modes\nBMODE1–0 Description\n00 Execute from 16-Bit External Memory \n(Bypass Boot ROM)\n01 Boot from 8-Bit or  16-Bit Flash, or \nBoot from On-Chip Fl ash (ADSP-BF538F Only)\n10 Boot from SPI Serial Master Connected to SPI0\n11 Boot from SPI Serial Slave EEPROM/Flash \n(8-,16-, or 24-Bit Address Range, or Atmel AT45DB041, AT45DB081, or AT45DB161 Serial Flash) \nConnected to SPI0\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 17 of 60 | November 2013Integrated Development Environments (IDEs)\nFor C/C++ software writing and editing, code generation, and \ndebug support, Analog Devices offers two IDEs. \nThe newest IDE, CrossCore Embe dded Studio, is based on the \nEclipseTM framework. Supporting most Analog Devices proces-\nsor families, it is the IDE of choice for future processors, including multicore devices. CrossCore Embedded Studio \nseamlessly integrates available so ftware add-ins to support real \ntime operating systems,  file systems, TCP/IP stacks, USB stacks, \nalgorithmic software modules, and evaluation hardware board \nsupport packages. For more information visit \nwww.analog.com/cces .\nThe other Analog Devices IDE, VisualDSP++, supports proces-\nsor families introduced prior to the release of CrossCore \nEmbedded Studio. This IDE includes the Analog Devices VDK \nreal time operating system and an open source TCP/IP stack. For more information visit www.analog.com/visualdsp . Note \nthat VisualDSP++ will not support future Analog Devices \nprocessors.\nEZ-KIT Lite Evaluation Board\nFor processor evaluation, Analog  Devices provides wide range \nof EZ-KIT Lite® evaluation boards. Incl uding the processor and \nkey peripherals, the evaluation  board also supports on-chip \nemulation capabilities and other evaluation and development features. Also available are various EZ-Extenders\n®, which are \ndaughter cards delivering additional specialized functionality, \nincluding audio and video processing. For more information visit www.analog.com  and search on “ezkit” or “ezextender”.\nEZ-KIT Lite Evaluation Kits\nFor a cost-effective way to learn more about developing with \nAnalog Devices processors, Analog Devices offer a range of EZ-\nKIT Lite evaluation kits. Each evaluation kit includes an EZ-KIT \nLite evaluation board, directions for downloading an evaluation version of the available IDE(s), a USB cable, and a power supply. \nThe USB controller on the EZ-KIT Lite board connects to the \nUSB port of the user’s PC, enab ling the chosen IDE evaluation \nsuite to emulate the on-board processor in-circuit. This permits \nthe customer to download, execut e, and debug programs for the \nEZ-KIT Lite system. It also su pports in-circuit programming of \nthe on-board Flash device to store user-specific boot code, \nenabling standalone operation. With the full version of Cross-\nCore Embedded Studio or VisualDSP++ installed (sold separately), engineers can deve lop software for supported EZ-\nKITs or any custom system util izing supported Analog Devices \nprocessors.\nSoftware Add-Ins for Cr ossCore Embedded Studio\nAnalog Devices offers software  add-ins which seamlessly inte-\ngrate with CrossCore Embedded Stud io to extend its capabilities \nand reduce development time. Add-ins include board support \npackages for evaluation hardwa re, various middleware pack-\nages, and algorithmic modules. Documentation, help, configuration dialogs, and coding examples present in these \nadd-ins are viewable through th e CrossCore Embedded Studio \nIDE once the add-in is installed.Board Support Packages for Evaluation Hardware\nSoftware support for the EZ-KIT Lite evaluation boards and EZ-\nExtender daughter cards is prov ided by software add-ins called \nBoard Support Packages (BSPs). The BSPs contain the required \ndrivers, pertinent release notes, and select example code for the \ngiven evaluation hardware. A downlo ad link for a specific BSP is \nlocated on the web page for the associated EZ-KIT or EZ-\nExtender product. The link is found in the Product Download  \narea of the product web page.\nMiddleware Packages\nAnalog Devices separately offers  middleware add-ins such as \nreal time operating systems, file systems, USB stacks, and \nTCP/IP stacks. For more information see the following web \npages:\n•www.analog.com/ucos3\n•www.analog.com/ucfs\n•www.analog.com/ucusbd\n•www.analog.com/lwip\nAlgorithmic Modules\nTo speed development, Analog Devices offers add-ins that per-\nform popular audio and video pr ocessing algorithms. These are \navailable for use with both Cr ossCore Embedded Studio and \nVisualDSP++. For more information visit www.analog.com  and \nsearch on “Blackfin software modules” or “SHARC software \nmodules”.\nDesigning an Emulator-Compatible DSP Board (Target)\nFor embedded system test and debug, Analog Devices provides a family of emulators. On each JTAG DSP, Analog Devices sup-\nplies an IEEE 1149.1 JTAG Test Access Port (TAP). In-circuit \nemulation is facilitated by use of  this JTAG interface. The emu-\nlator accesses the processor’s internal features via the \nprocessor’s TAP, allowing the de veloper to load code, set break-\npoints, and view variables, memory, and registers. The \nprocessor must be halted to se nd data and commands, but once \nan operation is completed by the emulator, the DSP system is set to run at full speed with no im pact on system timing. The emu-\nlators require the target board to  include a header that supports \nconnection of the DSP’s JT AG port to the emulator.\nFor details on target board desi gn issues including mechanical \nlayout, single processor connection s, signal buffering, signal ter-\nmination, and emulator pod logic, see the Engineer-to-Engineer \nNote “Analog Devices JTAG Emul ation Technical Reference ” \n(EE-68) on the Analog Devices website ( www.analog.com )—use \nsite search on “EE-68.” This do cument is updated regularly to \nkeep pace with improvements to emulator support.\nRev. E | Page 18 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nADDITIONAL INFORMATION\nThe following publications th at describe the ADSP-BF538/\nADSP-BF538F processors (and related processors) can be \nordered from any Analog Devices sales office or accessed elec-\ntronically on our website:\n•Getting Started with Blackfin Processors\n•ADSP-BF538/ADSP-BF538F Blackfin Processor Hardware \nReference\n•ADSP-BF53x/ADSP-BF56x Blackfin Processor Program-\nming Reference\n•ADSP-BF538 Blackfin Processor Anomaly List\nRELATED SIGNAL CHAINS\nA signal chain  is a series of signal-conditioning electronic com-\nponents that receive input (data acquired from sampling either real-time phenomena or from stor ed data) in tandem, with the \noutput of one portion of the ch ain supplying input to the next. \nSignal chains are often used in signal processing applications to gather and process data or to apply system controls based on \nanalysis of real-time phenomena. For more information about \nthis term and related topics, see the "signal chain" entry in  \nWikipedia  or the Glossary of EE Terms  on the Analog Devices \nwebsite.\nAnalog Devices eases signal proc essing system development by \nproviding signal proc essing components that are designed to \nwork together well. A tool for viewing relationships between \nspecific applications and related components is available on the www.analog.com  website.\nThe Application Signal Chains pa ge in the Circuits from the \nLab\nTM site ( http://www.analog. com/signalchains ) provides:\n• Graphical circuit block diag ram presentation of signal \nchains for a variety of circuit types and applications\n• Drill down links for components  in each chain to selection \nguides and application information\n• Reference designs applying best practice design techniques\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 19 of 60 | November 2013PIN DESCRIPTIONS\nThe ADSP-BF538/ADSP-BF538F proc essors pin definitions are \nlisted in Table 10 . \nAll pins are three-stated during and immediately after reset, \nexcept the memory interface, asynchronous memory control, and synchronous memory control pins. These pins are all \ndriven high, with the exception of CLKOUT, which toggles at \nthe system clock rate. If BR\n is active (whether or not RESET  is \nasserted), the memory pins are al so three-stated. All unused I/O \npins have their input buffers disabled with the exception of the pins that need pull-ups or pull- downs, as noted in the table. \nDuring hibernate, all outputs are three-stated unless otherwise \nnoted in Table 10 .\nIn order to maintain maximum functionality and reduce pack-\nage size and pin count, some pins have dual, multiplexed \nfunctionality. In cases where pin functionality is reconfigurable, \nthe default state is shown in plain text, while alternate function-ality is shown in italics. \nTable 10. Pin Descriptions \nPin Name I/O Function Driver Type1\nMemory Interface\nADDR19–1 O Address Bus for Async/Sync Access ADATA15–0 I/O Data Bus for Async/Sync Access AABE1–0\n/SDQM1–0 O Byte Enables/Data Masks for Async/Sync Access A\nBR I Bus Request (This pin should be pulled high when not used.)\nBG OB u s  G r a n t A\nBGH O Bus Grant Hang A\nAsynchronous Memory ControlAMS3–0\nO Bank Select (Require pull-ups if hibernate is used.) A\nARDY I Hardware Ready ControlAOE\nO Output Enable A\nARE OR e a d  E n a b l e A\nAWE OW r i t e  E n a b l e A\nFlash ControlFCE\n I Flash Enable (This pin is internally connected to GND on the ADSP-BF538.)\nFRESET I Flash Reset (This pin is internally connected to GND on the ADSP-BF538.)\nSynchronous Memory ControlSRAS\nO Row Address Strobe A\nSCAS O Column Address Strobe A\nSWE OW r i t e  E n a b l e A\nSCKE O Clock Enable (This pin must  be pulled low through a 10 k \uf057 resistor if \nhibernate state is used and SDRAM cont ents need to be preserved during \nhibernate.)A\nCLKOUT O Clock Output B\nSA10 O A10 Pin ASMS\nO Bank Select A\nTimers\nTMR0 I/O Timer 0 C\nTMR1/ PPI_FS1 I/O Timer 1/ PPI Frame Sync1 C\nTMR2/ PPI_FS2 I/O Timer 2/ PPI Frame Sync2  C\nRev. E | Page 20 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\n2-Wire Interface Port  These pins are open-drain and require a pull-up resistor. See version 2.1 \nof the I2C specification for proper resistor values.\nSDA0 I/O 5 V TWI0 Serial Data ESCL0 I/O 5 V TWI0 Serial Clock ESDA1 I/O 5 V TWI1 Serial Data ESCL1 I/O 5 V TWI1 Serial Clock ESerial Port0RSCLK0 I/O SPORT0 Receive Serial Clock DRFS0 I/O SPORT0 Receive Frame Sync CDR0PRI I SPORT0 Receive Data PrimaryDR0SEC I SPORT0 Receive Data SecondaryTSCLK0 I/O SPORT0 Transmit Serial Clock DTFS0 I/O SPORT0 Transmit Frame Sync CDT0PRI O SPORT0 Transmit Data Primary CDT0SEC O SPORT0 Transmit Data Secondary CSerial Port1RSCLK1 I/O SPORT1 Receive Serial Clock DRFS1 I/O SPORT1 Receive Frame Sync CDR1PRI I SPORT1 Receive Data PrimaryDR1SEC I SPORT1 Receive Data SecondaryTSCLK1 I/O SPORT1 Transmit Serial Clock DTFS1 I/O SPORT1 Transmit Frame Sync CDT1PRI O SPORT1 Transmit Data Primary CDT1SEC O SPORT1 Transmit Data Secondary CSPI0 PortMOSI0 I/O SPI0 Master Out Slave In CMISO0 I/O SPI0 Master In Slave Out (This pi n should always be pulled high through \na 4.7 k\uf057 resistor if booting via the SPI port.)C\nSCK0 I/O SPI0 Clock D\nUART0 PortRX0 I UART0 ReceiveTX0 O UART0 Transmit CPPI PortPPI3–0 I/O PPI3–0 CPPI_CLK/ TMRCLK I PPI Clock/ External Time r Reference\nPort C: Controller Area Network/GPIO\nCANTX/ PC0 I/O 5 V CAN Transmit/ GPIO C\nCANRX/ PC1 I/OD 5 V CAN Receive/ GPIO C\n2\nPC[9-5]\nPC4I/O\nI/OD 5 VGPIO\nGPIOC\nC2Table 10. Pin Descriptions  (Continued)\nPin Name I/O Function Driver Type1\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 21 of 60 | November 2013Port D: \nSPI1/SPI2/UART1/UART2/GPIO\nMOSI1/ PD0 I/O SPI1 Master Out Slave In/ GPIO C\nMISO1/ PD1 I/O SPI1 Master In Slave Out/ GPIO C\nSCK1/ PD2 I/O SPI1 Clock/ GPIO D\nSPI1SS /PD3 I/O SPI1 Slave Select Input/ GPIO D\nSPI1SEL1 /PD4 I/O SPI1 Slave Select Enable/ GPIO D\nMOSI2/ PD5 I/O SPI2 Master Out Slave In/ GPIO C\nMISO2/ PD6 I/O SPI2 Master In Slave Out/ GPIO C\nSCK2/ PD7 I/O SPI2 Clock/ GPIO D\nSPI2SS /PD8 I/O SPI2 Slave Select Input/ GPIO D\nSPI2SEL1 /PD9 I/O SPI2 Slave Select Enable/ GPIO D\nRX1/ PD10 I/O UART1 Receive/ GPIO D\nTX1/ PD11 I/O UART1 Transmit/ GPIO D\nRX2/ PD12 I/O UART2 Receive/ GPIO D\nTX2/ PD13 I/O UART2 Transmit/ GPIO D\nPort E: SPORT2/SPORT3/GPIORSCLK2/ PE0 I/O SPORT2 Receive Serial Clock/ GPIO D\nRFS2/ PE1 I/O SPORT2 Receive Frame Sync/ GPIO C\nDR2PRI/ PE2 I/O SPORT2 Receive Data Primary/ GPIO C\nDR2SEC/ PE3 I/O SPORT2 Receive Data Secondary/ GPIO C\nTSCLK2/ PE4 I/O SPORT2 Transmit Serial Clock/ GPIO D\nTFS2/ PE5 I/O SPORT2 Transmit Frame Sync/ GPIO C\nDT2PRI/ PE6 I/O SPORT2 Transmit Data Primary/ GPIO C\nDT2SEC/ PE7 I/O SPORT2 Transmit Data Secondary/ GPIO C\nRSCLK3/ PE8 I/O SPORT3 Receive Serial Clock/ GPIO D\nRFS3/ PE9 I/O SPORT3 Receive Frame Sync/ GPIO C\nDR3PRI/ PE10 I/O SPORT3 Receive Data Primary/ GPIO C\nDR3SEC/ PE11 I/O SPORT3 Receive Data Secondary/ GPIO C\nTSCLK3/ PE12 I/O SPORT3 Transmit Serial Clock/ GPIO D\nTFS3/ PE13 I/O SPORT3 Transmit Frame Sync/ GPIO C\nDT3PRI / PE14 I/O SPORT3 Transmit Data Primary/ GPIO C\nDT3SEC/\nPE15 I/O SPORT3 Transmit Data Secondary/ GPIO C\nPort F: GPIO/ PPI/SPI0/Timers\nPF0/SPI0SS  I/O GPIO/SPI0 Slave Select Input C\nPF1/SPI0SEL1 /TACLK  I/O GPIO/SPI0 Slave Select Enable 1/ Timer Alternate Clock Input C\nPF2/SPI0SEL2  I/O GPIO/SPI0 Slave Select Enable 2 C\nPF3/PPI_FS3/ SPI0SEL3  I/O GPIO/PPI Frame Sync 3/ SPI0 Slave Select Enable 3 C\nPF4/PPI15/ SPI0SEL4  I/O GPIO/PPI15/ SPI0 Slave Select Enable 4 C\nPF5/PPI14/ SPI0SEL5  I/O GPIO/PPI14/ SPI0 Slave Select Enable 5 C\nPF6/PPI13/ SPI0SEL6  I/O GPIO/PPI13 /SPI0 Slave Select Enable 6 CTable 10. Pin Descriptions  (Continued)\nPin Name I/O Function Driver Type1\nRev. E | Page 22 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nPF7/PPI12/ SPI0SEL7  I/O GPIO/PPI12 /SPI0 Slave Select Enable 7 C\nPF8/PPI11 I/O GPIO/PPI11 CPF9/PPI10 I/O GPIO/PPI10 CPF10/PPI9 I/O GPIO/PPI9 CPF11/PPI8 I/O GPIO/PPI8 CPF12/PPI7 I/O GPIO/PPI7 CPF13/PPI6 I/O GPIO/PPI6 CPF14/PPI5 I/O GPIO/PPI5 CPF15/PPI4 I/O GPIO/PPI4 CReal-Time ClockRTXI I RTC Crystal Input (This pin should be pulled low when not used.)RTXO O RTC Crystal Output (Does not three-state in hibernate.)JTAG PortTCK I JTAG ClockTDO O JTAG Serial Data Out CTDI I JTAG Serial Data InTMS I JTAG Mode SelectTRST\nI JTAG Reset (This pin should be pulled low if the JTAG port will not be used.)\nEMU O Emulation Output C\nClockCLKIN I Clock/Crystal InputXTAL O Crystal OutputMode ControlsRESET\nIR e s e t\nNMI I Nonmaskable Interrupt (This pin should be pulled high when not used.)\nBMODE1–0 I Boot Mode Strap (These pins must be pulled to the state required for the \ndesired boot mode.)\nVoltage RegulatorVROUT1–0 O External FET Drive 0 (These pins should be left unconnected when \nnot used and are driven high during hibernate.)\nGPW\nI 5 V General-Purpose Regulator Wake-Up (This pin should be pulled high \nwhen not used.)\nSuppliesV\nDDEXT PI / O  P o w e r  S u p p l y\nVDDINT P Internal Power Supply\nVDDRTC P Real-Time Clock Power Supply (This pin should be connected to V DDEXT  \nwhen not used and should remain powered at all times.)\nGND G Ground\n1Refer to Figure 33 on Page 47  to Figure 43 on Page 49 .\n2This pin is 5 V-tolerant when co nfigured as an input and an open-drain when conf igured as an output; therefore, only the VOL cu rves in Figure 37 on Page 48  and Figure 38 \non Page 48  and the Fall Time curves in Figure 50 on Page 51  and Figure 51 on Page 51  apply when configured as an output.Table 10. Pin Descriptions  (Continued)\nPin Name I/O Function Driver Type1\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 23 of 60 | November 2013SPECIFICATIONS\nNote that component specificat ions are subject to change \nwithout notice.\nOPERATING CONDITIONS\nParameter Conditions Min Nom Max Unit\nVDDINT\nVDDINTInternal Supply Voltage\nInternal Supply Voltage533 MHz Speed Grade Models1, 2\n400 MHz Speed Grade Models1, 2\n1The regulator can generate V DDINT  at levels of 0.85 V to 1.2 V with –5% to +10%  tolerance and 1.25 V with –4% to +10% tolerance\n2See Ordering Guide on Page 58 .0.8\n0.81.25\n1.21.375\n1.32V\nV\nVDDEXT External Supply Voltage Models with on-chip flash22.7 3.3 3.6 V\nVDDEXT External Supply Voltage Models without on-chip flash2, 3\n3When V DDEXT  < 2.70 V, on-chip voltage regulation is not supported.2.25 3.0 3.6 V\nVDDRTC Real-Time Clock Power Supply \nVoltage2.25 3.6 V\nVIH High Level Input Voltage4\n4The 3.3 V tolerant pins are capable of accepting up to 3.6 V maximum V IH The following bidirectional pins are 3.3 V to lerant: DATA15–0, SCK2 –0, MISO2–0, MOSI2–0, \nPF15–0, PPI3–0, SPI1SS , SPI1SEL1 , PC9–5, SPI2SS , SPI2SEL1 , RX2–1, TX2–1, TSCLK3–0, RSCLK3–0, TFS3–0, RFS3–0, DT2PRI, DT2SEC, DR2PRI, DR2SEC, DT3PRI, \nDT3SEC, DR3PRI, DR3SEC, and TMR2–0. The follow ing input-only pins are 3.3 V tolerant: RESET , RX0, TCK, TDI, TMS, TRST , ARDY, BMODE1–0, BR , DR0PRI, \nDR0SEC, DR1PRI, DR1SEC, NMI , PPI_CLK, and RTXI. VDDEXT  = Maximum 2.0 V\nVIH5V High Level Input Voltage5 \n5The 5 V tolerant pins are capable of accepting up to 5.5 V maximum V IH. The following bidirectional pins are 5 V tolera nt: SCL0, SCL1, SDA0, SDA1, CANTX, CANRX, and \nPC4. The following input-only pin is 5 V tolerant: GPW .VDDEXT  = Maximum 2.0 V\nVIHCLKIN High Level Input Voltage6\n6Parameter value applies to the CLKIN input pin.VDDEXT  = Maximum 2.2 V\nVIL Low Level Input Voltage4, 7\n7Parameter value applies to a ll input and bidirectional pins.VDDEXT  = Minimum +0.6 V\nVIL5V Low Level Input Voltage 5VDDEXT = Minimum +0.8 V\nTJ Junction Temperature 316-Ball Chip Scale Package Ball Grid Array (CSP_BGA)\n@ T AMBIENT  = –40°C to +85°C–40 +110 °C\nRev. E | Page 24 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nThe following tables describe the voltage/frequency require-\nments for the ADSP-BF538/ADSP -BF538F processor clocks. \nTake care in selecting MSEL, SSEL, and CSEL ratios so as not to exceed the maximum core clock ( Table 11  and Table 12 ) and \nsystem clock ( Table 14 ) specifications. Table 13  describes \nphase-locked loop operating conditions.\nTable 11. Core Clock (CCLK) Requirements — 400 MHz Models\nParameterInternal Regulator\nSetting Max Unit\nfCCLK CLK Frequency (V DDINT  = 1.14 V Minimum) 1.20 V 400 MHz\nfCCLK CLK Frequency (V DDINT  = 1.045 V Minimum) 1.10 V 364 MHz\nfCCLK CLK Frequency (V DDINT  = 0.95 V Minimum) 1.00 V 333 MHz\nfCCLK CLK Frequency (V DDINT  = 0.85 V Minimum) 0.90 V 280 MHz\nfCCLK CLK Frequency (V DDINT  = 0.8 V Minimum) 0.85 V 250 MHz\nTable 12. Core Clock (CCLK) Requirements — 533 MHz Models\nParameter Internal Regulator Setting Max Unitf\nCCLK Core Clock Frequency (V DDINT  = 1.2 V Minimum) 1.25 V 533 MHz\nfCCLK Core Clock Frequency (V DDINT  = 1.14 V Minimum) 1.20 V 500 MHz\nfCCLK Core Clock Frequency (V DDINT  = 1.045 V Minimum) 1.10 V 444 MHz\nfCCLK Core Clock Frequency (V DDINT  = 0.95 V Minimum) 1.00 V 400 MHz\nfCCLK Core Clock Frequency (V DDINT  = 0.85 V Minimum) 0.95 V 333 MHz\nfCCLK Core Clock Frequency (V DDINT = 0.8 V Minimum) 0.85 V 250 MHz\nTable 13. Phase-Locked Loop  Operating Conditions \nParameter Min Max Unit\nfVCO Voltage Controlled Oscillator (VCO) Frequency 50 Max f CCLK MHz\nTable 14. System Clock (SCLK) Requirements\nParameter1Max Unit\nfSCLK CLKOUT/SCLK Frequency (V DDINT\uf020\uf0b3 1.14 V) 1332MHz\nfSCLK CLKOUT/SCLK Frequency (V DDINT\uf020\uf03c 1.14 V) 100 MHz\n1tSCLK (= 1/f SCLK) must be greater than or equal to t CCLK.\n2Guaranteed to t SCLK = 7.5 ns. See Table 27 on page 33 .\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 25 of 60 | November 2013ELECTRICAL CHARACTERISTICS \nSystem designers should refer to Estimating Power for the \nADSP-BF538/BF539 Blackfin Processors (EE-298) , which pro-\nvides detailed information for optimizing designs for lowest \npower. All topics discussed in this  section are described in detail \nin EE-298. Total power dissi pation has two components:\n1. Static, including leakage current2. Dynamic, due to transistor  switching characteristics\nMany operating conditions can also affect po wer dissipation, \nincluding temperature, voltage, operating frequency, and pro-\ncessor activity. Electrical Characteristics on Page 25  shows the \ncurrent dissipation for internal circuitry (V\nDDINT ). I DDDEEPSLEEP  \nspecifies static power dissipati on as a function of voltage \n(VDDINT ) and temperature (see Table 15 ), and I DDINT  specifies the \ntotal power specification for the listed test conditions, including \nthe dynamic component as a function of voltage (V DDINT ) and \nfrequency ( Table 17 ). The dynamic component is also su bject to an Activity Scaling \nFactor (ASF) which represents ap plication code running on the \nprocessor ( Table 16 ).Parameter1\n1Specifications subject to  change without notice.Test Conditions Min Typ Max Unit\nVOH High Level Output Voltage2\n2Applies to output an d bidirectional pins.VDDEXT  = +3.0 V, I OH = –0.5 mA 2.4 V\nVOL Low Level Output Voltage2VDDEXT  = 3.0 V, I OL = 2.0 mA 0.4 V\nIIH High Level Input Current3\n3Applies to input pins except JTAG inputs.VDDEXT = Maximum, V IN = V DD Maximum 10.0 μA\nIIHP High Level Input Current JTAG4\n4Applies to JTAG input pins (TCK, TDI, TMS, TRST ).VDDEXT  = Maximum, V IN = V DD Maximum 50.0 μA\nIIL Low Level Input Current3VDDEXT  = Maximum, V IN = 0 V 10.0 μA\nIOZH Three-State Leakage Current5\n5Applies to three-statable pins.VDDEXT  = Maximum, V IN = V DD Maximum 10.0 μA\nIOZL Three-State Leakage Current5VDDEXT  = Maximum, V IN = 0 V 10.0 μA\nCIN Input Capacitance6, 7\n6Applies to all signal pins.\n7Guaranteed, but not tested.fCCLK = 1 MHz, T AMBIENT = 25°C, V IN = 2.5 V 4 8 pF\nIDDDEEPSLEEP8\n8See the ADSP-BF538/538F Blackfin Processor Hardware Reference  for definitions of sleep, deep sl eep, and hibernate operating modes.VDDINT  Current in Deep Sleep Mode V DDINT  = 1.0 V, f CCLK = 0 MHz, T J = 25°C, \nASF = 0.007.5 mA\nIDDSLEEP VDDINT  Current in Sleep Mode V DDINT  = 0.8 V, T J = 25°C, SCLK = 25 MHz 10 mA\nIDD-TYP VDDINT  Current V DDINT  = 1.14 V, f CCLK = 400 MHz, T J = 25°C 130 mA\nIDD-TYP VDDINT  Current V DDINT  = 1.2 V, f CCLK = 500 MHz, T J = 25°C 168 mA\nIDD-TYP VDDINT  Current V DDINT  = 1.2 V, f CCLK = 533 MHz, T J = 25°C 180 mA\nIDDHIBERNATE8 V DDEXT  Current in Hibernate State V DDEXT  = 3.6 V, CLKIN = 0 MHz, T J  = Max, \nvoltage regulator off (V DDINT = 0 V)50 100 \uf06dA\nIDDRTC VDDRTC  Current V DDRTC  = 3.3 V, T J = 25\uf0b0C 20 \uf06dA\nIDDDEEPSLEEP8VDDINT  Current in Deep Sleep Mode f CCLK = 0 MHz 6 Table 15 mA\nIDDINT9\n9See Table 16  for the list of I DDINT  power vectors covered  by various Activity Scaling Factors (ASF).VDDINT  Current f CCLK  > 0 MHz I DDDEEPSLEEP  + \n(Table 17  \uf0b4 ASF)mA\nRev. E | Page 26 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTable 15. Static Current (mA)1\nVDDINT  (V)\nTJ (°C) 0.80 V 0.85 V 0.90 V 0.95 V 1.00 V 1.05 V 1.10 V 1.15 V 1.20 V 1.25 V 1.30 V 1.32 V 1.375 V\n–40 6.4 7.7 8.8 10.4 12.0 14.0 16.1 18.9 21.9 25.2 28.7 30.6 35.9\n–25 9.2 10.9 12.5 14.5 16.7 19.3 22.1 25.6 29.5 33.7 38.1 40.5 47.2\n0 1 6 . 81 8 . 92 1 . 52 4 . 42 7 . 73 1 . 73 5 . 84 0 . 54 5 . 85 1 . 65 8 . 26 1 . 06 9 . 8\n25 32.9 37.2 41.4 46.2 51.8 57.4 64.2 72.3 80.0 89.3 98.9 103.3 116.4\n40 48.4 54.8 60.5 67.1 74.7 82.9 91.6 101.5 112.4 123.2 136.2 142.0 158.755 71.2 78.6 86.5 95.8 104.9 115.7 127.1 139.8 153.6 168.0 183.7 191.0 211.8\n70 102.3 112.2 122.1 133.5 146.1 159.2 173.9 189.8 206.7 225.5 245.6 254.1 279.6\n85 140.7 153.0 167.0 182.5 198.0 216.0 234.3 254.0 276.0 299.1 324.3 334.8 366.6100 190.6 207.1 224.6 244.0 265.6 285.7 309.0 333.7 360.0 387.8 417.3 431.1 469.3\n105 210.2 228.1 245.1 265.6 285.8 309.2 334.0 360.1 385.6 417.2 448.0 461.5 501.1\n1Values are guaranteed maximum I DDDEEPSLEEP  specifications.\nTable 16. Activity Scaling Factors\nIDDINT  Power Vector1Activity Scaling Factor (ASF)2\nIDD-PEAK 1.30\nIDD-HIGH 1.28\nIDD-TYP 1.00\nIDD-APP 0.88\nIDD-NOP 0.74\nIDD-IDLE 0.48\n1See EE-298 for power vector definitions.\n2All ASF values determined using a 10:1 CCLK:SCLK ratio.\nTable 17. Dynamic Current (mA, with ASF = 1.0)1\nFrequency \n(MHz)Voltage (V DDINT )\n0.80 V 0.85 V 0.90 V 0.95 V 1.00 V 1.05 V 1.10 V 1.15 V 1.20 V 1.25 V 1.30 V 1.32 V 1.375 V\n50 13.6 14.9 16.4 17.5 19.1 20.5 22.0 23.5 25.4 27.1 29.1 29.7 31.6100 23.6 26.0 27.9 30.1 32.3 34.4 37.0 39.2 41.7 44.3 46.4 47.6 50.3200 44.1 47.5 51.0 54.8 58.4 61.8 65.6 69.7 74.3 76.2 82.2 83.4 87.8\n250 54.6 58.7 62.8 66.8 71.2 75.7 79.9 84.5 89.8 94.2 99.4 101.2 106.5\n300 N/A 69.8 74.1 79.3 84.5 89.0 94.7 100.0 105.5 111.6 116.8 119.3 125.5375 N/A N/A 91.9 97.9 103.9 109.9 116.5 122.2 129.7 136.0 142.9 145.9 153.6400 N/A N/A N/A 103.8 110.3 116.9 123.7 130.0 137.5 144.2 151.2 154.5 162.4425 N/A N/A N/A N/A 116.6 123.7 130.9 137.2 144.7 152.7 159.9 163.3 171.8475 N/A N/A N/A N/A N/A N/A 145.0 151.8 161.4 169.4 177.8 181.1 190.4\n500 N/A N/A N/A N/A N/A N/A N/A 159.9 168.9 177.8 186.3 190.0 199.6\n533 N/A N/A N/A N/A N/A N/A N/A N/A 179.8 188.9 198.8 202.2 212.5\n1The values are not guaranteed as standalone  maximum specifications, they must be combin ed with static current per the equations  of Electrical Characteristics on Page 25 .\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 27 of 60 | November 2013ABSOLUTE MAXIMUM RATINGS\nStresses greater than those list ed below may cause permanent \ndamage to the device. These are stress ratings only. Functional operation of the device at these or any other conditions greater \nthan those indicated in the operat ional sections of this specifica-\ntion is not implied. Exposure to absolute maximum rating conditions for extended periods may affect device reliability.\nESD SENSITIVITYPACKAGE INFORMATION\nThe information presented in Figure 9  and Table 20  provides \ninformation about how to read the package brand and relate it to specific product features. For a complete listing of product \nofferings, see the Ordering Guide on Page 58 . \nTable 18. Absolute Maximum Ratings\nParameter Rating\nInternal (Core) Supply Voltage (V DDINT )– 0 . 3  V  t o  + 1 . 4  V\nExternal (I/O) Supply Voltage (V DDEXT )1\n1Parameter value applies also to V DDRTC .–0.3 V to +3.8 V\nInput Voltage2, 3\n2Applies to 100% transient duty cycle. For other duty cycles, see Table 19 . \n3Applies only when V DDEXT  is within specifications. When V DDEXT  is outside speci-\nfications, the range is V DDEXT ± 0.2 V.–0.5 V to +3.6 V\nInput Voltage4, 4\n4Applies to pins designated  as 5 V tolerant only.–0.5 V to +5.5 V\nOutput Voltage Swing –0.5 V to V DDEXT  + 0.5 V\nJunction Temperature While Biased +125°C\nStorage Temperature Range –65°C to +150°C\nTable 19. Maximum Duty Cycle for Input Transient Voltage1\n1Applies to all signal pins with the ex ception of CLKIN, XTAL, and VROUT1–0.VIN Min (V)2VIN Max (V)2\n2The individual values cannot be combined for analysis of a single instance of \novershoot or undershoot. The worst case observed value must fall within one of the voltages specified and the total duration of the overshoot or undershoot \n(exceeding the 100% case) must be less than or equal to the corresponding \nduty cycle.Maximum Duty Cycle3\n3Duty cycle refers to the percentage of time the signal exceeds the value for the \n100% case. This is equivalent to the measured durati on of a single instance of \novershoot or unders hoot as a percentage of the period of occurrence.–0.50 +3.80 100%\n–0.70 +4.00 40%–0.80 +4.10 25%–0.90 +4.20 15%–1.00 +4.30 10%\n \n ESD   (electrostatic   discharge)   sensitive   device.\nCharged devices and circuit boards can discharge  \nwithout detection. Although this product features  \npatented or proprietary protection circuitry, damage  \nmay occur on devices subjected to high energy ESD. \nTherefore, proper ESD precautions should be taken to  \navoid   performance  degradation or loss of functionality. Figure 9. Product Information on Package\nTable 20. Package Brand Information\nBrand Key Field Descriptiont Temperature Rangepp Package Type\nZ RoHS Compliant Part\nccc See Ordering Guidevvvvvv.x Assembly Lot Coden.n Silicon Revision# RoHS Compliant Designationyyww Date Codevvvvvv.x n.ntppZcccADSP-BF538a\n#yyww country_of_origin\nB\nRev. E | Page 28 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTIMING SPECIFICATIONS\nComponent specifications are subject to change \nwith PCN notice.\nClock and Reset Timing\nTable 21  and Figure 10  describe clock and reset operations. Per \nAbsolute Maximum Ratings on Page 27 , combinations of \nCLKIN and clock multipliers must not select core/peripheral \nclocks that exceed maximum operating conditions.\nTable 21. Clock and Reset Timing\nParameter Min Max Unit\nTiming Requirement s\nfCKIN CLKIN Frequency (Commercial/ Industrial Models) 1, 2, 3, 410 50 MHz\ntCKINL CLKIN Low Pulse18n s\ntCKINH CLKIN High Pulse18n s\ntWRST RESET  Asserted Pulse Width Low511 × t CKIN ns\ntNOBOOT RESET  Deassertion to First External Access Delay63 × t CKIN 5 × t CKIN ns\n1Applies to PLL bypass mode  and PLL nonbypass mode.\n2Combinations of the CLKIN frequency and the PL L clock multiplier must no t exceed the allowed f VCO, fCCLK, and f SCLK settings discussed in Table 11 on Page 24  through  \nTable 16 on Page 26 .\n3The t CKIN period (see Figure 10 ) equals 1/f CKIN.\n4If the DF bit in the PLL_CTL register is set, the minimum f CKIN specification is 24 MHz for commercial/industrial models.\n5Applies after power-up se quence is complete. See Table 22  and Figure 11  for power-up reset timing.\n6Applies when processor is configured in  No Boot Mode (BMODE2-0 = b#000).\nFigure 10. Clock and Reset Timing\nTable 22. Power-Up Reset Timing\nParameter Min Max Unit\nTiming Requirement\ntRST_IN_PWR RESET  Deasserted after the V DDINT , VDDEXT , VDDRTC , and CLKIN Pins are Stable and Within \nSpecification3500 × t CKIN ns\nIn Figure 11 , VDD_SUPPLIES  is V DDINT , VDDEXT , VDDRTC\nFigure 11. Power -Up Reset TimingCLKIN\ntWRSTtCKIN\ntCKINL tCKINH\nRESETtNOBOOT\nRESET\ntRST_IN_PWR\nCLKIN\nVDD_SUPPLIES\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 29 of 60 | November 2013Asynchronous Memory Read Cycle Timing\nTable 23  and Table 24 on Page 30  and Figure 12  and Figure 13 \non Page 30  describe asynchronous memory read cycle opera-\ntions for synchronous and for asynchronous ARDY.     \nTable 23. Asynchronous Memory Read Cycle Timing with Synchronous ARDY\nParameter Min Max Unit\nTiming Requirementst\nSDAT DATA15–0 Setup Before CLKOUT 2.1 ns\ntHDAT DATA15–0 Hold After CLKOUT 0.8 ns\ntSARDY ARDY Setup Before the Falling Edge of CLKOUT 4.0 ns\ntHARDY ARDY Hold After the Falling Edge of CLKOUT 0.0 ns\nSwitching Characteristics\ntDO Output Delay After CLKOUT16.0 ns\ntHO Output Hold After CLKOUT10.8 ns\n1Output pins include AMS3–0 , ABE1–0 , ADDR19–1, AOE , ARE .\nFigure 12. Asynchronous Memory Read Cycle Timing with Synchronous ARDYtSARDY tHARDY\ntSARDYtHARDYSETUP\n2 CYCLESPROGRAMMED READ\nACCESS 4 CYCLESACCESS EXTENDED\n3 CYCLESHOLD\n1 CYCLE\ntDO tHOtDO\ntSDATtHDATCLKOUT\nAMSx\nABE1–0\nADDR19–1\nAOE\nARE\nARDY\nDATA 15–0tHO\nRev. E | Page 30 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTable 24. Asynchronous Memory Read Cy cle Timing with Asynchronous ARDY \nParameter Min Max Unit\nTiming Requirementst\nSDAT DATA15–0 Setup Before CLKOUT 2.1 ns\ntHDAT DATA15–0 Hold After CLKOUT 0.8 ns\ntDANR ARDY Negated Delay from AMSx  Asserted1(S + RA – 2)  \uf0b4 tSCLK ns\ntHAA ARDY Asserted Hold After ARE  Negated 0.0 ns\nSwitching Characteristicst\nDO Output Delay After CLKOUT26.0 ns\ntHO Output Hold After CLKOUT20.8 ns\n1S = number of programmed setup cycles, RA = number of programmed read access cycles.\n2Output pins include AMS3–0 , ABE1–0 , ADDR19–1, AOE , ARE .\nFigure 13. Asynchronous Memory Read Cycle Timing with Asynchronous ARDYSETUP\n2 CYCLESPROGRAMMED READ\nACCESS 4 CYCLESACCESS EXTENDED\n3 CYCLESHOLD\n1 CYCLE\ntDO tHOtDO\ntDANR\ntSDAT\ntHDATCLKOUT\nAMSx\nABE1–0\nADDR19–1\nAOE\nARE\nARDY\nDATA 15–0tHO\ntHAA\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 31 of 60 | November 2013Asynchronous Memory Write Cycle Timing\nTable 25  and Table 26 on Page 32  and Figure 14  and Figure 15 \non Page 32  describe asynchronous memory write cycle opera-\ntions for synchronous and for asynchronous ARDY.   \nTable 25. Asynchronous Memory Write Cycle Timing with Synchronous ARDY\nParameter Min Max Unit\nTiming Requirementst\nSARDY ARDY Setup Before the Falling Edge of CLKOUT 4.0 ns\ntHARDY ARDY Hold After the Falling Edge of CLKOUT 0.0 ns\nSwitching Characteristicst\nDDAT DATA15–0 Disable After CLKOUT 6.0 ns\ntENDAT DATA15–0 Enable After CLKOUT 1.0 ns\ntDO Output Delay After CLKOUT16.0 ns\ntHO Output Hold After CLKOUT10.8 ns\n1Output pins include AMS3–0 , ABE1–0 , ADDR19–1, DATA15–0, AOE,  AWE .\nFigure 14. Asynchronous Me mory Write Cycle Timing  with Synchronous ARDYSETUP\n2 CYCLESPROGRAMMED\nWRITE ACCESS\n2 CYCLESACCESS\nEXTEND\n1 CYCLEHOLD\n1 CYCLE\ntDO tHOCLKOUT\nAMSx\nABE1–0\nADDR19–1\nAWE\nDATA 15–0tDO\ntSARDYtDDAT tENDATtHO\ntHARDY\ntHARDYARDYtSARDY\nRev. E | Page 32 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTable 26. Asynchronous Memory Write Cy cle Timing with Asynchronous ARDY \nParameter Min Max Unit\nTiming Requirementst\nDANW ARDY Negated Delay from AMSx  Asserted1(S + WA – 2) × t SCLK ns\ntHAA ARDY Asserted Hold After ARE  Negated 0.0 ns\nSwitching Characteristics\ntDDAT DATA15–0 Disable After CLKOUT 6.0 ns\ntENDAT DATA15–0 Enable After CLKOUT 1.0 ns\ntDO Output Delay After CLKOUT26.0 ns\ntHO Output Hold After CLKOUT20.8 ns\n1S = number of programmed setup cycles, WA = number of programmed write access cycles.\n2Output pins include AMS3–0 , ABE1–0 , ADDR19–1, DATA15–0, AOE,  AWE .\nFigure 15. Asynchronous Memory Write Cycle Timing with Asynchronous ARDYSETUP\n2 CYCLESPROGRAMMED\nWRITE ACCESS\n2 CYCLESACCESS\nEXTENDED\n2 CYCLESHOLD\n1 CYCLE\ntDO tHOCLKOUT\nAMSx\nABE1–0\nADDR19–1\nAWE\nARDY\nDATA 15–0tDO\ntDDAT tENDATtHO\ntDANW tHAA\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 33 of 60 | November 2013SDRAM Interface Timing\nTable 27. SDRAM Interface Timing\nParameter Min Max Unit\nTiming Requirement s\ntSSDAT DATA Setup Before CLKOUT 2.1 ns\ntHSDAT DATA Hold After CLKOUT 0.8 ns\nSwitching Characteristicst\nSCLK CLKOUT Period 7.5 ns\ntSCLKH CLKOUT Width High 2.5 ns\ntSCLKL CLKOUT Width Low 2.5 ns\ntDCAD Command, ADDR, Data Delay After CLKOUT1\n1Command pins include: SRAS , SCAS , SWE , SDQM, SMS , SA10, SCKE.6.0 ns\ntHCAD Command, ADDR, Data Hold After CLKOUT10.8 ns\ntDSDAT Data Disable After CLKOUT 6.0 ns\ntENSDAT Data Enable After CLKOUT 1.0 ns\nFigure 16. SDRAM Interface TimingtSCLK\nCLKOUT\ntSCLKL tSCLKH tSSDAT tHSDAT\ntENSDATtDCAD tDSDAT\ntHCAD\ntDCAD tHCADDATA (IN)\nDATA (OUT)\nCOMMAND,\nADDRESS\n(OUT)\nNOTE: COMMAND = SRAS , SCAS , SWE , SDQM, SMS , SA10, SCKE.\nRev. E | Page 34 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nExternal Port Bus Request and Grant Cycle Timing\nTable 28  and Table 29 on Page 35  and Figure 17  and Figure 18 \non Page 35  describe external port bus request and grant cycle \noperations for synchronous and for asynchronous BR .    \nTable 28. External Port Bus Request and Grant Cycle Timing with Synchronous BR\nParameter Min Max Unit\nTiming Requirementst\nBS BR Setup to Falling Edge of CLKOUT 4.6 ns\ntBH Falling Edge of CLKOUT to BR  Deasserted Hold Time 1.0 ns\nSwitching Characteristicst\nSD CLKOUT Low to AMSx , Address, and ARE /AWE  Disable 4.5 ns\ntSE CLKOUT Low to AMSx , Address, and ARE /AWE  Enable 4.5 ns\ntDBG CLKOUT High to BG  High Setup 4.0 ns\ntEBG CLKOUT High to BG  Deasserted Hold Time 4.0 ns\ntDBH CLKOUT High to BGH  High Setup 4.0 ns\ntEBH CLKOUT High to BGH  Deasserted Hold Time 4.0 ns\nFigure 17. External Port Bus Request and Grant Cycle Timing with Synchronous BRAMSxCLKOUT\nBG\nBGHBR\nADDR 19-1\nABE1-0tBH tBS\ntSD tSE\ntSD\ntSDtSE\ntSE\ntEBG tDBG\ntEBH tDBHAWE\nARE\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 35 of 60 | November 2013Table 29. External Port Bus Request and Grant Cycle Timing with Asynchronous BR\nParameter Min Max Unit\nTiming Requirementt\nWBR BR Pulse Width 2 × t SCLK ns\nSwitching Characteristics\ntSD CLKOUT Low to AMSx , Address, and ARE /AWE  Disable 4.5 ns\ntSE CLKOUT Low to AMSx , Address, and ARE /AWE  Enable 4.5 ns\ntDBG CLKOUT High to BG  High Setup 3.6 ns\ntEBG CLKOUT High to BG  Deasserted Hold Time 3.6 ns\ntDBH CLKOUT High to BGH  High Setup 3.6 ns\ntEBH CLKOUT High to BGH  Deasserted Hold Time 3.6 ns\nFigure 18. External Port Bus Request and Gr ant Cycle Timing with Asynchronous BRAMSxCLKOUT\nBG\nBGHBR\nADDR 19-1\nABE1-0tSD tSE\ntSD\ntSDtSE\ntSE\ntEBG tDBG\ntEBH tDBHAWE\nAREtWBR\nRev. E | Page 36 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nParallel Peripheral Interface Timing\nTable 30  and Figure 19 , Figure 20 , Figure 21 , and Figure 22  \ndescribe parallel peripheral interface operations.   \nTable 30. Parallel Peripheral Interface Timing\nParameter Min Max Unit\nTiming Requirements\ntPCLKW PPI_CLK Width 6.0 ns\ntPCLK PPI_CLK Period115.0 ns\ntSFSPE External Frame Sync Setup Before PPI_CLK 5.0 ns\ntHFSPE External Frame Sync Hold After PPI_CLK 1.0 ns\ntSDRPE Receive Data Setup Before PPI_CLK 2.0 ns\ntHDRPE Receive Data Hold After PPI_CLK 4.0 ns\nSwitching Characteristics—GP Output and Frame Capture Modest\nDFSPE Internal Frame Sync Delay After PPI_CLK 10.0 ns\ntHOFSPE Internal Frame Sync Hold After PPI_CLK 0.0 ns\ntDDTPE Transmit Data Delay After PPI_CLK 10.0 ns\ntHDTPE Transmit Data Hold After PPI_CLK 0.0 ns\n1PPI_CLK frequency cannot exceed f SCLK/2.\nFigure 19. PPI GP Rx Mode with Internal Frame Sync Timing\nFigure 20. PPI GP Rx Mode with External Frame Sync TimingtHDRPE tSDRPEtHOFSPEFRAME SYNC\nDRIVENDATA\nSAMPLED\nPPI_DATAPPI_CLK\nPPI_FS1/2tDFSPE\ntPCLKtPCLKW\ntPCLKtSFSPEDATA SAMPLED /\nFRAME SYNC SAMPLEDDATA SAMPLED /\nFRAME SYNC SAMPLED\nPPI_DATAPPI_CLK\nPPI_FS1/2tHFSPE\ntHDRPE tSDRPEtPCLKW\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 37 of 60 | November 2013Figure 21. PPI GP Tx Mode with External Frame Sync Timing\nFigure 22. PPI GP Tx Mode wi th Internal Frame Sync TimingtHDTPEtSFSPEDATA DRIVEN /\nFRAME SYNC SAMPLED\nPPI_DATAPPI_CLK\nPPI_FS1/2tHFSPE\ntDDTPEtPCLKtPCLKW\ntHOFSPEFRAME SYNC\nDRIVENDATA\nDRIVEN\nPPI_DATAPPI_CLK\nPPI_FS1/2tDFSPE\ntDDTPE tHDTPEtPCLK\ntPCLKWDATA\nDRIVEN\nRev. E | Page 38 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nSerial Port Timing\nTable 31  through Table 34 on Page 41  and Figure 23 on Page 39  \nthrough Figure 26 on Page 41  describe serial port operations.   \nTable 31. Serial Ports—External Clock \nParameter Min Max Unit\nTiming Requirements\ntSFSE TFSx/RFSx Setup Before TSCLKx/RSCLK x (Externally Generated TFSx/RFSx)13.0 ns\ntHFSE TFSx/RFSx Hold After TSCLKx/RSCLK x (Externally Generated TFSx/RFSx)13.0 ns\ntSDRE Receive Data Setup Before RSCLKx13.0 ns\ntHDRE Receive Data Hold After RSCLKx13.0 ns\ntSCLKEW TSCLKx/RSCLKx Width 4.5 ns\ntSCLKE TSCLKx/RSCLKx Period 15.0 ns\ntSUDTE Start-Up Delay From SPORT Enable To First External TFSx24.0 × t SCLKE ns\ntSUDRE Start-Up Delay From SPORT Enable To First External RFSx24.0 × t SCLKE ns\nSwitching Characteristics\ntDFSE TFSx/RFSx Delay After TSCLKx/RSCLK x (Internally Generated TFSx/RFSx)310.0 ns\ntHOFSE TFSx/RFSx Hold After TSCLKx/RSCLK x (Internally Generated TFSx/RFSx)30.0 ns\ntDDTE Transmit Data Delay After TSCLKx310.0 ns\ntHDTE Transmit Data Hold After TSCLKx30.0 ns\n1Referenced to sample edge.\n2Verified in design but untested. After bein g enabled, the serial port requires exte rnal clock pulses—before the first external frame sync edge—to initia lize the serial port.\n3Referenced to drive edge.\nTable 32. Serial Ports—Internal Clock \nParameter Min Max Unit\nTiming Requirementst\nSFSI TFSx/RFSx Setup Before TSCLKx/RSCLK x (Externally Generated TFSx/RFSx)19.0 ns\ntHFSI TFSx/RFSx Hold After TSCLKx/RSCLK x (Externally Generated TFSx/RFSx)1–1.5 ns\ntSDRI Receive Data Setup Before RSCLKx19.0 ns\ntHDRI Receive Data Hold After RSCLKx1–1.5 ns\nSwitching Characteristics\ntDFSI TFSx/RFSx Delay After TSCLKx/RSCLK x (Internally Generated TFSx/RFSx)23.5 ns\ntHOFSI TFSx/RFSx Hold After TSCLKx/RSCLK x (Internally Generated TFSx/RFSx)2–1.0 ns\ntDDTI Transmit Data Delay After TSCLKx23.0 ns\ntHDTI Transmit Data Hold After TSCLKx2–2.0 ns\ntSCLKIW TSCLKx/RSCLKx Width 4.5 ns\n1Referenced to sample edge.\n2Referenced to drive edge.\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 39 of 60 | November 2013Figure 23. Serial Ports\nFigure 24. Serial Port Start Up with External Clock and Frame SynctSDRIRSCLKx\nDRxDRIVE EDGE\ntHDRItSFSI tHFSItDFSI\ntHOFSItSCLKIWDATA RECEIVE—INTERNAL CLOCK\ntSDREDATA RECEIVE—EXTERNAL CLOCK\nRSCLKx\nDRxtHDREtSFSE tHFSEtDFSEtSCLKEW\ntHOFSE\ntDDTI\ntHDTITSCLKx\nTFSx\n(INPUT)\nDTxtSFSI tHFSItSCLKIW\ntDFSI\ntHOFSIDATA TRANSMIT—INTERNAL CLOCK\ntDDTE\ntHDTETSCLKx\nDTxtSFSEtDFSEtSCLKEW\ntHOFSEDATA TRANSMIT—EXTERNAL CLOCKSAMPLE EDGE\nDRIVE EDGE SAMPLE EDGE DRIVE EDGE SAMPLE EDGEDRIVE EDGE SAMPLE EDGE\ntSCLKE\ntSCLKE\ntHFSETFSx\n(OUTPUT)\nTFSx\n(INPUT)TFSx\n(OUTPUT)RFSx\n(INPUT)RFSx\n(OUTPUT)\nRFSx\n(INPUT)RFSx\n(OUTPUT)\nTSCLKx\n(INPUT)\nTFSx\n(INPUT)\nRFSx\n(INPUT)RSCLKx\n(INPUT)tSUDTE\ntSUDRE\nFIRST \nTSCLKx/RSCLKx \nEDGE AFTER \nSPORT ENABLED\nRev. E | Page 40 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTable 33. Serial Ports—Enable and Three-State \nParameter Min Max Unit\nSwitching Characteristicst\nDTENE Data Enable Delay from External TSCLKx10n s\ntDDTTE Data Disable Delay from External TSCLKx1, 2, 310 ns\ntDTENI Data Enable Delay from Internal TSCLKx1–2 ns\ntDDTTI Data Disable Delay from Internal TSCLKx1, 2, 33n s\n1Referenced to drive edge.\n2Applicable to multichannel mode only.\n3TSCLKx is tied to RSCLKx.\nFigure 25. Serial Ports—Enable and Three-StateTSCLKx\nDTxDRIVE EDGE\ntDDTTE/I tDTENE/IDRIVE EDGE\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 41 of 60 | November 2013Table 34. External Late Frame Sync\nParameter Min Max Unit\nSwitching Characteristicst\nDDTLFSE Data Delay from Late External TFSx or External RFSx in multichannel mode, MFD = 01, 210.0 ns\ntDTENLFS Data Enable from Late FS or multichannel mode, MFD = 01, 20n s\n1In multichannel mode, TFSx en able and TFSx valid follow t DTENLFS  and t DDTLFSE .\n2If external RFSx/TFSx setu p to RSCLKx/TSCLKx > t SCLKE /2, then t DDTTE/I  and t DTENE/I  apply; otherwise t DDTLFSE  and t DTENLFS  apply.\nFigure 26. External Late Frame SyncRSCLKx\nRFSx\nDTxDRIVE\nEDGEDRIVE\nEDGESAMPLE\nEDGEEXTERNAL RFSx IN MULTI-CHANNEL MODE\n1ST BITtDTENLFSEtDDTLFSE\nTSCLKx\nTFSx\nDTxDRIVE\nEDGEDRIVE\nEDGESAMPLE\nEDGELATE EXTERNAL TFSx\n1ST BITtDDTLFSE\nRev. E | Page 42 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nSerial Peripheral Interface Ports—Master Timing\nTable 35  and Figure 27  describe SPI ports master operations. \nTable 35. Serial Peripheral Interface (SPI) Ports—Master Timing\nParameter Min Max Unit\nTiming Requirements\ntSSPIDM Data Input Valid to SCKx Edge (Data Input Setup) 9.0 ns\ntHSPIDM SCKx Sampling Edge to Data Input Invalid –1.5 ns\nSwitching Characteristics\ntSDSCIM SPIxSELy  Low to First SCKx edge 2 × t SCLK–1.5 ns\ntSPICHM Serial Clock High Period 2 × t SCLK–1.5 ns\ntSPICLM Serial Clock Low Period 2 × t SCLK–1.5 ns\ntSPICLK Serial Clock Period 4 × t SCLK–1.5 ns\ntHDSM Last SCKx Edge to SPIxSELy  High 2 × t SCLK–1.5 ns\ntSPITDM Sequential Transfer Delay 2 × t SCLK–1.5 ns\ntDDSPIDM SCKx Edge to Data Out Valid (Data Out Delay) 5 ns\ntHDSPIDM SCKx Edge to Data Out Invalid (Data Out Hold) –1.0 ns\nFigure 27. Serial Peripheral Interface (SPI) Ports—Master TimingtSDSCIMtSPICLK tHDSM tSPITDMtSPICLM tSPICHM\ntHDSPIDM\ntHSPIDM tSSPIDMSPIxSELy\n(OUTPUT)\nSPIxSCK\n(OUTPUT)\nSPIxMOSI\n(OUTPUT)\nSPIxMISO\n(INPUT)\nSPIxMOSI\n(OUTPUT)\nSPIxMISO\n(INPUT)CPHA = 1\nCPHA = 0tDDSPIDM\ntHSPIDMtSSPIDMtHDSPIDM\ntDDSPIDM\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 43 of 60 | November 2013Serial Peripheral Interface Ports—Slave Timing\nTable 36  and Figure 28  describe SPI ports slave operations. \nTable 36. Serial Peripheral Interface (SPI) Ports—Slave Timing\nParameter Min Max Unit\nTiming Requirements\ntSPICHS Serial Clock High Period 2 × t SCLK–1.5 ns\ntSPICLS Serial Clock Low Period 2 × t SCLK–1.5 ns\ntSPICLK Serial Clock Period 4 × t SCLK ns\ntHDS Last SCKx Edge to SPIxSS  Not Asserted 2 × t SCLK–1.5 ns\ntSPITDS Sequential Transfer Delay 2 × t SCLK–1.5 ns\ntSDSCI SPIxSS  Assertion to First SCKx Edge 2 × t SCLK–1.5 ns\ntSSPID Data Input Valid to SCKx Edge (Data Input Setup) 2.0 ns\n tHSPID SCKx Sampling Edge to Data Input Invalid 2.0 ns\nSwitching Characteristics\ntDSOE SPIxSS  Assertion to Data Out Active 0 8 ns\ntDSDHI SPIxSS  Deassertion to Data High impedance 0 8 ns\ntDDSPID SCKx Edge to Data Out Valid (Data Out Delay) 10 ns\ntHDSPID SCKx Edge to Data Out Invalid (Data Out Hold) 0 ns\nFigure 28. Serial Peripheral Interface (SPI) Ports—Slave TimingtSPICLK tHDS tSPITDStSDSCI tSPICLS tSPICHS\ntDSOE tDDSPID\ntDDSPID tDSDHI tHDSPID\ntSSPID\ntDSDHI tHDSPID tDSOE\ntHSPID\ntSSPIDtDDSPIDSPIxSS\n(INPUT)\nSPIxSCK\n(INPUT)\nSPIxMISO\n(OUTPUT)\nSPIxMOSI\n(INPUT)\nSPIxMISO\n(OUTPUT)\nSPIxMOSI\n(INPUT)CPHA = 1\nCPHA = 0tHSPID\nRev. E | Page 44 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nGeneral-Purpose Port Timing\nTable 37  and Figure 29  describe general-purpose operations. \nTimer Clock Timing\nTable 38  and Figure 30  describe timer clock timing.Table 37. General-Purpose Port Timing\nParameter Min Max Unit\nTiming Requirement\ntWFI GP Port Pin Input Pulse Width t SCLK + 1 ns\nSwitching Characteristict\nGPOD GP Port Pin Output Delay from CLKOUT Low 6 ns\nFigure 29. General-Purpose Port Cycle TimingCLKOUT\nGPIO OUTPUT\nGPIO INPUTtWFItGPOD\nTable 38. Timer Clock Timing  \nParameter Min Max Unit\nSwitching Characteristict\nTODP Timer Output Update Delay After PPI_CLK High 12 ns\nFigure 30. Timer Clock TimingPPI_CLK\nTMRx OUTPUTtTODP\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 45 of 60 | November 2013Timer Cycle Timing\nTable 39  and Figure 31  describe timer expired operations. The \ninput signal is asynchronous in “width capture mode” and \n“external clock mode” and has an absolute maximum input fre-\nquency of (f SCLK/2) MHz.\nTable 39. Timer Cycle Timing  \nParameter Min Max Unit\nTiming Characteristicst\nWL Timer Pulse Width Input Low11× t SCLK ns\ntWH Timer Pulse Width Input High11× t SCLK ns\ntTIS Timer Input Setup Time Before CLKOUT Low26.5 ns\ntTIH Timer Input Hold Time After CLKOUT Low2–1 ns\nSwitching Characteristicst\nHTO Timer Pulse Width Output 1× t SCLK (232 – 1) × t SCLK ns\ntTOD Timer Output Delay After CLKOUT High 6 ns\n1The minimum pulse widths apply for TMRx signals in width capture and external clock modes.\n2Either a valid setup and hold time or a valid pulse width is sufficient. There is no need to resynchronize timer flag inputs.\nFigure 31. Timer Cycle TimingCLKOUT\nTMRx OUTPUT\nTMRx INPUTtTIS tTIH\ntWH,tWLtTOD\ntHTO\nRev. E | Page 46 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nUniversal Asynchronous Receiver-Transmitter \n(UART) Ports—Receive and Transmit Timing\nFor information on the UART po rt receive and transmit opera-\ntions, see the ADSP-BF538 Blackfin Processor Hardware \nReference .\nJTAG Test and Emulation Port Timing\nTable 40  and Figure 32  describe JTAG port operations. \nTable 40. JTAG Port Timing\nParameter Min Max Unit\nTiming Requirements\ntTCK TCK Period 20 ns\ntSTAP TDI, TMS Setup Before TCK High 4 ns\ntHTAP TDI, TMS Hold After TCK High 4 ns\ntSSYS System Inputs Setup Before TCK High14n s\ntHSYS System Inputs Hold After TCK High16n s\ntTRSTW TRST  Pulse Width2 (Measured in TCK Cycles) 4 TCK\nSwitching Characteristicst\nDTDO TDO Delay from TCK Low 10 ns\ntDSYS System Outputs Delay After TCK Low3,401 2 n s\n1System Inputs=ARDY, BMODE1–0, BR , DATA15–0, DR0PRI, DR0SEC, NMI , PF15–0, PPI_CLK, PPI3–0, SCL1–0, SDA1–0, SCK2–0, MISO2–0, MOSI2–0, SPI1SS , \nSPI1SEL1 , SPI2SS , SPI2SEL1 , RX2–0, TX2–1, DT2PRI, DT2SEC, DR2PRI, DR2SEC, DT3PRI, DT3SEC, TSCLK3–0, DR3PRI, DR3SEC, RSCLK3–0, RFS3–0, TFS3–0, \nCANTX, CANRX, RESET , PC9–4, GPW , and TMR2–0. \n250 MHz maximum\n3System Outputs = AMS , AOE , ARE , AWE , ABE , BG , DATA15–0, PF15–0, PC9–5, PPI3-0, SPI1SS , SPI1SEL1 , SCK2–0, MISO2–0, MOSI2–0, SPI2SS , SPI2SEL1 , RX2–1, \nTX2–0, DT2PRI, DT2SEC, DR2PRI, DR2SEC, DT3PRI, DT3SEC, DR3PRI, DR3SEC, RSCLK3–0, RFS3–0, TSCLK3–0, TFS3–0, CANTX, CLKOUT, SA10,  SCAS , SCKE, \nSMS , SRAS , SWE , and TMR2–0.\n4System open-drain outputs: CANR X (when configured as PC1) and PC4.\nFigure 32. JTAG Port TimingTCK\nTMS\nTDI\nTDO\nSYSTEM\nINPUTS\nSYSTEM\nOUTPUTStTCK\ntSTAP tHTAP\ntDTDO\ntSSYS tHSYS\ntDSYS\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 47 of 60 | November 2013OUTPUT DRIVE CURRENTS\nFigure 33  through Figure 40 on Page 48  show typical current-\nvoltage characteristics for the output drivers of the ADSP-BF538/ADSP-BF538F processors. Th e curves represent the cur-\nrent drive capability of the output drivers as a function of output \nvoltage.\nFigure 33. Drive Current A (Low V DDEXT )\nFigure 34. Drive Current A (High V DDEXT )0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0100\n60\n40\n-80-60-40-20120\n2080\n-100VDDEXT= 2.75V\nVOH\nVOL\n0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0 3.5150\n100\n50\n-150-100-50\nVOLVOH\n4.0VDDEXT=3 . 0 V\nVDDEXT=3 . 3 V\nVDDEXT=3 . 6 VFigure 35. Drive Current B (Low V DDEXT )\nFigure 36. Drive Current B (High V DDEXT )0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0150\n100\n-150VOLVOH\n-100-5050VDDEXT=2 . 7 5 V\n0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0 3.5150\n100\n50\n-200-150VOLVOH\n4.0-100-50200\nVDDEXT=3 . 0 V\nVDDEXT=3 . 3 V\nVDDEXT=3 . 6 V\nRev. E | Page 48 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nFigure 37. Drive Current C (Low V DDEXT )\nFigure 38. Drive Current C (High V DDEXT )0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.080\n60\n-60VOLVOH\n-40-2040\n20VDDEXT=2 . 7 5 V\n0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0 3.580\n60\n40\n-80-60VOLVOH\n4.0-40-20100\n20VDDEXT=3 . 0V\nVDDEXT=3 . 3V\nVDDEXT=3 . 6VFigure 39. Drive Current D (Low V DDEXT )\nFigure 40. Drive Current D (High V DDEXT )0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.080\n60\n40\n-80-60VOLVOH\n-40-20100\n20VDDEXT=2 . 7 5 V\n0\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0 3.5100\n50\n-150VOLVOH\n4.0-100-50150\nVDDEXT=3 . 0V\nVDDEXT=3 . 3V\nVDDEXT=3 . 6V\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 49 of 60 | November 2013TEST CONDITIONS\nAll timing parameters appearing in this data sheet were mea-\nsured under the conditions described in this section. Figure 43  \nshows the measurement point for ac measurements (except out-\nput enable/disable). The measurement point V MEAS is 1.5 V for \nVDDEXT  (nominal) = 3.0 V/3.3 V. Output Enable Time Measurement\nOutput pins are considered to be  enabled when th ey have made \na transition from a high impedanc e state to the po int when they \nstart driving. \nThe output enable time t ENA is the interval from the point when \na reference signal reaches a high or low voltage level to the point when the output starts driving as shown on the right side of Fig-\nure 44, “Output Enable/D isable,” on page 49 . \nThe time t\nENA_MEASURED  is the interval from  when the reference \nsignal switches to when the output voltage reaches V TRIP(high) \nor V TRIP(low). V TRIP(high) is 2.0 V and V TRIP(low) is 1.0 V for \nVDDEXT  (nominal) = 3.0 V/3.3 V. Time t TRIP is the interval from \nwhen the output starts driving to when the output reaches the \nVTRIP(high) or V TRIP(low) trip voltage. \nTime t ENA is calculated as sh own in the equation: \nIf multiple pins (such as the data bus) are enabled, the measure-\nment value is that of the first pin to start driving.\nOutput Disable Time Measurement\nOutput pins are considered to be  disabled when they stop driv-\ning, go into a high impedance stat e, and start to decay from their \noutput high or low voltage. The output disable time t DIS is the \ndifference between t DIS_MEASURED  and t DECAY  as shown on the left \nside of Figure 44 . \nThe time for the voltage on the bus to decay by \uf044V is dependent \non the capacitive load C L and the load current I L. This decay \ntime can be a pproximated by the equation:\nThe time t DECAY  is calculated with test loads C L and I L, and with \n\uf044V equal to 0.5 V for V DDEXT  (nominal) = 3.0 V/3.3 V.\nThe time t DIS_MEASURED  is the interval from when the reference \nsignal switches, to when the output voltage decays \uf044V from the \nmeasured output high or output low voltage.Figure 41. Drive Current E (Low V DDEXT )\nFigure 42. Drive Current E (High V DDEXT )\nFigure 43. Voltage Reference Levels for AC \nMeasurements (Except Output Enable/Disable)-40\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0-600\n-10\nVOL-20\n-30\n-50VDDEXT=2 . 7 5 V\n-40\nSOURCECURRENT(mA)\nSOURCE VOLTAGE (V)0 0.5 1.0 1.5 2.0 2.5 3.0 3.50\n-10\n-20\n-80-70VOL\n4.0-60-50-30VDDEXT=3 . 0V\nVDDEXT=3 . 3V\nVDDEXT=3 . 6V\nINPUT\nOR\nOUTPUTVMEAS VMEAS\nFigure 44. Output Enable/DisabletENA tENA_MEASURED tTRIP– =\ntDIS tDIS_MEASURED tDECAY– =\ntDECAY CLV\uf044\uf028\uf029 IL\uf0a4 =\nREFERENCE\nSIGNAL\ntDIS\nOUTPUT STARTS DRIVINGVOH(MEASURED) /H11546/H9004V\nVOL(MEASURED) + /H9004VtDIS_MEASURED\nVOH\n(MEASURED)\nVOL\n(MEASURED)VTRIP(HIGH)VOH(MEASURED )\nVOL(MEASURED)\nHIGH IMPEDANCE STATEOUTPUT STOPS DRIVINGtENA\ntDECAYtENA_MEASURED\ntTRIPVTRIP(LOW)\nRev. E | Page 50 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nExample System Hold Time Calculation\nTo determine the data output hold time in a particular system, \nfirst calculate t DECAY  using the equation given above. Choose \uf044V \nto be the difference betwee n the ADSP-BF538/ADSP-BF538F \nprocessor’s output voltage an d the input threshold for the \ndevice requiring the hold time. C L is the total bus capacitance \n(per data line), and I L is the total leakage or three-state current \n(per data line). The hold time will be t DECAY  plus the various out-\nput disable times as specified in the Timing Specifications on \nPage 28  (for example, t DSDAT  for an SDRAM write cycle as \nshown in Table 27 on Page 33 ).\nCapacitive Loading\nOutput delays and holds are based on standard capa citive loads: \n30 pF on all pins (see Figure 45 ). V LOAD is 1.5 V for V DDEXT  \n(nominal) = 3.0 V/3.3 V. Figure 46  through Figure 55 on \nPage 52  show how output rise and fall times vary with capaci-\ntance. The delay and hold specifications given should be derated by a factor derived from these fi gures. The graphs in these fig-\nures may not be linear outside the ranges shown.\nFigure 45. Equivalent Device Loading for AC Measurements \n(Includes All Fixtures)T1\nZO = 50 Ω (impedance)\nTD = 4.04 ± 1.18 ns\n2pFTESTER PIN ELECTRONICS\n50Ω\n0.5pF70Ω\n400Ω45Ω\n4pF\nNOTES:\nTHE WORST CASE TRANSMISSION LINE DELAY IS SHOWN AND CAN BE USED\nFOR THE OUTPUT TIMING ANALYSIS TO REFELECT THE TRANSMISSION LINE\nEFFECT AND MUST BE CONSIDERED. THE TRANSMISSION LINE (TD) IS FOR \nLOAD ONLY AND DOES NOT AFFECT THE DATA SHEET TIMING SPECIFICATIONS.\nANALOG DEVICES RECOMMENDS USING THE IBIS MODEL TIMING FOR A GIVEN \nSYSTEM REQUIREMENT. IF NECESSARY, A SYSTEM MAY INCORPORATE \nEXTERNAL DRIVERS TO COMPENSATE FOR ANY TIMING DIFFERENCES. VLOAD\nDUT\nOUTPUT50ΩFigure 46. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver A at V DDEXT   = 2.7 V (Min)\nFigure 47. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver A at V DDEXT   = 3.6 V (Max)LOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10%  to 90%)14\n12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIME\nLOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to  90%)12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIME\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 51 of 60 | November 2013Figure 48. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver B at V DDEXT   = 2.7 V (Min)\nFigure 49. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver B at V DDEXT   = 3.6 V (Max)LOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to 90%)12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIME\n \nLOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to 90%)10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0 50 100 150 200 250FALL TIME Figure 50. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver C at V DDEXT   = 2.7 V (Min)\nFigure 51. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver C at V DDEXT   = 3.6 V (Max)LOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to 90%)2530\n20\n15\n10\n5\n0\n0 50 100 150 200 250FALL TIME\nLOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to 90%)20\n18\n16\n14\n12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIME\nRev. E | Page 52 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nFigure 52. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver D at V DDEXT   = 2.7 V (Min)\nFigure 53. Typical Rise and Fall Times (10% to 90%) vs. Load Capacitance for \nDriver D at V DDEXT   = 3.6 V (Max)LOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to 90%)18\n16\n14\n12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIME\nLOAD CAPACITANCE (pF)RISE TIMERISE AND FALL TIME ns (10% to  90%)14\n12\n10\n8\n6\n4\n2\n0\n0 50 100 150 200 250FALL TIMEFigure 54. Typical Fall Time (10% to 90%) vs. Load Capacitance for Driver E \nat V DDEXT   = 2.7 V (Min)\nFigure 55. Typical Fall Time (10% to 90%) vs. Load Capacitance for Driver E \nat V DDEXT  = 3.6 V (Max)LOAD CAPACITANCE (pF)FALL TIME ns (10% to 90%)132\n128\n124\n120\n116\n108\n0 50 100 150 200 250FALL TIME\n112\nLOAD CAPACITANCE (pF)FALL TIME ns (10% to 90%)124\n120\n116\n112\n108\n100\n0 50 100 150 200 250FALL TIME\n104\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 53 of 60 | November 2013THERMAL CHARACTERISTICS\nTo determine the junction te mperature on the application \nprinted circuit board use\nwhere:\nTJ = junction temperature ( /H11543C)\nTCASE = case temperature ( /H11543C) measured by customer at top cen-\nter of package.\n\uf059JT = from Table 41  or Table 42\nPD = power dissipation (see Electrical Characteristics on Page 25  \nfor the method to calculate P D)\nValues of \uf071JA are provided for packag e comparison and printed \ncircuit board design considerations.  \uf071JA can be used for a first \norder approximation of T J by the equation\nwhere:\nTA = ambient temperature ( /H11543C)\nValues of \uf071JC are provided for package comparison and printed \ncircuit board design considerations when an external heatsink is \nrequired.\nValues of \uf071JB are provided for packag e comparison and printed \ncircuit board design considerations.\nIn Table 41  and Table 42 , airflow measurements comply with \nJEDEC standards JESD51-2 and JE SD51-6, and the junction-to-\nboard measurement complies wi th JESD51-8. Th e junction-to-\ncase measurement complies with MIL-STD-883 (Method \n1012.1). All measurements use a 2S2P JEDEC test board.TJTCASE\uf059JTPD\uf0b4\uf028\uf029+ =\nTJTA\uf071JAPD\uf0b4\uf028\uf029+ =Table 41. Thermal Characteristics BC-316-2 without Flash\nParameter Condition Typical Unit\n\uf071JA 0 Linear m/s Airflow 25.4 /H11543C/W\n\uf071JMA 1 Linear m/s Airflow 22.8 /H11543C/W\n\uf071JMA 2 Linear m/s Airflow 22.0 /H11543C/W\n\uf071JC 6.7 /H11543C/W\n\uf059JT 0 Linear m/s Airflow 0.18 /H11543C/W\n\uf059JT 1 Linear m/s Airflow 0.38 /H11543C/W\n\uf059JT 2 Linear m/s Airflow 0.40 /H11543C/W\nTable 42. Thermal Characteristics BC-316-2 with Flash\nParameter Condition Typical Unit\n\uf071JA 0 Linear m/s Airflow 24.3 /H11543C/W\n\uf071JMA 1 Linear m/s Airflow 21.8 /H11543C/W\n\uf071JMA 2 Linear m/s Airflow 21.0 /H11543C/W\n\uf071JC 6.3 /H11543C/W\n\uf059JT 0 Linear m/s Airflow 0.17 /H11543C/W\n\uf059JT 1 Linear m/s Airflow 0.36 /H11543C/W\n\uf059JT 2 Linear m/s Airflow 0.38 /H11543C/W\nRev. E | Page 54 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\n316-BALL CSP_BGA BALL ASSIGNMENT\nTable 43 on Page 55  lists the CSP_BGA ball assignment by ball \nnumber. Table 44 on Page 56  lists the CSP_BGA ball assign-\nment by signal. \nFigure 56. 316-Ball CSP_BGA Ba ll Assignment (Top View)A\nBCD\nE\nF\nG\nH\nJ\nK\nL\nM\nN\nP\nR\nU\nV\nW\nYT\n20191817 1514131211109\n8 76543211 6A1 BALL\nVDDINT\nVDDEXTGND\nI/OVDDRTC\nVROUTxNC\nFLASH CONTROL\nNote: H18 and Y14 are NC for ADSP-BF538 \nand I/O ( FCE and RESET ) for ADSP-538F.\nFigure 57. 316-Ball CSP_BGA Ba ll Assignment (Bottom View)VDDINT\nVDDEXTGND\nI/OVDDRTC\nVROUTxNCA\nBCD\nE\nF\nG\nH\nJ\nK\nL\nM\nN\nP\nR\nU\nV\nW\nYT\n2 0 1 9 1 8 1 7 1 5 1 4 1 3 1 2 1 1 1 0 987654321 16A1 BALL\nFLASH CONTROL\nNote: H18 and Y14 are NC for ADSP-BF538 \nand I/O ( FCE and RESET ) for ADSP-538F.\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 55 of 60 | November 2013Table 43. 316-Ball CSP_BGA Ball Assignme nt (Numerically by Ball Number) \nBall No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal\nA1 GND C7 SPI2SEL1 F8 GND J12 GND M19 ABE0 T3 GND W1 TCK\nA2 PF10 C8 SPI2SS F9 GND J13 GND M20 ABE1 T7 V DDEXT W2 GND\nA3 PF11 C9 MOSI2 F10 GND J14 GND N1 TFS0 T8 V DDEXT W3 DATA15\nA4 PPI_CLK C10 MISO2 F11 GND J18 AMS0 N2 DR0PRI T9 V DDEXT W4 DATA13\nA5 PPI0 C11 SCK2 F12 GND J19 AMS2 N3 GND T10 V DDEXT W5 DATA11\nA6 PPI2 C12 V DDINT F13 GND J20 SA10 N7 V DDEXT T11 V DDEXT W6 DATA9\nA7 PF15 C13 SPI1SEL1 F14 GND K1 RFS1 N8 GND T12 V DDINT W7 DATA7\nA8 PF13 C14 MISO1 F18 DT3PRI K2 TMR2 N9 GND T13 V DDINT W8 DATA5\nA9 V DDRTC C15 SPI1SS F19 PC4 K3 V DDEXT N10 GND T14 V DDINT W9 DATA3\nA10 RTXO C16 MOSI1 F20 PC8 K7 GND N11 GND T18 RFS3 W10 DATA1A11 RTXI C17 SCK1 G1 SCK0 K8 GND N12 GND T19 ADDR7 W11 RSCLK2\nA12 GND C18 GND G2 MOSI0 K9 GND N13 GND T20 ADDR8 W12 DR2PRI\nA13 CLKIN C19 PC6 G3 DT0SEC K10 GND N14 V\nDDINT U1 TRST W13 DT2PRI\nA14 XTAL C20 SCKE G7 GND K11 GND N18 DT3SEC U2 TMS W14 RX2\nA15 GND D1 PF4 G8 GND K12 GND N19 ADDR1 U3 GND W15 TX2\nA16 NC D2 PF5 G9 GND K13 GND N20 ADDR2 U7 V DDEXT W16 ADDR18\nA17 GND D3 DT1SEC G10 GND K14 GND P1 TSCLK0 U8 V DDEXT W17 ADDR15\nA18 GPW D7 GND G11 GND K18 AMS3 P2 RFS0 U9 V DDEXT W18 ADDR13\nA19 VROUT1 D8 GND G12 GND K19 AMS1 P3 GND U10 V DDEXT W19 GND\nA20 GND D9 GND G13 GND K20 AOE P7 V DDEXT U11 V DDEXT W20 ADDR14\nB1 PF8 D10 GND G14 GND L1 RSCLK1 P8 GND U12 V DDINT Y1 GND\nB2 GND D11 GND G18 BR L2 TMR1 P9 GND U13 V DDINT Y2 TDO\nB3 PF9 D12 GND G19 CLKOUT L3 GND P10 GND U14 V DDINT Y3 DATA14\nB4 PF3 D13 GND G20 SRAS L7 GND P11 GND U18 RSCLK3 Y4 DATA12\nB5 PPI1 D14 GND H1 DT1PRI L8 GND P12 GND U19 ADDR9 Y5 DATA10B6 PPI3 D18 GND H2 TSCLK1 L9 GND P13 GND U20 ADDR10 Y6 DATA8\nB7 PF14 D19 PC7 H3 DR1SEC L10 GND P14 V\nDDINT V1 TDI Y7 DATA6\nB8 PF12 D20 SMS H7 GND L11 GND P18 DR3SEC V2 GND Y8 DATA4\nB9 SCL0 E1 PF1 H8 GND L12 GND P19 ADDR3 V3 GND Y9 DATA2\nB10 SDA0 E2 PF2 H9 GND L13 GND P20 ADDR4 V4 BMODE1 Y10 DATA0\nB11 CANRX E3 GND H10 GND L14 GND R1 TX0 V5 BMODE0 Y11 RFS2B12 CANTX E7 GND H11 GND L18 TSCLK3 R2 RSCLK0 V6 GND Y12 TSCLK2\nB13 NMI\nE 8 G N DH 1 2G N DL 1 9 A R E R3 GND V7 V DDEXT Y13 TFS2\nB14 RESET E 9 G N DH 1 3G N DL 2 0 A W E R7 V DDEXT V8 V DDEXT Y14 FRESET\nB15 V DDEXT E10 GND H14 GND M1 DT0PRI R8 GND V9 V DDEXT Y15 SCL1\nB16 GND E11 GND H18 FCE M2 TMR0 R9 GND V10 V DDEXT Y16 SDA1\nB17 PC9 E12 GND H19 SCAS M3 GND R10 GND V11 V DDEXT Y17 ADDR19\nB18 GND E13 GND H20 SWE M7 V DDEXT R11 GND V12 V DDINT Y18 ADDR17\nB19 GND E14 GND J1 TFS1 M8 GND R12 GND V13 DR2SEC Y19 ADDR16\nB20 VROUT0 E18 GND J2 DR1PRI M9 GND R13 GND V14 BG Y20 GND\nC1 PF6 E19 PC5 J3 DR0SEC M10 GND R14 V DDINT V15 BGH\nC2 PF7 E20 ARDY J7 GND M11 GND R18 DR3PRI V16 DT2SECC3 GND F1 PF0 J8 GND M12 GND R19 ADDR5 V17 GND\nC4 GND F2 MISO0 J9 GND M13 GND R20 ADDR6 V18 GND\nC5 RX1 F3 GND J10 GND M14 V\nDDINT T1 RX0 V19 ADDR11\nC6 TX1 F7 GND J11 GND M18 TFS3 T2 EMU V20 ADDR12\nRev. E | Page 56 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nTable 44. 316-Ball CSP_BGA Ball Assign ment (Alphabetica lly by Signal)\nSignal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No. Signal Ball No.\nABE0 M 1 9 D A T A 8 Y 6 G N DD 1 4 G N DK 8 G N D V 2 R F S 0 P 2  T X 0 R 1\nABE1 M20 DATA9 W6 GND D18 GND K9 GND V3 RFS1 K1 TX1 C6\nADDR1 N19 DATA10 Y5 GND E3 GND K10 GND V6 RFS2 Y11 TX2 W15ADDR2 N20 DATA11 W5 GND E7 GND K11 GND V17 RFS3 T18 V\nDDEXT K3\nADDR3 P19 DATA12 Y4 GND E8 GND K12 GND V18 RSCLK0 R2 V DDEXT B15\nADDR4 P20 DATA13 W4 GND E9 GND K13 GND W2 RSCLK1 L1 V DDEXT T8\nADDR5 R19 DATA14 Y3 GND F8 GND L13 GND W19 RSCLK2 W11 V DDEXT T9\nADDR6 R20 DATA15 W3 GND F9 GND L14 GND Y1 RSCLK3 U18 V DDEXT T10\nADDR7 T19 DR0PRI N2 GND F10 GND M3 GND Y20 RTXI A11 V DDEXT T11\nADDR8 T20 DR0SEC J3 GND F11 GND M8 GPW A18 RTXO A10 V DDEXT U7\nADDR9 U19 DR1PRI J2 GND F12 GND M9 MISO0 F2 RX0 T1 V DDEXT U8\nADDR10 U20 DR1SEC H3 GND F13 GND M10 MISO1 C14 RX1 C5 V DDEXT U9\nADDR11 V19 DR2PRI W12 GND F14 GND M11 MISO2 C10 RX2 W14 V DDEXT U10\nADDR12 V20 DR2SEC V13 GND G7 GND M12 MOSI0 G2 SA10 J20 V DDEXT U11\nADDR13 W18 DR3PRI R18 GND G8 GND M13 MOSI1 C16 SCAS H19 V DDEXT V7\nADDR14 W20 DR3SEC P18 GND G9 GND N3 MOSI2 C9 SCK0 G1 V DDEXT M7\nADDR15 W17 DT0PRI M1 GND E10 GND K14 NC A16 SCK1 C17 V DDEXT N7\nADDR16 Y19 DT0SEC G3 GND E11 GND L3 NMI B13 SCK2 C11 V DDEXT P7\nADDR17 Y18 DT1PRI H1 GND E12 GND L7 PC4 F19 SCKE C20 V DDEXT R7\nADDR18 W16 DT1SEC D3 GND E13 GND L8 PC5 E19 SCL0 B9 V DDEXT T7\nADDR19 Y17 DT2PRI W13 GND E14 GND L9 PC6 C19 SCL1 Y15 V DDEXT V8\nAMS0 J18 DT2SEC V16 GND E18 GND L10 PC7 D19 SDA0 B10 V DDEXT V9\nAMS1 K19 DT3PRI F18 GND F3 GND L11 PC8 F20 SDA1 Y16 V DDEXT V10\nAMS2 J19 DT3SEC N18 GND F7 GND L12 PC9 B17 SMS D20 V DDEXT V11\nAMS3 K18 EMU T 2 G N DG 1 0 G N DN 8 P F 0 F 1 S P I 1 S E L 1 C13 V DDINT C12\nAOE K20 FCE H18 GND G11 GND N9 PF1 E1 SPI1SS C15 V DDINT M14\nARDY E20 FRESET Y14 GND G12 GND N10 PF2 E2 SPI2SEL1 C7 V DDINT N14\nARE L 1 9 G N D A 1 G N DG 1 3 G N DN 1 1 P F 3 B 4 S P I 2 S S C8 V DDINT P14\nAWE L20 GND A12 GND G14 GND N12 PF4 D1 SRAS G20 V DDINT R14\nBG V14 GND A15 GND H7 GND N13 PF5 D2 SWE H20 V DDINT T12\nBGH V15 GND A17 GND H8 GND P3 PF6 C1 TCK W1 V DDINT T13\nBMODE0 V5 GND A20 GND H9 GND P8 PF7 C2 TDI V1 V DDINT T14\nBMODE1 V4 GND B16 GND H10 GND P9 PF8 B1 TDO Y2 V DDINT U12\nBR G18 GND B18 GND H11 GND P10 PF9 B3 TFS0 N1 V DDINT U13\nCANRX B11 GND B19 GND H12 GND P11 PF10 A2 TFS1 J1 V DDINT U14\nCANTX B12 GND B2 GND H13 GND P12 PF11 A3 TFS2 Y13 V DDINT V12\nCLKIN A13 GND C18 GND H14 GND P13 PF12 B8 TFS3 M18 V DDRTC A9\nCLKOUT G19 GND C3 GND J7 GND R3 PF13 A8 TMR0 M2 VROUT0 B20\nDATA0 Y10 GND C4 GND J8 GND R8 PF14 B7 TMR1 L2 VROUT1 A19DATA1 W10 GND D7 GND J9 GND R9 PF15 A7 TMR2 K2 XTAL A14\nDATA2 Y9 GND D8 GND J10 GND R10 PPI_CLK A4 TMS U2\nDATA3 W9 GND D9 GND J11 GND R11 PPI0 A5 TRST\nU1\nDATA4 Y8 GND D10 GND J12 GND R12 PPI1 B5 TSCLK0 P1DATA5 W8 GND D11 GND J13 GND R13 PPI2 A6 TSCLK1 H2\nDATA6 Y7 GND D12 GND J14 GND T3 PPI3 B6 TSCLK2 Y12\nDATA7 W7 GND D13 GND K7 GND U3 RESET\nB14 TSCLK3 L18\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 57 of 60 | November 2013OUTLINE DIMENSIONS\nDimensions in the outline dimensions figures are shown in \nmillimeters.\nSURFACE-MOUNT DESIGN\nTable 45  is provided as an aid to PCB design. For industry-stan-\ndard design recommendations, refer to IPC-7351, Generic \nRequirements for Surface-Mount Design and Land Pattern \nStandard . Figure 58. 316-Ball Chip Scale Package Ball Grid Array [CSP_BGA] \n(BC-316-2)\nDimensions shown in millimetersCOMPLIANT TO JEDEC STANDARDS MO-275-MMAB-1.\nWITH EXCEPTION TO BALL DIAMETER.0.80\nBSCA\nB\nC\nD\nE\nF\nG\nH\nJ\nK\nL\nM\nN\nP\nR\nT\nV\nWU\nY1514\n1312\n1110\n98\n76\n54\n32\n116\n1718\n1920\n15.20\nBSC SQ\n0.50\n0.450.400.35 NOM\n0.30 MIN17.10\n17.00 SQ16.90\nCOPLANARITY\n0.20BOTTOM VIEW\nDETAIL  ATOP VIEW\nBALL DIAMETERSEATING\nPLANE1.45\n1.361.27A1 BALL\nCORNERA1 BALLCORNER\nDETAIL A \n1.08\n1.010.94\nTable 45. BGA Data for Use with Surface-Mount Design\nPackage Package Ball Attach Type Package Solder Mask Opening Package Ball Pad Size\n316-Ball CSP_BGA (BC-316-2) Solder Mask Defined 0.40 mm diameter 0.50 mm diameter\nRev. E | Page 58 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\nORDERING GUIDE\nModel 1\n1Z = RoHS compliant part.Temperature \nRange2 \n2Referenced temperature is ambient temperature.Instruction Rate (Max)Flash \nMemoryOperating Voltage\n(Nominal) Package DescriptionPackage\nOption\nADSP-BF538BBCZ-4A –40 \uf0b0C to +85\uf0b0C 400 MHz N/A 1.2 V internal, 2.5 V or 3.3 V I/O 316-Ball CSP_BGA BC-316-2\nADSP-BF538BBCZ-5A –40 \uf0b0C to +85\uf0b0C 533 MHz N/A 1.25 V internal, 2.5 V or 3.3 V I/O 316-Ball CSP_BGA BC-316-2\nADSP-BF538BBCZ-4F8 –40 \uf0b0C to +85\uf0b0C 400 MHz 8M bit 1.2 V internal, 3.0 V or 3.3 V I/O 316-Ball CSP_BGA BC-316-2\nADSP-BF538BBCZ-5F8 –40 \uf0b0C to +85\uf0b0C 533 MHz 8M bit 1.25 V internal, 3.0 V or 3.3 V I/O 316-Ball CSP_BGA BC-316-2\nADSP-BF538 /ADSP-BF538F\nRev. E | Page 59 of 60 | November 2013\nRev. E | Page 60 of 60 | November 2013ADSP-BF538 /ADSP-BF538F\n©2013 Analog Devices, Inc. All rights reserved. Trademarks and\nregistered trademarks are the property of their respective owners.\n           D06700-0-11/13(E)\nMouser Electronics\n  \nAuthorized Distributor\n \n  \nClick to View Pricing, Inventory, Delivery & Lifecycle Information:\n \n \n \n Analog Devices Inc.:   \n\xa0 ADSP-BF538BBCZ-4F8\xa0 ADSP-BF538BBCZ-5F8\n'}]
!==============================================================================!
### Component Summary: ADSP-BF538BBCZ-4F8

#### Key Characteristics and Specifications:
- **Voltage Ratings:**
  - Internal Supply Voltage (VDDINT): 1.2 V nominal
  - External Supply Voltage (VDDEXT): 3.0 V to 3.6 V
  - Real-Time Clock Power Supply (VDDRRTC): 2.25 V to 3.6 V

- **Current Ratings:**
  - Typical current at 533 MHz: 180 mA
  - Deep Sleep Mode current: 6 mA
  - Hibernate State current: 50 to 100 µA

- **Power Consumption:**
  - Dynamic power consumption varies with frequency and voltage; for example, at 533 MHz and 1.2 V, it is approximately 180 mA.

- **Operating Temperature Range:**
  - -40 °C to +85 °C

- **Package Type:**
  - 316-Ball Chip Scale Package (CSP_BGA)

- **Special Features:**
  - High-performance Blackfin processor with dual-MAC architecture.
  - Integrated on-chip voltage regulator.
  - Supports various peripherals including UART, SPI, and CAN interfaces.
  - Dynamic power management capabilities for reduced power consumption.

- **Moisture Sensitive Level (MSL):**
  - MSL is not explicitly stated in the provided text, but typically CSP packages are rated at MSL 3 or higher.

#### Description:
The **ADSP-BF538BBCZ-4F8** is a high-performance embedded processor from Analog Devices, part of the Blackfin family. It features a dual-MAC architecture, which allows for efficient signal processing and multimedia applications. The processor operates at a maximum frequency of 533 MHz and is designed for applications requiring high computational power and low power consumption.

#### Typical Applications:
- **Signal Processing:** The ADSP-BF538 is ideal for applications in audio and video processing, where real-time data handling is crucial.
- **Embedded Systems:** It is commonly used in consumer electronics, industrial automation, and automotive systems due to its robust performance and integrated peripherals.
- **Communication Systems:** The processor supports various communication protocols, making it suitable for networking and control applications.

This processor is particularly well-suited for applications that require a combination of high processing power, low power consumption, and extensive peripheral support, making it a versatile choice for embedded system designers.