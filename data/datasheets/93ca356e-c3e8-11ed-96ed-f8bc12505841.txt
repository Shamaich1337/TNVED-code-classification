[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of CR95HF-VMD5T production of ST MICROELECTRONICS from the text:This is information on a product in full production. June 2017 DocID018669 Rev 12 1/77CR95HF\n13.56-MHz multi-protocol contactless transceiver IC\nwith SPI and UART serial access\nDatasheet - production data\nFeatures\n•CR95HF belongs to the ST25 family which \nincludes all ST’s NFC/RFID tag and reader products\n•Operating modes supported:\n– Reader/Writer\n•Hardware features\n– Dedicated internal frame controller\n– Highly integrated Analog Front End (AFE) \nfor RF communications\n– Transmission and reception modes– Optimized power management\n– Tag Detection mode\n•RF communication @13.56 MHz \n– ISO/IEC 14443 Type A and B\n– ISO/IEC 15693 – ISO/IEC 18092 \n– MIFARE® Classic compatible \n(a) (b)•Communication interf aces with a Host \nController\n– Serial peripheral interface (SPI) Slave \ninterface\n– Universal asynchronous \nreceiver/transmitter (UART)\n– Up to 528-byte command/reception buffer \n(FIFO) \n•32-lead, 5x5 mm, very thin  fine pitch quad flat \n(VFQFPN) ECOPACK®2 package \nApplications\nTypical protocols supported:\n•ISO/IEC 14443-3 Type A and B tags \n•ISO/IEC 15693 tags\n•ISO/IEC 18000-3M1 tags\n•NFC Forum tags: Types 1, 2, 3 and 4 \n•ST short-range interface (SRI) tags\n•ST long-range interface (LRI) tags\n•ST Dual Interface EEPROM \na. MIFARE and MIFARE Classic are registered \ntrademarks of NXP B.V. and are used under license.\nb. Parity Framing mode is compatible with \nMIFARE® Classic requirements. However, access to Authenticated state must be supported by an external \nsecure host which embeds the MIFARE® Classic \nlibrary.VFQFPN32 (5x5 mm)\nwww.st.com\nContents CR95HF\n2/77 DocID018669 Rev 12Contents\n1 Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n1.1 Block diagram . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n1.2 List of terms  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n2 Pin and signal descriptions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n3 Power management and operating modes . . . . . . . . . . . . . . . . . . . . . . 11\n3.1 Operating modes  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11\n3.2 Startup sequence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n4 Communication protocols  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n4.1 Universal asynchronous receiver/transmitter (UART)  . . . . . . . . . . . . . . . 14\n4.2 Serial peripheral interface (SPI) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n4.2.1 Polling mode  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n4.2.2 Interrupt mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n4.3 Error codes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n4.4 Support of long frames . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n5 Commands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n5.1 Command format  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n5.2 List of commands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n5.3 IDN command (0x01) description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n5.4 Protocol Select command (0x02) description . . . . . . . . . . . . . . . . . . . . . . 205.5 Send Receive (SendRecv) command (0x04) description . . . . . . . . . . . . . 25\n5.6 Idle command (0x07) description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30\n5.6.1 Idle command parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n5.6.2 Using LFO frequency setting to redu ce power consumption . . . . . . . . . 33\n5.6.3 Optimizing wake-up conditions  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34\n5.6.4 Using various techniques to return to Ready state  . . . . . . . . . . . . . . . . 34\n5.6.5 Tag detection calibration procedure . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36\n5.7 Read Register (RdReg) command (0x08) description . . . . . . . . . . . . . . . 37\n5.8 Write Register (WrReg) command (0x09) description  . . . . . . . . . . . . . . . 38\n5.8.1 Improving RF performance  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38\nDocID018669 Rev 12 3/77CR95HF Contents\n45.8.2 Improving frame reception for ISO/IEC 14443 Type A tags . . . . . . . . . . 40\n5.8.3 Improving RF reception for ISO/IEC 18092 tags . . . . . . . . . . . . . . . . . . 40\n5.9 BaudRate command (0x0A) description . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n5.10 Echo command (0x55) description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n6 Electrical characteristi cs  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n6.1 Absolute maximum ratings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\n6.2 DC characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n6.3 Power consumption characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n6.4 SPI characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 456.5 RF characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47\n6.6 Oscillator characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\n7 Package information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\n7.1 VFQFPN32 package information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\n8 Part numbering  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52\nAppendix A Additional Idle command description . . . . . . . . . . . . . . . . . . . . . . . 53\nAppendix B Example of tag det ection calibration process  . . . . . . . . . . . . . . . . 54\nAppendix C Example of ta g detection command using\nresults of tag detection calib ration  . . . . . . . . . . . . . . . . . . . . . . . . . 57\nAppendix D Examples of CR95HF command code to\nactivate NFC Forum and ISO/ IEC 15693 tags  . . . . . . . . . . . . . . . . . 58\nD.1 ISO/IEC 14443 Type A . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\nD.1.1 NFC Forum Tag Type 1 (Topaz) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58\nD.1.2 NFC Forum Tag Type 2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60\nD.1.3 NFC Forum Tag Type 2 or 4: Using sp lit frames to resolve collisions  . . 61\nD.1.4 NFC Forum Tag Type 2  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64\nD.1.5 NFC Forum Tag Type 4A  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67\nD.2 ISO/IEC 14443 Type B . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70\nD.2.1 NFC Forum Tag Type 4B  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70\nD.3 ISO/IEC 18092  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\nD.3.1 NFC Forum Tag Type 3  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\nContents CR95HF\n4/77 DocID018669 Rev 12D.4 ISO/IEC 15693  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73\nD.4.1 ISO/IEC 15693 tag . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73\nRevision history  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nDocID018669 Rev 12 5/77CR95HF List of tables\n5List of tables\nTable 1. List of terms  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . . . . 8\nTable 2. CR95HF pin descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 9\nTable 3. CR95HF operating modes and states  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11Table 4. Select serial communication interface selection tabl e  . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\nTable 5. Interpretation of flags  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . 16\nTable 6. Possible error codes and their meaning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17Table 7. Format of ResultCode. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 18\nTable 8. Examples of ResultCode: Len pairs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18Table 9. List of CR95HF commands. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\nTable 10. IDN command description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\nTable 11. ProtocolSelect command description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20\nTable 12. List of <Parameters>  values for the ProtocolSelect command for different protocols. . . 21\nTable 13.  SendRecv command description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 5\nTable 14. List of <Data>  Send values for the SendRecv command for different protocols . . . . . . . . 26\nTable 15. List of <Data>  Response values for the SendRecv command for different protocols . . . . 28\nTable 16. Structure of Parity byte . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30\nTable 17. Idle command description. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\nTable 18. Idle command structure  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 32\nTable 19. Summary of Idle command parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\nTable 20. RdReg command description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  37\nTable 21. WrReg command description (Modulation Index an d Receiver Gain) . . . . . . . . . . . . . . . . 38\nTable 22. Possible Modulation Index values  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  39\nTable 23. Possible Receiver Gain values . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 39\nTable 24. ARC_B default code for available Reader protocols  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\nTable 25. WrReg command description (Timer Window) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40\nTable 26. BaudRate command description. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\nTable 27. Echo command description  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 41\nTable 28. Absolute maximum ratings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42\nTable 29. DC characteristics. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nTable 30. Power consumption characteristics (VPS_Ma in from 2.7 to 3.3 V)  . . . . . . . . . . . . . . . . . . 43\nTable 31. Power consumption ch aracteristics (VPS_TX from 2. 7 to 3.3 V) . . . . . . . . . . . . . . . . . . . . 43\nTable 32. Power consumption ch aracteristics (VPS_TX from 4. 5 to 5.5 V) . . . . . . . . . . . . . . . . . . . . 44\nTable 33. SPI interface characteristics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 45\nTable 34. Reader characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . 47\nTable 35. HFO 27.12 MHz oscillator characteristics  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48Table 36. VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very thin profile fine pitch \nquad flat package mechanical data  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50\nTable 37. Ordering information scheme . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 52\nTable 38. Wake-up source register. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 53\nTable 39. Wake-up event register. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53\nTable 40. Document revision history  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75\nList of figures CR95HF\n6/77 DocID018669 Rev 12List of figures\nFigure 1. CR95HF application overview  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\nFigure 2. CR95HF block diagram  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 7\nFigure 3. CR95HF pinout description. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . 9\nFigure 4. CR95HF initialization and operating state change . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12Figure 5. Power-up sequence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\nFigure 6. UART communication. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\nFigure 7. Echo command and response example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\nFigure 8. Sending command to CR95HF  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 5\nFigure 9. Polling the CR95HF until it is ready . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 15\nFigure 10. Reading data from CR95HF . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . 16\nFigure 11. Reset the CR95HF  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . 16\nFigure 12. Long frame format . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  . . . . . 18\nFigure 13. Data transfer (in both command and response) when Parity Framing mode is enabled . . 28Figure 14. SPI timing diagram (Slave mode and CPOL = 0, CPHA = 0)  . . . . . . . . . . . . . . . . . . . . . . 45\nFigure 15. SPI timing diagram (Slave mode and CPOL = 1,  CPHA = 1) . . . . . . . . . . . . . . . . . . . . . . . 46\nFigure 16. Typical application with a 27.12 MHz crystal  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48\nFigure 17. VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very thin profile fine pitch\nquad flat package outline . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 9\nFigure 18. VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very thin profile fine pitch \nquad flat package recommended footprint . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51\nDocID018669 Rev 12 7/77CR95HF Description\n101 Description\nThe CR95HF is an integrated transcei ver IC for contactless applications.\nThe CR95HF manages frame coding and decoding in Reader mode for standard \napplications such as near field communicati on (NFC), proximity and vicinity standards.\nThe CR95HF embeds an Analog Front End to provide the 13.56 MHz Air Interface.The CR95HF supports ISO/IEC 14443 Type A and B, ISO/IEC 15693 (single or double \nsubcarrier) and ISO/IEC 18092 communication protocols.\nThe CR95HF also supports the detection, re ading and writing of NFC Forum Type 1, 2, 3 \nand 4 tags.\n         \n1.1 Block diagram\n         Figure 1. CR95HF application overview\n         \nCR95HFHostInterrupt Management\nSPI\nUARTController\n(MCU)\nFigure 2. CR95HF block diagram\n         \n\nDescription CR95HF\n8/77 DocID018669 Rev 121.2 List of terms\n         Table 1. List of terms\nTerm Meaning\nDAC Digital analog converter\nGND Ground\nHFO High frequency oscillator\nLFO Low frequency oscillatorMCU Microcontroller unit\nNFC Near Field Communication\nRFID Radio Frequency IdentificationRFU Reserved for future use\nSPI Serial peripheral interface\nt\nL Low frequency period\ntREF Reference time\nUART Universal asynchron ous receiver-transmitter\nWFE Wait For Event\nDocID018669 Rev 12 9/77CR95HF Pin and signal descriptions\n102 Pin and signal descriptions\n         \n         Figure 3. CR95HF pinout description\n         \nTable 2. CR95HF pin descriptions\nPin Pin name Type(1)Main function Alternate function\n1 TX1 O Driver output 1\n2 TX2 O Driver output 2\n3 NC Not connected\n4 NC Not connected5 RX1 I Receiver input 1\n6 RX2 I Receiver input 2\n7 NC Not connected8 GND_RX P Ground (analog)\n9 ST_R0 O ST Reserved\n(2)\n10 NC Not connected\n11 NC Not connected1\n1725\n9VPS_TX\nGND_TXXOUTXINNC\nNC\nNCGNDST_R1SSI_1\nSPI_MISO\nSPI_SS\nUART_RX / IRQ_INVPSTX1\nTX2\nNCNC\nRX1\nShaded area represents the dissipation pad. \n(Must be connected to ground.)RX2\nNC\nGND_RX\nNC\nNCNC\nSSI_0\nSPI_SCKSPI_MOSI\nNC\nNC\nST_R0UART_TX / IRQ_OUT\nPin and signal descriptions CR95HF\n10/77 DocID018669 Rev 1212 UART_RX / IRQ_IN I (3)UART receive pin (4)Interrupt input\n13 VPS P Main power supply -\n14 UART_TX / IRQ_OUT O (5)UART transmit pin Interrupt output\n15 SPI_SS I (6)SPI Slave Select (active low) -\n16 SPI_MISO O (6)SPI Data, Slave Output -\n17 SPI_MOSI I (6)SPI Data, Slave Input (6)-\n18 SPI_SCK I (7)SPI serial clock -\n19 SSI_0 I (6) Select serial communication \ninterface-\n20 SSI_1 I (6) Select serial communication \ninterface-\n21 ST_R1 I (8)ST Reserved -\n22 GND P Ground (digital) -\n23 NC - Not connected -24 NC - Not connected -\n25 NC - Not connected -\n26 NC - Not connected -27 NC - Not connected -\n28 NC - Not connected -\n29 XIN - Crystal oscillator input -30 XOUT - Crystal oscillator output -\n31 GND_TX P Ground (RF drivers) -\n32 VPS_TX P Power supply (RF drivers) -\n1. I: Input, O: Output, and P: Power\n2. Must add a capacitor to ground (~1 nF).3. Pad internally connected to a Very Weak Pull-up to VPS.4. We recommend connecting this pin to the V\nPS pin using a 3.3 kOhm pull-up resistor.\n5. Pad internally connected to a Weak Pull-up to VPS.\n6. Must not be left floating.\n7. Pad internally connected to a Weak Pull-down to GND.8. Pad input in High Impedance. Must be connected to VPS. Table 2. CR95HF pin descriptions (continued)\nPin Pin name Type(1)Main function Alternate function\nDocID018669 Rev 12 11/77CR95HF Power management and operating modes\n763 Power management and operating modes\n3.1 Operating modes\nThe CR95HF has 2 operating modes: Wait for Ev ent (WFE) and Active. In Active mode, the \nCR95HF communicates actively with a tag or an  external host (an MCU, for example). WFE \nmode includes four low consumption states: Power-up, Hibernate, Sleep and Tag Detector.\nThe CR95HF can switch from one mode to another. \n         \nHibernate, Tag Detector, and Sleep states can only be activated by a command from the \nexternal host. As soon as any of these th ree states are activated, the CR95HF can no \nlonger communicate with the external host. It can only be woken up. \nThe behavior of the CR95HF in \'Tag Detect or\' state is defined by the Idle command.Table 3. CR95HF operating modes and states\nMode State Description\nWait For \nEvent \n(WFE)Power-upThis mode is accessible directly after POR.\nLow level on IRQ_IN  pin (longer than 10 µs) is the only wakeup \nsource. LFO (low-frequen cy oscillator) is running in this state.\nHibernateLowest power consumption state. The CR95HF has to be woken-up \nin order to communicate. Low level on IRQ_IN  pin (longer than 10 \nµs) is the only wakeup source.\nSleepLow power consumption state. Wakeup source is configurable:\n–T i m e r\n–I R Q _ I N  pin\n– SPI_SS  pin\nLFO (low-frequency oscillator) is running in this state.\nTag DetectorLow power consumption state with tag detection. Wakeup source is \nconfigurable:\n–T i m e r–I R Q _ I N\n pin\n– SPI_SS  pin\n– Tag detectorLFO (low-frequency oscillator) is running in this state.\nActiveReadyIn this mode, the RF is OFF and the CR95HF waits for a command \n(P\nROTOCOL SELECT , ...) from the external host via the selected serial \ninterface (UART or SPI).\nReaderThe CR95HF can communicate with a tag using the selected \nprotocol or with an external host using the selected serial interface \n(UART or SPI).\nPower management and operating modes CR95HF\n12/77 DocID018669 Rev 12         \n3.2 Startup sequence\nAfter the power supply is established at powe r-on, the CR95HF waits for a low pulse on the \npin IRQ_IN  (t1) before automatically selecting the ex ternal interface (SPI or UART) and \nentering Ready state after a delay (t3). \n         \n1. Note for pin SSI0: - - -   SPI selected, –––– UART selected\n2. Pin IRQ_IN  low level < 0.2 VPS_Main.\nNote: When CR95HF leaves WFE mode (from Power-up, Hibernate, Tag Detector, or Sleep) \nfollowing an IRQ_IN /RX low level pulse, this pulse is NO T interpreted as the UART start bit \ncharacter.Figure 4. CR95HF initialization and operating state change \n         \nFigure 5. Power-up sequence\n         \n-3\x12\x10\x10\x12\x116\x11603\n)21?).\n&IRST\x00VALID\nCOMMANDT\x10T\x11\nT\x13\nT\x1233)?\x1133)?\x10T\x14\nDocID018669 Rev 12 13/77CR95HF Power management and operating modes\n76Figure 5  shows the power-up sequence for a CR95HF device; where,\n• t0 is the initial wake-up delay 100 µs (minimum)\n• t1 is the minimum interrupt width 10 µs (minimum)\n• t2 is the delay for the serial in terface selection 250 ns (typical)\n• t3 is the HFO setup time (tSU(HFO) ) 10 ms (maximum)\n• t4 is the VPS ramp-up time from 0V to VPS 10 ms (max. by design validation)\nNote: VPS must be 0V before exec uting the start-up sequence.\nThe serial interface is se lected after the following falling edge of pin IRQ_IN  when leaving \nfrom POR or Hibernate state.\nTable 4  lists the signal configuration used to se lect the serial communication interface.\n         Table 4. Select serial communication interface selection table\nPin Serial interface\nSSI_0 UART: 0 SPI: 1\nSSI_1 UART: 0 SPI: 0\nCommunication protocols CR95HF\n14/77 DocID018669 Rev 124 Communication protocols\n4.1 Universal asynchronous receiver/transmitter (UART)\nThe host sends commands to the CR95HF and waits for replies. Polling for readiness is not \nnecessary. The default baud rate is 57600 baud. The maximum allowed baud rate is 2M b p s .  \n         \nWhen sending commands, no data must be sent if the LEN field is zero. \nWhen receiving data from the CR95HF, no data will be received  if the LEN field is zero.\nThe formats of send and receive packets are identical.If an E\nCHO command is sent, only one byte (0x55) is sent by the host.\nFigure 7  shows an example of an E CHO command. \n         \nCaution: UART communication is LSB first. Stop bit duration is two Elementary Time Units \n(ETUs).\nNote: 1 When CR95HF leaves WFE mode (from Power-up, Hibernate, Sleep Detector or Tag \nDetector) following an |RQ_IN /RX low level pulse, this pulse is NOT interpreted as the UART \nstart bit character.\n2 If the user loses UART synchronization, it can be recovered by sending an E CHO command \nuntil a valid E CHO reply is received. Otherwise, after a maximum of 528 E CHO commands, Figure 6. UART communication\n         \nFigure 7. E CHO command and response example\n         Sending commands to the CR95HF\nReceiving data from the CR95HFCMD LEN DATA DATA\nSeveral data bytes\nResp Code LEN DATA DATA\nSeveral data bytes\nAi18122 aCR95HF\nIntern al\nClock\nRX\nTX01234567\n10101010 1          1\n(Stop)(Echo 0x55)Host to CR95HF\nRX\nTXCR95HF to Ho st0\n(Start)\n10101010 1          1\n(Stop)(Echo 0x55)0\n(Start)\nDocID018669 Rev 12 15/77CR95HF Communication protocols\n76CR95HF will reply with an error code meaning it s input buffer is full. The user can now \nrestart a UART exchange.\n4.2 Serial peripheral interface (SPI)\n4.2.1 Polling mode\nIn order to send commands and receive replies, the application software has to perform 3 steps.\n1. Send the command to the CR95HF.2. Poll the CR95HF until it is ready to transmit the response.\n3. Read the response.\nThe application software should never read data from the CR95HF without being sure that \nthe CR95HF is ready to send the response.\nThe maximum allowed SPI communication speed is f\nSCK.\nA Control byte is used to specif y a communication type and direction:\n• 0x00: Send command to the CR95HF\n• 0x03: Poll the CR95HF\n• 0x02: Read data from the CR95HF\n• 0x01: Reset the CR95HF\nThe SPI_SS  line is used to select a device on the common SPI bus. The SPI_SS  pin is \nactive low. \nWhen the SPI_SS  line is inactive, all data sent by the Master device is ignored and the \nMISO line remains in High Impedance state. \nFigure 8. Sending command to CR95HF \nFigure 9. Polling the CR95HF until it is ready MOSI 0 0 0 0 0 0 0 0 CMD LEN DATA DATA\nControl Byte\nMISO X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X XSeveral data bytes\nMOSI 0 0 0 0 0 0 1 1 X X X X X X 1 1 X X X X X X 1 1 X X X X X X 1 1\nControl Byte\nMISO X X X X X X X XFlag Flag\nFlags are polled until data is ready (Bit 3 is set when data is ready)0 0 0 0 0 X X X 0 0 0 0 0 X X X 0 0 0 0 1 X X X\nCommunication protocols CR95HF\n16/77 DocID018669 Rev 12         \nFigure 10. Reading data from CR95HF \nData must be sampled at the rising edge of the SCK signal. \n‘Sending’, ‘Polling’ and ‘Reading’ commands mu st be separated by a high level of the \nSPI_SS  line. For example, when the application needs to wait for data from the CR95HF, it \nasserts the SPI_SS  line low and issues a ‘Pollin g’ command. Keeping the SPI_SS  line low, \nthe Host can read the Flags Waiting bit which indicates that the CR95HF can be read. Then, \nthe application has to assert the SPI_SS  line high to finish th e polling command. The Host \nasserts the SPI_SS  line low and issues a ‘Reading’ command to read data. When all data is \nread, the application asserts the SPI_SS  line high. \nThe application is no t obliged to keep reading Flags us ing the Polling command until the \nCR95HF is ready in one command. It can issue as many \'Polling\' commands as necessary. \nFor example, the application asserts SPI_SS  low, issues \'Polling\' commands and reads \nFlags. If the CR95HF is not ready,  the application can assert SPI_SS  high and continue its \nalgorithm (measuring temperature, communication with something else). Then, the application can assert SPI_SS\n low again and again issue \'Po lling\' commands, and so on, as \nmany times as necessary, until the CR95HF is ready.\nNote that at the beginning of communication, the application does not need to check flags to \nstart transmission. The CR95HF is assumed to be ready to receive a command from the \napplication.\nFigure 11. Reset the CR95HF \nTo reset the CR95HF using the SPI, the applic ation sends the SPI Reset command (Control \nByte 01, see Figure 11 ) which starts the internal controller reset process and puts the \nCR95HF into Power-up state. The CR95HF will wake up when pin IRQ_IN  goes low. The \nCR95HF reset process only starts when the SPI_SS  pin returns to high level.\nCaution: SPI communication is MSB first.Table 5. Interpretation of flags\nBit Meaning (Application point of view)\n[7:4] Not significant\n3 Data can be read from the CR95HF when set.2 Data can be sent to the CR95HF when set.\n[1:0] Not significant\nMOSI 0 0 0 0 0 0 1 0 X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X\nControl Byte\nMISO X X X X X X X X Resp Code LEN DATA DATA\nSeveral data bytes\nMOSI 0 0 0 0 0 0 0 1\nControl Byte 01\nMISO X X X X X X X X\nDocID018669 Rev 12 17/77CR95HF Communication protocols\n764.2.2 Interrupt mode\nWhen the CR95HF is configure to use t he SPI serial interface, pin IRQ_OUT  is used to give \nadditional information to user. When the CR95HF is ready to send back a reply, it sends an Interrupt Request by setting a low level on pin IRQ_OUT\n, which remains low until the host \nreads the data. \nThe application can use the Interrupt mo de to skip the polling stage.\nCaution: SPI communication is MSB first.\n4.3 Error codes\n         Table 6. Possible error codes and their meaning\nCode Name Meaning\n0X63 EEmdSOFerror23 SOF error in high part (duration 2 to 3 etu) in ISO/IEC 14443B\n0x65 EEmdSOFerror10 SOF error in low part ( duration 10 to 11 etu) in ISO/IEC 14443B\n0x66 EEmdEgt error Extennded Guard Time error in ISO/IEC 14443B\n0x67 ETr1 Too Big Too long  TR1 send by the card, reception stopped in ISO/IEC 14443BT\n0x68ETr1Too small Too \nsmallTR1 send by the card in ISO/IEC 14443B\n0x71 EinternalError Wrong frame format decodes0x80 EFrameRecvOKFrame correctly received (additionally see CRC/Parity \ninformation)\n0x85 EUserStop Stopped by user (used only in Card mode)\n0x86 ECommError Hardware communication error\n0x87 EFrameWaitTOut Frame wait time out (no valid reception)0x88 EInvalidSof Invalid SOF\n0x89 EBufOverflow Too many bytes received and data still arriving\n0x8A EFramingError if start bit = 1 or stop bit = 00x8B EEgtError EGT time out\n0x8C EInvalidLen Valid for ISO/IEC 18092, if Length <3\n0x8DECrcError CRC error, Valid only for ISO/IEC 18092\n0x8EERecvLostWhen reception is lost without EOF received (or subcarrier was \nlost)\n0x8FENoField When Listen command detects the absence of external field\n0x90EUnintByteResidual bits in last byte. Useful for ACK/NAK reception of \nISO/IEC 14443 Type A.\nCommunication protocols CR95HF\n18/77 DocID018669 Rev 124.4 Support of long frames\nIn Reader mode it is possible to receive up to 528 bytes of frame data from VICC and Type-\nB cards and up to 256 bytes of frame data from Type-A cards. In this case, the device sends \na reply to the external M CU in the following format:\n<ResultCode> + <Len> + <N bytes of data>\n         \nFigure 12. Long frame format \nThe number of databytes is 10-bit long. \n         Table 7. Format of ResultCode\nBit Meaning\n7 Always 1\n6 Bit 9 of Length\nSee examples and explanation below\n5 Bit 8 of Length\n4 If set, there are residual bits in the last  byte. Applicable only for Type-A protocol.\n3:0 Always 0\nTable 8. Examples of ResultCode: Len pairs\nResultCode Len Length of data\n0x80 0x00 0\n0x80 0x01 10x80 0xFF 255\n0xA0 0x00 256\n0xA0 0x01 2570xA0 0xFF 511\n0xC0 0x00 512\n0xC0 0x01 513\nDocID018669 Rev 12 19/77CR95HF Commands\n765 Commands\n5.1 Command format\n• The frame from the Host to the CR95HF has the following format:\n<CMD><Len><Data>\n• The frame from the CR95HF to Ho st has the following format:\n<RespCode><Len><Data>\nThese two formats are available ei ther in both UART and SPI modes.\nFields <Cmd>, <RespCode> and <Len> are alwa ys 1 byte long. <Data> can be from 0 to \n253 bytes.\nNote: The E CHO command is an exception as it has only one byte (0x55).\nThe following symbols correspond to:\n>>> Frame sent by the Host to CR95HF <<< Frame sent by the CR95HF to the Host\n5.2 List of commands\nTable 9  summarizes the available commands.\n         Table 9. List of CR95HF commands\nCode Command Description\n0x01 IDN Requests short information about the CR95HF and its revision.\n0x02 PROTOCOL SELECTSelects the RF communication protocol and specifies certain \nprotocol-related parameters.\n0x04 SendRecvSends data using the previously selected protocol and receives the \ntag response.\n0x07 IDLESwitches the CR95HF into a low consumption Wait for Event \n(WFE) mode (Power-up, Hibernate, Sleep or Tag Detection), specifies the authorized wake-up sources and waits for an event to \nexit to Ready state.\n0x08 R\nDREGReads Wake-up event register or the Analog Register \nConfiguration (ARC_B) register.\n0x09 WRREGWrites Analog Register Configurat ion (ARC_B)) register or writes \nindex of ARC_B register address.\nWrites the Timer Window (TimerW) value dedicated to ISO/IEC \n14443 Type A tags.\nWrites the AutoDetect Filter e nable register dedicated to ISO/IEC \n18092 tags.\n0x0A BaudRate Sets the UART baud rate.\n0x55 Echo CR95HF returns an E CHO response (0x55).\nOther codes ST Reserved\nCommands CR95HF\n20/77 DocID018669 Rev 125.3 IDN command (0x01) description\nThe IDN command ( 0x01 ) gives brief information about the CR95HF and its revision.\n         \nIt takes approximately 6 ms to calculate the CRC  for the entire ROM. The application must \nallow sufficient time for waiting for a response for this command. \n5.4 Protocol Select comma nd (0x02) description\nThis command selects the RF communication protocol and prepares the CR95HF for \ncommunication with a contactless tag.\n         Table 10. IDN command description\nDirection Data Comments Example\nHost to \nCR95HF 0x01 Command code\n>>>0x0100\n0x00 Length of data\nCR95HF to \nHost0x00 Result code <<<0x000F4E4643204653324A415354\n34002ACE\nIn this example,\n<<<0x4E4643204653324A4153543400\n: ‘NFC FS2JAST4’, #4 (Last Character of \nNFC FS2JAST4 means ROM code \nrevision 4.)\n0x2ACE : CRC of ROM (real CRC may \ndiffer from this example)<Len> Length of data\n<Device ID>Data in ASCII format (13 \nbytes)\n<ROM CRC>CRC calculated for ROM \ncontent (2 bytes)\nTable 11. PROTOCOL SELECT  command description\nDirection Data Comments Example\nHost to \nCR95HF 0x02 Command code\nSee Table 12: List of <Parameters> \nvalues for the ProtocolSelect command for different protocols on page 21  for a \ndetailed example.<Len> Length of data\n<Protocol>Protocol codes:\n  00: Field OFF\n  01: ISO/IEC 15693\n  02: ISO/IEC 14443-A\n  03: ISO/IEC 14443-B\n  04: ISO/IEC 18092 /NFC \nForum Tag Type 3\n<Parameters>Each protocol has a \ndifferent set of \nparameters. See \nTable 12 .\nCR95HF to \nHost0x00 Result code <<<0x0000\nProtocol is successfully selected 0x00 Length of data\nCR95HF to \nHost0x82 Error code <<<0x8200\nInvalid command length 0x00 Length of data\nDocID018669 Rev 12 21/77CR95HF Commands\n76Note that there is no ‘F ield ON’ command. When the a pplication selects an RF \ncommunication protocol, the fiel d automatically switches ON . \nWhen the application selects a protocol, the CR95HF performs all necessary settings: it will \nchoose the appropriate reception and transmissi on chains, switch ON or OFF the RF field \nand connect the antenna accordingly. \nDifferent protocols have different sets of parameters. Values for the <Parameters>  field \nare listed in Table 12 .\n         CR95HF to \nHost0x83 Error code <<<0x8300\nInvalid protocol 0x00 Length of data\nTable 12. List of <Parameters>  values for the PROTOCOL SELECT  command for different \nprotocols\nProtocol CodeParameters\nExamples of commands\nByte Bit Function\nField OFF 0x00 07 : 0 R F U >>>0x02020000\nISO/IEC 15693 0x01 07:6 RFU\nH 100 S: >>>0x02 02 01 01 \nH 100 D: >>>0x02 02 01 03 \nH 10 S: >>>0x02 02 01 05 \nH 10 D: >>>0x02 02 01 07 \nL 100 S: >>>0x02 02 01 21 \nL 100 D: >>>0x02 02 01 23 \nL 10 S: >>>0x02 02 01 25 \nL 10 D: >>>0x02 02 01 27 \nIn these examples, the CRC is \nautomatically appended.5:400: 26 Kbps (H)\n01: 52 Kbps\n10: 6 Kbps (L)\n11: RFU\n30: Respect 312-µs delay\n1: Wait for SOF (1)\n20: 100% modulation (100)\n1: 10% modulation (10)\n10: Single subcarrier (S)\n1: Dual subcarrier (D)\n0Append CRC if set to ‘1’. \n(1)Table 11. PROTOCOL SELECT  command description (continued)\nDirection Data Comments Example\nCommands CR95HF\n22/77 DocID018669 Rev 12ISO/IEC 14443 \nType A\nNFC Forum Tag \nType 1\n(Topaz)\nNFC Forum Tag \nType 2\nNFC Forum Tag \nType 4A0x0207:6Transmission data rate\n00: 106 Kbps \n01: 212 Kbps (2) \n10: 424 Kbps\n11: RFU >>>0x02020200 : ISO/IEC \n14443 Type A tag, 106 Kbps \ntransmission and reception rates, Time interval 86/90\nNote that REQA, WUPA, \nSelect20 and Select70 commands use a fixed interval \nof 86/90 µs between a request \nand its reply. Other commands use a variable interval with \nfixed granularity. \nRefer to the ISO/IEC 14443 \nstandard for more details.5:4Reception data rate\n00: 106 Kbps\n01: 212 Kbps \n(2)\n10: 424 Kbps\n11: RFU \n3R F U\n2:0 RFU\n1 7:0 PP These 5 bytes are optional. The \ndefault PP:MM:DD value is 0 \n(corresponds to FDT 86/90µs) . For other values, FDT = \n(2^PP)*(MM+1)*(DD+128) \n*32/13.56 µs 27 : 0 M M\n3 7:0 DD (optional to PP:MM) 4 7:0 ST Reserved (Optional)\n5 7:0 ST Reserved (Optional)Table 12. List of <Parameters>  values for the PROTOCOL SELECT  command for different \nprotocols (continued)\nProtocol CodeParameters\nExamples of commands\nByte Bit Function\nDocID018669 Rev 12 23/77CR95HF Commands\n76ISO/IEC 14443 \nType B\nNFC Forum Tag \nType 4B0x0307:6Transmission data rate\n00: 106 Kbps\n01: 212 Kbps\n10: 424 Kbps\n11: 848 Kbps\n>>>0x02020301 : \nISO/IEC 14443 Type B tag with \nCRC appended 5:4Reception data rate\n00: 106 Kbps\n01: 212 Kbps\n10: 424 Kbps\n11: 848 Kbps\n3:1 RFU\n0Append CRC if set to ‘1’. \n(1)\n17 : 0P P These 9 bytes are optional. \nDefault value of PP:MM:DD is 0 and corresponds to FWT \n~302µs. \nFWT = \n(2^PP)*(MM+1)*(DD+128)* \n32/13.56 µs27 : 0M M\n3 7:0 DD (optional to PP:MM) \n5:4 7:0 TTTT (Optional)TR0 = TTTT/FC (LSB first), \ndefault 1023 = 0x3FF\n6 7:0 YY (Optional)PCD Min TR1 (Min_TR1 = 8 * \nXX / f\nS), default = 0\n7 7:0 ZZ (Optional)PCD Max TR1 (Max_TR1 = 8 * \nZZ / fS), default = 26 = 0x1A\n8 7:0 ST Reserved (Optional)\n9 7:0 ST Reserved (Optional)Table 12. List of <Parameters>  values for the PROTOCOL SELECT  command for different \nprotocols (continued)\nProtocol CodeParameters\nExamples of commands\nByte Bit Function\nCommands CR95HF\n24/77 DocID018669 Rev 12ISO/IEC 18092\nNFC Forum Tag \nType 30x0407:6Transmission data rate\n00: RFU\n01: 212 Kbps\n10: 424 Kbps\n11: RFU>>>0x02020451 : \nISO/IEC18092 tag, 212 Kbps \ntransmission and reception \nrates with CRC appended.\nParameter ‘Slot counter’ is not \nmandatory. If it is not present, it \nis assumed that SlotCounter = 0x00  (1 slot)\nFor device detection \ncommands, byte 1 bit 4 must \nbe set to ‘0’. In this case, the \nFWT is 2.4 ms for the 1st slot and 1.2 ms more for each \nfollowing slot, if slot counter is \nspecified.\nIf slot counter = 0x10 , the \nCR95HF does not respect reply \ntimings, but polls incoming data and searches a valid response \nduring ~8.4 ms. 5:4Reception data rate\n00: RFU\n01: 212 Kbps\n10: 424 Kbps\n11: RFU\n3:1 RFU\n0Append CRC if set to ‘1’. \n(1)\n17:5 RFU\n40: FWT = 2.4 ms\n1: FWT is specified by \nPP:MM bits\n3:0Slot counter\n0: 1 slot\n1: 2 slots\n…\nF: 16 slots\n2 7:0 PP These 3 bytes are optional. \nDefault value PP:MM:DD: is 0 \nand corresponds to RWT ~302µs. \nRWT = (2^PP)*(MM+1)* \n(DD+128)*32/13.56µs37 : 0M M\n4 7:0 DD (optional to PP:MM)\n1. It is recommended to set this bit to ‘1’.\n2. Not characterized.Table 12. List of <Parameters>  values for the PROTOCOL SELECT  command for different \nprotocols (continued)\nProtocol CodeParameters\nExamples of commands\nByte Bit Function\nDocID018669 Rev 12 25/77CR95HF Commands\n765.5 Send Receive (SendRecv ) command (0x04) description\nThis command sends data to a contactless tag and receives its reply.\nBefore sending this command, th e Host must first send the P ROTOCOL SELECT  command to \nselect an RF communication protocol.\nIf the tag response was received and decoded correctly, the <Data>  field can contain \nadditional information which is protoc ol-specific. This is explained in Table 14 .\n         Table 13.  SendRecv command description\nDirection Data Comments Example\nHost to \nCR95HF 0x04 Command code\nSee Table 14  and Table 18  for detailed \nexamples.<Len> Length of data\n<Data> Data to be sent\nCR95HF to \nHost0x80 Result code<<<0x800F5077FE01B30000000000\n71718EBA00\nThe tag response is decoded. This is an \nexample of an ISO/IEC 14443 ATQB \nresponse (Answer to Request Type B)<Len> Length of data\n<Data>Data received. \nInterpretation depends on protocol\nCR95HF to \nHost0x90 Result code <<< 0x90040x240000 ( exception for \n4-bit frames where ‘ x’ represents ACK \nor NAK value) \n90: Result code for “non-integer \nnumber of bytes are received”\n04: total length of data\n0A or 00: Data 24: “2” means no CRC, “4” means 4 \nsignificant bits in Data byte. \n00 00 : No collision in response\nExample ACK\n<<< 0x90040A240000\nExample NAK\n<<< 0x900400240000<Len> Length of data\nACK or NAKISO 14443-A \nACK or NAK detection\nxx yy zz3-byte response flag \nanalysisxx: Error type and number of significant \nbits in first data byte\nyy: First byte collision\nzz: First bit collision \n(1)\nCR95HF to \nHostX0 + <Len> + Data (See Support of long frames on page 18 )\nCR95HF to \nHost0x86 Error code\n<<<0x8600  Communication error\n0x00 Length of data\nCR95HF to \nHost0x87 Error code<<<0x8700  Frame wait time out or no \ntag0x00 Length of data\nCommands CR95HF\n26/77 DocID018669 Rev 12Table 14  gives examples of communication betw een the CR95HF and a contactless tag. \nThe CR95HF receives a SendRecv command (>>> 0x04 ...) from the host and returns its \nresponse to the host (<<< 0x80 ...). Table 14  provides more details on the CR95HF \nresponse format.\n         CR95HF to \nHost0x88 Error code\n<<<0x8800  Invalid SOF\n0x00 Length of data\nCR95HF to \nHost0x89 Error code<<<0x8900  Receive buffer overflow \n(too many bytes received)0x00 Length of data\nCR95HF to \nHost0x8A Error code<<<0x8A00  Framing error (start bit = 0, \nstop bit = 1)0x00 Length of data\nCR95HF to \nHost0x8B Error code<<<0x8B00  EGT time out (for ISO/IEC \n14443-B)0x00 Length of data\nCR95HF to \nHost0x8C Error code <<<0x8C00  Invalid length. Used in NFC \nForum Tag Type 3, when field Length < \n3 0x00 Length of data\nCR95HF to \nHost0x8D Error code<<<0x8D00  CRC error (Used in NFC \nForum Tag Type 3 protocol)0x00 Length of data\nCR95HF to \nHost0x8E Error code<<<0x8E00  Reception lost without EOF \nreceived0x00 Length of data\n1. See Table 14  for details.\nTable 14. List of <Data>  Send values for the SendRecv command for different \nprotocols\nProtocol Explanation Command example Comments\nISO/IEC \n15693Send example 04 03 022000 Example of an Inventory command \nusing different protocol configuration:\nUplink: 100% ASK, 1/4 coding\nDownlink: High data rate, Single sub-\ncarrier\n>>> 0x0403260100 (Inventory - 1 slot)\n<<< 0x800D0000CDE0406CD62902 \nE0057900\nIf length of data is ‘0’, only the EOF will \nbe sent. This can be used for an anti-\ncollision procedure.Command code\nLength of entire data field\nDataTable 13.  SendRecv command description (continued)\nDirection Data Comments Example\nDocID018669 Rev 12 27/77CR95HF Commands\n76ISO/IEC \n14443 \nType A\nNFC \nForum Tag \nType 4A\nNFC \nForum Tag \nType 1 (Topaz)\nNFC \nForum Tag \nType 2Send example 04 079370800\nF8C8E28Example of an NFC Forum Type 2 \nrequest sequence: \n>>>0x04022607  (REQA)\n<<<0x800544002800  (ATQA)\n>>>0x0403932008  (Anti-collision CL1)\n<<<0x80088804A8D5F1280000  (UID \nCL1)...\nExample of an NFC Forum Type 1 \n(Topaz) request sequence: \n>>>0x04022607  (REQA)\n<<<0x8005000C280000  (ATQ0 ATQ1)\n>>>0x040878000000000000A8  (RID)\n<<<0x800B11486E567A003E450800\n00 (Header0 Header1 UID0 UID 1 UID2 \nUID3 CRC0 CRC1Signifcant bits indexColbyte IndexColbit) \nApplication SW must specify how many \nbits to send in the last byte. If flag SplitFrame is set, CR95HF will expect \n8 – <significant bit count> bits in the 1\nst \nbyte during reception. \nIn this case, the first byte received is \npadded with zeros in lsb to complete the byte, while the last byte received is \npadded with zeros in msb.\nExample of an anti-collision command \n/response in ISO/IEC 14443_A \ncommunication using a Split frame: \n(1)\n>>>   0x0403932008    (Anticol)\n<<< 0x800888047B75B7 B80204    \n(Collision Detected B8)\n>>> 0x0406934588040B 45 (Anticol \nSplit frame request 45)\n<<<  0x80064074B3 230000  (Spilt \nframe Answer 23)\nThis command is useful for anti-collision. Command code\nLength of entire data field\nData\nTransmission flags:\n7: Topaz send format. Use EOF instead of \nparity bit and use SOF at beginning of each \nbyte. Pause between bytes and assume 1st \nbyte is 7 bits.\n6: SplitFrame\n5: Append CRC\n4: Parity Framing mode (2)\n[3:0]: Number of significant bits in last byte \nISO/IEC \n14443 \nType B\nNFC \nForum Tag \nType 4BSend example 04 03 050000\nExample of an NFC Forum Type 4B \nrequest sequence: \n>>>0x0403050000 (REQB)\n<<<0x800F5077FE01B30000000000\n71718EBA00 (ATQB)Command code\nLength of entire data field\nDataTable 14. List of <Data>  Send values for the SendRecv command for different \nprotocols (continued)\nProtocol Explanation Command example Comments\nCommands CR95HF\n28/77 DocID018669 Rev 12Figure 13. Data transfer (in both command and response) when Parity Framing mode \nis enabled \n         ISO/IEC \n18092\nNFC \nForum Tag \nType 3 Send example 04 05 00FFFF0000Example of an ISO/IEC 18092 / NFC \nForum Type 3 request sequence: \n>>>0x040500FFFF0000 (REQC)<<<0x801201010102148E0DB41310\n0B4B428485D0FF00 (ATQC)Command code\nLength of entire data field\nData\n1. For more information on using split frames, refer to Appendix D on page 58 .\n2. If Parity Framing mode is used (Bit 4 of transmission flag byte is set to ‘1’), then the parity bit must be \ncoded inside the data for each byte to be sent usi ng the send/receive command in Transmit mode, and is \nnot decoded by the CR95HF in Receive mode. In Rece ive mode, each data by te is accompanied by an \nadditional byte which encodes the parity: < data byte> <parity byte> <data byte > ...\nExamples of data received by send / receive in Parity Framing mode:\n80 05 32 80 34 00 00\nmeaning: if the CR95HF received 2 data bytes:\n0x32 with parity = ‘1’ (0x80) and 0x 34 with parity = ‘0’ (0x0) in Parity Framing mode. For more details, \nsee NFC Forum Tag Type 2 on page 64 .\nThe Parity Framing mode is compatible with MI FARE® Classic requirements. However, access to \nAuthenticated state must be supported by the exter nal secure host which embeds the MIFARE® Classic \nlibrary.\nTable 15. List of <Data>  Response values for the SendRecv command for different \nprotocols\nProtocol Explanation Response example Comments\nISO/IEC \n15693Response \nexample80 08 0000000000 77CF 00\nThis is a response to Read \nSingle Block command for ISO/IEC 15693 TAG. Actual \nTAG response is \n<<<0x000000000077CF , \nother fields are added by the \nCR95HF.Result code\nLength of entire data \nfield\nData received from tag\nOriginal (received) value of CRC\n[7:2]: RFU\n1: CRC error if set\n0: Collision is detected if setTable 14. List of <Data>  Send values for the SendRecv command for different \nprotocols (continued)\nProtocol Explanation Command example Comments\nBytes X X X X X X X X 2nd CRC\nData Bytesent orP 0 0 0 0 0 0 0\nParity Byte.... .... ....P 0 0 0 0 0 0 0\n2nd CRC Byte Parity Byte received\nDocID018669 Rev 12 29/77CR95HF Commands\n76ISO/IEC \n14443 \nType A\nNFC \nForum Tag \nType 4A\nNFC \nForum Tag \nType 1\n(Topaz)\nNFC \nForum Tag \nType 2Response \nexample80 \nor \n90\n(1)09 80B30B8DB500 00 00 00ISO/IEC 14443-A is bit \noriented protocol, so we can \nreceive non-integer amount of bytes. Number of \nsignificant bits in the 1\nst byte \nis the same as indicated in the command sent.\nTo calculate a position of a \ncollision, application has to take index of byte first. \nIndex of bit indicates a \nposition inside this byte. Note that both indexes start \nfrom 0 and bit index can be \n8, meaning that collision \naffected parity.\nNote that collision \ninformation is only valid \nwhen bit ‘Collision is \ndetected’ is set. \n(2)Result code\nLength of entire data \nfield\nData received from TAG\n7: Collision is detected\n6: RFU        \n5: CRC error\n4: Parity error[3:0]: Shows how many significant bits are there \nin the first byte\n7:0: Index of the first byte  where collision is detected\n[7:4]: RFU\n[3:0]: Index of the first bit where collision is detected\nISO/IEC \n14443 \nType B\nNFC \nForum Tag \nType 4BResponse \nexample80 0F5092036A8D0\n00000000071\n713411 00\nResult code\nLength of entire data \nfield\nData received from tag\nOriginal (received) value of CRC\n[7:2]: RFU\n1: CRC error if set\n0: RFU\nISO/IEC \n18092\nNFC \nForum Tag \nType 3Response \nexample80 12 01010105017B0...93FF 00\n<<<0x801201010105017\nB06941004014B024F499\n3FF00Result code\nLength of entire data \nfield\nData received from tag\n[7:2]: RFU\n1: CRC error if set\n0: RFU\n1. Result code 90: Response is decoded bu t number of byte is not an integer.\n2. For more information on using split frames, refer to Appendix D on page 58 .Table 15. List of <Data>  Response values for the SendRecv command for different \nprotocols (continued)\nProtocol Explanation Response example Comments\nCommands CR95HF\n30/77 DocID018669 Rev 12For more detailed examples of use with NFC Forum and ISO/IEC 15693 tags, refer to \nAppendix D on page 58 .\nIf Parity Framing mode is used, the parity bit stays unchanged. On transmission, it is not \nencoded and on reception it is not decoded. Th e length of Data must be even. Each data \nbyte is accompanied by an addition al byte which encodes the parity:\n<DataByte>, <Parity>, <DataByte>, <Parity> …\n         \nOn reception, bits [6:0] of the parity byte are zeroes; on transmission, bits [6:0] are ignored. \n5.6 Idle command (0x07) description \nThis command switches the CR95HF into lo w consumption mode and defines the way to \nreturn to Ready state.\nThe Result code contains the Wake-up flag regi ster value indicating to the application the \nwake-up event that caused the device to exit WFE mode. Table 16. Structure of Parity byte\nBit Description\n7 Parity bit\n[6:0] Reserved for future use\nDocID018669 Rev 12 31/77CR95HF Commands\n76         Table 17. I DLE command description\nDirection Data Comments Example\nHost to \nCR95HF 07 Command code\nExample of switch from Active \nmode to Hibernate state:\n>>>0x07 0E 08 04 00 04 00 \n18 00 00 00 00 00 00 00 00\n         Example of switch from Active to \nWFE mode (wake-up by low pulse \non IRQ_IN  pin):\n>>>0x07 0E 08 01 00 38 00 \n18 00 00 60 00 00 00 00 00\n         Example of switch from Active to WFE mode (wake-up by low pulse \non SPI_SS\n pin):\n>>>0x07 0E 10 01 00 38 00 \n18 00 00 60 00 00 00 00 00\n         Example of wake-up by Timeout (7 \nseconds): \nDuration before Timeout = 256 * tL \n* (WU period + 2) * (MaxSleep + 1)\n>>>0x07 0E 01 21 00 38 00 \n18 00 60 60 00 00 00 00 08\n         Example of switch from Active to Tag Detector mode (wake-up by tag detection or low pulse on \nIRQ_IN\n pin) (32 kHz, inactivity \nduration = 272 ms, DAC oscillator = 3 ms, Swing = 63 pulses of 13.56 \nMHz):\n>>>0x07 0E 0A 21 00 79 01 \n18 00 20 60 60 64 74 3F 08\n         Example of a basic Idle command \nused during the Tag Detection \nCalibration process:\n>>>0x07 0E 03 A1 00 F8 01 \n18 00 20 60 60 00 xx 3F 01\nwhere xx is the DacDataH value.0E Length of data\n<WU Source>Specifies authorized wake-\nup sources and the LFO \nfrequency\nEnterCtrlL Settings to enter WFE \nmode EnterCtrlH\nWUCtrlL Settings to wake-up from \nWFE mode WUCtrlH\nLeaveCtrlL Settings to leave WFE \nmode (Default value = \n0x1800)LeaveCtrlH\n<WUPeriod>Period of time between two \ntag detection bursts. Also \nused to specify the duration \nbefore Timeout.\n<OscStart>Defines the Wait time for \nHFO to stabilize: \n<OscStart> * tL\n(Default value = 0x60)\n<DacStart>Defines the Wait time for \nDAC to stabilize: \n<DacStart> * tL\n(Default value = 0x60)\n<DacDataL>Lower compare value for \ntag detection (1). \nThis value must be set to \n0x00  during tag detection \ncalibration.\n<DacDataH>Higher compare value for \ntag detection (1).\nThis is a variable used \nduring tag detection \ncalibration.\n<SwingsCnt>Number of swings HF \nduring tag detection \n(Default value = 0x3F)\n<MaxSleep>Max. number of tag \ndetection trials before Timeout \n(1). \nThis value must be set to \n0x01  during tag detection \ncalibration.\nAlso used to specify \nduration before Timeout.\nMaxSleep must be: \n0x00 < MaxSleep < 0x1F\nCommands CR95HF\n32/77 DocID018669 Rev 125.6.1 Idle command parameters\nThe Idle command (Host to CR95HF) has the following structure (all values are \nhexadecimal): \n         \n         CR95HF to \nHost0x00 Result code\nThis response is sent only when \nCR95HF exits WFE mode.\n<<<0x000101 Wake-up by \nTimeout \n<<<0x000102 Wake-up by tag \ndetect \n<<<0x000108 Wake-up by low \npulse on IRQ_IN  pin0x01 Length of data\n<Data>Data (Wake-up source):\n0x01: Timeout\n0x02: Tag detect0x08: Low pulse on \nIRQ_IN\n pin\n0x10: Low pulse on \nSPI_SS  pin\nCR95HF to \nHost0x82 Error code <<<0x8200  Invalid command \nlength 0x00 Length of data\n1. An initial calibration is necessary to determine Da cDataL and DacDataH values required for leaving Tag \nDetector state. For more information, contact your ST sales office for the corresponding application note.Table 17. I DLE command description (continued)\nDirection Data Comments Example\nTable 18. Idle command structure\n07 0E xx yy zz yy zz yy zz aa bb cc dd ee ff gg\nComma\nnd codeData \nlengthWU \nsourceEnter \nControlWU \nControlLeave \nControlWU \nPeriodOsc \nStartDAC \nStartDAC \nDataSwing \nCountMax \nSleep\nTable 19. Summary of Idle command parameters\nParameter Description\nCommand codeThis byte is the command code. ‘07’ represents the Idle command. This \ncommand switches the device from Active mode to WFE mode.\nData lengthThis byte is the length of the command  in bytes. Its value depends on the \nfollowing parameter values.\nWU SourceThis byte defines the authorized wake -up sources in the Wake-up source \nregister. Predefined values are:\n0x01 : Time out 0x02 : Tag Detection\n0x08 : Low pulse on IRQ_IN 0x10 : Low pulse on SPI_SS\nEnter ControlThese two bytes (EnterCtrlL and Ente rCtrlH) define the resources when \nentering WFE mode.\n0x0400 : Hibernate \n0x0100 : Sleep (or 0x 2100  if Timer source is enabled)\n0xA100 : Tag Detector Calibration\n0x2100 : Tag Detection\nWU ControlThese two bytes (WuCtrlL and WuCtrlH) define the wake-up resources.\n0x0400 : Hibernate 0x3800 : Sleep\n0xF801 : Tag Detector Calibration 0x7901 : Tag Detection\nDocID018669 Rev 12 33/77CR95HF Commands\n765.6.2 Using LFO frequency setti ng to reduce power consumption\nIn WFE mode, the high frequency oscillator (H FO) is stopped and most processes being \nexecuted are clocked by the low frequency oscillator (LFO). To minimize CR95HF power \nconsumption in WFE mode, the slower the LFO frequency, the lower the power consumption.\nExample 1 : Setting a lower LFO frequency\nThe following equation defines a basic timing reference:\nt\nREF = 256*tL ms (where tL = 1/fLFO)    \ntREF = 8 ms (when bits [7:6] ar e set to “00”, or 32 kHz)\ntREF = 64 ms (when bits [7:6] are set to “11”, or 4 kHz)Leave ControlThese two bytes (LeaveCtrlL and Leav eCtrlH) define the resources when \nreturning to Ready state.\n0x1800 : Hibernate 0x1800 : Sleep\n0x1800 : Tag Detector Calibration 0x1800 : Tag Detection\nWU PeriodThis byte is the coefficient used to adjust the time allowed between two tag \ndetections. Also used to specify th e duration before Timeout. (Typical \nvalue: 0x20) \nDuration before Timeout = 256 * tL * (WU period + 2) * (MaxSleep + 1) \nOsc StartThis byte defines the delay for HF O stabilization. (Recommended value: \n0x60)\nDefines the Wait time for HFO to stabilize: <OscStart> * tL\nDAC StartThis byte defines the delay for DA C stabilization. (Recommended value: \n0x60)\nDefines the Wait time for DAC to stabilize: <DacStart> * tL\nDAC DataThese two bytes (DacDataL and DacDataH) define the lower and higher \ncomparator values, respectively. These values are determined by a calibration process.\nWhen using the demo board, these values should be set to approximately \n0x64 and 0x74, respectively. \nSwing CountThis byte defines the number of HF swings allowed during Tag Detection. \n(Recommended value: 0x3F) \nMax SleepThis byte defines the maximum number  of tag detection trials or the \ncoefficient to adjust the maximum inactivity duration before Timeout.\nMaxSleep must be: 0x00 < MaxSleep < 0x1F\nThis value must be set to 0x01  during tag detection calibration.\nAlso used to specify duration before Timeout. \nDuration before Timeout = 256 * t\nL * (WU period + 2) * (MaxSleep + 1) \n(Typical value: 0x28) Table 19. Summary of Idle command parameters (continued)\nParameter Description\nCommands CR95HF\n34/77 DocID018669 Rev 125.6.3 Optimizing wake-up conditions\nUsing the Wake-up source register, it is possibl e to cumulate sources for a wake-up event. It \nis strongly recommended to always set an ex ternal event as a possible wake-up source. \nTo cumulate wake-up so urces, simply set the correspondi ng bits in the Wake-up source \nregister. For example, to enable a wake-up when a tag is detected (bit 1 set to ‘1’) or on a low pulse on pin IRQ_IN\n (bit 3 set to ‘1’), set the register to 0x0A.\n5.6.4 Using various techniques to return to Ready state\nThe Idle command and reply set offers several benefits to users by enabling various methods to return the CR95HF to Ready state. Some methods are nearly automatic, such as waiting for a timer overflow or a tag detect ion, but others consume more power compared \nto the ones requesting a host action. A description of each method follows below.\nDefault setting: from POR to Ready state\nAfter power-on, the CR95HF enters Power-up state. \nTo wake up the CR95HF and set it to Ready st ate, the user must send a low pulse on the \nIRQ_IN  pin. The CR95HF then automatically selects the external interface (SPI or UART) \nand enters Ready state and is able to acc ept commSands after a delay of approximately \n6m s  ( t3).\nFrom Ready state to Hibernate state and back to Ready state\nIn Hibernate state, most resources are switched off to achieve an ultra-low power consumption. \nThe only way the CR95HF can wake-up from Hibernate state is by an external event (low \npulse on pin IRQ_IN\n).\nA basic Idle command is:\n>>>0x07 0E 08 04 00 04 00 18 00 00 00 00 00 00 00 00\nNote: The Wake-up flag value is NOT significant when returning to Ready state from Hibernate \nstate or after a POR.\nFrom Ready state to Sleep state and back to Ready state \nWake-up by external event  (low pulse on IRQ_IN  or SPI_SS  pin) \nIn Sleep or Power-up states, operating resour ces are limited in function of the selected \nwake-up source to achieve a moderate power consumption level. \nAn Idle command example when wake-up source is pin IRQ_IN :\n>>>0x07 0E 08 01 00 38 00 18 00 00 60 00 00 00 00 00 \nA similar command can be implemented using pin SPI_SS  as a wake-up source:\n>>>0x07 0E 10 01 00 38 00 18 00 00 60 00 00 00 00 00 \nWake-up by timeout\nThe LFO is required to use the timer. However, this increases the typical power \nconsumption by 80 µA. Several parameters ca n be modified to reduce power consumption \nas much as possible.\nDocID018669 Rev 12 35/77CR95HF Commands\n76The Duration before Timeout is defined by parameters WU period and MaxSleep, \nrespectively 0x60 and 0x08 in the following example.\nDuration before Timeout = 256 * tL * (WU period + 2) * (MaxSleep + 1)\nNote: Note that: 0x00 < MaxSleep < 0x1F.\nAn Idle command example when wake-up source is timer ( 0x01 ) when fLFO = 32 kHz (mean \npower consumption is 25 µA)\n>>>0x07 0E 01 21 00 38 00 18 00 60 60 00 00 00 00 08\nAn Idle command example when wake-up source is timer ( 0xC1 ) when fLFO = 4 kHz (mean \npower consumption is 20 µA):\n>>>0x07 0E C1 21 00 38 00 18 00 60 60 00 00 00 00 08\nThe same command can be used mixing a timer and the IRQ_IN  pin (0xC9 ) as a wake-up \nsource:\n>>>0x07 0E C9 21 00 38 00 18 00 60 60 00 00 00 00 08\nWake-up by Tag DetectionIn this mode, the typical consumption can greatl y vary in function of parameter settings (WU \nperiod without RF activity and Swing Count defining the RF burst duration). Using default settings, consumption in the range of 100 µA can be achieved.\nTag Detector is a state where CR95HF is able  to detect an RF ev ent, a wake-up will occur \nwhen a tag sufficiently modifies the ant enna load and is detected by the CR95HF.\nAn Idle command example when wake-up source is Tag Detection ( 0x02 ):\n>>>0x07 0E 02 21 00 79 01 18 00 20 60 60 64 74 3F 08 \nThe same command can be used mixing Tag Detection and the IRQ_IN\n pin (0x0A ) as a \nwake-up source:\n>>>0x07 0E 0A 21 00 79 01 18 00 20 60 60 64 74 3F 08 \nThe tag detection sequence is defined by dedicated parameters:\n• WU source (Byte 3) ( Wake-up source register on page 53 )\n– The Timeout bit (bit 0) must be set to ‘1’ in order to manage a certain number of \nemitted bursts. Otherwise, bursts will be sent  indefinitely until a stop event occurs \n(for example, tag detection or a low pulse on pin IRQ_IN ).\n– The Tag Detect bit (bit 1) must be se t to ‘1’ to enable RF burst emissions. \n– It is recommended to also set Bits 3 or 4 to ‘1’ to ensure that it is possible to leave \nTag Detect mode via an external event (for example, a low pulse on pin IRQ_IN ).\n• WU period (Byte 10): Defines the period of inactivity (tINACTIVE ) between two RF bursts: \ntINACTIVE  = (WuPeriod + 2) * tREF\n• OscStart, DacStart (Bytes 11 and 12): Define the set-up time of the HFO and Digital \nAnalog Converter, respectively. In general, 3 ms is used both set-up times.\nHFO | DAC set-up time = (OscStart | DacStart) * tL \n• DacDataL, DacDataH (Bytes 13 and 14): Reference level for Tag Detection (calculated \nduring the tag detection calibration process).\n• SwingsCnt (Byte 15): Represents the number of 13.56-MHz swing allowed during a \nTag Detection burst. We recommend using 0x3F . \nCommands CR95HF\n36/77 DocID018669 Rev 12• Maxsleep (Byte 16): The CR95HF emits (M axSleep +1) bursts before leaving Tag \nDetection mode if bit 0 (Timer Out) of the WU source register is se t to ‘1’. Otherwise, \nwhen this bit is set to ‘0’, a burst is emitted indefinitely. \nNote: Bytes 4 to 9 should be us ed as shown in the examples in Section 5.6: Idle command (0x07) \ndescription . \nNote that the MaxSleep value is coded on the 5 least significant bits, thus: \n0x00 < MaxSleep < 0x1F.\nAll the previously described command parameters  must be chosen accordingly for the initial \ntag detection calibration when setting up the CR95HF.\nTheir value will impact tag detection efficienc y, and CR95HF power consumption during Tag \nDetection periods.\n5.6.5 Tag detection calibration procedure\nThe Idle command allows the use of a t ag detection as a wake-up event. Certain \nparameters of the Idle command are dedicated to setting the conditions of a tag detection \nsequence. \nDuring the tag detection sequence, the CR95HF regularly emits RF bursts and measures \nthe current in the antenna driver IDRIVE  using the internal 6-bit DAC.\nWhen a tag enters the CR95HF antenna RF op erating volume, it modifies the antenna \nloading characteristics and induces a change in IDRIVE , and consequently, the DAC data \nregister reports a new value.\nThis value is then compared to the referenc e value established during the tag detection \ncalibration process. This enables the CR95HF to decide if a tag has entered or not its \noperating volume.\nThe reference value (DacDataRef)  is established during a tag detection calibration process \nusing the CR95HF application setting with no tag in its environment.\nThe calibration process consists in executing a tag detection sequence using a well-known \nconfiguration, with no tag within the antenna RF operating volume, to determine a specific \nreference value (DacDataRef) th at will be reused by the host  to define the tag detection \nparameters (DacDataL and DacDataH). \nDuring the calibration process, DacDataL is fo rced to 0x00 and the software successively \nvaries the DacDataH value from its maximum va lue (0xFE) to it mini mum value (0x00). At \nthe end of the calibration process, DacDataRef  will correspond to the value of DacDataH for \nwhich the wake-up event switches from Timeou t (no tag in the RF field) to tag detected.\nTo avoid too much sensitivity of the tag detection process, we recommend using a guard \nband. This value corresponds to 2 DAC steps (0x08). \nRecommended guard band value:\nDacDataL  = DacDataRef  – Guard  and DacDataH  = DacDataRef  + Guard  \nThe parameters used to define the tag detection calibration sequence (clocking, set-up time, \nburst duration, etc.) must be the same as those used for the future tag detection sequences.\nWhen executing a tag detection sequence, t he CR95HF compares the DAC data register \nvalue to the DAC Data parameter values (DacDataL and DacDataH) included in the Idle \ncommand. The CR95HF will exit WFE mode thro ugh a Tag Detection event if the DAC data \nregister value is greater than the DAC Data parameter high value (DacDataH) or less than \nthe DAC Data parameter low value (DacDataL). Ot herwise, it will return to Ready state after \na Timeout.\nDocID018669 Rev 12 37/77CR95HF Commands\n76An efficient 8-step calibration algorithm is described in Example of tag detection calibration \nprocess on page 54 .\nAn example of a basic Idle command used during the Tag Detection Calibration process:\n>>>0x07 0E 03 A1 00 F8 01 18 00 20 60 60 00 xx 3F 01\nwhere xx is the DacDataH value.\nAn example of a tag detection sequence is provided in Example of tag detection command \nusing results of tag detection calibration on page 57 .\n5.7 Read Register (RdReg) command (0x08) description \nThis command is used to read the Wakeup register.\n         \nNote: The Management of the Analog Register Configuration register ( ARC_B ) is described in \nSection 5.8: Write Register (WrReg) command (0x09) description .Table 20. R DREG command description \nDirection Data Comments Example \nHost to \nCR95HF0x08 Command code\nEx 1. >>>0x0803690100  \nReads the ARC_B register. (1)\nEx 2. >>>0x0803620100  \nReads the Wake-up event register.\n1. This command must be preceded by the setting of the ARC_B register index ( 0x0903680004).0x03 Length of data\n0x62  or 0x69 Register address\n0x01 Register size\n0x00 ST Reserved\nCR95HF to \nHost0x00 Result code <<<0x000101 Wake-up by Timeout (Ex. 1)\n<<<0x000102 Wake-up by Tag Detect (Ex. \n1)\n<<<0x000113  Depth = 1, Gain = 3 (Ex. 2)\n<<< 0x000113  (ARC_B register)\nDepth = 1, Gain = 3 (Ex. 2). See Write \nRegister description fo r more information on \nreceived data.<Len>Length of data (= \nRegCount)\n<RegData> Register data \nCR95HF to \nHost 0x82 Error code \n<<<0x8200 Invalid command length \n0x00 Length of data \nCommands CR95HF\n38/77 DocID018669 Rev 125.8 Write Register (WrReg) command (0x09) description\nThe Write Register (W RREG) command ( 0x09 ) is used to:\n• set the Analog Register Configuration address index value before reading or \noverwriting the Analog Register Co nfiguration register (ARC_B) value\n• set the Timer Window (TimerW) value used to improve CR95HF demodulation when \ncommunicating with ISO/IEC 14443 Type A tags\n• set the AutoDetect Filter used  to help synchronization of  CR95HF with ISO/IEC 18092 \ntags\n• configure the HF2RF bit(a) to manage ICC RF (VPS_TX ) consumption in Ready state\n5.8.1 Improving RF performance\nAdjusting the Modulation Index and Receiver Gain parameters helps improve application \nbehavior. \nThe default value of these parameters ( Table 24 ) is set by the PROTOCOL SELECT  command, \nbut they can be overwritten using the Write Register (W RREG) command ( 0x09 ). Table 22  \nand Table 23  list possible values for the Modulation  Index and Receiver Gain parameters \nrespectively. \nThis new configuration is valid until a new P ROTOCOL SELECT  or Write Register (of register \nARC_B) command is executed. Register values are cleared at power off. \n         \nThe default value of these parameters ( Table 24 ) is set by the PROTOCOL SELECT  command, \nbut they can be overwritten using the Write Register (W RREG) command ( 0x09 ).  \na. When the HF2RF bit is ‘0’, Reader mode is possible (default mode). When set to ‘1’, VPS_TX  power \nconsumption is reduced (Ready mode).Table 21. W RREG command description (Modulation Index and Receiver Gain)\nDirection Data Comments Example \nHost to \nCR95HF 0x09 Command code\n>>>0x090468010113  \nUpdate ARC_B value to 0x13\n>>>0x0903680001\nSet Analog Register Index to \n0x01 (ARC_B)  (1)\n1. This command must be executed before reading the ARC_B register ( 0x0803690100 ).0x03 or \n0x04Length of data\n0x68Analog Register Configuration address \nindex\n0x00  or \n0x01Flag Increment address or not after Write \ncommand\n0x01Index pointing to the Modulation Index and \nReceiver Gain values in the ARC_B register (0x01) (See Section 5.8.1 )\n0xXXNew value for Modulation Index and \nReceiver Gain nibbles (See Section 5.8.1 )\nCR95HF to \nHost 0x00 Result code <<<0x0000\nRegister written 0x00 Length of data (= RegCount ) \nDocID018669 Rev 12 39/77CR95HF Commands\n76This new configuration is valid until a new P ROTOCOL SELECT  or Write Register (of register ) \ncommand is executed. Register values are cleared at power off. \nHow to modify Analog Register Configuration register (ARC_B) values \n1. Use the PROTOCOL SELECT  command ( 0x02 ) to select the correct communication \nprotocol.\nFor example, to select the ISO/IEC 18092 protocol:\nSend PROTOCOL SELECT  command: >>> 0x02020451\nCR95HF reply: <<< 0x0000\n2. Read the Analog Register Configuration register (ARC_B) value. \na) Write the ARC_B register index at 0x01: >>>0x0903680001  \nCR95HF reply: <<< 0x0000\nb) Read the ARC_B register value: >>> 0x0803690100\nCR95HF reply: <<< 0x015F  \nIn this example, the ARC_B register value is 0x5F , where “5” is the Modulation Index \nand “F” is the Receiver Gain.\n3. Modify the Modulation Index and Receiver Gain values with 0x23. \nWrite the ARC_B register index: >>> 0x090468010123  \nCR95HF reply: <<< 0x0000\n4. Read the Analog Configuration register (ARC_B) value.\na) Write the ARC_B register index at 0x01: >>> 0x0903680001      \nCR95HF reply: <<< 0x0000\nb) Read the ARC_B register value: >>> 0x0803690100\nCR95HF reply: <<< 0x0123  \nModulation Index and Receiver Gain values\n         .\n         Table 22. Possible Modulation Index values\n C o d e 123456D\nModulation Index (1)\n1. Characterized only using ISO/IEC 10373 test set-up.10% 17% 25% 30% 33% 36% 95%\nTable 23. Possible Receiver Gain values\n C o d e 0137F\nReceiver Gain (1)\n1. Characterized by design simulation.34 dB 32 dB 27 dB 20 dB 8 dB\nCommands CR95HF\n40/77 DocID018669 Rev 12Default code per protocol\n         \n5.8.2 Improving frame recepti on for ISO/IEC 14443 Type A tags\nTo improve CR95HF demodulation when communi cating with ISO/IEC 14443 Type A tags, it \nis possible to adjust the synchronization betwee n digital and analog inputs by fine-tuning the \nTimer Window (TimerW) value. This can be done using the Write Register (W RREG) \ncommand to set a new TimerW value (min. 0x50, max. 0x60). The recommended value is 0x56 or 0x58 when using the CR95HF demo board.\nThe default value of this parameter (0x52) is set by the \nPROTOCOL SELECT  command, but it can \nbe overwritten using the W RREG command ( 0x09 ).\n         \n5.8.3 Improving RF recep tion for ISO/IEC 18092 tags\nTo improve CR95HF reception when communicati ng with ISO/IEC 18092 tags, it is possible \nto enable an AutoDetect filter to synchronize ISO/IEC 18092 tags with the CR95HF. This can be done using the Write Register (W\nRREG) command to enable the AutoDetect filter.Table 24. ARC_B default code for available Reader protocols\nCommunication \nprotocolDefault \nvalueRecommended \nvalues for CR95HF \ndemo boardPossible \nModulation Index \nvalues (MS nibble) Possible Receiver \nGain values \n(LS nibble)\nISO/IEC 14443 \nType A reader0xDF 0xD1 or 0xD3 0xD0x0, 0x1, 0x3, 0x7 or \n0xF\nISO/IEC 14443 \nType B reader0x2F 0x20 0x1, 0x2, 0x3 or 0x4 0x0, 0x1, 0x3, 0x7 \nor 0xF\nISO/IEC 18092  \nreader0x5F 0x20 0x1, 0x2, 0x3 or 0x4 0x0, 0x1, 0x3, 0x7 \nor 0xF\nISO/IEC 15693 \nreader 30%0x53 0x50 0x4, 0x5 or 0x6 0x0, 0x1, 0x3, 0x7 \nor 0xF\nISO/IEC 15693 \nreader 100%0xD3 0xD0 0xD 0x0, 0x1, 0x3, 0x7 \nor 0xF\nTable 25. W RREG command description (Timer Window)\nDirection Data Comments Example \nHost to \nCR95HF 0x09 Command code\n>>>0x09043A005804\nSet recommended TimerW \nvalue.0x03 or \n0x04Length of data\n0x3A Timer Window (TimerW) value\n0x00  or \n0x01Flag Increment address or not after Write \ncommand\n 0xXXSet TimerW value (recommended value is \n0x56 or 0x58) \n0x04 TimerW value confirmation\nCR95HF to \nHost 0x00 Result code <<<0x0000\nRegister written 0x00 Length of data (= RegCount) \nDocID018669 Rev 12 41/77CR95HF Commands\n76By default, this filter is disa bled after the execution of the PROTOCOL SELECT  command, but it \ncan be enabled using the W RREG command ( 0x09 ).\n5.9 BaudRate comman d (0x0A) description\nThis command changes the UART baud rate.\n         \nCaution: If the BaudRate command is no t correctly executed, the b aud rate value will remain \nunchanged.\n         \n5.10 Echo command (0x55) description\nThe E CHO command verifies the possibility of communication between a Host and the \nCR95HF. \n         Table 26. B AUDRATE command description\nDirection Data Comments Example\nHost to \nCR95HF 0x0A Command code\n0x01 Length of data\n<BaudRate>New Baud Rate = \n13.56 /(2*<BaudRate>+2) Mbps\nBaud rate\n255: 13.56/512 ~26.48 Kbps254: 13.56/510 ~26.59 Kbps253: 13.56/508 ~26.7 Kbps\n. . .\n117: 13.56/236 ~57.7 Kbps (Value after \npower-up)\n. . .2: 13.56/6 ~2.26 Mbps\n1: RFU\n0: RFU\nCR95HF to \nHost0x55 Code response of 0x55<<<0x55\nNew baud rate is used \nto reply\nTable 27. E CHO command description\nDirection Data Comments Example\nHost to CR95HF 0x55 Command code\nCR95HF to Host 0x55 Code response>>> 0x55 : Sends an E CHO command\n<<< 0x55 : Response to an E CHO \ncommand \nElectrical characteristics CR95HF\n42/77 DocID018669 Rev 126 Electrical characteristics\n6.1 Absolute maximum ratings\n         \nNote: Stresses listed above may cause permanent da mage to the device. Th is is a stress rating \nonly and functional operation of the device at these or any other conditions above those \nindicated in the operational sections of the specification is not implied.\nExposure to absolute maximum rating conditi ons for extended periods may affect device \nreliability. Table 28. Absolute maximum ratings\nSymbol Parame ter Value Unit\nVPS_Main Supply voltage (1)\n1. To properly reset the device, VPS_Main must be  tied to 0V before executing the start-up sequence.–0.3 to 7.0 V\nVPS_TX Supply voltage (RF drivers) –0.3 to 7.0 V\nVIO Input or output voltage relative to ground –0.3 to VPS_Main +0.3 V\nVMaxCarrier Maximum input voltage (pins RX1 and RX2) ±14.0 V\nTAAmbient operating temperature –25 to +85\n°C\nAmbient operating temperatur e (RF mode) –25 to +85\nTSTGStorage temperature (Please also refer to package \nspecification).–65 to +150 °C\nTLEAD Lead temperature during soldering See note(2)\n2. Compliant with JEDEC standard J-STD-020D (for sm all-body, Sn-Pb or Pb assembly), the ST ECOPACK® \n7191395 specification, and the European directive on Restrictions on Hazardous Substances (RoHS \ndirective 2011/65/EU of July 2011).°C\nVESDElectrostatic discharge voltage according to \nJESD22-A114, Human Body Model2000 V\nPTOT (3)\n3. Depending on the thermal resistance of package.Total power dissipation per package 1 W\nDocID018669 Rev 12 43/77CR95HF Electrical characteristics\n766.2 DC characteristics\n         \n6.3 Power consumption characteristics\nTA = –25°C to 85°C, unless otherwise specified. \n         \nThe CR95HF supports two VPS_TX supply ranges for RF  drivers: 2.7V to 3.3V or 4.5V to \n5.5V. Antenna matching circuit must be defined accordingly.\n         Table 29. DC characteristics\nSymbol Parameter Condition Min. Typ. Max. Unit\nVPS_Main Supply vo ltage 2.7 3.0 5.5 V\nVPS_TXSupply voltage (RF \ndrivers)2.7 3.0 5.5 V\nVIL Input low voltage (I/Os) 0 0.2 x VPS_Main V\nVIH Input high voltage (I/Os) 0.7 x VPS_Main VPS_Main V\nVOH Output high voltage (I/Os) IOH = - 8 µA 0.7 x VPS_Main VPS_Main V\nVOL Output low voltage (I/Os) IOLMAX  = 500 µA 00.15 x \nVPS_MainV\nPOR Power-on reset voltage 1.8 V\nTable 30. Power consumpti on characteristics (VPS_Ma in from 2.7 to 3.3 V)\nSymbol Parameter Condition Typ. Max. Unit\nICC (VPS) \nPower-upSupply current in power-up state TA = 25°C 200 600 µA\nICC (VPS) \nHibernateSupply current in Hibernate state TA = 25°C 1 5 µA\nICC (VPS) Sleep Supply current in Sleep state TA = 25°C 20 80 µA\nICC (VPS) Ready Supply current in Ready state TA = 25°C 2.5 5.0 mA\nICC (VPS) Tag \nDetectAverage supply current in Tag Detector state TA = 25°C, \n4 RF bursts \nper second50 100 µA\nTable 31. Power consumption characteristics (VPS_TX from 2.7 to 3.3 V)\nSymbol Parameter Condition Typ. Max. Unit\nICC RF (VPS_TX ) \nRF Field ONSupply current in RF Field (Reader mode) (1)TA = 25°C 70 100 mA\nICC RF (VPS_TX ) \nRF Field OFF Supply current in RF Field (Ready mode) (2)TA = 25°C 200 µA\nICC RF (VPS_TX ) \nTag DetectPeak(3) current during Burst detection TA = 25°C 70 100 mA\n1. Parameter measured using recommended out put matching network. (Z load is 27 Ω and 0°).\n2. This consumption can be reduced to approximately 2 µA (typ.) by setting a control bit (bit HF2RF) to ‘1’ using command \n090468010710 . In this case, Reader mode is not available. \nTo re-enable Reader mode, reset the HF2RF bit to ‘0’ using the command 090468010700  or execute a new \nPROTOCOL SELECT  command.\n3. The maximum differential input voltage between pins  RX1 and RX2 (VRx1-Rx2) has a peak-peak of 18 V.\nElectrical characteristics CR95HF\n44/77 DocID018669 Rev 12         Table 32. Power consumption characteristics (VPS_TX from 4.5 to 5.5 V)\nSymbol Parameter Condition Typ. Max. Unit\nICC RF (VPS_TX ) \nRF Field ONSupply current in RF Field (Reader mode) (1)TA = 25°C 120 200 mA\nICC RF (VPS_TX ) \nRF Field OFF Supply current in RF Field (Ready mode) (2)TA = 25°C 300 µA\nICC RF (VPS_TX ) \nTag DetectPeak(3) current during Burst detection TA = 25°C 120 200 mA\n1. Parameter measured using recommended out put matching network. (Z load is 16 Ω and 0°).\n2. This consumption can be reduced to approximately 2 µA (typ.) by setting a control bit (bit HF2RF) to ‘1’ using command \n090468010710 . In this case, Reader mode is not available. \nTo re-enable Reader mode, reset the HF2RF bit to ‘0’ using the command 090468010700  or execute a new \nPROTOCOL SELECT  command.\n3. The maximum differential input voltage between pins RX1 and RX 2 (VRx1-Rx2) has a peak-peak of 18 V. This voltage can \nbe limited by adding a damping resistor in para llel of the antenna or between ST_R0 and Ground.\nDocID018669 Rev 12 45/77CR95HF Electrical characteristics\n766.4 SPI characteristics\nThe CR95HF supports (CPOL = 0, CPHA = 0) and (CPOL = 1, CPHA = 1) modes.\n         \nFigure 14. SPI timing diagram (Slave mode and CPOL = 0, CPHA = 0) Table 33. SPI interface characteristics\nSymbol Parameter Con dition Min. Max. Unit\nfSCK\n1/ tc(SCK)SPI clock frequency 2.0 MHz\nVIL Input low voltage 0.3 x VPS\nVVIH Input high voltage 0.7 x VPS\nVOL Output low voltage 0.4 x VPS\nVOH Output high voltage 0.7 x VPS\ntSU(NSS)(1)\n1. Values based on design simulation and/or charac terization results, and not on tested in production.NSS setup time 70\nns\nth(NSS)(1)NSS hold time 0\ntCH(SCKL)(1)Clock low time 200\nns\ntCH(SCKH)(1)Clock high time 200\ntSU(SI)(1)Data slave Input setup time 20\nns\nth(SI)(1)Data slave Input hold time 80\ntv(SO)(1)Data slave output valid time 80\nns\nth(SO)(1)Data slave output hold timeAfter enable \nedge150\nCb_SPI_INCapacitive load for input pins NSS, \nCLK, MOSI3p F\nCb_SPI_OUTCapacitive load for input pins \nMOSI20 pF\n-3\x11\x18\x11\x16\x1563#+\x00)NPUT.33\x00INPUT\nT35\x08.33\t TC\x083#+\t TH\x08.33\t\nT6\x083/\t TH\x083/\t\nTSU\x083)\t\nTH\x083)\t#0/,\x00\x1d\x00\x10\n#0(!\x00\x1d\x00\x10T#(\x083#+(\t T#(\x083#+,\t\n-3"\x00/UT\n-3"\x00)N"IT\x00\x16\x00/UT\n"IT\x00\x11\x00)N,3"\x00/UT\n,3"\x00)N-)3/\n-/3)\nElectrical characteristics CR95HF\n46/77 DocID018669 Rev 12Figure 15. SPI timing diagram (Slave mode and CPOL = 1, CPHA = 1)\n-3\x11\x18\x11\x16\x166\x113#+\x00)NPUT\n-/3)-)3/TC\x083#+\t TH\x08.33\t\nT#(\x083#+,\t\nTV\x083/\tTH\x083/\t\nTSU\x083)\t TH\x083)\t.33\x00INPUT\n-3"\x00/UT\n-3"\x00)N"IT\x00\x16\x00/UT\n"IT\x00\x11\x00)N,3"\x00/UT\n,3"\x00)NT#(\x083#+(\tT35\x08.33\t\n#0/,\x00\x1d\x00\x11\n#0(!\x00\x1d\x00\x11\nDocID018669 Rev 12 47/77CR95HF Electrical characteristics\n766.5 RF characteristics\nTest conditions are TA = 0°C to 50°C, unless otherwise specified.\n         Table 34. Reader characteristics\nSymbol Parameter Min. Typ. Max. Unit\nfC Frequency of operating field (carri er frequency) 13.553 13.56 13. 567 MHz\nMI CarrierCarrier modulation index(1)ISO/IEC 14443-A\nISO/IEC 14443-B\nISO/IEC 18092\nISO/IEC 15693 (10% modulation)(2)\nISO/IEC 15693 (100% modulation)\n1. Maximum values based on design simu lation and/or characterization results, and not tested in production. 8\n8\n1080100\n14\n14\n30\n100%\nTransmitter specifications  (VPS_TX = 2.7 to 3.3 V)\nZ\nOUT differential impedance between TX1 and \nTX2(1) 27 Ω\nOutput power fo r 3V operation on pin VPS_TX (1)(2)\n2. Parameter measured on samples using recommended output matching network. (Z load is 27 Ω and 0°.)55 mW\nTransmitter specifications  (VPS_TX = 4.5 to 5.5 V)\nZOUT differential impedance between TX1 and \nTX2(1) 16 Ω\nOutput power for 5V operation on pin VPS_TX (1) (2)230 mW\nReceiver specifications\nSmall signal differential input resistance \n(Rx1/Rx2)(1) 100 k Ω\nVRx1-Rx2Differential input voltage between pins RX1 and \nRX2(3) \n3. This voltage can be limited by adding a damping resist or in parallel of the antenna or between ST_R0 and \nGround.18 V\nSmall signal differential input capacitance \n(Cx1/Cx2)(1) 22 pF\nSensitivity (106 Kbps data rate)(4)\n4. Based on ISO/IEC 10373-6 protocol measurement. T he reader sensitivity corresponds to the load \nmodulation value of the REQ reply sent by an ISO reference card when decoded by the CR95HF.8m V\nElectrical characteristics CR95HF\n48/77 DocID018669 Rev 126.6 Oscillator characteristics\nThe external crystal used for this product is a 27.12 MHz crystal with an accuracy of \n±1 4k H z .\n         \nFor CL1 and CL2, it is recommended to use high-quality external ceramic capacitors in the \n10 pF to 20 pF range (typ.), designed for high-frequency applications, and selected to match the requirements of the crystal or resonator (see Figure 16 ). C\nL1 and CL2 are usually the \nsame size. The crystal manufacturer typically  specifies a load capacitance which is the \nseries combination of CL1 and CL2. \nFigure 16. Typical application with a 27.12 MHz crystal\nNote: For CL1 and CL2 it is recommended to use high-quality ceramic capacitors in the 10 pF to \n20 pF range selected to match the requirements of the crystal or resonator. CL1 and CL2, are \nusually the same size. The crystal manufacture r typically specifies a load capacitance which \nis the series combination of CL1 and CL2.\nLoad capacitance CL has the following formula: CL = CL1 x CL2 / (CL1 + CL2) + Cstray where \nCstray is the pin capacitance and board or trace PCB-related capacitance. Typically, it is \nbetween 2 pF and 7 pF.Table 35. HFO 27.12 MHz oscillator characteristics(1) (2)\n1. Resonator characteristics given by the crystal/ceramic resonator manufacturer.\n2. Based on characterization, not tested in production.Symbol Parameter Conditions Min. Typ. Max. Unit\nfXTAL Oscillator frequency 27.12 MHz\nRF Feedback resistor 2 M Ω \nCRecommended load capacitance \nversus equivalent se rial resistance of \nthe crystal (RS)(3)\n3. The relatively low value of the RF resistor offers a good protection agai nst issues resulting from use in a \nhumid environment, due to the induced leakage and t he bias condition change. However, it is \nrecommended to take this point into account if the Host is used in tough humidity conditions.RS = 30  Ω 6p F\ntSU(HFO)(4)\n4. tSU(HFO)  is the startup time measured from the moment it is enabled (by software) to a stabilized 27.12 MHz \noscillation is reached. This value is measured for a standard crystal res onator and it can vary significantly \nwith the crystal manufacturer.Startup time  VPS is stabilized 6 10 ms\nDL\x14\x17\x14\x17\x18E9\x15;287;,1 I+)2&/\x14\n5)\n1)&\x03GHYLFH\x15\x1a\x11\x14\x15\x030+]\nFU\\VWDO\n&/\x15\nDocID018669 Rev 12 49/77CR95HF Package information\n767 Package information\nIn order to meet environmental requirements, ST offers these devices in different grades of \nECOPACK® packages, depending on their level of environmental compliance. ECOPACK® \nspecifications, grade definitions a nd product status are available at: www.st.com . \nECOPACK® is an ST trademark.\n7.1 VFQFPN32 package information\nFigure 17. VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very thin profile fine pitch\nquad flat package outline\n1. Drawing is not to scale.\x14\x12?-%?!-+/2?6\x116HDWLQJ\x03SODQH\nGGG &&\n$\x16 $\x14$\n\'\nH\n\x1c \x14\x19\n\x14\x1a\n\x15\x17\n\x16\x15\n3LQ\x03\x06\x03\x14\x03,\'\n5\x03 \x03\x13\x11\x15\x13\x1b\n(\n//\n\'\x15\x14E(\x15\n%RWWRP\x03YLHZ\nPackage information CR95HF\n50/77 DocID018669 Rev 12         Table 36. VFQFPN32 - 32-pin, 5x5 mm, 0.5 m m pitch very thin profile fine pitch \nquad flat package mechanical data\nSymbolmillimeters inches(1)\n1. Values in inches are converted from mm and rounded to 4 decimal digits.Min Typ Max Min Typ Max\nA 0.800 0.900 1.000 0.0315  0.0354 0.0394\nA1  0.000  0.020 0.050  0.0000  0.0008 0.0020A3  - 0.200  -  - 0.0079 -\nb 0.180 0.250 0.300 0.0071 0.0098 0.0118\nD 4.850 5.000 5.150 0.1909 0.1969 0.2028\nD2 3.500 3.600 3.700 0.1378 0.1417 0.1457\nE 4.850 5.000 5.150 0.1909 0.1969 0.2028\nE2 3.500 3.600 3.700 0.1378 0.1417 0.1457\ne - 0.500 - - 0.0197 -\nL 0.300 0.400 0.500 0.0118 0.0157 0.0197\nddd - - 0.050 - - 0.0020\nDocID018669 Rev 12 51/77CR95HF Package information\n76Figure 18. VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very thin profile fine pitch \nquad flat package recommended footprint\n1. Dimensions are expr essed in millimeters.\x17\x15B)3B$0.25B%B9\x14\x18\x11\x16\x13\n\x16\x11\x1b\x13\n\x13\x11\x19\x13\n\x16\x11\x19\x13\n\x13\x11\x18\x13\x18\x11\x16\x13\n\x13\x11\x16\x13\n\x13\x11\x1a\x18\n\x16\x11\x1b\x13\x16\x11\x1b\x13\x16\x11\x19\x13\x03\x03\nPart numbering CR95HF\n52/77 DocID018669 Rev 128 Part numbering\n         \nNot all combinations are nece ssarily available. For a list of available options (speed, \npackage, etc.) or for further information on an y aspect of this device, please contact your \nnearest STMicroelectronics Sales Office.\nNote: Parts marked as “ES” or “E” are not yet qualified and therefore not approved for use in \nproduction. ST is not responsi ble for any consequences resulti ng from such use. In no event \nwill ST be liable for the customer using any of  these engineering samp les in production. \nST’s Quality department must be contacted pr ior to any decision to use these engineering \nsamples to run a qua lification activity. Table 37. Ordering information scheme \nExample: CR 95 HF – V MD 5 T\nDevice type\nCR = Contactless reader IC\nWired access\n95 = SPI and UART\nFrequency band\nHF = High frequency (13.56 MHz)\nOperating voltage\nV = 2.7 to 5.5 V \nPackage\nMD = 32-pin VFQFPN (5 x 5 mm) \nOperating temperature\n5 = –25° to +85° C\nPackaging\nT = Tape and Reel\nDocID018669 Rev 12 53/77CR95HF Additional Idle command description\n76Appendix A Additional Idle command description\nThis section provides examples of use for the I DLE command.\nThe wake-up source is the third of the 16 bytes in the I DLE command. This byte specifies \nauthorized Wake-up events. This revision now also provides the capability to  set the LFO \nfrequency in WFE mode. \nThe LFO frequency and the authorized wake-up source settings are stored in the Wake-up \nsource register as the parameters of the I DLE command. \nThe Wake-up event is updated by the CR95HF when it exits WFE mode. The contents of the Wake-up event register ca n be read using the Read Register command \nor in the CR95HF reply to the Idle command.\n         \n         \nBits [7:6]  define the LFO frequency (fLFO): \n00: 32 kHz 01: 16 kHz \n10: 8 kHz 11: 4 kHz \nBit 4 : When set, the CR95HF will wake up when an  external interrupt (low level on pin \nSPI_SS ) is detected. This is usef ul for UART communication.\nBit 3 : When set, the CR95HF will wake up when an  external interrupt (low level on pin \nIRQ_IN ) is detected. This is useful for SPI commu nication. It is recommended to set this bit \nto ‘1’ in order to recover in  the event of a system crash.\nBit 1 : When set, the CR95HF will wake up when a ta g is detected in the RF field. This bit \nmust also be set during Tag Detection calib ration or during a Tag Detection sequence.\nBit 0 : When set, the CR95HF will wake up and re turn to Ready stat e at the end of a \npredefined cycle. The Timeout (TO) value is defined by the MaxSleep and Wake-up period:\nTO = (MaxSleep *(WuPeriod+1)*tREF \ntREF= 256*tL = 8 ms (fLFO = 32 kHz), mean power consumption in Sleep mode is 25 µA\ntREF= 256*tL = 64 ms (fLFO = 4 kHz), mean power consumption in Sleep mode is 20 µA\nNote: Note that: 0x00 < MaxSleep < 0x1F.\nThis bit must be set when using the timer as a possible wake-up source. It must be set \nduring Tag Detection Calibration to force a wake-up after the first Tag Detection trial.Table 38. Wake-up source register\nBits [7:6] Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0\nLFO frequency RFU(1)\n1. Must be set to ‘0’.IRQ on pin \nSPI_SSIRQ on pin \nIRQ_INRFU(1)Tag Detect Timeout\nTable 39. Wake-up event register\nBits [7:6] Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0\nLFO frequency RFUIRQ on pin \nSPI_SSIRQ on pin \nIRQ_INRFU Tag Detect Timeout\nExample of tag detection calibration process CR95HF\n54/77 DocID018669 Rev 12Appendix B Example of tag detection calibration process\nThe following script works on the DEMO_CR95HF evaluation board and with the CR95HF \ndevelopement software availabl e from the ST internet site. \nThis is a dichotomous approach to quickly co nverge to the DacDataRef value for which a \nwake-up event switches from tag detection to Ti meout. In this process, only the DacDataH \nparameter is changed in successive Idle co mmands. And we look at the wake-up event \nreply to decide the next step.\n00 01 02 corresponds to a Tag Detect, \n00 01 01 corresponds to a Timeout.\nREM, Tag Detection Calibration Test\nREM,   Sequence: Power-up Tag Detect Wake-up by Tag Detect (1 try \nmeasurement greater or equal to DacDataH) or Timeout \nREM,   CMD 07 0E 03 A100 D801 1800 01 60 60 00 XX 3F 00REM,   03   WU source = Tagdet or TimeoutREM,   A100  Initial Dac Compare REM,   F801  Initial Dac Compare REM,   1800  HFO REM,   20 Wup Period 32 Inactivity period = 256ms (LFO @ 32kHz) REM,   60 Osc  3ms   (LFO @ 32kHz) REM,   60 Dac  3ms   (LFO @ 32kHz) REM,   00  DacDataL  = minimum level (floor)REM,   xx  DacDataH 00 = minimum level (ceiling) REM,   3F  Swing 13.56  4.6 usREM,   01 Maximum number of Sleep before Wakeup 2  \nREM, Tag Detection Calibration Test \nREM, During tag detection calibration process DacDataL = 0x00 REM, We execute several tag detection commands with different \nDacDataH values to determine DacDataRef level corresponding to CR95HF application set-up\nREM, DacDataReg value corresponds to DacDataH value for which Wake-\nup event switches from Timeout (0x01) to Tag Detect (0x02)\nREM, Wake-up event  = Timeout  when  DacDataRef is between DacDataL \nand DacDataH \nREM, Search DacDataref value corresponding to value of DacDataH for \nwhich Wake-up event switches from Tag Detect (02) to Timeout(01) \nDocID018669 Rev 12 55/77CR95HF Example of tag detection calibration process\n76REM, Step 0: force wake-up event to Tag Detect (set DacDataH = 0x00) \nREM, With these conditions Wake-Up event must be Tag Detect >>> CR95HFDLL_STCMD, 01070E03A100F801180020606000003F01<<< 000102REM, Read Wake-up event  = Tag Detect  (0x02); if not, error .\nREM, Step 1: force Wake-up event to Timeout (set DacDataH = 0xFC \nREM, With these conditions, Wake-Up event must be Timeout>>> CR95HFDLL_STCMD, 01070E03A100F801180020606000FC3F01<<< 000101REM, Read Wake-up event = Timeout (0x01); if not, error .\nREM, Step 2: new DacDataH value = previous DacDataH +/-  0x80  \nREM, If previous Wake-up event was Timeout (0x01) we must decrease \nDacDataH (-0x80) \n>>> CR95HFDLL_STCMD, 01070E03A100F8011800206060007C3F01<<< 000101REM, Read Wake-up event = Timeout (0x01) or Wake-up event = Tag \nDetect (0x02) \nREM, Step 3: new DacDataH value = previous DacDataH +/- 0x40  \nREM, If previous Wake-up event was Timeout (0x01), we must decrease \nDacDataH (-0x40); else, we increase DacDataH (+ 0x40)\n>>> CR95HFDLL_STCMD, 01070E03A100F8011800206060003C3F01<<< 000102REM,  Read Wake-up event = Timeout (0x01)  or  Wake-up event  = Tag \nDetect (0x02) \nREM, Step 4: new DacDataH value = previous DacDataH +/- 0x20  \nREM, If previous Wake-up event was Timeout (0x01), we must decrease \nDacDataH (-0x20); else, we increase DacDataH (+ 0x20)\n>>> CR95HFDLL_STCMD, 01070E03A100F8011800206060005C3F01<<< 000102REM, Read Wake-up event = Timeout (0x01)  or  Wake-up event = Tag \nDetect (0x02)\nExample of tag detection calibration process CR95HF\n56/77 DocID018669 Rev 12REM, Step 5: new DacDataH value = previous DacDataH +/- 0x10  \nREM, If previous Wake-up event was Timeout (0x01), we must decrease \nDacdataH (-0x10); else, we increase DacDataH (+ 0x10)\n>>> CR95HFDLL_STCMD, 01070E03A100F8011800206060006C3F01<<< 000102REM, Read Wake-up event = Timeout (0x01) or Wake-up event = Tag \nDetect (0x02)\nREM, Step 6: new DacDataH value = previous DacDataH +/- 0x08  \nREM, If previous Wake-up event was Timeout (0x01), we must decrease \nDacDataH (-0x08); else, we increase DacDataH (+ 0x08)\n>>> CR95HFDLL_STCMD, 01070E03A100F801180020606000743F01<<< 000101REM, Read Wake-up event = Timeout (0x01) or  Wake-up event = Tag \nDetect (0x02)\nREM, Step 7: new DacDataH value = previous DacDataH +/- 0x04  \nREM, If previous Wake-up event was Timeout (0x01), we must decrease \nDacDataH (-0x04); else, we increase DacDataH (+ 0x04)\n>>> CR95HFDLL_STCMD, 01070E03A100F801180020606000703F01<<< 000101REM, Read Wake-up event = Timeout (0x01) or  Wake-up event = Tag \nDetect (0x02)\nREM, If  last Wake-up event = Tag Detect (0x02), search DacDataRef = \nlast DacDataH value\nREM, If  last Wake-up event = Timeout (0x01), search DacDataRef = \nlast DacDataH value -4\nREM, For tag detection usage, we recommend setting DacDataL = \nDacDataRef -8 and DacDataH = DacDataRef +8 \n>>> CR95HFDLL_STCMD, 01070E0B21007801180020606064743F01\n<<< 000101\nDocID018669 Rev 12 57/77CR95HF Example of tag detection command using results of tag detection calibration\n76Appendix C Example of tag detection command using\nresults of tag detection calibration\nThe following script works on the DEMO_CR95HF evaluation board and with the CR95HF \ndevelopment software available from the ST internet site. \nThis is an example of a Tag Detection command when a tag is not present in the RF \noperating volume using the CR95HF:\n>>> CR95HFDLL_STCMD, 01 070E0B21007801180020606064743F01<<< 000101 Wake-up event = Timeout (0x01)>>> CR95HFDLL_STCMD, 01 0803620100<<< 000101\nThis is an example of a Tag Detection command when a tag is present in the RF operating \nvolume using the CR95HF:\n>>> CR95HFDLL_STCMD, 01 070E0B21007801180020606064743F01<<< 000102 Wake-up event = Tag Detect (0x02) >>> CR95HFDLL_STCMD, 01 0803620100<<< 000102\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n58/77 DocID018669 Rev 12Appendix D Examples of CR95HF command code to\nactivate NFC Forum and ISO/IEC 15693 tags\nThe following script works on the DEMO_CR95HF evaluation board and with the CR95HF \ndevelopement software availabl e from the ST internet site. \nThis section provides examples of CR95HF command code used to activate NFC Forum \nand ISO/IEC 15693 tags using CR95HF development software. \nCR95HFDLL_STCMD : Is the standard CR95HF frame exchange command. In this command, \nthe first byte 01 is not sent, it is only requested by the CR95HF develo pment software in \norder to recognize if it is a user or service command.\nCR95HFDLL_SENDRECV : Is the encapsulated CR95HF SendReceive command for which \ncommand codes, number of bytes, and CRC are automatically appende d to the parameter.\nIn this section, \n• The CR95HF command overhead (command c ode, length of data and transmission \nflag) is in black.\n• The Tag instruction is in blue.\n• The CR95HF response overhead (result code, length of data and status) is in green .\n• The Tag response is in red.\nWhen the CRC append option is set in th e Protocol Select command, the CRC is \nautomatically appended by the CR 95HF, but the CRC is not visibl e in the instruction log file.\nWhen the CRC is present in the command or response, CRC reply is in italics .\nThe following symbols correspond to:\n>>> Frame sent by Host to CR95HF \n<<< Frame received by  Host from CR95HF \nD.1 ISO/IEC 14443 Type A \nD.1.1 NFC Forum Tag Type 1 (Topaz)\nREM,  CR95HF code example to support NFC Forum Tag Type 1 14443_A  \nREM,  TEST TOPAZ 14443A (UID 6E567A00)REM,  first byte 01 in CR95HFDLL_STCMD is only requested by CR95HF \nDevelopment SW \nREM,  RFOFF>>> CR95HFDLL_STCMD, 01 02020000\n<<< 0000\nREM,  TEST  TOPAZ   14443A (UID 6E567A00)\nREM,  Sel Prot 14443A  option TOPAZ>>> CR95HFDLL_STCMD, 01 020402000300\n<<< 0000\nDocID018669 Rev 12 59/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76REM, Optimization of synchronization between digital and analog \ninputs by adjusting TimerW value (default 0x52, min. 0x50, max. 0x60). Recommended value is 0x56 or 0x58 for NFC Forum Tag Type 1 (Topaz).\n>>> CR95HFDLL_STCMD, 01 09043A00 5804\n<<< 0000REM,  Recommended modulation and gain is 0xD1 or 0xD3 for NFC Forum \nTag Type 1 (Topaz).\n>>> CR95HFDLL_STCMD, 01 0904680101 D1\n<<< 0000REM, last Byte x7 or x8 in CR95HFDLL_SENDRECV  command  number of \nbits in the 14443 _Type A  frame \nREM,  REQA reply ATQA 000C>>> CR95HFDLL_STCMD, 01 04 02 26 07\n<<< 80 05 000C 280000REM,  RID reply HR0 HR1 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 78000000000000  A8\n<<< 80 0B 11 48 6E567A00 3E45 080000REM,  RAll 0408 0000 UID0 UID 1 UID2 UID3 Reply HR0 HR1 UID0 UID 1 \nUID2 UID3 datas\n>>> CR95HFDLL_STCMD, 01 04 08 000000 6E567A00  A8\n<<< 80 40 11 48 6E567A00 \n0002250000100E000313D1010F5402656E5573652043523935524620210000000000000000000000000000000000000000000000000000CCCCCC\nREM,  Read ad08 00 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 01 0800 6E567A00  A8\n<<< 80 07 08 00 87C1 080000REM,  Write_E ad08   data 12 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 53 0812 6E567A00  A8\n<<< 80 07 08 12 14F2 080000REM,  Read ad08 00 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 01 0800 6E567A00  A8\n<<< 80 07 08 12 14F2 080000REM,  Write_NE ad08   data A5 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 1A 08A5 6E567A00  A8\n<<< 80 07 08 B7 B300 080000REM,  Read ad08 00 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 01 0800 6E567A00  A8\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n60/77 DocID018669 Rev 12<<< 80 07 08 B7 B300 080000\nREM,  Write_E ad08   data 00 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 53 0800 6E567A00  A8\n<<< 80 07 08 00 87C1 080000REM,  Read ad08 00 UID0 UID 1 UID2 UID3>>> CR95HFDLL_STCMD, 01 04 08 01 0800 6E567A00  A8\n<<< 80 07 08 00 87C1 080000\nD.1.2 NFC Forum Tag Type 2\nREM, CR95HF code example to support NFC Forum Tag Type 2 14443_AREM,  TEST INVENTORY then Read & Write in Memory\nREM, Protocol select 14443A\n>>> CR95HFDLL_STCMD, 01 02020200\n<<< 0000REM, Optimization of synchronization between digital and analog \ninputs by adjusting TimerW value (default 0x52, min. 0x50, max. 0x60). Recommended value is 0x56 or 0x58 for NFC Forum Tag Type 2.\n>>> CR95HFDLL_STCMD, 01 09043A00 5804\n<<< 0000REM,  Recommended modulation and gain is 0xD1 or 0xD3 for NFC Forum \nTag Type 2.\n>>> CR95HFDLL_STCMD, 01 0904680101 D1\n<<< 0000>>> CR95HFDLL_ANTICOLSELECT123\n------ ISO14443-A STARTING ANTICOLLISION ALGORITHM ------\nISO14443-A REQAreply ATQA >>> CR95HFDLL_SENDRECV, 26 07\n<<< 80 05 4400 280000\nISO14443-A ANTICOL 1>>> CR95HFDLL_SENDRECV, 93 20 08\n<<< 80 08 8804179F04  280000\nISO14443-A SELECT 1>>> CR95HFDLL_SENDRECV, 93 70 8804179F04  28\n<<< 80 06 04 DA17 080000\nDocID018669 Rev 12 61/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76ISO14443-A ANTICOL 2\n>>> CR95HFDLL_SENDRECV, 9520 08\n<<< 80 08 7910000069  280000\nISO14443-A SELECT 2>>> CR95HFDLL_SENDRECV, 9570  7910000069  28\n<<< 80 06 00 FE51 080000\n--> UID = 04179F10000069\n--> TAG selected------ ISO14443-A END OF ANTICOLLISION ALGORITHM ------\nREM,  READ @A5\n>>> CR95HFDLL_SENDRECV, 300C 28\n<<< 80 15 00000000FFFFFFFFFFFFFFFFFFFFFFFF F4CD 080000\nREM,  WRITE @0C data A5>>> CR95HFDLL_SENDRECV, A20CA5A5A5A5  28\n<<< 87 00 : Frame wait time out OR no tag\nREM,  READ @A5>>> CR95HFDLL_SENDRECV, 300C 28\n<<< 80 15 A5A5A5A5FFFFFFFFFFFFFFFFFFFFFFFF 84D8 080000\nD.1.3 NFC Forum Tag Type 2 or 4: Usi ng split frames to resolve collisions\nREM,  TEST  ANTICOLISION 2 tags 14443_A \nREM,  CR95HF CONFIGURATION : ISO14443-A protocol>>> CR95HFDLL_SELECT, 02000280<<< 0000REM,  ISO14443-A : CONFIG>>> CR95HFDLL_STCMD, 01 09043A005A04<<< 0000REM, ISO14443-A : INCREASE DEMOD GAIN>>> CR95HFDLL_STCMD, 01 0904680101DF\n<<< 0000\nREM, Anticollision  2 tags\nREM, Tag 1 --> UID = 044B744AEF2280\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n62/77 DocID018669 Rev 12REM, Tag 2 --> UID = 043B114AEF2280\nREM, Response When 2 tags are present NVB = nb Byte OK + nb bit OK REM, Collision  B8 REM, First Byte Coll 02 (3 eme Byte) (8804 ok)REM, Index bit Coll 04 (5eme bit) => SN finish by 0 or 1REM,   set NVB = 45\nREM,  REQA  Poll  field with Two tags In operating volume\n>>> CR95HFDLL_STCMD, 01 04022607<<< 80 05 4403 280000\nREM,   Ant CL1  Collision Detection (NVB 20) none data on UID\nREM, Response Flag F1=B8  F2=02 F3=04REM,  F1=B8 collision detected 8 bits significatifs in first byte of \nresponse\nREM,  F2=02  collision detected in 3rd response byte, index start at \n0\nREM,  F3=04 collision detected on 5th bit, index start at 0>>> CR95HFDLL_STCMD, 01 0403932008<<< 80 08 88047B75B7  B80204\nREM,  Collision Management Usage of split frame with NVB = 45 4bytes \nOK  + 5 lsb bit OK in next byte\nREM,  last bit (collision one)  arbitrary fixed to select only one \nbranch of UID tree\nREM,  padding of last byte with zeros as msb (tranmission lsb first) \n0B\nREM,  command flag 45 usage of Split Frame (4) with 5 bits \nsignificatif in last byte\nREM,  uncomplete response byte is padded with 0 as lsb bitsREM,  Response Flag F1=23  F2=00 F3=00REM,  F1=23, No collision REM,   3 bit significatif (msb last received bits) in first response \nbyte 40 \nREM,  F2=00, not significant REM,  F3=00, not significant>>> CR95HFDLL_STCMD, 01 0406934588040B45\nDocID018669 Rev 12 63/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76<<< 80 06 4074B3 230000\nREM,  Activation tag Highest branch>>> CR95HFDLL_SENDRECV, 937088044B74B328<<< 80 06 24D836 080000\nREM,   Ant CL2>>> CR95HFDLL_STCMD, 01 0403952008<<< 80 08 4AEF228007  280000\nREM,  Sel CL2 tag Highest branch >>> CR95HFDLL_SENDRECV, 95704AEF22800728<<< 80 06 20FC70 080000\nREM,  ISO14443-A HLTA tag1 Highest branch \n>>> CR95HFDLL_SENDRECV, 500028<<< 8700 : Frame wait time out OR no tag\nREM,  WUPA  Second tags In field \n>>> CR95HFDLL_STCMD, 01 04025207<<< 80 05 4403 280000\nREM,   Ant CL1  Detection Collision second tag (No collision)>>> CR95HFDLL_STCMD, 01 0403932008<<< 80 08 88047B75B7  B80204\nREM,  Activation tag lowest branch   043B114AEF2280 >>> CR95HFDLL_SENDRECV, 937088043B11A6789808<<< 80 06 24D836 080000\nREM,   Ant CL2 >>> CR95HFDLL_STCMD, 01 0403952008<<< 80 08 4AEF228007  280000\nREM,  Sel CL2 tag Highest branch  >>> CR95HFDLL_SENDRECV, 95704AEF22800728<<< 80 06 20FC70 080000\nREM,  ISO14443-A HLTA tag2 Lowest branch \n>>> CR95HFDLL_SENDRECV, 500028<<< 8700 : Frame wait time out OR no tag\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n64/77 DocID018669 Rev 12REM,  REQA no other tag In operating volume \n>>> CR95HFDLL_STCMD, 01 04022607<<< 8700\nD.1.4 NFC Forum Tag Type 2\nCommunication using Parity Framing mode which is compliant with MIFARE® framing \nrequirements.\nREM, TEST Extract NDEF Message of NFC Tag Type 2 using Parity \nFraming mode option \nREM, ISO14443-A protocol select \n>>> 02000280<<< 0000REM, ISO14443-A configuration>>> 09043A005A04<<< 0000REM,  ISO14443-A: Increase modulation and gain>>> 0904680101DF<<< 0000\nREM, REQA\n>>> 04 02 26 07\n<<< 80 05 4400 280000\nREM,   Ant CL1\n>>> 04 03 93 20 08\n<<< 80 08 8804CB8CCB 280000\nREM,  Sel CL1>>> 04 08 9370 8804CB8CCB  28\n<<< 80 06 04 DA17 080000\nREM,   Ant CL2>>> 04 03 9520 08\n<<< 80 08 1A432880F1 280000\nREM,  Sel CL2>>> 04 08 9570 1A432880F1  28\n<<< 80 06 00 FE51 080000\nDocID018669 Rev 12 65/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76REM, All commands below are sent using Parity Framing mode option \nwhich defines the parity bit value coming with data byte.\nREM, All commands byte including CRC are sent or received in format \nData Byte Parity Byte.\nREM, Special case occur when receiving single nibble for ACK (9004 \n0A 2400) or NAK (9004 0y 2400) where ‘y’ depends on error code.\nREM, Row0 SN0 SN1 SN2 BCC0REM, Read ROW0 option (cmd CRC1  addr CRC1 CRC2) Parity \nautomatically included\nREM, response Result code Length Data Status>>> 04 05 30 00 02 A8  08\n<<< 80 15 04 CB 8C CB 1A 43 28 80 F1 48 00 00 E1 10 12 00 CF2F 080000\nREM, Read ROW0 option Parity Framing (cmd CRC1  addr CRC1 CRC2) \nParity specify after each byte \nREM, response Result code Length Data (data byte+parity byte) Status>>> 04 09 3080 0080 0200 A800 18\n<<< 80 27 0400 CB00 8C00 CB00 1A00 4300 2880 8000 F100 4880 0080 0080 \nE180 1000 1280 0080 CF80 2F00 080000\nREM, Read ROW0 option Parity Framing (cmd CRC1  addr CRC1 CRC2)  \nwith error in Parity \nREM, Response Result code Length Data (data byte+parity byte) StatusREM, NACKREM, CR95HFDLL_STCmdREM, CR95HFDLL_STCmdREM,  Read ROW1_9 option Parity Framing (cmd CRC1  addr CRC1 CRC2) \nParity specify after each byte   REM\nREM,   Row1 SN3 SN4 SN5 SN6>>> 04 09 3080 0100 8B80 B900  18\n<<< 80 27 1A00 4300 2880 8000 F100 4880 0080 0080 E180 1000 1280 0080 \n0100 0380 A080 1000 1880 7A00 080000\nREM,   Row2 BCC1 internal lock byte0 lock byte1\n>>> 04 09 3080 0200 1000 8B80  18\n<<< 80 27 F100 4880 0080 0080 E180 1000 1280 0080 0100 0380 A080 1000 \n4480 0380 0B00 D180 A580 4C00 080000\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n66/77 DocID018669 Rev 12REM,   Row3 CCFile Magic E1 Ver 10 MMY Size 12 Access 00\n>>> 04 09 3080 0380 9980 9A80  18\n<<< 80 27 E180 1000 1280 0080 0100 0380 A080 1000 4480 0380 0B00 D180 \n0100 0700 5580 0100 8880 1300 080000\nREM,   Row4 First TL (T01 Prop L 3 V)\n>>> 04 09 3080 0400 2600 EE80  18\n<<< 80 27 0100 0380 A080 1000 4480 0380 0B00 D180 0100 0700 5580 0100 \n7300 7480 2E80 6380 5A80 2A00 080000\nREM,   Row5 Second TLV NDEF MSG (T03 L 0B V www.st.com)\n>>> 04 09 3080 0580 AF80 FF80  18\n<<< 80 27 4480 0380 0B00 D180 0100 0700 5580 0100 7300 7480 2E80 6380 \n6F80 6D00 FE00 0080 3F80 8500 080000\nREM,   Row6  Second TLV NDEF MSG  ( T V  www.st.com)\n>>> 04 09 3080 0680 3400 CD00  18\n<<< 80 27 0100 0700 5580 0100 7300 7480 2E80 6380 6F80 6D00 FE00 0080 \n0080 FF80 0080 FF80 3F80 F680 080000\nREM,   Row7 Secobd TLV NDEF MSG (T V www.st.com)\n>>> 04 09 3080 0700 BD80 DC00  18\n<<< 80 27 7300 7480 2E80 6380 6F80 6D00 FE00 0080 0080 FF80 0080 FF80 \n4500 7300 7300 6100 4880 CB00 080000\nREM,   Row8 Third TLV Terminator (T V FE 00)\n>>> 04 09 3080 0800 4A00 2480  18\n<<< 80 27 6F80 6D00 FE00 0080 0080 FF80 0080 FF80 4500 7300 7300 6100 \n0080 FF80 0080 FF80 F080 4B80 080000\nREM,   Row9 Read Scratch pad\n>>> 04 09 3080 0980 C380 3580  18\n<<< 80 27 0080 FF80 0080 FF80 4500 7300 7300 6100 0080 FF80 0080 FF80 \n4500 4600 2000 5400 9A80 4880 080000\nREM, Write ROW9 option Parity Framing (cmd CRC1  addr CRC1 CRC2) \nParity specify after each byte   \nDocID018669 Rev 12 67/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76REM, Response Result code Length Data (data byte+parity byte) Status \nREM,   Row9 Write Scratch pad (ACK)>>> 04 11 A200 0980 AA80 5580 AA80 5580 2900 7D80  18\n<<< 90 04 0A 240000\nREM,   Row9 Read Scratch pad\n>>> 04 09 3080 0980 C380 3580  18\n<<< 80 27 AA80 5580 AA80 5580 4500 7300 7300 6100 0080 FF80 0080 FF80 \n4500 4600 2000 5400 1780 B480 080000\nREM,   Row9 Write Scratch pad (ACK) \n>>> 04 11 A200 0980 0080 FF80 0080 FF80 C800 2780  18\n<<< 90 04 0A 240000\nREM,   Row9  Read Scratch pad \n>>> 04 09 3080 0980 C380 3580  18\n<<< 80 27 0080 FF80 0080 FF80 4500 7300 7300 6100 0080 FF80 0080 FF80 \n4500 4600 2000 5400 9A80 4880 080000\nREM,   Select Sector 0 (NACK)   \n>>> 04 09 C200 FF80 C200 E880  18\n<<< 90 04 00 240000\nBREAK\n>>> CR95HFDLL_RESET_SPI<<< 8000>>> CR95HFDLL_ECHO<<< 5500>>> CR95HFDLL_IDN<<< 00 0F 4E46 4320 4653 324A 4153 5434  002ACE\nD.1.5 NFC Forum Tag Type 4A \n**** CR95HF code example to support NFC Forum Tag Type 4A (14443-A)  \n&  NDEF message\nREM, 14443B (CR95HF Protocol Selection 14443_A )\nREM, first Byte 01 in CR95HFDLL_STCMD is only requested by CR95HF \nDevelopment SW\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n68/77 DocID018669 Rev 12********** CR95HF setting to support extended Frame Waiting Time \n**********\n>>> CR95HFDLL_STCMD, 01 020402000180\n<<< 0000\nREM, Optimization of synchronization between digital and analog \ninputs by adjusting TimerW value (default 0x52, min. 0x50, max. 0x60). Recommended value is 0x56 or 0x58 for NFC Forum Tag Type 1 (Topaz).\n>>> CR95HFDLL_STCMD, 01 09043A00 5804\n<<< 0000REM,  Recommended modulation and gain is 0xD1 or 0xD3 for NFC Forum \nTag Type 1 (Topaz).\n>>> CR95HFDLL_STCMD, 01 0904680101 D1\n<<< 0000REM, last Byte x7 or x8 in CR95HFDLL_SENDRECV  command  number of \nbit in the 14443 _Type A  frame \n>>> CR95HFDLL_ANTICOLSELECT123\n------ ISO14443-A STARTING ANTICOLLISION ALGORITHM ------\nISO14443-A REQA>>> CR95HFDLL_SENDRECV, 26 07\n<<< 80 05 0400 280000\nISO14443-A ANTICOL 1>>> CR95HFDLL_SENDRECV, 9320 08\n<<< 80 08 08192D A29E 280000\nISO14443-A SELECT 1>>> CR95HFDLL_SENDRECV, 937008192DA29E  28\n<<< 80 06 20 FC70 080000\n--> UID = 192DA29E   ,  TAG selected\n------ ISO14443-A END OF ANTICOLLISION ALGORITHM ------\n***   ISO14443A_4 RATS/ATS  (bit rate capability/FDT/CID usage) \n>>> CR95HFDLL_SENDRECV, E050 28\n<<< 80 0A 057833B003 A0F8 080000\n******      ISO14443A_4 PPS   (Protocol parameter data rate)\n>>> CR95HFDLL_SENDRECV, D01100 28\nDocID018669 Rev 12 69/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76<<< 80 06 D0 7387 080000 \n**  ISO14443_4 APDU  (command & reply are using Iblock format, \nProlog Information (APDU) Epilog)\n*** 7816_ APDU format (Class Instruction, Param ,  Length cmd data \nLength expeted)\n*** last byte 28 is a control byte to request CR95HF to \nautomatically happen CRC as Epilog\n*** In response first 2 Byte 80 xx and last three bytes 08 0000 are \nCR95HF\'s control bytes \n*** Detect & Access NDEF Message*** Select Application by name>>> CR95HFDLL_SENDRECV, 02 00 A4040007D2760000850100  28\n<<< 80 08 02 9000 F109 080000\n*******************     Select CC File by name\n>>> CR95HFDLL_SENDRECV, 03 00 A4000002E103  28\n<<< 80 08 03 9000 2D53 080000\n*******************     ReadBinary  CC (offset Le)\n>>> CR95HFDLL_SENDRECV, 02 00 B000000F  28\n<<< 80 17 02 000F1000FF00FF0406000100FF0000 9000 B755 080000\n*******************     Select NDEF MSG  by Identifier 0001\n>>> CR95HFDLL_SENDRECV, 03 00 A40000020001  28\n<<< 80 08 03 9000 2D53 080000\n*******************     ReadBinary NDEF MSG (MSG Length offset 00 2 \nbytes)\n>>> CR95HFDLL_SENDRECV, 02 00 B0000002 28<<< 80 0A 02 0015 9000 ABB3 080000\n*******************     Select NDEF File by name\n>>> CR95HFDLL_SENDRECV, 03 00 A40000020001  28\n<<< 80 08 03 9000 2D53 080000\n*******************     ReadBinary NDEF (MSG offset 02 , 20 Bytes)\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n70/77 DocID018669 Rev 12>>> CR95HFDLL_SENDRECV, 02 00 B0000215  28\n<<< 80 1D 02D101115402656E4D32344C52313620747970652034 9000 25C5 080000\n***       Header D1 type 01 Payload 11 type 54 status 02 english 656E \n, MSG : M24LR16 type \nD.2 ISO/IEC 14443 Type B\nD.2.1 NFC Forum Tag Type 4B\n**** CR95HF code example to support NFC Forum Tag Type 4B (14443-B)  &  NDEF message\nREM, Check CR95HF setting & Protocol selectionREM,  FIELD OFF REM, first Byte 01 in CR95HFDLL_STCMD is only requested by CR95HF \nDevelopment SW \n>>> CR95HFDLL_STCMD, 01 02020000<<< 0000REM, 14443B (CR95HF PROTOCOL Selection 14443_B >>> CR95HFDLL_STCMD, 01 020403010180<<< 0000REM, 14443B Optimization CR95HF Analog Configuration for 144443 \n(0x30)\n>>> CR95HFDLL_STCMD, 01 090468010130<<< 0000\nREM, Access to NFC FORUM TAG Type 4B\nREM, REQB 0x 050000 + CRC_B (APf AFI Param (slot0))REM, Reply ATQB 0x50 4Bytes 4 Bytes 3 Bytes + CRC_B (PUPI AppliData \nProtocol Info) \nREM, Reply from CR95HF 80 0F 50AABBCCDD30ABAB010081E1AE00 00REM, 80 response OK, 0F nb byte response including tag reply and the \nultimate CR95HF status byte 00 (reply OK)\nREM, Tag reply 50AABBCCDD30ABAB010081E1AE00REM, Response code 50REM, Pupi AABBCCDDREM, AFI 30 access control \nDocID018669 Rev 12 71/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76REM,  CRC_B(AID) ABAB \nREM,  Nb Appli (1) 01REM,  Prot Info byte1   00  (106 Kbps both direction)REM,  Prot Info byte 2  81( frame max 256 Bytes ISO compliant)   \n0081E1AE0000\nREM,  Prot Info byte 3  E1 (Max frame wait time 4.9 ms Appli \nproprietary CID supported)\nREM, CRC_B AE00\nREM,  14443_3\nREM,  REQB ....>>> CR95HFDLL_STCMD, 01 04 03 050000<<< 80 0F 50AABBCCDD30ABAB010081E1 AE00 00\nREM,  ATTRIB 0x1D PUPI 1byte 1byte 1byte 1 byte  + CRC_B (1D \nIdentifier Param1 Param2 Param3 Param4)\nREM,  Param1   00    use default TR0 TR1 use EOFREM,  Param2  07     max frame size 106 Kbps Up & Dwn linkREM,  Param3  01     ISO14443 compliantREM,  Param4 08      CID (8)   card IdentifierREM,  reply CR95HF 80 04 18EBC3 00REM,  80 response OK  04 nb byte response  including ultimate byte  \n00 CR95HF reply OK\nREM,  Reply 10F9E0  coefBufferLength 1  CID 1  + CRC_B \nREM,  ATTRIB ....CID0\n>>> CR95HFDLL_STCMD, 01 04 09 1D AABBCCDD00070100<<< 80 04 10 F9E0 00\nREM,  14443_4  ,  CID not used\nREM,  APDU  for NDEF managementREM,  command format (INF)  CLA INS P1 P2 Lc(optional) \nData(optional) \nREM,  Response (optional ):  body (optional) Sw1 sW2REM,  Block Format Prolog INFO Epilog ( 02 [CID] [NAD]  [INF] CRC_B \n)\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n72/77 DocID018669 Rev 12REM,  Sequence lecture NDEF  ( for all  following commands CRC_B is \nautomatically appends by CR95HF)\nREM,  Select application suivant la version du tag (100)\n>>> CR95HFDLL_SENDRECV,  02  00 A4 040007D2760000850100<<< 80 06 029000296A 00REM,  response 90 00 ok REM,  response  6A 82 application not found REM,  Select CC >>> CR95HFDLL_SENDRECV, 03 00 A4 0000 02 E103<<< 80 06 03 9000 F530 00REM,  Read CC >>> CR95HFDLL_SENDRECV, 02 00 B0 0000 0F<<< 80 15 02 000F1000FF00FF0406000110020000 9000 E7FA 00REM, Select Ndef  0001>>> CR95HFDLL_SENDRECV, 03  00 A4 0000 02 0001<<< 80 06 03 9000 F530 00REM, Read Msg Length>>> CR95HFDLL_SENDRECV, 02 00 B0 0000 02<<< 80 08 02 0013 9000 53AA 00REM, Select Ndef  0001 >>> CR95HFDLL_SENDRECV, 03 00 A4 0000 02 0001<<< 80 06 03 9000 F530 00REM, Read Message>>> CR95HFDLL_SENDRECV, 02 00 B0 0002 13<<< 80 19 02 D1010F5402656E557365204352393548462021 9000 8571 00\nD.3 ISO/IEC 18092\nD.3.1 NFC Forum Tag Type 3\nREM, CR95HF  code example to support NFC Forum Tag Type 3 \nREM,  TEST INVENTORY ISO/IEC 18092REM,  RFOFF>>> CR95HFDLL_STCMD, 01 02020000\n<<< 0000\nDocID018669 Rev 12 73/77CR95HF Examples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags\n76REM,  Select Protocol 14443C \n>>> CR95HFDLL_STCMD, 01 02020451\n<<< 0000\nREM, ISO/IEC 18092 New Modulation and Gain 0x50>>> CR95HFDLL_STCMD, 01 090468010150\n<<< 0000\nREM, ISO/IEC 18092 Enable AutoDetect Filter  to synchronize NFC Forum Tag Type 3 with \nCR95HF device \n>>> CR95HFDLL_STCMD, 01 09040A0102A1\n<<< 0000REM,  REQC 00 FFFF 00 00  (command code System code No request slot 0)REM, ATQC  80 12  01  010102148E0DB413 (Manuf ID) 100B4B428485D0FF  (Manuf \nParameter)\n>>> CR95HFDLL_STCMD, 01 04 05  00FFFF0000\n<<< 80 12  01 010102148E0DB413 100B4B428485D0FF   00\nD.4 ISO/IEC 15693\nD.4.1 ISO/IEC 15693 tag\nREM,  Test Tag ISO/IEC 15693  (LR family)\nREM,  Protocol Selection  Up link  Ask 30%  coding 1/4REM,  Down link Single Sub carrier High data rateREM,  Inventory One SlotREM, Command Protocol Select 02 02 01 05 \nREM,  Protocol Selection\n>>> CR95HFDLL_STCMD, 01 02020105<<< 0000\nREM,  Modification of IndexMod & Gain in Analog Value register \n@69_index1 0x50\n>>> CR95HFDLL_STCMD, 01 0904680101 50\n<<< 0000\nREM, Inventory 1 Slot \n>>> CR95HFDLL_STCMD, 01 0403 260100\nExamples of CR95HF command code to activate NFC Forum and ISO/IEC 15693 tags CR95HF\n74/77 DocID018669 Rev 12<<< 80 0D 0000B7100128B42102E0 66CC 00\nREM,  GetSystem Info\nREM, Flags, UID E00221B4280110B7 DSFID  00 AFI 00 MemorySize 3F \nBlockSize 03 IC Reference 21\n>>> CR95HFDLL_SENDRECV, 022B\n<<< 80 12 00 0F B7100128B42102E000003F03 21 DFB0 00REM,  Test Tag ISO/IEC 15693 (Dual family)REM,  Protocol Selection  Up link  Ask 30%  coding 1/4REM,  Down link Single Sub carrier High data rateREM,  Inventory 1 SlotREM, Command Protocol Select 02 02 01 05 \nREM,  Protocol Selection\n>>> CR95HFDLL_STCMD, 01 02020105<<< 0000\nREM,  Modification of IndexMod & Gain in Analog Value register \n@69_index1 0x50\n>>> CR95HFDLL_STCMD, 01 0904680101 50\n<<< 0000\nREM, Inventory 1 Slot \n>>> CR95HFDLL_STCMD, 01 0403 260100<<< 80 0D 00FF07062092132C02E0 3D22 00\nREM, GetSystem Info\nREM, Flags ,UID E0022C1392200607 DSFID  FF AFI 00 MemorySize 07FF \nBlockSize 03 IC Reference 2C\n>>> CR95HFDLL_SENDRECV, 0A2B\n<<< 80 13 00 0F 07062092132C02E0 FF 00 FF07 03 2C 984D  00\nDocID018669 Rev 12 75/77CR95HF Revision history\n76Revision history\n         Table 40. Document revision history\nDate Revision Changes\n30-Mar-2011 1 Initial release.\n08-Sep-2011 2 Removed SSI_2 pin.\n26-Oct-2011 3 Upgraded document from Preliminary Data to full Datasheet.\n28-Oct-2011 4Updated device revision information. Added Section 6.2: DC \ncharacteristics on page 43  and updated Section 6.3: Power \nconsumption characteristics on page 43 .\n06-Jan-2012 5Updated Table 12: List of <Parameters> values for the \nProtocolSelect command for different protocols on page 21 , \nTable 17: Idle command description on page 31  and \nSection 5.6.5: Tag detection calibration procedure .\nUpdated Section 6.3: Power consumption characteristics , \nSection 6.4: SPI characteristics  and Section 6.5: RF \ncharacteristics .\nUpdated Appendix B: Example of tag detection calibration \nprocess  and Appendix C: Example of tag detection command \nusing results of tag detection calibration .\n04-May-2012 6Updated Table 3: CR95HF operating modes and states on \npage 11 .\nUpdated response to IDN command in Section 5.3 .\nAdded additional features in Section 5.8: Write Register \n(WrReg) command (0x09) description .\nAdded optional parameter to incr ease maximum waiting time in \nNFC Forum Tag Type 3.\nUpdated Section 6.3: Power consumption characteristics  and \nadded enhanced command for reducing consumption.\n07-Jun-2012 7Updated Section 6.3: Power consumption characteristics  and \nenhanced command (HF2RF bit) for reducing consumption.\n24-Jul-2012 8Changed Response example to Command example in Table 14: \nList of <Data> Send values for the SendRecv command for different protocols .\nUpdated Table 2: CR95HF pin descriptions .\n09-Jun-2014 9Updated Section 3.2: Startup sequence  and Table 28: Absolute \nmaximum ratings on page 42 .\n10-Oct-2014 10Corrected reporting of 4-bit fr ames in ISO/IEC 14443-A mode. \nInternal data exchange buffer is now 528 bytes. Now able to \ndirectly manage the value of Parity bit included in a standard \nISO/IEC 14443-A frame. Added optional parameters for use in Protocol Select command. Main s supply extended to 5V range. \nAdded enhanced error code list.\nRevision history CR95HF\n76/77 DocID018669 Rev 1209-Nov-2016 11Updated:\n–Features\n–Table 6: Possible error codes and their meaning\n–Table 19: Summary of Idle command parameters\n–Section 7: Package information\n–Figure 17: VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very \nthin profile fine pitch quad flat package outline\n–Table 36: VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very \nthin profile fine pitch quad flat package mechanical data\nAdded:\n–Figure 18: VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very \nthin profile fine pitch quad flat package recommended \nfootprint\n08-Jun-2017 12Updated:\n–Table 36: VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very \nthin profile fine pitch quad flat package mechanical data\n–Figure 18: VFQFPN32 - 32-pin, 5x5 mm, 0.5 mm pitch very \nthin profile fine pitch quad flat package recommended \nfootprintTable 40. Document revision history (continued)\nDate Revision Changes\nDocID018669 Rev 12 77/77CR95HF\n77IMPORTANT NOTICE – PLEASE READ CAREFULLY\nSTMicroelectronics NV and its subsidiaries (“ST”) reserve the right to make changes, corrections, enhancements, modifications, and \nimprovements to ST products and/or to this document at any time without notice. Purchasers should obtain the latest relevant in formation on \nST products before placing orders. ST products are sold pursuant to ST’s terms and conditions of sale in place at the time of o rder \nacknowledgement.\nPurchasers are solely responsible for the choice, selection, and use of ST products and ST assumes no liability for application  assistance or \nthe design of Purchasers’ products.\nNo license, express or implied, to any intellectual property right is granted by ST herein.Resale of ST products with provisions different from the information set forth herein shall void any warranty granted by ST for  such product.\nST and the ST logo are trademarks of ST. All other product or service names are the property of their respective owners.Information in this document supersedes and replaces information previously supplied in any prior versions of this document.\n© 2017 STMicroelectronics – All rights reserved\n'}]
!==============================================================================!
### Component Summary: CR95HF-VMD5T

**Manufacturer:** STMicroelectronics  
**Product Code:** CR95HF-VMD5T  
**Description:** The CR95HF is a 13.56 MHz multi-protocol contactless transceiver IC designed for NFC and RFID applications. It supports various communication protocols and is optimized for power management, making it suitable for a wide range of contactless applications.

#### Key Specifications:
- **Voltage Ratings:**
  - Supply Voltage (VPS_Main): 2.7V to 5.5V
  - Supply Voltage for RF Drivers (VPS_TX): 2.7V to 5.5V

- **Current Ratings:**
  - Power-up State: 200 µA (typ), 600 µA (max)
  - Hibernate State: 1 µA (typ), 5 µA (max)
  - Sleep State: 20 µA (typ), 80 µA (max)
  - Ready State: 2.5 mA (typ), 5.0 mA (max)
  - Tag Detection: 50 µA (typ), 100 µA (max)
  - RF Field ON (Reader Mode): 70 mA (typ), 100 mA (max) for 2.7V to 3.3V; 120 mA (typ), 200 mA (max) for 4.5V to 5.5V.

- **Power Consumption:**
  - Varies based on operating mode; lowest in Hibernate and Sleep modes.

- **Operating Temperature Range:**
  - -25°C to +85°C

- **Package Type:**
  - VFQFPN32 (5x5 mm, 0.5 mm pitch)

- **Special Features:**
  - Supports multiple protocols including ISO/IEC 14443 Type A and B, ISO/IEC 15693, and NFC Forum tags.
  - Integrated Analog Front End (AFE) for RF communications.
  - Dedicated internal frame controller.
  - Optimized power management with various low-power modes.
  - Up to 528-byte command/reception buffer (FIFO).

- **Moisture Sensitive Level (MSL):**
  - MSL according to JEDEC J-STD-020E is not specified in the provided data.

#### Typical Applications:
- **NFC and RFID Reader/Writer:** The CR95HF is primarily used in devices that require contactless communication, such as NFC-enabled smartphones, payment terminals, and access control systems.
- **Tag Detection and Communication:** It can detect and communicate with various NFC Forum tags and ISO/IEC compliant tags, making it suitable for applications in smart cards, electronic ticketing, and inventory management.
- **Proximity and Vicinity Standards:** The device is designed to manage frame coding and decoding in Reader mode for standard applications, enhancing its versatility in contactless applications.

### Conclusion:
The CR95HF-VMD5T is a highly integrated contactless transceiver IC that provides robust support for various NFC and RFID protocols, making it ideal for a wide range of applications in the contactless communication space. Its optimized power management features and compact package design further enhance its suitability for portable and battery-operated devices.