[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ATMEGA32-16AU production of MICROCHIP TECHNOLOGY from the text:Features\n•High-performance, Low-power Atmel® AVR® 8-bit Microcontroller\n\x81Advanced RISC Architecture\n– 131 Powerful Instructions – Most  Single-clock Cycle Execution\n– 32 x 8 General Purpose Working Registers– Fully Static Operation\n– Up to 16 MIPS Throughput at 16 MHz\n– On-chip 2-cycle Multiplier\n\x81High Endurance Non-volatile Memory segments\n– 32Kbytes of In-System Self-programmable Flash program memory– 1024Bytes EEPROM\n– 2Kbyte Internal SRAM\n– Write/Erase Cycles: 10,000 Flash/1 00,000 EEPROM\n– Data retention: 20 years at 85°C/100 years at 25°C\n(1)\n– Optional Boot Code Section with Independent Lock Bits\nIn-System Programming by On-chip Boot Program\nTrue Read-While-W rite Operation\n– Programming Lock for Software Security\n\x81JTAG (IEEE std. 1149.1 Compliant) Interface\n– Boundary-scan Capabilities A ccording to the JTAG Standard\n– Extensive On-chip Debug Support\n– Programming of Flash, EEPROM, Fuses, an d Lock Bits through the JTAG Interface\n\x81Peripheral Features\n– Two 8-bit Timer/Counters with Se parate Prescalers and Compare Modes\n– One 16-bit Timer/Counter with Separate Prescaler, Compare Mode, and Capture \nMode\n– Real Time Counter with Separate Oscillator\n– Four PWM Channels– 8-channel, 10-bit ADC\n8 Single-ended Channels\n7 Differential Channels in TQFP Package Only2 Differential Channels with Prog rammable Gain at 1x, 10x, or 200x\n– Byte-oriented Two-wi re Serial Interface\n– Programmable Serial USART– Master/Slave SPI Serial Interface\n– Programmable Watchdog Timer with Separate On-chip Oscillator\n– On-chip Analog Comparator\n\x81Special Microcontroller Features\n– Power-on Reset and Programmable Brown-out Detection\n– Internal Calibrated RC Oscillator– External and Internal Interrupt Sources\n– Six Sleep Modes: Idle, ADC Noise Reduction, Power-save, Power-down, Standby \nand Extended Standby\n\x81I/O and Packages\n– 32 Programmable I/O Lines\n– 40-pin PDIP, 44-lead TQFP, and 44-pad QFN/MLF\n\x81Operating Voltages\n– 2.7V - 5.5V for ATmega32L\n– 4.5V - 5.5V for ATmega32\n\x81Speed Grades\n– 0 - 8MHz for ATmega32L\n– 0 - 16MHz for ATmega32\n\x81Power Consumption at 1 MHz, 3V, 25 ⋅C\n– Active: 1.1mA– Idle Mode: 0.35mA\n– Power-down Mode: < 1µA8-bit  \nMicrocontroller with 32KBytes In-SystemProgrammable \nFlash\nATmega32\nATmega32L\nSummary\n2503QS–AVR–02/11\n2\n2503QS–AVR–02/11ATmega32(L)\nPin \nConfigurations\nFigure 1.  Pinout ATmega32\n(XCK/T0)  PB0\n(T1)  PB1\n(INT2/AIN0)  PB2\n(OC0/AIN1)  PB3\n(SS)  PB4\n(MOSI)  PB5(MISO)  PB6\n(SCK)  PB7\nRESET\nVCC\nGND\nXTAL2XTAL1\n(RXD)  PD0\n(TXD)  PD1\n(INT0)  PD2(INT1)  PD3\n(OC1B)  PD4(OC1A)  PD5\n(ICP1)  PD6PA0  (ADC0)PA1  (ADC1)PA2  (ADC2)PA3  (ADC3)PA4  (ADC4)PA5  (ADC5)PA6  (ADC6)PA7  (ADC7)AREFGNDAVCCPC7  (TOSC2)PC6  (TOSC1)PC5  (TDI)PC4  (TDO)PC3  (TMS)PC2  (TCK)PC1  (SDA)PC0  (SCL)PD7  (OC2)\nPA4  (ADC4)PA5  (ADC5)PA6  (ADC6)PA7  (ADC7)AREFGNDAVCCPC7  (TOSC2)PC6  (TOSC1)PC5  (TDI)PC4  (TDO)(MOSI)  PB5\n(MISO)  PB6\n(SCK)  PB7\nRESET\nVCC\nGND\nXTAL2XTAL1\n(RXD)  PD0\n(TXD)  PD1\n(INT0)  PD2\n(INT1)  PD3\n(OC1B)  PD4(OC1A)  PD5\n(ICP1)  PD6\n(OC2)  PD7\nVCC\nGND\n(SCL)  PC0\n(SDA)  PC1\n(TCK)  PC2\n(TMS)  PC3PB4  (SS)\nPB3  (AIN1/OC0)PB2  (AIN0/INT2)PB1  (T1)PB0  (XCK/T0)GNDVCCPA0  (ADC0)PA1  (ADC1)PA2  (ADC2)PA3  (ADC3)PDIP\nTQFP/MLF\nNote: \nBottom pad shouldbe soldered to ground.\n3\n2503QS–AVR–02/11ATmega32(L)\nOverview The Atmel® AVR® ATmega32 is a low-power CMOS 8-bit microcontroller based on the AVR\nenhanced RISC architecture. By executing powerful instructions in a single clock cycle, theATmega32 achieves thro ughputs approaching 1 MIPS per MH z allowing the system designer to\noptimize power consumption versus processing speed.\nBlock Diagram Figure 2.  Block Diagram\nINTERNAL\nOSCILLATOROSCILLATOR\nWATCHDOG\nTIMER\nMCU CTRL.\n& TIMINGOSCILLATORTIMERS/\nCOUNTERS\nINTERRUPT\nUNITSTACK\nPOINTER\nEEPROMSRAM\nSTATUS\nREGISTER\nUSARTPROGRAM\nCOUNTER\nPROGRAM\nFLASH\nINSTRUCTION\nREGISTER\nINSTRUCTION\nDECODER\nPROGRAMMING\nLOGICSPIADC\nINTERFACE\nCOMP .\nINTERFACEPORTA DRIVERS/BUFFERS\nPORTA DIGITAL INTERFACE\nGENERAL\nPURPOSE\nREGISTERS\nX\nY\nZ\nALU\n+\n-PORTC DRIVERS/BUFFERS\nPORTC DIGITAL INTERFACE\nPORTB DIGITAL INTERFACE\nPORTB DRIVERS/BUFFERSPORTD DIGITAL INTERFACE\nPORTD DRIVERS/BUFFERSXTAL1\nXTAL2\nRESET\nCONTROL\nLINESVCC\nGND\nMUX &\nADC\nAREFPA0 - PA7 PC0 - PC7\nPD0 - PD7 PB0 - PB7AVR CPUTWIAVCC\nINTERNAL\nCALIBRATED\nOSCILLATOR\n4\n2503QS–AVR–02/11ATmega32(L)\nThe Atmel® AVR® core combines a rich instruction set with 32 general purpose working regis-\nters. All the 32 registers are directly connected to  the Arithmetic Logic Unit (ALU), allowing two\nindependent registers to be accessed in one single instruction executed in one clock cycle. Theresulting architecture is more code efficient wh ile achieving throughputs up to ten times faster\nthan conventional CISC microcontrollers.\nThe ATmega32 provides the following features : 32Kbytes of In-System Programmable Flash\nProgram memory with Read-While-Write capabi lities, 1024bytes EEPROM, 2Kbyte SRAM, 32\ngeneral purpose I/O lines, 32 general purpose working registers, a JTAG interface for Boundary-scan, On-chip Debugging support and programming , three flexible Timer/Counters with com-\npare modes, Internal and External Interrupts , a serial programmable USART, a byte oriented\nTwo-wire Serial Interface, an 8-channel, 10-bi t ADC with optional differential input stage with\nprogrammable gain (TQFP package only), a programmable Watchdog Timer with Internal Oscil-lator, an SPI serial port, and six software selectable power saving modes. The Idle mode stopsthe CPU while allowing the USART,  Two-wire interface, A/D Converter, SRAM, Timer/Counters,\nSPI port, and interrupt system to continue functioning. The Power-down mode saves the registercontents but freezes the Oscillator,  disabling all other ch ip functions until the next External Inter-\nrupt or Hardware Reset. In Power-save mode, the Asynchronous Timer continues to run,allowing the user to maintain a timer base while the rest of the device is sleeping. The ADCNoise Reduction mode stops the CPU and all I /O modules except Asynchronous Timer and\nADC, to minimize switching noise during ADC conversions. In Standby mode, the crystal/reso-nator Oscillator is running while the rest of the dev ice is sleeping. This allows very fast start-up\ncombined with low-power consum ption. In Extended Standby mode,  both the main Oscillator\nand the Asynchronous Timer continue to run. \nThe device is manufactured using Atmel’s high density nonvolatile memory technology. The On-\nchip ISP Flash allows the prog ram memory to be repr ogrammed in-system th rough an SPI serial\ninterface, by a conventional nonvolatile memory programmer, or by an On-chip Boot programrunning on the AVR core. The boot program can use any interface to download the application\nprogram in the Application Flash memory. Software in the Boot Flash section will continue to runwhile the Application Flash section is updated, providing true Read-While-Write operation. By\ncombining an 8-bit RISC CPU with In-System Self-Programmable Flash on a monolithic chip,the Atmel ATmega32 is a powerful microcontroller th at provides a highly-flexible and cost-effec-\ntive solution to many embedded control applications.\nThe Atmel AVR ATmega32 is supported with a full suite of program and system development\ntools including: C compilers, macro assemblers, program debugger/simulators, in-circuit emula-tors, and evaluation kits.\nPin Descriptions\nVCC Digital supply voltage.\nGND Ground.\nPort A (PA7..PA0) Port A serves as the analog inputs to the A/D Converter.\nPort A also serves as an 8-bit bi-directional I/O por t, if the A/D Converter is not used. Port pins\ncan provide internal pull-up resistors (selected for each bit). The Port A output buffers have sym-metrical drive characteristics with both high sink and source capability. When pins PA0 to PA7are used as inputs and are externally pulled low, they will source current if the internal pull-upresistors are activated. The Port A pins are tri-stated when a reset condition becomes active,even if the clock is not running.\n5\n2503QS–AVR–02/11ATmega32(L)\nPort B (PB7..PB0) Port B is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The\nPort B output buffers have symmetrical drive characteristics with both high sink and source\ncapability. As inputs, Port B pi ns that are externally  pulled low will source current if the pull-up\nresistors are activated. The Port B pins are tri-stated when a reset condition becomes active,even if the clock is not running.\nPort B also serves the functions of various special features of the ATmega32 as listed on page\n57.\nPort C (PC7..PC0) Port C is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The\nPort C output buffers have symmetrical drive c haracteristics with bot h high sink and source\ncapability. As inputs, Port C pi ns that are externally pulled lo w will source current if the pull-up\nresistors are activated. The Port C pins are tri-stated when a reset condition becomes active,even if the clock is not running. If the JTAG interface is enabled, the pull-up resistors on pinsPC5(TDI), PC3(TMS) and PC 2(TCK) will be activated even if a reset occurs.\nThe TD0 pin is tri-stated unless TAP states that shift out data are entered.Port C also serves the functions of the JTAG interface and other special features of the\nATmega32 as listed on page 60 .\nPort D (PD7..PD0) Port D is an 8-bit bi-directional I/O port with internal pull-up resistors (selected for each bit). The\nPort D output buffers have symmetrical drive c haracteristics with bot h high sink and source\ncapability. As inputs, Port D pi ns that are externally pulled lo w will source current if the pull-up\nresistors are activated. The Port D pins are tri-stated when a reset condition becomes active,even if the clock is not running.\nPort D also serves the functions of various special features of the ATmega32 as listed on page\n62. \nRESET\nReset Input. A low level on this pin for longer than the minimum pulse length will generate a\nreset, even if the clock is not running. The minimum pulse length is given in Table 15 on page\n37. Shorter pulses are not guaranteed to generate a reset.\nXTAL1 Input to the inverting Oscillato r amplifier and input to the in ternal clock operating circuit.\nXTAL2 Output from the invert ing Oscillator amplifier.\nAVCC AVCC is the supply voltage pin for Port A and the A/D Converter. It should be externally con-\nnected to VCC, even if the ADC is not used. If the ADC is used, it should be connected to VCC\nthrough a low-pass filter. \nAREF AREF is the analog reference pin for the A/D Converter.\n6\n2503QS–AVR–02/11ATmega32(L)\nResources A comprehensive set of development tools, app lication notes and datasheets are available for\ndownload on http:// www.atmel.com/avr.\nNote: 1.\nData Retention Reliability Qualification results show that the pr ojected data retention failure rate is much less\nthan 1 PPM over 20 years at 85°C or 100 years at 25°C.\nAbout Code \nExamples This documentation contains simple code examples  that briefly show how to use various parts of\nthe device. These code examples assume that the part specific header file is included beforecompilation. Be aware that not all C Compiler vendors include bit definitions in the header files\nand interrupt handling in C is compiler dependent. Please confirm with the C Compiler documen-tation for more details.\n7\n2503QS–AVR–02/11ATmega32(L)\nRegister Summary\nAddress Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Page\n$3F ($5F) SREG I T H S V N Z C 10\n$3E ($5E) SPH – – – – SP11 SP10 SP9 SP8 12\n$3D ($5D) SPL SP7 SP6 SP5 SP4 SP3 SP2 SP1 SP0 12\n$3C ($5C) OCR0 Timer/Counter0 Output Compare Register 82\n$3B ($5B) GICR INT1 INT0 INT2 – – – IVSEL IVCE 47, 67 \n$3A ($5A) GIFR INTF1 INTF0 INTF2 – – – – –6 8\n$39 ($59) TIMSK OCIE2 TOIE2 TICIE1 OCIE1A OCIE1B TOIE1 OCIE0 TOIE0 82, 112, 130$38 ($58) TIFR OCF2 TOV2 ICF1 OCF1A OCF1B TOV1 OCF0 TOV0 83, 112, 130\n$37 ($57) SPMCR SPMIE RWWSB\n– RWWSRE BLBSET PGWRT PGERS SPMEN 248\n$36 ($56) TWCR TWINT TWEA TWSTA TWSTO TWWC TWEN – TWIE 177\n$35 ($55) MCUCR SE SM2 SM1 SM0 ISC11 ISC10 ISC01 ISC00 32, 66\n$34 ($54) MCUCSR JTD ISC2 – JTRF WDRF BORF EXTRF PORF 40, 67, 228\n$33 ($53) TCCR0 FOC0 WGM00 COM01 COM00 WGM01 CS02 CS01 CS00 80$32 ($52) TCNT0 Timer/Counter0 (8 Bits) 82\n$31\n(1) ($51)(1)OSCCAL Oscillator Calibration Register 30\nOCDR On-Chip Debug Register 224\n$30 ($50) SFIOR ADTS2 ADTS1 ADTS0 – ACME PUD PSR2 PSR10 56,85,131,198,218\n$2F ($4F) TCCR1A COM1A1 COM1A0 COM1B1 COM1B0 FOC1A FOC1B WGM11 WGM10 107\n$2E ($4E) TCCR1B ICNC1 ICES1 – WGM13 WGM12 CS12 CS11 CS10 110\n$2D ($4D) TCNT1H Timer/Counter1 – Counter Register High Byte 111\n$2C ($4C) TCNT1L Timer/Counter1 – Counter Register Low Byte 111\n$2B ($4B) OCR1AH Timer/Counter1 – Output Compare Register A High Byte 111\n$2A ($4A) OCR1AL Timer/Counter1 – Output Compare Register A Low Byte 111\n$29 ($49) OCR1BH Timer/Counter1 – Output Compare Register B High Byte 111\n$28 ($48) OCR1BL Timer/Counter1 – Output Compare Register B Low Byte 111\n$27 ($47) ICR1H Timer/Counter1 – Input Capture Register High Byte 111\n$26 ($46) ICR1L Timer/Counter1 – Input Capture Register Low Byte 111\n$25 ($45) TCCR2 FOC2 WGM20 COM21 COM20 WGM21 CS22 CS21 CS20 125\n$24 ($44) TCNT2 Timer/Counter2 (8 Bits) 127\n$23 ($43) OCR2 Timer/Counter2 Output Compare Register 127\n$22 ($42) ASSR – – – – AS2 TCN2UB OCR2UB TCR2UB 128\n$21 ($41) WDTCR – – – WDTOE WDE WDP2 WDP1 WDP0 42\n$20(2) ($40)(2)UBRRH URSEL – – – UBRR[11:8] 164\nUCSRC URSEL UMSEL UPM1 UPM0 USBS UCSZ1 UCSZ0 UCPOL 162\n$1F ($3F) EEARH – – – – – – EEAR9 EEAR8 19\n$1E ($3E) EEARL EEPROM Address Register Low Byte 19\n$1D ($3D) EEDR EEPROM Data Register 19\n$1C ($3C) EECR – – – – EERIE EEMWE EEWE EERE 19\n$1B ($3B) PORTA PORTA7 PORTA6 PORTA5 PORTA4 PORTA3 PORTA2 PORTA1 PORTA0 64$1A ($3A) DDRA DDA7 DDA6 DDA5 DDA4 DDA3 DDA2 DDA1 DDA0 64\n$19 ($39) PINA PINA7 PINA6 PINA5 PINA4 PINA3 PINA2 PINA1 PINA0 64\n$18 ($38) PORTB PORTB7 PORTB6 PORTB5 PORTB4 PORTB3 PORTB2 PORTB1 PORTB0 64$17 ($37) DDRB DDB7 DDB6 DDB5 DDB4 DDB3 DDB2 DDB1 DDB0 64\n$16 ($36) PINB PINB7 PINB6 PINB5 PINB4 PINB3 PINB2 PINB1 PINB0 65\n$15 ($35) PORTC PORTC7 PORTC6 PORTC5 PORTC4 PORTC3 PORTC2 PORTC1 PORTC0 65$14 ($34) DDRC DDC7 DDC6 DDC5 DDC4 DDC3 DDC2 DDC1 DDC0 65\n$13 ($33) PINC PINC7 PINC6 PINC5 PINC4 PINC3 PINC2 PINC1 PINC0 65\n$12 ($32) PORTD PORTD7 PORTD6 PORTD5 PORTD4 PORTD3 PORTD2 PORTD1 PORTD0 65$11 ($31) DDRD DDD7 DDD6 DDD5 DDD4 DDD3 DDD2 DDD1 DDD0 65\n$10 ($30) PIND PIND7 PIND6 PIND5 PIND4 PIND3 PIND2 PIND1 PIND0 65\n$0F ($2F) SPDR  SPI Data Register 138\n$0E ($2E) SPSR SPIF WCOL\n– – – – – SPI2X 138\n$0D ($2D) SPCR SPIE SPE DORD MSTR CPOL CPHA SPR1 SPR0 136\n$0C ($2C) UDR  USART I/O Data Register 159\n$0B ($2B) UCSRA RXC TXC UDRE FE DOR PE U2X MPCM 160\n$0A ($2A) UCSRB RXCIE TXCIE UDRIE RXEN TXEN UCSZ2 RXB8 TXB8 161\n$09 ($29) UBRRL  USART Baud Rate Register Low Byte 164\n$08 ($28) ACSR ACD ACBG ACO ACI ACIE ACIC ACIS1 ACIS0 199\n$07 ($27) ADMUX REFS1 REFS0 ADLAR MUX4 MUX3 MUX2 MUX1 MUX0 214\n$06 ($26) ADCSRA ADEN ADSC ADATE ADIF ADIE ADPS2 ADPS1 ADPS0 216$05 ($25) ADCH ADC Data Register High Byte 217\n$04 ($24) ADCL ADC Data Register Low Byte 217\n$03 ($23) TWDR Two-wire Serial Interface Data Register 179\n$02 ($22) TWAR TWA6 TWA5 TWA4 TWA3 TWA2 TWA1 TWA0 TWGCE 179\n8\n2503QS–AVR–02/11ATmega32(L)\nNotes: 1. When the OCDEN Fuse is unprogrammed, the OSCCAL Regist er is always accessed on this address. Refer to the debug-\nger specific documentation for details  on how to use the OCDR Register.\n2. Refer to the USART description for details on how to access UBRRH and UCSRC.3. For compatibility with future devices, reserved bits should be written to zero if accessed. Reserved I/O memory addresses\nshould never be written.\n4. Some of the Status Flags are cleared by writing a logical one to them. Note that the CBI and  SBI instructions will operate on\nall bits in the I/O Register, writing a one back into any flag read as set, thus clearing the flag. The CBI and SBI instruction s\nwork with registers $00 to $1F only.$01 ($21) TWSR TWS7 TWS6 TWS5 TWS4 TWS3 – TWPS1 TWPS0 178\n$00 ($20) TWBR Two-wire Serial Interface Bit Rate Register 177Address Name Bit 7 Bit 6 Bit 5 Bit 4 Bit 3 Bit 2 Bit 1 Bit 0 Page\n9\n2503QS–AVR–02/11ATmega32(L)\nInstruction Set Summary\nMnemonics Operands Description Operation Flags #Clocks\nARITHMETIC AND LOGIC INSTRUCTIONS\nADD Rd, Rr Add two Registers Rd ← Rd + Rr Z,C,N,V,H 1\nADC Rd, Rr Add with Carry two Registers Rd ← Rd + Rr + C Z,C,N,V,H 1\nADIW Rdl,K Add Immediate to Word Rdh:Rdl ← Rdh:Rdl + K Z,C,N,V,S 2\nSUB Rd, Rr Subtract two Registers Rd ← Rd - Rr Z,C,N,V,H 1\nSUBI Rd, K Subtract Constant from Register Rd ← Rd - K Z,C,N,V,H 1\nSBC Rd, Rr Subtract with Carry two Registers Rd ← Rd - Rr - C Z,C,N,V,H 1\nSBCI Rd, K Subtract with Carry Constant from Reg. Rd ← Rd - K - C Z,C,N,V,H 1\nSBIW Rdl,K Subtract Immediate from Word Rdh:Rdl ← Rdh:Rdl - K Z,C,N,V,S 2\nAND Rd, Rr Logical AND Registers Rd ← Rd • Rr Z,N,V 1\nANDI Rd, K Logical AND Register and Constant Rd ← Rd • K Z,N,V 1\nOR Rd, Rr Logical OR Registers Rd ← Rd v Rr Z,N,V 1\nORI Rd, K Logical OR Register and Constant Rd ← Rd v K Z,N,V 1\nEOR Rd, Rr Exclusive OR Registers Rd ← Rd ⊕ Rr Z,N,V 1\nCOM Rd One’s Complement Rd ← $FF − Rd Z,C,N,V 1\nNEG Rd Two’s Complement Rd ← $00 − Rd Z,C,N,V,H 1\nSBR Rd,K Set Bit(s) in Register Rd ← Rd v K Z,N,V 1\nCBR Rd,K Clear Bit(s) in Register Rd ← Rd • ($FF - K) Z,N,V 1\nINC Rd Increment Rd ← Rd + 1 Z,N,V 1\nDEC Rd Decrement Rd ← Rd − 1 Z,N,V 1\nTST Rd Test for Zero or Minus Rd ← Rd • Rd Z,N,V 1\nCLR Rd Clear Register Rd  ← Rd ⊕ Rd Z,N,V 1\nSER Rd Set Register Rd ← $FF None 1\nMUL Rd, Rr Multiply Unsigned R1:R0 ← Rd x Rr Z,C 2\nMULS Rd, Rr Multiply Signed R1:R0 ← Rd x Rr Z,C 2\nMULSU Rd, Rr Multiply Signed with Unsigned R1:R0 ← Rd x Rr Z,C 2\nFMUL Rd, Rr Fractional Multiply Unsigned R1:R0 ← (Rd x Rr) << 1 Z,C 2\nFMULS Rd, Rr Fractional Multiply Signed R1:R0 ← (Rd x Rr) << 1 Z,C 2\nFMULSU Rd, Rr Fractional Multiply Signed with Unsigned R1:R0 ← (Rd x Rr) << 1 Z,C 2\nBRANCH INSTRUCTIONSRJMP k Relative Jump PC  ← PC + k  + 1 None 2\nIJMP Indirect Jump to (Z) PC ← Z None 2\nJMP k Direct Jump PC  ← kN o n e 3\nRCALL k Relative Subroutine Call PC ← PC + k + 1 None 3\nICALL Indirect Call to (Z) PC ← ZN o n e 3\nCALL k Direct Subroutine Call PC ← kN o n e 4\nRET Subroutine Return PC ← Stack None 4\nRETI Interrupt Return PC ← Stack I 4\nCPSE Rd,Rr Compare, Skip if Equal if (Rd = Rr) PC  ← PC + 2 or 3 None 1 / 2 / 3\nCP Rd,Rr Compare Rd − Rr Z, N,V,C,H 1 \nCPC Rd,Rr Compare with Carry Rd − Rr − C Z, N,V,C,H 1\nCPI Rd,K Compare Register with Immediate Rd − K Z, N,V,C,H 1\nSBRC Rr, b Skip if Bit in Register Cleared if (Rr(b)=0) PC ← PC + 2 or 3 None 1 / 2 / 3\nSBRS Rr, b Skip if Bit in Register is Set if (Rr(b)=1) PC ← PC + 2 or 3 None 1 / 2 / 3\nSBIC P, b Skip if Bit in I/O Register Cleared if (P(b)=0) PC ← PC + 2 or 3 None 1 / 2 / 3\nSBIS P, b Skip if Bit in I/O Register is Set if (P(b)=1) PC ← PC + 2 or 3 None 1 / 2 / 3\nBRBS s, k Branch if Status Flag Set if (SREG(s) = 1) then PC ←PC+k + 1 None 1 / 2\nBRBC s, k Branch if Status Flag Cleared if (SREG(s) = 0) then PC ←PC+k + 1 None 1 / 2\nBREQ  k Branch if Equal if (Z = 1) then PC ← PC + k + 1 None 1 / 2\nBRNE  k Branch if Not Equal if (Z = 0) then PC ← PC + k + 1 None 1 / 2\nBRCS  k Branch if Carry Set if (C = 1) then PC ← PC + k + 1 None 1 / 2\nBRCC  k Branch if Carry Cleared if (C = 0) then PC ← PC + k + 1 None 1 / 2\nBRSH  k Branch if Same or Higher if (C = 0) then PC ← PC + k + 1 None 1 / 2\nBRLO  k Branch if Lower if (C = 1) then PC ← PC + k + 1 None 1 / 2\nBRMI  k Branch if Minus if (N = 1) then PC ← PC + k + 1 None 1 / 2\nBRPL  k Branch if Plus if (N = 0) then PC ← PC + k + 1 None 1 / 2\nBRGE  k Branch if Greater or Equal, Signed if (N ⊕ V= 0) then PC ← PC + k + 1 None 1 / 2\nBRLT  k Branch if Less Than Zero, Signed if (N ⊕ V= 1) then PC ← PC + k + 1 None 1 / 2\nBRHS  k Branch if Half Carry Flag Set if (H = 1) then PC ← PC + k + 1 None 1 / 2\nBRHC  k Branch if Half Carry Flag Cleared if (H = 0) then PC ← PC + k + 1 None 1 / 2\nBRTS  k Branch if T Flag Set if (T = 1) then PC ← PC + k  + 1 None 1 / 2\nBRTC  k Branch if T Flag Cleared if (T = 0) then PC ← PC + k + 1 None 1 / 2\nBRVS  k Branch if Overflow Flag is Set if (V = 1) then PC ← PC + k + 1 None 1 / 2\nBRVC  k Branch if Overflow Flag is Cleared if (V = 0) then PC ← PC + k + 1 None 1 / 2\n10\n2503QS–AVR–02/11ATmega32(L)\nBRIE  k Branch if Interrupt Enabled if ( I = 1) then PC ← PC + k + 1 None 1 / 2\nBRID  k Branch if Interrupt Disabled if ( I = 0) then PC ← PC + k + 1 None 1 / 2\nDATA TRANSFER INSTRUCTIONS\nMOV Rd, Rr Move Between Registers Rd ← Rr None 1\nMOVW Rd, Rr Copy Register Word Rd+1:Rd ← Rr+1:Rr None 1\nLDI Rd, K Load Immediate Rd  ← KN o n e 1\nLD Rd, X Load Indirect Rd ← (X) None 2\nLD Rd, X+ Load Indirect and Post-Inc. Rd ← (X), X ← X + 1 None 2\nLD Rd, - X Load Indirect and Pre-Dec. X ← X - 1, Rd ← (X) None 2\nLD Rd, Y Load Indirect Rd ← (Y) None 2\nLD Rd, Y+ Load Indirect and Post-Inc. Rd ← (Y), Y ← Y + 1 None 2\nLD Rd, - Y Load Indirect and Pre-Dec. Y ← Y - 1, Rd ← (Y) None 2\nLDD Rd,Y+q Load Indirect with Displacement Rd ← (Y + q) None 2\nLD Rd, Z Load Indirect Rd ← (Z) None 2\nLD Rd, Z+ Load Indirect and Post-Inc. Rd ← (Z), Z ← Z+1 None 2\nLD Rd, -Z Load Indirect and Pre-Dec. Z ← Z - 1, Rd ← (Z) None 2\nLDD Rd, Z+q Load Indirect with Displacement Rd ← (Z + q) None 2\nLDS Rd, k Load Direct from SRAM Rd  ← (k) None 2\nST X, Rr Store Indirect (X)  ← Rr None 2\nST X+, Rr Store Indirect and Post-Inc. (X)  ← Rr, X ← X + 1 None 2\nST - X, Rr Store Indirect and Pre-Dec. X ← X - 1, (X) ← Rr None 2\nST Y, Rr Store Indirect (Y) ← Rr None 2\nST Y+, Rr Store Indirect and Post-Inc. (Y) ← Rr, Y ← Y + 1 None 2\nST - Y, Rr Store Indirect and Pre-Dec. Y ← Y - 1, (Y) ← Rr None 2\nSTD Y+q,Rr Store Indirect with Displacement (Y + q) ← Rr None 2\nST Z, Rr Store Indirect (Z) ← Rr None 2\nST Z+, Rr Store Indirect and Post-Inc. (Z) ← Rr, Z ← Z + 1 None 2\nST -Z, Rr Store Indirect and Pre-Dec. Z ← Z - 1, (Z) ← Rr None 2\nSTD Z+q,Rr Store Indirect with Displacement (Z + q) ← Rr None 2\nSTS k, Rr Store Direct to SRAM (k) ← Rr None 2\nLPM Load Program Memory R0 ← (Z) None 3\nLPM Rd, Z Load Program Memory Rd ← (Z) None 3\nLPM Rd, Z+ Load Program Memory and Post-Inc Rd ← (Z), Z ← Z+1 None 3\nSPM Store Program Memory (Z) ← R1:R0 None -\nIN Rd, P In Port Rd ← PN o n e 1\nOUT P, Rr Out Port P ← Rr None 1\nPUSH Rr Push Register on Stack Stack ← Rr None 2\nPOP Rd Pop Register from Stack Rd ← Stack None 2\nBIT AND BIT-TEST INSTRUCTIONS\nSBI P,b Set Bit in I/O Register I/O(P,b) ← 1N o n e 2\nCBI P,b Clear Bit in I/O Register I/O(P,b) ← 0N o n e 2\nLSL Rd Logical Shift Left Rd(n+1) ← Rd(n), Rd(0) ← 0 Z,C,N,V 1\nLSR Rd Logical Shift Right Rd(n) ← Rd(n+1), Rd(7) ← 0 Z,C,N,V 1\nROL Rd Rotate Left Through Carry Rd(0) ←C,Rd(n+1) ← Rd(n),C ←Rd(7) Z,C,N,V 1\nROR Rd Rotate Right Through Carry Rd(7) ←C,Rd(n) ← Rd(n+1),C ←Rd(0) Z,C,N,V 1\nASR Rd Arithmetic Shift Right Rd(n) ← Rd(n+1), n=0..6 Z,C,N,V 1\nSWAP Rd Swap Nibbles Rd(3..0) ←Rd(7..4),Rd(7..4) ←Rd(3..0) None 1\nBSET s Flag Set SREG(s) ← 1 SREG(s) 1\nBCLR s Flag Clear SREG(s) ← 0 SREG(s) 1\nBST Rr, b Bit Store from Register to T T ← Rr(b) T 1\nBLD Rd, b Bit load from T to Register Rd(b) ← TN o n e 1\nSEC Set Carry C ← 1C 1\nCLC Clear Carry C ← 0 C 1\nSEN Set Negative Flag N ← 1N 1\nCLN Clear Negative Flag N ← 0 N 1\nSEZ Set Zero Flag Z ← 1Z 1\nCLZ Clear Zero Flag Z ← 0 Z 1\nSEI Global Interrupt Enable I ← 1I 1\nCLI Global Interrupt Disable I  ← 0 I 1\nSES Set Signed Test Flag S ← 1S 1\nCLS Clear Signed Test Flag S ← 0 S 1\nSEV Set Twos Complement Overflow. V ← 1V 1\nCLV Clear Twos Complement Overflow V ← 0 V 1\nSET Set T in SREG T ← 1T 1\nCLT Clear T in SREG T ← 0 T 1\nSEH Set Half Carry Flag in SREG H ← 1H 1Mnemonics Operands Description Operation Flags #Clocks\n11\n2503QS–AVR–02/11ATmega32(L)\nCLH Clear Half Carry Flag in SREG H ← 0H 1\nMCU CONTROL INSTRUCTIONSNOP No Operation None 1\nSLEEP Sleep (see specific descr. for Sleep function) None 1\nWDR Watchdog Reset (see specific  descr. for WDR/timer) None 1\nBREAK Break For On-Chip Debug Only None N/AMnemonics Operands Description Operation Flags #Clocks\n12\n2503QS–AVR–02/11ATmega32(L)\nOrdering Information\nNotes: 1. This device can also be supplied in wafer form. Please contact your local Atmel sales office for detailed ordering info rmation\nand minimum quantities.\n2. Pb-free packaging complies to the European Directive for Re striction of Hazardous Substances (RoHS directive). Also\nHalide free and fully Green.\n3. Tape & ReelSpeed (MHz) Power Supply Ordering Code(2)Package(1)Operational Range\n8 2.7V - 5.5VATmega32L-8AU\nATmega32L-8AUR(3)\nATmega32L-8PU\nATmega32L-8MU\nATmega32L-8MUR(3)44A44A40P6\n44M1\n44M1 Industrial\n(-40\noC to 85oC)\n16 4.5V - 5.5VATmega32-16AU\nATmega32-16AUR(3)\nATmega32-16PU\nATmega32-16MU\nATmega32-16MUR(3)44A44A\n40P644M1\n44M1\nPackage Type\n44A 44-lead, 10 × 10 × 1.0mm, Thin Profile Plastic Quad Flat Package (TQFP)\n40P6 40-pin, 0.600” Wide, Plastic Dual Inline Package (PDIP)\n44M1 44-pad, 7 × 7 × 1.0mm, Quad Flat No-L ead/Micro Lead Frame Package (QFN/MLF)\n13\n2503QS–AVR–02/11ATmega32(L)\nPackaging Information\n44A\n  2325 Orchard Parkway\n  San Jose, CA  95131TITLE DRAWING NO.\nRREV.  \n44A,  44-lead, 10 x 10 mm Body Size, 1.0 mm Body Thickness,\n0.8 mm Lead Pitch, Thin Profile Plastic Quad Flat Package (TQFP) C 44A2010-10-20PIN 1 IDENTIFIER\n0°~7°PIN 1 \nLC\nA1 A2 AD1\nDe\nE1 EB\nCOMMON DIMEN SIONS\n(Unit of Measure = mm)\nSYMBOL MIN NOM MAX NOTE\nNotes:\n 1. This package conforms to JEDEC reference MS-026, Variation ACB.  2. Dimensions D1 and E1 do not include mold protrusion.  Allowable   protrusion is 0.25 mm per side. Dimensions D1 and E1 are maximum   plastic body size dimensions including mold mismatch. 3. Lead coplanarity is 0.10 mm maximum. A – – 1.20\n A1 0.05 – 0.15 A2  0.95 1.00 1.05            D 11.75 12.00 12.25 D1 9.90 10.00 10.10 Note 2 E 11.75 12.00 12.25 E1 9.90 10.00 10.10 Note 2 B           0.30 – 0.45 C 0.09 – 0.20 L 0.45 –  0.75 e  0.80 TYP\n14\n2503QS–AVR–02/11ATmega32(L)\n40P6\n  2325 Orchard Parkway\n  San Jose, CA  95131TITLE DRAWING NO.\nRREV.  \n40P6 , 40-lead (0.600"/15.24 mm Wide) Plastic Dual \nInline Package (PDIP)  B 40P609/28/01PIN\n1\nE1\nA1\nB\nREFEB1\nCLSEATING PLANEA\n0º ~ 15º  D\ne\neBCOMMON DIMENSIONS\n(Unit of Measure = mm)\nSYMBOL MIN NOM MAX NOTE\nA – – 4.826\nA1 0.381 – –D 52.070 – 52.578 Note 2E 15.240 – 15.875E1 13.462 – 13.970 Note 2B 0.356 – 0.559B1 1.041 – 1.651L 3.048 – 3.556C 0.203 –      0.381     eB 15.494 – 17.526e 2.540 TYPNotes: 1. This package conforms to JEDEC reference MS-011, Variation AC. \n2. Dimensions D and E1 do not include mold Flash or Protrusion.\nMold Flash or Protrusion shall not exceed 0.25 mm (0.010").\n15\n2503QS–AVR–02/11ATmega32(L)\n44M1\nTITLE DRAWING NO. GPC REV.\n   Packa ge Drawin g Contact:\n packagedrawings@atmel.com 44M1 ZWS H44M1, 44-pad, 7 x 7 x 1.0 mm Body,  Lead \nPitch 0.50 mm, 5.20 mm Exposed Pad, Thermally Enhanced Plastic Very Thin Quad Flat No Lead Package (VQFN)  9/26/08COMMON DIMEN SIONS\n(Unit of Measure = mm)\nSYMBOL MIN NOM MAX NOTE\n A 0.80 0.90 1.00\n A1 – 0.02 0.05\n A3  0.20 REF\n b 0.18 0.23 0.30\n D  \n D2 5.00 5.20 5.40\n6.90 7.00 7.106.90 7.00 7.10\n E\n E2 5.00 5.20 5.40\n e  0.50 BSC\n L 0.59 0.64 0.69\nK 0.20 0.26 0.41Note:  JEDEC Standard MO-220, Fig. 1 (SAW Singulation) VKKD-3. TOP VIEW\nSIDE VIEW\nBOTTOM VIEWD\nEMarked Pin# 1 ID\nE2D2\nb ePin #1 CornerLA1\nA3\nASEATING PLANE\nPin #1 \nTriangle\nPin #1 \nChamfer(C 0.30)Option A\nOption B\nPin #1 \nNotch(0.20 R)Option CK\nK1\n2\n3\n16\n2503QS–AVR–02/11ATmega32(L)\nErrata\nATmega32, rev. A \nto F\x81First Analog Comparator conversion may be delayed\n\x81Interrupts may be lost when writing the timer registers in the asynchronous timer\n\x81IDCODE masks data from TDI input\n\x81Reading EEPROM by using ST or STS to set EER E bit triggers unexpect ed interrup t request.\n1. First Analog Comparator conversion may be delayed\nIf the device is powered by a slow rising VCC, the first Analog Comparator conversion will\ntake longer than expected on some devices.\nProblem Fix/WorkaroundWhen the device has been powered or reset, disable then enable theAnalog Comparator\nbefore the first conversion.\n2. Interrupts may be lost when writing the timer registers in the asynchronous timer\nThe interrupt will be lo st if a timer register that is synchr onous timer clock is written when the\nasynchronous Timer/Counter register (TCNTx) is 0x00.\nProblem Fix/WorkaroundAlways check that the asynchronous Timer/Counter register neither have the value 0xFF nor\n0x00 before writing to the asynchronous Timer Control Register (TCCRx), asynchronous-Timer Counter Register (TCNTx), or asynchronous Output Compare Register (OCRx).\n3. IDCODE masks data from TDI input\nThe JTAG instruction IDCODE is not working correctly. Data to succeeding devices are\nreplaced by all-ones during Update-DR.\nProblem Fix / Workaround\n– If ATmega32 is the only device in the scan chain, the problem is not visible.– Select the Device ID Register of the ATmega32 by issuing the IDCODE instruction or\nby entering the Test-Logic-Reset state of the TAP controller to read out the contentsof its Device ID Register and possibly data from succeeding devices of the scan\nchain. Issue the BYPASS instruction to th e ATmega32 while reading the Device ID\nRegisters of preceding device s of the boundary scan chain.\n– If the Device IDs of all devices in the boundary scan chain must be captured\nsimultaneously, the ATmega32 must be the fist device in the chain.\n4. Reading EEPROM by using ST or STS to set EERE bit triggers unexpected interrupt\nrequest.\nReading EEPROM by using the ST  or STS command to set th e EERE bit in the EECR reg-\nister triggers an unexpecte d EEPROM interrupt request.\nProblem Fix / WorkaroundAlways use OUT or SBI  to set EERE in EECR.\n17\n2503QS–AVR–02/11ATmega32(L)\nDatasheet \nRevision \nHistoryPlease note that the referring page numbers in th is section are referred to this document. The\nreferring revision in this  section are referring to  the document revision.\nChanges from Rev. \n2503P-07/09 to \nRev. 2503Q-02/111. Updated “Packaging Information” on page 333 , by replacing the package 44A by a\ncorrect one.\n2. Updated the datasheet according to the Atmel new Brand Style Guide.3. Updated “Ordering Information” on page 332  to include Tape & Reel devices.\nChanges from Rev. \n2503O-07/09 to \nRev. 2503P-07/101. Inserted Note in “Performing Page Erase by SPM” on page 251 .\n2. Note 6 and Note 7 in Table 119 on page 290  have been removed.\n3. Updated “Performing Page Erase by SPM” on page 251 .\nChanges from Rev. \n2503N-06/08 to \nRev.\n2503O-07/091. Updated “Errata” on page 336  .\n2. Updated the TOC with new template (version 5.10)\nChanges from Rev. \n2503M-05/08 to Rev.\n2503N-06/081. Added the note “Not recommended for new designs” on “Features” on page 1 .\nChanges from Rev. \n2503L-05/08 to \nRev.\n2503M-05/081. Updated “Ordering Information” on page 12 :\n- Commercial ordering codes removed.\n- Non Pb-free package option removed.\n2. Removed note from Feature list in “Analog to Digital Converter” on page 201 .\n3. Removed note from Table 84 on page 215 .\nChanges from Rev. \n2503K-08/07 to \nRev.\n2503L-05/081. Updated “Fast PWM Mode” on page 75  in “8-bit Timer/Counter0 with PWM” on page\n69:\n– Removed the last section describing how to achieve a frequency with 50% duty \ncycle waveform output in fast PWM mode.\nChanges from Rev. \n2503J-10/06 to \nRev.\n2503K-08/071. Renamed “Input Capture Trigger Source” to “Input Capture Pin Source” on page 94 .\n2. Updated “Features” on page 1 .\n3. Added “Data Retention” on page 6 .\n4. Updated “Errata” on page 336 .\n18\n2503QS–AVR–02/11ATmega32(L)\n5. Updated “Slave Mode” on page 136 .\nChanges from Rev. \n2503I-04/06 to Rev.\n2503J-10/061. Updated “Fast PWM Mode” on page 99 .\n2. Updated Table 38 on page 80 , Table 40 on page 81 , Table 45 on page 108 , Table 47 on\npage 109 , Table 50 on page 125  and Table 52 on page 126 .\n3. Updated typo in table note 6 in “DC Characteristics” on page 287 .\n4. Updated “Errata” on page 336 .\nChanges from Rev. \n2503H-03/05 to \nRev. 2503I-04/061. Updated Figure 1 on page 2 .\n2. Added “Resources” on page 6 .\n3. Added note to “Timer/Counter Oscillator” on page 31 .\n4. Updated “Serial Peripheral Interface – SPI” on page 132 .\n5. Updated note in “Bit Rate Generator Unit” on page 175 .\n6. Updated Table 86 on page 218 .\n7. Updated “DC Characteristics” on page 287 .\nChanges from Rev. \n2503G-11/04 to Rev. 2503H-03/051. MLF-package alternative changed to “Quad Flat No-Lead/Micro Lead Frame Package\nQFN/MLF”.\n2. Updated “Electrical Characteristics” on page 287\n3. Updated “Ordering Information” on page 332 .\nChanges from Rev. \n2503F-12/03 to \nRev. 2503G-11/041. “Channel” renamed “Compare unit” in Timer/Counter sections, ICP renamed ICP1.\n2. Updated Table 7 on page 29 , Table 15 on page 37 , Table 81 on page 206 , Table 114 on\npage 272 , Table 115 on page 273 , and Table 118 on page 289 .\n3. Updated Figure 1 on page 2 , Figure 46 on page 100 .\n4. Updated “Version” on page 226 .\n5. Updated “Calibration Byte” on page 258 .\n6. Added section “Page Size” on page 258 .\n7. Updated “ATmega32 Typical Characteristics” on page 296 .\n8. Updated “Ordering Information” on page 332 .\nChanges from Rev. \n2503E-09/03 to \nRev. 2503F-12/031. Updated “Calibrated Internal RC Oscillator” on page 29 .\n19\n2503QS–AVR–02/11ATmega32(L)\nChanges from Rev. \n2503D-02/03 to \nRev. 2503E-09/031. Updated and changed “On-chip Debug System” to “JTAG Interface and On-chip\nDebug System” on page 35 .\n2. Updated Table 15 on page 37 .\n3. Updated “Test Access Port – TAP” on page 219  regarding the JTAGEN fuse.\n4. Updated description for Bit 7 – JTD: JTAG Interface Disable on page 228 .\n5. Added a note regarding JTAGEN fuse to Table 104 on page 257 .\n6. Updated Absolute Maximum Ratings* , DC Characteristics and ADC Characteristics in\n“Electrical Characteristics” on page 287 .\n7. Added a proposal for solving problems regarding the JTAG instruction IDCODE in\n“Errata” on page 336 .\nChanges from Rev. \n2503C-10/02 to Rev. 2503D-02/031. Added EEAR9 in EEARH in “Register Summary” on page 327 .\n2. Added Chip Erase as a first step in “Programming the Flash” on page 284  and “Pro-\ngramming the EEPROM” on page 285 .\n3. Removed reference to “Multi-purpose Oscillator” application note and “32 kHz Crys-\ntal Oscillator” application note, which do not exist.\n4. Added information about PWM symmetry for Timer0 and Timer2.5. Added note in “Filling the Temporary Buffer (Page Loading)” on page 251  about writ-\ning to the EEPROM during an SPM Page Load.\n6. Added “Power Consumption” data in “Features” on page 1 .\n7. Added section “EEPROM Write During Power-down Sleep Mode” on page 22 .\n8. Added note about Differential Mode with Auto Triggering in “Prescaling and Conver-\nsion Timing” on page 204 .\n9. Updated Table 89 on page 232 .\n10.Added updated “Packaging Information” on page 333 .\nChanges from Rev. \n2503B-10/02 to Rev. 2503C-10/021. Updated the “DC Characteristics” on page 287 .\nChanges from Rev. \n2503A-03/02 to \nRev. 2503B-10/021. Canged the endurance on the Flash to 10,000 Write/Erase Cycles.\n2. Bit nr.4 – ADHSM – in SFIOR Register removed.3. Added the section “Default Clock Source” on page 25 .\n4. When using External Clock there are some limitations regards to change of fre-\nquency. This is described in “External Clock” on page 31  and Table 117 on page 289 .\n20\n2503QS–AVR–02/11ATmega32(L)\n5. Added a sub section regarding OCD-system and power consumption in the section\n“Minimizing Power Consumption” on page 34 .\n6. Corrected typo (WGM-bit setting) for:\n–“Fast PWM Mode” on page 75  (Timer/Counter0)\n–“Phase Correct PWM Mode” on page 76  (Timer/Counter0)\n–“Fast PWM Mode” on page 120  (Timer/Counter2)\n–“Phase Correct PWM Mode” on page 121  (Timer/Counter2)\n7. Corrected Table 67 on page 164  (USART).\n8. Updated VIL, IIL, and IIH parameter in “DC Characteristics” on page 287 .\n9. Updated Description of OSCCAL Calibration Byte.\nIn the datasheet, it was not explained how to take advantage of the calibration bytes for 2, 4,\nand 8 MHz Oscillator selections. This is  now added in the following sections:\nImproved description of “Oscillator Calibration Regi ster – OSCCAL” on page 30  and “Cali-\nbration Byte” on page 258 .\n10. Corrected typo in Table 42 .\n11. Corrected description in Table 45  and Table 46 .\n12. Updated Table 118 , Table 120 , and Table 121 .\n13. Added “Errata” on page 336 .\n2503QS–AVR–02/11Atmel Corporation\n2325 Orchard Parkway\nSan Jose, CA 95131\nUSATel:  (+1)(408) 441-0311\nFax: (+1)(408) 487-2600 \nwww.atmel.comAtmel Asia Limited\nUnit 1-5 & 16, 19/F\nBEA Tower, Millennium City 5\n418 Kwun Tong RoadKwun Tong, Kowloon\nHONG KONG\nTel: (+852) 2245-6100\nFax: (+852) 2722-1369Atmel Munich GmbH\nBusiness Campus\nParkring 4\nD-85748 Garching b. MunichGERMANY\nTel: (+49) 89-31970-0\nFax: (+49) 89-3194621Atmel Japan\n9F, Tonetsu Shinkawa Bldg.\n1-24-8 Shinkawa\nChuo-ku, Tokyo 104-0033JAPAN\nTel: (+81)(3) 3523-3551\nFax: (+81)(3) 3523-7581\n© 2011 Atmel Corporation. All rights reserved. / Rev. CORP0XXXX\nAtmel\n®, Atmel logo and combinations thereof, AVR® and others are registered trademarks or trademarks of Atmel Corporation or its \nsubsidiaries. Other terms and product names may be trademarks of others.\nDisclaimer:  The information in this document is provided in connection wi th Atmel products. No license, ex press or implied, by estoppel or  otherwise, to \nany intellectual property right is granted by this document or in connection with the sale of Atmel products. EXCEPT AS SET FORTH IN THE ATMEL \nTERMS AND CONDITIONS OF SALES LOCATED ON THE ATMEL WEBSITE,  ATMEL ASSUMES NO LIABILITY WHATSOEVER AND DISCLAIMS ANY \nEXPRESS, IMPLIED OR STATUTORY WARRANTY RELATING TO ITS PRO DUCTS INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTY OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURP OSE, OR NON-INFRINGEMENT. IN NO EVEN T SHALL ATMEL BE LIABLE FOR ANY DIRECT, \nINDIRECT, CONSEQUENTIAL, PUNITIVE, SPECIAL OR INCIDENTAL DAMAGES (INCLUDING, WITHOUT LIMITATI ON, DAMAGES FOR LOSS AND PROF-\nITS, BUSINESS INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF THE USE OR INABILITY TO USE THIS DOCUMENT, EVEN IF ATMEL \nHAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  Atmel makes no representations or warranties with respect to the accuracy or com-\npleteness of the contents of th is document and reserves the right to make changes  to specifications and product descriptions at  any time without notice. \nAtmel does not make any commitment to update the information cont ained herein. Unless specifically  provided otherwise, Atmel pr oducts are not suit-\nable for, and shall not be used in, automotive applications. Atme l products are not intended, authorized, or warranted for use as components in applica-\ntions intended to support or sustain life.\n'}]
!==============================================================================!
### Component Summary: ATmega32-16AU

**Key Characteristics and Specifications:**

- **Voltage Ratings:**
  - Operating Voltage: 4.5V - 5.5V

- **Current Ratings:**
  - Active Mode: 1.1 mA at 1 MHz, 3V, 25°C
  - Idle Mode: 0.35 mA
  - Power-down Mode: < 1 µA

- **Power Consumption:**
  - Low power consumption with various sleep modes to optimize energy usage.

- **Operating Temperature Range:**
  - Industrial: -40°C to 85°C

- **Package Type:**
  - Available in multiple packages: 
    - 40-pin PDIP (Plastic Dual Inline Package)
    - 44-lead TQFP (Thin Profile Quad Flat Package)
    - 44-pad QFN/MLF (Quad Flat No-Lead/Micro Lead Frame)

- **Special Features:**
  - 32Kbytes of In-System Self-programmable Flash program memory
  - 1024Bytes EEPROM
  - 2Kbyte Internal SRAM
  - JTAG interface for boundary-scan and debugging
  - On-chip Analog Comparator
  - 8-channel, 10-bit ADC with optional differential input stage
  - Six sleep modes for power saving
  - True Read-While-Write operation for Flash memory

- **Moisture Sensitive Level (MSL):**
  - MSL is not specified in the provided text, but typically, microcontrollers like the ATmega32 are rated at MSL 1 or 2.

**Description:**
The ATmega32-16AU is a high-performance, low-power 8-bit microcontroller based on the AVR RISC architecture. It features 32 general-purpose working registers and executes most instructions in a single clock cycle, achieving throughput of up to 16 MIPS at 16 MHz. The microcontroller includes a rich set of peripherals, including timers, an analog-to-digital converter (ADC), and communication interfaces such as USART and SPI.

**Typical Applications:**
The ATmega32-16AU is widely used in various embedded control applications, including:
- **Consumer Electronics:** Used in devices like remote controls, home automation systems, and appliances.
- **Industrial Automation:** Employed in control systems, data acquisition, and monitoring applications.
- **Robotics:** Utilized in robotic control systems for sensor integration and motor control.
- **Data Acquisition Systems:** Suitable for applications requiring analog signal processing and data logging.
- **Educational Projects:** Commonly used in microcontroller-based learning kits and development boards for educational purposes.

This microcontroller's combination of performance, low power consumption, and extensive peripheral support makes it a versatile choice for a wide range of applications in embedded systems.