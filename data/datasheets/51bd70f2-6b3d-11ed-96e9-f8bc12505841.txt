[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of EM008LXQADG13IS1R production of EVERSPIN from the text: PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n1 \n \nExpanded  Serial  Peripheral  Interface (xSPI)  \nIndustrial STT-MRAM Persistent Memory  \n1.8V,  200MHz  SPI, DSPI, QSPI  and OSPI  interfaces  (STR & DTR) \nFeatures  \n \n \n \n  \n \n  \n \n  \n \n \n \n  \n \n \n \n \n \n \n \n  \n \n \n \n \n  \n \n \n \n \n  \n \n \n \n \n \n \n  • Expanded SPI  bus interface supporting  \n- Octal, Quad, Dual and Single SPI protocol  \n• Up to 200MHz single  and double  transfer rate  (STR/DTR) \nfor Octal SPI  \n• Up to 1 33MHz, SPI, DSPI, QSPI  \n• Data endurance: Unlimited read, write and erase \noperations for supported life of product  \n• Data retention: 10 Years minimum across temperature  \n• JEDEC  compliant: JESD251, JESD251-1  \n• Byte level writes and reads with no erase required as \npersistent memory  \n• Data integrity:  No external ECC required.  \n• Low Power Modes:  - Standby < 350µA (64Mb)  \n- Deep power down ~50µA w/ exit time < 100µS  \n• SPI compatibility: NVSRAM , FRAM, NOR, Toggle MRAM  \n• SPI, xSPI Commands for Program/Erase emulated NOR compatible Execute -in-place  (XIP) \n• Volatile and nonvolatile configuration settings  \n- Nonvolatile settings are not reflow protected  \n• Dedicated  256-byte  OTP area   outside main memory  \n- Readable and user -lockable  \n- Permanent lock with WRITE OTP command  \n- Not reflow protected  \n• Erase  capability  \n- Chip / bulk erase and sector erase  \n- Subsector erase 4KB, 32KB granularity  \n• Security  and write  protection  \n- 16 configurable hardware write protected r egions \nplus top/bottom select  \n- Program/erase protection during power-up  \n- CRC command to detect accidental changes to user \ndata • Voltage  \n- 1.65– 2.0V (1.8V)  \n• Density  \n- 8Mb, 16Mb, 32Mb, 64Mb  \n• 400MBps sustained throughput with OSPI at \n200MHz , DTR, for reads and writes  \n• Boot mode configurations  \n- Boot in x1,  x2, x4, x8 \n• Software reset and hardware reset pin available  \n• 3-byte and 4-byte address modes  \n• Sequential (burst) read and writes  \n• Electronic signature  \n- JEDEC -standard 3 -byte signature  \n• JEDEC standard, RoHS compliant packages:  \n- 24-ball BGA, 6mm x 8mm (5 x 5 array)  \n- 8-pin DFN, 6mm x 8mm  \n• Operating temperature range  \n- Commercial: From 0°C to +70°C \n- Industrial: From -40°C to +85°C \n \n\n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n2 \n \n \nDevice Description  \nThe EMxxLX is the industry’s  first xSPI serial interface persistent memory  based on Everspin’s unique industrial STT MRAM technology. \nIt is a high -performance, multiple I/O, SPI -compatible MRAM device  featuring a high -speed, low pin count SPI compatible  bus \ninterface with a clock frequency of up to 200 MHz and a single  1.8V power supply.  The EMxxLX deliver s up to 400MBps reads and \nwrites  via eight I/O signals with a clock frequency of 200MHz.   \nThe EMxxLX bring s a new era of universal memory application s, replac ing products such as SRAM, BBSRAM, NVSRAM and over -\nprovisioned NOR devices  and targets  applications in Industrial Automation, Datacenter, Engineering Emulation , Automotive and \nTransportation, and Gam ing. It is a great choice for the following application usage models:  \n \n  \n\n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n3 \n \n \nBLOCK DIAGRAM  \n \n \n \nFigure 1  \nLOGIC  DIAGRAM  \n  \nOSPI , QSPI , DSPI , XSPI (24-PIN BGA)            QSPI , DSPI,  SPI (8-PIN DFN)  \nFigure 2  \n  \n\n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n4 \n \n2. Device Pin Assignments  \n2.1 24 BALL BGA,  5 X 5 (BALLS DOWN) \n \n \nOCTAL, QUAD, DUAL AND SINGLE XSPI MODES \nFigure 3  \n \n \n  \n\n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n5 \n \n2.2 SIGNAL BALL ASSIGNMENT  \n \nTABLE 1: 24 BALL BGA  XSPI, OCTAL, QUAD, DUAL AND SINGLE \nSPI MODES \nBall Location  xSPI Signal  Ball Location  xSPI Signal  \nA1 No Ball  C4 IO2 / WP#  \nA2 NC C5 RFU \nA3 RFU D1 VDD  \nA4 RESET#   D2 IO1 \nA5 INT#   D3 IO0 \nB1 RFU D4 IO3  \nB2 CK D5 IO4 \nB3 VSS E1 IO7 \nB4 VDD  E2 IO6 \nB5 RFU E3 IO5 \nC1 VSS E4 VDD  \nC2 CS#  E5 VSS \nC3 DS  \nNotes :  \n• The signals which show a “/” i ndicates that the pin or ball is dual function  \n• For C4 pin, the write protect feature (WP#) can only be used when device is in single SPI mode  \n• See WP# signal description for detail  \n \nTable 1  \n \n \n  \n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n6 \n \n \n2.3 8-PIN DFN  PACKAGE  \n \n \n \nFigure 4 \n \n \n2.4 SIGNAL PINOUT  \nTABLE 2:  XSPI, QUAD, DUAL AND SINGLE SPI MODES \n \nPin Location  Signal  \n1 CS#  \n2 IO1 \n3 WP# /IO2 \n4 VSS \n5 IO0 \n6 CK  \n7 IO3/RESET#  \n8 VDD \nNote:  \n1. Pin 7 will be IO 3 in Quad SPI mode  and RESET# \nin SPI mode  or Dual SPI mode.  \n2. When using SPI and Dual SPI commands, IO3 \nmust be driven high or an external pull -up \nresistor should be used to avoid allowing the RESET# input to float.  \n \n \nTable 2  \n  \n\n PRELIMINARY  EMxxLX  \n \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n7 \n \n3.  Signal Descriptions  \nSignal \nName  Type  Description  \nCS#  Input  Chip Select. Bus transactions are initiated with a HIGH to LOW transition. Bus transactions \nare terminated with a LOW to HIGH transition.   \nCK Input  Clock. Command, Address and Data information is transferred from controller to memory \nwith respect to the rising or falling edge of the CK. The clock is not required to be free \nrunning . \n IO[7:0]  Input / Output  Data Input/Output. Command, Address, and Data information is transferred on these \nsignals during Read and Write transactions.  \nDS Output  Data Strobe. Strobe signal to capture read data sent by the memory .  DS is used by a limited \nset of xSPI commands.  \nVDD Power Supply  Power.  \nVSS Power Supply  Ground.  \nRESET#  Input  Hardware Reset. When LOW, the memory  will self -initialize and return the  device to the \nready state. DS and IO[7:0] are placed into the High -Z state when RESET# is LOW. The RESET#  \nsignal should not be allowed to float ;  an external pull -up should be used on the PCB.  \nINT#  Output \n(Open  Drain)  Interrupt . When LOW, the memory  is indicating that an internal event has occurred. This \nsignal is intended to be used as a system  level interrupt for th e device to indicate that an on -\nchip event has  occurred.  INT# is an open -drain output.  \nWP#   Input  Write Protect . Locks the status register in conjunction with the enable/disable bit  [7] of the \nstatus  register. This signal does not have internal pull -ups, it cannot be left floating and must \nbe driven, even  if neither  of W P#/IO2 function is used.  \nRFU Undefined  Reserved for Future Use. The package terminal may be connected to a circuit in the device. \nThe function of the terminal is not currently  defined or may be used for an optional signal. It \nis recommended to leave the terminal open and un connected to external circuits . \nNC No Connection  No Connection. The package terminal has no connection to circuits in the device.  \nDNU  Undefined  Do Not Use. The package terminal must remain open and unconnected to external circuits.  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n8 \n Table 3  \n4. xSPI Signal Protocol  \nDuring the time that CS# is active (LOW) the clock signal (CK) is toggled while command information is first transferred on t he data \n(IO) signals. The clock m ust be active  during any period required for information access or transfer to the memory.  The clo ck \ncontinues  active  during the transfer of read data from the memory to the controller  or write data from the controller  to the memory.  \nWhen the controller  has transferred the desired amount of data, CS# is driven inactive (HIGH). The period during which C S# is active \nis called a transaction on the bus.  \n \nWhile CS# is inactive, the CK is not required to toggle. CK may stop toggling when CS# is LOW as a means of lowering power \nconsumption or inserting delay within a transaction for flow control. CK must alway s complete at least one rising edge and one \nfalling edge before stopping at LOW. This requirement for a minimum of one rising and falling edge in turn requires that DTR \ntransfers always occur in two transfer increments, e.g., two bytes (word) for 8 -bit wide transfers  in 8D mode . STR transfers must occur \nin one byte increments.  \n \nThere are up to four phases of activity within each transaction:  \n- Command transfer from controller  to memory  \n- Command Modifier  (Address) transfer from controller  to memory  \n- Initial Acce ss Latency (also used for IO signal direction turn around in a read transaction)  \n- Data transfer ( memory to controller  in a read transaction or controller  to memory  in a write transaction)  \n \nThe command transfer occurs at the beginning of every transaction. T he command modifier, initial access latency, and data transfer \nphases are optional,  and their presence depends on the protocol mode or command transferred.  \nThe number of parallel IO signals used during the command modifier and data phases depends on the cu rrent protocol mode or \ncommand transferred. The initial access latency phase does not use the IO signals for information transfer. The protocol mode  \noptions are described by the data rate and the IO width (number of IO signals) used during the command, com mand modifier \n(address), and data phases in the following nomenclature (format):  \n \nWR-WR-WR where:  \nThe first WR  is the command bit width and rate  \nThe second WR  is the command modifier (address) bit width and rate  \nThe third WR  is the data bit width and rate.  \n \nThe bit width W  value may be 1, 2, 4 or 8. R has a value of S for STR, or D for DTR. STR has the same transfer value during the rising \nand falling edge of a clock cycle. DTR may have different transfer values during the rising and falling edges of each c lock. \n \n1S-1S-1S means that the command is 1-bit wide STR, the command modifier is 1 -bit wide STR, and the data is one bit wide STR. 8D -\n8D-8D means that the command, the command modifier, and data transfers are always 8 bits wide DT R. The EMxxLX allows the \noption to repeat the command opcode which makes an  8D command look like an 8S command, but it is not required to repeat the \ncommand opcode.  \n \nExample protocol m odes supported for the EM xxLX are: \n1S-1S-1S; 1S -1D-1D \n2S-2S-2S; 2S -2D-2D \n4S-4S-4S; 4S -4D-4D \n8S-8S-8S; 8D -8D-8D \n Note : For full list of opcodes and modes supported by EM xxLX, please refer to section “ xSPI Command Opcodes and Modes ”. \n \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n9 \n The EMxxLX must be configured during the factory initialization to select the mode in which the device will boot following Power -\nOn-Reset (POR). Supported boot modes are x 1, x2, x4 or x 8.  For example, 8 D-8D-8D mode can be made the default mode if so \ndesired. The co ntroller  must determine the default protocol mode of the memory  after POR. This may be done through prior \nknowledge of the system design. The controller  may later reconfigure the memory to use other supported modes.  \n \nA protocol mode phase using single bit transfer uses  IO[0] to transfer information from controller  to memory  and IO[1] to transfer \ninformation from memory to controller . On each IO, information is placed on the IO  line in Most Significant bit (MSb ) to Least \nSignificant bit (LSb) orde r within each u . Sequential command modifier bytes are transferred in highest order to lowest order \nsequence. Sequential data bytes are transferred in lowest address to highest address order.  \nTable 4: 1S-1S-1S Bit Positions for 4 (and 3) Byte addressing  \n \nIO Command Bits  Address  Bits Latency  Data Byte 0  Data Byte 1  \n0 7, 6, 5, 4, 3, 2, 1, 0  31 (23), 30 (22), … 1, 0  X … X … X … \n1 X … X … X … 7, 6, 5, 4, 3, 2, 1, 0  7, 6, 5, 4, 3, 2, 1, 0  \n2 X … X … X … X … X … \n3 X … X … X … X … X … \n4 X … X … X … X … X … \n5 X … X … X … X … X … \n6 X … X … X … X … X … \n7 X … X … X … X … X … \nTable 4 \nA protocol mode phase using two IO signals uses IO [1:0], four IO signals using IO [3:0] and eight IO signals uses IO [7:0]. The LSb of \neach byte is placed on IO [0] with each higher order bit on the successively higher numbered IO signals. Sequential command \nmodifier bytes are transferred in highest order to lowest order sequence. Sequential data bytes in STR are transfer red in lowest \naddress to highest address order. While in 8D mode, s equential data bytes in DTR are transferred only in byte pairs (words) where \nthe byte order depends on the order in which the bytes are written or programmed in that protocol mode. Sequenti al data bytes are \ntransferred in lowest address to highest address order . In 8D mode, the starting address must be even.  \nTable 5: 8D-8D-8D Bit Positions  for 4 (and 3) Byte addressing  \n \nIO Command Bits  \n Address Bits  \n  Latency  Data Word 0  Data Word 1  \n0 0 0 24 16 8 0 X … 0 0 0 0 \n1 1 1 25 17 9 1 X … 1 1 1 1 \n2 2 2 26 18 10 2 X … 2 2 2 2 \n3 3 3 27 19 11 3 X … 3 3 3 3 \n4 4 4 28 20 12 4 X … 4 4 4 4 \n5 5 5 29 21 13 5 X … 5 5 5 5 \n6 6 6 30 22 14 6 X … 6 6 6 6 \n7 7 7 31 23 15 7 X … 7 7 7 7 \nTable 5 \nIO signals not in use in a particular phase are undefined and may or may not be driven by the controller  or memory , i.e., these signals \nmay be in a high impedance state (floating and indicated by X in the bit position tables).  \n \n \nNote : \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n10 \n • In single and dual bit transfers the IO [7:2] signals may be high impedance , unless they are dual purpose such as WP# or \nRESET# in the DFN package  \n• In quad bit transfers the IO [7:4] signals may be high impedance  \nDuring the data transfer period of  a read memory transac tion, the Data Strobe ( DS) signal is driven by the memory  device and \ntransitions edge aligned with the IO signal data transitions. DS  is used as an additional output signal with the same timing \ncharacteristics as other data outputs but with the guarantee o f transitioning with every data bit transferred. The DS  signal transitions \ncan be received and internally phase shifted by the controller  to be used as an internal read clock /strobe  to capture each data bit \ntransferred . Data Strobe is the return of the clo ck, CK. It is available in all modes and makes it easier to achieve higher clock \nfrequencies. It is required to achieve the maximum clock frequencies. D S goes low when CS# is driven low by the host controller and \nis driven until CS# is pulled high. DS stay s low while the device is receiving command, address, and data. DS will toggle while the \ndevice is transmitting data out.  \n \n5. Registers   \nThe EMxxLX supports various status and configuration registers for device status updates and configuration settings. The se registers \nand their access details are discussed in the following sections.  \n \n5.1 STATUS REGISTER  \nRead Status Register or  Write Status Register  commands  are used to read from or write to the Status Register bits , respectively. \nWhen the status register enable/disable bit (bit 7) is set to 1 and W P# is driven LOW, the status register nonvolatile bits  become \nread-only and the Write Status Register operation will not execute. This hardware -protected mode is  exited by driving WP#  high.  \n \n Table 6: Status Register  \nBit Name  Settings  Description  Type  Notes  \n0 WIP: Write in \nprogress  0 = Ready  \n1 = Busy  Status  bit to determine if a  Write Status  Register , \nWrite Nonvolatile  Configuration Register , Write \n(Program ), CRC, or Erase operation  is in progress. \nThis bit is Read Only. Volatile  2 \n1 WEL: Write enable \nlatch  0 = Clear (Default)  \n1 = Set The device powers up with  the Write enable latch  \n(WEL) cleared to prevent inadvertent W rite \n(Program ), or Erase operations. To enable these \noperations,  the W rite Enable  command  must be \nexecuted to  set this bit.  The Write Disable  \ncommand clears this bit . This bit is Read Only.  Volatile   \n2 BP[0]  Refer to  Protected \nArea tables  Defines memory  area to be software protected \nagainst Write (Program) or E rase operations. When \none or more block protect bits are set to 1, a \ndesignated memory area is protected. This bit is \nwritable.  Non-\nvolatile  1 \n3 BP[1] Refer to  Protected \nArea tables  Defines memory  area to be software protected \nagainst Write (Program) or E rase operations. When \none or more block protect bits are set to 1, a \ndesignated memory area is protected. This bit is \nwritable.  Non-\nvolatile  1 \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n11 \n 4 BP[2]  Refer to  Protected \nArea tables  Defines memory  area to be software protected \nagainst Write (Program) or E rase operations. When \none or more block protect bits are set to 1, a \ndesignated memory area is protected. This bit is \nwritable.  Non-\nvolatile  1 \n5 Top/Bottom  0 = Top (Default)  \n1 = Bottom  Determines whether the top or bottom of the \nmemory array  is where the protected  area as \ndefined by the block protect bits  starts from.  This \nbit is w ritable.  Non-\nvolatile   \n6 BP[3] Refer to  Protected \nArea tables  Defines memory  area to be software protected \nagainst Write (Program) or E rase operations. When \none or more block protect bits are set to 1, a designated memory area is protected. This bit is \nwritable.  Non-\nvolatile  1 \n7 Status Register Write \nEnable/Disable  0 = Enabled (Default)  \n1 = Disabled Used with WP# to enable or  disable writing to the \nstatus register. This bit is writable.  Non-\nvolatile   \nNotes  \n1. All BP bits must be set to 0 for the Bulk Erase command execution  \n2. Bit 0 is the inverse of Flag Status Register Bit 7  \nTable 6 \nStatus Register Write Enable /Disable  Bit [ 7] \nThis bit enables write protect for the Status register when set to  ’1’ and the write protect (WP#) pin is driven LOW. In this mode, any \ninstruction that changes the status register content is ignored, effectively locking the state of the device. If SR Bit [7]  is set to  ‘0’, \nirrespective of the WP status (LOW or HIGH), s tatus  register write protection remains disabled. Refer to Table xx on page yy for the \nmemory and status register protection options.  \nTop/ Bottom Protection  Bit [5] \nThis bit defines the operation of the Block Protection bits BP3, BP2, BP1, and BP0. This bit controls the starting point of the memory  \narray (from top or bottom) that gets protected by the  Block protection bits.  \nBlock Protection ( BP3, BP2, BP1 and BP0)  [ 6,4:2] \nThese bits define the memory array to be write-protected against  memory write commands. When one or more of the BP bits is set  \nto  ‘1’, the respective memory address is protected from writes . The Block Protect bits ( BP3, BP2, BP1, and BP0) in combina tion with  \nthe T /B bit can be used to protect an address  or sector  range of the  memory array. The size of the range is determined by the value  \nof the BP bits and the upper or lower starting point of the range  which is selected by the T /B. Table xx show s EMxxLX protected \naddress range for BP[ 3:0] bits setting.  \nWrite Enable Latch (WEL)  Bit [1] \nThe WEL bit must be set to 1 to enable write operations to the memory array or registers, as shown in Table xx. This bit is set to  ’1’ \nonly by executing the Write Enable (WREN) command. The WEL bit (SR1[1]) automatically clears to  ‘0’ after a Write Disable  (04h)  \ncommand is executed. Write (Program) commands will not reset WEL at the completion of the command allowing for back -to-back \nwrites to memory without loading the WREN command again. The WEL bit is volatile and returns to its default  ‘0’ state after POR , \nsoftware R ESET, and hardware RES ET (via the RESET# pin when available).  \n \n5.2 FLAG STATUS REGISTER  \nThe Read Flag Status Register  comman d is used to read the  Flag status register bits . Flag status registers bits are volatile and are \nreset to zero on power -up. They are  set and reset automatically by the internal controller. Error bits must be cleared through the \nClear Status Register  comman d. For Soft Reset, H ardware Reset and Reset with signal sequence, bits 1,  3, 4, and 5 are set to “0” ; bit 7 \nis set to “1”.  In a Reset with signal sequence, bit 0 is set to “0” .  \n \nTable 9: Flag Status Register   \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n12 \n Bit Name  Settings  Description  Type  \n0 Addressing  0 = 3 -byte addressing  \n1 = 4 -byte addressing  Indicates whether 3 -byte or 4 -byte address  mode is \nenabled.  Status  \n1 Protection  0 = Clear  \n1 = Protection Error  Indicates whether an Erase or Program operation has \nattempted to modify the protected array sector as \nconfigured by Block Protection, or whether a OTP Write \noperation has attempted to access the locked OTP space.  Error  \n2 Reserved    \n \n3 CRC 0 = Clear  \n1 = Failure  Indicates that the Computed CRC did not match the user \nprovided CRC Code.  Error  \n4 Write ( Program ) 0 = Clear  \n1 = Pro gram  Error Indicates whether a Program operation has succeeded or \nfailed.  A PROGRAM or OTP Write operation will fail if \nWREN   is not set . Error  \n5 Erase  0 = Clear  \n1 = Erase  Error  Indicates whether an Erase operation has succeeded or \nfailed.  An Erase operation will fail if WREN is not set.  Error  \n6 Reserved    \n \n7 Write ( Program ) or \nErase  0 = Busy  \n1 = Ready  Indicates whether one of the following command cycles is \nin progress: Write Status Register, Write Nonvolatile \nConfiguration Register, Write (Program), Erase, or CRC \nCheck.  Status  \nTable 9 \n \n  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n13 \n 5.3  CONFIGURATION REGISTERS  \nThe memory configuration is set by an internal configuration register that is not directly accessible to users. The user can change the \ndefault configuration at power up by using the WRITE NONVOLATILE CONFIGURATION REGISTER. Information from the nonvolatile \nconfiguration register overwrites th e internal configuration register during power on or after a reset.  \nThe user can change the configuration during device operation using the WRITE VOLATILE CONFIGURATION REGISTER command. \nInformation from the volatile configuration registers overwrite the internal configuration register immediately after the WRITE \ncommand completes.  \n \n \n \n \n \n  \n \n \n \n \n \n \n \n \n  \n  \nNonvolatile Configuration Register  \n Volatile Configuration Register  \nInternal Configuration Register  \nRegister download is executed only during  \nthe power -on phase or after a reset,  \noverwriting configuration register settings  \non the internal configuration register.  \nRegister download is executed after a  WRITE \nVOLATILE CONFIGURATION REGISTER command,  \noverwriting configuration register  settings on the \ninternal configurat ion register.  \nDevice Behavior  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n14 \n  \n5.4  NONVOLATILE CONFIGURATION REGISTER  \nNonvolatile Configuration Register 0  \nAddress5 0x00 00 \nBit Op Name  Settings  Description  Notes  \n7:0 RW I/O Mode 1111_1111 (0xFF)   \n1101_1111 (0xDF)    \n1111_1101 (0xFD)    \n1101_1101 (0xDD)   \n1111_1011 (0xFB)   \n1101_1011 (0xDB)  \n1110_1011 (0xEB)   \n1100_1011 (0xCB)  \n1110_0111 (0xE7)   \n1100_0111 (0xC7)  \n1011_0111 (0xB7)  \n1001_0111 (0x97)  \nOthers SPI with DS (default)  \nSPI w/o DS  \nDual with DS  \nDual w/o DS  \nQuad with DS \nQuad w/o DS  \nQuad DTR with DS  \nQuad DTR w/o DS  \nOctal DTR with DS  \nOctal DTR w/o DS  \nOctal with DS  \nOctal w/o DS  \nSPI with DS (same as default)  6 \n \nNonvolatile Configuration Register 1  \nAddress  0x0001  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Dummy Cycle \nConfiguration  0000_0000  \n0000_0001  \n0000_0010  \n. . . \n0000_1111  \n0001_0000  \n. . . \n0001_1110  \n0001_1111  \n1111_1111  \nOthers  16 Dummy cycles   \n  1 Dummy cycles  \n  2 Dummy cycles  \n ...   \n15 Dummy cycles  \n16 Dummy cycles  \n ... \n30 Dummy cycles  \n31 Dummy cycles  \n16 Dummy cycles  \n16 Dummy cycles  (default)   \nNonvolatile Configuration Register 2  \nAddress  0x0002  \nBit Op Name  Settings  Description  Note s \n7:0 RW Reserved  TBD  \n  \nNonvolatile Configuration Register 3  \nAddress  0x0003  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Driver Strength \nConfiguration  1111_1111  \n1111_1110  \n1111_1101  \n1111_1100  \nOthers     50 Ohm (default)  \n35 Ohm  \n25 Ohm  \n18 Ohm  \n50 Ohm    \nNonvolatile Configuration Register 4  \nAddress  0x0004  \nBit Op Name  Settings  Description  Notes  \n7:4 RW TBD TBD  \n  \n3:0 RW DS Delay   TBD  TBD \n  \nNonvolatile Configuration Register 5  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n15 \n Address  0x0005  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Address Mode  1111_1111  \n1111_1110  \nOthers    3-Byte Address (default)  \n4-Byte Address  \n3-Byte Address    \nNonvolatile Configuration Register 6  \nAddress  0x0006  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Execute -in-Place \n(XIP) Configuration  1111_1111  \n1111_1110   \n1111_1100  \nOthers     XIP Disabled (default)  \nXIP Enable - Activated if XIP confirmation bit = 0 during FAST READ  \nXIP BOOT - Activated at boot time  \nXIP Disabled  \n   1 \nNonvolatile Configuration Register 7  \nAddress  0x0007  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Wrap Configuration  1111_1111   \n1111_1110  \n1111_1101  \n1111_1100   \nOthers  Continuous (default)  \n64-byte wrap  \n32-byte wrap  \n16-byte wrap  \nContinuous   2 \nNonvolatile Configuration Register 8  \nAddress  0x0008 \nBit Op Name  Settings  Description  Notes  \n7 RW Erase Bit Value  1 = Erase with ‘1’ \n(default)  \n0 = Erase with ‘0’  Determines data state for Erase operations   \n6:2 RW TBD TBD    \n1 RW RPE 1 = Reset Pin Disabled  \n0 = Reset Pin Enabled  \n(default)  When the Reset pin is disabled, the RESET # will be ignored. The \ndevice may be reset with Soft Reset or JESD Reset. In the DFN \npackage option, the RESET# signal is disabled automatically when \nthe device is configured in Quad SPI mode (Register 0).   \n0 RW Write mode  1 = Persistent Memory \nMode enabled \n(default)  \n0 = Persistent memory \nmode disabled  Persistent Memory mode or NOR Flash like mode is selected with \nthis bit.  3 \nNonvolatile Configuration Register s 9,10,11,12  \nAddress  0x0009, 0x000A, 0x000B, 0x 000C \nBit Op Name  Settings  Description  Notes  \n7:0 RW Non Volatile user \nscratch register  1111_1111  (defa ult) Four 8 bit registers  available for storing any user data .   4 \nTable 10 \nNotes:  \n1. Only FAST READ (0Bh) supports XIP operation.  \n2. Wrap length affects READ commands . WRITE wrap length  will depend on the mode selected in Register 8.  \n3. Used to select the mode for writing to the memory  \n4. These registers may be used for storing user configuration data that  will be used for device recovery if necessary.  \n5. Register addresses may be either 3 -byte or 4 -byte depending on user selection  \n6. When, configuring the I/O mode, the unused IO’s, if any, will be left floating. For example, if a user inte nds to use only the Quad SPI mode \nin a Octal SPI in a BGA package, IO4 -7 will be floating or Hi- Z. These balls may be left unconnected on the PCB i f the user never intends to \nactivate Octal SPI. If an Octal SPI BGA device is configured in the Dual SPI mode , IO0 and IO1 will be active and the remaining IO’s will be \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n16 \n floating except for ball C4 which is dual purpose IO2/WP#. A Quad SPI device in a DFN package which is configured as Dual SPI  will use IO2 \nand IO3 as WP# and RESET# respectively. Similarly, if the same device is configured as SPI mode, IO1 is left floating.  \n \n5.5  VOLATILE CONFIGURATION REGISTER  \nVolatile Configuration Register 0  \nAddress4 0x0000  \nBit Op Name  Settings  Description  Notes  \n7:0 RW I/O Mode  1111_1111 (0xFF)  \n1101_1111 (0xDF)   \n1111_1101 (0xFD)   \n1101_1101 (0xDD)  \n1111_1011 (0xFB)   \n1101_1011 (0xDB)  \n1110_1011 (0xEB)   \n1100_1011 (0xCB)  \n1110_0111 (0xE7)   \n1100_0111 (0xC7)  \n1011_0111 (0xB7)  \n1001_0111 (0x97)  \nOthers  SPI with DS (default)  \nSPI w/o DS  \nDual with DS  \nDual w/o DS  \nQuad with DS \nQuad w/o DS  \nQuad DTR with DS  \nQuad DTR w/o DS  \nOctal DTR with DS  \nOctal DTR w/o DS  \nOctal with DS  \nOctal w/o DS  \nSPI with DS (same as default)    5 \nVolatile Configuration Register 1  \nAddress  0x0001  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Dummy Cycle \nConfiguration  0000_0000  \n0000_0001  \n0000_0010  \n. . . \n0000_1111  \n0001_0000  \n. . . \n0001_1110  \n0001_1111  \nOthers  16 Dummy cycles  \n  1 Dummy cycles  \n  2 Dummy cycles  \n ...   \n15 Dummy cycles  \n16 Dummy cycles  \n ... \n30 Dummy cycles  \n31 Dummy cycles  \n16 Dummy cycles    \nVolatile Configuration Register 2  \nAddress  0x0002  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Reserved  TBD     \nVolatile Configuration Register 3  \nAddress  0x0003  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Driver Strength \nConfiguration  1111_1111  \n1111_1110  \n1111_1101  \n1111_1100  \nOthers     50 Ohm (default)  \n35 Ohm  \n25 Ohm  \n18 Ohm  \n50 Ohm     \nVolatile Configuration Register 4  \nAddress  0x0004 \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n17 \n Bit Op Name  Settings  Description  Notes  \n7:4 RW Reserved  TBD   \n3:0 RW DS Delay  TBD TBD    \nVolatile Configuration Register 5  \nAddress  0x0005  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Address Mode  1111_1111  \n1111_1110  \nOthers      3-Byte Address (default)  \n4-Byte Address  \n3-Byte Address     \nVolatile Configuration Register 6  \nAddress  0x0006  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Execute -in-Place \n(XIP) Configuration  1111_1111  \n1111_1110  \n   \nOthers    XIP Disabled (default)  \nXIP Enable - Activated if XIP confirmation bit = 0 \nduring FAST READ  \nXIP Disabled   1 \nVolatile Configuration Register 7  \nAddress  0x0007  \nBit Op Name  Settings  Description  Notes  \n7:0 RW Wrap Configuration  1111_1111   \n1111_1110  \n1111_1101  \n1111_1100   \nOthers  Continuous (default)  \n64-byte wrap  \n32-byte wrap  \n16-byte wrap  \nContinuous   2 \nVolatile Configuration Register 8  \nAddress  0x000 8 \nBit Op Name  Settings  Description  Notes  \n7 RW Erase Bit Value  1 = Erase with ‘1’ (default)  \n0 = Erase with ‘0’  Determines data state for Erase operations   \n6:3 RW Reserved      \n2 RW OTP Unlock  1 = OTP Lock Enable (default)  \n0 = OTP Lock Disable ” When OTP Lock is disable d this will override  the \nOTP Lock Byte setting and unlock the OTP array .  \n1 RW RPE 1 = Reset Pin Enabled (default)  \n0 = Reset Pin Dis abled  When the Reset pin is disabled, the RESET # will \nbe ignored. The device may be reset with Soft \nReset or JESD Reset. In the DFN package option, \nthe RESET# signal is disabled automatically when \nthe device is configured in Quad SPI mode \n(Register 0).   \n0 RW Write mode  1 = Persistent Memory Mode enabled \n(default)  \n0 = Persistent memory mode disabled  Persistent Memory mode  or NOR Flash like \nmode is selected with this bit.  3 \nTable 11 \nNotes:  \n1. Only FAST READ (0Bh) supports XIP operation.  \n2. Wrap length affects READ commands . WRITE wrap length will depend on the mode selected in Register 8.  \n3. Used to select the mode for writing to the memory  \n4. Register addresses may be either 3 -byte or 4 -byte depending on user selection  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n18 \n 5. When, configuring the I/O mode, the unused IO’s, if any, will be left floating. For example, if a user intends to use only the Quad SPI mode \nin a Octal SPI in a BGA package, IO4 -7 will be floating or Hi- Z. These balls may be left unconnected on t he PCB is the user never intends to \nactivate Octal SPI. If an Octal SPI BGA device is configured in the Dual SPI mode, IO0 and IO1 will be active and the remaini ng IO’s will be \nfloating except for ball C4 which is dual purpose IO2/WP#. A Quad SPI device in  a DFN package which is configured as Dual SPI will leave \nIO2 and IO3 as WP# and RESET# respectively. Similarly, if the same device is configured as SPI mode, IO1 is left floating.  \n6. Default settings  are power -on reset defaults . \n \nTable 20  \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n19 \n 6 xSPI Command Opcodes and Modes  \nAll commands, addresses and data are shifted in and out of the device, beginning with the  most significant bit on the first rising edge \nof CK after CS# is driven low. C ommand sequence s starts with a one -byte command code. T he one -byte command code is s hifted \ninto the device  on the IO’s , and each bit is latched on the rising edges of CK. Depending on the command, this might be followed by \naddress bytes or by data bytes, or by both or n either . CS# must be driven high after the last b it of the command sequence has been \ncompleted. For the command s Read , Read  Fast, Read Status Register or Deep Power -Down  exit, and Read ID, the shifted-in \ncommand sequence is followed by a data-out sequence. All read instruction s can be completed after any  bit of the data -out \nsequence is being shifted out, then CS# must be driven high to return to deselected status.  \nTable 21: Instruction Command Table  \nINSTRUCTION  COMMAND SET  OPCODE  \n(HEX) SPI \nMODE DSPI  \nMODE QSPI  \nMODE OSPI  \nMODE ADDRESS  \nBYTES6 LATENCY4 \n(DUMMY ) \nSTR DTR STR DTR \nRESET  Enable  0x66  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nRESET Memory  0x99  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nRead ID  0x9E 1s-0-1s ~ ~ ~ 8s-0-8s 8d-0-8d 0 0,0,0,8  \nRead ID  0x9F 1s-0-1s ~ ~ ~ 8s-0-8s 8d-0-8d 0 0,0,0,8  \nRead ID MIO  0xAF  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 0,0,0,8  \nRead  0x03  1s-1s-1s ~ ~ ~ ~ ~ 3/4 0 \nRead Fast (XIP)  0x0B  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 DCC \nRead Fast Dual Output  0x3B  1s-1s-2s 2s-2s-2s ~ ~ ~ ~ 3/4 DCC \nRead Fast Dual I/O  0xBB  1s-2s-2s 2s-2s-2s ~ ~ ~ ~ 3/4 DCC \nRead Fast Quad Output  0x6B  1s-1s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 3/4 DCC \nRead Fast Quad I/O  0xEB  1s-4s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 3/4 DCC \nRead Fast DTR  0x0D  1s-1d-1d 2s-2d-2d 4s-4d-4d 4s-4d-4d ~ ~ 3/4 DCC \nRead Fast Dual Output DTR  0x3D  1s-1d-2d 2s-2d-2d ~ ~ ~ ~ 3/4 DCC \nRead Fast Dual I/O DTR  0xBD  1s-2d-2d 2s-2d-2d ~ ~ ~ ~ 3/4 DCC \nRead Fast Quad Output DTR  0x6D  1s-1d-4d ~ 4s-4d-4d 4s-4d-4d ~ ~ 3/4 DCC \nRead Fast Quad I/O DTR  0xED  1s-4d-4d ~ 4s-4d-4d 4s-4d-4d ~ ~ 3/4 DCC \nRead Word Quad I/O (no DTR)  0xE7 1s-4s-4s ~ 4s-4s-4s ~ ~ ~ 3/4 4 \nRead Fast Octal Output3 0x8B  1s-1s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 3/45 DCC \nRead Fast Octal I/O3 0xCB  1s-8s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 3/45 DCC \nRead Fast Octal Output DTR3 0x9D  1s-1d-8d ~ ~ ~ 8d-8d-8d 8d-8d-8d 3/45 DCC \nRead Fast Octal I/O DTR3 0xFD  1s-8d-8d ~ ~ ~ 8d-8d-8d 8d-8d-8d 45 DCC \nRead 4 -byte address  0x13  1s-1s-1s ~ ~ ~ ~ ~ 4 0 \nRead Fast 4 -byte address  0x0C  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 45 DCC \nRead Fast Dual Output 4 -Byte Address  0x3C  1s-1s-2s 2s-2s-2s ~ ~ ~ ~ 4 DCC \nRead Fast Dual I/O 4 -byte Address  0xBC  1s-2s-2s 2s-2s-2s ~ ~ ~ ~ 4 DCC \nRead Fast Quad Output 4 -Byte Address  0x6C  1s-1s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 4 DCC \nRead Fast Quad I/O 4 -Byte Address  0xEC  1s-4s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 4 DCC \nRead Fast DTR 4 -Byte Address  0x0E 1s-1d-1d 2s-2d-2d 4s-4d-4d 4s-4d-4d ~ ~ 4 DCC \nRead Fast Dual I/O DTR 4 -Byte Address  0xBE  1s-2d-2d 2s-2d-2d ~ ~ ~ ~ 4 DCC \nRead Fast Quad I/O DTR 4 -Byte Address  0xEE 1s-4d-4d ~ 4s-4d-4d 4s-4d-4d ~ ~ 4 DCC \nRead Fast Octal Output 4 -byte address3 0x7C  1s-1s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 45 DCC \nRead Fast Octal I/O 4 -byte address3 0xCC  1s-8s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 45 DCC \nWrite Enable  0x06  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n20 \n INSTRUCTION  COMMAND SET  OPCODE  \n(HEX) SPI \nMODE DSPI  \nMODE QSPI  \nMODE OSPI  \nMODE ADDRESS  \nBYTES6 LATENCY4 \n(DUMMY ) \nSTR DTR STR DTR \nWrite Disable  0x04  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nRead Status Register  0x05  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 0,0,0,8  \nRead Flag Status Register  0x70  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 0,0,0,8  \nRead N onvolatile  Config uration  Register  0xB5  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0,0,0,8  \nRead Volatile Configuration Register  0x85  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0,0,0,8  \nRead General Purpose Read Register  0x96  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 8,8,8,8  \nWrite Status Register1 0x01  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 0 \nWrite Nonvolatile Configuration Register1 0xB1  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0 \nWrite Volatile Configuration Registe r1 0x81  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0 \nClear Flag Status Register  0x50  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nWrite ( Program Page )1,2 0x02  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0 \nWrite (Program) Fast Dual Input1,2 0xA2  1s-1s-2s 2s-2s-2s ~ ~ ~ ~ 3/4 0 \nWrite (Program) Fast Dual Input Extended1,2 0xD2  1s-2s-2s 2s-2s-2s ~ ~ ~ ~ 3/4 0 \nWrite ( Program ) Fast Quad Input1,2 0x32  1s-1s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 3/4 0 \nWrite ( Program ) Fast Quad Input Extended1,2 0x38  1s-4s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 3/4 0 \nWrite ( Program ) Fast Octal Inpu t1,2,3 0x82  1s-1s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 3/45 0 \nWrite ( Program ) Fast Octal Input Extended1,2,3 0xC2  1s-8s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 3/45 0 \nWrite ( Program ) 4-byte address1,2 0x12  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 45 0 \nWrite ( Program ) Fast Quad Input 4 -byte1,2 0x34  1s-1s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 4 0 \nWrite ( Program ) Fast Quad Input Ext . 4-byte1,2 0x3E 1s-4s-4s ~ 4s-4s-4s 4s-4d-4d ~ ~ 4 0 \nWrite ( Program ) Fast Octal Input 4 -byte1,2,3 0x84  1s-1s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 45 0 \nWrite ( Prog ) Fast Octal Input Extended 4-\nbyte1,2,3 0x8E 1s-8s-8s ~ ~ ~ 8s-8s-8s 8d-8d-8d 45 0 \nErase 32kB1 0x52  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 3/45 0 \nErase 4kB1 0x20  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 3/45 0 \nErase Sector1 0xD8  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 3/45 0 \nErase/Bulk Chip1 0xC7  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nErase/Bulk Chip1 0x60  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nErase Sector 4 -byte address1 0xDC  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 45 0 \nErase 4kB 4 -byte address1 0x21  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 45 0 \nErase 32kB 4 -byte address1 0x5C  1s-1s-0 2s-2s-0 4s-4s-0 4s-4d-0 8s-8s-0 8d-8d-0 45 0 \nOTP Read  0x4B  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 DCC \nOTP Write1 0x42  1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0 \n4-byte address mode Enter  0xB7  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \n4-byte address mode Exit  0xE9 1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nDeep Power Down Enter  0xB9  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nDeep Power Down Exit  0xAB  1s-0-0 2s-0-0 4s-0-0 4s-0-0 8s-0-0 8d-0-0 0 0 \nInterface Activation (CRC ) 0x9B  1s-0-1s 2s-0-2s 4s-0-4s 4s-0-4d 8s-0-8s 8d-0-8d 0 0 \nTDP Write1 0xF0 1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 0 \nTDP Read  0xF1 1s-1s-1s 2s-2s-2s 4s-4s-4s 4s-4d-4d 8s-8s-8s 8d-8d-8d 3/45 DCC \nTDP Read DTR  0xF2 1s-1d-1d 2s-2d-2d 4s-4d-4d 4s-4d-4d ~ ~ 3/4 DCC \n \nTable 21 \n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n21 \n Notes : \n1. A Write Enable command is needed to set the WEL bit prior to this command  but memory writes only require WREN the first time, \nsubsequent writes do not require a WREN.  \n2. WREN is only required one time, subsequent writes do not require a nother WREN command  \n3. Octal commands are treated as a NOP in part numbers that are QSPI, including  QSPI in the DFN package \n4. Latency:  Positions in this column, A,B,C,D, are defined as:  A=SPI, B=Dual, C=Quad, D={8S|8D|4D}  \n5. Octal SPI with DTR  operations or commands  all require 4 -byte address input . \n6. A “0” indicates that there is no address byte required.  \n• “~” indicates  mode  not supported .  \n• DCC = Dummy Clock Cycles from Configuration Register  \n \nXSPI OPCODE TIMING REPRESENTATION  \nPlease refer to the modular timing waveform below to understand the full timing for any opcode for EM xxLX shown in section “xSPI \nCommand Opcodes and Modes ”. Timing of each supported opcode can be decomposed into three key items . Command, Address, \nand Data as shown below:  \n          \n \nFigure 10: Opcode Timing Diagram  \n \n  \n\n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n22 \n  \n7 Package Information  \n24-Ball TBGA, 5 x 5 ball array \n \n \nFigure 38  \n  \n\n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n23 \n 8-PIN DFN   PACKAGE  \n \n \nFigure 39  \n \n\n   Preliminary  \nExpanded Serial Peripheral Interface (xSPI) Industrial STT -MRAM Product Brief  \n200MHz SPI, QSPI and OSPI interfaces (STR & DTR)  \n \n©2022  Everspin Technologies                                    Everspin Confidential  EMxxLX  Brief v 8 \n24 \n Revision History  \nv0 :  Initial version  \nv1:  Changed feature list on page 1.  \nv2:  Clarified frequency for Octal, Quad and Single SPI modes. No HOLD# pin for SPI modes, Command table update.  \nv.3: Updated xSPI Signal Protocol section, added DSPI to package and pinouts.  \nv4; Updated PN, command tables, DFN drawing \nv5: Register tables updated, xSPI command description updated.  \nv6: December 16 alignment to data sheet with updates on registers, commands and block diagrams  \nv7: Dec 01, 2021    Updated to reflect datasheet rev 2.0 10 132021 (registers, commands, description)  \nv8: April 27, 2022 Updated to reflect  register and command  code updates  \n \n \n'}]
!==============================================================================!
### Component Summary: EM008LXQADG13IS1R

#### Key Specifications:
- **Voltage Ratings**: 1.65V to 2.0V (typical 1.8V)
- **Current Ratings**: 
  - Standby: < 350µA (for 64Mb)
  - Deep Power Down: ~50µA with exit time < 100µs
- **Power Consumption**: Low power modes available; specific consumption not detailed.
- **Operating Temperature Range**: 
  - Commercial: 0°C to +70°C
  - Industrial: -40°C to +85°C
- **Package Type**: 
  - 24-ball BGA (6mm x 8mm, 5 x 5 array)
  - 8-pin DFN (6mm x 8mm)
- **Special Features**:
  - Supports Octal, Quad, Dual, and Single SPI protocols.
  - Up to 200MHz single and double transfer rate for Octal SPI.
  - Unlimited read, write, and erase operations.
  - 10 years minimum data retention across temperature.
  - No external ECC required for data integrity.
  - 256-byte OTP area for user-lockable data.
  - Security features including configurable hardware write protection.
- **Moisture Sensitive Level**: Not specified in the provided text.

#### Component Description:
The EM008LXQADG13IS1R is an industrial-grade STT-MRAM (Spin-Transfer Torque Magnetoresistive Random Access Memory) device from Everspin Technologies. It features an expanded Serial Peripheral Interface (xSPI) that supports various protocols including Octal, Quad, Dual, and Single SPI. This component operates at a voltage of 1.8V and can achieve high-speed data transfer rates of up to 200MHz, making it suitable for applications requiring fast and reliable memory access.

#### Typical Applications:
The EM008LX is designed for a wide range of applications, particularly in environments where data persistence and speed are critical. Typical applications include:
- **Industrial Automation**: For real-time data logging and control systems.
- **Datacenter**: As a high-speed memory solution for servers and storage systems.
- **Engineering Emulation**: For testing and simulation environments where rapid data access is necessary.
- **Automotive and Transportation**: In systems requiring reliable memory for navigation, control, and safety features.
- **Gaming**: For fast data retrieval and storage in gaming consoles and devices.

This component is positioned as a versatile memory solution, capable of replacing traditional SRAM, BBSRAM, NVSRAM, and over-provisioned NOR flash devices, thus enabling new universal memory applications.