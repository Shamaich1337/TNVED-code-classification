[{'role': 'system', 'content': 'You are a technical specialist with expertise in electronics. Your task is to analyze datasheets for electronic components and provide a concise summary of the product’s key characteristics and specifications. In addition, you need to gather textual information about the component, including its description and typical applications.Instructions:    Identify the correct component in the datasheet using the provided product code.    Summarize key parameters, including:        Voltage ratings        Current ratings        Power consumption        Operating temperature range        Package type        Special features or notes (if applicable)        Moisture Sensetive Level JEDEC J-STD-020E    Provide a short description of the component, including what it is (e.g., transistor, microcontroller, sensor) and its primary function.    Explain typical applications for the component (e.g., power management, signal processing, data storage, etc.).    Be thorough and accurate: Ensure the information corresponds specifically to the product code, as some datasheets cover multiple variants.Your goal is to create a clear and accurate technical summary that includes both key specifications and a description of what the component is used for.'}, {'role': 'user', 'content': 'Give me information about the component of ADUC7021BCPZ62I-RL production of ANALOG DEVICES from the text: Precision Analog Microcontroller, 12-Bit \nAnalog I/O, ARM7TDMI MCU  \nData Sheet ADuC7019 /20/21/22/24/25/26/27/28/29 \n \n Rev.  H Document Feedback  \nInformation furnished by Analog Devices is believed to be accurate and reliable. However, no \nresponsibility is assumed by Analog Devices for its use, nor for any infringements of patents or other \nrights of third parties that may result from its use. Specifications subject to change without notice. No \nlicense is granted by implication or otherwise under any patent or patent rights of Analog Devices. \nTrademarks and registered trademarks are the property of their res pective owners.    \n \nOne Technology Way, P.O. Box 9106, Norwood, MA 02062- 9106, U.S.A.  \nTel: 781.329.4700  ©2005– 2018 Analog Devices, Inc. All rights reserved.  \nTechnical Support  www.analog.com   FEATURES  \nAnalog I/O  \nMultichannel, 12 -bit, 1 MSPS ADC  \nUp to 16 ADC channels1 \nFully differential and single -ended modes  \n0 V to V REF analog input range \n12-bit voltage output DACs  \nUp to 4 DAC outputs available1 \nOn-chip voltage reference  \nOn-chip temperature sensor (±3°C)  \nVoltage comparator  \nMicrocontroller  \nARM7TDMI core, 16 -bit/32 -bit RISC architecture \nJTAG port supports code download and debug  \nClocking options  \nTrimmed on -chip oscillator (±3%)  \nExternal watch crystal  \nExternal clock source up to 44 MHz  \n41.78 MHz PLL with programmable divider  \nMemory  \n62 kB F lash/EE memory, 8 kB SRAM  \nIn-circuit download, JTAG -based debug  \nSoftware -triggered in -circuit reprogrammability  \n On-chip peripherals  \nUART,  2× I2C and SPI  serial I/O  \nUp to 40- pin GPIO port1 \n4× general -purpose timers \nWake -up and watchdog timers (WDT)  \nPower supply monitor  \n3-phase, 16 -bit PWM generator1 \nProgrammable logic array (PLA)  \nExternal memory interface, up to 512 kB1 \nPower  \nSpecified for 3  V operation  \nActive mode: 11 mA at  5 MHz, 40 mA at  41.78 MHz  \nPackages and temperature range \nFrom 40 -lead 6 mm × 6 mm LFCSP to 80 -lead LQFP1 \nFully specified for –40°C to +125°C operation  \nTools  \nLow cost QuickStart development system  \nFull third -party support  \nAPPLICATIONS  \nIndustrial control and automation systems  \nSmart sensors , precision instrumentation  \nBase station systems, optical networking  \n \nFUNCTIONAL BLOCK DIA GRAM  \n1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nDAC2\n3-PHASE\nPWM\n(SEE NOTE 1)ADuC7019ADC0 TO ADC4,\nADC12 TO ADC14\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\n12-BIT\nDAC\nNOTES\n1. SEE APPLICATION NOTE AN-798.ADC15\n04955-100 \nFigure 1. \n1 Depending on part model. See Ordering Guide  for more information.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \nRev. H | Page 2 of 102 TABLE OF CONTENTS  \nFeatures  .............................................................................................. 1  \nApplications  ....................................................................................... 1  \nFunctional Block Diagram  .............................................................. 1  \nRevi sion History  ............................................................................... 3  \nGeneral Description  ......................................................................... 5  \nDetailed Block Diagram  ............................................................ 10 \nSpecifications  ................................................................................... 11 \nTiming Specifi cations  ................................................................ 14 \nAbsolute Maximum Ratings  .......................................................... 21 \nESD Caution  ................................................................................ 21 \nPin Configurations and Function Descriptions  ......................... 22 \nADuC7019/ADuC7020/ADuC7021/ADuC7022 .................. 22 \nADuC7024/ADuC7025 ............................................................. 26 \nADuC7026/ADuC7027 ............................................................. 29 \nADuC7028  ................................................................................... 32 \nADuC7029  ................................................................................... 34 \nTypical Performance Characteristics  ........................................... 36 \nTerminology  .................................................................................... 39 \nADC Specifications  .................................................................... 39 \nDAC Specifications ..................................................................... 39 \nOverview o f the ARM7TDMI Core  ............................................. 40 \nThumb Mode (T)  ........................................................................ 40 \nLong Multiply (M)  ...................................................................... 40 \nEmbeddedICE (I)  ....................................................................... 40 \nExceptions  ................................................................................... 40 \nARM Registers  ............................................................................ 40 \nInterrupt Latency  ........................................................................ 41 \nMemory Organization  ................................................................... 42 \nMemory Access  ........................................................................... 42 \nFlash/EE Memory  ....................................................................... 42 \nSRAM  ........................................................................................... 42 \nMemory Mapped Registers  ....................................................... 42 \nADC Circuit Overview  .................................................................. 46 \nTransfer Function  ....................................................................... 46 \nTypical Operation  ....................................................................... 47 \nMMRs Interface .......................................................................... 47 \nConverter Operation  .................................................................. 49 \nDriving the Analog Inputs  ........................................................ 50 Calibration  ................................................................................... 51 \nTemperature Sensor  ................................................................... 51 \nBand Gap Reference  ................................................................... 51 \nNonvolatile Flash/EE Memory  ..................................................... 52 \nProgramming  .............................................................................. 52 \nSecurity  ........................................................................................ 53 \nFlash/EE Control Interface  ....................................................... 53 \nExecution Time from SRAM and Flash/EE  ............................ 55 \nReset and Remap  ........................................................................ 55 \nOther Analog Peripherals  .............................................................. 57 \nDAC  .............................................................................................. 57 \nPower Supply Monitor  ............................................................... 58 \nComparator  ................................................................................. 58 \nOscillator and PLL —Power Control  ........................................ 59 \nDigital Peripherals  .......................................................................... 62 \n3-Phase PWM  ............................................................................. 62 \nDescription of the PWM Block  ................................................ 63 \nGeneral -Purpose Input/Output ................................................ 68 \nSerial Port Mux  ........................................................................... 71 \nUART Serial Interface  ................................................................ 71 \nSerial Peripheral Interface  ......................................................... 75 \nI2C-Compatible Interfaces  ......................................................... 77 \nProgrammable Logic Array (PLA) ........................................... 81 \nProcessor Reference Peripherals  ................................................... 84 \nInterrupt System  ......................................................................... 84 \nTimers  .......................................................................................... 85 \nExternal Memory Interfacing  ................................................... 90 \nHardware Design Considerations  ................................................ 94 \nPower Supplies  ............................................................................ 94 \nGrounding and Board Layout Recommendations  ................. 95 \nClock Oscillator  .......................................................................... 95 \nPower -On Reset Operation  ....................................................... 96 \nTypical System Configuration  .................................................. 96 \nDevelopment Tools ......................................................................... 97 \nPC-Based Tools  ........................................................................... 97 \nIn-Circuit Serial Downloader  ................................................... 97 \nOutline Dimensions  ....................................................................... 98 \nOrdering Guide  ........................................................................ 101 \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 3 of 102 REVISION HISTORY  \n4/2018— Rev. G to Rev. H  \nChanges  to General -Purpose Input/Output Section  .................. 68 \nUpdated Outline Dimensions  ........................................................ 98 \nChanges to Ordering Guide  .........................................................101 \n \n12/2015— Rev. F to Rev. G  \nChanged CP -40-1 to CP -40-9 ........................................... Universal  \nUpdated Outline Dimensions  ........................................................ 97 \nDeleted Figure 96  (CP-40-1); Renumbered Sequentially  .......... 97 \nChanges to Ordering Guide  .........................................................101 \n \n5/2013— Rev. E to Rev. F  \nChanges to Figure 1  ........................................................................... 1 \nAdded Figure 2  to Figure 10; Renumbered Sequentially  ............. 4 \nChanges to Figure 19 ; Added Figure 20 ....................................... 21 \nChanges to EPAD Note in Figure 21 and Figure 22 ..................... 22 \nChanges to EPAD Note in Table 11 ................................................... 23 \nChanges to EPAD Note in Figure 23 ............................................ 25 \nChanges to EPAD Note in Table 12  .............................................. 26 \nChanges to Table 14  ........................................................................ 31 \nChanges to Table 15  ........................................................................ 33 \nChanges to Table 82 ........................................................................ 68 \nAdd ed Table 83, Figure 73, Figure 74, Following Text,  and  \nTable 84; Renumbered Sequentially  .............................................. 69 \nChanges to Bit 2 Description,  Table 98 ........................................ 71 \nChanges to Table 101 ...................................................................... 72 \nChanges to Timer2 (Wake -Up Timer)  Section  ........................... 87 \nChanges to Figure 94 ...................................................................... 95 \nUpdate d Outline Dimensions  ........................................................ 97 \nChanges to Ordering Guide  .........................................................101 \n \n7/2012— Rev. D to Rev. E  \nChanged SCLOCK to SCLK When Refering to SPI Clock , \nSPIMISO to MISO when Refering to SPI MISO, SPIMOSI to \nMOSI when Refering to SPI MOSI, and SPICSL to CS when \nRefering to SPI Chip Select  ............................................... Universal  \nChanges to Table 4 , Table 5 , and Figure 5  .................................... 11 \nChanges to Endnote 1 in Table 6  and Figu re 6 ............................ 12 \nChanges to Table 7  and Figure 7  ................................................... 13 \nChanges to Table 8  and Figure 8  ................................................... 14 \nChanges to Table 9  and Figure 9  ................................................... 15 \nChange d EPAD Note in Figure 12  and Table 11  ......................... 18 \nChange d EPAD Note in  Figure 13  and Table 12  ......................... 21 \nChanges  to Bit 6 in Table 18  ........................................................... 43 \nChanges to Example Source C ode (External Crystal Selection ) \nSection and Example Source Code ( External Clock Selection ) \nSection  .............................................................................................. 55 \nChanges to Serial Peripheral Interface Section  ........................... 69 \nChanges to SPICON[10]  and SPICON[9] Description s in  \nTable 123  ............................................................................................ 70 \nChange s to Timer Interval Down Equation and Added Timer \nInterval  Up Equation  ...................................................................... 79 \n \n \n Added Hour:Minute:Second:1.128 Format  Section  ................... 80 \nChanges to  Table  189 ...................................................................... 84 \nRemoved CP -40-10 Package  .......................................................... 92 \nChanges to Ordering Guide  ........................................................... 96 \n \n5/2011— Rev. C to Rev. D  \nChanges to Table 4  .......................................................................... 11 \nChanges to Table 105  ...................................................................... 67 \nUpdated Outline Dimensions  ........................................................ 91 \nChanges to Ordering Guide  ........................................................... 94 \n \n12/2009— Rev. B to Rev. C  \nAdded ADuC7029 Part  ..................................................... Universal  \nAdded Table Numbers  and Renumbered Tables  ............... Universal  \nChanges to Figure Numbers  ............................................. Universal  \nChanges to Table 1  ............................................................................ 6 \nChanges to Figure 3  ......................................................................... 9 \nChanges to Table 3  and Figure 4  ................................................... 10 \nChanges to Table 10  ........................................................................ 16 \nChanges to Figure 55  ...................................................................... 53 \nChanges to Serial Peripheral Interface Section  ........................... 69 \nChanges to Table 137  ...................................................................... 73 \nChanges to Figure 71 and Figure 72  ............................................. 85 \nChanges to Figure 73 and Figure 74  ............................................. 86 \nUpdated Outline Dimensions  ........................................................ 91 \nChanges to Ordering Guide  ........................................................... 94 \n \n3/2007— Rev. A to Rev. B  \nAdded ADuC7028 Part  ..................................................... Universal  \nUpdated Format  ................................................................. Universal  \nChanges to Figure 2  .......................................................................... 5 \nChanges to Table 1  ............................................................................ 6 \nChanges to ADuC7026/ADuC7027 Section  ............................... 23 \nChanges to Figure 21  ...................................................................... 28 \nChanges to Figure 32 Caption  ....................................................... 30 \nChanges to Table 14  ........................................................................ 35 \nChanges to ADC Circuit Overview Section  ................................ 38 \nChanges to Programming Section  ................................................ 44 \nChanges to Flash/EE Control Interface Section  .......................... 45 \nChanges to Table 24  ........................................................................ 47 \nChanges to RSTCLR Register Section  .......................................... 48 \nChanges to Figure 52  ...................................................................... 49 \nChanges to Figure 53  ...................................................................... 50 \nChanges to Comparator Section  ................................................... 50 \nChanges to Oscillator and PLL —Power Control Section  .......... 51 \nChanges to Digital Peripherals Section  ........................................ 54 \nChanges to Interrupt System Section  ........................................... 75  \nChanges  to Timers Section  ............................................................ 76  \nChanges  to External Memory Interf acing Section  ..................... 80 \nAdded IOV DD Supply Sensitivity Section  ..................................... 84 \nChanges to Ordering Guide  ........................................................... 90 \n \n \n \n \n  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 4 of 102 1/2006— Rev. 0 to Rev. A  \nChanges to Table 1  ............................................................................ 6 \nAdded the Flash/EE Memory Reliability Section  ....................... 43 \nChanges to Table 30  ........................................................................ 52 \nChanges to Serial Peripheral Interface  ......................................... 66 \nChanges to Ordering  Guide  .......................................................... 90 \n \n10/2005— Revision 0: Initial Version   \n \n \n \n  \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 5 of 102 GENERAL DESCRIPTION \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 are fully integrated, \n1 MSPS, 12-bit data acquisition systems incorporating high \nperformance multichannel ADCs, 16-bit/32-bit MCUs, and \nFlash®/EE memory on a single chip. \nThe ADC consists of up to 12 single-ended inputs. An additional \nfour inputs are available but are multiplexed with the four DAC \noutput pins. The four DAC outputs are available only on certain \nmodels (ADuC7020, ADuC702 6, ADuC7028, and ADuC7029). \nHowever, in many cases where the DAC outputs are not present, these pins can still be used as additional ADC inputs, giving a maximum of 16 ADC input channels. The ADC can operate in \nsingle-ended or differential input mode. The ADC input voltage \nis 0 V to V\nREF. A low drift band gap reference, temperature sensor, \nand voltage comparator complete the ADC peripheral set. \nDepending on the part model, up to four buffered voltage \noutput DACs are available on-chip. The DAC output range is \nprogrammable to one of three voltage ranges. The devices operate from an on-chip oscillator and a PLL \ngenerating an internal high frequency clock of 41.78 MHz (UCLK). This clock is routed through a programmable clock divider from which the MCU core clock operating frequency  \nis generated. The microcontroller core is an ARM7TDMI®,  \n16-bit/32-bit RISC machine, which offers up to 41 MIPS peak performance. Eight kilobytes of SRAM and 62 kilobytes of nonvolatile Flash/EE memory are provided on-chip. The ARM7TDMI core views all memory and registers as a single linear array. \nOn-chip factory firmware supports in-circuit serial download \nvia the UART or I\n2C serial interface port; nonintrusive emulation \nis also supported via the JTAG interface. These features are \nincorporated into a low cost QuickStart™ development system \nsupporting this MicroConverter® family. \nThe parts operate from 2.7 V to 3.6 V and are specified over an \nindustrial temperature range of −40°C to +125°C. When operating at 41.78 MHz, the power dissipation is typically \n120 mW . The ADuC7019/ 20/21/22/24/25/26/27/28/29 are \navailable in a variety of memory models and packages (see \nOrdering Guide). \n \n1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nDAC2\nDAC3\n3-PHASE\nPWM\n(SEE NOTE 1)ADuC7020\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\n12-BIT\nDAC\n12-BIT\nDAC\nNOTES\n1. SEE APPLICATION NOTE AN-798.\n04955-101ADC0 TO ADC4,\nADC12 TO ADC15\n \nFigure 2. ADuC7020 Functional Block Diagram \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 6 of 102 1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\n3-PHASE\nPWM\n(SEE NOTE 1)ADuC7021\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\nNOTES\n1. SEE APPLICATION NOTE AN-798.\n04955-102ADC0 TO ADC7,\nADC12 TO ADC13\n \nFigure 3. ADuC7021 Functional Block Diagram \n \n1MSPS\n12-BIT ADC\n3-PHASE\nPWM\n(SEE NOTE 1)ADuC7022\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS\nNOTES1. SEE APPLICATION NOTE AN-798.\n04955-103ADC0 TO ADC9\n \nFigure 4. ADuC7022 Functional Block Diagram \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 7 of 102 1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nPWM0 H\nPWM0 L\nPWM1 H\nPWM1 L\nPWM2 H\nPWM2 L3-PHASE\nPWM\n(SEE NOTE 1)ADuC7024\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\nNOTES\n1. SEE APPLICATION NOTE AN-798.\n04955-104ADC0 TO ADC9,\nADC12, ADC13\n \nFigure 5. ADuC7024 Functional Block Diagram \n \n1MSPS\n12-BIT ADC\nPWM0 H\nPWM0 L\nPWM1 H\nPWM1 L\nPWM2 H\nPWM2 L3-PHASE\nPWM\n(SEE NOTE 1)ADuC7025\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS\nNOTES1. SEE APPLICATION NOTE AN-798.\n04955-105ADC0 TO ADC9,\nADC12, ADC13\n \nFigure 6. ADuC7025 Functional Block Diagram \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 8 of 102 1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nDAC2\nDAC3\nPWM0 H\nPWM0 L\nPWM1H\nPWM1 L\nPWM2 H\nPWM2L3-PHASE\nPWM\nEXT. MEMORY\nINTERFACEADuC7026\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\n12-BIT\nDAC\n12-BIT\nDAC\n04955-106ADC0 TO ADC15\n \nFigure 7. ADuC7026 Functional Block Diagram \n \n1MSPS\n12-BIT ADC\nPWM0 H\nPWM0 L\nPWM1H\nPWM1 L\nPWM2 H\nPWM2L3-PHASE\nPWM\nEXT. MEMORY\nINTERFACEADuC7027\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS\n04955-107ADC0 TO ADC15\n \nFigure 8. ADuC7027 Functional Block Diagram \n \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 9 of 102 1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nDAC2\nDAC3\nPWM0 H\nPWM0 L\nPWM1H\nPWM1 L\nPWM2 H\nPWM2L3-PHASE\nPWMADuC7028\nXCLKI\nXCLKO\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\n12-BIT\nDAC\n12-BIT\nDAC\n04955-108ADC0 TO ADC7,\nADC12 TO ADC15\n \nFigure 9. ADuC7028 Functional Block Diagram \n \n1MSPS\n12-BIT ADCDAC012-BIT\nDAC\nDAC1\nDAC2\nDAC3\nPWM0 H\nPWM0 L\nPWM1H\nPWM1 L\nPWM2 H\nPWM2L3-PHASE\nPWMADuC7029\nRSTVREFMUX\nTEMP\nSENSOR\nBAND GAP\nREF\nOSC\nAND PLL\nPSM\nPORCMP0\nCMP1\nCMP OUT\nPLA\n4 GENERAL-\nPURPOSE TIMERS2k × 32 SRAM\n31k × 16 FLASH/EEPROM\nSERIAL I/O\nUART, SPI, I 2CGPIO\nJTAGARM7TDMI-BASED MCU WITH\nADDITIONAL PERIPHERALS12-BIT\nDAC\n12-BIT\nDAC\n12-BIT\nDAC\n04955-109ADC0 TO ADC6,\nADC12 TO ADC15\n \nFigure 10. ADuC7029 Functional Block Diagram \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 10 of 102 DETAILED BLOCK DIAGR AM \n04955-00277 ADC0\n78 ADC1\n79 ADC2/CMP0\n80 ADC3/CMP1\n1 ADC4\n2 ADC5\n3 ADC6\n4 ADC7\n5 ADC8\n6 ADC9\n7 ADC10\n76 ADC11\n9 ADCNEG\n20 BM/P0.0/CMPOUT/PLAI[7]/MS0\n18 P4.6/AD14/PLAO[14]\n19 P4.7/AD15/PLAO[15]\n* SEE ORDERING GUIDE FOR\n FEATURE AVAILABILITY ON\n DIFFERENT MODELS.55\nP4.0/AD8/PLAO[8]56\nP4.1/AD9/PLAO[9]63\nP4.2/AD10/PLAO[10]64\nP4.3/AD11/PLAO[11]65\nP4.4/AD12/PLAO[12]66\nP4.5/AD13/PLAO[13]62\nP1.0/T1/SPM0/PLAI[0]61\nP1.1/SPM1/PLAI[1]60\nP1.2/SPM2/PLAI[2]59\nP1.3/SPM3/PLAI[3]58\nP1.4/SPM4/PLAI[4]/IRQ257\nP1.5/SPM5/PLAI[5]/IRQ352\nP1.6/SPM6/PLAI[6]14\nTMS15\nTDI23\nTDO22\nTCK21\nP0.6/T1/MRST/PLAO[3]49\nP2.1/WS/PWM0H/PLAO[6]50\nP2.2/RS/PWM0L/PLAO[7]17\nP2.3/AE33\nP2.4/PWM0H/MS035\nP2.5/PWM0L/MS136\nP2.6/PWM1H/MS248\nP2.7/PWM1L/MS324\nP0.2/PWM2L/BHE16\nP0.1/PWM2H/BLE34\nP0.3/TRST/A16/ADCBUSY42\nP2.0/SPM9/PLAO[5]/CONVSTART51\nP1.7/SPM7/PLAO[0]MUX12-BIT\nVOLTAGE\nOUTPUT DACBUF 10DAC0*/ADC12\n12-BIT\nVOLTAGE\nOUTPUT DACBUF 11DAC1*/ADC13\n12-BIT\nVOLTAGE\nOUTPUT DACBUF 12DAC2*/ADC14\n12-BIT\nVOLTAGE\nOUTPUT DACBUF 13DAC3*/ADC15\n29P3.0/AD0/PWM0H/PLAI[8]\n30P3.1/AD1/PWM0L/PLAI[9]\n31P3.2/AD2/PWM1H/PLAI[10]\n32P3.3/AD3/PWM1L/PLAI[11]\n38P3.4/AD4/PWM2H/PLAI[12]\n39P3.5/AD5/PWM2L/PLAI[13]\n46P3.6/AD6/PWMTRIP/PLAI[14]\n47P3.7/AD7/PWMSYNC /PLAI[15]\n44XCLKO\n45XCLKI\n40IRQ0/P0.4/PWMTRIP/PLAO[1]/MS1\n41IRQ1/P0.5/ADCBUSY /PLAO[2]/MS243P0.7/ECLK/XCLK/SPM8/PLAO[4]ADuC7026*69\nDACREF\n70\nDACGND\n75\nDACVDD\n37\nRST\n27\nLVDD\n28\nDGND\n54\nIOVDD\n25\nIOGND\n26\nIOVDD\n53\nIOGND\n74\nAVDD\n73\nAVDD\n67\nREFGND\n71\nAGND\n72\nAGND\n8GNDREF\n3-PHASE\nPWMDAC\nCONTROL\nARM7TDMI\nMCU\nCORE62kB FLASH/EE\n(31k × 16 BITS)\n8192 BYTES USER RAM\n(2k × 32 BITS) WAKE-UP/\nRTC TIMER\nPOWER SUPPLY\nMONITOR\nPROG. CLOCK\nDIVIDERJTAG\nEMULATORDOWNLOADER\nPROG. LOGIC\nARRAYSPI/I2C SERIAL\nINTERFACE\nSERIAL PORT MULTIPLEXERUART\nSERIAL PORT\nPORINTERRUPT\nCONTROLLER12-BIT SAR\nADC 1MSPSADC\nCONTROL\nPLLOSC68 VREF VREF\nBAND GAP\nREFERENCECMPOUT/IRQ MUXDACTEMP\nSENSOR\n \nFigure 11.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 11 of 102 SPECIFICATIONS\nAV DD = IOV DD = 2.7 V to 3.6 V , V REF = 2.5 V internal reference, f CORE = 41.78 MHz, T A = −40°C to +125°C, unless otherwise noted.  \nTable 1. \nParameter  Min  Typ  Max  Unit  Test Conditions/Comments \nADC  CHANNEL SPECIFICATIONS      Eight acquisition clocks and fADC/2  \nADC Power -Up Time   5  μs  \nDC Accuracy1, 2      \nResolution  12   Bits  \nIntegral Nonlinearity   ±0.6 ±1.5 LSB 2.5 V internal reference  \n  ±1.0  LSB 1.0 V external reference  \nDifferential Nonlinearity3, 4  ±0.5  +1/−0.9  LSB 2.5 V internal reference  \n  +0.7/−0.6  LSB 1.0 V external reference  \nDC Code Distribution   1  LSB ADC input is a dc voltage  \nENDPOINT ERRORS5      \nOffset Error   ±1 ±2 LSB  \nOffset Error Match  ±1  LSB  \nGain Error   ±2 ±5 LSB  \nGain Error Match  ±1  LSB  \nDYNAMIC PERFORMANCE      fIN = 10 kHz sine wave, f SAMPLE  = 1 MSPS  \nSignal-to -Noise Ratio (SNR)   69  dB Includes distortion and noise components  \nTotal  Harmonic  Distortion (THD)   −78   dB  \nPeak  Harmonic  or Spurious  Noise  \n(PHSN)   −75   dB  \nChannel-to -Channel Crosstalk   −80   dB Measured on adjacent channels  \nANALOG INPUT       \nInput Voltage Ranges       \nDifferential Mode   VCM6 ± V REF/2 V  \nSingle -Ended Mode    0 to V REF V  \nLeakage Current   ±1 ±6 µA  \nInput Capacitance   20  pF During ADC acquisition  \nON-CHIP VOLTAGE REFERENCE      0.47 µF from V REF to AGND  \nOutput Voltage   2.5  V   \nAccuracy    ±5 mV TA = 25°C  \nReference Temperature Coefficient   ±40   ppm/°C   \nPower Supply Rejection Ratio   75  dB  \nOutput Impedance   70  Ω TA = 25°C  \nInternal V REF Power -On Time   1  ms  \nEXTERNAL REFERENCE INPUT       \nInput Voltage Range  0.625  AV DD V  \nDAC CHANNEL SPECIFICATIONS      RL = 5 kΩ, C L = 100 pF  \nDC Accuracy7      \nResolution   12  Bits  \nRelative Accuracy   ±2  LSB  \nDifferential Nonlinearity    ±1 LSB Guaranteed monotonic  \nOffset Error    ±15  mV 2.5 V internal reference  \nGain Error8   ±1 %  \nGain Error Mismatch   0.1  % % of full scale on DAC0  \nANALOG OUTPUTS       \nOutput Voltage Range_0   0 to DAC REF  V DAC REF range: DACGND to DACV DD \nOutput Voltage Range_1   0 to 2.5  V  \nOutput Voltage Range_2   0 to DACV DD  V  \nOutput Impedance   2  Ω  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 12 of 102 Parameter  Min  Typ  Max  Unit  Test Conditions/Comments \nDAC AC CHARACTERISTICS       \nVoltage Output Settling Time   10  µs  \nDigital -to-Analog Glitch Energy   ±20   nV-sec  1 LSB change at major carry (where maximum \nnumber of bits simultaneously change s in the \nDACxDAT register)  \nCOMPARATOR       \nInput Offset Voltage   ±15   mV  \nInput Bias Current   1  µA  \nInput Voltage Range  AGND   AV DD − 1.2  V  \nInput Capacitance   7  pF  \nHysteresis4, 6  2  15 mV Hysteresis turned on or off via the CMPHYST bit in \nthe CMPCON register  \nResponse Time   3  µs 100 mV overdrive and configured with CMPRES = 11  \nTEMPERATURE SENSOR       \nVoltage Output at 25°C   780  mV  \nVoltage TC   −1.3  mV/°C   \nAccuracy   ±3  °C  \nPOWER SUPPLY MONITOR (PSM)       \nIOV DD Trip Point Selection   2.79   V Two selectable trip points  \n  3.07  V  \nPower Supply Trip Point Accuracy   ±2.5  % Of the selected nominal trip point  voltage  \nPOWER -ON-RESET   2.36   V  \nGLITCH IMMUNITY ON RESET PIN4  50  µs  \nWATCHDOG TIMER (WDT)      \nTimeout Period  0  512 sec  \nFLASH/EE MEMORY       \nEndurance9 10,000   Cycles   \nData Retention10 20   Years  TJ = 85°C  \nDIGITAL INPUTS      All digital inputs excluding XCLKI and XCLKO \nLogic 1 Input Current   ±0.2 ±1 µA VIH = IOV DD or V IH = 5 V  \nLogic 0 Input Current   −40  −60  µA VIL = 0 V; except TDI on \nADuC7019/ 20/21/22/24/25/29 \n  −80  −120  µA VIL = 0 V; TDI on ADuC7019 /20/21/22/24/25/29 \nInput Capacitance   10  pF  \nLOGIC INPUTS3     All logic inputs excluding XCLKI  \nVINL, Input Low Voltage    0.8 V  \nVINH, Input High Voltage 2.0   V  \nLOGIC OUTPUTS      All digital outputs excluding XCLKO  \nVOH, Output High Voltage  2.4   V ISOURCE  = 1.6 m A \nVOL, Output Low Voltage11   0.4 V ISINK = 1.6 mA  \nCRYSTAL INPUTS XCLKI and XCLKO       \nLogic Inputs, XCLKI Only       \nVINL, Input Low Voltage   1.1  V  \nVINH, Input High Voltage  1.7  V  \nXCLKI Input Capacitance   20  pF  \nXCLKO Output Capacitance   20  pF  \nINTERNAL OSCILLATOR   32.768  kHz  \n   ±3 %  \n   ±24 % TA = 0°C to 85°C range  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 13 of 102 Parameter  Min  Typ  Max  Unit  Test Conditions/Comments \nMCU CLOCK RATE       \nFrom 32 kHz Internal Oscillator   326  kHz CD12 = 7 \nFrom 32 kHz External Crystal   41.78  MHz  CD12 = 0 \nUsing an External Clock  0.05  44 MHz  TA = 85°C  \n 0.05   41.78  MHz  TA = 125°C  \nSTART -UP TIME      Core clock = 41.78 MHz  \nAt Power -On  130  ms  \nFrom Pause/Nap Mode   24  ns CD12 = 0 \n  3.06  µs CD12 = 7 \nFrom Sleep Mode   1.58  ms  \nFrom Stop Mode   1.7  ms  \nPROGRAMMABLE LOGIC  ARRAY  (PLA)       \nPin Propagation Delay   12  ns From input pin to output pin \nElement Propagation Delay   2.5  ns  \nPOWER REQUIREMENTS13, 14      \nPower Supply Voltage Range       \nAV DD to AGND  and IOV DD to IOGND  2.7  3.6 V  \nAnalog Power Supply Currents       \nAV DD Current   200  µA ADC in idle mode; all parts except ADuC7019  \n  400  µA ADC in idle mode; ADuC7019 only  \nDACV DD Current15  3 25 µA  \nDigital Power Supply Current       \nIOV DD Current in Normal Mode      Code executing from Flash/EE  \n  7 10 mA CD12 = 7 \n  11 15 mA CD12 = 3 \n  40 45 mA CD12 = 0 (41.78 MHz clock)  \nIOV DD Current in Pause Mode  25 30 mA CD12 = 0 (41.78 MHz clock)  \nIOV DD Current in Sleep Mode  250 400 µA TA = 85°C  \n  600 1000 µA TA = 125°C  \nAdditional Power Supply Currents       \nADC   2  mA At 1 MSPS  \n  0.7  mA At 62.5 kSPS  \nDAC   700  µA Per DAC  \nESD TESTS      2.5 V reference, TA = 25°C  \nHBM Passed Up T o   4 kV  \nFCIDM Passed Up  To   0.5 kV  \n \n1 All ADC channel specifications are guaranteed during normal MicroConverter core operation.  \n2 Apply to all ADC input channels.  \n3 Measured using the factory -set default values in  the ADC offset register (ADCOF ) and gain coefficient register  (ADCGN). \n4 Not production tested but supported by design and/or characterization data on production release.  \n5 Measured using the factory -set default values in ADCOF and ADCGN with an external AD845 op amp as an input buffer stage as shown in Figure 59. Based on external ADC \nsystem components ; the user may need to execute a system calibration to remove external endpoint errors and achieve these specifications (see th e Calibration  section).  \n6 The input signal can be centered on any dc common- mode voltage ( VCM) as long as this value is within the ADC voltage input range specified.  \n7 DAC linearity is calculated using a reduced code range of 100 to 3995.  \n8 DAC gain error is calculated using a reduced code ran ge of 100 to int ernal 2.5 V V REF. \n9 Endurance is qualified as per JEDEC Standard 22, Method A117 and measured at −40°C, +25°C, +85°C, and +125°C.  \n10 Retention lifetime equivalent at junction temperature (T J) = 85°C as per JEDEC Standard 22m, Method A117. Re tention lifetime derates with junction temperature.  \n11 Test carried out with a maximum of eight I/Os set to a low output level.  \n12 See the POWCON register.  \n13 Power supply current consumption is measured in normal, pause, and sleep modes under the following c onditions: normal mode with  3.6 V supply , pause m ode with \n3.6 V supply , and sleep mode with 3.6 V supply . \n14 IOV DD power supply current decreases typically by 2 mA during a Flash/EE erase cycle.  \n15 On the ADuC7019/ 20/21/22, this current must be added to the AV DD current.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 14 of 102 TIMING SPECIFICATIONS \nTable 2. External Memory Write Cycle \nParameter Min Typ Max Unit \nCLK1  UCLK   \ntMS_AFTER_CLKH  0  4 ns \ntADDR_AFTER_CLKH  4  8 ns \ntAE_H_AFTER_MS   ½ CLK   \ntAE  (XMxPAR[14:12] + 1) × CLK   \ntHOLD_ADDR_AFTER_AE_L   ½ CLK + (!XMxPAR[10]) × CLK   \ntHOLD_ADDR_BEFORE_WR_L   (!XMxPAR[8]) × CLK   \ntWR_L_AFTER_AE_L   ½ CLK + (!XMxPAR[10] + !XMxPAR[8]) × CLK   \ntDATA_AFTER_WR_L  8  12 ns \ntWR  (XMxPAR[7:4] + 1) × CLK   \ntWR_H_AFTER_CLKH  0  4 ns \ntHOLD_DATA_AFTER_WR_H   (!XMxPAR[8]) × CLK   \ntBEN_AFTER_AE_L   ½ CLK   \ntRELEASE_MS_AFTER_WR_H   (!XMxPAR[8] + 1) × CLK   \n \n1 See Table 78. \n \n04955-052CLKCLK\ntMS_AFTER_CLKH\ntAE_H_AFTER_MS\ntAEtWR_L_AFTER_AE_LMSx\nAE\nWS\nRS\nAD[16:1] FFFF 9ABC 5678 9ABE 1234\nBLE\nBHE\nA16tWR\ntWR_H_AFTER_CLKH\ntHOLD_DATA_AFTER_WR_H\ntHOLD_ADDR_AFTER_AE_L\ntHOLD_ADDR_BEFORE_WR_L\ntDATA_AFTER_WR_L\ntBEN_AFTER_AE_LtADDR_AFTER_CLKHtRELEASE_MS_AFTER_WR_H\n \nFigure 12. External Memory Write Cycle (See Table 78) \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 15 of 102 Table 3. External Memory Read Cycle  \nParameter  Min  Typ  Max  Unit  \nCLK1 1/MD c lock  ns typ × ( POWCON[2:0] + 1)    \ntMS_AFTER_CLKH  4  8 ns \ntADDR_AFTER_CLKH  4  16 ns \ntAE_H_AFTER_MS   ½ CLK   \ntAE  (XMxPAR[14:12] + 1) × CLK    \ntHOLD_ADDR_AFTER_AE_L   ½ CLK + (! XMxPAR[10] ) × CLK    \ntRD_L_AFTER_AE_L   ½ CLK + (! XMxPAR[10]+ ! XMxPAR[9] ) × CLK    \ntRD_H_AFTER_CLKH  0  4  \ntRD  (XMxPAR[3:0] + 1) × CLK    \ntDATA_BEFORE_RD_H  16    ns \ntDATA_AFTER_RD_H  8 + (! XMxPAR[9]) × CLK     \ntRELEASE_MS_AFTER_RD_H   1 × CLK     \n \n1 See Table 78. \n \n04955-053ECLK\nMSx\nAE\nWS\nRS\nAD[16:1]\nBHE\nBLE\nA16FFFF 2348 XXXX CDEF XX 234A XX 89ABCLK\ntAE_H_AFTER_MS\ntAE\ntHOLD_ADDR_AFTER_AE_LtRD_L_AFTER_AE_L\ntRD tRD_H_AFTER_CLKH\ntADDR_AFTER_CLKHtRELEASE_MS_AFTER_RD_H\ntDATA_BEFORE_RD_H\ntDATA_AFTER_RD_HtMS_AFTER_CLKH\n \nFigure 13. External Memory Read Cycle  (See Table 78) \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 16 of 102 Table 4. I2C Timing in Fast Mode (400 kHz) \n  Slave Master  \nParameter Description Min Max Typ Unit \ntL SCL low pulse width1 200  1360 ns \ntH SCL high pulse width1 100  1140 ns \ntSHD Start condition hold time 300   ns \ntDSU Data setup time 100  740 ns \ntDHD Data hold time 0  400 ns \ntRSU Setup time for repeated start 100   ns \ntPSU Stop condition setup time 100  400 ns \ntBUF Bus-free time between a stop condit ion and a start condition 1.3   \uf06ds \ntR Rise time for both SCL and SDA  300 200 ns \ntF Fall time for both SCL and SDA  300  ns \ntSUP Pulse width of spike suppressed  50  ns \n \n1 tHCLK depends on the clock divider or CD bits in the POWCON MMR. t HCLK = t UCLK/2CD; see Figure 67. \n \nTable 5. I2C Timing in Standa rd Mode (100 kHz) \n  Slave Master  \nParameter Description Min Max Typ Unit \ntL SCL low pulse width1 4.7   μs \ntH SCL high pulse width1 4.0   ns \ntSHD Start condition hold time 4.0   μs \ntDSU Data setup time 250   ns \ntDHD Data hold time 0 3.45  μs \ntRSU Setup time for repeated start 4.7   μs \ntPSU Stop condition setup time 4.0   μs \ntBUF Bus-free time between a stop conditio n and a start condition 4.7   μs \ntR Rise time for both SCL and SDA  1  μs \ntF Fall time for both SCL and SDA  300  ns \n \n1 tHCLK depends on the clock divider or CD bits in the POWCON MMR. t HCLK = t UCLK/2CD; see Figure 67. \n \n \n04955-054SDA (I/O)tBUF\nMSB LSB ACK MSB\n1 9 8 2–7 1 SCL (I)\nPS\nSTOP\nCONDITIONSTART\nCONDITIONS(R)\nREPEATED\nSTARTtSUP\ntR\ntF\ntFtRtH\ntL tSUPtDSUtDHD\ntRSUtDHDtDSU\ntSHDtPSU\n \nFigure 14. I2C Compatible Interface Timing \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 17 of 102 Table 6. SPI Master Mode Timing (Phase  Mode = 1)  \nParameter  Description  Min  Typ  Max  Unit  \ntSL SCLK low pulse width1  (SPIDIV + 1) × t HCLK  ns \ntSH SCLK high pulse width1  (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLK edge    25 ns \ntDSU Data input setup time before SCLK edge2 1 × t UCLK   ns \ntDHD Data input hold time after SCLK edge2 2 × t UCLK   ns \ntDF Data output fall time  5 12.5 ns \ntDR Data output rise time  5 12.5 ns \ntSR SCLK rise time   5 12.5 ns \ntSF SCLK fall time   5 12.5 ns \n \n1 tHCLK depends on the clock divider or CD bits in the POWCONMMR. t HCLK = t UCLK/2CD; see Figure 67. \n2 tUCLK = 23.9 ns. It corresponds to the 41.78  MHz internal clock from the PLL before the clock divider; see Figure 67. \n \n04955-055SCLK\n(POLARITY = 0)\nSCLK\n(POLARITY = 1)\nMOSI MSB BITS 6 TO 1 LSB\nMISO MSB IN BITS 6 TO 1 LSB INtSH\ntSL\ntSR tSF\ntDR tDFtDAV\ntDSU\ntDHD \nFigure 15. SPI Master Mode Timing (P hase  Mode = 1)  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 18 of 102 Table 7. SPI Master Mode Timing (Phase  Mode = 0)  \nParameter  Description  Min  Typ  Max  Unit  \ntSL SCLK low pulse width1  (SPIDIV + 1) × t HCLK  ns \ntSH SCLK high pulse width1  (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLK edge    25 ns \ntDOSU Data output setup before SCLK edge    75 ns \ntDSU Data input setup time before SCLK edge2 1 × t UCLK   ns \ntDHD Data input hold time after SCLK edge2 2 × t UCLK   ns \ntDF Data output fall time  5 12.5 ns \ntDR Data output rise time  5 12.5 ns \ntSR SCLK rise time   5 12.5 ns \ntSF SCLK fall time   5 12.5  ns \n \n1 tHCLK depends on the clock div ider or CD bits in the POWCONMMR . tHCLK = t UCLK/2CD; see Figure 67.  \n2 tUCLK = 23.9 ns . It corresponds to the 41.78 MHz internal clock from the PLL before the clock divider;  see Figure 67. \n \n04955-056SCLK\n(POLARITY = 0)\nSCLK\n(POLARITY = 1)tSH\ntSL\ntSR tSF\nMOSI MSB BITS 6 TO 1 LSB\nMISO MSB IN BITS 6 TO 1 LSB INtDR tDFtDAVtDOSU\ntDSU\ntDHD \nFigure 16. SPI Master Mode Timing (P hase Mode = 0)  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 19 of 102 Table 8. SPI Slave Mode Timing (Phsae Mode = 1)  \nParameter  Description  Min  Typ  Max  Unit  \ntCS CS to SCLK edge1  (2 × t HCLK) + (2 × t UCLK)   ns \ntSL SCLK low pulse width2  (SPIDIV + 1) × t HCLK  ns \ntSH SCLK high pulse width2  (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLK edge    25 ns \ntDSU Data input setup time before SCLK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLK edge1 2 × t UCLK   ns \ntDF Data output fall time  5 12.5 ns \ntDR Data output rise time  5 12.5 ns \ntSR SCLK rise time   5 12.5 ns \ntSF SCLK fall time   5 12.5 ns \ntSFS CS high after SCLK edge  0   ns \n \n1 tUCLK = 23.9 ns. It corresponds to the 41.78 MHz internal clock from the PLL before the clock divider ; see Figure 67. \n2 tHCLK depends on the clock div ider or CD bits in the POWCONMMR . tHCLK = t UCLK/2CD; see Figure 67. \n \n04955-057SCLK\n(POLARITY = 0)CS\nSCLK\n(POLARITY = 1)tSH\ntSL\ntSR tSFtSFS\nMISO MSB BITS 6 TO 1 LSB\nMOSI MSB IN BITS 6 TO 1 LSB IN\ntDHDtDSUtDAV tDR tDFtCS\n \nFigure 17. SPI Slave Mode Timing (P hase  Mode = 1)  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 20 of 102 Table 9. SPI Slave Mode Timing (Phase Mode = 0)  \nParameter  Description  Min  Typ  Max  Unit  \ntCS CS to SCLK edge1  (2 × t HCLK) + (2 × t UCLK)   ns \ntSL SCLK low pulse width2  (SPIDIV + 1) × t HCLK  ns \ntSH SCLK high pulse width2  (SPIDIV + 1) × t HCLK  ns \ntDAV Data output valid after SCLK edge    25 ns \ntDSU Data input setup time before SCLK edge1 1 × t UCLK   ns \ntDHD Data input hold time after SCLK edge1 2 × t UCLK   ns \ntDF Data output fall time  5 12.5 ns \ntDR Data output rise time  5 12.5 ns \ntSR SCLK rise time   5 12.5 ns \ntSF SCLK fall time   5 12.5 ns \ntDOCS Data output valid after CS edge    25 ns \ntSFS CS high after SCLK edge 0   ns \n \n1 tUCLK = 23.9 ns. It corresponds to the 41.78 MHz internal clock from the PLL before the cloc k divider; see Figure 67. \n2 tHCLK depends on the clock div ider or CD bits in the POWCONMMR. t HCLK = t UCLK/2CD; see Figure 67. \n \n04955-058SCLK\n(POLARITY = 0)CS\nSCLK\n(POLARITY = 1)tSH tSL\ntSR tSFtSFS\nMISO\nMOSI MSB IN BITS 6 TO 1 LSB IN\ntDHDtDSUMSB BITS 6 TO 1 LSBtDOCStDAV\ntDR tDFtCS\n \nFigure 18. SPI Slave Mode Timing (Phase Mode = 0)  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 21 of 102 ABSOLUTE MAXIMUM RAT INGS  \nAGND = REFGND = DACGND = GND REF, T A = 25°C, unless \notherwise noted.  \nTable 10.  \n Stresses at or above those listed under Absolute Maximum \nRatings may cause permanent damage to the product. This is a \nstress rating only; functional operation of the product at these or any other conditions above those indicated in the operational \nsection of this specification is not implied. Operation beyond \nthe maximum operating conditio ns for extended periods may \naffect product reliability.  \nOnly one absolute maximum rating can be applied at any one time.  \nESD CAUTION  \n \n  \n \n \n  \n \n \n  Parameter  Rating  \nAV DD to IOV DD −0.3 V to +0.3 V  \nAGND to DGND  −0.3 V to +0.3 V  \nIOV DD to IOGND, AV DD to AGND  −0.3 V to +6 V  \nDigital Input Voltage to IOGND  −0.3 V to +5.3 V  \nDigital Output Voltage to IOGND  −0.3 V to IOV DD + 0.3 V  \nVREF to AGND  −0.3 V to AV DD + 0.3 V  \nAnalog Inputs to AGND  −0.3 V to AV DD + 0.3 V  \nAnalog Outputs to AGND  −0.3 V to AV DD + 0.3 V  \nOperating Temperature Range, Industrial  –40°C to +125°C  \nStorage Temperature Range  –65°C to +150°C  \nJunction Temperature  150°C  \nθJA Thermal Impedance   \n40-Lead LFCSP  26°C/W  \n49-Ball CSP_BGA  80°C/W  \n64-Lead LFCSP  24°C/W  \n64-Ball CSP_BGA  75°C/W  \n64-Lead  LQFP  47°C/W  \n80-Lead  LQFP  38°C/W  \nPeak Solder Reflow Temperature   \nSnPb Assemblies (10 sec to 30 sec)  240°C  \nRoHS Compliant Assemblies \n(20 sec to 40 sec) 260°C  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \nRev. H | Page 22 of 102 PIN CONFIGURATIONS AND FUNCTION DESCRIPT IONS  \nADu C7019/AD uC7020/AD uC7021/AD uC7022 \nADC3/CMP1\nADC4\nNOTES\n1. THE EXPOSED PAD MUST BE SOLDERED FOR MECHANICAL PURPOSES AND LEFT UNCONNECTED.GNDREF\nDAC0/ADC12\nDAC1/ADC13\nDAC2/ADC14\nDAC3/ADC15\nTMS\nTDI\nBM/P0.0/CMPOUT/PLAI[7]P1.3/SPM3/PLAI[3]\nP1.4/SPM4/PLAI[4]/IRQ2\nP1.5/SPM5/PLAI[5]/IRQ3\nP1.6/SPM6/PLAI[6]\nP1.7/SPM7/PLAO[0]\nXCLKI\nXCLKO\nP0.7/ECLK/XCLK/SPM8/PLAO[4]\nP2.0/SPM9/PLAO[5]/CONVSTART\nIRQ1/P0.5/ADCBUSY/PLAO[2]P0.6/T1/MRST/PLAO[3]\nTCK\nTDO\nIOGND\nIOVDD\nLVDD\nDGND\nP0.3/TRST/ADCBUSY\nRST\nIRQ0/P0.4/PWMTRIP/PLAO[1]ADC2/CMP0\nADC1\nADC0AV\nDD\nAGND\nVREF\nP4.2/PLAO[10]\nP1.0/T1/SPM0/PLAI[0]\nP1.1/SPM1/PLAI[1]\nP1.2/SPM2/PLAI[2]\n04955-0641\n2\n3\n4\n5\n6\n7\n8\n9\n102324252627282930\n22\n21111213 15 1716 181920 14\n3334353637383940 3231\nADuC7019\nTOP VIEW\n(Not to Scale)\nF\nigure 19. 40-Lead LFCSP _WQ Pin Configuration (ADuC7019) \n04955-090NOTES\n1. THE EXPOSED PAD MUST BE SOLDERED FOR MECHANICAL PURPOSES AND LEFT UNCONNECTED.ADC3/CMP1\nADC4\nGNDREF\nDAC0/ADC12\nDAC1/ADC13\nDAC2/ADC14\nDAC3/ADC15\nTMS\nTDI\nBM/P0.0/CMPOUT/PLAI[7]\nADC2/CMP0\nADC1\nADC0\nAVDD\nAGND\nVREF\nP4.2/PLAO[10]\nP1.0/T1/SPM0/PLAI[0]\nP1.1/SPM1/PLAI[1]\nP1.2/SPM2/PLAI[2]P0.6/T1/MRST/PLAO[3]\nTCK\nTDO\nIOGND\nIOVDD\nLVDD\nDGND\nP0.3/TRST/ADCBUSY\nRST\nIRQ0/P0.4/PWMTRIP/PLAO[1]P1.3/SPM3/PLAI[3]\nP1.4/SPM4/PLAI[4]/IRQ2\nP1.5/SPM5/PLAI[5]/IRQ3\nP1.6/SPM6/PLAI[6]\nP1.7/SPM7/PLAO[0]\nXCLKI\nXCLKO\nP0.7/ECLK/XCLK/SPM8/PLAO[4]\nP2.0/SPM9/PLAO[5]/CONVSTART\nIRQ1/P0.5/ADCBUSY /PLAO[2]1\n2\n3\n4\n5\n6\n7\n8\n9\n102324252627282930\n22\n21111213 15 1716 181920 14\n3334353637383940 3231\nADuC7020\nTOP VIEW\n(Not to Scale)\nF\nigure 20. 40-Lead LFCSP_WQ Pin Configuration (ADuC7020 ) \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 23 of 102 \n04955-065ADC4\nADC5\nADC6\nADC7\nGNDREF\nDAC0/ADC12\nDAC1/ADC13\nTMS\nTDI\nBM/P0.0/CMPOUT/PLAI[7]P1.3/SPM3/PLAI[3]\nP1.4/SPM4/PLAI[4]/IRQ2\nP1.5/SPM5/PLAI[5]/IRQ3\nP1.6/SPM6/PLAI[6]\nP1.7/SPM7/PLAO[0]\nXCLKI\nXCLKO\nP0.7/ECLK/XCLK/SPM8/PLAO[4]\nP2.0/SPM9/PLAO[5]/CONVSTART\nIRQ1/P0.5/ADCBUSY/PLAO[2]P0.6/T1/MRST/PLAO[3]\nTCK\nTDO\nIOGND\nIOVDD\nLVDD\nDGND\nP0.3/TRST/ADCBUSY\nRST\nIRQ0/P0.4/PWMTRIP/PLAO[1]ADC3/CMP1\nADC2/CMP0\nADC1\nADC0\nAVDD\nAGND\nVREF\nP1.0/T1/SPM0/PLAI[0]\nP1.1/SPM1/PLAI[1]\nP1.2/SPM2/PLAI[2]\nNOTES\n1. THE EXPOSED PAD MUST BE SOLDERED FOR MECHANICAL PURPOSES AND LEFT UNCONNECTED.1\n2\n3\n4\n5\n6\n7\n8\n9\n102324252627282930\n22\n21111213 15 1716 181920 14\n3334353637383940 3231\nADuC7021\nTOP VIEW\n(Not to Scale)\n \nFigure 21. 40- Lead LFCSP_ WQ Pin Configuration (ADuC7021)  \n \n04955-066ADC5\nADC6\nADC7\nADC8\nADC9\nGNDREF\nTMS\nTDI\nBM/P0.0/CMPOUT/PLAI[7]\nP0.6/T1/MRST/PLAO[3]P1.2/SPM2/PLAI[2]\nP1.3/SPM3/PLAI[3]\nP1.4/SPM4/PLAI[4]/IRQ2\nP1.5/SPM5/PLAI[5]/IRQ3\nP1.6/SPM6/PLAI[6]\nP1.7/SPM7/PLAO[0]\nXCLKI\nXCLKO\nP0.7/ECLK/XCLK/SPM8/PLAO[4]\nP2.0/SPM9/PLAO[5]/CONVSTARTTCK\nTDO\nIOGND\nIOVDD\nLVDD\nDGND\nP0.3/TRST/ADCBUSY\nRST\nIRQ0/P0.4/PWMTRIP/PLAO[1]\nIRQ1/P0.5/ADCBUSY /PLAO[2]ADC4\nADC3/CMP1\nADC2/CMP0\nADC1\nADC0\nAVDD\nAGND\nVREF\nP1.0/T1/SPM0/PLAI[0]\nP1.1/SPM1/PLAI[1]\nNOTES\n1. THE EXPOSED PAD MUST BE SOLDERED FOR MECHANICAL PURPOSES AND LEFT UNCONNECTED.1\n2\n3\n4\n5\n6\n7\n8\n9\n102324252627282930\n22\n21111213 15 1716 181920 14\n3334353637383940 3231\nADuC7022\nTOP VIEW\n(Not to Scale)\n \nFigure 22. 40- Lead LFCSP_ WQ Pin Configuration (ADuC7022)  \n \n   \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 24 of 102 Table 11. Pin Function Descriptions (ADuC7019/ADuC7020/ADuC7021/ADuC7022)  \nPin No.    \n7019/7020  7021  7022  Mnemonic  Description  \n38 37 36 ADC0  Single -Ended or Differential Analog Input 0.  \n39 38 37 ADC1  Single -Ended or Differential Analog Input 1.  \n40 39 38 ADC2/CMP0  Single -Ended or Differential Analog Input 2/Comparator Positive Input.  \n1 40 39 ADC3/CMP1  Single -Ended or Differential Analog Input 3 (Buffered Input on ADuC7019)/ \nComparator Negative Input.  \n2 1 40 ADC4  Single -Ended or Differential Analog Input 4.  \n‒ 2 1 ADC5  Single -Ended or Differential Analog Input 5.  \n‒ 3 2 ADC6  Single -Ended or Differential  Analog Input 6.  \n‒ 4 3 ADC7  Single -Ended or Differential Analog Input 7.  \n‒ ‒ 4 ADC8  Single -Ended or Differential Analog Input 8.  \n‒ ‒ 5 ADC9  Single -Ended or Differential Analog Input 9.  \n3 5 6 GND REF Ground Voltage Reference for the ADC. For optimal performance, the \nanalog power supply should be separated from IOGND and DGND.  \n4 6 ‒ DAC0/ADC12  DAC0 Voltage Output/Single -Ended or Differential Analog Input 12.  \n5 7 ‒ DAC1/ADC13  DAC1 Voltage Output/Single -Ended or Differential Analog Input 13.  \n6 ‒ ‒ DAC2/ADC14  DAC2 Voltage Output/Single -Ended or Differential Analog Input 14.  \n7 ‒ ‒ DAC3/ADC15  DAC3 Voltage Output on ADuC7020. On the ADuC7019, a 10 nF capacitor \nmust  be connected between this pin and AGND/Single -Ended or \nDifferential Analog Input 15  (see Figure 53). \n8 8 7 TMS  Test Mode Select, JTAG Test Port Input. Debug and download access.  \nThis pin has an internal pull -up resistor to IOV DD. In some cases , an external \npull-up resistor (~100K) is also required to ensure that the part does not \nenter an erroneous state.  \n9 9 8 TDI Test Data In, JTAG Test Port Input. Debug and download access.  \n10 10 9 BM/P0.0/CMP OUT/PLAI[7]  Multifunction I/O Pin. Boot Mode (BM). The ADuC7019/20/21/22 enter \nserial download mode if BM is low at reset and execute code if BM is \npulled high at reset through a 1  kΩ resistor/General -Purpose Input and \nOutput Port 0.0/Voltage Comparator Output/Programmable Logic Array Input Element 7 . \n11 11 10 P0.6/T1/MRST/PLAO[3]  Multifunction Pin. Driven low after reset. General -Purpose Output Port 0.6/ \nTimer1 Input/Power -On Reset Output/Programmable Logic Array Output \nElement 3.  \n12 12 11 TCK  Test Clock, JTAG Test Port Input. Debug and download access. This pin has \nan internal pull -up resistor to IOV DD. In some cases an external pull -up \nresistor (~100K) is also required to ensure  that the part does not enter an \nerroneous state.  \n13 13 12 TDO  Test Data Out, JTAG Test Port Output. Debug and download access.  \n14 14 13 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \n15 15 14 IOV DD 3.3 V Supply for GPIO (see Table 78) and Input of the On- Chip Voltage \nRegulator.  \n16 16 15 LVDD 2.6 V Output of the On- Chip Voltage Regulator. This output must be \nconnected to a 0.47 µF capacitor to DGND only.  \n17 17 16 DGND  Ground for Core Logic.  \n18 18 17 P0.3/TRST/ADC BUSY General -Purpose Input and Output Port 0.3/Test Reset, JTAG Test Port Input/  \nADC BUSY Signal Output.  \n19 19 18 RST Reset Input, Active Low.  \n20 20 19 IRQ0/P0.4/PWM TRIP/PLAO[1]  Multifunction I/O Pin. External Interrupt Request 0, Active High/General -\nPurpose Input and Output Port 0.4/PWM Trip External Input/Programmable \nLogic Array Output Element 1.  \n21 21 20 IRQ1/P0.5/ADC BUSY/PLAO[2]  Multifunction I/O Pin. External Interrupt Request 1, Active High/General -\nPurpose Input and Output  Port 0.5/ADC BUSY Signal Output/Programmable \nLogic Array Output Element 2.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 25 of 102 Pin No.    \n7019/7020  7021  7022  Mnemonic  Description  \n22 22 21 P2.0/SPM9/PLAO[5]/ CONV START Serial Port Multiplexed. General -Purpose Input and Output Port 2.0/UART/ \nProgram mable Logic Array Output Element 5/Start Conversion Input Signal  \nfor ADC.  \n23 23 22 P0.7/ECLK/XCLK/SPM8/PLAO[4]  Serial Port Multiplexed. General -Purpose Input and Output Port 0.7/ \nOutput for External Clock Signal/Input to the Internal Clock Generator \nCircuits/UART/ Programmable Logic Array Output Element 4.  \n24 24 23 XCLKO  Output from the Crystal Oscillator Inverter.  \n25 25 24 XCLKI  Input to the Crystal Oscillator Inverter and Input to the Internal Clock \nGenerator Circuits.  \n26 26 25 P1.7/SPM7/PLAO[0]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.7/UART, \nSPI/Programmable Logic Array Output Element 0.  \n27 27 26 P1.6/SPM6/PLAI[6]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.6/UART, \nSPI/Programmable Logic Array Input Element 6.  \n28 28 27 P1.5/SPM5/PLAI[5]/IRQ3  Serial Port Multiplexed. General -Purpose Input and Output Port 1.5/UART, \nSPI/Programmable Logic Array Input Element 5/External Interrupt \nRequest  3, Active High.  \n29 29 28 P1.4/SPM4/PLAI[4]/IRQ2  Serial Port Multiplexed. General -Purpose Input and Output Port 1.4/UART, \nSPI/Programmable Logic Array Input Element 4/External Interrupt \nRequest  2, Active High.  \n30 30 29 P1.3/SPM3/PLAI[3]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.3/ UART, \nI2C1/Programmable Logic Array Input Element 3.  \n31 31 30 P1.2/SPM2/PLAI[2]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.2/UART, \nI2C1/Programmable Logic Array Input Element 2.  \n32 32 31 P1.1/SPM1/PLAI[1]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.1/UART, \nI2C0/Programmable Logic Array Input Element 1.  \n33 33 32 P1.0/T1/SPM0/PLAI[0]  Serial Port Multiplexed. General -Purpose Input and  Output Port 1.0/ \nTimer1 Input/ UART, I2C0/Programmable Logic Array Input Element  0. \n34 ‒ ‒ P4.2/PLAO[10]  General -Purpose Input and Output Port 4.2/Programmable Logic Array \nOutput Element 10.  \n35 34 33 VREF 2.5 V Internal Voltage Reference. Must be connected to a 0.47 µF capacitor \nwhen using the internal reference.  \n36 35 34 AGND  Analog Ground. Ground reference point for the analog circuitry.  \n37 36 35 AV DD 3.3 V Analog Power.  \n0 0 0 EP Exposed Pad . The pin configuration for the ADuC7019/ADuC7020/  \nADuC7021/ADuC7022 has an expo sed pad that must be soldered for \nmechanical purposes and left unconnected.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\nRev. H | Page 26 of 102 ADuC7024/ADuC7025 \n04955-0671 ADC4\n2 ADC5\n3 ADC6\n4 ADC7\n5 ADC8\n6 ADC9\n7 GND REF\n8 ADCNEG\n9 DAC0/ADC12\n10 DAC1/ADC13\n11 TMS\n12 TDI\n13 P4.6/PLAO[14]\n14 P4.7/PLAO[15]\n15 BM/P0.0/CMP OUT/PLAI[7]\n16 P0.6/T1/MRST/PLAO[3]48 P1.2/SPM2/PLAI[2]\n47 P1.3/SPM3/PLAI[3]\n46 P1.4/SPM4/PLAI[4]/IRQ2\n45 P1.5/SPM5/PLAI[5]/IRQ3\n44 P4.1/PLAO[9]\n43 P4.0/PLAO[8]42 IOV\nDD\n41 IOGND40 P1.6/SPM6/PLAI[6]\n39 P1.7/SPM7/PLAO[0]\n38 P3.7/PWM\nSYNC /PLAI[15]\n37 P3.6/PWM TRIP/PLAI[14]\n36 XCLKI\n35 XCLKO\n34 P0.7/ECLK/XCLK/SPM8/PLAO[4]\n33 P2.0/SPM9/PLAO[5]/CONV START64 ADC3/CMP1\n63 ADC2/CMP062 ADC161 ADC060 DACV\nDD\n59 AV DD\n58 AGND57 DACGND56 DAC\nREF\n55 V REF\n54 P4.5/PLAO[13]53 P4.4/PLAO[12]52 P4.3/PLAO[11]51 P4.2/PLAO[10]50 P1.0/T1/SPM0/PLAI[0]49 P1.1/SPM1/PLAI[1]\nTOP VIEW\n(Not to Scale)ADuC7024/\nADuC7025PIN 1\nINDICATOR17 TCK\n18 TDO\n19 IOGND\n20 IOV DD\n21 LVDD\n22 DGND\n23 P3.0/PWM0 H/PLAI[8]\n24 P3.1/PWM0 L/PLAI[9]\n25 P3.2/PWM1 H/PLAI[10]\n26 P3.3/PWM1 L/PLAI[11]\n27 P0.3/TRST/ADC BUSY\n28 RST\n29 P3.4/PWM2 H/PLAI[12]\n30 P3.5/PWM2 L/PLAI[13]\n31 IRQ0/P0.4/PWM TRIP/PLAO[1]\n32 IRQ1/P0.5/ADC BUSY /PLAO[2]\nNOTES\n1. THE EXPOSED PAD MUST BE SOLDERED FOR MECHANICAL PURPOSES AND LEFT UNCONNECTED.\nFi\ngure 23. 64-Lead LFCSP_VQ Pin Configuration (ADuC7024/ADuC7025) \n04955-0681 ADC4\n2 ADC5\n3 ADC6\n4 ADC7\n5 ADC8\n6 ADC9\n7 GND REF\n8 ADCNEG\n9 DAC0/ADC12\n10 DAC1/ADC13\n11 TMS\n12 TDI\n13 P4.6/PLAO[14]\n14 P4.7/PLAO[15]\n15 BM/P0.0/CMP OUT/PLAI[7]\n16 P0.6/T1/MRST/PLAO[3]48 P1.2/SPM2/PLAI[2]\n47 P1.3/SPM3/PLAI[3]46 P1.4/SPM4/PLAI[4]/IRQ245 P1.5/SPM5/PLAI[5]/IRQ344 P4.1/PLAO[9]43 P4.0/PLAO[8]42 IOV\nDD\n41 IOGND40 P1.6/SPM6/PLAI[6]39 P1.7/SPM7/PLAO[0]38 P3.7/PWM\nSYNC/PLAI[15]\n37 P3.6/PWM TRIP/PLAI[14]\n36 XCLKI35 XCLKO34 P0.7/ECLK/XCLK/SPM8/PLAO[4]\n33 P2.0/SPM9/PLAO[5]/CONV\nSTART17 TCK\n18 TDO\n19 IOGND\n20 IOV DD\n21 LVDD\n22 DGND\n23 P3.0/PWM0 H/PLAI[8]\n24 P3.1/PWM0 L/PLAI[9]\n25 P3.2/PWM1 H/PLAI[10]\n26 P3.3/PWM1 L/PLAI[11]\n27 P0.3/TRST/ADC BUSY\n28 RST\n29 P3.4/PWM2 H/PLAI[12]\n30 P3.5/PWM2 L/PLAI[13]\n31 IRQ0/P0.4/PWM TRIP/PLAO[1]\n32 IRQ1/P0.5/ADC BUSY /PLAO[2]64 ADC3/CMP1\n63 ADC2/CMP062 ADC1\n61 ADC0\n60 DACV\nDD\n59 AV DD\n58 AGND57 DACGND56 DAC\nREF\n55 V REF\n54 P4.5/PLAO[13]53 P4.4/PLAO[12]52 P4.3/PLAO[11]51 P4.2/PLAO[10]50 P1.0/T1/SPM0/PLAI[0]49 P1.1/SPM1/PLAI[1]\nTOP VIEW\n(Not to Scale)ADuC7024/\nADuC7025PIN 1\nINDICATOR\n \nFigure 24. 64-Lead LQFP Pin Configuration (ADuC7024/ADuC7025) \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 27 of 102 Table 12. Pin Function Descriptions (ADuC7024/ADuC7025 64-Lead LFCSP_VQ and 64- Lead LQFP)  \nPin No. Mnemonic  Description  \n1 ADC4  Single -Ended or Differential Analog Input 4.  \n2 ADC5  Single -Ended or Differential Analog Input 5.  \n3 ADC6  Single -Ended or Differential Analog Input 6.  \n4 ADC7  Single -Ended or Differential Analog Input 7.  \n5 ADC8  Single -Ended or Differential Analog Input 8.  \n6 ADC9  Single -Ended or Differential Analog Input 9.  \n7 GND REF Ground Voltage Reference for the ADC. For optimal performance, the analog power supply \nshould be separated from IOGND and DGND.  \n8 ADCNEG  Bias Point or Negative Analog Input of the ADC in Pseudo Differential Mode. Must be connected \nto the ground of the signal to convert. This bias point must be between 0 V and 1 V.  \n9 DAC 0/ADC12  DAC0  Voltage Output/Single -Ended or Differential Analog Input 12. DAC outputs are not present \non the ADuC7025. \n10 DAC1/ADC13  DAC1 Voltage Output/Single -Ended or Differential Analog Input 13. DAC outputs are not present \non the ADuC7025. \n11 TMS  JTAG Test Port Input, Test Mode Select. Debug and download access.  \n12 TDI JTAG Test Port Input, Test Data In. Debug and download access  \n13 P4.6/PLAO[14]  General -Purpose Input and Output Port 4.6/Programmable Logic Array Output Element 14.  \n14 P4.7/PLAO[15]  General -Purpose Input and Output Port 4.7/Programmable Logic Array Output Element 15.  \n15 BM/P0.0/CMP OUT/PLAI[7]  Multifunction I/O Pin. Boot mode. The ADuC7024/ADuC7025 enter download mode if BM is low at \nreset and execute code if BM is pulled high at rese t through a 1 k Ω resistor/General -Purpose Input \nand Output Port 0.0/Voltage Comparator Output/Programmable Logic Array Input Element 7.  \n16 P0.6/T1/MRST/PLAO[3]  Multifunction Pin, Driven Low After Reset. General -Purpose Output Port 0.6/Timer1 Input/Power -\nOn Reset Output/Programmable Logic Array Output Element 3.  \n17 TCK  JTAG Test Port Input, Test Clock. Debug and download access.  \n18 TDO  JTAG Test Port Output, Test Data Out. Debug and download access.  \n19 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \n20 IOV DD 3.3 V Supply for GPIO (see Table 78) and Input of the On -Chip Voltage Regulator.  \n21 LVDD 2.6 V Output of the On- Chip Voltage Regulator. This output must be connected to a 0.47 µF \ncapacitor to DGND only.  \n22 DGND  Ground for Core Logic.  \n23 P3.0/PWM0 H/PLAI[8]  General -Purpose Input and Output Port 3.0/PWM Phase 0 High -Side Output/Programmable Logic  \nArray Input Element 8.  \n24 P3.1/PWM0 L/PLAI[9]  General -Purpose Input and Output Port 3.1/PWM Phase 0 Low -Side Output/Programmable Logic \nArray Input Element 9.  \n25 P3.2/PWM1 H/PLAI[10]  General -Purpose Input and Output Port 3.2/PWM Phase 1 High -Side Output/Programmable Logic  \nArray Input Element 10.  \n26 P3.3/PWM1 L/PLAI[11]  General -Purpose Input and Output Port 3.3/PWM Phase 1 Low -Side Output/Programmable Logic \nArray Input Element 11.  \n27 P0.3/TRST/ADC BUSY General -Purpose Input and Output Port 0.3/JTAG Test Port Input, Test Reset/ADC BUSY Signal Output.  \n28 RST Reset Input, Active Low.  \n29 P3.4/PWM2 H/PLAI[12]  General -Purpose Input and Output Port 3.4/PWM Phase 2 High -Side Output/Programmable Logic \nArray Input 12.  \n30 P3.5/PWM2 L/PLAI[13]  General -Purpose Input and Output Port 3.5/PWM Phase 2 Low -Side Output/Programmable Logic \nArray Input Element 13.  \n31 IRQ0/P0.4/PWM TRIP/PLAO[1]  Multifunction I/O Pin. External Interrupt Request 0, Active High/General -Purpose Input and \nOutput Port 0.4/PWM Trip External Input/Programmable Logic Array Output Element 1.  \n32 IRQ1/P0.5/ADC BUSY/PLAO[2]  Multifunction I/O Pin. External Interrupt R equest 1, Active High/General -Purpose Input and \nOutput Port 0.5/ADC BUSY Signal Output/Programmable Logic Array Output Element 2.  \n33 P2.0/SPM9/PLAO[5]/ CONV START Serial Port Multiplexed. General -Purpose Input and Output Port 2.0/UART/Progr ammable Logic \nArray Output Element 5/Start Conversion Input Signal for ADC.  \n34 P0.7/ECLK/XCLK/SPM8/PLAO[4]  Serial Port Multiplexed. General -Purpose Input and Output Port 0.7/Output for External Clock \nSignal/Input to the Internal Clock Generator Circuits/U ART/Programmable Logic Array Output \nElement 4.  \n35 XCLKO  Output from the Crystal Oscillator Inverter.  \n36 XCLKI  Input to the Crystal Oscillator Inverter and Input to the Internal Clock Generator Circuits.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 28 of 102 Pin No. Mnemonic  Description  \n37 P3.6/PWM TRIP/PLAI[14]  General -Purpose Input and  Output Port 3.6/PWM Safety Cutoff/Programmable Logic Array Input \nElement 14.  \n38 P3.7/PWM SYNC/PLAI[15]  General -Purpose Input and Output Port 3.7/PWM Synchronization Input  and Output/  \nProgrammable Logic Array Input Element 15.  \n39 P1.7/SPM7/PLAO[0]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.7/UART, SPI/Programmable \nLogic Array Output Element 0.  \n40 P1.6/SPM6/PLAI[6]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.6/UART, SPI/Programmable \nLogic Array Input Elemen t 6. \n41 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \n42 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On- Chip Voltage Regulator.  \n43 P4.0/PLAO[8]  General -Purpose Input and Output Port 4.0/Programmable Logic Array Output Element 8.  \n44 P4.1/PLAO[9]  General -Purpose Input and Output Port 4.1/Programmable Logic Array Output Element 9.  \n45 P1.5/SPM5/PLAI[5]/IRQ3  Serial Port Multiplexed. General -Purpose Input and Output Port 1.5/UART, SPI/Programmable \nLogic Array Input Element 5/External Interrupt Request 3, Active High.  \n46 P1.4/SPM4/PLAI[4] /IRQ2  Serial Port Multiplexed. General -Purpose Input and Output Port 1.4/UART, SPI/Programmable \nLogic Array Input Element 4/External Interrupt Request 2, Active High.  \n47 P1.3/SPM3/PLAI[3]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.3/ UART, I2C1/Programmable \nLogic Array Input Element 3.  \n48 P1.2/SPM2/PLAI[2]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.2/UART, I2C1/Programmable \nLogic Array Input Element 2.  \n49 P1.1/SPM1/PLAI[1]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.1/UART, I2C0/Programmable Logic \nArray Input Element 1.  \n50 P1.0/T1/SPM0/PLAI[0]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.0/Timer1 Input/UART, I2C0/ \nProgrammable Logic Array Input Element 0.  \n51 P4.2/PLAO[10]  General -Purpose Input and Output Port 4.2/Programmable Logic Array Output Element 10.  \n52 P4.3/PLAO[11]  General -Purpose Input and Output Port 4.3/Programmable Logic Array Output Element 11.  \n53 P4.4/PLAO[12]  General -Purpose Input and Output  Port 4.4/Programmable Logic Array Output Element 12.  \n54 P4.5/PLAO[13]  General -Purpose Input and Output Port 4.5/Programmable Logic Array Output Element 13.  \n55 VREF 2.5 V Internal Voltage Reference. Must be connected to a 0.47 µF capacitor when using the  \ninternal reference.  \n56 DAC REF External Voltage Reference for the DACs. Range: DACGND to DACV DD. \n57 DACGND  Ground for the DAC. Typically connected to AGND.  \n58 AGND  Analog Ground. Ground reference point for the analog circuitry.  \n59 AV DD 3.3 V Analog Power.  \n60 DACV DD 3.3 V Power Supply for the DA Cs. Must be connected to AV DD. \n61 ADC0  Single -Ended or Differential Analog Input 0.  \n62 ADC1  Single -Ended or Differential Analog Input 1.  \n63 ADC2/CMP0  Single -Ended or Differential Analog Input 2/Comparator Positive Input.  \n64 ADC3/CMP1  Single -Ended or Differential Analog Input 3/Comparator Negative Input.  \n0 EP Exposed Pad. Th e pin configuration for the ADuC7024/ADuC7025 LFCSP_VQ has an expos ed pad \nthat must be soldered for mechanical purposes and left unconnected.  \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\nRev. H | Page 29 of 102 ADuC7026/ADuC7027 \n04955-0691 ADC4\n2 ADC5\n3 ADC6\n4 ADC7\n5 ADC8\n6 ADC9\n7 ADC10\n8 GND REF\n9 ADCNEG\n10 DAC0/ADC12\n11 DAC1/ADC13\n12 DAC2/ADC14\n13 DAC3/ADC15\n14 TMS\n15 TDI\n16 P0.1/PWM2 H/BLE\n17 P2.3/AE\n18 P4.6/AD14/PLAO[14]\n19 P4.7/AD15/PLAO[15]\n20 BM/P0.0/CMPOUT/PLAI[7]/MS060 P1.2/SPM2/PLAI[2]\n59 P1.3/SPM3/PLAI[3]\n58 P1.4/SPM4/PLAI[4]/IRQ2\n57 P1.5/SPM5/PLAI[5]/IRQ3\n56 P4.1/AD9/PLAO[9]\n55 P4.0/AD8/PLAO[8]54 IOV\nDD\n53 IOGND52 P1.6/SPM6/PLAI[6]\n51 P1.7/SPM7/PLAO[0]\n50 P2.2/RS/PWM0\nL/PLAO[7]\n49 P2.1/WS/PWM0 H/PLAO[6]\n48 P2.7/PWM1L/MS3\n47 P3.7/AD7/PWM SYNC /PLAI[15]\n46 P3.6/AD6/PWMTRIP/PLAI[14]\n45 XCLKI44 XCLKO\n43 P0.7/ECLK/XCLK/SPM8/PLAO[4]\n42 P2.0/SPM9/PLAO[5]/CONV\nSTART\n41 IRQ1/P0.5/ADCBUSY /PLAO[2]/MS221 P0.6/T1/MRST/PLAO[3]\n22 TCK\n23 TDO\n24 P0.2/PWM2 L/BHE\n25 IOGND\n26 IOVDD\n27 LVDD\n28 DGND\n29 P3.0/AD0/PWM0 H/PLAI[8]\n30 P3.1/AD1/PWM0 L/PLAI[9]\n31 P3.2/AD2/PWM1 H/PLAI[10]\n32 P3.3/AD3/PWM1 L/PLAI[11]\n33 P2.4/PWM0 H/MS0\n34 P0.3/TRST/A16/ADC BUSY\n35 P2.5/PWM0 L/MS1\n36 P2.6/PWM1 H/MS2\n37 RST\n38 P3.4/AD4/PWM2 H/PLAI[12]\n39 P3.5/AD5/PWM2 L/PLAI[13]\n40 IRQ0/P0.4/PWM TRIP/PLAO[1]/MS180 ADC3/CMP1\n79 ADC2/CMP0\n78 ADC177 ADC0\n76 ADC11\n75 DACV\nDD\n74 AVDD\n73 AV DD\n72 AGND\n71 AGND\n70 DACGND\n69 DACREF\n68 V REF\n67 REFGND\n66 P4.5/AD13/PLAO[13]65 P4.4/AD12/PLAO[12]\n64 P4.3/AD11/PLAO[11]\n63 P4.2/AD10/PLAO[10]\n62 P1.0/T1/SPM0/PLAI[0]\n61 P1.1/SPM1/PLAI[1]\nTOP VIEW\n(Not to Scale)ADuC7026/\nADuC7027PIN 1\nINDICATOR\nFig\nure 25. 80-Lead LQFP Pin Configuration (ADuC7026/ADuC7027) \nTable 13. Pin Function Descriptions (ADuC7026/ADuC7027)  \nPin No. Mnemonic Description \n1 ADC4 Single-Ended or Differential Analog Input 4. \n2 ADC5 Single-Ended or Differential Analog Input 5. \n3 ADC6 Single-Ended or Differential Analog Input 6. \n4 ADC7 Single-Ended or Differential Analog Input 7. \n5 ADC8 Single-Ended or Differential Analog Input 8. \n6 ADC9 Single-Ended or Differential Analog Input 9. \n7 ADC10 Single-Ended or Differential Analog Input 10. \n8 GND REF Ground Voltage Reference for the ADC. For opt imal performance, the analog power supply \nshould be separated from IOGND and DGND. \n9 ADCNEG Bias P oint or Negative Analog Input of the ADC in Pseudo Differential Mode. Must be connected \nto the ground of the signal to convert. This bias point must be between 0 V and 1 V. \n10 DAC0/ADC12 DAC0 Voltage Output/Single-Ended or Differential Analog Input 12. DAC outputs are not \npresent on the ADuC7027. \n11 DAC1/ADC13 DAC1 Voltage Output/Single-Ended or Differential Analog Input 13. DAC outputs are not present on the ADuC7027. \n12 DAC2/ADC14 DAC2 Voltage Output/Single-Ended or Differential Analog Input 14. DAC outputs are not \npresent on the ADuC7027. \n13 DAC3/ADC15 DAC3 Voltage Output/Single-Ended or Differential Analog Input 15. DAC outputs are not \npresent on the ADuC7027. \n14 TMS JTAG Test Port Input, Test Mode Select. Debug and download access. \n15 TDI JTAG Test Port Input, Test Data In. Debug and download access. \n16 P0.1/PWM2 H/BLE   General-Purpose Input and Output Port 0.1/ PWM Phase 2 High-Side Output/External Memory \nByte Low Enable. \n17 P2.3/AE General-Purpose Input and Output Po rt 2.3/External Memo ry Access Enable. \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 30 of 102 Pin No. Mnemonic  Description  \n18 P4.6/AD14/PLAO[14]  General -Purpose Input and Output Port 4.6/External Memory Interface/Programmable Logic \nArray Output Element 14.  \n19 P4.7/AD15/PLAO[15]  General -Purpose Input and Output Port 4.7/External Memory Interface/Programmable Logic \nArray Output Element 15.  \n20 BM/P0.0/CMP OUT/PLAI[7]/MS0  Multifunction I/O Pin. Boot Mode. The ADuC7026/ADuC7027 enter UART download mode if BM \nis low at reset and execute code if BM is pulled high at reset through a 1 k Ω resist or/General -\nPurpose Input and Output Port 0.0/Voltage Comparator Output/Programmable Logic Array \nInput Element 7/External Memory Select 0.  \n21 P0.6/T1/MRST/PLAO[3]  Multifunction Pin, Driven Low After Reset. General -Purpose Output Port 0.6/Timer1 Input/ \nPowe r-On Reset Output/Programmable Logic Array Output Element 3.  \n22 TCK  JTAG Test Port Input, Test Clock. Debug and download access.  \n23 TDO  JTAG Test Port Output, Test Data Out. Debug and download access.  \n24 P0.2/PWM2 L/BHE   General -Purpose Input and Output Port 0.2/PWM Phase 2 Low -Side Output/External Memory \nByte High Enable.  \n25 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \n26 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On- Chip Voltage Regulator.  \n27 LVDD 2.6 V Output of the On- Chip Voltage Regulator. This output must be connected to a 0.47 µF \ncapacitor to DGND only.  \n28 DGND  Ground for Core Logic.  \n29 P3.0/AD0/PWM0 H/PLAI[8]  General -Purpose Input and Output Port 3.0/External Memory Interface/PWM Phase 0 High -Side \nOutput/Programmable Logic Array Input Element 8.  \n30 P3.1/AD1/PWM0 L/PLAI[9]  General -Purpose Input and Output Port 3.1/External Memory Interface/PWM Phase 0 Low -Side \nOutput/Programmable Logic Array Input Element 9.  \n31 P3.2/AD2/PWM1 H/PLAI[10]  General -Purpose Input and Output Port 3.2/External Memory Interface/PWM Phase 1 High -Side \nOutput/Programmable Logic Array Input Element 10.  \n32 P3.3/AD3/PWM1 L/PLAI[11]  General -Purpose Input and Output Port 3.3/External Memory Interface/PWM Phase 1 Low -Side \nOutput/Programmable Logic Array Input Element 11.  \n33 P2.4/PWM0 H/MS0  General -Purpose Input and Output Port 2.4/PWM Phase 0 High-Side Output/External Memory \nSelect 0.  \n34 P0.3/TRST/A16/ADC BUSY General -Purpose Input and Output Port 0.3/JTAG Test Port Input, Test Reset/ADC BUSY Signal Output.  \n35 P2.5/PWM0 L/MS1  General -Purpose Input and Output Port 2.5/PWM Phase 0 Low -Side Output/External Memory \nSelect 1.  \n36 P2.6/PWM1 H/MS2  General -Purpose Input and Output Port 2.6/PWM Phase 1 Hi gh-Side Output/External Memory \nSelect 2.  \n37 RST Reset Input, Active Low.  \n38 P3.4/AD4/PWM2 H/PLAI[12]  General -Purpose Input and Output Port 3.4/External Memory Interface/PWM Phase 2 High -Side \nOutput/Programmable Logic Array Input 12.  \n39 P3.5/AD5/PWM2 L/PLAI[13]  General -Purpose Input and Output Port 3.5/External Memory Interface/PWM Phase 2 Low -Side \nOutput/Programmable Logic Array Input Element 13.  \n40 IRQ0/P0.4/PWM TRIP/PLAO[1]/MS1  Multifunction I/O Pin. External Interrupt Request 0, Active  High/General -Purpose Input and \nOutput Port 0.4/PWM Trip External Input/Programmable Logic Array Output Element 1/ \nExternal Memory Select 1.  \n41 IRQ1/P0.5/ADC BUSY/PLAO[2]/MS2  Multifunction I/O Pin. External Interrupt Request 1, Active High/General -Purpose Input and \nOutput Port 0.5/ADC BUSY Signal Output/Programmable Logic Array Output Element 2/External \nMemory Select 2.  \n42 P2.0/SPM9/PLAO[5]/ CONV START  Serial Port Multiplexed. General -Purpose Input and Output Port 2.0/UART/Programmable Logic \nArray Output Element 5/ Start Conversion Input Signal for ADC.  \n43 P0.7/ECLK/XCLK/SPM8/PLAO[4]  Serial Port Multiplexed. General -Purpose Input and Output Port 0.7/Output for External Clock \nSignal/Input to the Internal Clock Generator Circuits/UART/Programmable Logic Array Output \nElement 4.  \n44 XCLKO  Output from the Crystal Oscillator Inverter.  \n45 XCLKI  Input to the Crystal Oscillator Inverter and Input to the Internal Clock Generator Circuits.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 31 of 102 Pin No. Mnemonic  Description  \n46 P3.6/AD6/PWM TRIP/PLAI[14]  General -Purpose Input and Output Port 3.6/External M emory Interface/PWM Safety Cuto ff/ \nProgrammable Logic Array Input Element 14.  \n47 P3.7/AD7/PWM SYNC/PLAI[15]  General -Purpose Input and Output Port 3.7/External Memory Interface/PWM Synchronization/ \nProgram mable Logic Array Input Element 15.  \n48 P2.7/PWM1 L/MS3  General -Purpose Input and Output Port 2.7/PWM Phase 1 Low -Side Output/External Memory \nSelect 3.  \n49 P2.1/ WS/PWM0 H/PLAO[6]  General -Purpose Input and Output Port 2.1/External Memory Wri te Strobe/PWM Phase 0 High-\nSide Output/Programmable Logic Array Output Element 6.  \n50 P2.2/ RS/PWM0 L/PLAO[7]  General -Purpose Input and Output Port 2.2/External Memory Read Strobe/PWM Phase 0 Low -\nSide Output/Programmable Logic Array Output Element 7.  \n51 P1.7/SPM7/PLAO[0]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.7/UART, SPI/Programmable Logic \nArray Output Element 0.  \n52 P1.6/SPM6/PLAI[6]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.6/UART, SPI/Programmable Logic \nArray Input Element 6.  \n53 IOGND Ground for GPIO  (see Table 78). Typical ly connected to DGND.  \n54 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On- Chip Voltage Regulator.  \n55 P4.0/AD8/PLAO[8]  General -Purpose Input and Output Port 4.0/External Memory Interface/Programmable Logic \nArray Output Element 8.  \n56 P4.1/AD9/PLAO[9]  General -Purpose Input and Output Port 4.1/External Memory Interface/Programmable Logic \nArray Output Element 9.  \n57 P1.5/SPM5/PLAI[5]/IRQ3  Serial Port Multiplexed. General -Purpose Input and Output Port 1.5/UART, SPI/Programmable Logic \nArray  Input Element 5 /External Interrupt Request 3, Active High.  \n58 P1.4/SPM4/PLAI[4]/IRQ2  Serial Port Multiplexed. General -Purpose Input and Output Port 1.4/UART, SPI/Programmable Logic \nArray Input Element 4/ External Interrupt Request 2, Active High.  \n59 P1.3/SPM3/PLAI[3]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.3/UART, I2C1/Programmable \nLogic Array Input Element 3.  \n60 P1.2/SPM2/PLAI[2]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.2/UART, I2C1/Programmable \nLogic  Array Input Element 2.  \n61 P1.1/SPM1/PLAI[1]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.1/UART, I2C0/Programmable \nLogic Array Input Element 1.  \n62 P1.0/T1/SPM0/PLAI[0]  Serial Port Multiplexed. General -Purpose Input and Output Port 1. 0/Timer1 Input/UART, I2C0/ \nProgrammable Logic Array Input Element 0.  \n63 P4.2/AD10/PLAO[10]  General -Purpose Input and Output Port 4.2/External Memory Interface/Programmable Logic \nArray Output Element 10.  \n64 P4.3/AD11/PLAO[11]  General -Purpose Input and Output Port 4.3/External Memory Interface/Programmable Logic \nArray Output Element 11.  \n65 P4.4/AD12/PLAO[12]  General -Purpose Input and Output Port 4.4/External Memory Interface/Programmable Logic \nArray Output Element 12.  \n66 P4.5/AD13/PLAO[13]  General -Purpose Input and Output Port 4.5/External Memory Interface/Programmable Logic \nArray Output Element 13.  \n67 REFGND  Ground for the Reference. Typically connected to AGND.  \n68 VREF 2.5 V Internal Voltage Reference. Must be connected to a 0.47 µF capacitor when using the \ninternal reference.  \n69 DAC REF External Voltage Reference for the DACs. Range: DACGND to DACV DD. \n70 DACGND  Ground for the DAC. Typically connected to AGND.  \n71, 72 AGND  Analog Ground. Ground reference point for the analog circuitry.  \n73, 74 AV DD 3.3 V Analog Power.  \n75 DACV DD 3.3 V Power Supply for the DACs. Must be connected to AV DD. \n76 ADC11 Single -Ended or Differential Analog Input 11.  \n77 ADC0  Single -Ended or Differential Analog Input 0.  \n78 ADC1  Single -Ended or Differential Analog Input 1.  \n79 ADC2/CMP0  Single -Ended or Differential Analog Input 2/Comparator Positive Input.  \n80 ADC3/CMP1  Single -Ended or Differential Analog Input 3/Comparator Negative Input.  \n \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\nRev. H | Page 32 of 102 ADuC7028 \nA87654321\nB\nC\nD\nE\nF\nG\nH\nBOTTOM VIEW\n(Not to Scale)\n04955-086\nFig\nure 26. 64-Ball CSP_BGA Pin Configuration (ADuC7028) \nTable 14. Pin Function Descriptions (ADuC7028) \nPin No. Mnemonic Description \nA1 ADC3/CMP1 Single-Ended or Differential Analog Input 3/Comparator Negative Input. \nA2 DACV DD 3.3 V Power Supply for the DACs. Must be connected to AV DD. \nA3 AV DD 3.3 V Analog Power. \nA4 AGND Analog Ground. Ground reference point for the analog circuitry. \nA5 DACGND Ground for the DAC. Typically connected to AGND. \nA6 P4.2/PLAO[10] General-Purpose Input and Output Po rt 4.2/Programmable Logic Array Output Element 10. \nA7 P1.1/SPM1/PLAI[1] Seria l Port Multiplexed. General-Purpose Inpu t and Output Port 1.1/UART, I2C0/Programmable \nLogic Array Input Element 1. \nA8 P1.2/SPM2/PLAI[2] Seria l Port Multiplexed. General-Purpose Inpu t and Output Port 1.2/UART, I2C1/Programmable \nLogic Array Input Element 2. \nB1 ADC4 Single-Ended or Differential Analog Input 4. \nB2 ADC2/CMP0 Single-Ended or Differential Analog Input 2/Comparator Positive Input. \nB3 ADC1 Single-Ended or Differential Analog Input 1. \nB4 DAC REF External Voltage Reference for the DACs. Range: DACGND to DACV DD. \nB5 V REF 2.5 V Internal Voltage Reference. Must be connected to a 0.47 μF capacitor when using the \ninternal reference. \nB6 P1.0/T1/SPM0/PLAI[0] Se rial Port Multiplexed. General-Purpose Input and Output Port 1.0/Timer1 Input/UART, I2C0/ \nProgrammable Logic Array Input Element 0. \nB7 P1.4/SPM4/PLAI[4]/IRQ2 S erial Port Multiplexed. General-Purpose Input and Output Port 1.4/UART, SPI/Programmable \nLogic Array Input Element 4/External Interrupt Request 2, Active High. \nB8 P1.3/SPM3/PLAI[3] S erial Port Multiplexed. General-Purpose Inpu t and Output Port 1.3/UART, I2C1/Programmable \nLogic Array Input Element 3. \nC1 ADC6 Single-Ended or Differential Analog Input 6. \nC2 ADC5 Single-Ended or Differential Analog Input 5. \nC3 ADC0 Single-Ended or Differential Analog Input 0. \nC4 P4.5/PLAO[13] General-Purpose Input and Output Po rt 4.5/Programmable Logic Array Output Element 13. \nC5 P4.3/PLAO[11] General-Purpose Input and Output Po rt 4.3/Programmable Logic Array Output Element 11. \nC6 P4.0/PLAO[8] General-Purpose Input and Output Po rt 4.0/Programmable Logic Array Output Element 8. \nC7 P4.1/PLAO[9] General-Purpose Input and Output Po rt 4.1/Programmable Logic Array Output Element 9. \nC8 IOGND Ground for GPIO (see Tabl e 78). Typically connected to DGND. \nD1 ADCNEG Bias P oint or Negative Analog Input of the ADC in Pseudo Differential Mode. Must be \nconnected to the ground of the signal to convert. This bias point must be between 0 V and 1 V. \nD2 GND REF Ground Voltage Reference for the ADC. For opt imal performance, the analog power supply \nshould be separated from IOGND and DGND. \nD3 ADC7 Single-Ended or Differential Analog Input 7. \nD4 P4.4/PLAO[12] General-Purpose Input and Output Po rt 4.4/Programmable Logic Array Output Element 12. \nD5 P3.6/PWM TRIP/PLAI[14]  General-Purpose Input and Output Port 3.6/PWM Safety Cutoff/Programmable Logic Array Input Element 14. \nD6 P1.7/SPM7/PLAO[0] S erial Port Multiplexed. General-Purpose Input and Output Port 1.7/UART, SPI/Programmable \nLogic Array Output Element 0. \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 33 of 102 Pin No.  Mnemonic  Description  \nD7 P1.6/SPM6/PLAI[6]  Serial Port Multiplexed. General -Purpose Input and Output Port 1.6/UART, SPI/Programmable \nLogic Array Input Element 6.  \nD8 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On -Chip Voltage Regulator.  \nE1 DAC3 /ADC15  DAC3 Voltage Output/ ADC Input 15. \nE2 DAC2 /ADC14  DAC2 Voltage Output/ ADC Input 14. \nE3 DAC1 /ADC13  DAC1 Voltage Output/ ADC Input 13. \nE4 P3.0/PWM0 H/PLAI[8]  General -Purpose Input and Output Port 3.0/PWM Phase 0 High-Side Output/Programmable \nLogic Array Input Element 8.  \nE5 P3.2/PWM1 H/PLAI[10]  General -Purpose Input and Output Port 3.2/PWM Phase  1 High -Side Output/Programmable \nLogic Array Input Element 10.  \nE6 P1.5/SPM5/PLAI[5]/IRQ3  Serial Port Multiplexed. General -Purpose Input and Output Port 1.5/UART, SPI/Programmable \nLogic Array Input Element 5/External Interrupt Request 3, Active High.  \nE7 P3.7/PWM SYNC/PLAI[15]  General -Purpose Input and Output Port 3.7/PWM Synchronization/Programmable Logic \nArray Input Element 15.  \nE8 XCLKI  Input to the Crystal Oscillator Inverter and Input to the Internal Clock Generator Circuits.  \nF1 P4.6/PLAO[14]  General -Purpose Input and Output Port 4.6/Programmable Logic Array Output Element 14.  \nF2 TDI JTAG Test Port Input, Test Data In. Debug and download access.  \nF3 DAC0 /ADC1 2 DAC0 Voltage Output/ ADC Input 12. \nF4 P3.1/PWM0 L/PLAI[9]  General -Purpose Input and Output Port 3.1/PWM Phase 0 Low -Side Output/Programmable \nLogic Array Input Element 9.  \nF5 P3.3/PWM1 L/PLAI[11]  General -Pur pose Input and Output Port 3.3/ PWM Phase 1 Low -Side Output/Programmable \nLogic Array Input Element 11.  \nF6 RST Reset I nput, Active Low.  \nF7 P0.7/ECLK/XCLK/SPM8/PLAO[4]  Serial Port Multiplexed. General -Purpose Input and Output Port 0.7/Output for External \nClock Signal/Input to the Internal Clock Generator Circuits/UART/Programmable Logic Array \nOutput Element 4.  \nF8 XCLKO  Output from the Crystal Oscillator Inverter.  \nG1 BM/P0.0/CMP OUT/PLAI[7]  Multifunction I/O Pin. Boot m ode. The ADuC7028 enters UART download mode if BM is low \nat reset and executes code if BM is pulled high at reset through a 1 kΩ  resistor/General -\nPurpose I nput and Output Port 0.0/Voltage Comparator Output/Programmable Logic Array \nInput Element 7.  \nG2 P4.7/PLAO[15]  General -Purpose Input and Output Port 4.7/Programmable Logic Array Output Element 15.  \nG3 TMS  JTAG Test Port Input, Test Mode Select. Debug and d ownload access.  \nG4 TDO  JTAG Test Port Output, Test Data Out. Debug and download access.  \nG5 P0.3/TRST/ADC BUSY General -Purpose Input and Output Port 0.3/JTAG Test Port Input, Test Reset/ADC BUSY Signal \nOutput.  \nG6 P3.4/PWM2 H/PLAI[12]  General -Purpose Input and Output Port 3.4/PWM Phase 2 High-Side Output/Programmable \nLogic Array Input 12.  \nG7 P3.5/PWM2 L/PLAI[13]  General -Purpose Input and Output Port 3.5/PWM Phase 2 Low -Side Output/Programmable \nLogic Array Input Element 13.  \nG8 P2.0/SPM9/PLAO[5]/ CONV START Serial Port Multiplexed. General -Purpose Input and Output Port 2.0/UART/Programmable \nLogic Array Output Element 5/ Start Conversion Input Signal for ADC.  \nH1 P0.6/T1/MRST/PLAO[3]  Multifunction Pin, Driven Low After Reset. General -Purpose Output Port 0.6/Timer1 Input/ \nPower -On Reset Output/Programmable Logic Array Output Element 3.  \nH2 TCK  JTAG Test Port Input, Test Clock. Debug and download access.  \nH3 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \nH4 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On- Chip Voltage Regulator.  \nH5 LVDD 2.6 V Output of the On- Chip Voltage Regulator. This output must be connected to a 0.47 µF \ncapacitor to DGND only.  \nH6 DGND  Ground for Cor e Logic.  \nH7 IRQ0/P0.4/PWM TRIP/PLAO[1]  Multifunction I/O Pin. External Interrupt Request 0, Active High/General -Purpose Input and \nOutput Port 0.4/PWM Trip External Input/Programmable Logic Array Output Element 1.  \nH8 IRQ1/P0.5/ADC BUSY/PLAO[2]  Multifunction  I/O Pin. External Interrupt Request 1, Active High/General -Purpose Input and \nOutput Port 0.5/ADC BUSY Signal Output/Programmable Logic Array Output Element 2.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \nRev. H | Page 34 of 102 ADuC7029 \nBOTTOM VIEW\n(Not to Scale)7 4 5 6 3 2 1\nA\nB\nC\nD\nE\nF\nG\n04955-088\nF\nigure 27. 49-Ball CSP_ BGA Pin Configuration (ADuC7029)  \nTable 15. Pin Function Descriptions (ADuC7029) \nPin No.  Mnemonic  Description  \nA1 ADC3/CMP1 Single -Ended or Differential Analog Input 3/Comparator Negative Input.  \nA2 ADC1  Single -Ended or Differential Analog Input 1.  \nA3 ADC0  Single -Ended or Differential Analog Input 0.  \nA4 AV DD 3.3 V Analog Power.  \nA5 VREF 2.5 V Internal Voltage Reference. Must be connected to a 0.47 µF capacitor when using the \ninternal reference.  \nA6 P1.0/T1/SPM0/PLAI[0] Serial Port Multiplexed. General -Purpose Input and Output Port 1.0/Timer1 Input/UART, I2C0/ \nProgrammable Logic Array Input Element 0.  \nA7 P1.1/SPM1/PLAI[1] Serial Port Multiplexed. General -Purpose Input and Output Port 1.1/UART, I2C0/Programmable  \nLogic Array Input Element 1.  \nB1 ADC6  Single -Ended or Differential Analog Input 6.  \nB2 ADC5  Single -Ended or Differential Analog Input 5.  \nB3 ADC4  Single -Ended or Differential Analog Input 4.  \nB4 AGND  Analog Ground. Ground reference point for the analog circuitry.  \nB5 DAC REF External Voltage Reference for the DACs. Range: DACGND to DACV DD. \nB6 P1.4/SPM4/PLAI[4]/IRQ2 Serial Port Multiplexed. General -Purpose Input and Output Port 1.4/UART, SPI/Programmable \nLogic Array Input Element 4/ External Interrupt Request 2, Activ e High.  \nB7 P1.3/SPM3/PLAI[3] Serial Port Multiplexed. General -Purpose Input and Output Port 1.3/UART, I2C1/Programmable \nLogic Array Input Element 3.  \nC1 GND REF Ground Voltage Reference for the ADC. For optimal performance, the analog power supply \nshould b e separated from IOGND and DGND.  \nC2 AGND  Analog Ground. Ground reference point for the analog circuitry.  \nC3 ADC2/CMP0 Single -Ended or Differential Analog Input 2/Comparator Positive Input.  \nC4 IOGND Ground for GPIO  (see Table 78). Typically connected to DGND.  \nC5 P1.2/SPM2/PLAI[2] Serial Port Multiplexed. General -Purpose Input and Output Port 1.2/UART, I2C1/Programmable  \nLogic Array Input Element 2.  \nC6 P1.6/SPM6/PLAI[6] Serial Port Multiplexed. General -Purpose Input and Output Port 1.6/UART, SPI/Programmable \nLogic Array Input Element 6.  \nC7 P1.5/SPM5/PLAI[5]/IRQ3 Serial Port Multiplexed. General -Purpose Input and Output Port 1.5/UART, SPI/Programmable \nLogic Array Input Element 5/External Interrupt Request 3, Active High.  \nD1 DAC0 /ADC12 DAC0 Voltage Output/ ADC Input 12. \nD2 DAC3 /ADC15 DAC3 Voltage Output/ ADC Input 15. \nD3 DAC1 /ADC13 DAC1 Voltage Output/ ADC Input 13. \nD4 P3.3/PWM1 L/PLAI[11]  General-Pur pose Input and Output Port 3.3/PWM Phase 1 Low -Side Output/Programmable \nLogic Array Input Element 11.  \nD5 P3.4/PWM2 H/PLAI[12]  General-Purpose Input and Output Port 3.4/PWM Phase 2 High-Side Output/Programmable \nLogic Array Input 12.  \nD6 P3.6/PWM TRIP/PLAI[14]  General -Purpose Input and Output Port 3.6/PWM Safety Cuto ff/Programmable Logic Array \nInput Element 14.  \nD7 P1.7/SPM7/PLAO[0] Serial Port Multiplexed. General -Purpose Input and Output Port 1.7/UART, SPI/Programmable \nLogic Array Output Element 0.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 35 of 102 Pin No.  Mnemonic  Description  \nE1 TMS  JTAG Test Port Input, Test Mode Select. Debug and download access.  \nE2 BM/P0.0/CMP OUT/PLAI[7]  Multifunction I/O Pin. Boot m ode. The ADuC702 9 enters UART download mode if BM is low \nat reset and executes code if BM is pulled high at reset through a 1 kΩ  resistor/General -\nPurpose Input and Output Port 0.0/Voltage Comparator Output/Programmable Logic Array \nInput Element 7.  \nE3 DAC2 /ADC14  DAC2 Voltage Output/ ADC Input 14. \nE4 IOV DD 3.3 V Supply for GPIO  (see Table 78) and Input of the On- Chip Voltage Regulator.  \nE5 P3.2/PWM1 H/PLAI[10]  General -Purpose Input and Output Port 3.2/PWM Phase 1 High-Side Output/Programmable \nLogic Array Input Element 10.  \nE6 P3.5/PWM2 L/PLAI[13]  General -Purpose Input and Output Port 3.5/PWM Phase 2 Low -Side Output/Programmable \nLogic Array Input Element 13.  \nE7 P0.7/ECLK/XCLK/SPM8/PLAO[4]  Serial Port Multiplexed. General -Purpose Input and Output Port 0.7/Output for External \nClock Signal/Input to the Internal Clock Generator Circuits/UART/Programmable Logic Array \nOutput Element 4.  \nF1 TDI JTAG Test Port Input, Test Data In. Debug and download access.  \nF2 P0.6/T1/MRST/PLAO[3]  Multifunction Pin, Driven Low After Reset. General -Purpose Output Port 0.6/Timer1 Input/ \nPower -On Reset Output/Programmable Logic Array Output Element 3.  \nF3 IOGND  Ground for GPIO  (see Table 78). Typically connected to DGND.  \nF4 P3.1/PWM0 L/PLAI[9]  General -Purpose Input and Output Port 3.1/PWM Phase 0 Low -Side Output/Programmable \nLogic Array Input Element 9.  \nF5 P3.0/PWM0 H/PLAI[8]  General -Purpose Input and Output Port 3.0/PWM Phase 0 High-Side Output/Programmable \nLogic Array Input Element 8.  \nF6 RST Reset Input, Active Low.  \nF7 P2.0/SPM9/PLAO[5]/ CONV START Serial Port Multiplexed. General -Purpose Input and Output Port 2.0/UART/Programmable \nLogic Array Output Element 5/ Start Conversion Input Signal for ADC.  \nG1 TCK  JTAG Test Port Input, Test Clock. Debug and download access.  \nG2 TDO  JTAG Test Port Output, Test Data Out. Debug and download access.  \nG3 LVDD 2.6 V Output of the On- Chip Voltage Regulator. This output must be connected to a 0.47 µF \ncapacitor to DGND only.  \nG4 DGND  Ground for Core Logic.  \nG5 P0.3/TRST/ADC BUSY General -Purpose Input and Output Port 0.3/JTAG Test Port Input, Test Reset/ADC BUSY Signal \nOutput.  \nG6 IRQ0/P0.4/PWM TRIP/PLAO[1]  Multifunction I/O Pin. External Interrupt Request 0, Active High/General -Purpose Input and \nOutput Port 0.4/PWM Trip External Input/Programmable Logic Array Output Element 1.  \nG7 IRQ1/P0.5/ADC BUSY/PLAO[2]  Multifunction I/O Pin. External Interrupt Request 1, Active High/General -Purpose Input and \nOutput Port 0.5/ADC BUSY Signal Output/Programmable Logic Array Output Element 2.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 36 of 102 TYPICAL PERFORMANCE CHARACTERISTICS  \nADC CODES(LSB)1.0\n–1.0–0.8–0.6–0.4–0.200.20.40.60.8\n0 2000 1000 3000 4000\n04955-075fS = 774kSPS\n \nFigure 28. Typical INL Error, f S = 774 kSPS  \n \nADC CODES(LSB)1.0\n–1.0–0.8–0.6–0.4–0.200.20.40.60.8\n0 2000 1000 3000 4000\n04955-077fS = 1MSPS\n \nFigure 29. Typical INL Error, f S = 1 MSPS  \n \nEXTERNAL REFERENCE (V)(LSB)\n(LSB)1.0\n00.10.20.30.40.50.60.70.80.90\n–0.1\n–0.2\n–0.3–0.5\n–0.6–0.7\n–0.8\n–0.9\n–1.0\n1.0 1.5 2.0 2.5 3.0\n04955-072WCNWCP\n \nFigure 30. Typical Worst -Case  (Positive  (WCP ) and Negat ive (WCN ))  \nINL Error vs. V REF, fS = 774 kSPS  ADC CODES(LSB)1.0\n–1.0–0.8–0.6–0.4–0.200.20.40.60.8\n0 2000 1000 3000 4000\n04955-074fS = 774kSPS\n \nFigure 31. Typical DNL Error, f S = 774 kSPS  \n \nADC CODES(LSB)1.0\n–1.0–0.8–0.6–0.4–0.200.20.40.60.8\n0 2000 1000 3000 4000\n04955-076fS = 1MSPS\n \nFigure 32. Typical DNL Error, f S = 1 MSPS  \n \nEXTERNAL REFERENCE (V)(LSB)\n(LSB)0\n–1.0–0.9–0.8–0.7–0.6–0.5–0.4–0.3–0.2–0.11.0\n0.9\n0.8\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n0.1\n0\n1.0 1.5 2.0 2.5 3.0\n04955-071WCN\nWCP\n \nFigure 33. Typical Worst -Case (Positive (WCP )and Negative (WCN))  \nDNL Error vs. V REF, fS = 774 kSPS  \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 37 of 102 BINFREQUENCY9000\n010002000300040005000600070008000\n1161 1162 1163\n04955-073\nFigure 34. Code Histogram Plot, fs = 774 kSPS, V IN = 0.7 V \n \nFREQUENCY (kHz)(dB)0\n–160–140–120–100–80–60–40–20\n0 100 200\n04955-078fS = 774kSPS,\nSNR = 69.3dB,\nTHD = –80.8dB,\nPHSN = –83.4dB\nFigure 35. Dynamic Performance, f S = 774 kSPS \n \nFREQUENCY (kHz)(dB)20\n0\n–160–140–120–100–80–60–40–20\n01 5 0 100 50 200\n04955-079fS = 1MSPS,\nSNR = 70.4dB,\nTHD = –77.2dB,\nPHSN = –78.9dB\nFigure 36. Dynamic Performance, f S = 1 MSPS \n EXTERNAL REFERENCE (V)SNR (dB)\nTHD (dB)75\n40455055606570–76\n–88–86–84–82–80–78\n1.0 1.5 2.0 2.5 3.0\n04955-070SNR\nTHD\nFigure 37. Typical Dynamic Performance vs. V REF \n \n04955-060\nTEMPERATURE ( \uf0b0C)CODE\n–50 0 50 10010001500\n1450\n1400\n13501300\n1250\n1200\n1150\n11001050\n150\nFigure 38. On-Chip Temperature Sensor Voltage Output vs. Temperature \n \nTEMPERATURE (°C)(mA)39.8\n39.7\n38.939.039.139.239.339.439.539.6\n–40 25 85 0 125\n04955-080\nFigure 39. Current Consumption vs. Temperature at CD = 0 \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 38 of 102 TEMPERATURE (°C)(mA)12.05\n11.9512.00\n11.5511.6011.6511.7011.7511.8011.8511.90\n–40 25 85 0 125\n04955-081\nFigure 40. Current Consumption vs. Temperature at CD = 3 \n \nTEMPERATURE (°C)(mA)7.85\n7.757.80\n7.407.457.507.557.607.657.70\n–40 25 85 0 125\n04955-082\nFigure 41. Current Consumption vs. Temperature at CD = 7 \n TEMPERATURE (°C)(mA)1.4\n1.2\n1.0\n0.80.60.4\n0.2\n0\n–40 25 85 0 125\n04955-083\nFigure 42. Current Consumption vs. Temperature in Sleep Mode \n \nSAMPLING FREQUENCY (kSPS)(mA)37.4\n37.237.036.8\n36.6\n36.436.2\n62.25 250.00 500.00 125.00 1000.00\n04955-084\nFigure 43. Current Consumption vs. Sampling Frequency \n \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 39 of 102 TERMINOLOGY  \nADC SPECIFICATIONS  \nIntegral Nonlinearity (INL)  \nThe maximum deviation of any code from a straight line \npassing through the endpoints of the ADC transfer function. The endpoints of the transfer function are zero scale, a point \n½ LSB below the first code transition, and full scale, a point \n½ LSB above the last code transition.  \nDifferential Nonlinearity (DNL)  \nThe difference between the measured and the ideal 1 LSB \nchange between any two adjacent codes in the ADC.  \nOffset Error  \nThe devi ation of the first code transition (0000 . . . 000) to  \n(0000 . . . 001) from the ideal, that is, +½ LSB.  \nGain Error  \nThe deviation of the last code transition from the ideal AIN \nvoltage (full scale − 1.5 LSB) after the offset error has been adjusted out.  \nSignal to (Noise + Distortion) Ratio  (SINAD) \nThe measured ratio of signal to (noise + distortion) at the output of the ADC. The signal is the rms amplitude of the \nfundamental. Noise is the rms sum of all nonfundamental \nsignals up to half the sampling freque ncy (f\nS/2), excluding dc.  The ratio is dependent upon the number of quantization levels \nin the digitization process; the more levels, the smaller the \nquantization noise.  \nThe theoretical signal to (noise + distortion) ratio for an ideal \nN-bit converter with a sine wave input is given by  \nSignal to (Noise  + Distortion ) = (6.02 N  + 1.76) dB  \nThus, for a 12 -bit converter, this is 74 dB.  \nTotal Harmonic Distortion  (THD) \nThe ratio of the rms sum of the harmonics to the fundamental.  \nDAC SPECIFICATIONS  \nRelative Ac curacy  \nOtherwise known as endpoint linearity, relative accuracy is a \nmeasure of the maximum deviation from a straight line passing \nthrough the endpoints of the DAC transfer function. It is \nmeasured after adjusting for zero error and full -scale error.  \nVoltage Output Settling Time  \nThe amount of time it takes the output to settle to within a \n1 LSB level for a full- scale input change.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 40 of 102 OVERVIEW OF THE ARM7TDMI CORE \nThe ARM7® core is a 32-bit reduced instruction set computer \n(RISC). It uses a single 32-bit bus for instruction and data. The length of the data can be eight bits, 16 bits, or 32 bits. The \nlength of the instruction word is 32 bits. \nThe ARM7TDMI is an ARM7 core with four additional features. \n\uf0b7 T support for the thumb (16-bit) instruction set. \n\uf0b7 D support for debug. \n\uf0b7 M support for long multiplications. \n\uf0b7 I includes the EmbeddedICE module to support embedded \nsystem debugging. \nTHUMB MODE (T) \nAn ARM instruction is 32 bits long. The ARM7TDMI processor \nsupports a second instruction set that is compressed into 16 bits, \ncalled the thumb instruction set. Faster execution from 16-bit \nmemory and greater code density can usually be achieved by \nusing the thumb instruction set instead of the ARM instruction set, which makes the ARM7TDMI core particularly suitable for \nembedded applications. \nHowever, the thumb mode has two limitations. \n\uf0b7 Thumb code typically requires more instructions for the \nsame job. As a result, ARM code is usually best for maximizing the performance of time-critical code. \n\uf0b7 The thumb instruction set does not include some of the \ninstructions needed for exception handling, which \nautomatically switches the core to ARM code for exception handling. \nSee the ARM7TDMI user guide for details on the core architecture, the programming model, and both the ARM  \nand ARM thumb instruction sets. \nLONG MULTIPLY (M) \nThe ARM7TDMI instruction set includes four extra instruc-\ntions that perform 32-bit by 32-bit multiplication with a 64-bit \nresult, and 32-bit by 32-bit multiplication-accumulation (MAC) \nwith a 64-bit result. These results are achieved in fewer cycles \nthan required on a standard ARM7 core. \nEmbeddedICE (I) \nEmbeddedICE provides integrated on-chip support for the core. \nThe EmbeddedICE module contains the breakpoint and watch-\npoint registers that allow code to be halted for debugging purposes. \nThese registers are controlled through the JTAG test port. \nWhen a breakpoint or watchpoint is encountered, the processor \nhalts and enters debug state. Once in a debug state, the \nprocessor registers can be inspected as well as the Flash/EE, \nSRAM, and memory mapped registers. \n EXCEPTIONS \nARM supports five types of exceptions and a privileged \nprocessing mode for each type. The five types of exceptions are \n\uf0b7 Normal interrupt or IRQ, which is provided to service \ngeneral-purpose interrupt handling of internal and external events. \n\uf0b7 Fast interrupt or FIQ, which is provided to service data \ntransfers or communication channels with low latency.  \nFIQ has priority over IRQ. \n\uf0b7 Memory abort. \n\uf0b7 Attempted execution of an undefined instruction. \n\uf0b7 Software interrupt instruction (SWI), which can be used  to make a call to an operating system. \nTypically, the programmer defines interrupt as IRQ, but for higher priority interrupt, that is, faster response time, the \nprogrammer can define interrupt as FIQ. \nARM REGISTERS \nARM7TDMI has a total of 37 registers: 31 general-purpose \nregisters and six status registers. Each operating mode has \ndedicated banked registers. \nWhen writing user-level programs, 15 general-purpose 32-bit \nregisters (R0 to R14), the program counter (R15), and the current program status register (CPSR) are usable. The \nremaining registers are used for system-level programming and \nexception handling only. \nWhen an exception occurs, some of the standard registers are \nreplaced with registers specific to the exception mode. All excep-tion modes have replacement banked registers for the stack pointer (R13) and the link register (R14), as represented in Figure 44. The fast interrupt mode has more registers (R8 to R12) \nfor fast interrupt processing. This means that interrupt processing \ncan begin without the need to save or restore these registers \nand, thus, save critical time in the interrupt handling process. \n04955-007USABLE IN USER MODE\nSYSTEM MODES ONLY\nSPSR_UNDSPSR_IRQSPSR_ABTSPSR_SVCR8_FIQ\nR9_FIQ\nR10_FIQ\nR11_FIQ\nR12_FIQ\nR13_FIQ\nR14_FIQR13_UND\nR14_UNDR0\nR1\nR2\nR3\nR4\nR5\nR6\nR7\nR8\nR9\nR10\nR11\nR12\nR13\nR14\nR15 (PC)R13_IRQ\nR14_IRQR13_ABT\nR14_ABTR13_SVC\nR14_SVC\nSPSR_FIQCPSR\nUSER MODEFIQ\nMODESVC\nMODEABORT\nMODEIRQ\nMODEUNDEFINED\nMODE  \nFigure 44. Regist er Organization \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 41 of 102 More information relative to the programmer’s model and the \nARM7TDMI core architecture can be found in the following \nmaterials from ARM:  \n• DDI0029G, ARM7TDMI Technical Reference Manual  \n• DDI -0100, ARM Architecture Reference Manual  \nINTERRUPT LATENCY  \nThe worst -case latency for a fast interrupt request (FIQ) \nconsists of the following:  \n• The longest time the request can take to pass through the \nsynchronizer  \n• The time for the longest instruction to complete (the \nlongest instruction is an LDM) that loads all the registers including the PC  \n• The time for the data abort entry  \n• The time for FIQ entry  At the end of this time, the ARM7TDMI executes the ins truc-\ntion at 0x1C (FIQ interrupt vector address). The maximum \ntotal time is 50 processor cycles, which is just under 1.2 µs in a \nsystem using a continuous 41.78 MHz processor clock.  \nThe maximum interrupt request (IRQ)  latency calculation is \nsimilar  but mus t allow for the fact that FIQ has higher priority \nand may delay entry into the IRQ handling routine for an \narbitrary length of time. This time can be reduced to 42 cycles if \nthe LDM command is not used. Some compilers have an option \nto compile without usin g this command. Another option is to run \nthe part in thumb mode where the time is reduced to 22 cycles.  \nThe minimum latency for FIQ or IRQ interrupts is a total of five cycles, which consist of the shortest time the request can \ntake through the synchronize r plus the time to enter the \nexception mode.  \nNote that the ARM7TDMI always runs in ARM (32- bit) mode \nwhen in privileged modes, for example, when executing \ninterrupt service routines.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 42 of 102 MEMORY ORGANIZATION \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 incorporate two \nseparate blocks of memory: 8 kB of SRAM and 64 kB of on-chip \nFlash/EE memory. The 62 kB of on-chip Flash/EE memory is available to the user, and the remaining 2 kB are reserved for \nthe factory-configured boot page. These two blocks are mapped \nas shown in Figure 45. \n04955-008MMRs0xFFFFFFFF\n0xFFFF0000\nRESERVED\nEXTERNAL MEMORY REGION 30x40000FFFF\n0x40000000\nRESERVED\nEXTERNAL MEMORY REGION 20x30000FFFF\n0x30000000\nRESERVED\nEXTERNAL MEMORY REGION 10x20000FFFF\n0x20000000\nRESERVED\nEXTERNAL MEMORY REGION 00x10000FFFF\n0x10000000\nRESERVED\nFLASH/EE0x0008FFFF\n0x00080000\nRESERVED\nSRAM0x00011FFF\n0x00010000\nREMAPPABLE MEMORY SPACE\n(FLASH/EE OR SRAM)0x0000FFFF\n0x00000000 \nFigure 45. Physical Memory Map \nNote that by default, after a reset, the Flash/EE memory is \nmirrored at Address 0x00000000. It is possible to remap the \nSRAM at Address 0x00000000 by clearing Bit 0 of the REMAP MMR. This remap function is described in more detail in the \nFlash/EE Memory section. \nMEMORY ACCESS \nThe ARM7 core sees memory as a linear array of a 232 byte \nlocation where the different blocks of memory are mapped as outlined in Figure 45. \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 memory organiza-\ntions are configured in little endian format, which means that \nthe least significant byte is located in the lowest byte address, \nand the most significant byte is in the highest byte address. \n04955-009BIT 31\nBYTE 2\nA\n6\n2.\n..BYTE 3\nB\n7\n3.\n..BYTE 1\n9\n5\n1.\n..BYTE 0\n8\n4\n0.\n..BIT 0\n32 BITS0xFFFFFFFF\n0x00000004\n0x00000000\n \nFigure 46. Little Endian Format FLASH/EE MEMORY \nThe total 64 kB of Flash/EE memory is organized as 32 k × 16 bits; \n31 k × 16 bits is user space and 1 k × 16 bits is reserved for the \non-chip kernel. The page size of th is Flash/EE memory is 512 bytes. \nSixty-two kilobytes of Flash/EE memory are available to the \nuser as code and nonvolatile data memory. There is no distinction between data and program because ARM code \nshares the same space. The real width of the Flash/EE memory \nis 16 bits, which means that in ARM mode (32-bit instruction), two accesses to the Flash/EE are necessary for each instruction fetch. It is therefore recommended to use thumb mode when executing from Flash/EE memory for optimum access speed. The maximum access speed for the Flash/EE memory is \n41.78 MHz in thumb mode and 20.89 MHz in full ARM mode. \nMore details about Flash/EE access time are outlined in the \nExecution Time from SRAM and Flash/EE section. \nSRAM \nEight kilobytes of SRAM are available to the user, organized as  \n2 k × 32 bits, that is, two words. ARM code can run directly \nfrom SRAM at 41.78 MHz, given that the SRAM array is configured as a 32-bit wide memory array. More details about \nSRAM access time are outlined in the Execution Time from \nSRAM and Flash/EE section. \nMEMORY MAPPED REGISTERS  \nThe memory mapped register (MMR) space is mapped into the \nupper two pages of the memory array and accessed by indirect \naddressing through the ARM7 banked registers. \nThe MMR space provides an interface between the CPU and all \non-chip peripherals. All registers, except the core registers, reside in the MMR area. All shaded locations shown in Figure 47 are unoccupied or reserved locations and should not be accessed by user software. Table 16 shows the full MMR memory map. \nThe access time for reading from or writing to an MMR \ndepends on the advanced microcontroller bus architecture \n(AMBA) bus used to access the peripheral. The processor has two AMBA buses: the advanced high performance bus (AHB) used for system modules and the advanced peripheral bus (APB) used for lower performance peripheral. Access to the \nAHB is one cycle, and access to the APB is two cycles. All \nperipherals on the ADuC7019/ 20/21/22/24/25/26/27/28/29 are \non the APB except the Flash/EE memory, the GPIOs (see  \nTable 78), and the PWM.  \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 43 of 102 PWM\nFLASH CONTROL\nINTERFACE\nGPIO\nPLA\nSPI\nI2C1\nI2C0\nUART\nDAC\nADC\nBAND GAP\nREFERENCE\nPOWER SUPPLY\nMONITOR\nPLL AND\nOSCILLATOR CONTROL\nWATCHDOG\nTIMER\nWAKE-UP\nTIMER\nGENERAL-PURPOSE\nTIMER\nTIMER 0\nREMAP AND\nSYSTEM CONTROL\nINTERRUPT\nCONTROLLER0xFFFFFFFF\n0xFFFFFC3C\n0xFFFFFC00\n0xFFFFF820\n0xFFFFF800\n0xFFFFF46C\n0xFFFFF400\n0xFFFF0B54\n0xFFFF0B00\n0xFFFF0A14\n0xFFFF0A00\n0xFFFF0948\n0xFFFF0900\n0xFFFF0848\n0xFFFF0800\n0xFFFF0730\n0xFFFF0700\n0xFFFF0620\n0xFFFF0600\n0xFFFF05380xFFFF0500\n0xFFFF0490\n0xFFFF048C\n0xFFFF04480xFFFF0440\n0xFFFF0420\n0xFFFF0404\n0xFFFF03700xFFFF0360\n0xFFFF0350\n0xFFFF03400xFFFF0334\n0xFFFF0320\n0xFFFF0310\n0xFFFF0300\n0xFFFF0238\n0xFFFF02200xFFFF0110\n0xFFFF0000\n04955-010 \nFigure 47. Memory  Mapped Registers Table 16. Complete MMR List \nAddress Name Byte Access \nType Default Value Page \nIRQ Address Base = 0xFFFF0000 \n0x0000 IRQSTA 4 R 0x00000000 84 \n0x0004 IRQSIG1 4 R 0x00XXX000 84 \n0x0008 IRQEN 4 R/W 0x00000000 84 \n0x000C IRQCLR 4 W 0x00000000 84 \n0x0010 SWICFG 4 W 0x00000000 85 \n0x0100 FIQSTA 4 R 0x00000000 85 \n0x0104 FIQSIG1 4 R 0x00XXX000 85 \n0x0108 FIQEN 4 R/W 0x00000000 85 \n0x010C FIQCLR 4 W 0x00000000 85 \n1 Depends on the level on the external interrupt pins (P0.4, P0.5, P1.4, and P1.5). \n \nSystem Control Address Base = 0xFFFF0200 \n0x0220 REMAP 1 R/W 0xXX1 56 \n0x0230 RSTSTA 1 R/W 0x01 56 \n0x0234 RSTCLR 1 W 0x00 56 \n1 Depends on the model. \n \nTimer Address Base = 0xFFFF0300 \n0x0300 T0LD 2 R/W 0x0000 86 \n0x0304 T0VAL 2 R 0xFFFF 86 \n0x0308 T0CON 2 R/W 0x0000 86 \n0x030C T0CLRI 1 W 0xFF 86 \n0x0320 T1LD 4 R/W 0x00000000 87 \n0x0324 T1VAL 4 R 0xFFFFFFFF 87 \n0x0328 T1CON 2 R/W 0x0000 87 \n0x032C T1CLRI 1 W 0xFF 88 \n0x0330 T1CAP 4 R/W 0x00000000 88 \n0x0340 T2LD 4 R/W 0x00000000 88 \n0x0344 T2VAL 4 R 0xFFFFFFFF 88 \n0x0348 T2CON 2 R/W 0x0000 88 \n0x034C T2CLRI 1 W 0xFF 89 \n0x0360 T3LD 2 R/W 0x0000 89 \n0x0364 T3VAL 2 R 0xFFFF 89 \n0x0368 T3CON 2 R/W 0x0000 89 \n0x036C T3CLRI 1 W 0x00 90 \n \nPLL Base Address = 0xFFFF0400 0x0404 POWKEY1 2 W 0x0000 61 \n0x0408 POWCON 2 R/W 0x0003 61 \n0x040C POWKEY2 2 W 0x0000 61 \n0x0410 PLLKEY1 2 W 0x0000 61 \n0x0414 PLLCON 1 R/W 0x21 61 \n0x0418 PLLKEY2 2 W 0x0000 61 \n \nPSM Address Base = 0xFFFF0440 \n0x0440 PSMCON 2 R/W 0x0008 58 \n0x0444 CMPCON 2 R/W 0x0000 59 \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 44 of 102 Address  Name  Byte  Access \nType  Default Value  Page  \nReference Address Base = 0xFFFF0480 \n0x048C REFCON  1 R/W  0x00 51 \n \nADC Address Base = 0xFFFF0500 \n0x0500 ADCCON  2 R/W  0x0600 47 \n0x0504 ADCCP  1 R/W  0x00 48 \n0x0508 ADCCN  1 R/W  0x01 48 \n0x050C ADCSTA  1 R 0x00 49 \n0x0510 ADCDAT  4 R 0x00000000 49 \n0x0514 ADCRST  1 R/W  0x00 49 \n0x0530 ADCGN  2 R/W  0x0200 49 \n0x0534  ADCOF  2 R/W  0x0200  49 \n \nDAC Address Base = 0xFFFF0600 \n0x0600 DAC0CON  1 R/W  0x00 57 \n0x0604 DAC0DAT  4 R/W  0x00000000 57 \n0x0608 DAC1CON  1 R/W  0x00 57 \n0x060C DAC1DAT  4 R/W  0x00000000 57 \n0x0610 DAC2CON  1 R/W  0x00 57 \n0x0614 DAC2DAT  4 R/W  0x00000000 57 \n0x0618 DAC3CON  1 R/W  0x00 57 \n0x061C DAC3DAT  4 R/W  0x00000000 57 \n \nUART Base Address = 0xFFFF0700 \n0x0700 COMTX  1 R/W  0x00 72 \n COMRX  1 R 0x00 72 \n COMDIV0  1 R/W  0x00 72 \n0x0704 COMIEN0  1 R/W  0x00 72 \n COMDIV1  1 R/W  0x00 73 \n0x0708 COMIID0  1 R 0x01 73 \n0x070C COMCON0  1 R/W  0x00 73 \n0x0710 COMCON1  1 R/W  0x00 73 \n0x0714 COMSTA0  1 R 0x60 73 \n0x0718  COMSTA1  1 R 0x00  74 \n0x071C COMSCR  1 R/W  0x00 74 \n0x0720 COMIEN1  1 R/W  0x04 74 \n0x0724 COMIID1  1 R 0x01 74 \n0x0728 COMADR  1 R/W  0xAA  75 \n0x072C COMDIV2  2 R/W  0x0000 74 \n \n \n \n \n  \n \n \n \n  Address  Name  Byte  Access \nType  Default \nValue  Page  \nI2C0 Base Address = 0xFFFF0800  \n0x0800 I2C0MSTA  1 R/W  0x00 77 \n0x0804 I2C0SSTA  1 R 0x01 77 \n0x0808 I2C0SRX  1 R 0x00 78 \n0x080C I2C0STX  1 W 0x00 78 \n0x0810 I2C0MRX  1 R 0x00 78 \n0x0814 I2C0MTX  1 W 0x00 78 \n0x0818 I2C0CNT  1 R/W  0x00 78 \n0x081C I2C0ADR  1 R/W  0x00 78 \n0x0824 I2C0BYTE  1 R/W  0x00 78 \n0x0828 I2C0ALT  1 R/W  0x00 79 \n0x082C  I2C0CFG  1 R/W  0x00  79 \n0x0830 I2C0DIV  2 R/W  0x1F1F 80 \n0x0838 I2C0ID0  1 R/W  0x00 80 \n0x083C I2C0ID1  1 R/W  0x00 80 \n0x0840 I2C0ID2  1 R/W  0x00 80 \n0x0844 I2C0ID3  1 R/W  0x00 80 \n0x0848 I2C0CCNT  1 R/W  0x01 80 \n0x084C I2C0FSTA  2 R/W  0x0000 80 \n \nI2C1 Base Address = 0xFFFF0900  \n0x0900 I2C1MSTA  1 R/W  0x00 77 \n0x0904  I2C1SSTA  1 R 0x01  77 \n0x0908 I2C1SRX  1 R 0x00 78 \n0x090C I2C1STX  1 W 0x00 78 \n0x0910 I2C1MRX  1 R 0x00 78 \n0x0914 I2C1MTX  1 W 0x00 78 \n0x0918 I2C1CNT  1 R/W  0x00 78 \n0x091C  I2C1ADR  1 R/W  0x00  78 \n0x0924 I2C1BYTE  1 R/W  0x00 78 \n0x0928 I2C1ALT  1 R/W  0x00 79 \n0x092C I2C1CFG  1 R/W  0x00 79 \n0x0930 I2C1DIV  2 R/W  0x1F1F 80 \n0x0938 I2C1ID0  1 R/W  0x00 80 \n0x093C I2C1ID1  1 R/W  0x00 80 \n0x0940 I2C1ID2  1 R/W  0x00 80 \n0x0944 I2C1ID3  1 R/W  0x00 80 \n0x0948 I2C1CCNT  1 R/W  0x01 80 \n0x094C I2C1FSTA  2 R/W  0x0000 80 \n \nSPI Base Address = 0xFFFF0A00  \n0x0A00 SPISTA  1 R 0x00 76 \n0x0A04 SPIRX  1 R 0x00 76 \n0x0A08 SPITX  1 W 0x00 76 \n0x0A0C SPIDIV  1 R/W  0x1B  76 \n0x0A10 SPICON  2 R/W  0x0000 76 \n \n \n \n \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 45 of 102 Address  Name  Byte  Access \nType  Default Value  Page  \nPLA Base Address = 0xFFFF0B00 \n0x0B00  PLAELM0  2 R/W  0x0000 81 \n0x0B04  PLAELM1  2 R/W  0x0000 81 \n0x0B08  PLAELM2  2 R/W  0x0000 81 \n0x0B0C  PLAELM3  2 R/W  0x0000 81 \n0x0B10  PLAELM4  2 R/W  0x0000 81 \n0x0B14  PLAELM5  2 R/W  0x0000 81 \n0x0B18  PLAELM6  2 R/W  0x0000 81 \n0x0B1C  PLAELM7  2 R/W  0x0000 81 \n0x0B20  PLAELM8  2 R/W  0x0000 81 \n0x0B24  PLAELM9  2 R/W  0x0000 81 \n0x0B28  PLAELM10  2 R/W  0x0000  81 \n0x0B2C  PLAELM11  2 R/W  0x0000 81 \n0x0B30  PLAELM12  2 R/W  0x0000 81 \n0x0B34  PLAELM13  2 R/W  0x0000 81 \n0x0B38  PLAELM14  2 R/W  0x0000 81 \n0x0B3C  PLAELM15  2 R/W  0x0000 81 \n0x0B40  PLACLK  1 R/W  0x00 82 \n0x0B44  PLAIRQ  4 R/W  0x00000000 82 \n0x0B48  PLAADC  4 R/W  0x00000000 83 \n0x0B4C  PLADIN  4 R/W  0x00000000 83 \n0x0B50  PLADOUT  4 R 0x00000000 83 \n0x0B54  PLALCK  1 W 0x00  83 \n \nExternal Memory Base Address = 0xFFFFF000 \n0xF000 XMCFG  1 R/W  0x00 91 \n0xF010 XM0CON  1 R/W  0x00 91 \n0xF014 XM1CON  1 R/W  0x00 91 \n0xF018  XM2CON  1 R/W  0x00  91 \n0xF01C XM3CON  1 R/W  0x00 91 \n0xF020 XM0PAR  2 R/W  0x70FF 91 \n0xF024 XM1PAR  2 R/W  0x70FF 91 \n0xF028 XM2PAR  2 R/W  0x70FF 91 \n0xF02C XM3PAR  2 R/W  0x70FF 91 \n \n \n \n \n \n \n  \n \n \n \n  \n \n Address  Name  Byte  Access \nType  Default \nValue  Page  \nGPIO Base Address = 0xFFFFF400 \n0xF400 GP0CON  4 R/W  0x00000000 69 \n0xF404 GP1CON  4 R/W  0x00000000 69 \n0xF408 GP2CON  4 R/W  0x00000000 69 \n0xF40C GP3CON  4 R/W  0x00000000 69 \n0xF410 GP4CON  4 R/W  0x00000000 69 \n0xF420 GP0DAT  4 R/W  0x000000XX1 71 \n0xF424 GP0SET  4 W 0x000000XX1 71 \n0xF428 GP0CLR  4 W 0x000000XX1 71 \n0xF42C GP0PAR  4 R/W  0x20000000 69 \n0xF430 GP1DAT  4 R/W  0x000000XX1 70 \n0xF434  GP1SET  4 W 0x000000XX1 71 \n0xF438 GP1CLR  4 W 0x000000XX1 71 \n0xF43C GP1PAR  4 R/W  0x00000000 69 \n0xF440 GP2DAT  4 R/W  0x000000XX1 70 \n0xF444 GP2SET  4 W 0x000000XX1 71 \n0xF448 GP2CLR  4 W 0x000000XX1 71 \n0xF450 GP3DAT  4 R/W  0x000000XX1 70 \n0xF454 GP3SET  4 W 0x000000XX1 71 \n0xF458 GP3CLR  4 W 0x000000XX1 71 \n0xF460 GP4DAT  4 R/W  0x000000XX1 70 \n0xF464 GP4SET  4 W 0x000000XX1 71 \n0xF468  GP4CLR  4 W 0x000000XX1 71 \n1 X = 0, 1, 2, or 3.  \nFlash/EE Base Address = 0xFFFFF800  \n0xF800 FEESTA  1 R 0x20 53 \n0xF804  FEEMOD  2 R/W  0x0000  53 \n0xF808 FEECON  1 R/W  0x07 54 \n0xF80C FEEDAT  2 R/W  0xXXXX1 54 \n0xF810 FEEADR  2 R/W  0x0000 54 \n0xF818 FEESIGN  3 R 0xFFFFFF  54 \n0xF81C FEEPRO  4 R/W  0x00000000 54 \n0xF820  FEEHIDE  4 R/W  0xFFFFFFFF  54 \n1 X = 0, 1, 2, or 3.  \nPWM Base Address = 0xFFFFFC00 \n0xFC00 PWMCON  2 R/W  0x0000 67 \n0xFC04 PWMSTA  2 R/W  0x0000 67 \n0xFC08 PWMDAT0  2 R/W  0x0000 68 \n0xFC0C PWMDAT1  2 R/W  0x0000 68 \n0xFC10 PWMCFG  2 R/W  0x0000 68 \n0xFC14 PWMCH0  2 R/W  0x0000 68 \n0xFC18  PWMCH1  2 R/W  0x0000  68 \n0xFC1C PWMCH2  2 R/W  0x0000 68 \n0xFC20 PWMEN  2 R/W  0x0000 68 \n0xFC24 PWMDAT2  2 R/W  0x0000 68 \n      \n      \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 46 of 102 ADC CIRCUIT OVERVIEW\nThe analog-to-digital converter (ADC) incorporates a fast, \nmultichannel, 12-bit ADC. It can operate from 2.7 V to 3.6 V \nsupplies and is capable of providing a throughput of up to 1 MSPS when the clock source is 41.78 MHz. This block provides the user with a multichannel multiplexer, a differential \ntrack-and-hold, an on-chip reference, and an ADC.  \nThe ADC consists of a 12-bit successive approximation converter \nbased around two capacitor DACs. Depending on the input signal configuration, the ADC can operate in one of three modes. \n\uf0b7 Fully differential mode, for small and balanced signals \n\uf0b7 Single-ended mode, for any single-ended signals \n\uf0b7 Pseudo differential mode, for any single-ended signals, \ntaking advantage of the common-mode rejection offered by the pseudo differential input \nThe converter accepts an analog input range of 0 V to V\nREF when \noperating in single-ended or pseudo differential mode. In fully differential mode, the input signal must be balanced around a common-mode voltage (V\nCM) in the 0 V to AV DD range with a \nmaximum amplitude of 2 V REF (see Figure 48). \n04955-011AVDD\nVCMVCM\nVCM\n02VREF2VREF2VREF\n \nFigure 48. Examples of Balanced Signals in Fully Differential Mode \nA high precision, low drift, factory calibrated, 2.5 V reference is provided on-chip. An external reference can also be connected as \ndescribed in the Band Gap Reference section. \nSingle or continuous conversion modes can be initiated in the \nsoftware. An external CONV\nSTART pin, an output generated from \nthe on-chip PLA, or a Timer0 or Timer1 overflow can also be \nused to generate a repetitive trigger for ADC conversions. \nA voltage output from an on-chip band gap reference propor-\ntional to absolute temperature can also be routed through the \nfront-end ADC multiplexer, effectively an additional ADC channel \ninput. This facilitates an internal temperature sensor channel \nthat measures die temperature to an accuracy of \uf0b13°C. \nTRANSFER FUNCTION \nPseudo Differential and Single-Ended Modes  \nIn pseudo differential or single-ended mode, the input range  \nis 0 V to V REF. The output coding is straight binary in pseudo \ndifferential and single-ended modes with \n1 LSB = FS/4096, or  \n2.5 V/4096 = 0.61 mV, or  610 μV when V\nREF = 2.5 V The ideal code transitions occur midway between successive \ninteger LSB values (that is, 1/2 LSB, 3/2 LSB, 5/2 LSB, … ,  FS − 3/2 LSB). The ideal input/output transfer characteristic  \nis shown in Figure 49. \n04955-012OUTPUT CODE\nVOLTAGE INPUT1111  1111  1111\n1111  1111  1110\n1111  1111  1101\n1111  1111  1100\n0000  0000  0011\n1LSB0V +FS – 1LSB0000  0000  0010\n0000  0000  0001\n0000  0000  00001LSB =FS\n4096\n \nFigure 49. ADC Transfer Function in Pseudo Differential or Single-Ended Mode  \nFully Differential Mode \nThe amplitude of the differential signal is the difference between \nthe signals applied to the V IN+ and V IN– input voltage pins (that \nis, V IN+ − V IN–). The maximum amplitude of the differential \nsignal is, therefore, –V REF to +V REF p-p (that is, 2 × V REF). This is \nregardless of the common mode (CM). The common mode is \nthe average of the two signals, for example, (V IN+ + V IN–)/2, and \nis, therefore, the voltage that the two inputs are centered on. \nThis results in the span of each input being CM \uf0b1\uf020VREF/2. This \nvoltage has to be set up externally, and its range varies with V REF \n(see the Driving the Analog Inputs section). \nThe output coding is twos complement in fully differential mode \nwith 1 LSB = 2 V REF/4096 or 2 × 2.5 V/4096 = 1.22 mV when \nVREF = 2.5 V . The output result is ±11 bits, but this is shifted by 1 \nto the right. This allows the result in ADCDAT to be declared as a \nsigned integer when writing C code. The designed code transitions occur midway between successive integer LSB values \n(that is, 1/2 LSB, 3/2 LSB, 5/2 LSB, … , FS − 3/2 LSB). The ideal \ninput/output transfer characteristic is shown in Figure 50. \n04955-013OUTPUT CODE\nVOLTAGE INPUT (V IN+ – V IN–)0  1111  1111  1110\n0  1111  1111  1100\n0  1111  1111  1010\n0  0000  0000  0010\n0  0000  0000  0000\n1  1111  1111  1110\n1  0000  0000  0100\n1  0000  0000  0010\n1  0000  0000  0000\n–VREF + 1LSB +VREF – 1LSB 0LSB1LSB =2 × V REF\n4096SIGN\nBIT\n \nFigure 50. ADC Transfer Function in Differential Mode \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 47 of 102 TYPICAL OPERATION  \nOnce configured via the ADC control and channel selection \nregisters, the ADC converts the analog input and provides a  \n12-bit result in the ADC data register. \nThe top four bits are the sign bits. The 12-bit result is placed \nfrom Bit 16 to Bit 27, as shown in Figure 51. Again, it should be noted that, in fully differential mode, the result is represented in \ntwos complement format. In pseudo differential and single-\nended modes, the result is represented in straight binary format. \n04955-014SIGN BITS 12-BIT ADC RESULT31 27 16 15 0\n \nFigure 51. ADC Result Format \nThe same format is used in DACxDAT, simplifying the software. \nCurrent Consumption \nThe ADC in standby mode, that is, powered up but not \nconverting, typically consumes 640 μA. The internal reference \nadds 140 μA. During conversion, the extra current is 0.3 μA multiplied by the sampling frequency (in kilohertz (kHz)). Figure 43 shows the current consumption vs. the sampling frequency of the ADC. \nTiming \nFigure 52 gives details of the ADC timing. Users control the \nADC clock speed and the number of acquisition clocks in the \nADCCON MMR. By default, the acquisition time is eight clocks \nand the clock divider is 2. The number of extra clocks (such as \nbit trial or write) is set to 19, which gives a sampling rate of 774 kSPS. For conversion on the temperature sensor, the ADC acquisition time is automatically set to 16 clocks, and the ADC clock divider is set to 32. When using multiple channels, including the temperature sensor, the timing settings revert to \nthe user-defined settings after reading the temperature sensor \nchannel. \n04955-015ADC CLOCKACQ BIT TRIAL\nDATA\nADCSTA = 0 ADCSTA = 1\nADC INTERRUPTWRITE\nCONV START\nADCBUSY\nADCDAT\n \nFigure 52. ADC Timing \nADuC7019 \nThe ADuC7019 is identical to the ADuC7020 except for one \nbuffered ADC channel, ADC3, and it has only three DACs. The \noutput buffer of the fourth DAC is internally connected to the \nADC3 channel as shown in Figure 53. \n04955-0161MSPS\n12-BIT ADC12-BIT\nDACMUX\nADC3\nADC15DAC3ADuC7019\n \nFigure 53. ADC3 Buffered Input \nNote that the DAC3 output pin must be connected to a 10 nF \ncapacitor to AGND. This channel should be used to measure dc voltages only. ADC calibration may be necessary on this channel. \nMMRS INTERFACE \nThe ADC is controlled and configured via the eight MMRs described in this section. \nTable 17. ADCCON Register \nName  Address Default Value Access \nADCCON 0xFFFF0500 0x0600 R/W \nADCCON is an ADC control register that allows the programmer \nto enable the ADC peripheral, select the mode of operation of \nthe ADC (in single-ended mode, pseudo differential mode, or fully differential mode), and select the conversion type. This \nMMR is described in Table 18. \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 48 of 102 Table 18. ADCCON MMR Bit Designations \nBit Value  Description  \n15:13   Reserved.  \n12:10   ADC clock speed.  \n 000 fADC/1. This divider is provided to obtain  \n1 MSPS ADC with an external clock <41.78 MHz.  \n 001 fADC/2 (default value).  \n 010 fADC/4.  \n 011 fADC/8.  \n 100 fADC/16. \n 101 fADC/32. \n9:8  ADC acquisition time.  \n 00 Two  clocks.  \n 01 Four  clocks.  \n 10 Eight  clocks (default value).  \n 11 16 clocks.  \n7  Enable start conversion.  \n  Set by the user to start any type of conversion \ncommand. Cleared by the user to disable a \nstart conversion (clearing this bit does not \nstop the ADC when continuously converting).  \n6  Reserved.  \n   \n5  ADC power control.  \n  Set by the user to place the ADC in normal \nmode (the ADC must be powered up for at least \n5 μs before it converts correctly). Cleared  by the \nuser to place the ADC in power -down mode.  \n4:3  Conversion mode.  \n 00 Single -ended mode.  \n 01 Differential mode.  \n 10 Pseudo differential mode.  \n 11 Reserved.  \n2:0  Conversion type.  \n 000 Enable CONV START pin as a conversion input.  \n 001 Enable Timer1 as a conversion input.  \n 010 Enable Timer0 as a conversion input.  \n 011 Single software conversion. Sets to 000 after \nconversion ( note that  Bit 7 of ADCCON MMR \nshould be cleared after starting a single software conversion to avoid further \nconversions triggered by the \nCONV START pin).  \n 100 Continuous software conversion.  \n 101 PLA conversion.  \n Other  Reserved.  Table 19. ADCCP Register  \nName  Address  Default Value  Access  \nADCCP  0xFFFF0504 0x00 R/W  \nADCCP is an ADC positive channel selection register. This \nMMR is described in Table 20. \nTable 20. ADCCP1 MMR Bit Designation  \nBit Value  Description  \n7:5  Reserved.  \n4:0  Positive channel selection bits.  \n 00000 ADC0. \n 00001 ADC1. \n 00010  ADC2.  \n 00011 ADC3. \n 00100 ADC4. \n 00101 ADC5. \n 00110 ADC6. \n 00111 ADC7. \n 01000  ADC8.  \n 01001 ADC9. \n 01010 ADC10. \n 01011 ADC11. \n 01100 DAC0/ADC12.  \n 01101 DAC1/ADC13.  \n 01110 DAC2/ADC14.  \n 01111 DAC3/ADC15.  \n 10000 Temperature sensor.  \n 10001 AGND (self -diagnostic feature).  \n 10010 Internal reference (self -diagnostic feature).  \n 10011  AV DD/2. \n Others  Reserved.  \n1 ADC and DAC channel availability depends on the part model. See Ordering \nGuide  for details.  \nTable 21. ADCCN Register  \nName  Address  Default Value  Access  \nADCCN  0xFFFF0508 0x01 R/W  \nADCCN is an ADC negative channel selection register. This \nMMR is described in Table 22. \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 49 of 102 Table 22. ADCCN MMR Bit Designations \nBit Value Description \n7:5  Reserved. \n4:0  Negative channel selection bits. \n 00000 ADC0. \n 00001 ADC1. \n 00010 ADC2. \n 00011 ADC3. \n 00100 ADC4. \n 00101 ADC5. \n 00110 ADC6. \n 00111 ADC7. \n 01000 ADC8. \n 01001 ADC9. \n 01010 ADC10. \n 01011 ADC11. \n 01100 DAC0/ADC12. \n 01101 DAC1/ADC13. \n 01110 DAC2/ADC14. \n 01111 DAC3/ADC15. \n 10000 Internal reference (self-diagnostic feature). \n Others Reserved. \nTable 23. ADCSTA Register \nName  Address Default Value Access \nADCSTA 0xFFFF050C 0x00 R \nADCSTA is an  ADC status register that indicates when an ADC \nconversion result is ready. The ADCSTA register contains only \none bit, ADCReady (Bit 0), representing the status of the ADC. This bit is set at the end of an ADC conversion, generating an \nADC interrupt. It is cleared automatically by reading the \nADCDAT MMR. When the ADC is performing a conversion, the status of the ADC can be read externally via the ADC\nBUSY \npin. This pin is high during a conversion. When the conversion is finished, ADC\nBUSY goes back low. This information can be \navailable on P0.5 (see the General-Purpose Input/Output \nsection) if enabled in the ADCCON register. \nTable 24. ADCDAT Register \nName  Address Default Value Access \nADCDAT 0xFFFF0510 0x00000000 R \nADCDAT is an ADC data result register. It holds the 12-bit \nADC result as shown in Figure 51. \nTable 25. ADCRST Register \nName  Address Default Value Access \nADCRST 0xFFFF0514 0x00 R/W \nADCRST resets the digital interface of the ADC. Writing any value \nto this register resets all the ADC registers to their default values. \nTable 26. ADCGN Register \nName  Address Default Value Access \nADCGN 0xFFFF0530 0x0200 R/W \nADCGN is a 10-bit gain calibration register. Table 27. ADCOF Register \nName  Address Default Value Access \nADCOF 0xFFFF0534 0x0200 R/W \nADCOF is a 10-bit offset calibration register. \nCONVERTER OPERATION \nThe ADC incorporates a successive approximation (SAR) \narchitecture involving a charge-sampled input stage. This \narchitecture can operate in three modes: differential, pseudo \ndifferential, and single-ended. \nDifferential Mode \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 each contain a \nsuccessive approximation ADC based on two capacitive DACs. \nFigure 54 and Figure 55 show simplified schematics of the ADC in acquisition and conversion phase, respectively. The ADC  \ncomprises control logic, a SAR, and two capacitive DACs. In \nFigure 54 (the acquisition phase), SW3 is closed and SW1 and SW2 are in Position A. The comparator is held in a balanced condition, and the sampling capacitor arrays acquire the \ndifferential signal on the input. \n04955-017CAPACITIVE\nDAC\nCAPACITIVE\nDACCONTROL\nLOGICCOMPARATOR\nSW3SW1\nAA\nBB\nSW2CS\nCS\nVREFAIN0\nAIN11MUXCHANNEL+\nCHANNEL–\n \nFigure 54. ADC Acquisition Phase \nWhen the ADC starts a conversion, as shown in Figure 55, SW3 \nopens, and then SW1 and SW2 move to Position B. This causes the comparator to become unbalanced. Both inputs are discon-nected once the conversion begins. The control logic and the charge redistribution DACs are used to add and subtract fixed \namounts of charge from the sampling capacitor arrays to bring \nthe comparator back into a balanced condition. When the comparator is rebalanced, the conversion is complete. The control logic generates the ADC output code. The output impedances of the sources driving the V\nIN+ and V IN– input \nvoltage pins must be matched; otherwise, the two inputs have \ndifferent settling times, resulting in errors. \n04955-018CAPACITIVE\nDAC\nCAPACITIVE\nDACCONTROL\nLOGICCOMPARATOR\nSW3SW1\nAA\nBB\nSW2CS\nCS\nVREFAIN0\nAIN11MUXCHANNEL+\nCHANNEL–\n \nFigure 55. ADC Conversion Phase\nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 50 of 102 Pseudo Differential Mode \nIn pseudo differential mode, Channel− is linked to the V IN− pin \nof the ADuC7019 /20/21/22/24/25/26/27/28/29. SW2 switches \nbetween A (Channel−) and B (V REF). The V IN− pin must be \nconnected to ground or a low voltage. The input signal on V IN+ \ncan then vary from V IN− to V REF + V IN−. Note that V IN− must be \nchosen so that V REF + V IN− does not exceed AV DD. \n04955-019CAPACITIVE\nDAC\nCAPACITIVE\nDACCONTROL\nLOGICCOMPARATOR\nSW3SW1\nAA\nBB\nSW2CS\nCS\nVREFAIN0\nAIN11\nVIN–MUXCHANNEL+\nCHANNEL–\n \nFigure 56. ADC in Pseudo Differential Mode  \nSingle-Ended Mode \nIn single-ended mode, SW2 is always connected internally to \nground. The V IN− pin can be floating. The input signal range on \nVIN+ is 0 V to V REF. \n04955-020CAPACITIVE\nDAC\nCAPACITIVE\nDACCONTROL\nLOGICCOMPARATOR\nSW3SW1AB CS\nCSAIN0\nAIN11MUXCHANNEL+\nCHANNEL–\n \nFigure 57. ADC in Single-Ended Mode  \nAnalog Input Structure \nFigure 58 shows the equivalent circ uit of the analog input structure \nof the ADC. The four diodes provide ESD protection for the analog \ninputs. Care must be taken to ensure that the analog input signals never exceed the supply rails by more than 300 mV; exceeding 300 mV causes these diodes to become forward-biased and start conducting into the substrate. These diodes can \nconduct up to 10 mA without ca using irreversib le damage to \nthe part. \nThe C1 capacitors in Figure 58 are typically 4 pF and can be \nprimarily attributed to pin capacitance. The resistors are lumped components made up of the on resistance of the switches. The value of these resistors is typically about 100 Ω. The C2 capacitors are the ADC’s sampling capacitors and typically have a capacitance of 16 pF. AVDD\nC1D\nDR1C2\nAVDD\nC1D\nDR1C2\n04955-021 \nFigure 58. Equivalent Analog Input Circuit Conversion Phase: Switches Open, \nTrack Phase: Switches Closed \nFor ac applications, removing high frequency components from \nthe analog input signal is recommended by using an RC low-\npass filter on the relevant analog input pins. In applications where harmonic distortion and signal-to-noise ratio are critical, the analog input should be driven from a low impedance source. Large source impedances significantly affect the ac \nperformance of the ADC. This can necessitate the use of an \ninput buffer amplifier. The choice of the op amp is a function of the particular application. Figure 59 and Figure 60 give an \nexample of an ADC front end. \n04955-061ADuC7019/\nADuC702x\nADC010Ω\n0.01µF\n \nFigure 59. Buffering Single-E nded/Pseudo Differential Input \n04955-062ADuC7019/\nADuC702x\nADC0\nVREF\nADC1\n \nFigure 60. Buffering Differential Inputs  \nWhen no amplifier is used to drive the analog input, the source \nimpedance should be limited to values lower than 1 kΩ. The maximum source impedance depends on the amount of total harmonic distortion (THD) that can be tolerated. The THD increases as the source impedance increases and the performance \ndegrades. \nDRIVING THE ANALOG INPUTS \nInternal or external references can be used for the ADC. In  \nthe differential mode of operation, there are restrictions on the \ncommon-mode input signal (V CM), which is dependent upon \nthe reference value and supply voltage used to ensure that the \nsignal remains within the supply rails. Table 28 gives some \ncalculated V CM minimum and V CM maximum values. \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 51 of 102 Table 28. V CM Ranges  \nAV DD VREF VCM Min  VCM Max  Signal Peak -to-Peak  \n3.3 V  2.5 V  1.25 V  2.05 V  2.5 V  \n2.048 V  1.024 V  2.276 V  2.048 V  \n1.25 V  0.75 V  2.55 V  1.25 V  \n3.0 V  2.5 V  1.25 V  1.75 V  2.5 V  \n2.048 V  1.024 V  1.976 V  2.048 V  \n1.25 V  0.75 V  2.25 V  1.25 V  \nCALIBRATION  \nBy default, the factory -set values written to the ADC offset \n(ADCOF) and gain coefficient registers (ADCGN) yield \noptimum performance in terms of end -point errors and \nlinearity for standalone operation of the part (see the \nSpecifi cations  section) . If system calibration is required, it is \npossible to modify the default offset and gain coefficients to improve end -point errors, but note that any modification to the \nfactory-set ADCOF and ADCGN values can degrade ADC \nlinearity performance.  \nFor system offset error correction, the ADC channel input stage must be tied to AGND. A continuous software ADC conversion loop must be implemented by modifying the value in ADCOF until  \nthe ADC result (ADCDAT) reads C ode 0 to Code 1. If the \nADCDAT value is greater than 1, ADCOF should be decremented  \nuntil ADCDAT reads 0 to 1. Offset error correction is done digitally and has a resolution of 0.25 LSB and a range of \n±3.125% of V\nREF. \nFor system gain error correction, the ADC channel input stage \nmust be tied to V REF. A continuous software ADC conversion \nloop must be implemented to modify the value in ADCGN \nuntil the ADC result (ADC DAT) reads C ode 4094 to Code 4095.  \nIf the ADCDAT value is less than 4094, ADCGN should be incremented until ADCDAT reads 4094 to 4095. Similar to the offset calibration, the gain calibration resolution is 0.25 LSB \nwith a range of ±3% of V\nREF. \nTEMPERATURE SENSOR  \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 provide voltage \noutput from on -chip band gap references proportional to \nabsolute temperature. This voltage output can also be routed \nthrough the front -end ADC multiplexer (effectively an additional  \nADC channel input) facilitating an internal temperature s ensor \nchannel, measuring die temperature to an accuracy of ± 3°C. \nThe following is an example routine showing how to use the \ninternal temperature sensor:  \nint main(void) \n{  \nfloat a = 0; \n short b; \n ADCCON = 0x20; // power-on the ADC \n delay(2000);  ADCCP = 0x10; // Select Temperature \nSensor as an // input to the ADC \n REFCON = 0x01; // connect internal 2.5V \nreference // to Vref pin \n ADCCON = 0xE4; // continuous conversion \n while(1) \n { \n   while (!ADCSTA){};  \n // wait for end of conversion \n  b = (ADCDAT >> 16); \n // To calculate temperature in °C, use \nthe formula: \n  a = 0x525 - b; \n // ((Temperature = 0x525 - Sensor \nVoltage) / 1.3) \n   a /= 1.3; \n   b = floor(a); \n  printf("Temperature: %d \noC\\n",b);  \n }  \n return 0; \n} \nBAND GAP REFERENCE  \nEach ADuC7019/ 20/21/22/24/25/26/27/28/29 provides an on -\nchip band gap reference of 2.5 V , which can be used for  the ADC \nand DAC. This internal reference also appears on the V REF pin. \nWhen using the internal reference, a 0.47 µF capacitor must be \nconnected from the external V REF pin to AGND to ensure stability  \nand fast response during ADC conversions. This reference can \nalso be connected to an external pin (V REF) and used as a refer -\nence for other circuits in the system. An external buffer is required \nbecause of the low drive capability of the V REF output. A program -\nmable option also allows an external reference inpu t on the V REF \npin. Note that it is not possible to disable the internal reference. \nTherefore, the external reference source must be capable of \noverdriving the internal reference source.  \nTable 29. REFCON Register  \nName  Address  Default Value  Access  \nREFCON  0xFFFF048C  0x00  R/W  \nThe band gap reference interface consists of an 8 -bit MMR \nREFCON , described in Table 30. \nTable 30. REFCON MMR Bit Designations \nBit Description  \n7:1 Reserved.  \n0 Internal r eference output enable. Set by user to \nconnect the internal 2.5 V reference to the V REF pin. \nThe reference can be used for  an external component \nbut must  be buffered. Cleared by user to disconnect \nthe reference from the V REF pin. \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 52 of 102 NONVOLATILE FLASH/EE MEMORY \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 incorporate \nFlash/EE memory technology on-chip to provide the user with \nnonvolatile, in-circuit reprogrammable memory space. \nLike EEPROM, flash memory can be programmed in-system  \nat a byte level, although it must first be erased. The erase is performed in page blocks. As a result, flash memory is often and more correctly referre d to as Flash/EE memory. \nOverall, Flash/EE memory represents a step closer to the  \nideal memory device that includes nonvolatility, in-circuit \nprogrammability, high density, and low cost. Incorporated in the ADuC7019/ 20/21/22/24/25/26/27/28/29, Flash/EE memory \ntechnology allows the user to update program code space in-\ncircuit, without the need to replace one-time programmable (OTP) devices at remote operating nodes. \nEach part contains a 64 kB array of Flash/EE memory. The \nlower 62 kB is available to the user and the upper 2 kB contain \npermanently embedded firmware, allowing in-circuit serial download. These 2 kB of embedded firmware also contain a power-on configuration routine that downloads factory-calibrated coefficients to the various calibrated peripherals \n(such as ADC, temperature sensor, and band gap references). \nThis 2 kB embedded firmware is hidden from user code. \nFlash/EE Memory Reliability \nThe Flash/EE memory arrays on the parts are fully qualified for \ntwo key Flash/EE memory characteristics: Flash/EE memory \ncycling endurance and Flash/EE memory data retention. \nEndurance quantifies the ability of the Flash/EE memory to be \ncycled through many program, read, and erase cycles. A single \nendurance cycle is composed of four independent, sequential \nevents, defined as \n1. Initial page erase sequence \n2. Read/verify sequence (single Flash/EE) \n3. Byte program sequence memory \n4. Second read/verify sequence (endurance cycle) \nIn reliability qualification, every half word (16-bit wide) \nlocation of the three pages (top, middle, and bottom) in the Flash/EE memory is cycled 10,000 times from 0x0000 to 0xFFFF. As indicated in Table 1, the Flash/EE memory endurance qualification is carried out in accordance with JEDEC Retention Lifetime Specification A117 over the \nindustrial temperature range of −40° to +125°C. The results \nallow the specification of a mi nimum endurance figure over a \nsupply temperature of 10,000 cycles. Retention quantifies the ability of the Flash/EE memory to retain its programmed data over time. Again, the parts are qualified in accordance with the formal JEDEC Retention Lifetime Specification (A117) at a specific junction temperature \n(T\nJ = 85°C). As part of this qualification procedure, the \nFlash/EE memory is cycled to its specified endurance limit, \ndescribed in Table 1, before data retention is characterized. This means that the Flash/EE memory is guaranteed to retain its data for its fully specified retention lifetime every time the Flash/EE \nmemory is reprogrammed. In addition, note that retention \nlifetime, based on an activation energy of 0.6 eV , derates with T\nJ \nas shown in Figure 61. \n150300450600\n30 40 55 70 85 100 125 135 150RETENTION (Years)\n0\n04955-085\nJUNCTION TEMPERATURE (°C) \nFigure 61. Flash/EE Memory Data Retention  \nPROGRAMMING \nThe 62 kB of Flash/EE memory ca n be programmed in-circuit, \nusing the serial download mode or the provided JTAG mode. \nSerial Downloading (In-Circuit Programming) \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 facilitate code \ndownload via the standard UART serial port or via the I2C port. \nThe parts enter serial download mode after a reset or power \ncycle if the BM pin is pulled low through an external 1 kΩ resistor. After a part is in serial download mode, the user can download code to the full 62 kB of Flash/EE memory while  the device is in-circuit in its target application hardware. An \nexecutable PC serial download is provided as part of the \ndevelopment system for serial downloading via the UART.  The AN-806 Application Note describes the protocol for  \nserial downloading via the I\n2C. \nJTAG Access \nThe JTAG protocol uses the on-chip JTAG interface to facilitate code download and debug.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 53 of 102 SECURITY  \nThe 62 kB of Flash/EE memory available to the user can be read \nand write protected.  \nBit 31 of the FEEPRO/FEEHIDE MMR (see Table 42) protects \nthe 62 kB from being read through JTAG programming mo de. \nThe other 31 bits of this register protect writing to the flash memory. Each bit protects four pages, that is, 2  kB. Write \nprotection is activated for all types of access.  \nThree Levels of Protection  \n• Protection can be set and removed by writing directly into \nFEEHIDE MMR. This protection does not remain after reset.  \n• Protection can be set by writing into the FEEPRO MMR. It \ntakes effect only after a save protection command (0x0C) \nand a reset. The FEEPRO MMR is protected by a key to \navoid direct access. The key is saved once and must be entered again to modify FEEPRO. A mass erase sets the key back to 0xFFFF but also erases all the user code.  \n• Flash can be permanently protected by using the FEEPRO \nMMR and a particular value of key: 0xDEADDEAD. \nEntering the key again to modify the FEEPRO register  is not allowed.  \nSequence to Write the Key  \n1. Write the bit in FEEPRO corresponding to the page to be \nprotected.  \n2. Enable key protection by setting Bit 6 of FEEMOD (Bit 5 \nmust equal 0).  \n3. Write a 32 -bit key in FEEADR  and FEEDAT.  \n4. Run the write key command 0x0C in FEECON; wait for the read to be successful by monitoring FEESTA.  \n5. Reset the part.  \nTo remove or modify  the protection, the same sequence is used \nwith a modified value of FEEPRO. If the key chosen is the value \n0xDEAD, the memory protection cannot be removed. Only  a mass \nerase unprotects the part, but it also erases all user code.  \nThe sequence to write the k ey is illustrated in the following \nexample (this protects writing Page 4 to Page 7 of the Flash):  \nFEEPRO=0xFFFFFFFD; //Protect pages 4 to 7 \nFEEMOD=0x48; //Write key enable \nFEEADR=0x1234; //16 bit key value \nFEEDAT=0x5678; //16 bit key value \nFEECON= 0x0C; // Write key command \nThe same sequence should be followed to protect the part \npermanently with FEEADR = 0xDEAD and FEEDAT = 0xDEAD . FLASH/EE CONTROL INT ERFACE  \nSerial and JTAG programming use the Flash/EE control interface, \nwhich includes the eight MMRs outl ined in this section.  \nTable 31. FEESTA Register  \nName  Address  Default Value  Access  \nFEESTA  0xFFFFF800 0x20 R \nFEESTA is a read -only register that reflects the status of the \nflash control interface as described in Table 32. \nTable 32. FEESTA MMR Bit Designations \nBit Description  \n15:6  Reserved.  \n5 Reserved.  \n4 Reserved.  \n3 Flash i nterrupt status bit. Set automatically when an \ninterrupt occurs, that is, when a command is complete \nand the Flash/EE interrupt enable bit in the FEEMOD \nregister is set. Cleared when reading the FEESTA register.  \n2 Flash/EE c ontroller busy. Set automatically when the \ncontr oller is busy. Cleared automatically when the \ncontroller is not busy.  \n1 Command f ail. Set automatically when a command \ncompletes unsuccessfully. Cleared automatically when \nreading the FEESTA register.  \n0 Command pass. Set by the MicroConverter when a \ncomm and completes successfully. Cleared automatic -\nally when reading the FEESTA register.  \nTable 33. FEEMOD Register  \nName  Address  Default Value  Access  \nFEEMOD  0xFFFFF804 0x0000 R/W  \nFEEMOD sets the operating mode of the flash control interface. \nTable 34 shows FEEMOD MMR bit designations.  \nTable 34. FEEMOD MMR Bit Designations \nBit Description  \n15:9  Reserved.  \n8 Reserved. This bit should always be set to 0.  \n7:5 Reserved. These bits should always be set to 0 except  \nwhen writing keys. See the Sequence to Write the Key  \nsection.  \n4 Flash/EE i nterrupt enable. Set by user to enable the \nFlash/EE interrupt. The interrupt occurs when a \ncommand is complete.  Cleared  by user to disable  \nthe Flash/EE interrupt.  \n3 Erase/write command protection. Set by user to \nenable the erase and write commands. Cleared to protect the Flash against the erase/write command.  \n2:0 Reserved. These bits should always be set to 0.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 54 of 102 Table 35. FEECON Register  \nName  Address  Default Value  Access  \nFEECON  0xFFFFF808 0x07 R/W  \nFEECON is an 8 -bit command register. The commands are \ndescribed in Table 36. \nTable 36. Command Codes in FEECON  \nCode  Command  Description  \n0x001 Null  Idle state.  \n0x011 Single r ead Load FEEDAT with the 16 -bit data. \nIndexed by FEEADR.  \n0x021 Single w rite Write FEEDAT at the address pointed to \nby FEEADR. This operation takes 50 µ s. \n0x031 Erase/w rite Erase the page indexed by FEEADR and \nwrite FEEDAT at the location pointed by \nFEEADR. This operation takes approxi -\nmately 24 ms.  \n0x041 Single v erify Compare the contents of the location \npointed by FEEADR to the data in \nFEEDAT. The result of the comparison is \nreturned in FEESTA , Bit 1.  \n0x051 Single erase  Erase the page indexed by FEEADR.  \n0x061 Mass e rase  Erase 62 kB of user space. The 2 kB of \nkernel are protected. This operation \ntakes 2.48 sec. To prevent accidental \nexecution, a command sequence is \nrequired to execute this instruction.  \nSee the Command Sequence for \nExecuting a Ma ss Erase  section.  \n0x07 Reserved  Reserved.  \n0x08 Reserved  Reserved.  \n0x09  Reserved  Reserved.  \n0x0A  Reserved  Reserved.  \n0x0B  Signature  Give a signature of the 64 kB of Flash/EE \nin the 24-bit FEESIGN MMR. This \noperation takes 32,778 clock cycles.  \n0x0C Protect  This command can run only once. The \nvalue of FEEPRO is saved and removed \nonly with a mass erase (0x06) of  the key.  \n0x0D  Reserved  Reserved.  \n0x0E  Reserved  Reserved.  \n0x0F Ping  No operation; interrupt generated.  \n \n1 The FEECON register always reads 0x07 immediately after execution of any \nof these commands.  Table 37. FEEDAT Register  \nName  Address  Default Value  Access  \nFEEDAT  0xFFFFF80C  0xXXXX1 R/W  \n1 X = 0, 1, 2, or 3.  \nFEEDAT is a 16 -bit data register . \nTable 38. FEEADR Register  \nName  Address  Default Value  Access  \nFEEADR  0xFFFFF810 0x0000 R/W  \nFEEADR is another 16 -bit address register . \nTable 39. FEESIGN Register \nName  Address  Default Value  Access  \nFEESIGN  0xFFFFF818 0xFFFFFF  R \nFEESIGN is a 24 -bit code signature.  \nTable 40. FEEPRO Register  \nName  Address  Default Value  Access  \nFEEPRO  0xFFFFF81C  0x00000000 R/W  \nFEEPRO MMR provides protection following a subsequent \nreset of the MMR. It requires a software key (see Table 42). \nTable 41. FEEHIDE Register  \nName  Address  Default Value  Access  \nFEEHIDE  0xFFFFF820  0xFFFFFFFF  R/W  \nFEEHIDE MMR provides immediate protection . It does not \nrequire any software key. Note that the protection settings in \nFEEHIDE are cleared by a reset (see Table 42). \nTable 42. FEEPRO and FEEHIDE MMR Bit Designations \nBit Description  \n31 Read protection. Cleared  by user to protect all code.  \nSet by user to allow reading the code.  \n30:0 Write p rotection for Page 123 to Page 120, Page 119  \nto Page 116, and Page 0 to Page 3. Cleared by user to \nprotect the pages from  writing. Set  by user to allow \nwriting the pages.  \nCommand Sequence for Executing a Mass Erase  \nFEEDAT=0x3CFF; \nFEEADR = 0xFFC3; \nFEEMOD= FEEMOD|0x8; //Erase key enable \nFEECON=0x06; //Mass erase command \n \n   \n \n \n \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 55 of 102 EXECUTION TIME FROM SRAM AND FLASH/EE  \nExecution from SRAM  \nFetching instructions from SRAM takes one clock cycle ; the \naccess time of the SRAM is 2 ns , and a clock cycle is 22 ns \nminimum. However, if the instruction involves reading or \nwriting data to memory, one extra cycle must be added if the data is in SRAM (or three cycles if the data is in Flash/EE) : one \ncycle to execute the instruction, and two cy cles to get the 32 -bit \ndata from Flash/EE. A control flow instruction (a branch instruction, for example) takes one cycle to fetch but also takes \ntwo cycles to fill the pipeline with the new instructions.  \nExecution from Flash/EE \nBecause the Flash/EE width is 16 bits and access time for 16- bit \nwords is 22 ns, execution from Flash/EE cannot be done in  \none cycle (as can be done from SRAM when the CD Bit = 0). \nAlso, some dead times are needed before accessing data for any value of the CD bit. \nIn ARM mode, wher e instructions are 32 bits, two cycles are \nneeded to fetch any instruction when CD = 0. In thumb mode, \nwhere instructions are 16 bits, one cycle is needed to fetch any instruction.  \nTiming is identical in both modes when executing instructions \nthat involve  using the Flash/EE for data memory. If the instruction  \nto be executed is a control flow instruction, an extra cycle is \nneeded to decode the new address of the program counter, and then four cycles are needed to fill the pipeline. A data -processing \ninstruc tion involving only the core register does not require any \nextra clock cycles. However, if it involves data in Flash/EE, an extra clock cycle is needed to decode the address of the data, and two cycles are needed to get the 32 -bit data from Flash/EE. \nAn ex tra cycle must also be added before fetching another \ninstruction. Data transfer instructions are more complex and are summarized in Table 43. \nTable 43. Execution Cycles in ARM/Thumb Mode  \nInstructions  Fetch \nCycles  Dead Time  Data Access  Dead Time  \nLD1 2/1 1 2 1 \nLDH  2/1 1 1 1 \nLDM/PUSH  2/1 N2 2 × N2 N1 \nSTR1 2/1 1 2 × 20 ns  1 \nSTRH  2/1 1 20 ns  1 \nSTRM/POP  2/1 N1 2 × N × 20 ns1 N1 \n1 The SWAP instruction combines an LD and STR instruction with only one \nfetch, giving a total of eight cycles +  40 ns.  \n2 N is the amount  of data to load or store in the multiple load/store instruction \n(1 < N ≤ 16).  \n \n \n RESET AND REMAP  \nThe ARM exception vectors are all situated at the bottom of the \nmemory array, from Address 0x00000000 to Address 0x00000020,  \nas shown in Figure 62.  \n04955-022KERNEL\nINTERRUPT\nSERVICE ROUTINES\nINTERRUPT\nSERVICE ROUTINES\nARM EXCEPTION\nVECTOR ADDRESSES0x000000200x00011FFF0x0008FFFF0xFFFFFFFF\nFLASH/EE\nSRAM\nMIRROR SPACE\n0x00000000 0x000000000x000100000x00080000\n \nFigure 62. Remap for Exception Execution  \nBy default, and after any reset, the Flash/EE is mirrored at the \nbottom of the memory array. The remap function allows the \nprogrammer to mirror the SRAM at the bottom of the memory array, which fac ilitates execution of exception routines from \nSRAM instead of from Flash/EE. This means exceptions are executed twice as fast, being executed in 32 -bit ARM mode with \n32-bit wide SRAM instead of 16 -bit wide Flash/EE memory.  \nRemap Operation  \nWhen a reset occu rs on the ADuC7019/20/21/22/24/25/26/27/  \n28/29 , execution automatically starts in the factory -programmed, \ninternal configuration code. This kernel is hidden and cannot be accessed by user code. If the part is in normal mode ( the BM \npin is high), it execute s the power -on configuration  routine of \nthe kernel and then jumps to the reset vector address, \n0x00000000, to execute the user’s reset exception routine.  \nBecause the Flash/EE is mirrored at the bottom of the memory \narray at reset, the reset interrupt routi ne must always be written \nin Flash/EE.  \nThe remap is done from Flash/EE by setting Bit 0 of the REMAP  \nregister. Caution must be taken to execute this command from Flash/EE, above Address 0x00080020, and not from the bottom of the ar ray because  this is replaced by the SRAM.  \nThis operation is reversible. The Flash/EE can be remapped at Address 0x00000000 by clearing Bit 0 of the REMAP MMR. Caution must again be taken to execute the remap function from outside the mirrored area. Any type of reset remaps the \nFlash/EE memory at the bottom of the array.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 56 of 102 Reset Operation  \nThere are four kinds of reset: external, power -on, watchdog \nexpiration, and software force. The RSTSTA register indicates \nthe source of the last reset, and RSTCLR allows clearing of the \nRSTSTA regi ster. These registers can be used during a reset \nexception service routine to identify the source of the reset.  \nIf RSTSTA is null, the reset is external.  \nTable 44. REMAP Register  \nName  Address  Default Value  Access  \nREMAP  0xFFFF0220 0xXX1 R/W  \n1 Depends on the model.  \nTable 45. REMAP MMR Bit Designations \nBit Name  Description  \n4  Read -only bit. Indicates the size of the Flash/EE \nmemory available. If this bit is set, only 32 kB of \nFlash/EE memory is available.  \n3  Read -only bit. Indicates the size of the SRAM \nmemory available. If this bit is set, only 4 kB of SRAM is available.  \n2:1  Reserved.  \n0 Remap  Remap bit. Set by user to remap the SRAM to Address 0x00000000. Cleared automatically \nafter reset to remap the Fl ash/EE memory to \nAddress 0x00000000.  \n Table 46. RSTSTA Register  \nName  Address  Default Value  Access  \nRSTSTA  0xFFFF0230 0x01 R/W  \nTable 47. RSTSTA MMR Bit Designations \nBit Description  \n7:3 Reserved.  \n2 Software r eset. Set by user to force a software reset. \nCleared by setting the corresponding bit in RSTCLR.  \n1 Watchdog t imeout. Set automatically when a watchdog \ntimeout occurs. Cleared by setting the corresponding \nbit in RSTCLR.  \n0 Power -on r eset. Set automatically when a power -on \nreset occurs. Cleared by setting the corresponding bit \nin RSTCLR.  \nTable 48. RSTCLR Register  \nName  Address  Default Value  Access  \nRSTCLR  0xFFFF0234 0x00 W \nNote that to clear the RSTSTA register, the user must write 0x07 \nto the RSTCLR register.  \n \n \n \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 57 of 102 OTHER ANALOG PERIPHERALS\nDAC \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 incorporate two, \nthree, or four 12-bit voltage output DACs on-chip, depending on \nthe model. Each DAC has a rail-to-rail voltage output buffer \ncapable of driving 5 kΩ/100 pF. \nEach DAC has three selectable ranges: 0 V to V REF (internal \nband gap 2.5 V reference), 0 V to DAC REF, and 0 V to AV DD. \nDAC REF is equivalent to an external reference for the DAC.  \nThe signal range is 0 V to AV DD. \nMMRs Interface \nEach DAC is independently configurable through a control \nregister and a data register. These two registers are identical for \nthe four DACs. Only DAC0CON (see Table 50) and DAC0DAT (see Table 52) are described in detail in this section. \nTable 49. DACxCON Registers \nName  Address Default Value Access \nDAC0CON 0xFFFF0600 0x00 R/W \nDAC1CON 0xFFFF0608 0x00 R/W \nDAC2CON 0xFFFF0610 0x00 R/W \nDAC3CON 0xFFFF0618 0x00 R/W \nTable 50. DAC0CON MMR Bit Designations \nBit Name Value Description \n7:6   Reserved. \n5 DACCLK  DAC update rate. Set by user to \nupdate the DAC using Timer1. \nCleared by user to update the DAC \nusing HCLK (core clock). \n4 DACCLR  DAC clear bit. Set by user to enable normal DAC operation. Cleared by \nuser to reset data register of the DAC \nto 0. \n3   Reserved. This bit should be left at 0. \n2   Reserved. This bit should be left at 0. \n1:0   DAC range bits. \n  00 Power-down mode. The DAC output is in three-state. \n  01 0 V to DAC REF range.  \n  10 0 V to V REF (2.5 V) range.  \n  11 0 V to AV DD range. \n Table 51. DACxDAT Registers \nName  Address Default Value Access \nDAC0DAT 0xFFFF0604 0x00000000 R/W \nDAC1DAT 0xFFFF060C 0x00000000 R/W \nDAC2DAT 0xFFFF0614 0x00000000 R/W \nDAC3DAT 0xFFFF061C 0x00000000 R/W \nTable 52. DAC0DAT MMR Bit Designations \nBit Description \n31:28 Reserved. \n27:16 12-bit data for DAC0. \n15:0 Reserved. \nUsing the DACs \nThe on-chip DAC architecture cons ists of a resistor string DAC \nfollowed by an output buffer ampl ifier. The functional equivalent \nis shown in Figure 63. \n04955-023RRRRR\nDAC0VREFAVDD\nDAC REF\n \nFigure 63. DAC Structure \nAs illustrated in Figure 63, the reference source for each DAC is \nuser-selectable in software. It can be AV DD, V REF, or DAC REF. In  \n0-to-AV DD mode, the DAC output transfer function spans from \n0 V to the voltage at the AV DD pin. In 0-to-DAC REF mode, the \nDAC output transfer function spans from 0 V to the voltage at the DAC\nREF pin. In 0-to-V REF mode, the DAC output transfer function \nspans from 0 V to the internal 2.5 V reference, V REF.  \nThe DAC output buffer amplifier features a true, rail-to-rail output stage implementation. This means that when unloaded, \neach output is capable of swinging to within less than 5 mV of \nboth AV\nDD and ground. Moreover, the DAC’s linearity specification \n(when driving a 5 kΩ resistive load to ground) is guaranteed through the full transfer function, except Code 0 to Code 100, \nand, in 0-to-AV\nDD mode only, Code 3995 to Code 4095.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 58 of 102 Linearity degradation near ground and AV DD is caused by satu-\nration of the output amplifier, and a general representation of its \neffects (neglecting offset and gain error) is illustrated in Figure 64. The dotted line in Figure 64 indicates the ideal transfer function, \nand the solid line represents what the transfer function may \nlook like with endpoint nonlinearities due to saturation of the output amplifier. Note that Figure 64 represents a transfer function in 0-to-AV\nDD mode only. In 0-to-V REF or 0-to-DAC REF mode \n(with V REF < AV DD or DAC REF < AV DD), the lower nonlinearity is \nsimilar. However, the upper portion of the transfer function follows the ideal line right to the end (V\nREF in this case, not AV DD), \nshowing no signs of endpoint linearity errors. \n04955-024AVDD\nAVDD– 100mV\n100mV\n0x00000000 0x0FFF0000 \nFigure 64. Endpoint Nonlineariti es Due to Amplifier Saturation \nThe endpoint nonlinearities conceptually illustrated in  Figure 64 get worse as a function of output loading. Most  of the ADuC7019 /20/21/22/24/25/26/27/28/29 data sheet \nspecifications assume a 5 kΩ resistive load to ground at the DAC output. As the output is forced to source or sink more current, the nonlinear regions at the top or bottom (respectively) \nof Figure 64 become larger. With larger current demands, this \ncan significantly limit output voltage swing. \nPOWER SUPPLY MONITOR \nThe power supply monitor regulates the IOV DD supply on the \nADuC7019/ 20/21/22/24/25/26/27/28/29. It indicates when the \nIOV DD supply pin drops below one of two supply trip points. \nThe monitor function is controlled via the PSMCON register.  \nIf enabled in the IRQEN or FIQEN register, the monitor \ninterrupts the core using the PSMI bit in the PSMCON MMR. \nThis bit is immediately cleared after CMP goes high. \nThis monitor function allows the user to save working registers \nto avoid possible data loss due to low supply or brown-out conditions. It also ensures that normal code execution does  \nnot resume until a safe supply level is established. \nTable 53. PSMCON Register \nName  Address Default Value Access \nPSMCON 0xFFFF0440 0x0008 R/W Table 54. PSMCON MMR Bit Descriptions \nBit Name Description \n3 CMP Comparator bit. This is a read-only bit that \ndirectly reflects the state of the comparator. \nRead 1 indicates that the IOV DD supply is above \nits selected trip point or that the PSM is in \npower-down mode. Read 0 indicates that the \nIOV DD supply is below its selected trip point. This \nbit should be set before leaving the interrupt \nservice routine. \n2 TP Trip point selection bit. 0 = 2.79 V, 1 = 3.07 V. \n1 PSMEN Power supply monitor enable bit. Set to 1 to \nenable the power supply monitor circuit. Cleared  \nto 0 to disable the power supply monitor circuit. \n0 PSMI Power supply monitor interru pt bit. This bit is set \nhigh by the MicroConverter after CMP goes low, \nindicating low I/O supply. The PSMI bit can be used to interrupt the processor. After CMP \nreturns high, the PSMI bit can be cleared by \nwriting a 1 to this location. A 0 write has no effect. There is no timeout delay; PSMI can be \nimmediately cleared after CMP goes high. \nCOMPARATOR \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 integrate voltage \ncomparators. The positive input is multiplexed with ADC2, and \nthe negative input has two options: ADC3 and DAC0. The output \nof the comparator can be configured to generate a system inter-\nrupt, be routed directly to the programmable logic array, start an ADC conversion, or be on an external pin, CMP\nOUT, as \nshown in Figure 65. \n04955-025MUXIRQ\nMUX\nDAC0ADC2/CMP0\nADC3/CMP1\nP0.0/CMP OUT\n \nFigure 65. Comparator \nNote that because the ADuC7022, ADuC7025, and ADu7027 parts do not support a DAC0 output, it is not possible to use \nDAC0 as a comparator input on these parts. \nHysteresis \nFigure 66 shows how the input o ffset voltage and hysteresis \nterms are defined. \n04955-063CMP OUT\nCMP0VH VH\nVOS \nFigure 66. Comparator Hysteresis Transfer Function \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 59 of 102 Input offset voltage (V OS) is the difference between the center of \nthe hysteresis range and the ground level. This can either be \npositive or negative. The hysteresis voltage (V H) is one -half the \nwidth of the hysteresis range.  \nComparator Interface  \nThe comparator interface consists of a 16 -bit MMR, CMPCON, \nwhich is described in Table 56. \nTable 55. CMPCON Register  \nName  Address  Default Value  Access  \nCMPCON  0xFFFF0444 0x0000 R/W  \nTable 56. CMPCON MMR Bit Descriptions \nBit Name  Value  Description  \n15:11    Reserved.  \n10 CMPEN   Comparator enable bit. Set by user \nto enable the comparator. Cleared \nby user to disable the comparator.  \n9:8 CMPIN   Comparator negative input  \nselect bits.  \n  00 AV DD/2. \n  01 ADC3 input.  \n  10 DAC0 output.  \n  11 Reserved.  \n7:6 CMPOC   Comparator output configuration bits.  \n  00 Reserved.  \n  01 Reserved.  \n  10 Output on CMP OUT. \n  11 IRQ.  \n5 CMPOL   Comparator output logic state bit. When low, the comparator output \nis high if the positive input (CMP0) \nis above the negative input (CMP1). \nWhen high, the comparator output \nis high if the positive input is below \nthe negative input.  \n4:3 CMPRES   Response time.  \n  00 5 µs response time is typical for large signals (2.5 V differential).  \n17 µs response time is typical for \nsmall signals (0.65 mV differential).  \n  11 3 µs typical.  \n  01/10 Reserved.  \n2 CMPHYST   Comparator hysteresis bit. Set by \nuser to have a hysteresis of about \n7.5 mV. Cleared by user to have no \nhysteresis.  \n1 CMPORI   Comparator output rising edge \ninterrupt. Set automatically when a \nrising edge occurs on the moni -\ntored voltage (CMP0). Cleared by \nuser by writing a 1 to this bit.  \n0 CMPOFI   Comparator output falling edge \ninterrupt. Set automatically when a \nfalling edge occurs on the monitored  \nvoltage (CMP0). Cleared by user.  OSCILLATOR AND PLL —POWER CONTROL  \nClocking System  \nEach ADuC7019/ 20/21/22/24/25/26/27/28/29 integrates a \n32.768 kHz  ±3% oscillator, a clock divider, and a PLL. The PLL \nlocks onto a multiple (1275) of the internal oscillator or an external \n32.768 kHz crystal to provide a stable 41.78 MHz clock (UCLK) for \nthe system.  To allow power saving, the core can operate at this \nfrequency, or at binary submultiples of it. The actual core  oper -\nating frequency, UCLK/2CD, is refered to as HCLK. The default \ncore clock is the PLL clock divided by 8 (CD = 3) or 5.22 MHz. \nThe core clock frequency can also come from an external clock \non the ECLK pin as described in Figure 67. The core clock can \nbe outputted on ECLK when using an internal oscillator or \nexternal crystal.  \nNote that when the ECLK pin is used to output the core clock, \nthe output signal is  not buffered and is not suitable for use as a \nclock source to an external device without an external buffer.  \n04955-026 *32.768kHz ±3%AT POWER-UP\n41.78MHzOCLK\n32.768kHzWATCHDOG\nTIMERINT. 32kHz*\nOSCILLATORCRYSTAL\nOSCILLATOR\nWAKE-UP\nTIMER\nMDCLK\nHCLKPLL\nCOREI2CUCLK ANALOG\nPERIPHERALS\n/2CD CDXCLKO\nXCLKI\nP0.7/XCLK\nP0.7/ECLK \nFigure 67. Clocking System  \nThe selection of the clock source is in the PLLCON register. By \ndefault, the part uses the internal oscillator feeding the PLL.  \nExternal Crystal Selection  \nTo switch to an external crystal, the user must do the follow ing:  \n1. Enable the Timer2 interrupt and configure it for a timeout \nperiod of >120 µs.  \n2. Follow the write sequence to the PLLCON register , setting \nthe MDCLK bits to 01 and clearing the OSEL bit.  \n3. Force the part into NAP mode by following the correct \nwrite sequence to the POWCON register . \nWhen the part is interrupted from NAP mode by the \nTimer2 interrupt source, the clock source has switched to \nthe external clock.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 60 of 102 Example source code  \n t2val_old= T2VAL; \n     T2LD = 5; \n     TCON = 0x480; \n \n  while ((T2VAL == t2val_old) || (T2VAL > \n3)) //ensures timer value loaded \n  IRQEN = 0x10;                              \n//enable T2 interrupt \n  PLLKEY1 = 0xAA;  \n  PLLCON = 0x01;    PLLKEY2 = 0x55;     POWKEY1 = 0x01;    POWCON = 0x27;                             // Set Core into Nap mode    POWKEY2 = 0xF4; \nIn noisy environments, noise can couple to the external crystal \npins, and PLL may lose lock moment arily . A PLL interrupt is \nprovided in the interrupt controller. The core clock is immediately \nhalted, and this interrupt is only serviced when the lock is restored.  \nIn case of crystal loss, the watchdog timer should be used. During \ninitialization, a test on the RSTSTA register can determine if the \nreset came from the watchdog timer.  \nExternal Clock Selection \nTo switch to an external clock on P0.7, configure P0.7 in \nMode  1. The external clock can be up to 44 MHz, providing  \nthe tolera nce is 1%.  Example source code  \n t2val_old= T2VAL;   \n     T2LD = 5;  \n     TCON = 0x480;  \n \n  while ((T2VAL == t2val_old) || (T2VAL \n> 3)) //ensures timer value loaded \n  IRQEN = 0x10;                         \n//enable T2 interrupt \n  PLLKEY1 = 0xAA;   \n  PLLCON = 0x03;  //Select external clock \n  PLLKEY2 = 0x55;   \n \n  POWKEY1 = 0x01;   \n  POWCON = 0x27;                        \n// Set Core into Nap mode   \n  POWKEY2 = 0xF4;  \nPower Control System  \nA choice of operating modes is available on the ADuC7019/ 20/ \n21/22/24/25/26/27/28/29 . Table 57 describes what part is powered  \non in the different modes and indicates the power -up time.  \nTable 58 gives some typical values of the total current consump -\ntion (analog + digital supply currents) in the different modes, \ndepending  on the clock divider bits. The ADC is turned off. Note \nthat these values also incl ude current consumption of the \nregulator and other parts on the test board where these values \nare measured.  \nTable 57. Operating Modes1 \nMode  Core  Peripherals  PLL  XTAL/T2/T3  IRQ0 to IRQ3  Start -Up/Power -On Time  \nActive  X X X X X 130 ms at CD = 0 \nPause   X X X X 24 ns at CD = 0; 3 µs at CD = 7  \nNap   X X X 24 ns at CD = 0; 3 µs at CD = 7 \nSleep     X X 1.58 ms  \nStop      X 1.7 ms  \n \n1 X indicates that the part is powered on.  \nTable 58. Typical Current Consumption at 25°C in Milliamperes  \nPC[2:0]  Mode  CD = 0  CD = 1  CD = 2  CD = 3  CD = 4  CD = 5  CD = 6  CD = 7  \n000 Active  33.1 21.2 13.8 10 8.1 7.2 6.7 6.45 \n001 Pause  22.7 13.3 8.5 6.1 4.9 4.3 4 3.85 \n010 Nap  3.8 3.8 3.8 3.8 3.8 3.8 3.8 3.8 \n011 Sleep  0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 \n100 Stop  0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 61 of 102 MMRs and Keys  \nThe operating mode, clocking mode, and programmable clock \ndivider are controlled via two MMRs : PLLCON (see Table 61) \nand POWCON (see Table 64). PLLCON controls the operating \nmode of the clock system, wh ereas  POWCON controls the core \nclock frequency and the power -down mode.  \nTo prevent accidental programming, a certain sequence  (see \nTable 65) must  be followed to write to the PLLCON and \nPOWCON registers.  \nTable 59. PLLKEYx Registers  \nName  Address  Default Value  Access  \nPLLKEY1  0xFFFF0410 0x0000 W \nPLLKEY2  0xFFFF0418 0x0000 W \nTable 60. PLLCON Register  \nName  Address  Default Value  Access  \nPLLCON  0xFFFF0414 0x21 R/W  \nTable 61. PLLCON MMR Bit Designations \nBit Name  Value  Description  \n7:6   Reserved.  \n5 OSEL   32 kHz PLL input selection. Set by  \nuser to select the internal 32 kHz \noscillator. Set by default. Cleared by \nuser to select the external 32 kHz crystal.  \n4:2   Reserved.  \n1:0 MDCLK   Clocking modes.  \n  00 Reserved.  \n  01 PLL. Default configuration.  \n  10 Reserved.  \n  11 External clock on the P0.7 pin.  \nTable 62. POWKEYx Registers  \nName  Address  Default Value  Access  \nPOWKEY1  0xFFFF0404 0x0000 W \nPOWKEY2  0xFFFF040C 0x0000 W \n Table 63. POWCON Register  \nName  Address  Default Value  Access  \nPOWCON  0xFFFF0408 0x0003 R/W  \nTable 64. POWCON MMR Bit Designations \nBit Name  Value  Description  \n7   Reserved.  \n6:4 PC  Operating m odes.  \n  000 Active mode.  \n  001 Pause mode.  \n  010 Nap.  \n  011 Sleep mode. IRQ0 to IRQ3 and Timer2 \ncan wake up the part.  \n  100 Stop m ode.  IRQ0 to IRQ3 can wake up \nthe part.  \n  Others  Reserved.  \n3   Reserved.  \n2:0 CD  CPU c lock divider bits. \n  000 41.78 MHz.  \n  001 20.89 MHz.  \n  010 10.44 MHz.  \n  011 5.22 MHz.  \n  100 2.61 MHz.  \n  101 1.31 MHz.  \n  110 653 kHz. \n  111 326 kHz. \nTable 65. PLLCON and POWCON Write Sequence  \nPLLCON  POWCON  \nPLLKEY1 = 0xAA POWKEY1 = 0x01  \nPLLCON = 0x01  POWCON = u ser value  \nPLLKEY2 = 0x55  POWKEY2 = 0xF4  \n \n \nADuC7019/20/21/22/24/25/26/27/2 8/29 Data Sheet \n \nRev. H | Page 62 of 102 DIGITAL PERIPHERALS\n3-PHASE PWM  \nEach ADuC7019/ 20/21/22/24/25/26/27/28/29 provides a flexible  \nand programmable, 3 -phase pulse -width modulation  (PWM) \nwaveform generator. It can be programmed to generate the \nrequired switching patterns to drive a 3 -phase voltage source \ninverter for  ac induction motor control (ACIM).  Note that only \nactive high patterns can be produced.  \nThe PWM generator produces three pairs of PWM signals on the six PWM output pins (PWM0\nH, PWM0 L, PWM1 H, PWM1 L, \nPWM2 H, and PWM2 L). The six PWM output signals consist of \nthree high- side drive signals and three low -side drive signals.  \nThe switching frequency and dead time of the generated PWM patterns are programmable using the PWMDAT0 and PWMDAT1  \nMMRs. In addition, three duty -cycle control registers (PWMCH0,  \nPWMCH1, and PW MCH2) directly control the duty cycles of \nthe three pairs of PWM signals.  \nEach of the six PWM output signals can be enabled or disabled by separate output enable bits of the PWMEN register. In addition,  \nthree control bits of the PWMEN register permit cross over of \nthe two signals of a PWM pair. In crossover mode, the PWM signal destined for the high -side switch is diverted to the  comple -\nmentary low -side output. The signal destined for the low -side \nswitch is diverted to the corresponding high -side output signal.  \nIn many applications, there is a need to provide an isolation \nbarrier in the gate -drive circuits that turn on the inverter power \ndevices. In general, there are two common isolation techniques: \noptical isolation using optocouplers and transformer is olation \nusing pulse transformers. The PWM controller permits mixing \nof the output PWM signals with a high frequency chopping signal  \nto permit easy interface to such pulse transformers. The features \nof this gate -drive chopping mode can be controlled by the \nPWMCFG register. An 8 -bit value within the PWMCFG \nregister directly controls the chopping frequency. High \nfrequency chopping can be independently enabled for the high -\nside and low -side outputs using separate control bits in the \nPWMCFG register. \nThe PWM generator can operate in one of two distinct modes : \nsingle update mode or double update mode. In single update \nmode, the duty cycle values are programmable only once per PWM period so that the resulting PWM patterns are symmetrical  \nabout the midpoint of the P WM period. In the double update \nmode, a second updating of the PWM duty cycle values is \nimplemented at the midpoint of the PWM period.  \nIn double update mode, it is also possible to produce asymmetrical \nPWM patterns that produce lower harmonic distortion i n 3-phase  \nPWM inverters. This technique permits closed -loop controllers \nto change the average voltage applied to the machine windings at a faster rate. As a result, faster closed -loop bandwidths  are \nachieved. The operating mode of the PWM block is selected  by \na control bit in the PWMCON register. In single update mode, an internal synchronization pulse, PWMSYNC , is produced at \nthe start of each PWM period. In double update mode, an additional PWMSY NC pulse is produced at the midpoint of \neach PWM period.  \nThe PWM block can also provide an internal synchronization \npulse on the PWM\nSYNC pin that is synchronized to the PWM \nswitching frequency. In single update mode, a pulse is produced at the start of each PWM period. In double update mode, an additional pulse is produced at the mid -point of each PWM period. \nThe width of the pulse is programmable through the PWMDAT2 register. The PWM block can also accept an external synchro -\nnization pulse on the PWM\nSYNC pin. The selection of external \nsynchronization or internal sy nchronization is in the PWMCON \nregister. The SYNC input timing can be synchronized to the internal peripheral clock, which is selected in the PWMCON \nregister. If the external synchronization pulse from the chip pin is \nasynchronous to the internal periphera l clock (typical case), the \nexternal PWMSYNC is considered asynchronous and should be synchronized. The synchronization logic adds latency and jitter from the external pulse to the actual PWM outputs. The size of \nthe pulse on the PWM\nSYNC pin must be greate r than two core \nclock periods.  \nThe PWM signals produced by the ADuC7019/20/21/22/24/25/ \n26/27/28/29  can be shut off via a dedicated asynchronous PWM \nshutdown pin, PWM TRIP. When brought low, PWM TRIP instanta-\nneously places all six PWM outputs in the off state (high). This hardware shutdown mechanism is asynchronous so that the \nassociated PWM disable circuitry does not go through any \nclocked logic. This ensures correct PWM shutdown even in  \nthe event of a core clock loss. \nStatus information about the PWM system is available to the user  \nin the PWMSTA register. In particular, the state of the PWM\nTRIP \npin is available, as well as a status bit that indicates whether oper -\nation is in the first half or the second half  of the PWM period.  \n40- Pin Package Devices  \nOn the 40 -pin package devices, the PWM outputs are not \ndirectly accessible, as described in the General -Purpose \nInput/Output  section. One channel can be brought out on a \nGPIO  (see Table 78) via the PLA as shown in th e following  \nexample:  \nPWMCON = 0x1; // enables PWM o/p \nPWMDAT0 = 0x055F; // PWM switching freq \n// Configure Port Pins  \nGP4CON = 0x300; // P4.2 as PLA output \nGP3CON = 0x1; // P3.0 configured as\n // output of PWM0 \n //(internally) \n// PWM0 onto P4.2 \nPLAELM8 = 0x0035; // P3.0 (PWM output) \n // input of element 8 \nPLAELM10 = 0x0059; // PWM from element 8 \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 63 of 102 DESCRIPTION OF THE P WM BLOCK  \nA functional block diagram of the PWM controller is shown in \nFigure 68. The ge neration of the six output PWM signals on \nPin PWM0 H to Pin PWM2 L is controlled by the following four \nimportant blocks:  \n• The 3 -phase PWM timing unit. The core of the PWM \ncontroller, this block generates three pairs of complemented \nand dead- time -adjusted, center -based PWM signals. This \nunit also generates the internal synchronization pulse, \nPWMSYNC. It also controls whether the external PWM SYNC \npin is used . \n• The output control unit. This bl ock can redirect the \noutputs of the 3 -phase timing unit for each channel to \neither the high -side or low -side output. In addition, the \noutput control unit allows individual enabling/disabling  \nof each of the six PWM output signals. \n• The gate drive unit. This  block can generate the high \nfrequency chopping and its subsequent mixing with the \nPWM signals.  \n• The PWM shutdown controller. This block controls  the \nPWM shutdown via the PWM TRIP pin and generates the \ncorrect reset signal for the timing unit.  \nThe PWM contro ller is driven by the ADuC7019/20/21/22/24/ \n25/26/27/28/29  core clock frequency and is capable of generating \ntwo interrupts to the ARM core. One interrupt is generated on \nthe occurrence of a PWMSYNC pulse, and the other is \ngenerated on the occurrence of an y PWM shutdown action.  \n3-Phase Timing Unit \nPWM Switching Frequency (PWMDAT0 MMR)  \nThe PWM switching frequency is controlled by the PWM \nperiod register, PWMDAT0. The fundamental timing unit  \nof the PWM controller is   \ntCORE  = 1/fCORE   \nwhere fCORE is the c ore frequency of the MicroConverter.  Therefore, for a 41.78 MHz f CORE, the fundamental time increment  \nis 24 ns. The value written to the PWMDAT0 register is effectively  \nthe number of f CORE clock increments in one -half a PWM \nperiod. The required PWMDAT0 value is a function of the desired PWM switching frequency (f\nPWN) and is given by  \nPWMDAT0  = fCORE/(2 × f PWM) \nTherefore, the PWM switching period, t S, can be written as  \ntS = 2 × PWMDAT0  × tCORE \nThe largest value that can be written to the 16 -bit PWMDAT0 \nMMR is 0xFFFF = 65 ,535, which corresponds to a minimum \nPWM switching frequency of  \nfPWM(min)  = 41.78 × 106/(2 × 65,535) = 318.75 Hz  \nNote that PWMDAT0 values of 0 and 1 are not defined and \nshould not be used.  \nPWM Switching Dead Time (PWMDAT1 MMR)  \nThe second important parameter that must be set up in the initial \nconfiguration of the PWM block is the switching dead time. This \nis a short delay time introduced between turning off one PWM signal (0H, for example) and turning on t he complementary \nsignal (0L). This short time delay is introduced to permit the \npower switch to be turned off (in this case, 0H) to completely \nrecover its blocking capability before the complementary switch is turned on. This time delay prevents a potentia lly destructive \nshort -circuit condition from developing across the dc link \ncapacitor of a typical voltage source inverter.  \nThe dead time is controlled by the 10 -bit, read/write PWMDAT1  \nregister. There is only one dead -time register that controls the dead  \ntime inserted into all three pairs of PWM output signals. The dead \ntime, t\nD, is related to the v alue in the PWMDAT1 register by  \ntD = PWMDAT1  × 2 × t CORE \nTherefore, a PWMDAT1 value of 0x00A (= 10), introduces  \na 426 ns delay between the turn -off on any PWM signal (0H, \nfor example) and the turn -on of its complementary signal (0L). \nThe amount of the dead time ca n, therefore , be programmed in \nincrements of 2t CORE (or 49 ns for a 41.78 MHz core clock).  \n \n04955-027PWM0H\nPWM0L\nPWM1H\nPWM1L\nPWM2H\nPWM2LPWMCON\nPWMDAT0\nPWMDAT1\nPWMDAT2PWMCH0\nPWMCH1\nPWMCH2CONFIGURATION\nREGISTERSDUTY CYCLE\nREGISTERS\n3-PHASE\nPWM TIMING\nUNITPWMEN\nOUTPUT\nCONTROL\nUNITPWM\nSHUTDOWN\nCONTROLLERPWMCFG\nGATE\nDRIVE\nUNIT\nPWMSYNC\nPWMTRIPTO INTERRUPT\nCONTROLLERSYNC CORE CLOCK\n \nFigure 68. Overview of the PWM Controller\nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 64 of 102 The PWMDAT1 register is a 10-bit register with a maximum \nvalue of 0x3FF (= 1023), which corresponds to a maximum \nprogrammed dead time of \ntD(max)  = 1023 × 2 × t CORE = 1023 × 2 × 24 ×10–9 = 48.97 μs \nfor a core clock of 41.78 MHz. \nThe dead time can be programmed to be zero by writing 0 to \nthe PWMDAT1 register. \nPWM Operating Mode (PWMCON and PWMSTA MMRs) \nAs discussed in the 3-Phase PWM section, the PWM controller \nof the ADuC7019 /20/21/22/24/25/26/27/28/29 can operate in \ntwo distinct modes: single update mode and double update  \nmode. The operating mode of the PWM controller is determined by the state of Bit 2 of the PWMCON register.  \nIf this bit is cleared, the PWM operates in the single update \nmode. Setting Bit 2 places the PWM in the double update \nmode. The default operating mode is single update mode. \nIn single update mode, a single PWMSYNC pulse is produced \nin each PWM period. The rising edge of this signal marks the \nstart of a new PWM cycle and is used to latch new values from the PWM configuration registers (PWMDAT0 and PWMDAT1) \nand the PWM duty cycle registers (PWMCH0, PWMCH1, and \nPWMCH2) into the 3-phase timing unit. In addition, the PWMEN register is latched into the output control unit on the rising edge of the PWMSYNC pulse. In effect, this means that the characteristics and resulting duty cycles of the PWM signals \ncan be updated only once per PW M period at the start of each \ncycle. The result is symmetrical PWM patterns about the \nmidpoint of the switching period. \nIn double update mode, there is an additional PWMSYNC \npulse produced at the midpoint of each PWM period. The rising edge of this new PWMSYNC pulse is again used to latch new values of the PWM configuration registers, duty cycle registers, and the PWMEN register. As a result, it is possible to \nalter both the characteristics (switching frequency and dead \ntime) as well as the output duty cycles at the midpoint of each PWM cycle. Consequently, it is also possible to produce PWM switching patterns that are no longer symmetrical about the midpoint of the period (asymmetrical PWM patterns). In \ndouble update mode, it could be necessary to know whether \noperation at any point in time is in either the first half or the second half of the PWM cycle. This information is provided by Bit 0 of the PWMSTA register, which is cleared during operation in the first half of each PWM period (between the rising edge of \nthe original PWMSYNC pulse and the rising edge of the new \nPWMSYNC pulse introduced in double update mode). Bit 0 of the PWMSTA register is set during operation in the second half of each PWM period. This status bit allows the user to make a determination of the particular half cycle during implementation of the PWMSYNC interrupt service routine, if required. The advantage of double update mode is that lower harmonic voltages can be produced by the PWM process, and faster control bandwidths are possible. However, for a given PWM switching frequency, the PWMSYNC pulses occur at twice the \nrate in the double update mode. Because new duty cycle values \nmust be computed in each PWMSYNC interrupt service routine, there is a larger computational burden on the ARM \ncore in double update mode. \nPWM Duty Cycles (PWMCH0, PWMCH1, and  \nPWMCH2 MMRs) \nThe duty cycles of the six PWM output signals on Pin PWM0 H \nto Pin PWM2 L are controlled by the three 16-bit read/write duty \ncycle registers, PWMCH0, PWMCH1, and PWMCH2. The \nduty cycle registers are programmed in integer counts of the fundamental time unit, t\nCORE. They define the desired on time of \nthe high-side PWM signal produced by the 3-phase timing unit over half the PWM period. The switching signals produced by \nthe 3-phase timing unit are also adjusted to incorporate the \nprogrammed dead time value in the PWMDAT1 register. The 3-phase timing unit produces active high signals so that a high level corresponds to a command to turn on the associated \npower device. \nFigure 69 shows a typical pair of PWM outputs (in this case,  \n0H and 0L) from the timing unit in single update mode. All \nillustrated time values indicate the integer value in the \nassociated register and can be converted to time by simply multiplying by the fundamental time increment, t\nCORE. Note  \nthat the switching patterns are perfectly symmetrical about the midpoint of the switching period in this mode because the same \nvalues of PWMCH0, PWMDAT0, and PWMDAT1 are used to \ndefine the signals in both half cycles of the period.  \nFigure 69 also demonstrates how the programmed duty cycles \nare adjusted to incorporate the desired dead time into the resulting pair of PWM signals. The dead time is incorporated by moving the switching instants of both PWM signals (0H and \n0L) away from the instant set by the PWMCH0 register.  \n04955-028–PWMDAT0 ÷ 2\n0H\n0L\nPWMSYNC\nPWMSTA (0)\nPWMDAT0+PWMDAT0 ÷ 2 –PWMDAT0 ÷ 2 00\nPWMDAT0PWMDAT2 + 1PWMCH0\n2 × PWMDAT1 2 × PWMDAT1PWMCH0\n \nFigure 69. Typical PWM Outputs of the 3-Phase Timing Unit \n(Single Update Mode) \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 65 of 102 Both switching edges are moved by an equal amount \n(PWMDAT1 × t CORE) to preserve the symmetrical output \npatterns. \nAlso shown are the PWMSYNC pulse and Bit 0 of the \nPWMSTA register, which indicates whether operation is in the \nfirst or second half cycle of the PWM period. \nThe resulting on times of the PWM signals over the full PWM \nperiod (two half periods) produced by the timing unit can be written as follows: \nOn the high side \nt\n0HH = PWMDAT0  + 2( PWMCH0  − PWMDAT1 ) × t CORE \nt0HL = PWMDAT0  − 2( PWMCH0  − PWMDAT1 ) × t CORE \nand the corresponding duty cycles ( d) \nd0H = t0HH/tS = ½ + ( PWMCH0  − PWMDAT1 )/PWMDAT0  \nand on the low side \nt0LH = PWMDAT0 − 2(PWMCH0 + PWMDAT1 ) × t CORE \nt0LL = PWMDAT0  + 2(PWMCH0 +  PWMDAT1 ) × t CORE \nand the corresponding duty cycles ( d) \ndOL = t0LH/tS = ½ − ( PWMCH0  + PWMDAT1 )/PWMDAT0  \nThe minimum permissible t 0H and t 0L values are zero, \ncorresponding to a 0% duty cycle. In a similar fashion, the \nmaximum value is t S, corresponding to a 100% duty cycle. \nFigure 70 shows the output signals from the timing unit for \noperation in double update mode . It illustrates a general case \nwhere the switching frequency, dead time, and duty cycle are all changed in the second half of the PWM period. The same value for any or all of these quantities can be used in both halves of the PWM cycle. However, there is no guarantee that symmetrical PWM signals are produced by the timing unit in double update \nmode. Figure 70 also shows that the dead time insertions  into \nthe PWM signals are done in the same way as in single update \nmode. \n04955-029–PWMDAT01÷ 2\n0H\n0L\nPWMSYNC\nPWMSTA (0)\nPWMDAT01+PWMDAT01÷ 2–PWMDAT02÷ 2\n+PWMDAT0 2÷ 2\nPWMCH02 PWMCH0 1\n2 × PWMDAT1 2 2 × PWMDAT1 1\nPWMDAT22+ 1 PWMDAT21+ 100\nPWMDAT02 \nFigure 70. Typical PWM Outputs of the 3-Phase Timing Unit  \n(Double Update Mode) \n In general, the on times of th e PWM signals in double update \nmode can be defined as follows: \nOn the high side \nt0HH = (PWMDAT0 1/2 + PWMDAT0 2/2 + PWMCH0 1 + \nPWMCH0 2 − PWMDAT1 1 − PWMDAT1 2) × t CORE \nt0HL = (PWMDAT0 1/2 + PWMDAT0 2/2 − PWMCH0 1 − \nPWMCH0 2 + PWMDAT1 1 + PWMDAT1 2) × t CORE \nwhere Subscript 1  refers to the value of that register during the \nfirst half cycle, and Subscript 2 refers to the value during the \nsecond half cycle. \nThe corresponding duty cycles ( d) are \nd0H = t0HH/tS = (PWMDAT0 1/2 + PWMDAT0 2/2 + \nPWMCH0 1 + PWMCH0 2 − PWMDAT1 1 − PWMDAT1 2)/ \n(PWMDAT0 1 + PWMDAT0 2) \nOn the low side \nt0LH = (PWMDAT0 1/2 + PWMDAT0 2/2 + PWMCH0 1 + \nPWMCH0 2 + PWMDAT1 1 + PWMDAT1 2) × t CORE  \nt0LL = (PWMDAT0 1/2 + PWMDAT0 2/2 − PWMCH0 1 − \nPWMCH0 2 − PWMDAT1 1 − PWMDAT1 2) × t CORE \nwhere Subscript 1  refers to the value of that register during the \nfirst half cycle, and Subscript 2 refers to the value during the \nsecond half cycle. \nThe corresponding duty cycles (d) are \nd0L = t0LH/tS = (PWMDAT0 1/2 + PWMDAT0 2/2 + \nPWMCH0 1 + PWMCH0 2 + PWMDAT1 1 + \nPWMDAT1 2)/(PWMDAT0 1 + PWMDAT0 2) \nFor the completely general case in double update mode  \n(see Figure 70), the switching period is given by \ntS = (PWMDAT0 1 + PWMDAT0 2) × t CORE \nAgain, the values of t 0H and t 0L are constrained to lie between \nzero and t S. \nPWM signals similar to those illustrated in Figure 69 and  \nFigure 70 can be produced on the 1H, 1L, 2H, and 2L outputs by programming the PWMCH1 and PWMCH2 registers in a manner identical to that described for PWMCH0. The PWM controller does not produce any PWM outputs until all of the PWMDAT0, \nPWMCH0, PWMCH1, and PWMCH2 registers have been written \nto at least once. When these registers are written, internal \ncounting of the timers in the 3-phase timing unit is enabled.  \nWriting to the PWMDAT0 register starts the internal timing of \nthe main PWM timer. Provided that the PWMDAT0 register is written to prior to the PWMCH0, PWMCH1, and PWMCH2 registers in the initialization, the first PWMSYNC pulse and \ninterrupt (if enabled) appear 1.5 × t\nCORE × PWMDAT0 seconds \nafter the initial write to the PWMDAT0 register in single update \nmode. In double update mode, the first PWMSYNC pulse \nappears after PWMDAT0 × t CORE seconds.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 66 of 102 Output Control Unit  \nThe operation of the output control unit is controlled by the  \n9-bit read/write PWMEN register. This register controls two \ndistinct features of the output control unit that are directly \nuseful in the control of electronic counter measures (ECM) or binary d ecimal counter measures (BDCM). The PWMEN \nregister contains three crossover bits, one for each pair of PWM outputs. Setting Bit 8 of the PWMEN register enables the \ncrossover mode for the 0H/0L pair of PWM signals, setting  \nBit 7 enables crossover on the 1H /1L pair of PWM signals, and \nsetting Bit 6 enables crossover on the 2H/2L pair of PWM \nsignals. If crossover mode is enabled for any pair of PWM \nsignals, the high- side PWM signal from the timing unit (0H, for \nexample) is diverted to the associated low -side output of the \noutput control unit so that the signal ultimately appears at the \nPWM0\nL pin. Of course, the corresponding low -side output of \nthe timing unit is also diverted to the complementary high -side \noutput of the output control unit so that the signal a ppears at \nthe PWM0 H pin. Following a reset, the three crossover bits are \ncleared , and the crossover mode is disabled on all three pairs of  \nPWM signals. The PWMEN register also contains six  bits (Bit 0 \nto Bit 5) that can be used to individually enable or di sable each \nof the six PWM outputs. If the associated bit of the PWMEN register is set, the corresponding PWM output is disabled \nregardless of the corresponding value of the duty cycle register. \nThis PWM output signal remains in the off state as long as the  \ncorresponding enable/disable bit of the PWMEN  register is set. \nThe implementation of this output enable function is imple -\nmented after the crossover function.  \nFollowing a reset, all six enable bits of the PWMEN register are cleared, and all PWM outputs ar e enabled by default. In a manner  \nidentical to the duty cycle registers, the PWMEN is latched on \nthe rising edge of the PWMSYNC signal. As a result, changes to \nthis register become effective only at the start of each PWM cycle \nin single update mode. In dou ble update mode, the PWMEN \nregister can also be updated at the midpoint of the PWM cycle.  \nIn the control of an ECM, only two inverter legs are switched at any time, and often the high- side device in one leg must be \nswitched on at the same time as the low -side driver in a second \nleg. Therefore, by programming identical duty cycle values for two PWM channels (for example, PWMCH0 = PWMCH1) and setting Bit 7 of the PWMEN register to cross over the 1H/1L \npair of PWM signals, it is possible to turn on the high -side \nswitch of Phase A and the low -side switch of Phase B at the \nsame time. In the control of ECM, it is usual for the third \ninverter leg (Phase C in this example) to be disabled for a \nnumber of PWM cycles. This function is implemented by disabling both the 2H and 2L PWM outputs by setting Bit 0  \nand Bit 1 of the PWMEN register.  \nThis situation is illustrated in Figure 71, where it can be seen \nthat both the 0H and 1L signals are identical because \nPWMCH0 = PWMCH1 and the crossover bit for Phase B is set.  \n04955-030PWMCH0 =\nPWMCH1\n0H\n0L\n1H\n1L\n2H\n2LPWMCH0 =\nPWMCH1\n2 × PWMDAT1 2 × PWMDAT1\nPWMDAT0 PWMDAT0 \nFigure 71. Active Low PWM Signals Suitable for ECM Control,  \nPWMCH0 = PWMCH1, Crossover 1H/1L Pair and Disable  \n0L, 1H, 2H, and 2L Outputs in  Single Update Mode.  \nIn addition, the other four signals (0L, 1H, 2H, and 2L) have \nbeen disabled by setting the appropriate enable/disable bits of the PWMEN register. In Figure 71, the appropriate value for \nthe PWMEN register is 0x00A7. In normal ECM operation, \neach inverter leg is disabled for certain periods of time to \nchange the PWMEN register based on the position of the rotor \nshaft (motor commutation).  \nGate Drive Unit  \nThe gate drive unit of the PWM controller adds features that \nsimplify the design of isolated gate -drive circuits for PWM \ninverters. If a transformer -coupled, power device, gate -drive \namplifier is used, the active PWM signal must be chopped at a \nhigh frequency. The 16 -bit read/write PWMCFG register \nprograms this high frequency chopping mode. The chopped \nactive PWM signals can be required for the high -side drivers \nonly, the low -side drivers only, or both the high -side and low -\nside switches. Therefo re, independent control of this mode for \nboth high -side and low -side switches is included with two \nseparate control bits in the PWMCFG register.  \nTypical PWM output signals with high frequency chopping \nenabled on both high -side and low -side signals are show n in \nFigure 72. Chopping of the high -side PWM outputs (0H, 1H, \nand 2H) is enabled by setting Bit 8 of the PWMCFG register. \nChopping of the low -side PWM outputs (0L, 1L, and 2L) is \nenabled by setting Bit 9 of the PWMCFG register. The high \nchopping frequency is controlled by the 8 -bit word (GDCLK) \nplaced in Bit 0 to Bit 7 of the PWMCFG register. The period of this high frequency carrier is  \nt\nCHOP = (4 × (GDCLK + 1)) × tCORE  \nThe chopping frequency is, therefore, an integral subdivision of \nthe MicroConverter core frequency  \nfCHOP = fCORE/(4 × (GDCLK  + 1)) \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 67 of 102 The GDCLK value can range from 0 to 255, corresponding  to a \nprogrammable chopping frequency rate of 40.8 kHz to 10. 44 MHz  \nfor a 41.78 MHz core frequency. The gate drive features must be \nprogrammed before operation of the PWM controller and are \ntypically not changed during normal operation of the PWM \ncontroller. Following a reset, all bits of the PWMCFG register \nare cle ared so that high frequency chopping is disabled, by default.  04955-031PWMCH0 PWMCH0\nPWMDAT0 PWMDAT00L\n0H2 × PWMDAT1\n4 × (GDCLK + 1) × tCORE2 × PWMDAT1\n \nFigure 72. Typical PWM Signals with High Frequency Gate Chopping  \nEnabled on Both High -Side and Low -Side Switches  \nPWM Shutd own  \nIn the event of external fault conditions, it is essential that the \nPWM system be instantaneously shut down in a safe fashion. A \nlow level on the PWM TRIP pin provides an instantaneous, \nasynchronous (independent of the MicroConverter core clock) shutdown of  the PWM controller. All six PWM outputs are \nplaced in the off state, that is, in low state. In addition, the PWMSYNC pulse is disabled. The PWM\nTRIP pin has an internal \npull-down resistor to disable the PWM if the pin becomes \ndisconnected. The state of the PWM TRIP pin can be read from \nBit 3 of the PWMSTA register.  \nIf a PWM shutdown command occurs, a PWMTRIP  interrupt is \ngenerated, and internal timing of the 3 -phase timing unit of the \nPWM controller is stopped. Following a PWM shutdown,  the \nPWM can be re enab led (in a PWMTRIP interrupt service \nroutine, for example) only by writing to all of the PWMDAT0, \nPWMCH0, PWMCH1, and PWMCH2 registers. Provided that \nthe external fault is cleared and the PWMTRIP  is returned to a \nhigh level, the internal timing of the 3 -phase timing unit \nresumes, and new duty -cycle values are latched on the next \nPWMSYNC boundary.  \nNote that the PWMTRIP interrupt is available in IRQ only,  \nand the PWMSYNC interrupt is available in FIQ only. Both \ninterrupts share the same bit in the interrupt c ontroller. \nTherefore, only one of the interrupts can be used at a time .  \nSee the Interrupt System  section for further details.  PWM MMRs Interface  \nThe PWM block is controlled via the MMRs described in  \nthis section.  \nTable 66. PWMCON Register  \nName  Address  Default Value  Access  \nPWMCON  0xFFFFFC00  0x0000  R/W  \nPWMCON is a control register that enables the PWM and \nchooses the update rate.  \nTable 67. PWMCON MMR Bit Descriptions \nBit Name  Description  \n7:5  Reserved.  \n4 PWM_SYNCSEL  External s ync select. Set to use external \nsync. Cleared to use internal sync.  \n3 PWM_EXTSYNC  External s ync select. Set to select \nexternal synchronous sync signal. \nCleared for asynchronous sync signal.  \n2 PWMDBL  Double u pdate mode. Set to 1 by user \nto enable double update mode . \nCleared to 0 by the user to enable \nsingle update mode.  \n1 PWM_SYNC_EN  PWM s ynchronization enable. Set by \nuser to enable synchronization. Cleared  \nby user to disable synchronization.  \n0 PWMEN  PWM e nable bit. Set to 1 by user to \nenable the PWM. Cleared to 0 by user \nto disable the PWM. Also cleared \nautomatically with PWMTRIP  \n(PWMSTA MMR) . \nTable 68. PWMSTA Register  \nName  Address  Default Value  Access  \nPWMSTA  0xFFFFFC04  0x0000  R/W  \nPWMSTA  reflects the status of the PWM.  \nTable 69. PWMSTA MMR Bit Descriptions \nBit Name  Description  \n15:10   Reserved.  \n9 PWMSYNCINT  PWM s ync interrupt bit. Writing a 1 to \nthis bit clears this interrupt.  \n8 PWMTRIPINT  PWM trip interrupt bit. Writing a 1 to \nthis bit clears this interrupt.  \n3 PWMTRIP  Raw signal from the PWM TRIP pin. \n2:1  Reserved.  \n0 PWMPHASE  PWM p hase bit. Set to 1 by the Micro-\nConverter when the timer is counting \ndown ( first half). Cleared to 0 by the \nMicroConverter when the timer is \ncounting up ( second  half).  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 68 of 102 Table 70. PWMCFG Register  \nName  Address  Default Value  Access  \nPWMCFG  0xFFFFFC10  0x0000 R/W  \nPWMCFG is a gate chopping register.  \nTable 71. PWMCFG MMR Bit Descriptions \nBit Name  Description  \n15:10  Reserved.  \n9 CHOPLO  Low -side gate chopping enable bit. \n8 CHOPHI  High -side gate chopping enable bit. \n7:0 GDCLK  PWM gate chopping period (u nsigned).  \nTable 72. PWMEN Register  \nName  Address  Default Value  Access  \nPWMEN  0xFFFFFC20  0x0000 R/W  \nPWMEN allows enabling of channel outputs and crossover. See \nits bit definitions in Table 73. \nTable 73. PWMEN MMR Bit Descriptions \nBit Name  Description  \n8 0H0L_XOVR  Channel 0 o utput crossover enable bit.  \nSet to 1 by user to enable Channel 0 output \ncrossover. Cleared to 0 by user to disable \nChannel 0 output crossover.  \n7 1H1L_XOVR  Channel 1 o utput crossover enable bit.  \nSet to 1 by user to enable Channel 1 output \ncrossover. Cleared  to 0 by user to disable \nChannel 1 output c rossover.  \n6 2H2L_XOVR  Channel 2 o utput crossover enable bit.  \nSet to 1 by user to enable Channel 2 output \ncrossover. Cleared to 0 by user to disable \nChannel 2 output crossover.  \n5 0L_EN  0L output enable bit. Set to 1 by user to \ndisable the 0L output of th e PWM. Cleared to 0 \nby user to enable the 0L output of the PWM.  \n4 0H_EN  0H output enable bit. Set to 1 by user to \ndisable the 0H output of the PWM. Cleared to \n0 by user to enable the 0H output of the PWM.  \n3 1L_EN  1L output enable bit. Set to 1 by user to \ndisable the 1L output of the PWM. Cleared to 0 \nby user to enable the 1L output of the PWM.  \n2 1H_EN  1H Output Enable Bit. Set to 1 by user to \ndisable the 1H output of the PWM. Cleared to \n0 by user to enable the 1H output of the PWM.  \n1 2L_EN  2L output enable bit. Set to 1 by user to  \ndisable the 2L output of the PWM. Cleared to 0 \nby user to enable the 2L output of the PWM.  \n0 2H_EN  2H output enable bit. Set to 1 by user to \ndisable the 2H output of the PWM. Cleared to 0 by user to enable the 2H output of the PWM.  \n \n   Table 74. PWMDAT0 Register  \nName  Address  Default Value  Access  \nPWMDAT0  0xFFFFFC08  0x0000 R/W  \nPWMDAT0 is an unsigned 16 -bit register for switching period.  \nTable 75. PWMDAT1 Register  \nName  Address  Default Value  Access  \nPWMDAT1  0xFFFFFC0C  0x0000 R/W  \nPWMDAT1 is an unsigned 10 -bit register for dead time.  \nTable 76. PWMCHx Registers  \nName  Address  Default Value  Access  \nPWMCH0  0xFFFFFC14  0x0000 R/W  \nPWMCH1  0xFFFFFC18  0x0000 R/W  \nPWMCH2  0xFFFFFC1C  0x0000 R/W  \nPWMCH0, PWMCH1, and PWMCH2 are channel duty cycles \nfor the three phases.  \nTable 77. PWMDAT2 Register  \nName  Address  Default Value  Access  \nPWMDAT2  0xFFFFFC24  0x0000 R/W  \nPWMDAT2  is an unsigned 10 -bit register for PWM sync  \npulse width.  \nGENERAL -PURPOSE INPUT/OUTPUT  \nThe ADuC7019/ 20/21/22/24/25/26/27/28/29 provide 40 general -\npurpose, bidirectional I/O (GPIO) pins. All I/O pins are 5 V tolerant, meaning the GPIOs support an input voltage of 5  V.   \nIn general, many of the GPIO pins have  multiple functions (see \nTable 78 for the pin function definitions). By default, the \nGPIO  pins are configured in GPIO mode.  \nAll G PIO pins have an internal pull -up resistor (of about 100  kΩ), \nand their drive capability is 1.6 mA. Note that a maximum of 20 GPIOs can drive 1.6 mA at the same time. Using the \nGPxPAR registers, it is possible to enable/disable the pull -up \nresistors for the following p orts: P0.0, P0.4, P0.5, P0.6, P0.7, and \nthe eight GPIOs of P1. \nThe 40 GPIOs are grouped in five ports, Port 0 to Port 4 (Port x) . \nEach port is controlled by four or five MMRs.  \nNote that the kernel changes P0.6 from its default configuration \nat reset (MRST) to GPIO mode and P0. 6 goes low for the reset \nperiod. For example, if MRST is required for power -down, \nMRST can be reconfigured in the GP0CON MMR .  \nThe input level of any GPIO can be read at any time in the GPxDAT MMR, even when the pin is configured in a mode other than GPIO.  The PLA input is always active.  \nWhen the ADuC7019/ 20/21/22/24/25/26/27/28/29 part enters a \npower -saving mode, the GPIO pins retain their state.  \n \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 69 of 102 Table 78. GPIO Pin Function Descriptions \n  Configuration  \nPort  Pin 00 01 10 11 \n0 P0.0 GPIO  CMP  MS0  PLAI[7]  \n P0.1 GPIO  PWM2 H BLE  \n P0.2 GPIO  PWM2 L BHE   \n P0.3 GPIO  TRST  A16 ADC BUSY \n P0.4 GPIO/IRQ0  PWM TRIP MS1  PLAO[1]  \n P0.5 GPIO/IRQ1  ADC BUSY MS2  PLAO[2]  \n P0.6 GPIO/T1  MRST   PLAO[3]  \n P0.7 GPIO  ECLK/XCLK1 SIN PLAO[4]  \n1 P1.0 GPIO/T1  SIN SCL0 PLAI[0]  \n P1.1 GPIO  SOUT  SDA0  PLAI[1]  \n P1.2 GPIO  RTS SCL1 PLAI[2]  \n P1.3 GPIO  CTS  SDA1  PLAI[3]  \n P1.4 GPIO/IRQ2  RI SCLK  PLAI[4]  \n P1.5  GPIO/IRQ3  DCD  MISO  PLAI[5]  \n P1.6 GPIO  DSR  MOSI  PLAI[6]  \n P1.7 GPIO  DTR  CS PLAO[0]  \n2 P2.0  GPIO  CONV START2 SOUT  PLAO[5]  \n P2.1 GPIO  PWM0 H WS PLAO[6]  \n P2.2 GPIO  PWM0 L RS PLAO[7]  \n P2.3 GPIO   AE  \n P2.4 GPIO  PWM0 H MS0   \n P2.5 GPIO  PWM0 L MS1   \n P2.6 GPIO  PWM1 H MS2   \n P2.7 GPIO  PWM1 L MS3   \n3 P3.0 GPIO  PWM0 H AD0  PLAI[8]  \n P3.1 GPIO  PWM0 L AD1  PLAI[9]  \n P3.2 GPIO  PWM1 H AD2  PLAI[10]  \n P3.3 GPIO  PWM1 L AD3  PLAI[11]  \n P3.4 GPIO  PWM2 H AD4  PLAI[12]  \n P3.5 GPIO  PWM2 L AD5  PLAI[13]  \n P3.6  GPIO  PWM TRIP AD6  PLAI[14]  \n P3.7 GPIO  PWM SYNC AD7  PLAI[15]  \n4 P4.0 GPIO   AD8  PLAO[8]  \n P4.1 GPIO   AD9  PLAO[9]  \n P4.2 GPIO   AD10  PLAO[10]  \n P4.3 GPIO   AD11  PLAO[11]  \n P4.4 GPIO   AD12  PLAO[12]  \n P4.5 GPIO   AD13  PLAO[13]  \n P4.6 GPIO   AD14  PLAO[14]  \n P4.7 GPIO   AD15  PLAO[15]  \n1 When configured in Mode 1, P0.7 is ECLK by de fault, or core clock output. To \nconfigure it as a clock input, the MDCLK bits in PLLCON must be set to 11.  \n2 The CONV START signal is active in all modes of P2.0.  \nTable 79. GPxCON Registers  \nName  Address  Default Value  Access  \nGP0CON  0xFFFFF400  0x00000000  R/W  \nGP1CON  0xFFFFF404  0x00000000  R/W  \nGP2CON  0xFFFFF408  0x00000000  R/W  \nGP3CON  0xFFFFF40C  0x00000000  R/W  \nGP4CON  0xFFFFF410  0x00000000  R/W  GPxCON are the Port x control registers, which select the \nfunction of each pin of Port x as described in Table 80. \nTable 80. GPxCON MMR Bit Descriptions \nBit Description  \n31:30  Reserved.  \n29:28  Select function of the Px.7 pin. \n27:26  Reserved.  \n25:24  Select function of the Px.6 pin. \n23:22  Reserved.  \n21:20  Select function of the Px.5 pin. \n19:18  Reserved.  \n17:16  Select function of the Px.4 pin. \n15:14  Reserved.  \n13:12  Select function of the Px.3 pin. \n11:10  Reserved.  \n9:8 Select function of the Px.2 pin. \n7:6 Reserved.  \n5:4 Select function of the Px.1 pin. \n3:2 Reserved.  \n1:0 Select function of the Px.0 pin. \nTable 81. GPxPAR Registers \nName  Address  Default Value  Access  \nGP0PAR  0xFFFFF42C  0x20000000  R/W  \nGP1PAR  0xFFFFF43C  0x00000000  R/W  \nGPxPAR program the parameters for Port 0 and Port 1. Note that \nthe GPxDAT MMR must always be written after changing the \nGPxPAR MMR.  \nTable 82. GPxPAR MMR Bit Descriptions \nBit Description  \n31 Reserved.  \n30:29  Drive strength Px.7. \n28 Pull-Up Disable Px.7.  \n27 Reserved.  \n26:25  Drive strength Px.6. \n24 Pull-Up Disable Px.6.  \n23 Reserved.  \n22:21  Drive strength Px.5. \n20 Pull-Up Disable Px.5.  \n19 Reserved.  \n18:17  Drive strength Px.4. \n16 Pull-Up Disable Px.4.  \n15 Reserved.  \n14:13  Drive strength Px.3. \n12 Pull-Up Disable Px.3.  \n11 Reserved.  \n10:9  Drive strength Px.2. \n8 Pull-Up Disable Px.2.  \n7 Reserved.  \n6:5 Drive strength  Px.1.  \n4 Pull-Up Disable Px.1.  \n3 Reserved.  \n2:1 Drive strength Px.0. \n0 Pull-Up Disable Px.0.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 70 of 102 Table 83. GPIO Drive Strength Control Bits Descriptions \nControl Bits Value  Description  \n00 Medium drive strength.  \n01 Low drive strength.  \n1x High drive strength.  \n3.6\n3.4\n3.2\n3.0\n2.8\n2.6\n2.4\n2.2\n2.0\n–24 –18 –12 –6 0 6 12 18 24\nLOAD CURRENT (mA)VOLTAGE ON EACH PIN (V)\nHIGH DRIVE STRENGTH\nMEDIUM DRIVE STRENGTH\nLOW DRIVE STRENGTH\n04955-031 \nFigure 73. Programmable Strength for High Level  \n(Typical Values ) \n0.5\n0.4\n0.3\n0.2\n0.1\n0\n–0.1\n–0.2\n–0.3\n–0.4\n–24 –18 –12 –6 0 6 12 18 24\nLOAD CURRENT (mA)VOLTAGE ON EACH PIN (V)\nHIGH DRIVE STRENGTH\nMEDIUM DRIVE STRENGTH\nLOW DRIVE STRENGTH\n04955-032 \nFigure 74. Programmable Strength for Low Level  \n(Typical Values ) \nThe drive strength bits can be written to one time only after \nreset. More writing to related bits has no effect on changing \ndrive strength. The GPIO drive strength and pull -up disable is \nnot always adjustable for the GPIO port. Some control bits \ncannot be changed (see Table 84). \n \n \n    \n \n Table 84. GPxPAR Control Bits Access Descriptions \nBit GP0PAR  GP1PAR  \n31 Reserved  Reserved  \n30 to 29  R/W  R/W  \n28 R/W  R/W  \n27 Reserved  Reserved  \n26 to 25  R/W  R/W  \n24 R/W  R/W  \n23 Reserved  Reserved  \n22 to 21  R/W  R (b00)  \n20 R/W  R/W  \n19 Reserved  Reserved  \n18 to 17  R (b00)  R (b00)  \n16 R/W  R/W  \n15 Reserved  Reserved  \n14 to 13  R (b00)  R (b00)  \n12 R/W  R/W  \n11 Reserved  Reserved  \n10 to 9  R (b00)  R (b00)  \n8 R/W  R/W  \n7 Reserved  Reserved  \n6 to 5  R (b00)  R (b00)  \n4 R/W  R/W  \n3 Reserved  Reserved  \n2 to 1  R (b00)  R (b00)  \n0 R/W  R/W  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 71 of 102 Table 85. GPxDAT Registers  \nName  Address  Default Value1 Access  \nGP0DAT  0xFFFFF420 0x000000XX  R/W  \nGP1DAT  0xFFFFF430  0x000000XX  R/W  \nGP2DAT  0xFFFFF440 0x000000XX  R/W  \nGP3DAT  0xFFFFF450 0x000000XX  R/W  \nGP4DAT  0xFFFFF460 0x000000XX  R/W  \n1 X = 0, 1, 2, or 3.  \nGPxDAT are Port x configuration and data registers. They \nconfigure the direction of the GPIO pins of Port x, set the \noutput value for the pins configured as output, and store the \ninput value of the pins configured as input.  \nTable 86. GPxDAT MMR Bit Descriptions \nBit Description  \n31:24 Direction of the data. Set to 1 by user to configure \nthe GPIO pin as an output . Cleared to 0 by user to \nconfigure the GPIO pin as an input.  \n23:16 Port x d ata output.  \n15:8 Reflect the s tate of Port x p ins at reset ( read only).  \n7:0 Port x d ata input ( read only).  \nTable 87. GPxSET Registers  \nName  Address  Default Value1 Access  \nGP0SET  0xFFFFF424 0x000000XX  W \nGP1SET  0xFFFFF434 0x000000XX  W \nGP2SET  0xFFFFF444 0x000000XX  W \nGP3SET  0xFFFFF454 0x000000XX  W \nGP4SET  0xFFFFF464 0x000000XX  W \n1 X = 0, 1, 2,  or 3.  \nGPxSET are data set Port x registers.  \nTable 88. GPxSET MMR Bit Descriptions \nBit Description  \n31:24 Reserved.  \n23:16 Data Port x s et bit. Set to 1 by user to set bit on Port x ; \nalso sets the corresponding bit in the GPxDAT MMR . \nCleared to 0 by user; does not affect the data out.  \n15:0 Reserved.  \nTable 89. GPxCLR Registers  \nName  Address  Default Value1 Access  \nGP0CLR  0xFFFFF428  0x000000XX  W \nGP1CLR  0xFFFFF438 0x000000XX  W \nGP2CLR  0xFFFFF448 0x000000XX  W \nGP3CLR  0xFFFFF458 0x000000XX  W \nGP4CLR  0xFFFFF468 0x000000XX  W \n1 X = 0, 1, 2, or 3.  \nGPxCLR are data clear Port x registers.  Table 90. GPxCLR MMR Bit Descriptions \nBit Description  \n31:24 Reserved.  \n23:16  Data Port x c lear bit. Set to 1 by user to clear bit on \nPort x; also clears the corresponding bit in the GPxDAT  \nMMR. Cleared to 0 by user; does not affect the data out.  \n15:0 Reserved.  \nSERIAL PORT MUX  \nThe serial port mux multiplexes the serial port peripherals  \n(an SPI, UART, and two I2Cs) and the programmable logic array \n(PLA) to a set of 10 GPIO pins. Each pin must be configured to \none of its specific I/O functions as described in Table 91. \nTable 91. SPM Configuration  \nSPMMUX  GPIO  UART  UART/I2C/SPI  PLA  \n(00)  (01)  (10)  (11)  \nSPM0  P1.0 SIN I2C0SCL  PLAI[0]  \nSPM1  P1.1 SOUT  I2C0SDA  PLAI[1]  \nSPM2  P1.2 RTS I2C1SCL  PLAI[2]  \nSPM3  P1.3 CTS  I2C1SDA  PLAI[3]  \nSPM4  P1.4 RI SCLK  PLAI[4]  \nSPM5  P1.5 DCD  MISO  PLAI[5]  \nSPM6  P1.6  DSR  MOSI  PLAI[6]  \nSPM7  P1.7 DTR  CS PLAO[0]  \nSPM8  P0.7 ECLK/XCLK  SIN PLAO[4]  \nSPM9  P2.0 CONV  SOUT  PLAO[5]  \nTable 91 also details the mode for each of the SPMMUX pins. \nThis configuration must  be done via the GP0CON, GP1CON, \nand GP2CON MMRs. By default, these 10 pins are configured as GPIOs.  \nUART SERIAL INTE RFACE  \nThe UART peripheral is a full -duplex, universal, asynchronous \nreceiver/transmitter. It is fully compatible with the 16,450 serial \nport standard. The UART performs serial -to-parallel conversions \non data characters received from a peripheral device or modem, \nand parallel -to-serial conversions on data characters received \nfrom the CPU. The UART includes a fractional divider for baud rate generation and has a network addressable mode. The UART  \nfunction is made available on the 10 pins of the ADuC7019/20/  \n21/22/24/25/26/27/28/29  (see Table 92). \nTable 92. UART Signal Description  \nPin Signal  Description  \nSPM0 (Mode 1)  SIN Serial receive data. \nSPM1 (Mode 1)  SOUT  Serial transmit data.  \nSPM2 (Mode 1)  RTS Request to s end.  \nSPM3 (Mode 1)  CTS  Clear to s end.  \nSPM4 (Mode 1)  RI Ring indicator.  \nSPM5 (Mode 1)  DCD  Data carrier detect.  \nSPM6 (Mode 1)  DSR  Data set ready.  \nSPM7 (Mode 1)  DTR  Data terminal ready.  \nSPM8 (Mode 2)  SIN Serial receive data. \nSPM9 (Mode 2)  SOUT  Serial transmit data. \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 72 of 102 The serial communication adopts an asynchronous protocol, \nwhich supports various word lengths, stop bits, and parity \ngeneration options selectable in the configuration register. \nBaud Rate Generation \nThere are two ways of generating the UART baud rate, normal \n450 UART baud rate generation and the fractional divider. \nNormal 450 UART Baud Rate Generation \nThe baud rate is a divided version of the core clock using the values in the COMDIV0 and COMDIV1 MMRs (16-bit value, DL). \nDL × 2 × 16 - 2MHz 78 . 41= Rate BaudCD \nTable 93 gives some common baud rate values. \nTable 93. Baud Rate Using the Normal Baud Rate Generator \nBaud Rate CD DL Actual Baud Rate % Error \n9600 0 0x88 9600 0 \n19,200 0 0x44  19,200 0 \n115,200 0 0x0B 118,691 3 \n9600 3 0x11 9600 0 \n19,200 3 0x08 20,400 6.25 \n115,200 3 0x01 163,200 41.67 \nFractional Divider \nThe fractional divider, combined with the normal baud rate \ngenerator, produces a wider range of more accurate baud rates. \n04955-032/16DL UARTFBEN CORE\nCLOCK/2\n/(M+N/2048)\n \nFigure 75. Baud Rate Generation Options \nCalculation of the baud rate using fractional divider is as follows:  \n\uf0f7\uf0f8\uf0f6\uf0e7\uf0e8\uf0e6\uf02b \uf0b4 \uf0b4 \uf0b4 \uf0b4\uf03d\n20482 16 2MHz 78 . 41\nNM DLRate Baud\nCD \n2 × DL × 16 × 2 × Rate BaudMHz 78 . 41=2048N+ MCD \nFor example, generation of 19,200 baud with CD bits = 3  \n(Table 93 gives DL = 0x08) is \n2 8 16 2 19200MHz 78 . 41\n20483\uf0b4 \uf0b4 \uf0b4 \uf0b4\uf03d \uf02bNM  \n06 . 12048\uf03d \uf02bNM  \nwhere:  \nM = 1 \nN = 0.06 × 2048 = 128 \n \n  2048128× 2 × 8 × 16 × 2MHz 78 . 41= Rate Baud\n3 \nwhere: \nBaud Rate = 19,200 bps \nError = 0%, compared to 6.25% with the normal baud rate \ngenerator. \nUART Register Definitions \nThe UART interface consists of 12 registers: COMTX, COMRX, \nCOMDIV0, COMIEN0, COMDIV1, COMIID0, COMCON0, \nCOMCON1, COMSTA0, COMSTA1, COMSCR, and \nCOMDIV2. \nTable 94. COMTX Register \nName  Address Default Value Access \nCOMTX 0xFFFF0700 0x00 R/W \nCOMTX is an 8-bit transmit register. Table 95. COMRX Register \nName  Address Default Value Access \nCOMRX 0xFFFF0700 0x00 R \nCOMRX is an 8-bit receive register. \nTable 96. COMDIV0 Register \nName  Address Default Value Access \nCOMDIV0 0xFFFF0700 0x00 R/W \nCOMDIV0 is a low byte divisor latch. COMTX, COMRX, \nand COMDIV0 share the same address location. COMTX  \nand COMRX can be accessed when Bit 7 in the COMCON0 register is cleared. COMDIV0 can be accessed when Bit 7  \nof COMCON0 is set. \nTable 97. COMIEN0 Register \nName  Address Default Value Access \nCOMIEN0 0xFFFF0704 0x00 R/W \nCOMIEN0 is the interrupt enable register. Table 98. COMIEN0 MMR Bit Descriptions \nBit Name Description \n7:4 N/A Reserved. \n3 EDSSI Modem status interrupt enable bit. Set by \nuser to enable generation of an interrupt if \nany of COMSTA1[3:1] is set. Cleared  by user. \n2 ELSI Rx status interrupt enable  bit. Set by user to \nenable generation of an interrupt if any of \nCOMSTA0[4:1] is set. Cleared by user. \n1 ETBEI Enable transmit buffer empty interrupt. Set by user to enable interrupt when buffer is \nempty during a transmission. Cleared  by user. \n0 ERBFI Enable receive buffer full interrupt. Set by \nuser to enable interrupt when buffer is full \nduring a reception. Cleared by user. \n \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 73 of 102 Table 99. COMDIV1 Register  \nName  Address  Default  Value  Access  \nCOMDIV1  0xFFFF0704 0x00 R/W  \nCOMDIV1 is a divisor latch (high byte) register.  \nTable 100. COMIID0 Register  \nName  Address  Default Value  Access  \nCOMIID0  0xFFFF0708 0x01 R \nCOMIID0 is the interrupt identification register.  \nTable 101. COMIID0 MMR Bit Descriptions \nBit 2:1 \nStatus  Bits  Bit 0 NINT  Priority  Definition  Clearing \nOperation  \n00 1 N/A  No interrupt  N/A  \n11 0 1 (Highest)  Receive line \nstatus \ninterrupt  Read \nCOMSTA0  \n10 0 2 Receive \nbuffer full \ninterrupt  Read \nCOMRX  \n01 0 3 Transmit buffer \nempty interrupt  Write data to \nCOMTX or \nread COMIID 0 \n00 0 4 (Lowest)  Modem \nstatus \ninterrupt  Read COMSTA1  \nTable 102. COMCON0 Register  \nName  Address  Default Value  Access  \nCOMCON0  0xFFFF070C 0x00 R/W  \nCOMCON0 is the line control register.  \nTable 103. COMCON0 MMR Bit Descriptions \nBit Name  Description  \n7 DLAB  Divisor l atch access. Set by user to enable access \nto the COMDIV0 and COMDIV1 registers. Cleared \nby user  to disable access to COMDIV0 and \nCOMDIV1 and enable access to COMRX and \nCOMTX.  \n6 BRK  Set break. Set by user to force SOUT to 0. Cleared \nto operate in normal mode.  \n5 SP Stick p arity. Set  by user to force parity to defined \nvalues: 1 if EPS = 1 and PEN = 1,  \n0 if EPS = 0 and PEN = 1.  \n4 EPS Even parity s elect bit. Set for even parity. Cleared \nfor odd parity. \n3 PEN  Parity e nable bit. Set by user to transmit and \ncheck the parity bit. Cleared by user for no parity transmission or checking.  \n2 STOP  Stop bit. Set by user to transmit 1.5 stop bits if the \nword length is five  bits or 2 stop bits if the word \nlength is six  bits, seven  bits, or eight  bits. The \nreceiver checks the first stop bit only, regardless \nof the number of stop bits selected. Cleared by user \nto generate 1 stop bit in the transmitted data.  \n1:0 WLS  Word length select:  \n00 = five  bits, 01 = six bits, 10 = seven  bits,  \n11 = eight  bits. Table 104. COMCON1 Register  \nName  Address  Default Value  Access  \nCOMCON1  0xFFFF0710 0x00 R/W  \nCOMCON1 is the modem control register.  \nTable 105. COMCON1 MMR Bit Descriptions \nBit Name  Description  \n7:5  Reserved.  \n4 LOOPBACK Loopb ack. Set by user to enable loopback \nmode. In loopback mode, SOUT  (see Table 78) \nis forced high. The modem signals are also \ndirectly connected to the status inputs (RTS \nto CTS and DTR to DSR).  Cleared by user to \nbe in normal mode.  \n3 PEN  Parity e nable bit. Set by user to  transmit and \ncheck the parity bit. Cleared by user for no \nparity transmission or checking.  \n2 STOP  Stop bit. Set by user to transmit 1.5 stop bits if the word length is five bits, or 2 stop bits if \nthe word length is six bits, seven  bits, or \neight  bits. The receiver checks the first stop \nbit only, regardless of the number of stop  bits \nselected. Cleared by user to generate 1 stop bit in the transmitted data.  \n1 RTS Request to s end. Set by user to force the RTS \noutput to 0. Cleared by user to force the RTS \noutput to 1.  \n0 DTR  Data terminal ready. Set  by user to force the \nDTR output to 0. Cleared by user to force the \nDTR output to 1.  \nTable 106. COMSTA0 Register  \nName  Address  Default Value  Access  \nCOMSTA0  0xFFFF0714 0x60 R \nCOMSTA0 is the line status register.  \nTable 107. COMSTA0 MMR Bit Descriptions \nBit Name  Description  \n7  Reserved.  \n6 TEMT  COMTX and shift register e mpty status bit. Set  \nautomatically if COMTX and shift register are  \nempty. Cleared  automatically when writing to \nCOMTX . \n5 THRE  COMTX  empty. Set automatically if COMTX is  \nempty. Cleared automati cally when writing to \nCOMTX.  \n4 BI Break e rror. Set when SIN is held low for more than \nthe maximum word length. Cleared  automatically.  \n3 FE Framing e rror. Set when an invalid stop bit occurs. \nCleared automatically.  \n2 PE Parity e rror. Set when a parity error occurs. \nCleared automatically.  \n1 OE Overrun error. Set automatically if data is over -\nwritten before being read. Cleared  automatically.  \n0 DR Data r eady. Set automatically when COMRX is full.  \nCleared  by reading COMRX.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 74 of 102 Table 108. COMSTA1 Register  \nName  Address  Default Value  Access  \nCOMSTA1  0xFFFF0718 0x00 R \nCOMSTA1 is a modem status register.  \nTable 109. COMSTA1 MMR Bit Descriptions \nBit Name  Description  \n7 DCD  Data carrier detect.  \n6 RI Ring  indicator . \n5 DSR  Data set ready.  \n4 CTS  Clear to s end.  \n3 DDCD Delta DCD. Set automatically if DCD changed \nstate since last COMSTA1 read.  Cleared automati -\ncally by reading COMSTA1.  \n2 TERI  Trailing edge RI. Set if RI changed from 0 to 1 \nsince COMSTA1 was last read. Cleared  \nautomatically by reading COMSTA1.  \n1 DDSR  Delta DSR. Set  automatically if DSR changed state \nsince COMSTA1 was last read . Cleared \nautomatically by reading COMSTA1.  \n0 DCTS  Delta CTS. Set  automatically if CTS changed state \nsince COMSTA1 was last read. Cleared \nautomatically by reading COMSTA1.  \nTable 110. COMSCR Register  \nName  Address  Default Value  Access  \nCOMSCR  0xFFFF071C 0x00 R/W  \nCOMSCR is an 8 -bit scratch register used for temporary \nstorage. It is also used in network addressable UART mode.  \nTable 111. COMDIV2 Register  \nName  Address  Default Value  Access  \nCOMDIV2  0xFFFF072C 0x0000 R/W  \nCOMDIV2 is a 16- bit fractional baud divide register.  \nTable 112. COMDIV2 MMR Bit Descriptions \nBit Name  Description  \n15 FBEN  Fractional baud rate generator enable bit. \nSet by user to enable the fractional baud \nrate generator. Cleared by user to generate \nbaud rate using the standard 450 UART baud rate generator.  \n14:13  Reserved.  \n12:11 FBM[1:0]  M if FBM = 0, M = 4 (see the Fractional \nDivider  section).  \n10:0  FBN[10:0]  N (see the Fractional Divider  section).  \nNetwork Addressable UART Mode  \nThis mode connects the MicroConverter to a 256 -node serial \nnetwo rk, either as a hardware single master or via software in a \nmultimaster network. Bit 7 (ENAM) of the COMIEN1 register \nmust be set to enable UART in network addressable mode (see Table 114). Note that there is no parity check in this mode.  Network Addressable UART Register Definitions  \nFour additional registers, COMIEN0, COMIEN1, COMIID1, and \nCOMADR are us ed in network addressable UART mode  only. \nIn network address mode, the least significant bit of the COMIEN1  \nregister is the transmitted network address control bit. If set to 1, the device is transmitting an address. If cleared to 0, the device is transmitting data. For example, the following master -\nbased code transmits the slave’s address followed by the data:  \n  COMIEN1  = 0xE7;       //Setting ENAM, \nE9BT, E9BR, ETD, NABP \n  COMTX = 0xA0;  // Slave address is 0xA0 \n  while(!(0x020==(COMSTA0 & 0x020))){} // \nwait for adr tx to finish. \n  COMIEN1  = 0xE6;       //  Clear NAB bit \nto indicate Data is coming \n   COMTX = 0x55; // Tx data to slave: 0x55 \nTable 113. COMIEN1 Register  \nName  Address  Default Value  Access  \nCOMIEN1  0xFFFF0720 0x04 R/W  \nCOMIEN1 is an 8 -bit network enable register.  \nTable 114. COMIEN1 MMR Bit Descriptions \nBit Name  Description  \n7 ENAM  Network address mode enable bit. Set by user to \nenable network address mode. Cleared by user to \ndisable network address mode.  \n6 E9BT  9-bit transmit enable bit. Set by user to enable  \n9-bit transmit . ENAM must be set . Cleared by user \nto disable 9-bit transmit.  \n5 E9BR  9-bit receive enable bit. Set by user to enable  \n9-bit receive. ENAM must be set. Cleared by user \nto disable 9-bit receive.  \n4 ENI Network interrupt enable bit. \n3 E9BD  Word length. Set for 9 -bit data. E9BT has to be \ncleared. Cleared for 8 -bit data.  \n2 ETD  Transmitter pin driver enable bit. Set by user to \nenable SOUT pin as an output in slave mode or \nmultimaster mode. Cleared by user; SOUT is \nthree -state.  \n1 NABP  Network address b it. Interrupt polarity bit.  \n0 NAB  Network address bit (if NABP = 1). Set  by user to \ntransmit the slave address. Cleared  by user to \ntransmit data.  \nTable 115. COMIID1 Register  \nName  Address  Default Value  Access  \nCOMIID1  0xFFFF0724 0x01 R \nCOMIID1 is an 8- bit network interrupt register. Bit 7 to Bit 4 \nare reserved (see Table 116).  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 75 of 102 Table 116. COMIID1 MMR Bit Descriptions \nBit 3:1 \nStatus \nBits Bit 0 \nNINT  Priority  Definition  Clearing Operation  \n000 1  No interrupt   \n110 0 2 Matching network \naddress  Read COMRX  \n101 0 3 Address \ntransmitted, \nbuffer empty  Write data to \nCOMTX or \nread COMIID0 \n011 0 1 Receive line status \ninterrupt  Read \nCOMSTA0  \n010 0 2 Receive buffer full \ninterrupt  Read COMRX  \n001 0 3 Transmit buffer empty interrupt  Write data to COMTX or \nread COMIID0 \n000 0 4 Modem status interrupt  Read COMSTA1 \nNote that to receive a network address interrupt, the slave must \nensure that Bit 0 of COMIEN0 (enable receive buffer full interrupt) \nis set to  1. \nTable 117. COMADR Register  \nName  Address  Default Value  Access  \nCOMADR  0xFFFF0728  0xAA  R/W  \nCOMADR is an 8 -bit, read/write network address register that \nholds the address checked for by the network addressable \nUART. Upon receiving this address, the device interrupts the processor and/or sets the appropriate status bit in COMIID1.  \nSERIAL PERIPHERAL IN TERFACE  \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 integrate a \ncomplete  hardware serial peripheral interface (SPI) on -chip. SPI \nis an industry  standard, synchronous serial interface that allows \neight bits of data to be synchronously transmitted and simultaneously received, that is, full duplex up to a maximum bit \nrate of 3.48  Mb, as shown in Table 118. The SPI interface is not \noperational with core clock divider (CD) bits. POWCON[2:0] = 6 \nor 7 in master mode.  \nThe SPI port can be configured for master or slave operation . \nand typically consists of four pins : MISO  (P1.5) , MOSI  (P1.6) , \nSCLK  (P1.4) , and \nCS (P1.7).  \nOn the transmit side, the SPITX register ( and a TX shift register \noutside it) load s data onto the transmit pin  (in slave mode, \nMISO; in master mode, MOSI) . The transmit status bit , Bit 0,  \nin SPISTA indica tes whether there is valid data in the SPIT X \nregister.  \nSimilarly, the receive data path consists of the SPIRX register \n(and an RX shift register). SPISTA, Bit 3 indicates whether there is valid data in the SPIRX register. If valid data  in the SPIRX \nregister is overwritten or if valid data in the RX shift register is \ndiscarded, SPISTA, Bit 5 (the overflow bit) is set.  MISO (Master In, Slave Out) Pin  \nThe MISO pin is configured as an input line in master mode \nand an output line in slave mode. The MISO line on the master \n(data in) should be connected to the MISO line in the slave device (data out). The data is transferred as byte wide (8 -bit) \nserial data, MSB first.  \nMOSI (Master Out, Slave In) Pin  \nThe MOSI pin is configured as an output li ne in master mode \nand an input line in slave mode. The MOSI line on the master (data out) should be connected to the MOSI line in the slave device (data in). The data is transferred as byte wide (8 -bit) \nserial data, MSB first.  \nSCLK  (Serial Clock I/O) Pin  \nThe master serial clock (SCL K) is used to synchronize the data \nbeing transmitted and received through the MOSI SCL K \nperiod. Therefore, a byte is transmitted/received after eight SCL K \nperiods. The SCL K pin is configured as an  output in master \nmode and as an input in slave mode.  \nIn master mode, the polarity and phase of the clock are \ncontrolled by the SPICON register, and the bit rate is defined  \nin the SPIDIV register as follows:  \n) 1(2 SPIDIVffUCLK\nCLOCK SERIAL+×=  \nThe maximum speed of the SPI clock is dependent on the cl ock \ndivider bits and is summarized in Table 118. \nTable 118. SPI Speed vs. Clock Divider Bits in Master Mode  \nCD Bits  0 1 2 3 4 5 \nSPIDIV in H ex 0x05 0x0B  0x17 0x2F 0x5F 0xBF  \nSPI dpeed  \nin MHz  3.482 1.741 0.870 0.435 0.218 0.109 \nIn slave mode, the SPICON register must be configured with the phase and polarity of the expected input clock. The slave \naccepts data from an external master up to 10.4 Mb at CD = 0. \nThe formula to determine the maximum speed is as follows:  \n4HCLK\nCLOCK SERIALff =  \nIn both master and slave modes, data is transmitted on one edge \nof the SCL signal and sampled on the other. Therefore, it is important that the polarity and  phase be configured the same \nfor the master and slave devices.  \nChip Select ( CS Input) Pin  \nIn SPI slave mode, a transfer is initiated by the assertion of CS, \nwhich is an active low input signal. The SPI port then transmits and receives 8 -bit data until the transfer is concluded by \ndeassertion of \nCS. In slave mode, CS is always an input.  \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 76 of 102 SPI Registers  \nThe following  MMR registers are used to control the SPI \ninterface: SPISTA, SPIRX, SPITX, SPIDIV , and SPICON.  \nTable 119. SPISTA Register  \nName  Address  Default Value  Access  \nSPISTA  0xFFFF0A00  0x00  R \nSPISTA is an 8 -bit read -only status register. Only Bit 1 or Bit 4 \nof this register generates an interrupt. Bit 6 of the SPICON \nregister determines which bit generates the interrupt.  \nTable 120. SPISTA MMR Bit Descriptions \nBit Description  \n7:6 Reserved.  \n5 SPIRX d ata register overflow status bit. Set if SPIRX is \noverflowing. Cleared by reading the SPIRX register.  \n4 SPIRX d ata register IRQ. Set automatically if Bit 3 or Bit 5 \nis set. Cleared by reading the SPIRX register.  \n3 SPIRX data register full status bit. Set automatically  if a \nvalid data is present in the SPIRX register. Cleared  by \nreading the SPIRX register.  \n2 SPITX d ata register underflow status bit. Set auto -\nmatically if SPITX is underflowing. Cleared  by writing in \nthe SPITX register.  \n1 SPITX data r egister IRQ. Set automatically if Bit 0 is clear \nor Bit 2 is set. Cleared by writing in the SPITX register or if \nfinished transmission disabling the SPI.  \n0 SPITX data register empty status bit. Set by writing to \nSPITX to send data. This bit is set during transmission of \ndata. Cleared when SPITX is empty.  Table 121. SPIRX Register  \nName  Address  Default Value  Access  \nSPIRX  0xFFFF0A04 0x00 R \nSPIRX is an 8 -bit, read -only receive register.  \nTable 122. SPITX Register  \nName  Address  Default Value  Access  \nSPITX  0xFFFF0A08 0x00 W \nSPITX is an 8 -bit, write- only transmit register.  \nTable 123. SPIDIV Register  \nName  Address  Default Value  Access  \nSPIDIV  0xFFFF0A0C 0x1B  R/W  \nSPIDIV is an 8 -bit, serial clock divider register.  \nTable 124. SPICON Register  \nName  Address  Default Value  Access  \nSPICON  0xFFFF0A10 0x0000 R/W  \nSPICON is a 16 -bit control register.  \n \n  \n \n \n \n \nTable 125. SPICON MMR Bit Descriptions \nBit Description  Function  \n15:13  Reserved  N/A  \n12 Continuous transfer e nable  Set by user to enable continuous transfer. In master mode, the transfer continues until no valid data is \navailable in the TX register. CS is asserted and remains asserted for the duration of each 8 -bit serial transfer \nuntil TX is empty. Cleared by user to disable continuous transfer. Each transfer consists of a single 8 -bit \nserial transfer. If valid data exists in the SPITX register, then a new transfer is initiated after a stall period.  \n11 Loop  back enable  Set by user to connect MISO to  MOSI and test software. Cleared by user to be in normal mode. \n10 Slave  MISO output  enable  Set this bit to disable the output driver on the MISO pin. The MISO pin becomes open drain when this bit is \nset. Clear this bit for MISO to operate as normal.  \n9 Clip select  output  enable  Set by user in master mode to disable the chip select output. cleared by user to enable the chip select \noutput.  \nP1.7 should be configured as CS before SPICON is configured as a master when  the chip select output \nenabled is also selected.  \n8 SPIRX overflow overwrite enable  Set by user, the valid data in the RX register is overwritten by the new serial byte received. Cleared by user, \nthe new serial byte received is discarded. \n7 SPITX underflow mode  Set by user to transmit 0. Cleared by user to transmit the previous data.  \n6 Transfer and interrupt mode  Set by user to initiate transfer with a write to the SPITX register. Interrupt occurs only when TX is empty. \nCleared by user to initiate transfer with a read of the SPIRX register. Interrupt occurs only when RX is full.  \n5 LSB first transfer enable bit  Set by user, the LSB is transmitted first. Cleared by user, the MSB is transmitted first. \n4 Reserved   \n3 Serial clock polarity mode bit  Set by user, the serial clock idles high. Cleared by user, the serial clock idles low. \n2 Serial c lock phase mode bit Set by user, the serial clock pulses at the beginning of each serial bit transfer. Cleared by user, the serial \nclock pulses at the end of each serial bit transfer. \n1 Master  mode  enable bit Set by user to enable master mode. Cleared by user to enable slave mode.  \n0 SPI enable bit  Set by user to enable the SPI. Cleared by user to disable the SPI.  \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 77 of 102 I2C-COMPATIBLE INTERFACES \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 support two \nlicensed I2C interfaces. The I2C interfaces are both implemented as \na hard-ware master and a full slave interface. Because the two I2C \ninter-faces are identical, this data sheet describes only I2C0 in \ndetail. Note that the two masters and one of the slaves have \nindividual interrupts (see the Interrupt System section). \nNote that when configured as an I2C master device, the \nADuC7019/ 20/21/22/24/25/26/27/28/29 cannot generate a \nrepeated start condition. The two GPIO pins used for data transfer, SDAx and SCLx, are \nconfigured in a wired-AND format that allows arbitration in a multimaster system. These pins require external pull-up resistors. \nTypical pull-up values are 10 kΩ. \nThe I\n2C bus peripheral address in the I2C bus system is pro-\ngrammed by the user. This ID can be modified any time a \ntransfer is not in progress. The user can configure the interface \nto respond to four slave addresses. \nThe transfer sequence of an I2C system consists of a master \ndevice initiating a transfer by generating a start condition while \nthe bus is idle. The master tran smits the slave device address \nand the direction of the data transfer during the initial address transfer. If the master does no t lose arbitration and the slave \nacknowledges, the data transfer is initiated. This continues until \nthe master issues a stop cond ition and the bus becomes idle. \nThe I\n2C peripheral can be configured only as a master or slave \nat any given time. The same I2C channel cannot simultaneously \nsupport master and slave modes. \nSerial Clock Generation \nThe I2C master in the system generates the serial clock for a \ntransfer. The master channel can be configured to operate in \nfast mode (400 kHz) or standard mode (100 kHz). \nThe bit rate is defined in the I2C0DIV MMR as follows: \n(2 )  (2  )UCLK\nSERIAL CLOCKffDIVH DIVL\uf03d\uf02b\uf02b \uf02b  \nwhere: \nfUCLK = clock before the clock divider. \nDIVH  = the high period of the clock. \nDIVL  = the low period of the clock. \nThus, for 100 kHz operation, \nDIVH  = DIVL  = 0xCF  \nand for 400 kHz,  \nDIVH  = 0x28, DIVL  = 0x3C \nThe I2CxDIV registers correspond to DIVH:DIVL. Slave Addresses \nThe registers I2C0ID0, I2C0ID1, I2C0ID2, and I2C0ID3 contain \nthe device IDs. The device comp ares the four I2C0IDx registers \nto the address byte. To be correc tly addressed, the seven MSBs of \neither ID register must be identi cal to that of the seven MSBs of \nthe first received address byte. The LSB of the ID registers (the transfer direction bit) is ignored in the process of address \nrecognition. \nI2C Registers \nThe I2C peripheral interface consists of 18 MMRs, which are \ndiscussed in this section. \nTable 126. I2CxMSTA Registers \nName  Address Default Value Access \nI2C0MSTA 0xFFFF0800 0x00 R/W \nI2C1MSTA 0xFFFF0900 0x00 R/W \nI2CxMSTA are status registers for the master channel. Table 127. I2C0MSTA MMR Bit Descriptions \nBit Access \nType Description \n7 R/W Master transmit FIFO flush. Set by user to flush \nthe master Tx FIFO. Cleared automatically after \nthe master Tx FIFO is flushed. This bit also \nflushes the slave receive FIFO. \n6 R Master busy. Set automatically if the master is busy. Cleared automatically. \n5 R Arbitration loss. Set in multimaster mode if another master has the bus. Cleared when the \nbus becomes available. \n4 R No ACK. Set automatically if there is no \nacknowledge of the address by the slave \ndevice. Cleared  automatically by reading the \nI2C0MSTA register. \n3 R Master receive IRQ. Set after receiving data. \nCleared  automatically by reading the I2C0MRX \nregister. \n2 R Master transmit IRQ. Set at the end of a transmission. Cleared automatically by writing \nto the I2C0MTX register. \n1 R Master transmit FIFO underflow. Set \nautomatically if the mast er transmit FIFO is \nunderflowing. Cleared  automatically by \nwriting to the I2C0MTX register. \n0 R Master TX FIFO not full. Set automatically if the \nslave transmit FIFO is not full. Cleared  automati-\ncally by writing twice to the I2C0STX register. \nTable 128. I2CxSSTA Registers \nName  Address Default Value Access \nI2C0SSTA 0xFFFF0804 0x01 R \nI2C1SSTA 0xFFFF0904 0x01 R \nI2CxSSTA are status registers for the slave channel. \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 78 of 102 Table 129. I2C0SSTA MMR Bit Descriptions \nBit Value  Description  \n31:15  Reserved. These bits  should be written as 0.  \n14  Start decode bit. Set by hardware if the device \nreceives a valid start plus matching address. \nCleared by an I2C stop condition or an I2C \ngeneral call reset.  \n13  Repeated start decode bit. Set by hardware  \nif the device receiv es a valid repeated start and \nmatching address. Cleared by an I2C stop condi -\ntion, a read of the I2CSSTA register, or an I2C \ngeneral call reset.  \n12:11  ID decode bits. \n 00 Received Address Matched ID Register 0.  \n 01 Received Address Matched ID Register 1. \n 10 Received Address Matched ID Register 2.  \n 11 Received Address Matched ID Register 3.  \n10  Stop after start and matching address interrupt. \nSet by hardware if the slave device receives an \nI2C stop condition after a previous I2C start \ncondition and matching address. Cleared  by a \nread of the I2C0SSTA register.  \n9:8  General call ID.  \n 00 No g eneral call. \n 01 General c all reset and program address.  \n 10 Gener al call p rogram address.  \n 11 General c all matching alternative ID.  \n7  General c all interrupt. Set if the slave device \nreceives a general call of any type. Cleared by \nsetting Bit 8 of the I2CxCFG register. If it is a \ngeneral call reset, all registers are at their \ndefault values. If it is a hardware general call, \nthe Rx FIFO holds the second byte of the \ngeneral call. This is similar to the I2C0ALT \nregister (unless it is a general call to reprogram the device address). For more details, see the I\n2C \nbus specification, Version 2.1, Jan uary  2000.  \n6  Slave b usy. Set  automatically if the slave is  busy. \nCleared  automatically.  \n5  No ACK. Set  if master asking for data and no \ndata is available. Cleared automatically by \nreading the I2C0SSTA register.  \n4  Slave receive FIFO o verflow. Set  automatically if \nthe slave receive FIFO is overflowing. Cleared \nautomatically by reading the I2C0SSTA register.  \n3  Slave receive IRQ. Set  after receiving data. \nCleared automatically by reading the I2C0SRX \nregister or flushing the FIFO.  \n2  Slave transmit IRQ.  Set at the end of a trans -\nmission. Cleared automatically by writing to the \nI2C0STX register. \n1  Slave transmit FIFO underflow.  Set automatically if \nthe slave transmit FIFO is underflowing. Cleared \nautomatically by writing to the I2C0SSTA register.  \n0  Slave t ransmit FIFO n ot full. Set automatically if \nthe slave tr ansmit FIFO is not full. Cleared  auto -\nmatically by writing twice to the I2C0STX register.  \n Table 130. I2CxSRX Registers \nName  Address  Default Value  Access  \nI2C0SRX  0xFFFF0808 0x00 R \nI2C1SRX  0xFFFF0908  0x00  R \nI2CxSRX are receive registers for the slave channel.  \nTable 131. I2CxSTX Registers \nName  Address  Default Value  Access  \nI2C0STX  0xFFFF080C 0x00 W \nI2C1STX  0xFFFF090C  0x00  W \nI2CxSTX are transmit registers for the slave channel.  \nTable 132. I2CxMRX Registers  \nName  Address  Default Value  Access  \nI2C0MRX  0xFFFF0810 0x00 R \nI2C1MRX  0xFFFF0910 0x00 R \nI2CxMRX are receive registers for the master channel.  \nTable 133. I2CxMTX Registers  \nName  Address  Default Value  Access  \nI2C0MTX  0xFFFF0814 0x00 W \nI2C1MTX  0xFFFF0914 0x00 W \nI2CxMTX are transmit registers for the master channel.  \nTable 134. I2CxCNT Registers  \nName  Address  Default Value  Access  \nI2C0CNT  0xFFFF0818 0x00 R/W  \nI2C1CNT  0xFFFF0918 0x00 R/W  \nI2CxCNT are 3 -bit, master receive, data count registers. If a master  \nread transfer sequence is initiated, the I2CxCNT registers denote \nthe number of bytes (−1) to be read from the slave device. By \ndefault,  this counter is 0, which corresponds to the one  byte \nexpected.  \nTable 135. I2CxADR Registers  \nName  Address  Default Value  Access  \nI2C0ADR  0xFFFF081C 0x00 R/W  \nI2C1ADR  0xFFFF091C 0x00 R/W  \nI2CxADR are master address byte registers. The I2CxADR \nvalue is the device address that the master wants to commun -\nicate with. It automatically transmits at the start of a master transfer sequence if there is no valid data in the I2CxMTX \nregister when the master enable bit is set.  \nTable 136. I2CxBYTE Registers  \nName  Address  Default Value  Access  \nI2C0BYTE  0xFFFF0824 0x00 R/W  \nI2C1BYTE  0xFFFF0924 0x00 R/W  \nI2CxBYTE are broadcast byte registers. Data written to these \nregister s does not go through the TxFIFO. This data is transmitted  \nat the start of a transfer sequence before the address. After  the \nbyte is transmitted and acknowledged, the I2C expects another \nbyte written in I2CxBYTE or an address written to the address \nregister.  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 79 of 102 Table 137. I2CxALT Registers  \nName  Address  Default Value  Access  \nI2C0ALT  0xFFFF0828 0x00 R/W  \nI2C1ALT  0xFFFF0928  0x00  R/W  \nI2CxALT are hardware general call ID registers used in slave mode.  Table 138. I2CxCFG Registers \nName  Address  Default Value  Access  \nI2C0CFG  0xFFFF082C 0x00 R/W  \nI2C1CFG  0xFFFF092C  0x00  R/W  \nI2CxCFG are configuration registers.  \nTable 139. I2C0CFG MMR Bit Descriptions \nBit Description  \n31:5  Reserved. These bits should be written by the user as 0.  \n14 Enable stop interrupt. Set by the user to generate an interrupt upon receiving a stop condition and after receiving  a valid start \ncondition and matching address. Cleared by the user to disable the generation of an interrupt upon receiving a stop condition.  \n13 Reserved.  \n12 Reserved.  \n11 Enable stretch SCL (h olds SCL l ow). Set by the user to stretch the SCL line. Cleared  by the user to disable stretching of the SCL line.  \n10 Reserved.  \n9 Slave Tx FIFO request interrupt enable.  Set by the user to disable the slave Tx FIFO request interrupt. Cleared by the user to generate \nan interrupt request just after the negative edge of the clock for the R/W bit. This allows the user to input data into the slave Tx FIFO if \nit is empty. At 400 ksps and the core clock running at 41.78  MHz, the user has 45 clock cycles to take appropriate action, taking \ninterrupt latency into accoun t. \n8 General c all status bit clear. Set by the user to clear the general call status bits. Cleared automatically by hardware after the general \ncall status bits are  cleared.  \n7 Master  serial clock enable bit. Set by user to enable generation of the serial clock in master mode. Cleared by user to disable serial \nclock in master mode.  \n6 Loopb ack enable bit. Set by user to internally connect the transition to the reception to test user software. Cleared by user to operate \nin normal mode.  \n5 Start backoff d isab le bit. Set  by user in multimaster mode. If losing arbitration, the master immediately tries to retransmit. Cleared by \nuser to enable start backoff. After losing arbitration, the master waits before trying to retransmit.  \n4 Hardware general c all enable. When this bit and Bit 3 are set  and have received a general call (Address 0x00) and a data byte, the \ndevice checks the contents of I2C0ALT against the receive register. If the contents match, the device has received a hardware general \ncall. This is used if  a device needs urgent attention from a master device without knowing which master it needs to turn to. This is a \n“to whom it may concern” call. The ADuC7019/ 20/21/22/24/25/26/27/28/29 watch for these addresses. The device that requires \nattention embeds its own address into the message. All masters listen , and the one that can handle the device contacts its slave and \nacts appropriately. The LSB of the I2C0ALT register should always be written to 1, as indicated in  The I2C-Bus Specification , January \n2000, from NXP . \n3 General c all enable bit. This bit is s et by the user  to enable the slave device to acknowledge (ACK)  an I2C general call, Address 0x00 \n(write). The device then recognizes a data bit. If it receives a 0x06 (reset and write programmable part of slave address by hardware) \nas the data byte, the I2C interface resets as as indicated in The I2C-Bus Specificatio n, January 2000, from NXP . This command can be \nused to reset an entire I2C system. The general call interrupt status bit sets on any general call. The user must take corrective action by \nsetting up the I2C interface after a reset. If it receives a 0x04 (wr ite programmable part of slave address by hardware) as the data byte, \nthe general call interrupt status bit sets on any general call. The user must take corrective action by reprogramming the device address.  \n2 Reserved.  \n1 Master e nable bit. Set by user to enable the master I2C channel. Cleared by user to disable the master I2C channel.  \n0 Slave e nable bit. Set by user to enable the slave I2C channel. A slave transfer sequence is monitored for the device address in I2C0ID0, \nI2C0ID1, I2C0ID2, and I2C0ID3. At 400 kSPs, the core clock should run at 41.78 MHz because the interrupt latency could be up to 45 \nclock cycles alone. After the I2C read bit, the user has 0.5 of an I2C clock cycle to load the Tx FIFO. AT 400 kSPS, this is 1.26 μs , the \ninterrupt latency.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 80 of 102 Table 140. I2CxDIV Registers  \nName  Address  Default Value  Access  \nI2C0DIV  0xFFFF0830 0x1F1F R/W  \nI2C1DIV  0xFFFF0930  0x1F1F  R/W  \nI2CxDIV are the clock divider registers.  \nTable 141. I2CxIDx Registers  \nName  Address  Default Value  Access  \nI2C0ID0  0xFFFF0838 0x00 R/W  \nI2C0ID1  0xFFFF083C  0x00  R/W  \nI2C0ID2  0xFFFF0840 0x00 R/W  \nI2C0ID3  0xFFFF0844 0x00 R/W  \nI2C1ID0  0xFFFF0938  0x00  R/W  \nI2C1ID1  0xFFFF093C 0x00 R/W  \nI2C1ID2  0xFFFF0940 0x00 R/W  \nI2C1ID3  0xFFFF0944 0x00 R/W  \nI2CxID0, I2CxID1, I2CxID2, and I2CxID3 are slave address \ndevice ID registers of I2Cx.  \nTable 142. I2CxCCNT Registers  \nName  Address  Default Value  Access  \nI2C0CCNT  0xFFFF0848 0x01 R/W  \nI2C1CCNT  0xFFFF0948 0x01 R/W  \nI2CxCCNT are  8-bit start/stop generation counters. They hold \noff SDA low for start and stop conditions.  \nTable 143. I2CxFSTA Registers \nName  Address  Default Value  Access  \nI2C0FSTA  0xFFFF084C 0x0000 R/W  \nI2C1FSTA  0xFFFF094C 0x0000 R/W  \nI2CxFSTA are FIFO status registers. Table 144. I2C0FSTA MMR Bit Descriptions \nBit Access \nType  Value  Description  \n15:10    Reserved.  \n9 R/W   Master transmit FIFO f lush. Set by the \nuser to flush the master Tx FIFO. \nCleared automatically when the \nmaster Tx FIFO is flushed. This bit  \nalso flushes the slave receive FIFO.  \n8 R/W   Slave transmit FIFO fl ush. Set by the \nuser to flush the slave Tx FIFO. Cleared  \nautomatically after  the slave Tx FIFO \nis flushed.  \n7:6 R  Master Rx FIFO s tatus bits. \n  00 FIFO  empty . \n  01 Byte written to FIFO.  \n  10 One  byte in FIFO.  \n  11 FIFO full. \n5:4 R  Master Tx FIFO status bits. \n  00 FIFO empty.  \n  01 Byte written to FIFO.  \n  10 One  byte in FIFO.  \n  11 FIFO full. \n3:2 R  Slave Rx FIFO s tatus bits. \n  00 FIFO empty.  \n  01 Byte written to FIFO.  \n  10 One  byte in FIFO.  \n  11 FIFO full. \n1:0 R  Slave Tx FIFO status bits. \n  00 FIFO empty.  \n  01 Byte written to FIFO.  \n  10 One  byte in FIFO.  \n  11 FIFO full. \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 81 of 102 PROGRAMMABLE LOGIC ARRAY (PLA) \nEvery ADuC7019/ 20/21/22/24/25/26/27/28/29 integrates a  \nfully programmable logic array (PLA) that consists of two \nindependent but interconnected PLA blocks. Each block consists of eight PLA elements, giving each part a total of 16 PLA elements. \nEach PLA element contains a two-input lookup table that can \nbe configured to generate any logic output function based on \ntwo inputs and a flip-flop. This is represented in Figure 76. \n04955-0334\n20\n13A\nBLOOKUP\nTABLE\n \nFigure 76. PLA Element \nIn total, 30 GPIO pins are available on each ADuC7019/20/21/ \n22/24/25/26/27/28/29 for the PLA. These include 16 input pins  and 14 output pins, which msut be configured in the GPxCON register as PLA pins before using the PLA. Note that the comparator output is also included as one of the 16 input pins. \nThe PLA is configured via a set of user MMRs. The output(s) of \nthe PLA can be routed to the internal interrupt system, to the \nCONV\nSTART signal of the ADC, to an MMR, or to any of the 16 \nPLA output pins. \nThe two blocks can be interconnected as follows: \n\uf0b7 Output of Element 15 (Block 1) can be fed back to Input 0 \nof Mux 0 of Element 0 (Block 0). \n\uf0b7 Output of Element 7 (Block 0) can be fed back to the Input 0 \nof Mux 0 of Element 8 (Block 1). \nTable 145. Element Input/Output \nPLA Block 0 PLA Block 1 \nElement Input Output Element Input Output \n0 P1.0 P1.7 8 P3.0 P4.0 \n1 P1.1 P0.4 9 P3.1 P4.1 \n2 P1.2 P0.5 10 P3.2 P4.2 \n3 P1.3 P0.6 11 P3.3 P4.3 \n4 P1.4 P0.7 12 P3.4 P4.4 \n5 P1.5 P2.0 13 P3.5 P4.5 \n6 P1.6 P2.1 14 P3.6 P4.6 \n7 P0.0 P2.2 15 P3.7 P4.7 \nPLA MMRs Interface \nThe PLA peripheral interface consists of the 22 MMRs described in this section. Table 146. PLAELMx Registers \nName  Address Default Value Access \nPLAELM0 0xFFFF0B00 0x0000 R/W \nPLAELM1 0xFFFF0B04 0x0000 R/W \nPLAELM2 0xFFFF0B08 0x0000 R/W \nPLAELM3 0xFFFF0B0C 0x0000 R/W \nPLAELM4 0xFFFF0B10 0x0000 R/W \nPLAELM5 0xFFFF0B14 0x0000 R/W \nPLAELM6 0xFFFF0B18 0x0000 R/W \nPLAELM7 0xFFFF0B1C 0x0000 R/W \nPLAELM8 0xFFFF0B20 0x0000 R/W \nPLAELM9 0xFFFF0B24 0x0000 R/W \nPLAELM10 0xFFFF0B28 0x0000 R/W \nPLAELM11 0xFFFF0B2C 0x0000 R/W \nPLAELM12 0xFFFF0B30 0x0000 R/W \nPLAELM13 0xFFFF0B34 0x0000 R/W \nPLAELM14 0xFFFF0B38 0x0000 R/W \nPLAELM15 0xFFFF0B3C 0x0000 R/W \nPLAELMx are Element 0 to Element 15 control registers. They \nconfigure the input and output mux of each element, select the \nfunction in the lookup table, and bypass/use the flip-flop. See \nTable 147 and Table 152. \nTable 147. PLAELMx MMR Bit Descriptions \nBit Value Description \n31:11  Reserved. \n10:9  Mux 0 control (see Table 152). \n8:7  Mux 1 control (see Table 152). \n6  Mux 2 control.  Set by user to select the output \nof Mux 0. Cleared by user to select the bit value \nfrom PLADIN. \n5  Mux 3 control. Set by user to select the input pin of the particular element. Cleared  by user to \nselect the output of Mux 1. \n4:1  Lookup table control. \n 0000 0. \n 0001 NOR. \n 0010 B AND NOT A. \n 0011 NOT A. \n 0100 A AND NOT B. \n 0101 NOT B. \n 0110 EXOR. \n 0111 NAND. \n 1000 AND. \n 1001 EXNOR. \n 1010 B. \n 1011 NOT A OR B. \n 1100 A. \n 1101 A OR NOT B. \n 1110 OR. \n 1111 1. \n0  Mux 4 control. Set by user to bypass the flip-\nflop. Cleared by user to select the flip-flop \n(cleared by default). \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 82 of 102 Table 148. PLACLK Register  \nName  Address  Default Value  Access  \nPLACLK  0xFFFF0B40  0x00 R/W  \nPLACLK  is the clock selection for the flip -flops of Block 0 and \nBlock 1. Note that the ma ximum frequency when using the \nGPIO pins as the clock input for the PLA blocks is 44 MHz.  \nTable 149. PLACLK MMR Bit  Descriptions \nBit Value  Description  \n7  Reserved.  \n6:4  Block 1 c lock source selection.  \n 000 GPIO c lock on P0.5.  \n 001 GPIO c lock on P0.0.  \n 010 GPIO c lock on P0.7.  \n 011 HCLK.  \n 100 OCLK (32.768 kHz)  external crystal only . \n 101 Timer1 overflow.  \n Other  Reserved.  \n3  Reserved.  \n2:0  Block 0 c lock source selection.  \n 000 GPIO c lock on P0.5.  \n 001 GPIO c lock on P0.0.  \n 010 GPIO c lock on P0.7.  \n 011 HCLK.  \n 100 OCLK (32.768 kHz)  external crystal only . \n 101 Timer1 overflow.  \n Other  Reserved.  Table 150. PLAIRQ Register  \nName  Address  Default Value  Access  \nPLAIRQ  0xFFFF0B44  0x00000000 R/W  \nPLAIRQ  enables IRQ0 and/or IRQ1 and selects the source  \nof the IRQ.  \nTable 151. PLAIRQ MMR Bit Descriptions \nBit Value  Description  \n15:13   Reserved.  \n12  PLA IRQ1 e nable bit. Set by user to enable \nIRQ1 output from PLA . Cleared by user to \ndisable IRQ1 output from PLA.  \n11:8  PLA IRQ1 s ource.  \n 0000 PLA Element 0.  \n 0001  PLA Element 1.  \n 1111 PLA Element 15.  \n7:5  Reserved.  \n4  PLA IRQ0 e nable bit. Set by user to enable \nIRQ0 output from PLA . Cleared by user to \ndisable IRQ0 output from PLA.  \n3:0  PLA IRQ0  source.  \n 0000 PLA Element 0.  \n 0001  PLA Element 1.  \n 1111 PLA Element 15.  \n \nTable 152. Feedback Configuration  \nBit Value  PLAELM0  PLAELM1 to PLAELM7  PLAELM8  PLAELM9 to PLAELM15  \n10:9 00 Element 15  Element 0  Element 7  Element 8  \n 01 Element 2  Element 2  Element 10  Element 10  \n 10 Element 4  Element 4  Element 12  Element 12  \n 11 Element 6  Element 6  Element 14  Element 14  \n8:7 00 Element 1  Element 1  Element 9  Element 9  \n 01 Element 3  Element 3  Element 11  Element 11  \n 10 Element 5  Element 5  Element 13  Element 13  \n 11 Element 7  Element 7  Element 15  Element 15  \n \nData Sheet ADuC7019/20/2 1/22/24/25/26/27/28/29 \n \nRev. H | Page 83 of 102 Table 153. PLAADC Register  \nName  Address  Default Value  Access  \nPLAADC  0xFFFF0B48  0x00000000 R/W  \nPLAADC is the PLA source for the ADC start conversion signal.  \nTable 154. PLAADC MMR Bit Descriptions \nBit Value  Description  \n31:5   Reserved.  \n4  ADC s tart conversion enable bit. Set by user \nto enable ADC start conversion from PLA . \nCleared by user to disable ADC start \nconversion from PLA.  \n3:0  ADC s tart conversion source.  \n 0000 PLA Element 0.  \n 0001 PLA Element 1.  \n 1111  PLA Element 15.  \nTable 155. PLADIN Register  \nName  Address  Default Value  Access  \nPLADIN  0xFFFF0B4C  0x00000000 R/W  \nPLADIN  is a data input MMR for PLA.  Table 156. PLADIN  MMR Bit Descriptions \nBit Description  \n31:16 Reserved.  \n15:0  Input b it to Element 15 to Element 0.  \nTable 157. PLADOUT Register  \nName  Address  Default Value  Access  \nPLADOUT  0xFFFF0B50  0x00000000 R \nPLADOUT  is a data output MMR for PLA. This register is \nalways updated.  \nTable 158. PLADOUT MMR Bit Descriptions \nBit Description  \n31:16 Reserved.  \n15:0 Output bit from Element 15 to Element 0.  \nTable 159. PLALCK Register  \nName  Address  Default Value  Access  \nPLALCK  0xFFFF0B54  0x00 W \nPLALCK  is a PLA lock option. Bit 0 is written only once. When \nset, it does not allow modifying any of the PLA MMRs, except \nPLADIN. A PLA tool is provided in the development system to easily configure the PLA.  \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 84 of 102 PROCESSOR REFERENCE PERIPHERALS\nINTERRUPT SYSTEM  \nThere are 23 interrupt sources on the ADuC7019/20/21/22/ \n24/25/26/27/28/29 that are controlled by the interrupt \ncontroller. Most interrupts are generated from the on -chip \nperipherals, such as ADC and UART. Four additional inter rupt \nsources are generated from external interrupt request pins, \nIRQ0, IRQ1, IRQ2, and IRQ3. The ARM7TDMI CPU core only \nrecognizes interrupts as one of two types : a normal interrupt \nrequest IRQ or a fast interrupt request FIQ. All the interrupts \ncan be mas ked separately.  \nThe control and configuration of the interrupt system are  \nmanaged through nine interrupt -related registers, four \ndedicated to IRQ, and four dedicated to FIQ. An additional \nMMR is used to select the programmed interrupt source. The \nbits in each IRQ and FIQ register (except for Bit 23) represent \nthe same interrupt source as described in Table 160. \nTable 160. IRQ/F IQ MMRs Bit Description  \nBit Description  \n0 All interrupts OR’ed (FIQ only)  \n1 SWI \n2 Timer0  \n3 Timer1  \n4 Wake -up timer (Timer2)  \n5 Watchdog timer (Timer3)  \n6 Flash control \n7 ADC channel  \n8 PLL lock \n9 I2C0 slave  \n10 I2C0 master  \n11 I2C1 master  \n12 SPI slave  \n13 SPI master  \n14 UART  \n15 External IRQ0  \n16 Comparator  \n17 PSM  \n18 External IRQ1  \n19 PLA IRQ0  \n20 PLA IRQ1  \n21 External IRQ2  \n22 External IRQ3  \n23 PWM trip (IRQ only)/PWM sync (FIQ only)  \n IRQ  \nThe interrupt request (IRQ) is the exception signal to enter the \nIRQ mode of the processor. It is used to service general -purpose  \ninterrupt handling of internal and external events.  \nThe four 32- bit registers dedicated to IRQ are IRQSTA, \nIRQSIG, IRQEN, and IRQCLR.  \nTable 161. IRQSTA Register  \nName  Address  Default Value  Access  \nIRQSTA  0xFFFF0000 0x00000000 R \nIRQSTA ( read -only register) provides the current- enabled IRQ \nsource status. When set to 1, that source should generate an active IRQ request to the ARM7TDMI core. There is no priority encoder or interrupt vector generation. This function is implemented in software  in a common interrupt handler \nroutine. All 32 bits are logically OR’ ed to create the IRQ signal to the ARM7TDMI core.  \nTable 162. IRQSIG Register  \nName  Address  Default Value  Access  \nIRQSIG 0xFFFF0004 0x00XXX0001 R \n1 X indicates an undefined value.  \nIRQSIG reflects the status of the different IRQ sources. If a periph -\neral generates an IRQ signal, the corresponding bit in the IRQSIG is set; otherwise, it is cleared. The IRQSIG bits are cleared when \nthe interrupt in the particular perip heral is cleared. All IRQ \nsources can be masked i n the IRQEN MMR. IRQSIG is read only.  \nTable 163. IRQEN Register  \nName  Address  Default Value  Access  \nIRQEN  0xFFFF0008 0x00000000 R/W  \nIRQEN provides the value of the current enable mas k. When \neach bit is set to 1, the source request is enabled to create an \nIRQ exception. When each bit is set to 0, the source request is \ndisabled or masked, which does not  create an IRQ exception.  \nNote that to clear an already enabled interrupt source, the user \nmust set the appropriate bit in the IRQCLR register. Clearing an interrupt’s IRQEN bit does not disable th e interrupt.  \nTable 164. IRQCLR Register  \nName  Address  Default Value  Access  \nIRQCLR  0xFFFF000C 0x00000000 W \nIRQCLR (w rite-only register)  clears the IRQEN register in \norder to mask an interrupt source. Each bit set to 1 clears the \ncorresponding bit in the IRQEN register without affecting the \nremaining bits. The pair of registers, IRQEN and IRQCLR, \nindependently manipulate s the enable mask without requiring \nan atomic read -modify -write.  \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 85 of 102 FIQ \nThe fast interrupt request (FIQ) is the exception signal to enter \nthe FIQ mode of the processor. It is provided to service data \ntransfer or communication channel tasks with low latency. The \nFIQ interface is identical to the IRQ interface providing the second-level interrupt (highest priority). Four 32-bit registers \nare dedicated to FIQ: FIQSIG, FIQEN, FIQCLR, and FIQSTA. \nTable 165. FIQSTA Register \nName  Address Default Value Access \nFIQSTA 0xFFFF0100 0x00000000 R \nTable 166. FIQSIG Register \nName  Address Default Value Access \nFIQSIG 0xFFFF0104 0x00XXX0001 R \n1 X indicates an undefined value. \nTable 167. FIQEN Register \nName  Address Default Value Access \nFIQEN 0xFFFF0108 0x00000000 R/W \nTable 168. FIQCLR Register \nName  Address Default Value Access \nFIQCLR 0xFFFF010C 0x00000000 W \nBit 31 to Bit 1 of FIQSTA are logically OR’ d to create the FIQ \nsignal to the core and to Bit 0 of both the FIQ and IRQ registers \n(FIQ source). \nThe logic for FIQEN and IRQEN does not allow an interrupt \nsource to be enabled in both IRQ and FIQ masks. A bit set to 1 in FIQEN does, as a side effect, clear the same bit in IRQEN. Also, a bit set to 1 in IRQEN does, as a side effect, clear the same bit in FIQEN. An interrupt source can be disabled in both the IRQEN and FIQEN masks.\n \nNote that to clear an already enabled FIQ source, the user must \nset the appropriate bit in the FIQCLR register. Clearing an \ninterrupt’s FIQEN bit does not disable the interrupt. \nProgrammed Interrupts \nBecause the programmed interrupts are nonmaskable, they are \ncontrolled by another register, SWICFG, which simultaneously \nwrites into the IRQSTA and IRQSIG registers and/or the \nFIQSTA and FIQSIG registers. The 32-bit SWICFG register is \ndedicated to software interrupts(see Table 170). This MMR \nallows the control of a pr ogrammed source interrupt. \nTable 169. SWICFG Register \nName  Address Default Value Access \nSWICFG 0xFFFF0010 0x00000000 W Table 170. SWICFG MMR Bit Descriptions \nBit Description \n31:3 Reserved. \n2 Programmed interrupt (FIQ). Setting/clearing  this bit \ncorresponds with setting/clearing Bit 1 of FIQSTA  \nand FIQSIG. \n1 Programmed interrupt (IRQ). Setting/clearing this bit \ncorresponds with setting/clearing Bit 1 of IRQSTA  \nand IRQSIG. \n0 Reserved.  \nNote that any interrupt signal must be active for at least the \nequivalent of the interrupt latency time, which is detected by \nthe interrupt controller and by the user in the IRQSTA/FIQSTA register. \nTIMERS \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 have four general-\npurpose timer/counters. \n\uf0b7 Timer0 \n\uf0b7 Timer1 \n\uf0b7 Timer2 or wake-up timer \n\uf0b7 Timer3 or watchdog timer \nThese four timers in their normal mode of operation can be \neither free running or periodic. \nIn free-running mode, the counter decreases from the \nmaximum value until zero scale and starts again at the \nminimum value. (It also increases from the minimum value \nuntil full scale and starts again at the maximum value.) \nIn periodic mode, the counter decrements/increments from the \nvalue in the load register (TxLD MMR) until zero/full scale and \nstarts again at the value stored in the load register. \nThe timer interval is calculated as follows:  \nIf the timer is set to count down then \n\uf028\uf029\nClock SourcePrescaler TxLDInterval\uf0b4\uf03d\n \nIf the timer is set to count up, then \n\uf028\uf029\nClock SourcePrescaler TxLD FsInterval\uf0b4\uf02d\uf03d\n \nThe value of a counter can be read at any time by accessing its \nvalue register (TxV AL). Note that when a timer is being clocked from a clock other than core clock, an incorrect value may be read (due to an asynchronous clock system). In this configur-ation, TxV AL should always be read twice. If the two readings \nare different, it should be read a third time to get the correct \nvalue. \nTimers are started by writing in the control register of the \ncorresponding timer (TxCON). \n \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 86 of 102 In normal mode, an IRQ is generated each time the value of the \ncounter reaches zero when counting down. It is also generated each time the counter value reaches full scale when counting up. An IRQ can be cleared by writing any value to clear the register of that particular timer (TxCLRI). \nWhen using an asynchronous clock-to-clock timer, the \ninterrupt in the timer block may take more time to clear  \nthan the time it takes for the code in the interrupt routine to execute. Ensure that the interrupt signal is cleared before leaving the interrupt service routine. This can be done by \nchecking the IRQSTA MMR.  \nHour:Minute:Second:1/128 Format \nTo use the timer in hour:minute:second:hundredths format, \nselect the 32,768 kHz clock and prescaler of 256. The hun-\ndredths field does not represent milliseconds but 1/128 of  a second (256/32,768). The bits representing the hour,  minute, and second are not consecutive in the register.  \nThis arrangement applies to TxLD and TxV AL when using  \nthe hour:minute:second:hundredths format as set in \nTxCON[5:4]. See Table 171 for additional details. \nTable 171. Hour:Minnute:Second:Hundredths Format \nBit Value Description \n31:24 0 to 23 or 0 to 255 Hours \n23:22 0 Reserved \n21:16 0 to 59 Minutes \n15:14 0 Reserved \n13.8 0 to 59 Seconds \n7 0 Reserved \n6:0 0 to 127 1/128 second \nTimer0 (RTOS Timer) \nTimer0 is a general-purpose, 16-bit timer (count down) with a \nprogrammable prescaler (see Figure 77). The prescaler source is \nthe core clock frequency (HCLK) and can be scaled by factors \nof 1, 16, or 256.  \nTimer0 can be used to start ADC conversions as shown in the \nblock diagram in Figure 77. \n04955-03416-BIT\nLOAD\nTIMER0\nVALUE16-BIT\nDOWN\nCOUNTERPRESCALER\n/1, 16 OR 256HCLK TIMER0 IRQ\nADC CONVERSION\n \nFigure 77. Timer0 Block Diagram The Timer0 interface consists of four MMRs: T0LD, T0V AL, \nT0CON, and T0CLRI. \nTable 172. T0LD Register \nName  Address Default Value Access \nT0LD 0xFFFF0300 0x0000 R/W \nT0LD is a 16-bit load register. Table 173. T0VAL Register \nName  Address Default Value Access \nT0VAL 0xFFFF0304 0xFFFF R \nT0V AL is a 16-bit read-only register representing the current \nstate of the counter. \nTable 174. T0CON Register \nName  Address Default Value Access \nT0CON 0xFFFF0308 0x0000 R/W \nT0CON is the configuration MMR described in Table 175. \nTable 175. T0CON MMR Bit Descriptions \nBit Value Description \n15:8  Reserved. \n7  Timer0 enable bit. Set by user to enable Timer0.  \nCleared  by user to disable Timer0 by default. \n6  Timer0 mode. Set  by user to operate in \nperiodic mode. Cleared by user to operate  \nin free-running mode. Default mode. \n5:4  Reserved. \n3:2  Prescale. \n 00 Core Clock/1. Default value. \n 01 Core Clock/16. \n 10 Core Clock/256. \n 11 Undefined. Equivalent to 00. \n1:0  Reserved. \nTable 176. T0CLRI Register \nName  Address Default Value Access \nT0CLRI 0xFFFF030C 0xFF W \nT0CLRI is an 8-bit register. Writing any value to this register \nclears the interrupt. \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 87 of 102 Timer1 (General-Purpose Timer) \nTimer1 is a general-purpose, 32-bit timer (count down or count \nup) with a programmable prescaler. The source can be the \n32 kHz external crystal, the core clock frequency, or an external \nGPIO (P1.0 or P0.6). The maximum frequency of the clock input is 44 Mhz). This source can be scaled by a factor of 1, 16, \n256, or 32,768.  \nThe counter can be formatted as a standard 32-bit value or as \nhours: minutes: seconds: hundredths. \nTimer1 has a capture register (T1CAP) that can be triggered by \na selected IRQ source initial assertion. This feature can be used \nto determine the assertion of an event more accurately than the \nprecision allowed by the RTOS timer when the IRQ is serviced. \nTimer1 can be used to start ADC conversions as shown in the \nblock diagram in Figure 78. \n \n04955-03532kHz OSCILLATOR\nHCLK\nP0.6\nP1.0\nIRQ[31:0]PRESCALER\n/1, 16, 256\nOR 32,76832-BIT\nUP/DOWN\nCOUNTER32-BIT\nLOAD\nTIMER1\nVALUE\nCAPTURETIMER1 IRQ\nADC CONVERSION\n \nFigure 78. Timer1 Block Diagram The Timer1 interface consists of five MMRs: T1LD, T1V AL, \nT1CON, T1CLRI, and T1CAP . \nTable 177. T1LD Register \nName  Address Default Value Access \nT1LD 0xFFFF0320 0x00000000 R/W \nT1LD is a 32-bit load register. Table 178. T1VAL Register \nName  Address Default Value Access \nT1VAL 0xFFFF0324 0xFFFFFFFF R \nT1VAL is a 32-bit read-only register that represents the current \nstate of the counter. \nTable 179. T1CON Register \nName  Address Default Value Access \nT1CON 0xFFFF0328 0x0000 R/W \nT1CON is the configuration MMR described in Table 180.  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 88 of 102 Table 180. T1CON MMR Bit Descriptions \nBit Value  Description \n31:18  Reserved. \n17  Event select bit. Set by user to enable time \ncapture of an event. Cleared  by user to \ndisable time capture of an event. \n16:12  Event select range, 0 to 31. These events are as described in Table 160. All events are \noffset by two; that is, Event 2 in Table 160 \nbecomes Event 0 for the purposes of \nTimer1. \n11:9  Clock select. \n 000 Core clock (HCLK). \n 001 External 32.768 kHz crystal. \n 010 P1.0 rising edge triggered. \n 011 P0.6 rising edge triggered. \n8  Count up. Set by user for Timer1 to count \nup. Cleared by user for Timer1 to count \ndown by default. \n7  Timer1 enable bit. Set by user to enable Timer1. Cleared by user to disable Timer1 by \ndefault. \n6  Timer1 mode. Set by user to operate in periodic mode. Cleared  by user to operate in \nfree-running mode. Default mode. \n5:4  Format. \n 00 Binary. \n 01 Reserved. \n 10 Hr: min: sec: hundredths (23 hours to 0 hour). \n 11 Hr: min: sec: hundredths (255 hours to 0 hour). \n3:0  Prescale. \n 0000 Source Clock/1. \n 0100 Source Clock/16. \n 1000 Source Clock/256. \n 1111 Source Clock/32,768. \nTable 181. T1CLRI Register \nName  Address Default Value Access \nT1CLRI 0xFFFF032C 0xFF W \nT1CLRI is an 8-bit register. Writing any value to this register \nclears the Timer1 interrupt. Table 182. T1CAP Register \nName  Address Default Value Access \nT1CAP 0xFFFF0330 0x00000000 R/W \nT1CAP is a 32-bit register. It holds the value contained in \nT1V AL when a particular event occurs. This event must be \nselected in T1CON. \nTimer2 (Wake-Up Timer) \nTimer2 is a 32-bit wake-up timer (count down or count up) \nwith a programmable prescaler. The source can be the 32 kHz \nexternal crystal, the core clock frequency, or the internal 32 kHz oscillator. The clock source can be scaled by a factor of 1, 16, 256, or 32,768. The wake-up timer continues to run when the \ncore clock is disabled.  \nThe counter can be formatted as plain 32-bit value or as  \nhours: minutes: seconds: hundredths. \n04955-036INTERNAL\nOSCILLATOR\nEXTERNAL\nCRYSTAL\nHCLKPRESCALER\n/1, 16, 256\nOR 32,76832-BIT\nUP/DOWN\nCOUNTER32-BIT\nLOAD\nTIMER2\nVALUETIMER2 IR Q\n \nFigure 79. Timer2 Block Diagram \nThe Timer2 interface consists of four MMRs: T2LD, T2V AL, T2CON, and T2CLRI. \nTable 183. T2LD Register \nName  Address Default Value Access \nT2LD 0xFFFF0340 0x00000000 R/W \nT2LD is a 32-bit register load register. Table 184. T2VAL Register \nName  Address Default Value Access \nT2VAL 0xFFFF0344 0xFFFFFFFF R \nT2VAL is a 32-bit read-only register that represents the current \nstate of the counter. \nTable 185. T2CON Register \nName  Address Default Value Access \nT2CON 0xFFFF0348 0x0000 R/W \nT2CON is the configuration MMR described in Table 186. \nData Sheet ADuC7019/20/2 1/22/24/25/26/27/28/29 \n \nRev. H | Page 89 of 102 Table 186. T2CON MMR Bit Descriptions \nBit Value  Description  \n31:11   Reserved.  \n10:9  Clock source.  \n 00 External crystal.  \n 01 External crystal.  \n 10 Internal oscillator.  \n 11 Core clock (41 MHz/2CD). \n8  Count up. Set by user for Timer2 to count up. \nCleared by user for Timer2 to count down by \ndefault.  \n7  Timer2 enable bit. Set by user to enable Timer2. \nCleared  by user to disable Timer2 by default.  \n6  Timer2 mode.  Set by user to operate in \nperiodic mode. Cleared by user to operate in \nfree-running mode. Default mode.  \n5:4  Format.  \n 00 Binary.  \n 01 Reserved.  \n 10 Hr: min: sec: Hundredths (23 hours to 0 hour).  \n 11 Hr: min: sec: Hundredths (255 hours to 0 hour). \n3:0  Prescale.  \n 0000 Source Clock/1 by d efault.  \n 0100 Source Clock/16. \n 1000 Source Clock/256 e xpected for Format 2 and \nFormat 3. \n 1111 Source Clock/32,768. \nTable 187. T2CLRI Register  \nName  Address  Default Value  Access  \nT2CLRI  0xFFFF034C  0xFF  W \nT2CLRI is an 8 -bit register. Writing any value to this register \nclears the Timer2 interrupt.  \nTimer3 (Watchdog Time r) \nTimer3 has two modes of operation:  normal mode and \nwatchdog mode. The watchdog timer is used to recover from  \nan illega l software state. Once enabled, it requires periodic \nservicing to prevent it from forcing a processor reset.  \nNormal Mode  \nTimer3 in normal mode is identical to Timer0, except for the \nclock source and the count -up functionality.  The clock source  \nis 32 kHz f rom the PLL and can be scaled by a factor of 1, 16,  \nor 256 (see Figure 80). \n04955-03732.768kHzPRESCALER\n/1, 16 OR 25616-BIT\nUP/DOWN\nCOUNTER16-BIT\nLOAD\nTIMER3\nVALUEWATCHDOG\nRESET\nTIMER3 IRQ\n \nFigure 80. Timer3 Block Diagram  \nWatchdog Mode  \nWatchdog mode is entered by setting Bit 5 in the T3CON MMR.  \nTimer3 decreases from  the value present in the T3LD reg ister to 0. \nT3LD is used as the timeout. The maximum timeout can be  \n512 sec, using the prescaler/ 256, and full scale in T3LD. Timer3  \nis clocked by the internal 32 kHz crystal when operating in \nwatchdog mode. Note that to enter watchdog mode success -\nfully, Bit 5 in the T3CON MMR must be set after writing to the \nT3LD MMR.  \nIf the timer reaches 0, a reset or an interrupt occurs, depending \non Bit 1 in the T3CON register. To avoid reset or interrupt, any \nvalue must be written to T3CLRI before the expiration period. \nThis reloads the counter with T3LD and begins a new timeout \nperiod.  \nWhen watchdog mode is entered , T3LD and T3CON are write -\nprotected. These two registers cannot be modified until a reset \nclears the watchdog enable bit, which causes Timer3 to exit \nwatchdog mode.  \nThe Timer3 interface consists of four MMRs: T3LD, T3V AL, \nT3CON, and T3CLRI.  \nTable 188. T3LD Register  \nName  Address  Default Value  Access  \nT3LD  0xFFFF0360 0x0000 R/W  \nT3LD is a 16 -bit register load register.  \nTable 189. T3VAL Register  \nName  Address  Default Value  Access  \nT3VAL  0xFFFF0364  0xFFFF  R \nT3V AL is a 16 -bit read -only register that represents the current \nstate of the counter.  \nTable 190. T3CON Register  \nName  Address  Default Value  Access  \nT3CON  0xFFFF0368 0x0000 R/W  \nT3CON is the configuration MMR described in Table 191. \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 90 of 102 Table 191. T3CON MMR Bit Descriptions \nBit Value  Description  \n15:9  Reserved.  \n8  Count u p. Set  by user for Timer3 to count up. \nCleared by user for Timer3 to count down by \ndefault.  \n7  Timer3 e nable bit. Set by user to enable Timer3. \nCleared  by user to disable Timer3 by default.  \n6  Timer3 mode. Set by user to operate in \nperiodic mode. Cleared by user to operate  \nin free-running mode. Default mode.  \n5  Watchdog mode enable bit. Set by user to \nenable watchdog mode. Cleared by user to \ndisable watchdog mode by default.  \n4  Secure clear bit. Set by user to use the secure \nclear option. Cleared by user to disable the \nsecure clear option by default.  \n3:2  Prescale.  \n 00 Source Clock/1 by d efault.  \n 01 Source Clock/16. \n 10 Source Clock/256. \n 11 Undefined. Equivalent to 00.  \n1  Watchdog IRQ o ption bit. Set by user to \nproduce an IRQ instead of a reset when  the watchdog reaches 0. Cleared by user to \ndisable the IRQ option.  \n0  Reserved.  \nTable 192. T3CLRI Register  \nName  Address  Default Value  Access  \nT3CLRI  0xFFFF036C 0x00 W \nT3CLRI is an 8 -bit register. Writing any value to this register on \nsuccessive occassions clears the Timer3 interrupt in normal \nmode or resets a new timeout period in watchdog mode.  \nNote that the user must perform successive writes to this register to ensure resetting the timeout period.  \nSecure Clear Bit (Watchdog Mode Only)  \nThe secure clear bit is provided for a higher level of p rotection. \nWhen set, a specific sequential value must be written to T3CLRI to avoid a watchdog reset. The value is a sequence generated  \nby the 8 -bit linear feedback shift register (LFSR) polynomial = \nX8 + X6 + X5 + X + 1 , as shown in Figure 81.  \n04955-038 CLOCKQD\n4QD\n5QD\n3QD\n7QD\n6QD\n2QD\n1QD\n0\n \nFigure 81. 8-Bit LFSR  \nThe initial value or seed is written to T3CLRI before entering watchdog mode. After entering watchdog mode, a write to T3C LRI must match this expected value. If it matches, the LFSR \nis advanced to the next state when the counter reload occur s. If \nit fails to match the expected state, a reset is immediately generated, even if the count has not yet expired.  The value 0x00 should not be used as an initial seed due to  \nthe properties of the polynomial. The value 0x00 is always \nguaranteed to force an immediate reset. The value of the LFSR \ncannot be read; it must be tracked/generated in software.  \nThe following is  an example of a sequence : \n1. Enter initial seed, 0xAA, in T3CLRI before starting Timer3 \nin watchdog mode.  \n2. Enter 0xAA in T3CLRI; Timer3 is reloaded.  \n3. Enter 0x37 in T3CLRI; Timer3 is reloaded.  \n4. Enter 0x6E in T3CLRI; Timer3 is reloaded.  \n5. Enter 0x66. 0xDC was expected; the watchdog resets the chip.  \nEXTERNAL MEMORY INTE RFACING  \nThe ADuC7026 and ADuC7027 are the only models in their \nseries that feature an external memory interface. The external memory interface requires a larger number of pins. This is why \nit is o nly available on larger pin count packages. The XMCFG \nMMR must be set to 1 to use the external port.  \nAlthough 32- bit addresses are supported internally, only the \nlower 16 bits of the address are on external pins.  \nThe memory interface can address up to four  128 kB blocks of \nasynchronous memory (SRAM or/and EEPROM).  \nThe pins required for interfacing to an external memory are \nshown in Table 193.  \nTable 193. External Memory Interfacing Pins  \nPin Function  \nAD[1 6:1] Address/d ata bus \nA16  Extended addressing for 8 -bit memory only \nMS[3:0]  Memory select  \nWS Write strobe  \nRS Read strobe  \nAE Address latch enable  \nBHE ,  BLE Byte write capability  \nThere are four external memory regions available , as described \nin Table 194. Associated with each region are the MS[3:0] pins. \nThese signals allow access to the particular region of external \nmemory. The size of each memory region can be 128 kB maxi -\nmum, 64 k × 16 or 128 k × 8. To access 128 k with an 8- bit \nmemory, an extra address line (A16) is provided ( see the example \nin Figure 82). The four regions are configured independe ntly.  \nTable 194. Memory Regions  \nAddress Start  Address End  Contents  \n0x10000000  0x1000FFFF  External Memory 0  \n0x20000000 0x2000FFFF External Memory 1  \n0x30000000 0x3000FFFF External Memory 2  \n0x40000000  0x4000FFFF  External Memory 3  \nEach external memory region can be controlled through three \nMMRs: XMCFG, XMxCON, and XMxPAR.  \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 91 of 102 04955-039LATCHADuC7026/\nADuC7027\nAD15:AD0A16EEPROM\n64k × 16-BIT\nA0:A15D0:D15\nCS\nRAM\n128k × 8-BIT\nA0:A15A16D0:D7\nCS\nWE\nOEWE\nOEAE\nMS0\nMS1\nWS\nRS\n \nFigure 82. Interfacing to External EEPROM/RAM \nTable 195. XMCFG Register \nName  Address Default Value Access \nXMCFG 0xFFFFF000 0x00 R/W \nXMCFG is set to 1 to enable external memory access. This must \nbe set to 1 before any port pins function as external memory \naccess pins. The port pins must also be individually enabled via \nthe GPxCON MMR. \nTable 196. XMxCON Registers \nName  Address Default Value Access \nXM0CON 0xFFFFF010 0x00 R/W \nXM1CON 0xFFFFF014 0x00 R/W \nXM2CON 0xFFFFF018 0x00 R/W \nXM3CON 0xFFFFF01C 0x00 R/W \nXMxCON are the control registers for each memory region. \nThey allow the enabling/disabling of a memory region and \ncontrol the data bus width of the memory region. \nTable 197. XMxCON MMR Bit Descriptions \nBit Description \n1 Selects data bus width. Set by user to select a 16-bit data \nbus. Cleared by user to select an 8-bit data bus. \n0 Enables memory region . Set by user to enable the memory \nregion. Cleared by user to disable the memory region. Table 198. XMxPAR Registers \nName  Address Default Value Access \nXM0PAR 0xFFFFF020 0x70FF R/W \nXM1PAR 0xFFFFF024 0x70FF R/W \nXM2PAR 0xFFFFF028 0x70FF R/W \nXM3PAR 0xFFFFF02C 0x70FF R/W \nXMxPAR are registers that define the protocol used for \naccessing the external memory for each memory region. \nTable 199. XMxPAR MMR Bit Descriptions \nBit Description \n15 Enable byte write strobe. This bit is used only for two,  \n8-bit memory devices sharing the same memory region. Set by the user to gate the A0 output with the WS\n \noutput. This allows byte wr ite capability without using \nBHE  and BLE  signals. Cleared by user to use BHE  and BLE  \nsignals. \n14:12 Number of wait states on the address latch enable STROBE. \n11 Reserved. \n10 Extra address hold time. Set by user to disable extra hold \ntime. Cleared by user to enable one clock cycle of hold \non the address in read and write. \n9 Extra bus transition time on read.  Set by user to disable \nextra bus transition time. Cleared by user to enable one \nextra clock before and after the read strobe (RS ). \n8 Extra bus transition time on write. Set by user to disable extra bus transition time. Cleared by user to enable one \nextra clock before and after the write strobe (WS\n). \n7:4 Number of write wait states. Select the number of wait states added to the length of the WS\n pulse. 0x0 is 1 clock; \n0xF is 16 clock cycles (default value). \n3:0 Number of read wait states. Select the number of wait \nstates added to the length of the RS  pulse. 0x0 is 1 clock; \n0xF is 16 clock cycles (default value).  \nFigure 83, Figure 84, Figure 85, and Figure 86 show the timing \nfor a read cycle, a read cycle with address hold and bus turn \ncycles, a write cycle with address and write hold cycles, and a \nwrite cycle with wait sates, respectively. \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 92 of 102  \n04955-040UCLK\nAD[16:0] ADDRESS DATA\nMSx\nAE\nRS\n \nFigure 83. External Memory Read Cycle  \n \n \n04955-041DATA ADDRESS\nEXTRA ADDRESS\nHOLD TIME\nXMxPAR (BIT 10)\nBUS TURN OUT CYCLE\n(BIT 9)BUS TURN OUT CYCLE\n(BIT 9)UCLK\nAD[16:0]\nMSx\nAE\nRS\n \nFigure 84. External Memory Read Cycle with Address Hold and Bus Turn Cycles  \n \nData Sheet ADuC7019/20/2 1/22/24/25/26/27/28/29 \n \nRev. H | Page 93 of 102  \n04955-042DATA ADDRESS\nEXTRA ADDRESS\nHOLD TIME\n(BIT 10)\nWRITE HOLD ADDRESS\nAND DATA CYCLES\n(BIT 8)WRITE HOLD ADDRESS\nAND DATA CYCLES\n(BIT 8)UCLK\nAD[16:0]\nMSx\nAE\nWS\n \nFigure 85. External Memory Write Cycle with Address and Write Hold Cycles  \n \n04955-043DATA ADDRESS\n1 WRITE STROBE WAIT STATE\n(BIT 7 TO BIT 4)1 ADDRESS WAIT STATE\n(BIT 14 TO BIT 12)UCLK\nAD[16:0]\nMSx\nAE\nWS\n \nFigure 86. External Memory Write Cycle with Wait States  \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 94 of 102 HARDWARE DESIGN CONSIDERATIONS\nPOWER SUPPLIES \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 operational power \nsupply voltage range is 2.7 V to 3.6 V . Separate analog and \ndigital power supply pins (AV DD and IOV DD, respectively) allow \nAV DD to be kept relatively free of noisy digital signals often \npresent on the system IOV DD line. In this mode, the part can \nalso operate with split supplies; that is, it can use different voltage levels for each supply. For example, the system can  be designed to operate with an IOV\nDD voltage level of 3.3 V \nwhereas the AV DD level can be at 3 V or vice versa. A typical \nsplit supply configuration is shown in Figure 87. \n04955-044ADuC7026\n0.1µFANALO G\nSUPPLY\n10µF\n73\n74AVDD\n75 DACVDD\n8 GND REF\n70 DACGND\n71 AGND\n67 REFGND26\nIOVDD54\n25\nIOGND\n530.1µF+–DIGITAL\nSUPPLY\n10µF+–\n \nFigure 87. External Dual Supply Connections \nAs an alternative to providing two separate power supplies, the \nuser can reduce noise on AV DD by placing a small series resistor \nand/or ferrite bead between AV DD and IOV DD and then decoupling \nAV DD separately to ground. An exam ple of this configuration is \nshown in Figure 88. With this configuration, other analog circuitry \n(such as op amps and voltage re ference) can be powered from \nthe AV DD supply line as well. \n04955-045ADuC7026\n0.1µFBEAD1.6Ω\n73\n74AVDD\n75 DACVDD\n8 GNDREF\n70 DACGND\n71 AGND\n67 REFGND26\nIOVDD54\n25\nIOGND\n530.1µFDIGITAL SUPPLY\n10µF 10µF +–\n \nFigure 88. External Single Supply Connections \nNote that in both Figure 87 and Figure 88, a large value (10 μF) reservoir capacitor sits on IOV\nDD, and a separate 10 μF capacitor \nsits on AV DD. In addition, local small-value (0.1 μF) capacitors are \nlocated at each AV DD and IOV DD pin of the chip. As per standard \ndesign practice, be sure to include all of these capacitors and ensure that the smaller capacitors are close to each AV\nDD pin with trace \nlengths as short as possible. Connect the ground terminal of \neach of these capacitors directly to the underlying ground plane.  Finally, note that the analog and digital ground pins on the \nADuC7019/ 20/21/22/24/25/26/27/28/29 must be referenced to  \nthe same system ground reference point at all times.  \nIOV DD Supply Sensitivity \nThe IOV DD supply is sensitive to high frequency noise because it \nis the supply source for the internal oscillator and PLL circuits. When the internal PLL loses lock, the clock source is removed by a gating circuit from the CPU, and the ARM7TDMI core stops executing code until the PLL regains lock. This feature ensures that no flash interface timings or ARM7TDMI timings are violated. \nTypically, frequency noise greater than 50 kHz and 50 mV p-p \non top of the supply causes the core to stop working. \nIf decoupling values recommended in the Power Supplies \nsection do not sufficiently dampen all noise sources below 50 mV on IOV\nDD, a filter such as the one shown in Figure 89  \nis recommended. \nADuC7026\n26\nIOVDD54\n25\nIOGND\n530.1µFDIGITAL\nSUPPLY10µF+–1µH\n04955-087 \nFigure 89. Recommended IOV DD Supply Filter \nLinear Voltage Regulator \nEach ADuC7019/ 20/21/22/24/25/26/27/28/29 requires a single \n3.3 V supply, but the core logic requires a 2.6 V supply. An on-chip linear regulator generates the 2.6 V from IOV\nDD for the \ncore logic. The LV DD pin is the 2.6 V supply for the core logic. \nAn external compensation capacitor of 0.47 \uf06dF must be \nconnected between LV DD and DGND (as close as possible to \nthese pins) to act as a tank of charge as shown in Figure 90. \n04955-046ADuC7026\n0.47\uf06dF27LVDD\n28DGND\n \nFigure 90. Voltage Regulator Connections \nThe LV DD pin should not be used for any other chip. It is also \nrecommended to use excellent power supply decoupling on IOV\nDD to help improve line regulation performance of the on-\nchip voltage regulator. \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 95 of 102 GROUNDING AND BOARD LAYOUT \nRECOMMENDATIONS \nAs with all high resolution data converters, special attention \nmust be paid to grounding and PC board layout of the \nADuC7019/ 20/21/22/24/25/26/27/28/29-based designs to  \nachieve optimum performance from the ADCs and DAC. \nAlthough the parts have separate pins for analog and digital \nground (AGND and IOGND), the user must not tie these to \ntwo separate ground planes unless the two ground planes are connected very close to the part. This is illustrated in the simplified example shown in Figure 91a. In systems where digital and analog ground planes are connected together \nsomewhere else (at the system power supply, for example), the \nplanes cannot be reconnected near the part because a ground loop results. In these cases, tie all the ADuC7019/20/21/ 22/24/25/26/27/28/29 AGND and IOGND pins to the analog ground plane, as illustrated in Figure 91b. In systems with only \none ground plane, ensure that the digital and analog components \nare physically separated onto separate halves of the board so that digital return currents do not flow near analog circuitry \n(and vice versa).  \nThe ADuC7019 /20/21/22/24/25/26/27/28/29 can then be \nplaced between the digital and analog sections, as illustrated in \nFigure 91c. \n04955-047a.PLACE ANALOG\nCOMPONENTS HEREPLACE DIGITAL\nCOMPONENTS HERE\nAGND DGND\nb.PLACE ANALOG\nCOMPONENTS\nHEREPLACE DIGITAL\nCOMPONENTS HERE\nAGND DGND\nc.PLACE ANALOG\nCOMPONENTS HEREPLACE DIGITAL\nCOMPONENTS HERE\nDGND\n \nFigure 91. System Grounding Schemes \nIn all of these scenarios, and in more complicated real-life \napplications, the user should pay particular attention to the flow of current from the supplies and back to ground. Make sure the \nreturn paths for all currents are as close as possible to the paths \nthe currents took to reach their destinations.  For example, do not power components on the analog side (as \nseen in Figure 91b) with IOV\nDD because that forces return \ncurrents from IOV DD to flow through AGND. Avoid digital \ncurrents flowing under analog circuitry, which can occur if a \nnoisy digital chip is placed on the left half of the board (shown \nin Figure 91c). If possible, avoid large discontinuities in the ground plane(s) such as those formed by a long trace on the same layer because they force return signals to travel a longer path.  In addition, make all connections to the ground plane directly, with little or no trace separating the pin from its via to ground. \nWhen connecting fast logic signals (rise/fall time < 5 ns) to any of \nthe ADuC7019/ 20/21/22/24/25/26/27/28/29 digital inputs, add \na series resistor to each relevant line to keep rise and fall times \nlonger than 5 ns at the part’s input pins. A value of 100 Ω or 200 Ω is usually sufficient to prevent high speed signals from coupling capacitively into the part and affecting the accuracy  \nof ADC conversions. \nCLOCK OSCILLATOR \nThe clock source for the ADuC7019/ 20/21/22/24/25/26/27/28/29 \ncan be generated by the internal PLL or by an external clock \ninput. To use the internal PLL, connect a 32.768 kHz parallel \nresonant crystal between XCLKI and XCLKO, and connect a capacitor from each pin to ground as shown in Figure 92. The crystal allows the PLL to lock correctly to give a frequency of 41.78 MHz. If no external crys tal is present, the internal \noscillator is used to give a typical frequency of 41.78 MHz ± 3%. \n04955-048ADuC7026\nTO\nINTERNAL\nPLL12pF45XCLKI\n32.768kHz\n12pF44\nXCLKO\n \nFigure 92. External Parallel Resonant Crystal Connections \nTo use an external source clock input instead of the PLL (see \nFigure 93), Bit 1 and Bit 0 of PLLCON must be modified.The \nexternal clock uses P0.7 and XCLK. \n04955-049ADuC7026\nTO\nFREQUENCYDIVIDERXCLKO\nXCLKI\nXCLKEXTERNAL\nCLOCK\nSOURCE\n \nFigure 93. Connecting an External Clock Source \nUsing an external clock source, the ADuC7019/20/21/22/24/ \n25/26/27/28/29-specified operational clock speed range is  \n50 kHz to 44 MHz ± 1%, which en sures correct operation of  \nthe analog peripherals and Flash/EE. \nADuC7019/20/21/22/24/2 5/26/27/28/29 Data Sheet\n \nRev. H | Page 96 of 102 POWER-ON RESET OPERATION \nAn internal power-on reset (POR) is implemented on the \nADuC7019/ 20/21/22/24/25/26/27/28/29. For LV DD below 2.35 V \ntypical, the internal POR holds the part in reset. As LV DD rises \nabove 2.35 V , an internal timer times out for, typically, 128 ms before the part is released from reset. The user must ensure that \nthe power supply IOV\nDD reaches a stable 2.7 V minimum level \nby this time. Likewise, on power-down, the internal POR holds \nthe part in reset until LV DD drops below 2.35 V . \nFigure 94 illustrates the operation of the internal POR in detail. \nTYPICAL SYSTEM CONFIGURATION \nA typical ADuC7020 conf iguration is shown in Figure 95. It \nsummarizes some of the hardware  considerations discussed in \nthe previous sections. The bottom of the CSP package has an \nexposed pad that must be soldered to a metal plate on the board for mechanical reasons. The metal plate of the board can be connected to ground. IOVDD3.3V\n2.6V2.35V TYP 2.35V TYP\n128ms TYPLVDD\nPOR\nMRST0.12ms TYP\n04955-050 \nFigure 94. Internal Power-On Reset Operation \n \n \nNOT CONNECTED IN THIS EXAMPLE30\n29\n28\n27\n26\n25 XCLKI\n24 XCLKO\n23\n22\n211\n2\n3GNDREF\n4DAC0\n5\n6\n7\n8TMS\n9TDI\n10P0.040 39 38\nADC037\nAVDD36\nAGND35\nVREF34 33\nP1.032\nP1.131\n11 12 13\nTDOTCK\n14\nIOGND\n15\nIOVDD\n16\nLVDD\nDGND\n17 18\nTRST\n19\nRST\n20DVDD\n1kΩ10Ω\nADuC70200.01µF+\n–\nAVDD0.47µF\nTDOTCKTMSTDITRSTJTAG CONNECTO R1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20DVDDDVDD100kΩ\n100kΩ\n100kΩ\nDVDDDVDD32.768kHz\n0.47µF1kΩ\n0.1µF 10µF 10µF1.5Ω\n270ΩDVDDAVDD\nADP3333-3.3\nIN OUT\nSD GND1C1+\n2V+\n3C1–\n4C2+\n5C2–\n6V–\n7T2OUT\n8R2INADM3202RS232 INTERFACE*\n* EXTERNAL UART TRANSCEIVER INTEGRATED IN SYSTEM OR AS\nPART OF AN EXTERNAL DONGLE AS DESCRIBED IN uC006.STANDARD D-TYPE\nSERIAL COMMS\nCONNECTOR TO\nPC HOST16 VCC\n15 GND\n14 T1OUT\n13 R1IN\n12 R1OUT\n11 T1IN\n10 T2IN\n9 R2OUT1\n2\n3\n4\n5\n6\n7\n8\n9\n04955-051 \nFigure 95. Typical System Configuration \nData Sheet ADuC7019/20/2 1/22/24/25/26/27/28/29 \n \nRev. H | Page 97 of 102 DEVELOPMENT TOOLS\nPC-BASED TOOLS  \nFour types of development systems are available for the \nADuC7019/ 20/21/22/24/25/26/27/28/29 family.  \n• The ADuC7026  QuickStart Plus is intended for new users \nwho want t o have a comprehensive hardware development \nenvironment. Because the ADuC7026 contains the superset \nof functions available on the ADuC7019/ 20/21/22/24/25/ \n26/27/28/29, it is suitable for users who wish to develop on \nany of the parts in t his family. All parts are fully code \ncompatible.  \n• The ADuC7019 , ADuC7024, a nd ADuC7026 QuickStart \nsystems are intended for users who already have an emulator .  \nThese systems consist of the following PC- based (Windows® \ncompatible) hardware  and software development tools.  \nHardware  \n• ADuC7019/ 20/21/22/24/25/26/27/28/29 evaluation board  \n• Serial port programming cable  \n• RDI-compliant JTAG emulator (included in the \nADuC7026 QuickStart Plus only)  Software  \n• Integrated development environment, incorporating assembler, compiler, and nonintrusive JTAG- based \ndebugger  \n• Serial downloader software  \n• Example  code  \nMiscellaneous  \nCD-ROM documentation  \nIN-CIRCUIT SERIAL DOWNL OADER  \nThe serial downloader is a Windows application that allows the \nuser to serially download an assembled program to the on -chip \nprogram Flash/EE memory via the serial port on a standard PC.  \nThe UART -based serial downloader is included in all the \ndevelopment systems and is usable with the ADuC7019/ 20/21/ \n22/24/25/26/27/28/29 parts that do not contain the I suffix in \nthe Ordering Guide . \nAn I2C based serial downloader  and a  USB -to-I2C adaptor \nboard, USB -EA-CONVZ, are  also available at www.analog.com . \nThe I2C-based serial downloader is only usable with the part \nmodels containing the I suffix (see  Ordering Guide ). \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 98 of 102 OUTLINE DIMENSIONS\n \n10-23-2017-B0.50\nBSC\nBOT TOM VIEW TOP VIEW\nSIDE VIEWPIN 1\nINDIC ATOR\n0.05 MAX\n0.02 NOM\n0.20 REFCOPLANARITY\n0.080.30\n0.23\n0.186.10\n6.00 SQ\n5.90\n0.80\n0.75\n0.700.45\n0.40\n0.350.20 MIN4.25\n4.10 SQ\n3.95\nCOMPLIANT TO JEDEC STANDARDS MO-220- WJJD-5 .40\n1\n11 20213031\n10PKG-004354PIN 1\nINDIC ATOR AREA OPTIONS\n(SEE DETAIL A)DETAIL A\n(JEDEC 95)\nEXPOSED\nPAD\nSEATING\nPLANEFOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TO\nTHE PIN CONFIGURATION AND\nFUNCTION DESCRIPTIONS\nSECTION OF THIS DATA SHEET.\n \nFigure 96. 40- Lead Lead Frame Chip Scale Package [LFCSP]  \n6 mm × 6 mm Body  and 0.75 mm Package Height  \n(CP-40-9) \nDimensions shown in millimeters  \n \n*COMPLIANT TO JEDEC STANDARDS MO-220-VMMD-4\n EXCEPT FOR EXPOSED PAD DIMENSION0.25 MIN164\n161749\n48\n32330.50\n0.400.300.50\nBSC\n0.20 REF12° MAX 0.80 MAX0.65 TY P1.000.85\n0.807.50 REF\n0.05 MAX\n0.02 NOM0.60 MAX\n0.60\nMAX\nSEATING\nPLANEPIN 1\nINDIC ATOR\n*4.85\n4.70 SQ\n4.55PIN 1\nINDIC ATOR\n0.30\n0.230.18FOR PROPER CONNECTION OF\nTHE EXPOSED PAD, REFER TOTHE PIN CONFIGURATION AND\nFUNCTION DESCRIPTIONSSECTION OF THIS DATA SHEET.TOP VIEWEXPOSED\nPAD\nBOTTOM VIEW9.10\n9.00 SQ\n8.90\n8.85\n8.75 SQ8.65\n06-13-2012- A\n \nFigure 97. 64- Lead Lead Frame Chip Scale Package [LFCSP]  \n9 mm × 9 mm Body  and 0.85 mm Package Height  \n(CP-64-1) \nDimensions shown in millimeters  \n \nData Sheet ADuC7019/20/21/22/24/2 5/26/27/28/29\n \nRev. H | Page 99 of 102 COMPLIANT TO JEDEC STANDARDS MS-026-BCD\n051706-ATOP VIEW\n(PINS DOWN)1\n16\n1733\n324849 64\n0.27\n0.22\n0.170.50\nBSC\nLEAD PITCH12.20\n12.00 SQ\n11.80\nPIN 11.60\nMAX0.75\n0.60\n0.45\n10.20\n10.00 SQ\n9.80\nVIEW A 0.20\n 0.091.451.40\n1.35\n0.08\nCOPLANARITY\nVIEW A\nROTATED 90° CCWSEATING\nPLANE0.15\n0.057°\n3.5°\n0°\n \nFigure 98. 64-Lead Low Profile Quad Flat Package [LQFP] \n(ST-64-2) \nDimensions shown in millimeters \n \nCOMPLIANT TO JEDEC STANDARDS MS-026-BDD\n051706-A0.15\n0.05 1.45 1.40 1.35 0.20 0.09\n0.08\nCOPLANARITY\nVIEW A\nROTATED 90° CCWSEATING\nPLANE7°\n3.5°\n0°TOP VIEW\n(PINS DOWN)1\n2141\n406061 80\n20\n0.50\nBSC\nLEAD PITCH0.27\n0.22\n0.171.60\nMAX0.75\n0.600.45\nVIEW APIN  114.2014.00 SQ13.80\n12.2012.00 SQ11.80\n \nFigure 99. 80-Lead Low Profile Quad Flat Package [LQFP]  \n(ST-80-1) \nDimensions shown in millimeters \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 100 of 102 *COMPLIANT TO JEDEC STANDARDS MO-225\n  WITH THE EXCEPTION TO PACKAGE HEIGHT.\n030907-BBALL DIAMETER6.10\n6.00 SQ\n5.90\nA\n4.55 SQ\n0.65A1 CORNER\nINDEX AREA\nTOP VIEW\nBOTTOM VIEW\nSEATING\nPLANEDETAIL A\n0.45\n0.40\n0.35COPLANARITY\n0.100.15 MINBALL A1PAD CORNER\nDETAIL A\n*1.40 MAX0.65 MINB\nC\nD\nE\nF\nG\nH12345678\n1.50\nSQ\n \nFigure 100. 64 -Ball Chip Scale Package Ball Grid Array [CSP_BGA]  \n(BC-64-4) \nDimensions shown in millimeters  \n \nBALL DIAMETER7 4 5 6 3 2 1\n3.90\nBSC SQA1 CORNER\nINDEX ARE A\nA\nB\nC\nD\nE\nF\nG\nBOTTOM\nVIEW\nSEATING\nPLANEDETAIL A\n0.45\n0.400.35COPLANARIT Y\n0.05 MAXTOP VIEW\n0.65\nBSC0.55\nBSC DETAIL A\n1.20 MAX1.00 MAX0.85 MIN\n0.350.20BALLA1\nINDIC ATOR5.055.00 SQ4.95\n012006-0 \nFigure 101. 49-Ball Chip Scale Package Ball Grid Array  [CSP_BGA]  \n(BC-49-1) \nDimensions shown in millimeters  \nData Sheet ADuC7019/20/21/22/24/25/26/27/28/29 \n \nRev. H | Page 101 of 102 ORDERING GUIDE  \nModel1, 2 ADC \nChannels3 DAC \nChannels  FLASH/  \nRAM  GPIO Down - \nloader  Temperature  \nRange  Package Description  Package Option  \nOrdering  \nQuantity  \nADuC7019BCPZ62I  5  3 62 kB/8 kB  14 I2C −40°C  to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7020BCPZ62 5 4 62 kB/8 kB  14 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7020BCPZ62- RL7 5 4 62 kB/8 kB  14 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 750 \nADuC7020BCPZ62I  5 4 62 kB/8 kB  14 I2C −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7020BCPZ62I -RL 5 4 62 kB/8 kB  14 I2C −40°C to +125°C  40-Lead LFCSP  CP-40-9 2,500  \nADuC7020BCPZ62IRL7 5 4 62 kB/8 kB  14 I2C −40°C to +125°C  40-Lead LFCSP  CP-40-9 750 \nADuC7021BCPZ62 8 2 62 kB/8 kB  13 UART  −40°C to +125°C  40-Lead  LFCSP  CP-40-9  \nADuC7021BCPZ62- RL 8 2 62 kB/8 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 2,500  \nADuC7021BCPZ62- RL7 8 2 62 kB/8 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 750 \nADuC7021BCPZ62I  8 2 62 kB/8 kB  13 I2C −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7021BCPZ62I -RL 8 2 62 kB/8 kB  13 I2C −40°C to +125°C  40-Lead LFCSP  CP-40-9 2,500  \nADuC7021BCPZ32 8 2 32 kB/4 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7021BCPZ32- RL7 8 2 32 kB/4 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 750 \nADuC7022BCPZ62 10  62 kB/8 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7022BCPZ62- RL7 10  62 kB/8 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 750 \nADuC7022BCPZ32 10  32 kB/4 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9  \nADuC7022BCPZ32- RL 10  32 kB/4 kB  13 UART  −40°C to +125°C  40-Lead LFCSP  CP-40-9 2,500  \nADuC7024BCPZ62 10 2 62 kB/8 kB  30 UART  −40°C to +125°C  40-Lead LFCSP  CP-64-1  \nADuC7024BCPZ62- RL7 10 2 62 kB/8 kB  30 UART  −40°C to +125°C  40-Lead LFCSP  CP-64-1 750 \nADuC7024BCPZ62I  10 2 62 kB/8 kB  30 I2C −40°C to +125°C  40-Lead LFCSP  CP-64-1  \nADuC7024BSTZ62  10 2 62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LQFP  ST-64-2  \nADuC7024BSTZ62 -RL 10 2 62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LQFP  ST-64-2 1,000  \nADuC7025BCPZ62 12  62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LFCSP  CP-64-1  \nADuC7025BCPZ62- RL 12  62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LFCSP  CP-64-1 2,500  \nADuC7025BSTZ62  12  62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LQFP  ST-64-2  \nADuC7025BSTZ62 -RL 12  62 kB/8 kB  30 UART  −40°C to +125°C  64-Lead LQFP  ST-64-2 1,000  \nADuC7026BSTZ62  12 4 62 kB/8 kB  40 UART  −40°C to +125°C  80-Lead LQFP  ST-80-1  \nADuC7026BSTZ62 -RL 12 4 62 kB/8 kB  40 UART  −40°C to +125°C  80-Lead LQFP  ST-80-1 1,000  \nADuC7026BSTZ62I  12 4 62 kB/8 kB  40 I2C −40°C to +125°C  80-Lead LQFP  ST-80-1  \nADuC7027BSTZ62  16  62 kB/8 kB  40 UART  −40°C to +125°C  80-Lead LQFP  ST-80-1  \nADuC7027BSTZ62I  16  62 kB/8 kB  40 I2C −40°C to +125°C  80-Lead LQFP  ST-80-1  \nADuC7028BBCZ62 8 4 62 kB/8 kB  30 UART  −40°C to +125°C  64-Ball CSP_BGA  BC-64-4  \nADuC7028BBCZ62- RL 8 4 62 kB/8 kB  30 UART  −40°C to +125°C  64-Ball CSP_BGA  BC-64-4 2,500  \nADuC7029BBCZ62 7 4 62 kB/8 kB  22 UART  −40°C to +125°C  49-Ball CSP_BGA  BC-49-1  \nADuC7029BBCZ62- RL 7 4 62 kB/8 kB  22 UART  −40°C to +125°C  49-Ball CSP_BGA  BC-49-1 4,000  \nADuC7029BBCZ62I  7 4 62 kB/8 kB  22 I2C −40°C to +125°C  49-Ball CSP_BGA  BC-49-1  \nADuC7029BBCZ62I -RL 7 4 62 kB/8 kB  22 I2C −40°C to +125°C  49-Ball CSP_BGA  BC-49-1 4,000  \nEVAL -ADuC7020MKZ        ADuC7020 MiniKit    \nEVAL -ADuC7020QSZ        ADuC7020 QuickStart  \nDevelopment System    \nEVAL -ADuC7020QSPZ        ADuC7020 QuickStart  \nDevelopment System    \nEVAL -ADuC7024QSZ        ADuC7024 QuickStart  \nDevelopment System    \nEVAL -ADuC7026QSZ        ADuC7026 QuickStar  \nDevelopment System    \nEVAL -ADuC7026QSPZ        ADuC7026 QuickStart  Plus  \nDevelopment System    \nEVAL -ADuC7028QSZ        ADuC7028 QuickStart  \nDevelopment System    \nEVAL -ADUC7029QSZ        ADuC7029 QuickStart  \nDevelopment System    \n \n1 Z = RoHS Compliant Part.  \n2 Models ADuC7026 and ADuC7027 include an external memory interface.  \n3 One of the  ADC channel s is internally buffered  for ADuC7019 models.  \n \n \nADuC7019/20/21/22/24/25/26/27/28/29 Data Sheet \n \nRev. H | Page 102 of 102 NOTES  \n \n \n  \n \n \n \n \n \n \n \n   \n \n  \n    \n \n \n \n    \n \n     \n \n \nI2C refers to a communications protocol originally developed by Phillips Semiconductors (now NXP Semiconductors).  \n \n©2005 –2018  Analog Devices, Inc. All rights reserved. Trademarks and   \n registered trademarks are the property of their respective owners.  \n  D04955- 0-4/18(H)  \n \n'}]
!==============================================================================!
### Component Summary: ADUC7021BCPZ62I-RL

#### Key Characteristics and Specifications:
- **Voltage Ratings**: Operates from 2.7 V to 3.6 V.
- **Current Ratings**: 
  - Active mode: 11 mA at 5 MHz, 40 mA at 41.78 MHz.
- **Power Consumption**: Typically 120 mW at 41.78 MHz.
- **Operating Temperature Range**: -40°C to +125°C.
- **Package Type**: 40-Lead LFCSP (Lead Frame Chip Scale Package).
- **Special Features**:
  - Integrated 12-bit ADC with up to 16 channels.
  - Integrated 12-bit DAC with up to 2 channels.
  - On-chip voltage reference and temperature sensor.
  - ARM7TDMI microcontroller core.
  - JTAG port for code download and debugging.
- **Moisture Sensitive Level**: Level 1 per JEDEC J-STD-020E.

#### Description:
The **ADUC7021BCPZ62I-RL** is a precision analog microcontroller that integrates a 12-bit analog-to-digital converter (ADC), a 12-bit digital-to-analog converter (DAC), and an ARM7TDMI microcontroller core. It is designed for high-performance data acquisition applications, providing a combination of analog and digital processing capabilities on a single chip.

#### Typical Applications:
- **Industrial Control and Automation Systems**: Used for monitoring and controlling processes.
- **Smart Sensors**: Ideal for applications requiring precise measurements and data processing.
- **Precision Instrumentation**: Suitable for devices that require accurate data acquisition and signal processing.
- **Base Station Systems**: Utilized in communication systems for signal processing.
- **Optical Networking**: Employed in systems that require high-speed data transmission and processing.

This component is particularly useful in applications where both analog and digital functionalities are required, allowing for efficient data acquisition and processing in a compact form factor.